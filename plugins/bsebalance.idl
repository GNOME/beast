/* BSE - Bedevilled Sound Engine                        -*-mode: c++;-*-
 * Copyright (C) 2003 Tim Janik
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Library General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 */
#include <bse/bse.idl>

namespace Bse {

class Balance : Bse::Effect {
  Info    icon      = "icons/balance.png";
  Info    category  = "/Modules/Spatial/Balance";
  Info    blurb     = ("BseBalance is a stereo panning module with "
                       "two audio and two control inputs, each of which can "
                       "be seperately level adjusted. "
                       "The resulting output balance is controlled by a balance adjustment "
                       "and the sum of the control inputs. "
                       "To avoid aliasing artefacts for rapid balance changes, the control "
                       "signal is preprocessed by a simple lowpass filter with adjustable "
                       "cutoff frequency.");
  IStream audio_in1  = ("Audio In1", "First audio input");
  IStream audio_in2  = ("Audio In2", "Second audio input");
  IStream ctrl_in1   = ("Ctrl In1", "First control input");
  IStream ctrl_in2   = ("Ctrl In2", "Second control input");
  OStream left_out   = ("Left Out", "Left audio output");
  OStream mix_out    = ("Mix Out", "Mixed audio output");
  OStream right_out  = ("Right Out", "Right audio output");
  group "Audio Input" {
    Real  alevel1    = Perc (_("Input 1 [%]"), _("Attenuate the level of audio input 1"), 100, STANDARD);
    Real  alevel2    = Perc (_("Input 2 [%]"), _("Attenuate the level of audio input 2"), 100, STANDARD);
    Real  abalance   = Balance (_("Balance"), _("Balance audio input levels"), 0, GUI);
  };
  group "Control Input" {
    Real  clevel1    = Perc (_("Input 1 [%]"), _("Attenuate the level of control input 1"), 100, STANDARD);
    Real  clevel2    = Perc (_("Input 2 [%]"), _("Attenuate the level of control input 2"), 100, STANDARD);
    Real  cbalance   = Balance (_("Balance"), _("Balance control input levels"), 0, GUI);
  };
  group "Output Panning" {
    Real  ostrength  = Perc (_("Control Strength"), _("Adjust how much the control signals affect the output balance"), 100, STANDARD);
    Real  lowpass    = Frequency (_("Lowpass [Hz]"), _("Lowpass filter frequency for the control signal"), 100, 100, 1000, STANDARD);
    Real  obalance   = Balance (_("Output Balance"), _("Adjust output balance between left and right"), 0, STANDARD);
  };
};

};
