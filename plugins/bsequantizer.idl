/* BSE - Bedevilled Sound Engine                        -*-mode: c++;-*-
 * Copyright (C) 2006 Tim Janik
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 */
#include <bse/bse.idl>

namespace Bse { namespace Standard {

class Quantizer : Bse::Effect {
  Info    category   = "/Distortion/Quantizer";
  Info    icon       = "icons/quantizer.png";
  Info    authors    = "Tim Janik";
  Info    blurb      = _("The Quantizer plugin quantizes the input signals according to a configurable step setting. "
                         "This simulates low quality digital signal transfer paths or ancient computer hardware.");
  group _("Quantization") {
    Real qsteps       = Real (_("Quantization Steps"), _("The number of different steps the output signal is quantized to."), 256, 1, 4294967296, 256, STANDARD ":scale");
    Real qstep_powers = Real (_("Bit Depth"),          _("The number of bits the quantization steps correspond to."), 8, 0, 32, 0.0625, GUI ":scale");
  };
  IStream audio_in1  = ("Audio In1",  "Audio Input 1");
  IStream audio_in2  = ("Audio In2",  "Audio Input 2");
  OStream audio_out1 = ("Audio Out1", "Audio Output 1");
  OStream audio_out2 = ("Audio Out2", "Audio Output 2");
};

} } // Bse::Standard
