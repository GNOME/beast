// Licensed GNU LGPL v2.1 or later: http://www.gnu.org/licenses/lgpl.html
include "bse/bsecxxmodule.idl";
namespace Bse {
interface Wave;
namespace Standard {
interface GusPatchEnvelope : Effect {
  // Info    icon        = "icons/noise.png";
  Info    options     = "unstable";
  Info    authors     = "Stefan Westerfeld";
  Info    license     = _("GNU Lesser General Public License");
  Info    category    = _("/Misc/StandardGusPatchEnvelope");
  Info    blurb       = _("StandardGusPatchEnvelope is an Envelope for GUS Patches\n\n"
                          "GUS Patches contain different volume settings and tremolo "
			  "settings for different notes, and the envelopes are of a non-standard "
			  "form, thus using a BseWaveOsc alone is not enough to produce the sound "
			  "of the GUS Patches; to accomplish the playing, you thus need to connect "
			  "one (or for stereo two) BseWaveOsc(s) and their Gate Output Signal to this "
			  "module.");
  group _("Properties") {
    Wave    wave; // FIXME         = (_("Wave"),         _("GUS Patch to use for the Envelope Data"), "", STANDARD);
  };
  // inputs
  IStream frequency      = (_("Frequency"),    _("Frequency Input"));
  IStream gate_in        = (_("Gate In"),      _("Gate input (activates/deactivates envelope)"));
  IStream retrigger_in   = (_("Retrigger In"), _("Retrigger input (raising edge retriggers envelope)"));
  IStream audio_in       = (_("Audio In"),     _("Audio Input of the WaveOsc playing the patch"));
  IStream audio_gate     = (_("Audio Gate"),   _("Gate Output of the WaveOsc playing the patch"));
  // outputs
  OStream audio_out1     = (_("Audio Out1"),   _("Envelope audio output 1 (left output signal)"));
  OStream audio_out2     = (_("Audio Out2"),   _("Envelope audio output 2 (right output signal)"));
  OStream done_out       = (_("Done Out"),     _("This signal goes high after the release phase has completed"));
};
} // Standard
} // Bse
