# BEAST & BSE
include $(top_srcdir)/Makefile.decl

SUBDIRS = icons . freeverb # evaluator

AM_CPPFLAGS += -I$(top_srcdir) -I.
DEFS        += @DEFINE__FILE_DIR__@ -DG_LOG_DOMAIN="\"$(strip $(basename $(<F)))\""
AM_CXXFLAGS += $(BSE_CFLAGS) $(RAPICORN_CFLAGS) -DRAPICORN_CONVENIENCE

# == IDL C++ Plugins ==
idl_plugins = $(strip			\
	+++bseplugins 			\
	artscompressor.idl		\
	bseamplifier.idl		\
	bsebalance.idl			\
	bsenoise.idl			\
	bsequantizer.idl		\
	bsesummation.idl		\
	standardsaturator.idl		\
	standardguspatchenvelope.idl	\
	bsecontribsampleandhold.idl	\
	davbassfilter.idl		\
	davchorus.idl			\
	davorgan.idl			\
)
EXTRA_DIST += $(filter-out +++%, $(idl_plugins))
# setup generation of C++ plugins from idl files
SFIDL = ../sfi/sfidl
SFIDL_INC = --nostdinc -I$(top_srcdir) -I$(top_builddir)
%.genidl.hh: %.idl # $(SFIDL)
	$(SFIDL) --plugin  --macro $(<F) $(SFIDL_INC) -I$(top_builddir) $< > $@ || (rm $@ ; exit 1 )

# == C++ Plugins ==
cxx_plugin_headers = bseadder.hh bseatandistort.hh bsesimpleadsr.hh bsemixer.hh bsemult.hh bsesequencer.hh bseiirfilter.hh	\
		     davcanyondelay.hh davsyndrum.hh davxtalstrings.hh
cxx_plugin_sources = bseadder.cc bseatandistort.cc bsesimpleadsr.cc bsemixer.cc bsemult.cc bsesequencer.cc bseiirfilter.cc	\
		     davcanyondelay.cc davsyndrum.cc davxtalstrings.cc
cxx_plugin_extra   = bsesimpleadsr-aux.cc
EXTRA_DIST        += $(cxx_plugin_headers) $(cxx_plugin_extra)
cxxplugins_FPU_la_SOURCES  = $(cxx_plugin_sources)
cxxplugins_FPU_la_LDFLAGS  = $(AM_LDFLAGS) -module $(plugins_ldflags)
cxxplugins_FPU_la_LIBADD   = $(plugins_libs)
cxxplugins_FPU_la_CFLAGS   = $(FPU_PLUGIN_CFLAGS)
cxxplugins_FPU_la_CXXFLAGS = $(FPU_PLUGIN_CXXFLAGS)
cxxplugins_SSE_la_SOURCES  = $(cxx_plugin_sources)
cxxplugins_SSE_la_LDFLAGS  = $(AM_LDFLAGS) -module $(plugins_ldflags)
cxxplugins_SSE_la_LIBADD   = $(plugins_libs)
cxxplugins_SSE_la_CFLAGS   = $(SSE_PLUGIN_CFLAGS)
cxxplugins_SSE_la_CXXFLAGS = $(SSE_PLUGIN_CXXFLAGS)

# old/unported plugin list
UNPORTED = $(strip		\
	bsefirfilter.[hc]	\
	davguitar.[hc]		\
)

# === plugin build rule setup ===
plugins_ldflags 	  = -avoid-version
plugins_libs    	  = ../bse/libbse-@MAJOR@.la $(LIBBSE_LIBS)
plugins_built_sources 	  = 	# listed in Makefile.plugins
CLEANFILES 		 += $(plugins_built_sources)
# .FPU plugins
plugin_FPU_ltlibs	  =	# listed in Makefile.plugins
plugin_FPU_LTLIBRARIES	  = $(plugin_FPU_ltlibs) cxxplugins.FPU.la
plugin_FPUdir 	  	  = $(bselibdir)/plugins
FPU_PLUGIN_CFLAGS	  = $(AM_CFLAGS) $(PLUGIN_FLAGS) $(FPU_FLAGS)
FPU_PLUGIN_CXXFLAGS	  = $(AM_CXXFLAGS) $(PLUGIN_FLAGS) $(FPU_FLAGS)
# .SSE plugins
plugin_SSE_ltlibs	  =	# listed in Makefile.plugins
plugin_SSE_LTLIBRARIES	  = $(plugin_SSE_cond_libs) cxxplugins.SSE.la
plugin_SSEdir		  = $(bselibdir)/plugins
SSE_PLUGIN_CFLAGS	  = $(AM_CFLAGS) $(PLUGIN_FLAGS) $(SIMD_FLAGS)
SSE_PLUGIN_CXXFLAGS	  = $(AM_CXXFLAGS) $(PLUGIN_FLAGS) $(SIMD_FLAGS)
if WITH_MMX_SSE
plugin_SSE_cond_libs	  = $(plugin_SSE_ltlibs)
else
plugin_SSE_cond_libs	  =
endif

# === CoreHook plugin ===
plugin_SSE_ltlibs            += bseblockutils.SSE.la
bseblockutils_SSE_la_SOURCES  = bseblockutils.cc
bseblockutils_SSE_la_LDFLAGS  = $(AM_LDFLAGS) -module $(plugins_ldflags)
bseblockutils_SSE_la_LIBADD   = $(plugins_libs)
bseblockutils_SSE_la_CXXFLAGS = $(SSE_PLUGIN_CXXFLAGS)

# === Makefile.plugins adds plugin rules ===
include Makefile.plugins
# === Makefile.plugins generation rules ===
#### C++ Plugin bsefoo
##$(srcdir)/bsefoo.cc: bsefoo.genidl.hh
##plugins_built_sources += bsefoo.genidl.hh
##plugin_FPU_ltlibs     += bsefoo.FPU.la
##bsefoo_FPU_la_SOURCES  = bsefoo.cc
##bsefoo_FPU_la_LDFLAGS  = $(AM_LDFLAGS) -module $(plugins_ldflags)
##bsefoo_FPU_la_LIBADD   = $(plugins_libs)
##bsefoo_FPU_la_CXXFLAGS = $(FPU_PLUGIN_CXXFLAGS)
.PHONY: refresh-Makefile.plugins
refresh-Makefile.plugins: Makefile.am Makefile.in Makefile
	echo									 >xgen-$(@F)
	: # generate C++ plugin rules
	libname=""										;\
	for name in $(idl_plugins:.idl=) ; do						 	 \
	  [ "$${name:0:3}" = "+++" ] && {							 \
            libname=`echo $${name:3} | sed 's/[^A-Za-z0-9]/_/g' `				;\
	    echo -e "\n\n## === C++ Plugin Library $$libname === "		  >>xgen-$(@F) 	;\
	    echo "plugin_FPU_ltlibs          += $$libname.FPU.la"		  >>xgen-$(@F)	;\
	    echo "$$libname"'_FPU_la_SOURCES  ='				  >>xgen-$(@F)	;\
	    echo "$$libname"'_FPU_la_CXXFLAGS = $$(FPU_PLUGIN_CXXFLAGS)'	  >>xgen-$(@F)	;\
	    echo "$$libname"'_FPU_la_LDFLAGS  = $$(AM_LDFLAGS) -module $$(plugins_ldflags)'	  >>xgen-$(@F)	;\
	    echo "$$libname"'_FPU_la_LIBADD   = $$(plugins_libs)'		  >>xgen-$(@F)	;\
	    echo "plugin_SSE_ltlibs          += $$libname.SSE.la"		  >>xgen-$(@F)	;\
	    echo "$$libname"'_SSE_la_SOURCES  = $$('"$$libname"'_FPU_la_SOURCES)' >>xgen-$(@F)	;\
	    echo "$$libname"'_SSE_la_CXXFLAGS = $$(SSE_PLUGIN_CXXFLAGS)'	  >>xgen-$(@F)	;\
	    echo "$$libname"'_SSE_la_LDFLAGS  = $$(AM_LDFLAGS) $$('"$$libname"'_FPU_la_LDFLAGS)' >>xgen-$(@F)	;\
	    echo "$$libname"'_SSE_la_LIBADD   = $$('"$$libname"'_FPU_la_LIBADD)'  >>xgen-$(@F)	;\
	    continue										;\
	  }											;\
	  _name=`echo $$name | sed 's/[^A-Za-z0-9]/_/g' `					;\
	  echo -e "\n## C++ Plugin $$name"					>>xgen-$(@F) 	;\
	  echo '$$(srcdir)/'"$$name.cc: $$name.genidl.hh # $$libname"		>>xgen-$(@F)	;\
	  echo "plugins_built_sources      += $$name.genidl.hh"			>>xgen-$(@F)	;\
	  echo "$$libname"'_FPU_la_SOURCES += '"$$name.cc"			>>xgen-$(@F)	;\
	done
	: # move Makefile.plugins in place
	cp xgen-$(@F) Makefile.plugins
	rm -f xgen-$(@F)
# $ echo >Makefile.plugins && make refresh-Makefile.plugins && make Makefile
