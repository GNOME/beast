/* BSE - Bedevilled Sound Engine        -*-mode: c;-*-
 * Copyright (C) 2002 Tim Janik
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 */
#include        <bse/bseplugin.h>
#include        <bse/bseprocedure.h>
#include        <bse/bseobject.h>

AUTHOR  = "Tim Janik <timj@gtk.org>";
CRIGHTS = "Tim Janik";
DATE    = "2002";

METHOD (BseObject, is-a) {
  HELP  = "Check object type";
  IN    = bse_param_spec_object ("item", "Item", NULL,
				 BSE_TYPE_OBJECT, SFI_PARAM_DEFAULT);
  IN    = sfi_pspec_string ("type_name", "Type Name", NULL,
			    NULL, SFI_PARAM_DEFAULT);
  OUT   = sfi_pspec_bool ("is_a_check", NULL, NULL,
			  FALSE, SFI_PARAM_DEFAULT);
} BODY (BseProcedureClass *proc,
        const GValue      *in_values,
        GValue            *out_values)
{
  /* extract parameter values */
  BseObject *object = bse_value_get_object (in_values++);
  gchar *type_name  = sfi_value_get_string (in_values++);
  
  /* check parameters */
  if (!type_name)  /* we do allow NULL objects here, to comlpy with g_type_instance_is_a() semantics */
    return BSE_ERROR_PROC_PARAM_INVAL;
  
  /* set output parameters */
  sfi_value_set_bool (out_values++, G_TYPE_CHECK_INSTANCE_TYPE (object, g_type_from_name (type_name)));
  
  return BSE_ERROR_NONE;
}
