// Licensed GNU LGPL v2.1 or later: http://www.gnu.org/licenses/lgpl.html
#include        <bse/bseplugin.hh>
#include        <bse/bseprocedure.hh>
#include        <bse/bseenums.hh>


AUTHORS	= "Tim Janik <timj@gtk.org>";
LICENSE = "GNU Lesser General Public License";


PROCEDURE (bse-error-name, "Error Name") {
  HELP	= "Retrieve the name of an error value";
  IN	= bse_param_spec_genum ("error", "Error", NULL,
				BSE_TYPE_ERROR_TYPE, BSE_ERROR_NONE,
				SFI_PARAM_STANDARD);
  OUT	= sfi_pspec_string ("name", "Name", NULL,
			    NULL, SFI_PARAM_STANDARD);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseErrorType error = (BseErrorType) g_value_get_enum (in_values++);
  
  /* check parameters */
  
  /* action */
  
  /* set output parameters */
  g_value_set_string (out_values++, bse_error_name (error));
  
  return BSE_ERROR_NONE;
}

PROCEDURE (bse-error-blurb, "Error Blurb") {
  HELP	= "Retrieve the description of an error value";
  IN	= bse_param_spec_genum ("error", "Error", NULL,
				BSE_TYPE_ERROR_TYPE, BSE_ERROR_NONE,
				SFI_PARAM_STANDARD);
  OUT	= sfi_pspec_string ("blurb", "Blurb", NULL,
			    NULL, SFI_PARAM_STANDARD);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseErrorType error = (BseErrorType) g_value_get_enum (in_values++);
  
  /* check parameters */
  
  /* action */
  
  /* set output parameters */
  g_value_set_string (out_values++, bse_error_blurb (error));
  
  return BSE_ERROR_NONE;
}
