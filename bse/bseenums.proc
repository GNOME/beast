/* BSE - Bedevilled Sound Engine	-*-mode: c;-*-
 * Copyright (C) 2000-2001 Tim Janik
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 */
#include        <bse/bseplugin.h>
#include        <bse/bseprocedure.h>
#include        <bse/bseenums.h>


AUTHOR	= "Tim Janik <timj@gtk.org>";
CRIGHTS	= "Tim Janik";
DATE	= "2001";


PROCEDURE (bse-error-name, "Utils/Error Name") {
  HELP	= "Retrive the name of an error value";
  IN	= bse_param_spec_genum ("error", "Error", NULL,
				BSE_TYPE_ERROR_TYPE, BSE_ERROR_NONE,
				SFI_PARAM_DEFAULT);
  OUT	= sfi_param_spec_string ("name", "Name", NULL,
				 NULL, SFI_PARAM_DEFAULT);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseErrorType error = g_value_get_enum (in_values++);
  
  /* check parameters */

  /* action */

  /* set output parameters */
  g_value_set_string (out_values++, bse_error_name (error));

  return BSE_ERROR_NONE;
}

PROCEDURE (bse-error-blurb, "Utils/Error Blurb") {
  HELP	= "Retrive the description of an error value";
  IN	= bse_param_spec_genum ("error", "Error", NULL,
				BSE_TYPE_ERROR_TYPE, BSE_ERROR_NONE,
				SFI_PARAM_DEFAULT);
  OUT	= sfi_param_spec_string ("blurb", "Blurb", NULL,
				 NULL, SFI_PARAM_DEFAULT);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseErrorType error = g_value_get_enum (in_values++);
  
  /* check parameters */

  /* action */

  /* set output parameters */
  g_value_set_string (out_values++, bse_error_blurb (error));
  
  return BSE_ERROR_NONE;
}
