--- xgen-bseserverapi.cc
+++ xgen-bseserverapi.cc
@@ -43,14 +43,14 @@ interface_to_remote_handle ($AIDA_iface_base$ *ibase)
   SMH target;
   struct CastingServerConnection : ServerConnection { using ServerConnection::cast_interface_handle; };
   CastingServerConnection *cs_con = (CastingServerConnection*) server_connection;
-  cs_con->cast_interface_handle (target, Rapicorn::BaseObject::shared_ptr (ibase));
+  cs_con->cast_interface_handle (target, ibase ? ibase->shared_from_this() : ImplicitBaseP());
   return target;
 }
 
 template<class Target> static inline void
 field_buffer_add_interface (Rapicorn::Aida::FieldBuffer &fb, Target *instane)
 {
-  server_connection->add_interface (fb, Rapicorn::BaseObject::shared_ptr (instane));
+  server_connection->add_interface (fb, instane ? instane->shared_from_this() : ImplicitBaseP());
 }
 
 template<class Target> static inline Target*
@@ -113,6 +113,7 @@
 
 namespace Rapicorn { namespace Aida {
 // namespace Rapicorn::Aida needed for argument dependent lookups of the operators
+#if 0
 static void operator<<= (Rapicorn::Aida::FieldBuffer &fb, const Rapicorn::Aida::Any &v);
 static void operator>>= (Rapicorn::Aida::FieldReader &fr, Rapicorn::Aida::Any &v);
 static void
@@ -125,6 +126,7 @@
 {
   v = fr.pop_any (*__AIDA_Local__::server_connection);
 }
+#endif
 } } // Rapicorn::Aida
 
 
