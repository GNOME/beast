/* BSE - Bedevilled Sound Engine	-*-mode: c;-*-
 * Copyright (C) 2002 Tim Janik
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 */
#include        <bse/bseplugin.h>
#include        <bse/bsewaveosc.h>
#include        <bse/bseprocedure.h>

AUTHOR	= "Tim Janik <timj@gtk.org>";
CRIGHTS	= "Tim Janik";
DATE	= "2002";


METHOD (BseWaveOsc, request-pcm-position) {
  HELP	= "Request emission of the ::notify_pcm_position signal.";
  IN	= g_param_spec_object ("wosc", NULL, "Wave Oscilator",
			       BSE_TYPE_WAVE_OSC, BSE_PARAM_DEFAULT);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseWaveOsc *self = g_value_get_object (in_values++);
  
  /* check parameters */
  if (!BSE_IS_WAVE_OSC (self))
    return BSE_ERROR_PROC_PARAM_INVAL;
  
  bse_wave_osc_request_pcm_position (self, -1);
  
  return BSE_ERROR_NONE;
}

METHOD (BseWaveOsc, pcm-seek-perc) {
  HELP	= "Seek oscillator to a given pcm percentage during playback.";
  IN	= g_param_spec_object ("wosc", NULL, "Wave Oscilator",
			       BSE_TYPE_WAVE_OSC, BSE_PARAM_DEFAULT);
  IN	= g_param_spec_float ("pos_perc", NULL, NULL,
			      0, 100, 0,
			      BSE_PARAM_DEFAULT);
} BODY (BseProcedureClass *proc,
	const GValue      *in_values,
	GValue            *out_values)
{
  /* extract parameter values */
  BseWaveOsc *self = g_value_get_object (in_values++);
  gfloat      pos  = g_value_get_float (in_values++);
  
  /* check parameters */
  if (!BSE_IS_WAVE_OSC (self))
    return BSE_ERROR_PROC_PARAM_INVAL;
  
  bse_wave_osc_request_pcm_position (self, CLAMP (pos, 0, 100));
  
  return BSE_ERROR_NONE;
}
