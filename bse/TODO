NEW:
- alive keeping for waves which are removed, but whose index is in use?
- loading (restore) may only work when not playing (to keep consistency
  and avoid lock contentions during playback)
- during playback the set instruments needs to be fixed on a song  
- fix sequential IDs to be per-type, remove project and song special casing
- GSL_ALWAYS_PROCESS into instance, remove n_ostreams check from IS_CONSUMER

OLD:
general:
-	bse_object_do_store_private() should not save equally named params (from
	different heirarchy levels), actually this is a general problem with GUIs
	as well.
	possible solution:
	GList* bse_object_class_list_pspecs (BseObjectClass *class,
	                                     BseParamFlags   required_flags);
	/* how to handle groups here? */
-	delay class destruction and plugin unloading through timeout handlers
*	eliminate everything that fgrep -i fixme/hack reveals ;)
-	optimize cross-reference removal
-	BseStorage must not contain type references above BSE_TYPE_ITEM (cleanlyness)
-	param_changed(): update modified stamp and record undo
-	rework undo, gotta decide on what hirarchy and function level undo
	should be implemented.

!	sources need to disconnect their links ala xrefs, and need to notify of
	that *before* destroy is invoked.
	effectively, this has to work like so:
	channels installed on a source need to be xref-linked if the i/o sources
	don#t have the same parent. if their parents are the same, we can simply
	have bsecontainer.c care about destructing those channels (as an optimization
	to keep xref-links low).

Song/Pattern
-	removal of instruments needs to scratch instrument references from all patterns
-	mutable channels! (make them silent)
	use procedure types for this

Identifiers
-	we need a string conversion routine, which converts invalid characters
-	there're some shortcomings in object namings e.g. "--- Minus ---" was
	not possible (there're also some bugs with making them into '_'s)

Instrument
-	smooth up the dot array behaviour, editing is somewhat sluggish
-	need to put envelope logic into a sperate file anyways

Loaders
-	we need AIFF
-	we need .WAV, desperatedly

loadwav.c:
-	read_data(): read sample data by blocks not as a whole

Balance
-	durch 3d raum position ersetzen

Munks
-	automatische munk berechnung durch frequenz transformation
	hm, koennte nen memory hog werden...

Effects
-	there is no code at all yet ;)
	(take a look at the *.mod effects)
	pattern-break
	set-volume	(voice-volume)
	vibrato
	-	buffer-sync
	-	lfo as freq-mod
	tremolo
	-	buffer-sync
	-	lfo as freq-mod
	fine-tune
	-	1/24 of halftone
	pitch-bend
	-	slides
	portamento (up/down/to note)
	-	nahtloser uebergang zur naechsten note
	-	buffer-sync
