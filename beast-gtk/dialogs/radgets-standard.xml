<?xml version="1.0" encoding="UTF-8"?>		<!--*-mode: xml;-*-->
<gxk-gadget-definitions xmlns:xdef="http://beast.gtk.org/xmlns:xdef" >
  
  <!-- Primitive Gtk+ widget type wrappers -->
  
  <xdef:entry                 inherit="GtkEntry"        />
  <!-- frame, alignment -->
  <xdef:alignment             inherit="GtkAlignment"        />
  <xdef:event-box             inherit="GtkEventBox"         />
  <xdef:arrow                 inherit="GtkArrow"            prop:shadow-type="$shadow" prop:arrow-type="$arrow" />
  <xdef:frame                 inherit="GtkFrame"            />
  <xdef:frame-shadow-in       inherit="frame"               prop:shadow-type="shadow-in" />
  <xdef:frame-shadow-out      inherit="frame"               prop:shadow-type="shadow-out" />
  <xdef:frame-etched-in       inherit="frame"               prop:shadow-type="etched-in" />
  <xdef:frame-etched-out      inherit="frame"               prop:shadow-type="etched-out" />
  <xdef:hseparator            inherit="GtkHSeparator"       />
  <xdef:vseparator            inherit="GtkVSeparator"       />
  <!-- boxes: expand= fill= spacing= -->
  <xdef:hbox                  inherit="GtkHBox"
    prop:spacing="$(ifdef,spacing,$spacing,0)"
    default-pack:expand="$(ifdef,expand,$expand,0)"
    default-pack:fill="$(ifdef,fill,$fill,1)"
    />
  <xdef:vbox                  inherit="GtkVBox"
    prop:spacing="$(ifdef,spacing,$spacing,0)"
    default-pack:expand="$(ifdef,expand,$expand,0)"
    default-pack:fill="$(ifdef,fill,$fill,1)"
    />
  <xdef:outer-hbox            inherit="hbox"
    prop:border-width="3" />
  <xdef:outer-vbox            inherit="vbox"
    prop:border-width="3" />
  <!-- wrap boxes -->
  <xdef:hwrap                 inherit="GtkHWrapBox"
    default-pack:hexpand="$(ifdef,hexpand,$hexpand,$expand)"
    default-pack:vexpand="$(ifdef,vexpand,$vexpand,$expand)"
    default-pack:hfill="$(ifdef,hfill,$hfill,$(ifdef,fill,$fill,1))"
    default-pack:vfill="$(ifdef,vfill,$vfill,$(ifdef,fill,$fill,1))"
    default-pack:wrapped="$(ifdef,wrapped,$wrapped,0)"
    />
  <xdef:vwrap                 inherit="GtkVWrapBox" />
  <!-- menubar -->
  <xdef:menubar               inherit="GtkMenuBar" />
  <xdef:popup-menu            inherit="GtkMenu" />
  <!-- menu-tearoff: actions= -->
  <xdef:menu-tearoff inherit="GtkTearoffMenuItem" />
  <!-- menu-item: label= accel-path= accel= stock-image= -->
  <xdef:menu-item             inherit="GxkMenuItem"
    prop:uline-label="$label"
    prop:accel-path="$(null-collapse,$accel-path)"
    prop:accel="$accel"
    prop:stock-image="$stock-image" />
  <!-- menu-title: label= stock-image= -->
  <xdef:menu-title            inherit="GxkMenuItem"
    prop:uline-label="$label"
    prop:title-style="1"
    prop:stock-image="$stock-image" />
  <!-- menu-separator: actions= -->
  <xdef:menu-separator inherit="GxkMenuItem" prop:sensitive="0" />
  <!-- submenu: label= stock-image= -->
  <xdef:submenu               inherit="GxkMenuItem"
    default-area="menu"
    prop:uline-label="$label"
    prop:stock-image="$stock-image" >
    <GtkMenu name="menu" tearoff-title="$label" />
  </xdef:submenu>
  <xdef:submenu-last          inherit="submenu"
    prop:right-justify="1" />
  <!-- option-menu -->
  <xdef:option-menu           inherit="GtkOptionMenu" />
  <!-- menu-button default= focus= arrow= relief= -->
  <xdef:menu-button           inherit="GxkMenuButton"
    prop:relief="$(ifdef,relief,$relief,normal)"
    prop:can-default="$(ifdef,default,$default,0)"
    prop:can-focus="$(ifdef,focus,$focus,1)"
    prop:stock-size="$(null-collapse,$stock-size)"
    prop:combo-arrow="$(ifdef,arrow,$arrow,1)" />
  <!-- buttons: stock= label= focus= default= relief= -->
  <xdef:button                inherit="GtkButton"
    prop:label="$(null-collapse,$(ifdef,label,$label,$stock))"
    prop:relief="$(ifdef,relief,$relief,normal)"
    prop:can-default="$(ifdef,default,$default,0)"
    prop:can-focus="$(ifdef,focus,$focus,1)"
    prop:use-stock="$(if,$stock)" />
  <xdef:can-default-button    inherit="button"
    prop:can-default="1" />
  <xdef:default-button        inherit="can-default-button"
    prop:has-default="1" />
  <xdef:check-button          inherit="GtkCheckButton"
    prop:label="$(null-collapse,$(ifdef,label,$label,$stock))"
    prop:relief="$(ifdef,relief,$relief,normal)"
    prop:can-default="$(ifdef,default,$default,0)"
    prop:can-focus="$(ifdef,focus,$focus,1)"
    prop:use-stock="$(if,$stock)" />
  <xdef:toggle-button         inherit="check-button"
    prop:draw-indicator="0" />
  <!-- label: label= -->
  <xdef:label                 inherit="GtkLabel"
    prop:label="$label" />
  <!-- decks (notebook) -->
  <xdef:notebook              inherit="GtkNotebook"         />
  <xdef:deck                  inherit="notebook"
    prop:show-tabs="0"
    prop:show-border="0"
    prop:scrollable="1"
    prop:enable-popup="0" />
  <xdef:left-deck             inherit="deck"
    prop:show-tabs="1" prop:tab-pos="left" />
  <xdef:right-deck            inherit="deck"
    prop:show-tabs="1" prop:tab-pos="right" />
  <xdef:top-deck              inherit="deck"
    prop:show-tabs="1" prop:tab-pos="top" />
  <xdef:bottom-deck           inherit="deck"
    prop:show-tabs="1" prop:tab-pos="bottom" />
  <!-- image: stock-image= stock-size= -->
  <xdef:image                 inherit="GxkImage"
    prop:stock-size="$(null-collapse,$stock-size)"
    prop:stock="$stock-image" />
  <!-- paned containers -->
  <xdef:hpaned                inherit="GtkHPaned" />
  <xdef:vpaned                inherit="GtkVPaned" />
  <!-- scrollbars/scales -->
  <xdef:hscale                inherit="GtkHScale" />
  <xdef:vscale                inherit="GtkVScale" />
  <xdef:hscrollbar            inherit="GtkHScrollbar" />
  <xdef:vscrollbar            inherit="GtkVScrollbar" />
  <!-- misc containers -->
  <xdef:scrolled-window       inherit="GtkScrolledWindow" />
  <xdef:tree-view             inherit="GtkTreeView"       />
  <xdef:window                inherit="GtkWindow"         />
  <xdef:table                 inherit="GtkTable"          />
  

  <!-- Construction of composite containers -->

  <!-- border-layout -->
  <xdef:border-layout inherit="vbox" default-area="center" >
    <vbox name="north" />
    <hbox pack:expand="1" >
      <hbox name="east" />
      <vbox name="center" pack:expand="1" />
      <hbox name="west" />
    </hbox>
    <vbox name="south" />
  </xdef:border-layout>

  <!-- Gxk builtin types -->

  <!-- widget-patcher -->
  <xdef:widget-patcher inherit="GxkWidgetPatcher" />
  <!-- tooltip: text= -->
  <xdef:tooltip inherit="widget-patcher"
    prop:tooltip="$(null-collapse,$text)"
    prop:tooltip-visible="$(ifdef,latent-tooltip,$(not,$latent-tooltip),1)" />
  <!-- gadget-factory: actions= action-root= per-list= per-action= -->
  <xdef:gadget-factory        inherit="GxkGadgetFactory"
    prop:action-root="$(ifdef,action-root,$action-root,:xdef)"
    prop:action-list="$actions"
    prop:per-list="$(null-collapse,$per-list)"
    prop:per-action="$(null-collapse,$per-action)"
    prop:activatable="$(null-collapse,$per-action)" prop:regulate="$(null-collapse,$per-action)" />
  <!-- menu-factory: actions= separator= -->
  <xdef:menu-factory inherit="gadget-factory"
    prop:per-branch="menu-factory-branch"
    per-list="$(if,$separator,menu-factory-per-list,)"
    per-action="menu-factory-per-action" />
  <xdef:menu-factory-branch inherit="submenu" label="$action-name" />
  <xdef:menu-factory-per-list inherit="GxkMenuItem" prop:sensitive="0" />
  <xdef:menu-factory-per-action inherit="menu-item"
    label="$action-name"
    accel="$action-accel"
    accel-path="$action-path"
    stock-image="$action-stock" >
    <tooltip text="$action-tooltip" latent-tooltip="1" />
  </xdef:menu-factory-per-action>
  
  <!-- separator: hseparator= vseparator= -->
  <xdef:separator inherit="alignment"
    prop:yscale="0.4" prop:xscale="0.4"  >
    <hbox>
      <vseparator
	visible="$vseparator"
	size:hgroup="gxk-toolbar-space" />
      <hseparator
	visible="$hseparator"
	size:vgroup="gxk-toolbar-space" />
      <alignment
	visible="$(nor,$hseparator,$vseparator)"
	size:hgroup="gxk-toolbar-space"
	size:vgroup="gxk-toolbar-space" />
    </hbox>
  </xdef:separator>
  <!-- button factories: button-args, gadget-factory-args -->
  <xdef:button-factory  inherit="gadget-factory" per-action="action-button" width-from-height="1.25" />
  <xdef:toggle-factory  inherit="gadget-factory" per-action="action-toggle" width-from-height="1.25" />
  <!-- action buttons: button-args, image-size= action-*= -->
  <xdef:action-image-button inherit="button" focus="0" default-area="vbox" >
    <tooltip text="$action-tooltip" />
    <widget-patcher
      prop:width-from-height="$width-from-height"
      prop:height-from-width="$height-from-width"
      prop:force-resize-hsteps="$force-resize-hsteps"
      prop:force-resize-vsteps="$force-resize-vsteps"
      prop:min-resize-hunits="$min-resize-hunits"
      prop:min-resize-vunits="$min-resize-vunits" />
    <vbox>
      <image
	expand="1"
	stock-image="$action-stock"
	visible="$(ifdef,action-stock,1,0)"
	stock-size="$image-size" />
    </vbox>
  </xdef:action-image-button>
  <xdef:action-button inherit="action-image-button" >
    <label label="$action-name" />
  </xdef:action-button>
  <xdef:action-image-toggle inherit="toggle-button" focus="0" default-area="vbox" >
    <tooltip text="$action-tooltip" />
    <widget-patcher
      prop:width-from-height="$width-from-height"
      prop:height-from-width="$height-from-width"
      prop:force-resize-hsteps="$force-resize-hsteps"
      prop:force-resize-vsteps="$force-resize-vsteps"
      prop:min-resize-hunits="$min-resize-hunits"
      prop:min-resize-vunits="$min-resize-vunits" />
    <vbox>
      <image
	expand="1"
	stock-image="$action-stock"
	visible="$(ifdef,action-stock,1,0)"
	stock-size="$image-size" />
    </vbox>
  </xdef:action-image-toggle>
  <xdef:action-toggle inherit="action-image-toggle" >
    <label label="$action-name" />
  </xdef:action-toggle>
  <!-- muted-button: button-args -->
  <xdef:muted-button inherit="button" focus="0" >
    <widget-patcher prop:mute-events="1" prop:lower-windows="1" />
  </xdef:muted-button>
  
  <xdef:big-button-factory  inherit="button-factory" image-size="big-button" />
  <!-- toolbar factories -->
  <xdef:tool-button-factory inherit="button-factory" image-size="big-button" relief="none" width-from-height="1.2" />
  <xdef:tool-toggle-factory inherit="toggle-factory" image-size="big-button" relief="none" width-from-height="1.2" />
  <!-- palette factories -->
  <xdef:palette-button-factory inherit="button-factory" per-action="action-image-button" image-size="big-button" />
  <xdef:palette-toggle-factory inherit="toggle-factory" per-action="action-image-toggle" image-size="big-button" />
  <!-- toolbar items -->
  <xdef:tool-separator      inherit="separator" hseparator="0" vseparator="1" />
  <xdef:tool-space          inherit="separator" hseparator="0" vseparator="0" />
  <xdef:tool-area           inherit="muted-button"
    hseparator="0" vseparator="0" relief="none" default-area="image-area" >
    <tooltip text="$(null-collapse,$tooltip)" />
    <vbox>
      <vbox name="image-area" expand="1" />
      <vbox name="label-area" pack:pack-type="end" />
    </vbox>
  </xdef:tool-area>
  
  <xdef:text-toggle-factory inherit="gadget-factory"
    per-action="action-text-toggle" />
  <xdef:action-text-toggle inherit="toggle-button"
    focus="0" >
    <tooltip text="$action-tooltip" />
    <widget-patcher />
    <alignment prop:yalign="$(ifdef,y-align,$y-align,0.5)" >
      <label label="$action-name" prop:wrap="1" prop:justify="center" prop:use-underline="1" />
    </alignment>
  </xdef:action-text-toggle>
  <xdef:tool-text-toggle-factory   inherit="text-toggle-factory" image-size="big-button" relief="none" />
  
</gxk-gadget-definitions>
