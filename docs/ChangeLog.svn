2009-04-11  Stefan Westerfeld 	# ce584d04999a7fb9393e1cfedde2048ba73e8878

	Fixed control signal and pitch bend midi import. Fixes #574242 - MIDI

	Sat Apr 11 10:50:51 2009  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidifile.c: Fixed control signal and pitch bend midi import.
		Fixes #574242 - MIDI import doesn't import pitch bend and control signals

	svn path=/trunk/; revision=4485

2009-04-11  Stefan Westerfeld 	# 310a382f8f877dfd01a42327063246a4cd71cc9e

	Modified the vfile read function so that no data beyond the end of the

	Thu Mar 19 16:40:17 2009  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle-vorbis.c: Modified the vfile read function so that no
		data beyond the end of the virtual file is read. This fixes the
		problems BEAST sometimes has to read its own .bse files.
		Fixes #575977 - Some .bse files written by BEAST cannot be loaded again

	svn path=/trunk/; revision=4484

2008-07-02  Yannig MARCHEGAY 	# bc41542d3105450b5f62a65b38115bf8228a44ee

	Updated Occitan translation

	svn path=/trunk/; revision=4483

2008-06-12  Stefan Westerfeld 	# 4255636f90eef5c413f9bcbabdffbefdba2c0b14

	Use FSM instead of KF as prefix for Krzysztof Foltman's instruments.

	Thu Jun 12 13:52:42 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* library/instruments/Makefile.am:
		* library/instruments/fsm-*.bse: Use FSM as prefix for Krzysztof
		Foltman's instruments. FSM is the prefix he used when he worked on
		Buzz/Windows code. He agreed to this rename.

		* library/instruments/kf-*.bse: Removed.

	svn path=/trunk/; revision=4482

2008-06-12  Stefan Westerfeld 	# 385ff558222ebeac5628787b52765dc52b41438b

	Compile fixes for G++-4.3.

	Wed Jun 11 14:04:31 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/bse/filtertest.cc:
		* tools/bsefextract.cc:
		* tools/bsefcompare.cc:
		* tools/bsewavetool.cc: Compile fixes for G++-4.3: Added a few
		standard includes.

	svn path=/trunk/; revision=4481

2008-06-12  Stefan Westerfeld 	# c10f1c45e6d256a21c34f2fa2038ad4bd0d88593

	Compile fixes for G++-4.3.

	Sun Jun  8 22:59:52 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-factory.cc:
		* sfidl-options.cc:
		* sfidl-namespace.cc:
		* sfidl-parser.cc:
		* sfidl-cxxbase.cc:
		* sficxx.hh: Compile fixes for G++-4.3: Added a few standard includes.

	svn path=/trunk/; revision=4480

2008-06-12  20:41:30  Tim Janik 	# 7e547a272ce522f500c2a0b89ccf180afe562ef4

	Compile fixes for G++-4.3.

	Wed Jun 11 14:04:31 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* bsesequencer.cc:
		* tests/firhandle.cc:
		* tests/resamplehandle.cc:
		* tests/filtertest.cc:
		* bseprocidl.cc:
		* bseloader-guspatch.cc:
		* bseresamplerimpl.hh: Compile fixes for G++-4.3: Added a few standard
		includes.

		* bsecxxplugin.hh: Compile fixes for G++-4.3: Template specializations
		can not have a storage class.

	Thu Nov 15 23:44:54 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* zintern/Makefile.am:
		* zintern/wave-mono.bse: Remove obsolete wave-mono replay network.

	Mon Nov  5 18:23:27 2007  Stefan Westerfeld  <stefan@space.twc.de>

		Support various play-types in bse, bug #433431.

		* bsewaveosc.[hc]: Added done output (inverse gate), which makes it
		easy to use only the wave oscillator without adsr envelope in an
		instrument.

		* zintern/Makefile.am:
		* zintern/plain-wave-[12].bse:
		* zintern/adsr-wave-[12].bse: Add zintern mono/stereo version for
		replaying samples with adsr envelope, and zintern mono/stereo bse file
		for replaying waves without envelope (for drum samples). Pitch bend
		is +/- 200 cent exponential, replay volume compatible to beast-0.7.1.

		* bsetrack.c: Use plain-wave-[12] and adsr-wave-[12] depending on
		play-type xinfo of the bsewave file.

	Mon Nov 12 21:00:10 2007  Stefan Westerfeld  <stefan@space.twc.de>

		Fix module reset when user presses play again, bug #336766.

		* bseproject.c (bse_project_stop_playback): When this method is
		called, we need to dismiss the contexts of the BseSuper classes
		we previously created in bse_project_start_playback.

	Mon Nov  5 18:54:39 2007  Stefan Westerfeld  <stefan@space.twc.de>

		Added necessary code for "fine-tune" xinfo, bug #450490.

		* bsemathsignal.[hc]: Implemented bse_cent_tune(), which is similar to
		bse_cent_tune_fast(), but accepts arbitary doubles as input because it
		doesn't use a table internally.

		* tests/misctests.cc: Added test for bse_cent_tune().

		* gsldatahandle.[hc]: Implemented gsl_data_handle_fine_tune, which
		returns a fine tuning measured in cent ("fine-tune" xinfo).

		* gslwavechunk.[hc]: Cache the fine tune factor here, so that
		GslWaveOsc can access it quickly.

		* gslwaveosc.c (gsl_wave_osc_set_filter): Take fine tune factor of
		the chunk into account for step computation (and thus for filter
		computation).

	Mon Nov  5 17:28:04 2007  Stefan Westerfeld  <stefan@space.twc.de>

		Merge BSE_FINE_TUNE_FACTOR() and bse_cent_factor(), bug #450490.

		* bse/bseglobals.h:
		* bsemathsignal.[hc]: Merge BSE_FINE_TUNE_FACTOR() and
		bse_cent_factor() to bse_cent_tune_fast(). The resulting function
		automatically clamps its input and uses the cent table to compute its
		result.

		* bse/bseinfo.c:
		* bse/bsenote.cc:
		* bse/bsepart.h:
		* bse/bsesong.proc:
		* bse/gsloscillator-aux.c:
		* bse/tests/misctests.cc: Use bse_cent_tune_fast() where appropriate.

	2007-09-20 20:41:30  Tim Janik  <timj@gtk.org>

		* bsebus.c:
		* bsestorage.c:
		* bseobject.h, bseobject.c: pass BseStorage version information on in
		restore_finish() methods.

		* bsecxxbase.hh, bsecxxbase.cc: introduced restore_finished() virtual
		method, so C++ modules can execute version specific compat code after
		after it has been restored from serialized object state.

	2007-09-18 02:25:33  Tim Janik  <timj@gtk.org>

		* bse/bsecxxbase.hh:
		* bse/bseengine.h:
		* bse/bseitem.h: added G_GNUC_NULL_TERMINATED to function ellipsis,
		patch by Stefan Westerfeld from bug #344388.

	2007-09-18 02:01:08  Tim Janik  <timj@gtk.org>

		* bseproject.[hc]: removed bogus function decl.
		bse_project_get_song(): new function to retrieve the first song of
		a project if any. at some point this should become the sole song.

		* bseproject.proc: reuse an existing song if possible when importing
		MIDI files, effectively merging the import into the existing song.

	2007-09-18 01:30:51  Tim Janik  <timj@gtk.org>

		* bseproject.proc:
		* bsemidifile.c: removed/disabled debugging printouts.

	Fri Sep  7 22:46:20 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidifile.c: Assign newly created tracks to the master bus. Fixes
		#441936.

	Sat Aug 18 00:15:22 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecore.idl: Include ~/beast/plugins in the default plugin search
		path, to make it easier for users and developers to install extra
		plugins from source.

	Sun Jun 24 00:17:40 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemath.h: Added ln (10)/20 constant for ArtsCompressor.

	Wed Apr 11 15:46:31 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Fix a bug in seek() spotted by Tim: invalidate
		m_input_data contents properly if a read error occurs during filling
		it.

	Sat Mar 31 15:18:54 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle.[hc]: Implemented gsl_data_handle_volume, which
		returns a volume adjustment factor ("volume" xinfo).

		* gslwavechunk.[hc]: Cache the volume adjustment factor here, so that
		GslWaveOsc can access it quickly.

		* gslwaveosc.c (gsl_wave_osc_set_filter): Adjust volume of the chunk
		according to its volume adjustment.

	Tue Feb  6 23:16:15 2007  Tim Janik  <timj@gtk.org>

		* bseloader-wav.c (wav_read_fmt_header): fixed byte_per_sample check.

	Tue Feb  6 02:27:05 2007  Tim Janik  <timj@gtk.org>

		* bse/gsldatahandle.[hc]: added scaling data handle, the scaling
		factor is provided at construction time.

		* bse/gsldatautils.[hc]: added gsl_data_find_min_max() to detect
		min and max signal range of a data handle.

	Mon Feb  5 02:54:14 2007  Tim Janik  <timj@gtk.org>

	        * bseloader-wav.c: support 32bit, 3byte 24bit and 4byte 24bit (with
	        unused upper byte) PCM-format WAV files.

	        * gsldatahandle.h: added GSL_WAVE_FORMAT_SIGNED_32,
	        GSL_WAVE_FORMAT_SIGNED_24_PAD4 and GSL_WAVE_FORMAT_SIGNED_24.

	        * gsldatahandle.c: read 24, 24_pad4 and 32 bit files.

	        * gsldatautils.h: extended to/from float/double with/without clip
	        conversion functions to also handle 24, 24_pad4 and 32bit data.

	Mon Feb  5 01:22:24 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxmodule.*: Added the necessary API to find out the maximum
		engine block size to Bse::Effect. The new function is called
		Effect::max_block_size().

	Sun Feb  4 03:01:38 2007  Tim Janik  <timj@gtk.org>

		* updated all licenses to GNU Lesser General Public License version 2.1
		with permission from Stefan Westerfeld where required.

	Sat Feb  3 04:26:38 2007  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc (bse_sequencer_thread_main): properly take sequencer
		forerun into account when starting a song so we won't delay song start
		until it's definitely too late.

	Sat Feb  3 04:22:16 2007  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc: refined tracing information. provide more timing details.

	Fri Feb  2 00:16:39 2007  Tim Janik  <timj@gtk.org>

		* bsemain.h, bsemain.cc: added support for debugging channels.
		added --bse-trace-sequencer.

		* bsesequencer.cc: added note on/off and control event tracing.

	Thu Jan 25 01:23:08 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresamplerimpl.hh: Adjusted error bounds for the filter test,
		because it failed sometimes although the implementation is ok. Be more
		verbose when using verbose mode.

	Tue Jan 16 23:57:40 2007  Tim Janik  <timj@gtk.org>

		* bseenginemaster.c: commented caveats.

	Mon Dec 25 16:43:46 2006  Tim Janik  <timj@gtk.org>

		* bsebus.c (bse_bus_ensure_summation): use symbolic i/o channel identifiers
		to avoid breakage in hardcoded channel numbers.

		* bsepcmwriter.c (bse_pcm_writer_write): fixed calculation to avoid overflow.

	Sun Dec 24 15:20:51 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsebus.c: BseSummation was recently extended to have three output
		channels (a new one computing the difference), which broke make
		report. This change fixes it, by adapting the hardcoded channel number
		in this file to match the new summation plugin.

	Sat Dec 23 20:49:22 2006  Tim Janik  <timj@gtk.org>

		* bseserver.[hcp]*: added bse_server_start_recording() and
		bse_server_stop_recording() functions to schedule WAV file
		recording for a specific time intervall.
		added bse-server-start-recording procedure.

		* bsepcmwriter.[hc]: implemented time intervall
		recording.

	Tue Dec 19 14:18:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsloscillator.c: Take transpose factor into account for table
		lookups when the oscillator frequency is constant. Fixes #387364.

	Tue Dec 19 02:10:33 2006  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: keep a flag around to detect the first sequencer underrun,
		reset the flag when prepared.

		* bsesequencer.cc (bse_sequencer_thread_main): always warn about
		sequencer underruns, regardles of debugging state.

	Mon Dec 18 20:14:34 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsebiquadfilter.c:
		* bseconstant.c:
		* bsestandardosc.c:
		* bseladspamodule.c: Spelling fix: the unit for frequencies is spelled
		"Hertz" (not "Herz").

	Sun Dec 17 20:58:40 2006  Tim Janik  <timj@gtk.org>

		* bsestandardosc.c (bse_standard_osc_update_modules): added missing
		update of the transpose factor to update_modules(), fixes #386862.

	Thu Dec 14 23:07:16 2006  Tim Janik  <timj@gtk.org>

		* gslcommon.c (gsl_error_from_errno): special case ENODATA, which is not
		available on GNU/kFreeBSD, reported by Petr Salinger <Petr.Salinger@seznam.cz>.

		* gsldatahandle-vorbis.c (gsl_vorbis1_handle_read): use EIO in unclear
		error cases, because GNU/kFreeBSD lacks ENODATA.

	Mon Dec 11 01:13:00 2006  Tim Janik  <timj@gtk.org>

		* tests/filtertest.cc (generic_filter_tests): added missing stopband
		damping check for LOWPASS filters, caught by Stefan.

	Wed Dec 13 23:55:15 2006  Tim Janik  <timj@gtk.org>

		* bseenginemaster.c (master_process_locked_node): set buffer start
		fragments to zero for nodes that are partially suspended and have
		pending probe jobs, so probes don't contain outdated junk data.

	Wed Dec 13 21:30:39 2006  Tim Janik  <timj@gtk.org>

		* bseenginemaster.c (master_take_probes): fixup ostreams[].value
		pointers before returning a probe, since those may have been altered
		by process() routines.

		* bseprobe.cc: added debugging field and a few assertions.

	Tue Dec 12 08:50:45 2006  Tim Janik  <timj@gtk.org>

		* bseundostack.c: fix possible flat copies of pointers to deeply
		nested object structures. in particular, this fixes potential GSList
		node corruptions.

	Tue Dec 12 01:18:22 2006  Tim Janik  <timj@gtk.org>

		* bsecore.idl, bsemathsignal.c: added musical tuning system tables
		submitted by Hanno Behrens <pebbles@schattenlauf.de>:
		12-TET, 7-TET, 5-TET, DIATONIC_SCALE, INDIAN_SCALE, PYTHAGOREAN_TUNING,
		PENTATONIC_5_LIMIT, PENTATONIC_BLUES, PENTATONIC_GOGO,
		QUARTER_COMMA_MEANTONE, SILBERMANN_SORGE, WERCKMEISTER_3,
		WERCKMEISTER_4, WERCKMEISTER_5, WERCKMEISTER_6, KIRNBERGER_3
		and YOUNG.

	Mon Dec 11 00:51:36 2006  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added musical_tuning property.

		* bseutils.h, bseutils.c:
		* bsenote.h, bsenote.c, bsenote.cc: converted bsenote to C++. added musical
		tuning argument to all note/freq API functions and adapted internal logic
		to cope with different tunings. removed unused BSE_FREQ*() macros.

		* bsecore.idl: introduce Bse::MusicalTuningType. added musical_tuning
		field to NoteDescription.

		* bseserver.proc:
		* bseprocedure.proc: added musical tuning arguments to various note
		related procedures, moved note procedures from bseserver.proc to
		bseprocedure.proc and got rid of their BseServer argument.

		* bsemathsignal.h, bsemathsignal.c: made semitone and transpose tables
		musical tuning sensitive.

		* bsepart.[hc]: allow per-part semitone tables, and changed macros so that
		part notes are converted to frequencies according to the musical tuning
		specific to a part.

		* bseitem.[hc]: provide bse_item_current_musical_tuning() and document
		its caveats.

		* bsesource.[hc]: added bse_source_prepared_musical_tuning() which
		provides musical tuning setting for a source if and only if the
		source is prepared. the tuning stays constant while the source is prepared.

		* bsesequencer.cc: perform part specific note->freq conversion.

		* bsemidifile.[hc]: added musical_tuning to use the new note API,
		defaulting to equal temperament.

		* bsemididecoder.c: hard code musical tuning to equal temperament,
		since we have to provide notes to frequencies for MIDI events up front.

		* bseconstant.c:
		* bsestandardosc.c:
		* bseladspamodule.c:
		* bsebiquadfilter.c: adapt to new tuning relative note API, add a
		warning to tooltips that informs about the musical tuning specific
		interpretation of note properties.

		* gsloscillator*.[hc]: changed configuration to contain a transpose_factor
		and not a transpose index which needs to be looked up in conjunction with
		a specific musical tuning.

		* bseglobals.h: removed unused macros.

		* bseinfo.c: adapt to new note API by defaulting to to equal temperament.

		* tests/misctests.cc: test various musical tuning system properties and
		note<->freq conversions.

	Sun Dec 10 14:15:18 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/firhandle.cc: Added seek test.

	Mon Dec  4 12:03:19 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle.h:
		* bsedatahandle-fir.cc: Added a function which computes the filter
		response in dB, given a FIR handle and a frequency.

		* tests/firhandle.cc: Test that theoretical filter response (computed
		by bse_data_handle_fir_response_db) and scanned response match.

	Mon Dec  4 02:42:56 2006  Tim Janik  <timj@gtk.org>

		* gslvorbis-enc.h, gslvorbis-enc.c: added gsl_vorbis_encoder_version()
		which has to go through some hoops to query the library version (encode
		and decode a dummy file), but manages to return a version string.

		* bseserver.proc: provide bse_server_get_vorbis_version().

	Sun Dec  3 19:13:17 2006  Tim Janik  <timj@gtk.org>

		* bseexports.h: changed plugin mechanism to skip per-plugin names and
		to provide feature flag masks to check plugin requirements (to check
		for MMX/SSE support).

		* bsecxxplugin.hh, bsecxxplugin.cc: changed symbol export mechanism to
		use Bse::ExportTypeKeeper constructor and destructor instead of single
		symbols. use bse_exports__add_node() and bse_exports__del_node() to
		register/unregister the type nodes. this allows compilation of multiple
		C++ plugin types into the same .so binary.

		* bseplugin.h, bseplugin.c: rewrote plugin symbol lookup and type node
		exports to support load time registration via bse_exports__add_node()
		and bse_exports__del_node().

	Sun Dec  3 21:13:32 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Made state size computation work correctly.
		Added lowpass handle.

		* tests/firhandle.cc: Extended tests to cover both, the highpass and
		the lowpass handle.

	Sat Dec  2 23:55:44 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/firhandle.cc: Added a test for the highpass performance.

		* bsedatahandle-fir.cc: Optimized performance of the highpass handle.
		It is plain FPU code (not SSE), though.

	Sat Dec  2 22:03:57 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/firhandle.cc: Added a highpass test for multichannel signals.

		* bsedatahandle-fir.cc: Fixed the code for n_channels != 1. Minor
		code cleanups.

	Tue Nov 28 21:05:16 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Some optimizations, more to come.

	Mon Nov 27 22:32:24 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc:
		* gsldatahandle.h:
		* tests/firhandle.cc: Move highpass handle from gsl to bse namespace.

		* bsedatahandle-fir.cc: Implement a "real" data handle. It is not yet
		performance optimized, though.

	Mon Nov 27 20:29:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle.[hc]: Added new gsl_data_handle_get_state_length
		function for datahandles, with a corresponding vtable entry. For
		filtering datahandles (such as lowpass handles), which are usually
		stateful, it returns the filter state length.

		* gsldatahandle-vorbis.c:
		* gsldatahandle-mad.c:
		* bsedatahandle-resample.cc:
		* tests/loophandle.c: Implement the get_state_length datahandle
		method.

		* tests/resamplehandle.cc: Test the resampler get_state_length
		function.

	Mon Nov 27 15:19:47 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/firhandle.cc: Check that the filter is zero phase in the
		passband (== no delay).

	Sun Nov 26 19:08:01 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/firhandle.cc: Created test for the fir highpass handle.

		* bsedatahandle-fir.cc: Fixed parameters passed to coefficient design
		function. Filters have the right cutoff frequency now.

	Sun Nov 26 16:32:00 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: Added bsedatahandle-fir.cc.

		* gsldatahandle.h:
		* bsedatahandle-fir.cc: Moved highpass handle here from
		../tools/bseloopfuncs.[hc].

	Sun Nov 26 15:51:39 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc: svn copy from ../tools/bseloopfuncs.c: prepare
		for moving highpass handle here.

	Wed Nov 22 21:40:17 2006  Tim Janik  <timj@gtk.org>

		* bseladspa.cc: made messages about ladspa compatibility debugging
		messages. improved message clarity, supressed messages about plugin
		registration. added missing 'extern "C"'.

	Wed Nov 22 19:52:09 2006  Tim Janik  <timj@gtk.org>

		* bseladspa.cc: ported bseladspa.c to C++. use BIRNET_MAY_ALIAS to
		work around strict aliasing warnings. load LADSPA modules with local
		symbol bindings.

		* bseladspa.h: fixed structure layout for C++.

		* bsetype.h: use EXTERN_C in code generating macros, to account for
		macro usage in C++.

	Mon Nov 20 23:39:51 2006  Tim Janik  <timj@gtk.org>

		* bsemain.cc: ported bsemain.c to C++, use C++ Msg API.

		* bsemain.h: API adaptions due to bsemain.cc porting.

		* bsecore.idl:
		* bsejanitor.proc:
		* bseserver.c: ported to new sfi_msg_* API.

		* bsesequencer.cc: use bse_message_setup_thread_handler().

		* bseenginemaster.c: use bse_message_setup_thread_handler() and
		BIRNET_STATIC_ASSERT().

	Wed Nov 15 00:59:15 2006  Tim Janik  <timj@gtk.org>

		* ldscript.map: restrict typeinfo symbol exports to Sfi/Bse/Birnet
		symbols. export vtable symbols to allow plugin building withou tlibtool.

	Tue Nov 14 01:02:45 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresampler.[hc]*: Added Resampler2::find_precision_for_bits to the
		API, and an precision enum -> string conversion function.

		* bsedatahandle-resample.cc: Use find_precision_for_bits.

	Mon Nov 13 20:05:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresamplerimpl.hh: Removed unnecessary delay. The stream delay for
		both, upsampling and downsampling should be truely minimal now.

		* bseresampler.hh: The guarantee that the upsampler delay is even was
		removed from the API. The reason is that we can have a shorter stream
		delay when the upsampler delay is odd.

		* bsedatahandle-resample.cc: Introduced additional delay compensation
		code, because compensating an odd upsampler delay wasn't necessary
		when this code was initially written.

	Wed Nov  8 23:28:05 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresampler.[hc]* bseresamplerimpl.hh: Added coefficient set for
		linear interpolation. It will probably sound bad, but its useful for
		testing.

	Sun Nov  5 04:23:07 2006  Tim Janik  <timj@gtk.org>

		* tests/filtertest.cc (random_filter_tests): extended fixed orders to 32
		and random orders to 64. cut the requested order for band filters in
		half, because it's doubled upon design.

	Sat Nov  4 20:09:33 2006  Tim Janik  <timj@gtk.org>

		* bsefilter-ellf.c: removed ellf-behavior special casing. switched
		to higher precision constants. substituted bsemath.h constants.

		* bsemath.h: provide ln(4), decibel10 and decibel20 factors.

	Sat Nov  4 19:46:01 2006  Tim Janik  <timj@gtk.org>

		* bsefilter-ellf.c: replaced all ellf specific complex number
		arithmetic by bse_complex*() calls.

		* bsemath.h: provide BSE_COMPLEX_ONE for convenience.

	Sat Nov  4 18:14:08 2006  Tim Janik  <timj@gtk.org>

		* gslmathtest.c: removed, this has been ported to bsemathtest and
		is long unused.

	Sat Nov  4 17:38:28 2006  Tim Janik  <timj@gtk.org>

		* bsemath.h: don't include neither of the C++ <complex> or the C99
		<complex.h> header files. removed compat typedefs. we'll simply resort
		to using BseComplex in headers and use <complex> in C++ files.

		* bsefilter.h: use BseComplex for complex numbers in header files.

		* bsefilter.cc: adaptions to BseComplex.

		* bsefilter-ellf.c: use BseComplex instead of C99 complex.

		* tests/filtertest.cc: adaptions to BseComplex. fixed elliptic filter
		test to really use stopband_edges, not stopband_db.

	Fri Nov  3 02:19:09 2006  Tim Janik  <timj@gtk.org>

		* bsefilter.h, bsefilter.cc: removed transfer function nominator and
		denominator from public API, because they are useless for higher
		order filters. added center-frequency to public API, which is the
		middle frequency for band filters (used to evaluate gain ot stopband).

		* bsefilter-ellf.c: provide BseIIRFilterDesign.center_frequency.
		made some slight precision improvements for cgam evaluations.

		* tests/filtertest.cc: special cased lengthy routines as slowtest.
		removed any code (check, eval) related to filter transfer functions.
		did some test split ups. added random filter tests for butterworth,
		chebyshev1, elliptic. extended generic filter test to test passband
		min/max from both sides. added some stopband tests.

		* tests/filtercatalog.cc: random filter catalog generated with bse-ellf.

	Thu Nov  2 22:56:55 2006  Tim Janik  <timj@gtk.org>

		* bsefilter-ellf.c: z_plane_zeros_poles_to_numerator_denomerator():
		reimplemented gain calculation by evaluating the pole and zero
		polinomials. this eliminates the precision artefacts which caused
		gain miscalculations for high order filters.

	Thu Nov  2 22:44:16 2006  Tim Janik  <timj@gtk.org>

		* bsemath.c: temporary fix against ring buffer overflow.

		* bsefilter-ellf.c: replaced overly verbose debugging function
		implementation by simple printf like macros. moved ellf compat
		constant definitions.

		* bsefilter.cc: cosmetic changes to bse_iir_filter_request_string().

		* tests/filtertest.cc: compare filter zero/pole coefficients
		instead of filter transfer function coefficients which are useless
		for high order filters. zero/pole pairs for comparsion are
		determined through nearest-neighbour searches.
		use TABORT_HANDLER() to hook up print_filter_on_abort(), to print
		out mismatching filters when tests fail. use T*_CMP() test macros
		for more informative printouts. extended generic filter test to
		cover more filter properties.
		added predesigned filters where ellf miscalculates gain.

	Tue Oct 31 13:52:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/filtertest.cc: Raise coefficient comparision epsilon ceps
		8e-13 for Chebychev filters, as recommended by Tim, so that "make
		check" on AMD64 passes again.

		* tests/resamplehandle.cc: Use BseResampler delay compensation C API
		where appropriate, instead of computing the delay from the filter
		order.

	Mon Oct 30 23:57:03 2006  Tim Janik  <timj@gtk.org>

		* tests/filtertest.cc: added brute_coefficient_tests() which can be
		used to test massive amounts of test filters against the library
		design algorithm.

	Mon Oct 30 21:57:20 2006  Tim Janik  <timj@gtk.org>

		* tests/filtertest.cc: applied some corrections suggested by Stefan.
		fixed frequency range loops to test both frequency bounds.
		extended exit_with_iir_filter_gnuplot() to print the filter design.
		assert allmost 0-gain for all filters. simplified tests somewhat.
		added low/high pass and band stop/pass chebyshev1 filters.

	Mon Oct 30 01:25:56 2006  Tim Janik  <timj@gtk.org>

		* tests/filtertest.cc: new test for the new IIR filter design API.
		currently covers Butterworth low pass, high pass, band stop and
		band pass filter tests. tests are based on coefficient comparisons,
		filter transfer function analysis, and zero + pole function
		analysis. for debugging purposes, provided the possibility to
		prematurely abort filter tests and provide a gnuplot dump.

	Mon Oct 30 00:55:01 2006  Tim Janik  <timj@gtk.org>

	        * bsefilter.cc: implement bse_iir_filter_kind_string(),
		bse_iir_filter_type_string(), bse_iir_filter_request_string(),
		bse_iir_filter_design_string(). implemented bse_iir_filter_design()
		as a thin wrapper around _bse_filter_design_ellf().

		* bsemath.h: include complex.h or complex, depending on C / C++.
		provide ComplexFloat, ComplexDouble, ComplexLongDouble and
		Complex as alias for ComplexDouble.

	Mon Oct 30 00:47:23 2006  Tim Janik  <timj@gtk.org>

		* bsefilter.h: new header for offering a unified IIR filter API.

		* bsefilter-ellf.c: define _GNU_SOURCE instead of _ISOC99_SOURCE before
		including any headers. this gets us the C99 API *and* GNU features
		(i.e. the uint typedef).
		split up the implementation so that the current stand-alone behavior
	        is preserved if ELLF_BEHAVIOR is defined and so that the necessary
	        contents from bseellipticfilter.h are inlined otherwise.
	        moved EllfDesignState here (from bseellipticfilter.h). renamed
	        EllfComplex.
	        _bse_filter_design_ellf(): implemented library function prototyped
	        in bsefilter.h to design butterworth, chebychev1 and elliptic filters.

		* bseellipticfilter.h, bseellipticfilter.c: removed.

	Sun Oct 29 22:26:09 2006  Tim Janik  <timj@gtk.org>

		* bsefilter-ellf.c: copied from bseellipticfilter.c.

	Sat Oct 28 18:34:48 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h: extended BseIIRFilterKind, renamed
		* bseellipticfilter.c: extended BseIIRFilterKind, renamed
		BseIIRFilterRequest, BSE_IIR_MAX_ORDER and BSE_IIR_CARRAY_SIZE.
		added BseIIRFilterDesign structure which is the intended future
		output API. renamed some DesignState fields to match BseIIRFilterDesign
		more closely.

	Thu Oct 26 00:15:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.c (gsl_filter_sine_scan): More comments.

	Tue Oct 24 23:52:58 2006  Tim Janik  <timj@gtk.org>

		* bseblockutils.hh, bseblockutils.cc: provide a blockutils
		implementation name. usually "FPU" or "SSE".

		* bsemain.c: add block utils implementaiton name as suffix to
		the treport_*() CPU name.

		* tests/Makefile.am:
		* tests/blocktests.cc: conditionalized benchmarks, use treport_*().

		* tests/blocktests.cc, tests/resamplehandle.cc: CPU name fixups.

	Sun Oct 22 00:22:27 2006  Tim Janik  <timj@gtk.org>

		* bsemain.c: let allow_randomization default to TRUE, added
		--bse-disable-randomization and --bse-enable-randomization args.

	Sun Oct 22 00:04:49 2006  Tim Janik  <timj@gtk.org>

		* bsemain.h: added allow_randomization to BseMainArgs to configure
		deterministic vs. non-deterministic behavor. mostly interesting
		for physical modelling plugins.

	Sat Oct 21 20:56:27 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/resamplehandle.cc: Improved comment.

	Sat Oct 21 18:58:35 2006  Tim Janik  <timj@gtk.org>

		* tests/resamplehandle.cc: reworked to split performance tests from
		ordinary tests. speed up ordinary tests if --test-slow was not
		specified. fixed test program to use TASSERT() instead of silent exit
		or return_if_fail on errors.

		* tests/subnormals.cc: refactored a bit, split up performance tests.

	Fri Oct 20 23:03:57 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.c (gsl_filter_sine_scan): Fixed a small bug in block
		volume computation.

	Fri Oct 20 13:58:38 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.[hc] (gsl_filter_sine_scan): Changed the API and
		implementation of the sine scanning function to figure out how long to
		scan by computing the volume for 0.1 second blocks, and waiting until
		the volume doesn't change anymore.

	Wed Oct 18 22:05:37 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Fixed my last commit. Sorry.

	Wed Oct 18 21:47:15 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/resamplehandle.cc:
		* bseresampler.hh: Improved comments on delay compensation.

		* bsedatahandle-resample.cc: Reorganized delay compensation code in
		open() a bit, improved comments.

	Tue Oct 17 23:10:43 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.c: cosmetics, fixed constants.

	Tue Oct 17 22:03:52 2006  Tim Janik  <timj@imendio.com>

		* bseellipticfilter.h:
		* bseellipticfilter.c: turned remaining global variables into local
		variables or structure members.

	Tue Oct 17 02:12:24 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h, bseellipticfilter.c: moved elliptic integral
		values, chebyshev/elliptic phi and gain into the filter state structure.
		eliminated other global variables by declaring them in local scopes.

	Tue Oct 17 01:43:26 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h: define MAX_ORDER and MAX_COEFFICIENT_ARRAY_SIZE.
		added array for s-plane poles and zeros to DesignState.

		* bseellipticfilter.c: added -ffloat-store to the compilation option to
		keep compatibility with math.h-enabled ellf.c. resolved non-local double
		variable fixmes. store s-plane zeros and poles as ds->zs. changed to use
		MAX_COEFFICIENT_ARRAY_SIZE as array bound.

	Tue Oct 17 00:50:08 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.c: changed static y[] array into local scope
		variables/arrays.

	Tue Oct 17 00:31:20 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.c: removed remaining static integers by using
		either local variables or by using ds->z_counter. minor whitespace
		fixups.

		* bseellipticfilter.h: added and documented z_counter.

	Tue Oct 17 00:17:23 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.c: whitespace and paranthese fixes.

	Tue Oct 17 00:05:55 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h, bseellipticfilter.c: white space fixups,
		changed static zord to ds->n_solved_poles.

	Sun Oct 15 23:17:39 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h:
		* bseellipticfilter.c: include math.h instead of declaring standard
		math.h functions. print debugging/informative output through an
		extra function. beefed up ARRSIZ once more for high order filters.
		added custom function to print the transfer function coefficients
		for debugging. fixed reading from stdin to use fgets().
		reverted granularity changes in filter table printing. renamed all
		complex functions to not clash with complex.h.
		added some workarounds with fixme marks to stay value (error)
		compatible with former versions of the ellf program, these can be
		removed once we have filter tests in place. removed unecessary
		comments, streamlined others. removed obsolete configuration
		logic and other unecessary preprocessor cruft. removed unused
		declarations, moved many variable and constant declarations into
		an inner scope. renamed heavily abbreviated functions. renamed
		and recoded main() into iir_filter_design() which does read all
		design parameters from a structure. added a new main with simply
		stdin-read logic to call iir_filter_design().
		for the moment, moved structure declarations for filter design
		parameters and filter calculation state into bseellipticfilter.h.

	Sun Oct 15 22:52:53 2006  Tim Janik  <timj@gtk.org>

		* bseellipticfilter.h, bseellipticfilter.c: renamed from bseiirfilter.*.

	Sun Oct 15 22:49:51 2006  Tim Janik  <timj@gtk.org>

		* bseieee754.h: added BSE_DOUBLE_EPSILON and BSE_FLOAT_EPSILON,
		constants for the round-off error at 1.0.

	Sun Oct 15 20:58:57 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.c: Made implementation of gsl_filter_sine_scan() more
		reliable by using two phase shifted signals (see comment in the
		implementation).

	Thu Oct 12 22:30:46 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Use the newly introduced
		Resampler2::delay().

	Thu Oct 12 21:48:54 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresampler.hh:
		* bseresampler.cc:
		* bseresamplerimpl.hh: Added a virtual function Resampler2::delay(),
		which can be used for compensation of the resampler introduced delay.
		Provide C API wrapper for the function: bse_resampler2_delay().

		* tests/resamplehandle.cc: Test the delay compensation function.
		Fix a buglet in another test (comparing signals needs fabs()).

	Thu Oct 12 16:54:42 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfft.h: Improved documentation on FFT normalization.

	Thu Oct 12 13:25:38 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseiirfilter.c: Added some comments.

	Thu Oct 12 02:23:15 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: enlarged ARRSIZ so order 16 filters can be calculated.
		renamed and reworked print_filter_table() to print the filter table with
		much finer granularity.

	Thu Oct 12 02:14:44 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: more unused section removal. auto-fixed indentation.

	Thu Oct 12 02:01:47 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: streamlined first comment section. got rid of useless
		definitions and preprocessor special cases.

	Thu Oct 12 01:50:57 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: streamlined some comments, fixed includes and
		prototypes and constant tables to compile into a test program.

	Thu Oct 12 01:44:17 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: since the ellf program is shipped standalone and as
		part of the cephes math library, with no copying restrictions, this
		code is now put under an "AS IS" NO-WARRANTY license, properly
		attributing Stephen L. Moshier.

	Thu Oct 12 01:38:39 2006  Tim Janik  <timj@gtk.org>

		* bseiirfilter.c: added concatenated source code of the ellf filter
		design program by Stephen L. Moshier. program homepage is:
		  http://www.moshier.net/ellfdoc.html

		* bseiirfilter.h: new empty header file.

	Sun Oct  8 21:20:14 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/resamplehandle.cc: Lessen the thresholds for downsampling
		datahandle 24bit test, because AMD64, due to its -mfpmath=sse default,
		doesn't get as good results as i386 machines do. With the new
		thresholds, make check passes on AMD64, too.

	Thu Oct  5 17:39:50 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle.h:
		* bsedatahandle-resample.cc: Implemented factor 2 downsampling
		datahandle.  Moved common code into a base class for both datahandles.

		* tests/resamplehandle.cc: Test downsampling datahandle.

	Sat Sep 30 21:36:39 2006  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: fixed -p and -s not taking effect.

	Wed Sep 27 21:35:12 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseblockutils.cc:
		* bseblockutils.hh:
		* bseresamplerimpl.hh: Only optionally produce output during the
		filter implementation test.

	Wed Sep 27 13:04:49 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Fixes and cleanups. Upsampling Datahandle
		class Members are now prefixed with m_, all code that could possibly
		be moved into the class - such as the C vtable - is now present as
		static functions within the class, the destructor was made private
		- because reference counting is supposed to be used.
		Finally the class uses C style inheritance, by embedding m_dhandle.

	Wed Sep 27 11:30:27 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/testresampler.cc: Moved testresampler.cc from bse/tests to
		slowtests, to prepare it for automatic accuracy testing. Excessive
		automatic testing will be quite slow, thus it needs to be in this
		directory.

	Wed Sep 27 11:27:35 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testresampler.cc: Allow using --fpu instead of
		--bse-force-fpu, because that means less typing.
		In the accuracy test, print out the threshold given by the user, if
		any (that way, it becomes easier to validate the "safety margin"
		between the specified and the actual threshold)

	Tue Sep 26 10:34:03 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseblockutils.cc bseblockutils.hh: Provide hook for testing the
		resampler2 implementation.

		* tests/testresampler.cc bseresamplerimpl.hh: Moved SSE filter
		implementation test to the new function fir_test_filter_sse, which
		can then be properly compiled using -msse within the bseblockutils
		plugin for the SSE case.

	Fri Sep 22 15:25:19 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testresampler.cc: Make resampler more user friendly, by using
		more long options, explicit command names and improving the usage. For
		instance testresampler ad becomes testresampler accuracy --down.
		We also leave it up to bse to determine whether to use the SSE or FPU
		variant; bse's decision can be influenced by --bse-force-fpu.
		Print usage() to stdout, to make it less'able.

	Sun Sep 17 16:42:36 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testresampler.cc: Minor fix in usage() function.

	Sun Sep 17 16:27:59 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testresampler.cc: Added option parsing, to be able to specify
		a lot more details on what test should be performed and how.
		Use bse to instantiate the upsampler and downsampler; this allows us
		to use bse's automatic SSE detection features, and bse's coefficient
		sets. Added --precision option to select coefficient set.
		Added --freq-scan option, to test accuracy of an entire frequency
		range with one single call of the program.
		Added --precision-assert-db option, which allows the test program to
		be used in automated tests. If the accuracy is less than the specified
		minimum precision, an assertion is triggered.

		* tests/testresamplercoeffs.h: Remove this file, because the new
		testresampler code uses the coefficients defined in bseresampler.cc.

	Sat Sep 16 15:50:34 2006  Tim Janik  <timj@gtk.org>

		* tests/resamplehandle.cc: merged with resamplercapi.c. made internal
		functions "static". fixed TSTART() usages. cleaned up main().

		* tests/Makefile.am, tests/resamplercapi.c: removed resamplercapi.c.

	Sat Sep 16 15:19:33 2006  Tim Janik  <timj@gtk.org>

		* bseresamplerimpl.hh: renamed bseresampler.tcc to bseresamplerimpl.hh
		to match beast naming conventions, and because it effectively implements
		parts of bseresampler.hh.

	Sat Sep 16 14:45:49 2006  Tim Janik  <timj@gtk.org>

		* bseblockutils.cc: access Resampler2::create_impl() via derivation.

		* bseresampler.tcc: whitespace fixups. fixed includes. fixed
		unconditional use of __m128. renamed AlignedMem to AlignedArray because
		this class implements aligned array accesses instead of a memory
		allocator. adapted callers.

		* bsedatahandle-resample.cc:
		* bseresampler.cc, gsldatahandle.h: whitespace and comment fixups.

		* bse/bseresampler.hh: whitespace fixups. made create_impl() non-public,
		it can be accessed by blockutil implementations via derivation.

	Sat Sep 16 09:25:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresampler.tcc bseresampler.cc bseresampler.hh: Added factor 2
		resampling code (up- and downsampling), which can use SSE instructions
		when available. The implementation was tuned for speed.

		* gsldatahandle.h bsedatahandle-resample.cc: Provide a datahandle,
		which does factor 2 upsampling.

		* bseblockutils.cc bseblockutils.hh: Provide factory method for the
		resampler, so that bse can automatically use the SSE version when SSE
		instructions are available.

		* tests/testresamplercoeffs.h tests/testresampler.cc: Standalone
		interactive test code for the resampler.

		* tests/resamplercapi.c tests/resamplehandle.cc: Tests for the
		resampler C API and the resampler data handle.

		* Makefile.am: Adapted Makefile rules for the new resampler sources.

		* tests/Makefile.am: Adapted Makefile rules for the new resampler
		tests. Fixed subnormals_CXXFLAGS, which now includes AM_CXXFLAGS.

	Sun Sep 10 22:46:55 2006  Tim Janik  <timj@gtk.org>

		* gsldatautils.h, gsldatautils.c: added bse_wave_file_from_fbuffer() and
		bse_wave_file_from_dbuffer() to easily save WAV files from memory.

	Sat Jul 15 20:06:24 2006  Tim Janik  <timj@gtk.org>

		* gslwaveosc-aux.c: use doubles instead of floats to store temporary
		filter state. this avoids artefacts for larger pitch values.

	Sat Jul 15 04:11:06 2006  Tim Janik  <timj@gtk.org>

		* bsebiquadfilter.c (bse_biquad_filter_class_init):
		disabled ::norm_type property because chenging it to something
		non-default drives the filter unstable too easily.

	Thu Jul 13 21:36:28 2006  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: pass through --bse-rcfile to bse.

	Sun Jul  9 14:53:26 2006  Tim Janik  <timj@gtk.org>

		* renamed the guile based bsesh to bsescm. adapted related build rules,
		variable names, function names and documentation.

	Sun Jul  9 02:44:41 2006  Tim Janik  <timj@gtk.org>

		* renamed bse_engine_garbage_collect() to bse_engine_user_thread_collect().

	Sun Jul  9 02:24:00 2006  Tim Janik  <timj@gtk.org>

		* zintern/gus-patch.bse:
		* bse/zintern/wave-mono.bse: updated to beast 0.7.0, clarified license.

	Fri Jul  7 02:17:02 2006  Tim Janik  <timj@gtk.org>

		* gslcommon.c:
		* bsepcmdevice-oss.c:
		* bsemididevice-oss.c: use birnet_file_equals() and
		birnet_file_check().

	Thu Jul  6 22:45:17 2006  Tim Janik  <timj@gtk.org>

		* zintern/Makefile.am: use birnet-zintern.

		* zintern/zintern.c: rmeoved.

	Wed Jun 21 23:37:41 2006  Tim Janik  <timj@gtk.org>

		* bsestorage.c: type fixup.

	Wed Jun 14 15:44:27 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseitem.h(bse_item_undo_open): Added G_GNUC_PRINTF printf format
		attribute.

	Mon Jun 12 01:09:51 2006  Tim Janik  <timj@gtk.org>

		* bsecxxutils.hh: got rid of TEMPLATE_ERROR::* which is provided
		by Birnet now.

		* bsecxxarg.hh: use Birnet::TEMPLATE_ERROR::invalid_type().

	Mon Jun  5 13:59:52 2006  Tim Janik  <timj@gtk.org>

		* bsecxxutils.hh: removed binary lookup templates which are
		in Birnet now.

	Wed May 31 03:04:03 2006  Tim Janik  <timj@gtk.org>

		* bseproject.c bse_project_restore(): force dirty project flag
		after restoring/merging.

		* gslfft.h: fixed documentation.

		* tests/testfft.c: added resynthesis tests.

	Wed May 31 00:39:24 2006  Tim Janik  <timj@gtk.org>

		* bseengine.c (bse_trans_merge): docu fixups.

	Sat May 27 00:22:44 2006  Tim Janik  <timj@gtk.org>

		* gslfft.h: document that gsl_power2_fftsr() scales the output data
		by 1.0/n_values.

	Sun May 21 12:19:52 2006  Tim Janik  <timj@gtk.org>

		* bsesuper.c (super_compat_setup): added compat code for "license" and
		"author" fields, loaded from BSE files < 0.7.0.

	Sat May 20 15:49:07 2006  Tim Janik  <timj@gtk.org>

		* bse.h:
		* bsemain.[hc]: merged config data from gsl into BSE config data. make
		use of BirnetInitValue to allow non-argc/argv configuraiton upon initilaization.
		removed bse_init_intern(). added bse_init_inprocess() and bse_init_test().
		adapted dependent code.

		* gslcommon.[hc]: removed config and initialization logica that moved to BSE.

		* bseserver.c: prevent rcfile loading if
		birnet_init_settings->stand_alone is true.

		* bseobject.c: fixup "blurb" parameter handling, default to the
		empty string and skip default when saving.

		* bsesuper.c: fix up "license" and "author" defaults to empty strings.

		* bsesuper.c: pre-initialize authors and license field when
		creating objects.

		* bsecore.idl: added configurable defaults for author and license fields.
		removed "Stepping Rates" config section. adapted dependent code.

		* bseutils.[hc]: provide initial default author and license values.

	Fri May 12 16:49:38 2006  Tim Janik  <timj@gtk.org>

		* bseserver.c:
		* bsemain.[hc]: permit specification of an rcfile via --bse-rcfile.

		* bseplugin.c: fixed SSE vs. FPU filtering to also affect drivers.

	Wed May 10 19:13:28 2006  Tim Janik  <timj@gtk.org>

		* bseengine.c: document that probe jobs may be freely reordered.

		* bseenginemaster.c: simply prepend probe jobs to a node's probe
		job list, compared to appending, this has O(1) instead of O(n^2)
		complexity which makes a huge different for some scenarios that
		trigger long probe job queues.
		also, collect probe jobs unconditionally after probes have been
		taken, since probing is not parallelized anymore.

		* bseglobals.[hc]: introduced new (idle handler) priority
		BSE_PRIORITY_NEXT. this essentially takes over the prio of the
		previous "now" stage which now got bumped up to the topmost
		priority. change bse_idle_next() and bse_idle_now() functions
		and their callers accordingly.

		* bseprobe.cc: shortened queue length to 3, so usually 3 client side
		probe requests will be handled including notification in a row.
		after 3 requests, the client should have managed to request new
		probes if it can process them this fast.
		fixed up low level job queueing to occour asyncronously with highest
		priority, so it essentially happens immediately but still allowes
		for aggregation of multiple probe requests. also fixed up queue length
		handling which was previously buggy in requesting only partial queue
		lengths which resulted in very short probe job queues on the engine
		modules and lots of unerruns during probe evaluation. added assertions.

	Wed May 10 15:34:12 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Add benchmarks for fill and copy.

	Wed May 10 15:29:24 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Make testing different block sizes easier by
		adding a const int for the block size.

	Wed May 10 00:44:58 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.hh: Minor formatting fix.

	Wed May 10 00:19:16 2006  Tim Janik  <timj@gtk.org>

		* bseprobe.cc:
		* bseengineutils.c:
		* bseladspamodule.c:
		* bsecontextmerger.c: use bseblockutils.hh functions to increase performance.

	Tue May  9 22:53:51 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bsemain.c (bse_init_core): Removed random generator seed
		initialization for rand(), since it is now done by birnet_init.

	Tue May  9 16:54:43 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.*: Added new block functions for subtracting and
		multiplying blocks, as well as calculating square sum (useful for
		determining the block energy) and minimum/maximum values.

		* tests/blocktests.cc: Test newly added functions.

	Mon May  8 03:25:51 2006  Tim Janik  <timj@gtk.org>

		* bseconstant.h: reduce the number of supported output channels to 4.

		* bseplugin.h: allow type option specification for BSE_REGISTER_OBJECT*.

	Mon May  8 02:21:59 2006  Tim Janik  <timj@gtk.org>

		* icons/Makefile.am:
		* icons/summation.png, icons/summation.xcf:
		* Makefile.am:
		* bsesummation.idl, bsesummation.cc: removed BseSummation which now
		resides in plugins/.

		* bsesong.c: abort with g_error() if BseSummation can't be loaded.

	Mon May  8 00:19:00 2006  Tim Janik  <timj@gtk.org>

		* icons/Makefile.am:
		* icons/ampctrl.png, icons/ampctrl.xcf:
		* Makefile.am:
		* bse.idl:
		* bseamplifier.idl, bseamplifier.cc: removed BseAmplifier which now
		resides in plugins/.

		* tests/testcxx.cc: create a BseBusModule as test object since
		BseAmplifier is not part of the BSE core anymore.

	Sun May  7 23:39:43 2006  Tim Janik  <timj@gtk.org>

		* tests/subnormals.cc: added bench test for the float-cancellation macros
		used by BSE.

		* tests/Makefile.am: compile subnormals.cc with -ffast-match because this
		affects the subnormal cancellation benchmarks and because this option is
		used when compiling plugins.

	Sun May  7 03:37:18 2006  Tim Janik  <timj@gtk.org>

		* bseprobe.hh, bseprobe.cc: allmost complete rewrite to fix lots of
		bugs and experimental code portions. several probe queues exist per
		BseSource now, one for each output channel / block-size combination.
		underruns in probe calculation are now detected and are zeroed out
		where neccessary (e.g. in ffts). optimized quite some block copies,
		fills and loops. for min/max and energie calculation loops, SIMD
		variants are still needed. optimized probing logic for coalescing of
		signal emissions. added "idle"-probing, i.e. continuous probe result
		notification is now supported for unprepared sources without modules.
		syncronized simulataneous probe requests on multiple sources.

		* bseenginemaster.[hc]:
		* bseenginenode.[hc]:
		* bseengine.[hc]: reworked probing so probe jobs now simply replace
		the BseOStream array of a node when probing. creation of probe jobs
		and the probe callback was adapted accordingly. the user may take
		over memory management for the resulting BseOStream array, release
		then happens via the newly added bse_engine_free_ostreams(). fixed
		lots of buglets on the way, made use of bseblockutils.hh.

		* bseengine.[hc]: export bse_engine_const_zeros() to access a block
		of 0 floats at least as big as any engine block.

		* bsecxxmodule.hh:
		* bsecxxmodule.cc: got rid of istreams, jstreams and ostreams
		fields which just duplicated BseModule pointers for no good. since
		bseengine.h is deliberately not included by bsecxxmodule.hh, use
		the BSE_MODULE_GET_?STREAMSP() macros supplied by bsedefs.h.

		* bsedefs.h: provide BSE_MODULE_GET_?STREAMSP() similar to
		BSE_MODULE_GET_USER_DATA(), so some BseModule fields can be accessed
		without inclusion of bseengine.h.

	Sat Apr 22 18:06:39 2006  Tim Janik  <timj@gtk.org>

		* tests/blocktests.cc: function name fixups. print out timing
		information about benchmark tests and calibration. assigned more
		benchmarking time to increase accuracy.

	Sat Apr 22 13:36:24 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Introduce benchmark time calibration from
		birnettests.h, so that the benchmarks take the same amount of time on
		any processor.

	Thu Apr 20 14:11:54 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.*(substitute): Tiny name fix: substrate is not the
		right word for the argument here; substitute_impl is better.

	Wed Apr 19 23:50:48 2006  Tim Janik  <timj@gtk.org>

		* bseblockutils.hh, bseblockutils.cc: new files which provide a couple
		utility functions for operations on blocks of floats and ints.

		* tests/blocktests.cc: test the new block utils.

		* bseplugin.c: added hook nodes to allow specialized plugins.

		* bseexports.h: added BseExportNodeHook.

		* bsecxxplugin.hh: added BSE_CXX_REGISTER_STATIC_HOOK() and
		BSE_CXX_REGISTER_HOOK().

		* Makefile.am: fixed up clean rules so stamp files
		are properly deleted and dependent files are properly built.

	Wed Apr 19 02:41:55 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am:
		(CLEANFILES): don't add @PERLRULE@ to CLEANFILES, as this can cause
		its contents to be partially commented out. instead, add
		$(bse_proc_gen_sources) conditionally to MAINTAINERCLEANFILES
		or CLEANFILES, depending on the AM conditional WITH_PERLRULE.

	Sat Apr 15 03:11:18 2006  Tim Janik  <timj@gtk.org>

		* bse/bseplugin.c: use BirnetCPUInfo to determine whether to load
		plugins with .SSE extension.

		* bse/bsemain.[hc]: added BseMainArgs.force_fpu, settable
		via --bse-force-fpu.

	Fri Apr 14 02:18:51 2006  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc: moved everything extern "C" and everything static
		out of the anon namespace. leave just C++ class definitions inside
		namespace anon. this fixes C API linking errors with gcc-4.2.

	Thu Apr 13 23:56:01 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: fixed regeneration of files in srcdir.

		* bseplugin.c: filter out plugins that don't end in .FPU.*.

	Tue Apr 11 23:38:11 2006  Tim Janik  <timj@gtk.org>

		* tests/Makefile.am:
		* Makefile.am: make dist fixes, conditionalize perl rules.

	Sat Apr  8 02:09:15 2006  Tim Janik  <timj@gtk.org>

		* bseloader-mad.c:
		* bseloader-wav.c: use basename instead of full file path for internal
		wave names.

	Tue Apr  4 21:59:39 2006  Tim Janik  <timj@gtk.org>

		* tests/cutvorbis.c:
		* tests/magictest.c:
		* tests/mathtests.c:
		* Makefile.am: removed tools.

		* tests/testfft.c:
		* tests/subnormals.cc: changed to make use of test macros.

	Tue Apr  4 02:06:45 2006  Tim Janik  <timj@gtk.org>

		* tests/Makefile.am: build and check loophandle, got rid of testwavechunk.

	Mon Apr  3 21:51:28 2006  Tim Janik  <timj@gtk.org>

		* tests/subnormals.cc: first test for correctness, then for performance.

	Mon Apr  3 15:50:14 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/subnormals.cc tests/subnormals-aux.cc: Added code which
		verifies that subnormal elimination functions are correct.

	Sun Apr  2 18:19:42 2006  Tim Janik  <timj@gtk.org>

		* bse/Makefile.am: some more dependency and minor build fixes.

	Sun Apr  2 03:31:24 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: merged with gslmakefile.inc. fixed dependencies.
		simplified build rules. integrated with Makefile.decl.

		* *.hh *.cc: removed useless "mode: c++;" statement.
		fixed Bse::* functions being implemented in anonymous namespaces.

		* bsecxxmodule.cc: fixed non-static functions and static assertions.

		* bsecxxmodule.hh: assert the correct object type in the
		BSE_EFFECT_INTEGRATE_MODULE() macro via const_cast<>(this) instead
		of by using bogus namespacing.

		* bseieee754.h: work around gcc-4.2 not allowing "register" unions.

		* bseloader-guspatch.cc: fixed compiler warning.

		* gsldatahandle-mad.c:
		* bseloader-mad.c: include topconfig.h for libmad presence.

		* bsesequencer.cc: use offsetof() instead of G_STRUCT_OFFSET() which
		gcc-4.2 doesn't seem to like.

		* bsesong.c: fixed prototype scope.

		* gslmakefile.inc: removed, merged into Makefile.am.

		* gsldefs.h: include gslconfig.h, don't define BIRNET macros.

		* gslwavechunk.c: fixed variable initialization.

	Sat Apr  1 16:34:48 2006  Tim Janik  <timj@gtk.org>

		* tests/subnormals-aux.cc:
		* tests/subnormals.cc: extended tests.

		* bseieee754.h: renamed denormal-cancellation macros to
		BSE_FLOAT_FLUSH() and BSE_DOUBLE_FLUSH().
		added arithmetic and ?:-operator variants for denormal cancellation.
		use the arithmetic variants by default, which seems to be the fastest
		in most scenrios.

	Sat Apr  1 14:23:57 2006  Tim Janik  <timj@gtk.org>

		* tests/subnormals-aux.cc:
		* tests/subnormals.cc: added pure-arithmetic cancellation test.

	Fri Mar 31 23:44:41 2006  Tim Janik  <timj@gtk.org>

		* bseieee754.h: added bse_float_zap_denormal() and
		bse_double_zap_denormal() to get rid of denormal floating point
		numbers.
		added coarse but faster BSE_FLOAT_FLATTEN() and BSE_DOUBLE_FLATTEN()
		macros to modify denormal float variables.

	Fri Mar 31 21:57:36 2006  Tim Janik  <timj@gtk.org>

		* bseieee754.h: fix BSE_FLOAT_PARTS() and BSE_DOUBLE_PARTS() for C++
		which needs constructors for union casts.

		* tests/subnormals-aux.cc:
		* tests/subnormals.cc: test for subnormal float performance.

	Thu Mar  9 23:38:29 2006  Tim Janik  <timj@gtk.org>

		* tests/*: added missing or changed the license to LGPL.

	Thu Mar  9 02:40:51 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: fix up -pthread -> -lpthread, required for libtool
		library linkage. link against libbirnet.o and libsfi.o.

		* bse/ldscript.map: export birnet symbols.

		* *.[hc]*: adaptions to birnet_ namespace.

	Tue Mar  7 03:04:13 2006  Tim Janik  <timj@gtk.org>

		* ldscript.map:
		* Makefile.am: link libsfi.la and libbirnet.la into libbse.la.
		export only symbols from the public namespaces.

	Sat Mar  4 18:47:30 2006  Tim Janik  <timj@gtk.org>

		* tests/Makefile.am (plottest): added plottest rule
		(moved here from gslmakefile.inc).

		* gslmakefile.inc: removed gsltestoutput test rule.

		* tests/filter-defs.gp: increase precision (10000 samples).

	Sat Mar  4 18:41:59 2006  Tim Janik  <timj@gtk.org>

		* gsl.gnuplot:
		* gslarrows: removed.

	Sat Mar  4 18:41:08 2006  Tim Janik  <timj@gtk.org>

		* tests/filter-defs.gp:
		* tests/arrows.gp: CVS copied.

	Thu Feb 23 23:15:32 2006  Tim Janik  <timj@gtk.org>

		* bseautodoc.c (show_structdoc): fixed records being treated like sequences.

	Wed Feb 15 23:43:08 2006  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: unify pspec output. generate doxer digestible object
		documentation.

	Sun Feb 12 03:01:09 2006  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: write out procedure and structure docu as python
		parsable hash table/tuples. this allowes doxer to generate ordinary
		API documentation from it.

		* bsemain.c: allow script registratrion for bse_init_intern().

		* *.c: added __FILE__ and __LINE__ when registering type blurbs.

		* bseplugin.c:
		* bseexports.h:
		* bsecxxutils.[hc]*:
		* bsescripthelper.[hc]:
		store and pass on file/line information for type blurbs.

		* bsetype.[hc]: store file and line information together with type blurbs.
		adaped IDL compiler pspec constructors.

		* mkcproc.pl: generate type blurb with file/line information.

	Sat Jan 21 18:50:44 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatacache.[hc]: Change caching code to handle 64 bit offsets.

	Fri Jan 20 14:46:43 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldefs.h: GslLong is now 64-bit on any platform (before, it was
		only 64 bit on 64 bit platforms).

		* tests/testwavechunk.c:
		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatautils.c:
		* gslwavechunk.c:
		* gslwaveosc.c: Adapted printf format strings to the GslLong change
		("%ld" -> "%lld").

		* gsldatahandle.[hc]: Changed GslLong -> int64.

	Fri Dec 23 00:57:58 2005  Tim Janik  <timj@gtk.org>

		* bseconstvalues.h: provide BSE_MIN_TRANSPOSE and BSE_MAX_TRANSPOSE
		which currently allow a transposition range of 2 * 72 semitones, i.e.
		+- 6 octaves.

		* bseglobals.h: implement BSE_TRANSPOSE_FACTOR() which provides
		the transposition factor for a semitone in the range -72..0..+72.
		implement BSE_FINE_TUNE_FACTOR() and BSE_SEMITONE_FACTOR() in terms
		of bsemathsignal.h functions.

		* bseglobals.c: removed transposition and fine tune factor tables.

		* bsemathsignal.c: added double precision tables for cent fine tune
		factors and transposition by +-11 octaves. removed slow and sub-accurate
		table initialization routines.

		* bsemathsignal.h: const fixes for factor table pointers. added
		transposition factor function for +-11 octaves.

		* bsestandardosc.c: added transpose property.

		* gsloscillator-aux.c, gsloscillator.h: added config setting for
		transposition in semitones.

	Thu Nov 17 18:10:56 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.[hc]: Added new argument to gsl_filter_fir_approx, to
		enable interpolation not "value linear" between the values in the
		transfer functions, but "dB linear".

		* tests/mathtests.c: Changed due to gsl_filter_fir_approx API change.

	Sat Jul 23 17:04:06 2005  Tim Janik  <timj@gtk.org>

		* bseutils.c:
		bse_icon_from_pixdata(): fixed overrun checks.

	Wed Jun 22 23:12:00 2005  Tim Janik  <timj@gtk.org>

		* bseamplifier.cc: changed exponential volume curve from qcircle2 (which
		aparently was false, compared to other exponential volume amplifiers) to
		bse_approx_qcircle4().

		* bse/bsewave.h, bse/bsewave.c: allow velocity dependent wave index
		lookups, seperate osc_freq and velocity values used for lookups from
		GslWaveChunk. adapted related code portions.

		* gslwaveosc.c: wave chunk lookups currently are done with a hardcoded
		velocity of 1.

	Wed May 25 21:48:22 2005  Tim Janik  <timj@gtk.org>

		* bsecore.idl: added stamp_ticks to record SongTiming.

		* bsesong.c: fill in stamp_ticks field of BseSongTiming struct.

		* bsejanitor.c: added ::shutdown signal, similar to the old ::closed
		signal, but signals the start of connection take down, so the connection
		doesn't have to be closed.

		* bseserver.proc: use BseJanitor::shutdown for script registration.

	Mon May 23 19:37:50 2005  Tim Janik  <timj@gtk.org>

		* bsecore.idl: added MidiChannelEventType and MidiChannelEvent to export
		midi events.

		* bseproject.h, bseproject.c, bseproject.proc: allow fetching a projects
		midi notifier.

		* bsejanitor.[hc]: removed user-msg* properties and added status
		message string property. removed ::close signal (which was unused and
		stopped to provide proper notification).

		* bsejanitor.proc: removed msg type from bse-script-set-status.

		* bsemidireceiver.hh, bsemidireceiver.cc: removed notifier getter.
		notify events in the correct order. properly wake up midi notifiers.

		* bsemidinotifier.[hc]: emit notification about MIDI events, using a
		MidiChannelEvent structure.

		* bsemidievent.c: removed cruft.

		* bseserver.c: setup midi notifier main loop source.

		* bseglue.[hc]: removed rorecord and rosequence type registration
		which were now unused.

	Sat May 21 02:39:14 2005  Tim Janik  <timj@gtk.org>

		* bsemain.[hc]: introduced bse_init_textdomain_only(), which is used
		internally and is usefull for programs like bsesh.

		* bsescripthelper.c: translate script blurb and script parameter names
		which are not translated by the scripts themselves. the reason is that
		scripts shouldn't translate any strings during procedure registration
		phase (only markup for translation). this allowes us to generate
		reliable keywords for parameter names and procedure categories from
		the english names, and provide the translated version by deferred
		translation.

	Thu May 19 23:07:12 2005  Tim Janik  <timj@gtk.org>

		* bsecore.idl: renamed UserMsgType to MsgType and synced message types
		with SFI message types. renamed UserMsg to Message. added message type
		identifier and label to Message.

		* bsejanitor.proc: removed janitor arg from script internal methods.
		renamed script internal methods to bse-script- procedures. changed
		message handling to not require a round trip (for janitor handle) and
		to support all fields of BseMessage.

		* bseserver.h, bseserver.c: print out messages emitted as ::message
		signal via sfi_msg_default_handler().

		* *.h, *.c: adapted to new message and debugging API.

	Mon May 16 21:01:35 2005  Tim Janik  <timj@gtk.org>

		* bsejanitor.c: try early reaping of child. removed unneccessary
		::notify::connected notification.

		* bseglue.c: use g_warning() for procedure invocation errors so
		this can be properly traced in a debugger.

	Mon May 16 20:12:51 2005  Tim Janik  <timj@gtk.org>

		* bsecore.idl: added janitor to UserMsg.

		* bsemain.c: add janitor to user messages.

		* bseserver.h, bseserver.c: made bse_server_user_message() reflect
		(newly added) UserMsg fields.

		* bsejanitor.proc: added (bse-janitor-message) to allow scripts to send
		real error, warning etc. messages.

	Mon May 16 17:27:49 2005  Tim Janik  <timj@gtk.org>

		* bsejanitor.h, bsejanitor.c, bsejanitor.proc:
		added exit-code and exit-reason properties. logic cleanups so the
		exit state is available for read outs once connected becomes FALSE.
		API change so script_name and proc_name are always set together.

	Sat May 14 20:52:56 2005  Tim Janik  <timj@gtk.org>

		* bseserver.c: improved error messages.

		* bsedevice.c, bsedevice.h:
		bse_device_set_opened(): enter OPEN state, stores device name.
		device_open_args(): store device opening argument list, assert
		bse_device_set_opened() is used.
		bse_device_close(): cleanup device anme and device opening arguments.

		* bseproject.proc: renamed bse-project-dirty to bse-project-is-dirty
		to circumvent name coliisions in the C++ binding.

		* bse*device-*.c: use bse_device_set_opened().

		* *.c: adaptions to sfilog.h API changes.

	Thu May 12 00:13:05 2005  Tim Janik  <timj@gtk.org>

		* bseserver.h, bseserver.c: support emission of user mesage signal
		without constructing a user message via bse_server_send_user_message().
		turned log messages about failure during PCM and MIDI device selection
		into rich log message with primary, secondary text and details.

		* bsecore.idl: adapted UserMsg record according to SfiLogMessage.

		* bsemain.h, bsemain.c: adapted log handler.

	Wed May 11 15:01:28 2005  Tim Janik  <timj@gtk.org>

		* bseproject.proc: added change-name() to alter a project name without
		affecting undo.

	Mon May  9 21:05:02 2005  Tim Janik  <timj@gtk.org>

		* bseproject.h, bseproject.c: properly implemented project dirty
		state, based on the project's undo stack.

		* bseproject.proc: added procedures to query and reset project
		dirty state.

		* bseundostack.h, bseundostack.c: implemented dirt counter plus
		counter modification methods.

	Mon May  9 18:24:00 2005  Tim Janik  <timj@gtk.org>

		* bsewave.c (bse_wave_get_index_for_modules): fixed stupid bug that
		caused every second sample to be lost when saving.

	Thu May  5 19:03:41 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_put_data_handle): fix floats being saved via
		localized printf(), instead of locale-independent putf/putd methods.

	Tue Apr 19 16:30:51 2005  Tim Janik  <timj@gtk.org>

		* Makefile.am, gslmakefile.inc: fixed gsl headers not being uninstalled.

	Tue Apr 19 15:44:46 2005  Tim Janik  <timj@gtk.org>

		* bsedefs.h: prototype BseLoader structures.

		* bseloader.h, bseloader*.c:
		* tests/magictest.c, tests/mathtests.c: loader rename to Bse.

		* bsepcmwriter.c, bseserver.proc, bseutils.c, bsewave.c:
		* bsewaverepo.proc, gsldatautils.c, gsldatautils.h: renamed loader
		and wave file from gsl to bse.

		* gslloader.c, gslloader.h:
		* gslloader-wav.c, gslloader-oggvorbis.c:
		* gslloader-aiff.c, gslloader-bsewave.c, gslloader-mad.c: removed.

		* gslmakefile.inc: removed gslloader files and local install hook.

	Tue Apr 19 14:39:39 2005  Tim Janik  <timj@gtk.org>

		* bseloader.h: CVS copied from gslloader.h.
		* bseloader.c: CVS copied from gslloader.c.
		* bseloader-aiff.c: CVS copied from bseloader-aiff.c.
		* bseloader-bsewave.c: CVS copied from gslloader-bsewave.c.
		* bseloader-mad.c: CVS copied from gslloader-mad.c.
		* bseloader-oggvorbis.c: CVS copied from gslloader-oggvorbis.c.
		* bseloader-wav.c: CVS copied from gslloader-wav.c.

	Sun Apr 10 23:23:27 2005  Tim Janik  <timj@gtk.org>

		* bsebus.h, bsebux.c: save syncronization state across restore.
		re-syncronize in restore_finish if required.

		* bseobject.h, bseobject.c: introduced restore_start and resotore_finish
		methods, and IN_RESTORE state.

		* bsestorage.h, bsestorage.c: call restore_start before restoring
		objects and call restore_finish after restoring.

	Mon Mar  7 08:35:41 2005  Tim Janik  <timj@gtk.org>

		* renamed every occourance of *.gen-idl.h (C++ headers generated from
		idl files) to *.genidl.hh.

	Mon Mar  7 07:55:46 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

		* adapted sources to compile against .hh C++ headers.

	Tue Mar  1 15:24:23 2005  Tim Janik  <timj@gtk.org>

		* bsemidievent.c (bse_midi_signal_default): fixed wrong division for
		CONTINUOUS_11 default value.

	Sat Feb  5 14:46:13 2005  Tim Janik  <timj@gtk.org>

		* bseloader-guspatch.cc: disabled gus-patch specific xinfos, so gus
		patch files are currently treated like ordinary samples.

	Sat Jan 29 16:58:38 2005  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc: work around compiler/linker bugs on SuSE 9.2.

	Sat Jan 29 01:00:37 2005  Tim Janik  <timj@gtk.org>

		* bseloader-guspatch.cc (bse_init_loader_gus_patch): changed magic to
		match v1.0 and v1.1 directly.

	Tue Jan 25 00:51:29 2005  Tim Janik  <timj@gtk.org>

		* bsewave.c (bse_wave_store_private): don't store empty xinfos.

	Mon Jan 24 22:59:12 2005  Tim Janik  <timj@gtk.org>

		* bseloader-guspatch.cc (fread_dword): fixed error codes and mixed case
		function names.

	Mon Jan 24 22:49:16 2005  Tim Janik  <timj@gtk.org>

		* bseloader-guspatch.cc: fixed function linkage and missing newlines.

	Mon Jan 24 22:38:21 2005  Tim Janik  <timj@gtk.org>

		* bseproject.proc: implemented bse_project_inject_midi_control() to
		submit extra midi events into a playing project.

		* Makefile.am: added bseloader-guspatch.cc.

		* bseloader-guspatch.cc:
		* gslcommon.[hc]: initialize guspatch loader with
		bse_init_loader_gus_patch().

		* bsemididecoder.c:
		* bsemidievent.c: zero initialize newly allocated midi events.

		* bsetrack.c: wording fixup.

	Fri Jan 21 00:48:43 2005  Tim Janik  <timj@gtk.org>

		* bsepart.proc: added bse-part-select-controls().

	Thu Jan 20 17:52:14 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c: removed position arguemnt
		from wstore_data_handle_reader(), adsed data length counter.

		* gsldatahandle-vorbis.c: removed position arguemnt
		from vorbis1_handle_reader().

		* gsldatautils.c: removed position arguemnt
		from wstore_context_reader(), adsed data length counter.

	Thu Jan 20 17:12:24 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c: use sfi_wstore_putf() and sfi_wstore_putd() internally.
		bse_storage_put_data_handle(): don't use printf and %g to store floats,
		but use bse_storage_putf() so floats are stored locale independant.

	Thu Jan 20 15:18:53 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_printf): issue warnings if the format string
		contains localised directives.

	Thu Jan 20 05:10:27 2005  Tim Janik  <timj@gtk.org>

		* gslcommon.c (gsl_error_from_errno): return BSE_ERROR_NONE for an
		errno of 0.

		* bseproject.c (bse_project_store_bse): pass on storage errors.

		* bsestorage.c (bse_storage_flush_fd): pass on storage errors.

	Thu Jan 20 04:21:53 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c (restore_item_property): generate proper warnings
		for non-writable properties.

		* bsestandardosc.c (bse_standard_osc_class_init): disabled self
		modulation mode which only produces huge amounts of aliasing.

	Thu Jan 20 01:28:59 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* bseloader-guspatch.cc: Make more data found in the GUS Patch headers
		available as xinfos.

	Thu Jan 20 00:30:50 2005  Tim Janik  <timj@gtk.org>

		* bse/gslloader-bsewave.c: changed BseWave magic to "#BseWave1".

	Thu Jan 13 21:35:38 2005  Tim Janik  <timj@gtk.org>

		* gsldatautils.[hc]: added gsl_data_make_fade_ramp() and
		gsl_data_clip_sample().

		* bseenums.[hc]: turn FILE_EMPTY into its own error code, added
		BSE_ERROR_DATA_UNMATCHED.

		* gsldatahandle.c (insert_handle_close): don't free xinfo pointer
		which we merely copied (but didn't deep-duplicate) upon open.

	Wed Jan 12 02:08:21 2005  Tim Janik  <timj@gtk.org>

		* bsecore.idl: added part link structure and sequence.

		* bsepart.[hcp]*: added ::links-changed signal for asyncronous
		notification of part link changes. added procedurte to list all
		part links, sorted by tick stamps. fixed idle handler maintenance.

		* bsetrack.c: properly notify parts about part link changes.
		added bse_track_list_part().

	Sat Jan  8 04:44:14 2005  Tim Janik  <timj@gtk.org>

		* gslloader-pat.cc: removed.

	Sat Jan  8 04:43:00 2005  Tim Janik  <timj@gtk.org>

		* bseloader-guspatch.cc: CVS copied from gslloader-pat.cc.

	Fri Jan  7 02:53:05 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Reimplemented data_offset storing in a way that is
		both: fairly readable in the code, and based on the new style
		loader_data array that replaces the loader_offset field.

	Fri Jan  7 02:01:11 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c: store Ogg/Vorbis data handles with increasing serialnos.

		* gsldatahandle-vorbis.[hc]: enforce specification of a serialno when
		creating a store handle with gsl_vorbis1_handle_new().
		gsl_vorbis_make_serialno(): new function which generates unique
		serialnos (per program runtime).

		* gslvorbis-cutter.[hc]: allow overriding the output serialno (by
		default the same as the input) with a specific serialno via
		gsl_vorbis_cutter_force_serialno().
		gsl_vorbis_cutter_unfilter_serialno(): removed.

	Fri Jan  7 01:11:04 2005  Tim Janik  <timj@gtk.org>

		* bsewave.header: fixed midi-note docs.

		* gsldatahandle.c: removed midi-note xinfo handling, this doesn't
		belong here.

		* gslloader-bsewave.c: fixed osc-freq parsing. fallback to midi-note
		frequency specification if osc-freq is not given.

	Thu Jan  6 23:44:54 2005  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc]: removed unused QData.

	Thu Jan  6 23:28:03 2005  Tim Janik  <timj@gtk.org>

		* gslloader-bsewave.c: removed <= 0.6.4 compat code, since we haven't
		released .bsewave files of that kind yet.

	Thu Jan  6 23:03:36 2005  Tim Janik  <timj@gtk.org>

		* bse/gslloader-pat.cc:
		* bse/bsetrack.c: use "gus-patch" play-type.

		* zintern/mono-wave.bse:
		* zintern/gus-patch-mono.bse: removed.

		* zintern/gus-patch.bse: removed "-mono" suffix from object.

	Thu Jan  6 23:02:30 2005  Tim Janik  <timj@gtk.org>

		* zintern/gus-patch.bse: CVS copied from gus-patch-mono.bse.

	Thu Jan  6 22:27:53 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Fix compilation: reintroduce data_offsets, as the
		loader_offset field is no more. Changed xinfos of envelopes to
		single comma delimited lists of floats.

	Thu Jan  6 19:51:36 2005  Tim Janik  <timj@gtk.org>

		* bsewave.[hc]: keep inlined data handles opened, to protect against
		.bse file overwriting.

		* bsestorage.c (bse_storage_add_dblock): keep opened data handles
		open to protect against overwriting.

	Thu Jan  6 18:37:16 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.c: store/parse Ogg/Vorbis data handles as in compressed
		form, rather than unpacked.

		* bsewave.[hc]: removed wave chunk url structures which were unused
		anyway. store waves in order, sorted by oscillator frequency. use
		SfiRing to hold the list of wave chunks.

		* gsldatahandle-vorbis.[hc]: allow peeking of mix_freq from
		gsl_data_handle_new_ogg_vorbis_zoffset(). added convenience function
		gsl_vorbis1_handle_put_wstore().

		* gslloader-bsewave.c: use "vorbis-link" as keyword for inlined
		Ogg/Vorbis streams. minor cleanups.

	Wed Jan  5 01:10:54 2005  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]: added BSE_ERROR_WRONG_N_CHANNELS.

		* gslloader-bsewave.c: make sure that chunks carry the required number
		of channels.

		* gsldatahandle-vorbis.c: pass on number of channels for
		gsl_data_handle_new_ogg_vorbis_zoffset() handles.

		* bsewave.c: slight warning fixup.

	Mon Jan  3 23:59:39 2005  Tim Janik  <timj@gtk.org>

		* bsewave.header: document format changes.

		* gslloader-bsewave.c: rewrote parsing code, cleaned up token list,
		make use of xinfos. properly identify auto-detect and raw-sample files.

		* bseutils.[hc]: added bse_xinfos_parse_assignment().

		* gslloader.h: extended wave chunk data fields.

	Sun Jan  2 14:41:59 2005  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]:
		bse_storage_put_xinfos(): save xinfo arrays.
		bse_storage_parse_xinfos(): load xinfo arrays.

		* bsewave.[hc]: cleanups, removed per-chunk locator logic. added
		finalize, added bse_wave_clear(). save and parse xinfo strings.
		bse_wave_load_wave_file(): clear wave before loading, set locator
		after successfull loading.

		* bsewaverepo.proc: use bse_wave_load_wave_file().

	Mon Jan 3 11:31:14 2005 Stefan Westerfeld <stefan@space.twc.de>

		* gslloader-pat.cc: Since "the double free with gslloader.c" is fixed
		in gslloader.c now, we don't need our mini workaround any longer.

	Sun Jan  2 15:26:55 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetrack.c: Use different playback networks for GUS Patches and
		normal waves, depending on play-type xinfo string.

		* bsewave.h: Add xinfos field (needs implementation).

		* gslloader-pat.cc: Set play-type to "gus-patch-mono".

	Sun Jan  2 15:23:35 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* zintern/Makefile.am:
		* zintern/zintern.c: Use Scheme identifier style for zintern names.

		* zintern/gus-patch-mono.bse: Add a network for GUS Patch playback.

	Sun Jan  2 11:41:05 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: GUS Patches are only mono patches.

	Sat Jan  1 21:59:43 2005  Tim Janik  <timj@gtk.org>

		* bseutils.[hc] bse_xinfos_dup_consolidated(): added flag to indicate
		whether internal xinfos should be copied.

		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatahandle.[hc]:
		* gslloader-bsewave.c:
		moved bit_depth, mix_freq and needs_cache (back) into the
		GslDataHandleSetup structure, because they are an integral part of
		all wave data storage formats. turned osc-freq into a custom xinfo
		string, because it is not.

	Sat Jan  1 21:20:03 2005  Tim Janik  <timj@gtk.org>

		* zintern/wave-mono.bse: CVS copied from mono-wave.bse.

	Fri Dec 31 16:39:21 2004  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc]: removed bit_depth, osc_freq and mix_freq from
		GslDataHandleSetup, removed gsl_data_handle_override(). these
		values are accessible throuzgh accessors and stored in xinfos now.

		* gslloader-bsewave.c: provide osc-freq via xinfo.

		* gsldatahandle-vorbis.c:
		* gsldatahandle-mad.c: set bit-depth, osc-freq and mix-freq via xinfos.

	Fri Dec 31 13:44:16 2004  Tim Janik  <timj@gtk.org>

		* gsldatahandle.c:
		(gsl_wave_handle_new_zoffset):
		(gsl_wave_handle_new): provide dhandle xinfos without creating
		an extra data handle.

	Fri Dec 31 13:32:47 2004  Tim Janik  <timj@gtk.org>

		* bseutils.c (bse_xinfos_dup_consolidated): duplicate xinfo array and
		remove empty/removal xinfos (i.e. "foo=" infos).

	Fri Dec 31 01:40:33 2004  Tim Janik  <timj@gtk.org>

		* gsldatahandle-vorbis.c: cleanups. implemented GslVorbis1Handle which
		can be used to store the compressed Ogg/Vorbis data of an Ogg/Vorbis
		GslDataHandle. this uses GslVorbisCutter internally to properly rewrite
		the Ogg stream.

		* gslvorbis-cutter.[hc]: support non-cutting mode. support specification
		of the logical bitstream to process by setting a serialno filter.

		* tests/cutvorbis.c: added option handling for -s,-p-k,-S.

		* gslloader-bsewave.c: allow loading of waves with an empty chunk list.

		* gslloader.[hc]: support loading of waves with empty chunk list.

		* gslcommon.c (gsl_error_from_errno): handle ENODATA.

	Thu Dec 30 17:06:29 2004  Tim Janik  <timj@gtk.org>

		* gslloader.c (gsl_wave_dsc_free): remove bogus struct modification.

	Thu Dec 30 04:05:50 2004  Tim Janik  <timj@gtk.org>

		* gslloader.c (gsl_wave_dsc_free): removed bogus g_strfreev().

	Wed Dec 29 22:24:51 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader.h:
		* gslloader-pat.cc: Code cleanups and better error handling.

	Wed Dec 29 12:52:01 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsestorage.c: Include "gslcommon.h" for gsl_byte_order_to_string.
		This fixes a segfault (and compile warning) on AMD64.

	Wed Dec 29 11:37:55 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Use the new xinfo API.

		* bseieee754.h: Fix compiler warnings in bse_ftoi/bse_dtoi on AMD64.

	Wed Dec 29 04:06:07 2004  Tim Janik  <timj@gtk.org>

		* gsldatacache.[hc]: tweaked caching algorithm, so 25% cache memory of
		low persistency data handles is kept upon cache sweeps, this makes the
		low persistency cache mode attractive enough for e.g. WAV files.
		changed flags, there's a high_persistency flag now which is valid only
		for opened data caches.

		* gsldatahandle-vorbis.c:
		* gsldatahandle-mad.c: set .needs-cache xinfo flag.

		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatahandle.h:
		* gsldatahandle.c:
		data handle cleanups and vtable consolidations. introduced
		gsl_data_handle_get_source() which returns the source data handle if
		availabele. the source data handle must have the exact same length and
		values like the originating data handle to validly be handed out.
		gsl_data_handle_needs_cache(): implemented in terms of returning
		the .needs-cache xinfo flag.
		gsl_wave_handle_new_zoffset():
		gsl_wave_handle_new(): on __linux__, unset the .needs-cache xinfo
		flag on wave handles to spare cache performance for OGGs and MP3s.

		* bseutils.[hc]: moved *_xinfo_* accessor functions here.

	Mon Dec 27 23:59:19 2004  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc]: added xinfos[] array to opened data handles.
		added gsl_data_handle_new_add_xinfos(),
		gsl_data_handle_new_remove_xinfos() and
		gsl_data_handle_new_clear_xinfos() to control the xinfos of a data
		handle after loading.
		added xinfos[] field to gsl_wave_handle_new_zoffset() and
		gsl_wave_handle_new().

		* gslloader-bsewave.c: support parsing of xinfos["key"] = "value"
		statements.

		* gslloader.[hc]: introduced xinfos for loader structures, provided
		xinfos accessors. removed authors, license, blurb (comment) and
		looping fields. this data is taken care of by xinfos now.

		* gslloader-oggvorbis.c:
		* gslloader-bsewave.c:
		* gslloader-wav.c:
		* gslloader-mad.c:
		* gslloader-aiff.c: provide chunk->xinfos instead of accessing
		chunk fields. support data-handles with xinfos.

		* bseenums.[hc]: merged error enums with GslErrorType.

		* gsldefs.h:
		* gslcommon.[hc]: removed GslErrorType specific code.
		include bseenums.h.

		* bsemain.h: include fixes.

		* tests/*.c:
		* *.c: BseErrorType enum fixups.

	Mon Dec 27 00:12:44 2004  Tim Janik  <timj@gtk.org>

		* gslloader-bsewave.c (gsl_wave_token): fix off-by-one error in reverse
		token lookup.

	Sun Dec 26 19:23:05 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Fixes/Code cleanups: the deinitialization
		code (freeing, closing files and so on) should work now.

	Sun Dec 26 13:04:02 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslwaveosc-aux.c: Fix ping pong looping: the code now should behave
		correctly for backward playing (negative block dirstride).

	Sat Dec 25 17:14:15 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Handle format field correctly (support 8bit and
		unsigned samples). Fix bug in tuning.

	Fri Dec 24 22:39:48 2004  Tim Janik  <timj@gtk.org>

		* bsecontainer.c (bse_container_remove_backedup): force project
		deactivation for choldren with automation properties, because
		automation properties can't be setup on prepared objects.

		* bseproject.[hcp]*: export undo-stack deactivation function
		bse_project_push_undo_silent_deactivate(), so other code portions
		can force project deactivation for specific undo steps.

		* bsecxxplugin.hh: export *_choice_values() getter when declaring
		enumeration types.

		* bseplugin.c: provide choice value getter for exported enum types.
		register enum transform functions for dynamic enum types (allowed
		since glib-2.4).

		* bseenginemaster.c: first discard the engine schedule, then
		modify the master node list, so the old schedule doesn't point
		at dangling nodes.

		* bsemath.[hc]: added bse_float_gnuplot() to ease debugging.

		* bseexports.h: added *_choice_values() getter function to
		BseExportNodeEnum.

		* bsemathsignal.[hc]: documentation updates.

	Fri Dec 24 15:26:58 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Added initial implementation of a GSL loader for
		GUS patches (like those usually used in timidity patch sets).

	Mon Dec 20 19:51:07 2004  Tim Janik  <timj@gtk.org>

		* bsemathsignal.h: removed bse_approx_exp2() and bse_signal_exp2().
		added bse_approx2_exp2() .. bse_approx9_exp2() functions to approximate
		2^x with varying precision and speed.
		added bse_approx2_tanh() .. bse_approx9_tanh() functions to approximate
		tanh(x) with varying precision and speed.
		added bse_saturate_hard() and bse_saturate_branching() to implement
		fast CLAMP()-ing.

	Sun Dec 19 13:44:43 2004  Tim Janik  <timj@gtk.org>

		* bseparam.[hc]: added minimum and maximum parameters to
		bse_param_spec_freq().

		* bsetype.h: turned Frequency() parameters into logarithmic properties.

	Sat Dec 18 23:58:04 2004  Tim Janik  <timj@gtk.org>

		* bseconstvalues.h: constant cleanups, removed _f and _d postfixes and
		superfluous casts.

		* bseglobals.h: removed deprectaed constants. deprecated time ranges
		which are badly choosen and ADSR specific.

		* bsemathsignal.h: consolidation of signal<->frequency
		conversion macros.

		* bseutils.h: define bbuffer size.

	Fri Dec 17 21:19:25 2004  Tim Janik  <timj@gtk.org>

		* bsecxxutils.hh: removed assert_derivation() and assert_ptr_derivation().
		added template class EnforceDerivedFrom<>; with partial derivation to check
		for type derivations and pointers tehreof. implemented assert_derived_from<>()
		in terms of class EnforceDerivedFrom<>; so it can check for derivation of
		types and pointers thereof (without needing a partial specialization of
		a function template which C++ doesn't allow).

		* bsestandardosc.c (bse_standard_osc_class_init): added missing descriptions.

	Thu Dec 16 02:11:26 2004  Tim Janik  <timj@gtk.org>

		* gsldatautils.h:
		gsl_conv_from_double_clip():
		gsl_conv_from_double():
		gsl_conv_from_float_clip():
		gsl_conv_from_float(): use bse_dtoi() for double->int conversion to
		get faster rounding and to avoid C++ warnings.

	Wed Dec 15 23:58:50 2004  Tim Janik  <timj@gtk.org>

		* zintern/mono-wave.bse: adapt to beast 0.6.4. this fixes song compat
		code adding extra track->master connections to tracks using wave files.

	Mon Dec 13 15:31:37 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocidl.cc bsecore.idl: Info strings should be lower case.

	Sun Dec 12 19:47:32 2004  Tim Janik  <timj@gtk.org>

		* removed gslwave.header and gslloader-gslwave.c, build from
		gslloader-bsewave.c.

	Sun Dec 12 19:38:22 2004  Tim Janik  <timj@gtk.org>

		* bsewave.header: CVS copied from gslwave.header.

		* gslloader-bsewave.c: CVS copied from gslloader-gslwave.c.

	Sun Dec 12 18:55:36 2004  Tim Janik  <timj@gtk.org>

		* bseenginemaster.c:
		* bseengineutils.c:
		general fixups to ensure probe/flow/boundary jobs are collected
		in order and are given precedence over collecting transaction jobs.

		* bseenginenode.h: turned probe jobs, acces jobs and boundary jobs into
		a single union EngineTimedJob. this avoids breaking strict aliasing
		rules which results in wrong code generation with gcc-3.3 and gcc-3.4.
		adapted all structure usages.

	Sun Dec 12 03:13:17 2004  Tim Janik  <timj@gtk.org>

		* bseengineutils.c: make sure pending user trash jobs are collected
		before ordinary trash jobs are collected.

		* bsesource.[hcp]*: added bse_source_has_output().

	Sat Dec 11 22:45:46 2004  Tim Janik  <timj@gtk.org>

		* bsepart.c (bse_part_restore_private): parse velocity as int as well as float.

	Sat Dec 11 15:35:16 2004  Tim Janik  <timj@gtk.org>

		* bseengine.[hc]: added block-size argument to probe callback.

		* bseenginemaster.c: properly probe unscheduled nodes. optimized
		probing by keeping a list of nodes with probe jobs.
		altered probe job value counter maintenance.
		clean up probe jobs upon discarding.

		* bseengineutils.c: assert NULL probe jobs on discarded nodes.

		* bseprobe.cc: properly handle probes from unscheduled nodes.

	Fri Dec 10 15:24:35 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: fixed bugs, print out signals. print out
		all BSE objects.

		* bseprobe.idl, bseprobe.cc: deliver mix frequency with probes.

	Mon Dec  6 23:46:11 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.cc: block-size computation fixups. this fixes ffts beyond
		block boundaries.

	Mon Dec  6 22:47:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseplugin.h: To allow implementing C-style plugins in C++ sources,
		as required for the PortAudio driver, declare extern "C" linkage for
		the symbol defined by BSE_DEFINE_EXPORTS when compiled within a C++
		source. The extern "C" code was taken from bsecxxplugin.hh.

	Fri Dec  3 21:31:26 2004  Tim Janik  <timj@gtk.org>

		* bsewaverepo.proc: don't override detailed errors.

		* gsldatahandle-mad.[hc]: provide GslErrorType errors instead of
		strings. added gsl_data_handle_new_mad_err(), improved debugging.

		* gslloader-mad.c: pass on errors.

	Mon Nov 29 21:45:25 2004  Tim Janik  <timj@gtk.org>

		* bseenginemaster.c: append probe jobs upon insertion, so probe data
		isn't mixed up between multiple probe jobs, and probe jobs are
		processed in order.

		* bseprobe.cc: normalize fft by multiplying with 1/n.

		* bseutils.[hc]: added bse_debug_dump_floats() to easily dump debugging
		wave data to a file in /tmp/.

	Sat Nov 27 20:02:04 2004  Tim Janik  <timj@gtk.org>

		* engine-mplan.txt: * reflect renames in the code base

	Sat Nov 27 18:57:11 2004  Tim Janik  <timj@gtk.org>

		* bsepcmwriter.c (bse_pcm_writer_open): truncate .wav files when
		opening. wrtie out the initial wav header with a very long data
		block size, so abortion of the wav saving process (which needs
		adaption of the data size later on) leaves a wav file with
		non-0 data block length. (required for most programs to read
		wav files).

	Sat Nov 27 18:39:38 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.idl:
		* bseprobe.cc: implemented blackman windowed fft probes.
		added support for varying probe block sizes.
		removed artifical delay at probe start.

	Sat Nov 20 07:29:15 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.cc: shorten probe-queue length to 3 subsequent requests,
		this should be sufficient to account for GUI scope request jitter
		of approximately 1 block in size.

	Wed Nov 17 01:19:53 2004  Tim Janik  <timj@gtk.org>

		* bseengine.c (bse_engine_constrain): don't align block sizes to
		powers of 2, but simply to 4 to utilize CPU better.

	Mon Nov 15 18:11:10 2004  Tim Janik  <timj@gtk.org>

		* bseengine.c (bse_job_integrate): set a flag to indicate node ownership
		by the job.

		* bseengineutils.c (bse_engine_free_job): free job-owned nodes.

		* bseenginemaster.c (master_process_job):
		(ENGINE_JOB_INTEGRATE): take over node ownership from job.
		(ENGINE_JOB_DISCARD): pass on node ownership to job.

		* bseenginenode.h: use an anonymous union in BseJob, adapted users.

	Mon Nov 15 15:18:01 2004  Tim Janik  <timj@gtk.org>

		* bseengineutils.c: manage transaction trash list with a FIFO rather
		than a stack, so execution order of user-callbacks and free handlers
		is preserved.

	Sun Nov 14 15:32:57 2004  Tim Janik  <timj@gtk.org>

		* bseengine.[hc]: documentation updates.
		bse_job_boundary_discard(): implemented jobs to discard modules deferred.

		* bsemidireceiver.cc: use bse_job_boundary_discard() to discard modules,
		since extra jobs may be queued asyncronously from process()implementations.

	Sat Nov 13 20:12:23 2004  Tim Janik  <timj@gtk.org>

		* bsecompat.c: added compat for DavChorus and DavBassFilter.

	Sat Oct 30 13:40:13 2004  Tim Janik  <timj@gtk.org>

		* bsebusmodule.idl:
		* bsebusmodule.cc:
		* bsebus.c: turned left and right volume properties into real-valued
		db-volume properties.

		* bseglobals.h:
		* bsecore.idl: provide MINDB constant.
		got rid of unused constants.

		* bsesong.hc]: removed unused volume properties.

		* bsetype.h: provide DBVolume pspec constructor.

		* bseamplifier.idl:
		* bseamplifier.cc: added db-volume property ::master_volume. turned
		::olevel into a compat property. documented last supporting version
		for compat properties.

	Sat Oct 16 11:17:21 2004  Tim Janik  <timj@gtk.org>

		* bsetrack.proc: provide ensure-output() which connects to master bus.

		* bsesong.[hc]:
		provide bse_song_ensure_master().
		bse_song_compat_finish(): auto-connect old tracks to master bus.

		* bsesong.proc: removed ensure-output-busses() which is really just
		internal compat code.

		* bseproject.c:
		bse_project_restore(): allow supers to perform compat actions after
		restoring from file.

		* bsesuper.[hc]: added compat_finish() class method.

	Sat Oct 16 10:02:06 2004  Tim Janik  <timj@gtk.org>

		* bsebus.proc: added ensure-output() to ensure a master bus connection.

		* bsesong.proc:
		remove-bus(): fixed up loosing ::master-output property across undo.
		get-master-bus(): don't create a master bus.
		ensure-master-bus(): create a master bus if required.

	Sat Oct 16 08:34:40 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: allow ::solo property editing on master.

		* bsesong.c: allow master as solo track which makes sense since tracks,
		can be connected directly to master. don't mute master if another track
		is the solo track.

	Sat Oct 16 00:50:40 2004  Tim Janik  <timj@gtk.org>

		* bseproject.[hc]: provide bse_project_clear_undo().

		* bsesong.proc: clear undo after ensuring bus, track and part
		connectivity, since we don't maintain proper undo state across
		these operations. implemented ensure-track-links().
		added find-any-track-for-part() which is faster than
		find-track-for-part() and can be used for orphaned part checks.

		* bsetrack.[hc]: provide bse_track_get_last_tick().

		* bsetrack.proc: added list-parts-uniq().

		* bseutils.[hc]: provide bse_item_seq_from_ring().

		* bseprobe.cc:
		* bsebus.c: adapt to sfi changes.

	Fri Oct 15 03:55:11 2004  Tim Janik  <timj@gtk.org>

		* bsepart.c: fixed negative control events and fine tune parsing.

		* bsewaveosc.[hc], bsewaveosc.proc: introduced channel property
		to control playback channel for multi-channel samples (stereo).
		changed seek-API to support syncronous seeking of multiple wave
		oscillators.

		* gslwaveosc.c, gslwaveosc-aux.c: properly clamp the configured channel.

	Fri Oct 15 01:27:52 2004  Tim Janik  <timj@gtk.org>

		* bsesnet.c: don't serialize auto-activate=#f property value.

		* bsesource.c: reduce serialization precision for pos-x/y to float.

	Fri Oct 15 01:13:56 2004  Tim Janik  <timj@gtk.org>

		* bsemidisynth.c: request polyphonic voice processing for the
		selected midi channel.

		* bseproject.c: stay in playback mode even if only snets and no song
		need processing.

	Wed Oct 13 21:28:37 2004  Tim Janik  <timj@gtk.org>

		* bseserver.c (bse_server_close_devices): wait until pcm module is
		discarded before destroying teh pcm writer.

	Tue Oct 12 10:51:55 2004  Tim Janik  <timj@gtk.org>

		* gsl-fftgen.pl:
		* mkcalls.pl:
		* mkcproc.pl:
		* mktypes.pl:
		don't generate "/** ...*/" comments, as two-asterisc comments are used
		as documentation generator magic.

	Fri Oct  8 18:57:40 2004  Tim Janik  <timj@gtk.org>

		* bsepcmmodule.c (bse_pcm_imodule_process): fixed recently broken value
		count for bse_pcm_handle_read().

		* bsecore.idl: renamed PropertyCandidates.label from nick,
		adapted users.

	Fri Oct  8 14:21:06 2004  Tim Janik  <timj@gtk.org>

		* bseobject.[hc]: added bse_object_strdup_debug_handle() for
		threrad-safe debugging handle generation.

		* bsesequencer.h:
		* bsesequencer.cc: reduces track position debugging verbosity.
		added underrun detection and underrun debugging messages.
		made BSE_SEQUENCER_FUTURE_BLOCKS private.

	Fri Oct  8 13:37:40 2004  Tim Janik  <timj@gtk.org>

		* bsepcmmodule.c: check for a readable pcm device upon resetting the
		PCM input module. handle partial read requests. properly zero initialize
		newly allocated structures.

		* bseserver.[hc]: implemented bse_server_require_pcm_input(), which
		issues an appropriate warning if PCM recordingis reduced to a silent
		input stream.

	Fri Oct  8 11:38:07 2004  Tim Janik  <timj@gtk.org>

		* bsedefs.h: don't include <math.h>. files needing math functions
		should include <bse/bsemath.h> instead.

		* bsemath.[hc]: removed BSE_EPSILON_CMP().
		moved contents from gslmath.h and gslmath.c here and changed namespace
		to bse. adapted users.

		* bseieee754.h: changed namespace to bse, adapted users.
		use signbit() if available.

		* bsemathsignal.[hc]: changed namespace to bse, adapted users.

		* gslmath.h, gslmath.c, gslsignal.h, gslsignal.c, gslieee754.h: removed.

		* gsl-fftconf.sh: include bsemath.h in generated source.

		* tests/mathtests.c: disabled ellipsis and complex root finding tests.

	Fri Oct  8 10:01:37 2004  Tim Janik  <timj@gtk.org>

		* bseieee754.h: CVS copied from gslieee754.h.

	Fri Oct  8 09:55:43 2004  Tim Janik  <timj@gtk.org>

		* bsemathsignal.h: CVS copied from gslsignal.h.

		* bsemathsignal.c: CVS copied from gslsignal.c.

	Fri Oct  8 06:52:09 2004  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc:
		* gslloader-aiff.c:
		* bseenginemaster.c: use g_static_assert().

	Mon Oct  4 03:46:52 2004  Tim Janik  <timj@gtk.org>

		* bsestorage.c: fixed version string parsing.

		* bsecore.idl: provide user-message types and record.

		* bseserver.[hc]: extended user message notifications.

		* bsemain.c:
		* bsesequencer.cc:
		* bseenginemaster.c: set log handler for the various threads.

	Sat Oct  2 21:12:13 2004  Tim Janik  <timj@gtk.org>

		* *.c: adapt to logging API changes.

	Wed Sep 29 21:01:28 2004  Tim Janik  <timj@gtk.org>

		* bsesequencer.cc: make wake-up pipe non-blocking. properly wake up
		sequencer thread, so it stops polling on removed io watch fds.

	Wed Sep 29 19:59:42 2004  Tim Janik  <timj@gtk.org>

		* bsesequencer.h: CVS copied from bsessequencer.h.

		* bsesequencer.cc: CVS moved from bsessequencer.cc.

		* bsessequencer.h: removed.

	Wed Sep 29 19:16:23 2004  Tim Janik  <timj@gtk.org>

		* bsessequencer.cc: renamed symbols from ssequencer to sequencer,
		adapted users. added io watch API:
		bse_sequencer_add_io_watch(): install poll-fds and a handler.
		bse_sequencer_remove_io_watch(): remove an io watch handler.

		* bsemididevice-oss.c: ported to use BseSequencer io watch API.

		* bsemididevice.h: added midi_decoder field to handle.

	Wed Sep 29 11:44:23 2004  Tim Janik  <timj@gtk.org>

		* bsessequencer.c: removed.
		* bsessequencer.cc: ported from C to C++.

		* Makefile.am: build bsessequencer.cc instead of bsessequencer.c.

	Wed Sep 29 11:37:44 2004  Tim Janik  <timj@gtk.org>

		* bsessequencer.cc: CVS copied from bsessequencer.c.

	Tue Sep 28 23:01:23 2004  Tim Janik  <timj@gtk.org>

		* bsemain.[hc]: added --bse-override-plugin-globs <glob> and
		--bse-override-script-path <path> options.

		* bseplugin.c: allow plugin path overriding.

		* bsescripthelper.c: allow script path overriding.

	Tue Sep 28 20:38:45 2004  Tim Janik  <timj@gtk.org>

		* gslcommon.[hc]: moved file tests to sfi:
		gsl_error_from_errno(): some errno reassignbements, for EBADF, ENOTDIR
		and ENODEV, return fallback to indicate operation failure (rather than
		"not found" or internal error). adapted users.
		gsl_check_file_equals(): removed, use sfi_file_equals() instead.
		gsl_file_check(): renamed from gsl_check_file(), use sfi_file_check()
		internally.

	Tue Sep 28 18:26:23 2004  Tim Janik  <timj@gtk.org>

		* bsedefs.h: added n_fds to BseIOWatch, adapted users.

		* bseplugin.c bse_plugin_path_list_files(): allow *.o plugins besides *.so.

	Mon Sep 27 20:36:55 2004  Tim Janik  <timj@gtk.org>

		* bsedevice.[hc]:
		bse_device_open(): if no arguments are specified, try opening the device
		with the arguments povided by its listed device entries.
		made bse_device_split_args() non-public.

		* bsemididevice.h: removed public midi_fd from handle, fixed users.

	Mon Sep 27 18:26:56 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc (bse_midi_receiver_voices_pending): don't try to
		check busy state of NULL voices.

	Mon Sep 27 06:38:57 2004  Tim Janik  <timj@gtk.org>

		* bsepcmdevice.[hc]: removed queue_length field from handle, as it's
		OSS specific. turned req_queue_length field into req_latency_ms, i.e.
		requested latency in milliseconds.

		* bsemididevice-oss.c: added queue_length field to handle. adapt
		to BsePcmDevice.req_latency_ms.

	Mon Sep 27 01:09:39 2004  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c: fixed hardcoded n_channels=2 and a number of buglets.

	Sun Sep 26 06:00:46 2004  Tim Janik  <timj@gtk.org>

		* bsedevice.c: fixed logic that collapses multiple 'auto' drivers.
		don't skip auto-list drivers after trying to open 'auto', users
		may have provided special device arguments.

		* bsepcmdevice-oss.c: API updates. added underrun detection and handling.
		added hs - hard-sync option to initiate retriggers on underruns.
		fixed read/write opening mode logic. moved poll timeout calculation
		logic from bsepcmmodule.c here. simplified code by using number of
		frames all over the place. take latency settings into account
		and honour them if the device has been opened readable. ensure block
		writing is always paired with a previous block read to stabelize
		latency queue length.

		* bsepcmdevice.[hc]: added req_block_length field for a tentative
		block_length request and req_queue_length field to request queue
		lengths according to the current latency settings.
		bse_pcm_device_request(): allow latency and block-length requisitions.
		bse_pcm_device_get_mix_freq(): mix frequency accessor.
		bse_pcm_device_get_handle(): require block_length specification.
		bse_pcm_handle_read():
		bse_pcm_handle_write(): removed n_values argument, which is now always
		handle->block_length, as setup from bse_pcm_device_get_handle().
		bse_pcm_handle_status(): removed status() method alltogether.
		bse_pcm_handle_check_io(): introduced check_io() which to some extend
		merges logic from the former status() and bse_pcm_module_poll()
		functions. check_io() returns whether a block may be read or
		needs to be written and the timeout until arrival of such an event
		if data may not immeditely be processed.
		bse_pcm_handle_latency() added latency() method which is used to
		return the current full amount of latency introduced by the device.
		bse_pcm_handle_set_watermark(): removed watermarks, handled internally
		by check_io() now.
		bse_pcm_freq_mode_from_freq():
		bse_pcm_freq_from_freq_mode(): removed frequency mode indirection.
		bse_pcm_device_frequency_align(): new function to align mix frequencies
		to common device values.

		* bsepcmmodule.c: removed watermark based timeout calculation, the
		pcm layer handles stuff now. work around non-readable device handles.

		* bseserver.c: added latency and block_size to pcm device requests.
		keep the first device error we encounterted. allow free-form mix
		frequencies at first, fallback to aligned frequencies if no device
		could be opened.

		* bsessequencer.[hc]: allow queries about how bad the sequencer
		is lagging behind his scheduled future stamp.

		* bsepcmdevice-null.c: adapt to new BsePcmDevice API, sleep
		cooperatively since we might run at nice level -20.

		* bseengine.c: docu updates.

	Fri Sep 24 10:41:18 2004  Tim Janik  <timj@gtk.org>

		* bseserver.c (bse_server_open_pcm_device): fallback to write-only mode
		if opening in read-write mode failed.

	Fri Sep 24 09:14:14 2004  Tim Janik  <timj@gtk.org>

		* bsedevice.[hc]: added groups to device entries. adjusted device
		list dump.

		* bseenums.[hc]: adapted device errors, so they better correspond
		to user defined configuration settings.

		* bsemain.[hc]: load drivers from drivers dir before dumping device
		list.

		* bseplugin.[hc]: extended bse_plugin_path_list_files() to support
		BSE_PATH_DRIVERS.

		* bsepcmdevice-oss.c: don't list ENODEV devices.

		* bsemididevice-oss.c: don't list ENODEV devices.

	Thu Sep 23 15:43:02 2004  Tim Janik  <timj@gtk.org>

		* bsedevice.[hc]: added base class for BseMidiDevice and BsePcmDevice.
		move open() and close() (former suspend()) methods here. implemented
		automated device selection and listing.

		* bsepcmdevice-null.[hc]: added null PCM device.

		* gslcommon.[hc]:
		gsl_check_file(): added char device, block device and pipe checks.
		gsl_check_file_equals(): check whether two files point to the same inode.

		* bse*device-*.[hc]: adaptions to new device API.

		* bsemididevice.[hc]:
		* bsepcmdevice.[hc]: adaptions to bsedevice.[hc].

		* bsemain.c: implemented proper device listing.

		* bseserver.c: adaptions to new device API.

		* bsessequencer.[hc]: provide bse_sequencer_thread_lagging() for
		null PCM device integration.

	Wed Sep 22 14:28:11 2004  Tim Janik  <timj@gtk.org>

		* bsegconfig.[hc]: added bse_gconfig_merge_args() to merge
		configuration with command line arguments.

		* bsemain.[hc]: provide BseMainArgs globally, setup from argv parsing.
		parse --bse-latency, --bse-mixing-freq, --bse-control-freq,
		--bse-driver-list, --bse-pcm-driver and --bse-midi-driver.

		* bseserver.c: merge argv arguments into global config after
		parsing rc file.

	Wed Sep 22 02:58:07 2004  Tim Janik  <timj@gtk.org>

		* bsetrack.c:
		bse_track_context_create():
		bse_track_context_dismiss(): enable poly voices not only for snets, but
		also for waves supplied by the user.

	Wed Sep 22 02:13:59 2004  Tim Janik  <timj@gtk.org>

		* bsessequencer.[hc]: rewrote and majorly simplified playback
		object maintenance. simply allow removal and additions of
		songs to the sequencer, adapted callers.

		* bsesuper.[hc]: removed sequencer specific code and API,
		adapted callers.

		* bsesong.[hc]: adapted to new sequencer API.

		* bseproject.[hc]: simplified and adapted to new sequencer API.

	Tue Sep 21 23:59:09 2004  Tim Janik  <timj@gtk.org>

		* bsestorage.c: store and restore property automation setups.

	Tue Sep 21 04:41:29 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]*: introduced explicit enabling of polyphonic
		voice handling. avoid warning about unavailable voices for disconnected
		tracks, or if polyphonic handling was not enabled.

		* bsetrack.c: request polyphonic midi channel handling iff the track
		provides a synth mesh and is prepared.

		* bseproject.c: bse_project_start_playback(): ensure all modules are
		properly intergrated into the engine before starting the sequencer.

		* bsesource.c: guard objects with PREPARED flag until after reset()
		invocation.

		* bseengine.[hc]: added bse_module_is_scheduled() and bse_job_nop().

		* bseengineutils.c:
		* bseenginemaster.c: handle nop jobs properly.

	Tue Sep 21 02:40:05 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc: don't throw invalid warnings.
		voice_input_module_access_U():
		change_voice_input_L(): mono voices may receive note-on while busy.

	Tue Sep 21 02:18:37 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc: added documentation blurb on voice states and
		table entries, in relation to note-on, note-off and done=1 events.
		added missing _U and _L locking marks to function names (except
		midi receiver methods which are all implicitely _L).
		voice_input_module_access_U():
		voice_switch_module_reuse_U():
		voice_input_enter_sustain_U():
		voice_input_enter_idle_U(): added mssing locking guards.

	Tue Sep 21 01:03:30 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]*: BseFreeFunc fixup, ensured the free function
		is called from the user thread (BSE core thread) without any locks
		still held.

	Mon Sep 20 01:38:14 2004  Tim Janik  <timj@gtk.org>

		* bseproject.proc:
		undo_do_deactivate(): properly deactivate via bse_project_deactivate(),
		not just bse_project_stop_playback() which doesn't reset PREPARED state
		anymore.
		project_push_undo_silent_deactivate(): stop playback before undo *and*
		redo execution.

		* bsesource.proc: undo fixup for set-automation.

	Mon Sep 20 00:44:12 2004  Tim Janik  <timj@gtk.org>

		* completed infrastructure for automation.

		* bseengine.[hc]: return tick_stamp of transaction execution from
		bse_trans_commit().

		* bseenginemaster.c: provide a boolean to _engine_pop_job(), indicating
		whether the internal tick stamp returned by bse_trans_commit() may be
		updated.

		* bseengineutils.[hc]: implemented tick_stamp return handling for
		bse_trans_commit().

		* bsemidireceiver.[hc]*: removed minimum and maximum from
		bse_midi_receiver_add_control_handler(). instead, return whether
		user data is setup for this handler or not. at the moment, this
		seems to be sufficient to implement automation.

		* bsesource.[hc]: added property_updated() class function. fixed
		automation property maintenance.

		* Makefile.am: fixed dependencies, install bsecore.genidl.hh.

		* bsecxxmodule.cc: include bsecore.genidl.hh through bsecxxplugin.hh,
		so bsecore.genidl.hh is publically available.

		* bsecore.idl: use bse_intern_path_user_data() instead of macros from
		topconfig.h.

		* bseutils.[hc]: provide bse_intern_path_user_data()
		for bsecore.genidl.hh.

		* bsecxxbase.[hc]*: only flag writable properties as G_PARAM_CONSTRUCT.
		added set_accessors() to setup per inheritance level property
		handling functions. supplied trampoline templates to generate class
		method calls.

		* bsecxxmodule.[hc]*: update BSE properties through
		BseSourceClass.property_updated() in free() handler of automation
		property flow accessor. properly quantize automated bool property
		values. fixed user_data setup of midi control handler.
		record tick_stamp  of last module update.

		* bsecxxplugin.hh: removed function definition macros. instead, use
		trampoline generation templates. include <bse/bsecore.genidl.hh>
		after defining all required macros, implement get_candidate()
		trampoline template which depends on class PropertyCandidates,
		supplied by bsecore.genidl.hh.

		* bsecxxutils.[hc]*: comment updates. removed function definition
		macros which are replaced by trampoline templates.

	Thu Sep 16 15:41:38 2004  Tim Janik  <timj@gtk.org>

		* bsecxxmodule.[hc]*: accessor->closure rename where appropriate.
		moved MidiControlJobData into SynthesisModule.
		renamed module_configurator() to make_module_config_closure().
		use bse_midi_receiver_set_control_handler_data() to provide an
		auto_update() function handle for midi_control_handler().
		(SynthesisModule): provide an auto_update_accessor() template, to be
		used as flow job function on engine modules to call auto_update().
		specialised template so an auto_update() method is required only
		for objects with the NeedAutoUpdateTag category.

		* bsedefs.h: provide BSE_MODULE_GET_USER_DATA().
		* bseengine.c: double check BSE_MODULE_GET_USER_DATA().

		* bsemidireceiver.[hc]*: added extra user_data to midi control handler,
		required by bsecxxmodule: bse_midi_receiver_set_control_handler_data().

	Wed Sep 15 22:48:41 2004  Tim Janik  <timj@gtk.org>

		* *.idl: removed SFI_PARAM_ prefix from option constants.

	Tue Sep 14 19:06:12 2004  Tim Janik  <timj@gtk.org>

		* bsesource.proc:
		* bsesource.[hc]: switched automation API over to BseMidiControlType.

		* bsecore.idl: added i18n markup. added MidiControlType, which
		duplicates the portions of MidiSignalType that are usable by automation.

		* bsecxxplugin.hh: provide enum value initialization funciton, instead
		of initializing from static constructor (and calling i18n code prema-
		turely).

		* bseexports.h (BseExportNodeEnum): offer an enum value list
		initialization 	function instead of a pointer to already initialized
		enums values.

		* bseplugin.c: call enum value list initializer.

	Tue Sep 14 13:42:11 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc: cleanup control handler if the last module is
		removed from the control handler module list.

		* bsesource.c: count :automate: properties as :prepared: properties.

		* bsesource.proc: provide bse_source_is_prepared(),
		bse_source_set_automation(), bse_source_get_automation_channel() and
		bse_source_get_automation_control().

	Tue Sep 14 09:24:27 2004  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: allow a MIDI channel to be specified together with
		automation properties.

		* bsecxxmodule.cc: support automation property specific MIDI channels.

	Tue Sep 14 01:40:18 2004  Tim Janik  <timj@gtk.org>

		* bse/bsemidireceiver.[hc]*: partially reverted last change of
		introducing BseMidiControlData. instead, implemented value
		clamping before calling midi control handlers.

		* bsecxxmodule.cc: removed value clamping logic, pass on minimum
		and maximum to bse_midi_receiver_add_control_handler().

	Tue Sep 14 01:13:26 2004  Tim Janik  <timj@gtk.org>

		* bsecxxmodule.idl:
		* bsecxxmodule.cc: more effect automation work, generate debugging
		message from module flow access function, properly constrain control
		event values.

		* bsemidireceiver.[hc]*: support midi control data structure per
		control handler instead of just a module pointer.

	Mon Sep 13 02:37:28 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.h:
		* bsemidireceiver.cc: provide a mechanism to register, unregister and
		notify handlers about midi control changes.

		* bsesource.[hc]: collect :automate: properties, and maintain an
		automate-property => midi-control-number association.

		* bsecxxmodule.cc: first steps in implementing automation
		infrastructure, currently only debugging messages are generated.
		integrate_engine_module():
		dismiss_engine_module(): queue job with accessor function to register
		and unregister a midi receiver control handler for the module.

		* bseitem.[hc]: added bse_item_get_snet().

		* bseenums.[hc]: more errors.

	Wed Sep  8 21:50:10 2004  Tim Janik  <timj@gtk.org>

		* bsecompat.[hc]: added bse_compat_rewrite_ichannel_ident() and
		bse_compat_rewrite_ochannel_ident() with compat code for the
		new BseArtsCompressor.
		bse_compat_rewrite_type_name(): take a BseStorage argument. added
		ArtsCompressor => BseArtsCompressor and
		ArtsStereoCompressor => BseArtsCompressor rules for versions <= 0.6.2.

		* bsesource.[hc]:
		resolve_osource_input(): improved error messages, call input/
		output channel compat code.

		* bsestorage.[hc]: provide bse_storage_item_get_compat_type() to
		figure the original module type to be restored, prior to compat
		code type name rewriting.

	Wed Sep  8 16:52:32 2004  Tim Janik  <timj@gtk.org>

		* bsecxxutils.hh: changed TEMPLATE_ERROR::invalid_type() and
		TEMPLATE_ERROR::invalid_argument_type() to throw an error upon
		instantiation and not parsing with g++-3.4.

	Wed Sep  8 15:38:01 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl: use g_intern_printf() to reformat i18n strings which
		contain G_SEARCHPATH_SEPARATOR_S, so intltool can do the right thing
		for translators.

	Tue Sep  7 01:19:24 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: don't store defaults for solo, mute and sync properties.

		* bsesubsynth.c: throw out default values for unused proeprties.

	Mon Sep  6 09:13:05 2004  Tim Janik  <timj@gtk.org>

		* bsebus.[hc]: implemented ::outputs property. provided logic in
		functions that may be shared with BseTrack. proxy notifies from
		parent for master bus.

		* bsetrack.[hc]: implemented ::outputs property based on functions
		provided by bsebus.[hc].

	Sat Sep  4 04:54:34 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl: option cleanups. provide NOTE_*() macros for Note()
		properties.

		* bsetype.h: pspec constructor cleanups and adaptions.

		* bseinfo.c: provide octave info.

	Fri Sep  3 14:30:34 2004  Tim Janik  <timj@gtk.org>

		* bsebus.[hc]: added store/restore support for ::inputs. made
		::inputs a GUI-only property.
		bse_bus_connect(): check the input object against our candidate list.
		bse_bus_connect_unchecked(): connect without checking against candidate
		list.

		* bsestorage.c: process item links in the order they were parsed in.

	Fri Sep  3 03:12:49 2004  Tim Janik  <timj@gtk.org>

		* zintern/mono-wave.bse: remove useless wave-repo. fixed synth name.

	Thu Sep  2 22:50:43 2004  Tim Janik  <timj@gtk.org>

		* bsetrack.[hc]: derive from BSeContextMerger. this turns BseTrack
		into a BseSource, including preparation and reset. this gets rid of
		a bunch of special cases and state related buglets.

		* bsesubiport.[hc]:
		* bsesuboport.[hc]: prepare for derived objects with varying
		numbers of input and output channels. some cleanups.

		* bsesubsynth.[hc]: dito. move premature releasing of port
		names to finalize.

		* bsesource.[hc]: added bse_source_class_inherit_channels().

		* bsesong.c: adapt to BseTrack is_a BseSource now.

		* bsesnet.c: cleanups. report i/o port leaks at finalization
		time, as ports may be left at bse_snet_release_children() from
		inetrnal children.

		* bseinstrumentoutput.c:
		* bseinstrumentinput.c: adaptions, cleanups.

	Thu Sep  2 04:14:29 2004  Tim Janik  <timj@gtk.org>

		* bsebus.[hc]: added ::mute, ::solo and ::sync properties.
		implement bse_bus_editable_property() to toggle ::solo
		editability for master bus. moved song<->master connection
		logic here.

		* bsebusmodule.cc: special case left/right volume factors of
		0 (BSE_MIN_VOLUME_dB) to set constant 0 outputs.

		* bsesong.c: support solo busses.

		* bseitem.proc: provide bse-item-editable-property() to figure
		whether a property is currently editable.

		* bsesource.c: support "unprepared" option by implementing
		source_check_pspec_editable() to check for an objects prepared
		state, and by notifying property changes when preparing and
		resetting objects.

		* bseitem.c: default initialize get_candidates() to NULL.

		* bsemidisynth.c:
		* bsesubsynth.c:
		* bsetrack.c:
		* bsesong.c: added missing "unprepared" option to properties.

		* bseobject.[hc]: implemented bse_object_editable_property() to
		figure via a chainable class handler (check_pspec_editable)
		and a per-class handler (editable_property) whether a property
		is currently editable.

	Wed Sep  1 14:37:24 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslsignal.h: Don't use UNLIKELY in headers (but G_UNLIKELY), as this
		breaks compilation for external code, as LIKELY/UNLIKELY are
		convenience macros only defined when compiling bse itself.

	Wed Sep  1 14:25:49 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: proxy changes on input objects onto notify::inputs.

	Wed Sep  1 01:44:46 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c (bse_bus_set_property): use new sfi_ring_reorder() API.

	Tue Aug 31 23:55:52 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: added BseTrack and BseBus to the ::inputs candidate
		type partitions. added missing ::inputs change notifications.

		* bsecore.idl: added TypeSeq and type partitions to PropertyCandidates.

		* bseitem.c: default initialize type partition structure.

	Tue Aug 31 12:09:38 2004  Tim Janik  <timj@gtk.org>

		* bsewaverepo.proc:
		load_file(): set wave name from filename directly.

		* gsldatacache.c:
		data_cache_new_node_L(): copy over overlapping data from adjacent node
		instead of re-reading data from data-handle (which forces a slow
		backward seek on the handle). based on a patch by stefan westerfeld.
		gsl_data_cache_free_olders(): unlock properly, reported by stefan.

	Tue Aug 31 09:37:02 2004  Tim Janik  <timj@gtk.org>

		* bsesource.*:
		* bsecxxmodule.*: cleanups.

	Tue Aug 31 08:50:26 2004  Tim Janik  <timj@gtk.org>

		* bsecxxeffect.*: applied slightly modified patch from stefan.
		applied const fixes to various methods.

	Sun Jul 18 21:47:54 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxeffect.*:
		Added Effect::block_size(), so that effects (not their modules) can
		obtain the block size. Provide prepare1/prepare2 and reset1/reset2
		hooks for effects, so they can execute code before/after prepare/
		reset.

	Tue Aug 31 07:13:37 2004  Tim Janik  <timj@gtk.org>

		* bseproject.c (bse_project_activate): disabled timed auto-activate
		csynth starts. simply commit the transaction before the sequencer
		is started.
		this fixes lost notes at song start with mono-synths (BseMidiInput).

	Mon Aug 30 01:20:08 2004  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc:
		MidiChannel::adjust_note(): only queue voice-pressure, voice-sustain or
		voice-off changes on busy voice input modules.
		check_voice_input_improvement(): perform rating according to the
		queue_state which is maintained in the UserThread.
		voice_switch_module_process(): use UserThread callbacks to clean up
		disconnected state and to remove vinput modules from the frequency
		reverse lookup table.
		create_voice_input(): keep a pointer to the reverse lookup table per
		vinput module, so removal frmo that table may occour from callbacks.
		change_voice_input(): defer removal from table until the module's
		internal state has been updated.

		* bseengineschedule.c:
		determine_suspension_state(): query keep-state (avoid-reset) from
		recently updated nodes also. use determine_suspension_reset() to
		determine whether a node wants its inputs to keep-state.
		determine_suspension_reset(): for virtual nodes, needs_reset is
		determined by looking at the virtual node's output node's needs_reset.

		* bseengine.[hc]: added bse_engine_add_garbage().

	Sun Aug 29 12:49:36 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: made parent's BseSubSynth::snet a private property that's
		ignored by storage and GUI.

		* bsesong.c: save loop setup.

	Sun Aug 29 04:19:57 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c (bse_bus_get_stack): ensure the summation module gets build.

	Sat Aug 28 23:12:03 2004  Tim Janik  <timj@gtk.org>

		* bsesong.proc: don't create busses while prepared.

	Sat Aug 28 22:08:40 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: fixup internal reordering of input objects.

		* bseundostack.c: caller adaption.

	Sat Aug 28 14:54:39 2004  Tim Janik  <timj@gtk.org>

		* bseutils.c (bse_item_seq_to_ring): implemented ::inputs property
		handling.

		* bsecore.idl: added PropertyCandidates structure.

		* bseitem.[hc]: replaced bse_item_list_items() by
		bse_item_get_candidates() which has additional support for an i18n
		label and tooltip for the candidates.

		* bseitem.proc: provide get-property-candidates() instead of list-items().

		* bseutils.[hc]: added helper functions: bse_property_candidate_relabel(),
		bse_item_seq_remove(), bse_item_seq_to_ring().

		* bsesong.c:
		* bsetrack.c:
		* bsewaveosc.c:
		* bsesubsynth.c:
		* bsemidisynth.c: get_candidates() adaptions, cleanups.

		* bsesong.c: i18n fixups.

	Wed Aug 25 23:24:23 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseenginemaster.c: Fix memcpy in master_take_probes to copy the
		right amount of probe data (each sample is sizeof (gfloat) bytes).

	Wed Aug 25 18:15:00 2004  Tim Janik  <timj@gtk.org>

		* bsetype.h: added dB property type.

		* bsebus.[hc]: construct effect stack csynth and add a volume
		module into it. update the volume effect from volume properties.

		* bsebusmodule.idl:
		* bsebusmodule.cc: implement module functionality needed by busses.

		* bsecontainer.c: fix base-name handling in
		bse_container_new_child_bname() for objects with default names.

		* bseproject.[hc: implement bse_project_create_intern_csynth().

		* bsesong.c: trigger effect stack creation of busses after adding
		them to songs.

	Sun Aug 22 19:26:23 2004  Tim Janik  <timj@gtk.org>

		* bsebus.[hc]: made bus input channels private to avoid undo or disk
		storage of channel states. busses maintain connections on their own.
		added ::master-output bool property to set whether a bus is the master
		bus of a song.
		added bse_bus_disconnect_outputs() and bse_bus_list_outputs().

		* bseenums.[hc]: const-corrections. added i18n markup to error blurbs.
		added BSE_ERROR_SOURCE_PRIVATE_ICHANNEL and bse_assert_ok().

		* bsesong.[hc]: got rid of master_bus member. detect master-bus-ness
		through signal connections. removed bse_song_get_master(), added
		bse_song_find_master() and bse_song_connect_master().

		* bsesong.proc: create master bus undoable.

		* bsesource.[hc]: added bse_source_get_input(). cleaned up
		bse_source_must_set_input(). added PRIVATE_INPUTS flag, skipped
		channel storage/restoring for private inputs.

	Fri Aug 20 18:31:59 2004  Tim Janik  <timj@gtk.org>

		* bsebus.[hc]: added left/right db-volume properties.

		* bseconstvalues.h: increased min/max db constants.

		* bseenginemaster.c: fixed NULL-pointer check.

		* bseglobals.[hc]: renamed bse_db_to_factor() and bse_db_from_factor().
		fixed up calculated dB values (use a factor of 20 not 10 for peaks).
		adapted callers.

	Tue Aug 17 17:38:39 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c: prototyped ::inputs property. i18n fixups.

		* bseitem.c: docu fixups.

		* bsetrack.c: i18n fixups.

	Sun Jul 25 16:43:52 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidireceiver.cc: Properly NULL initialize the module list in the
		constructor of struct ControlValue.  This fixes the segfaults on AMD64
		that occur when playing the demosong (and probably others).

	Sat Jul 24 20:00:22 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.idl:
		* bseprobe.cc: added signal energie to probed values. fixed up
		value colelction and min/max for discarded modules.

	Sat Jul 24 11:40:50 2004  Tim Janik  <timj@gtk.org>

		* bsesniffer.idl:
		* bsesniffer.cc: removed BseSniffer code.

	Sat Jul 24 08:16:14 2004  Tim Janik  <timj@gtk.org>

		* bseengine.[hc]: added n_delay and n_probes arguments to
		bse_job_probe_request(), so the user can request block sizes
		and probe spacings.

		* bseenginenode.h:
		* bseenginemaster.c: implemented variable length probe blocks and
		probe block spacings.

		* bseprobe.cc: for now, request engine block size big probe
		blocks, with a 3/4 spacing ratio. fixed request handling.

	Sat Jul 24 05:33:58 2004  Tim Janik  <timj@gtk.org>

		* gsldefs.h: removed if_reject() and if_expect() variants.
		G_LIKELY() and G_UNLIKELY() may be used instead. provide
		LIKELY(), ISLIKELY() and UNLIKELY() for convenience.

		* *.[hc]*: fixed if_reject() and if_expect() usage.

	Fri Jul 23 20:05:53 2004  Tim Janik  <timj@gtk.org>

		* *.h, *.c, *.cc: globally renamed GSL Engine to BSE Engine.

	Fri Jul 23 19:05:23 2004  Tim Janik  <timj@gtk.org>

		* *.[hc]:
		* Makefile.am: use bseengine*.[hc] instead of gsl*.[hc] files.

		* gslengine.[hc]:
		* gslopnode.h:
		* gsloputil.[hc]:
		* gslopmaster.[hc]:
		* gslopschedule.[hc]: removed.

	Fri Jul 23 18:39:30 2004  Tim Janik  <timj@gtk.org>

		* bseengine.h:
		* bseengine.c: CVS copied from gslengine.[hc].

		* bseenginenode.h: CVS copied from gslopnode.h

		* bseenginemaster.h:
		* bseenginemaster.c: CVS copied from gslmaster.[hc].

		* bseengineschedule.h:
		* bseengineschedule.c: CVS copied from gslopschedule.[hc].

		* bseengineutils.c:
		* bseengineutils.h: CVS copied from gsloputil.[hc].

	Tue Jul 20 06:33:25 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.idl:
		* bseprobe.cc: turned channel_ages into a C++ vector. fixed up handling of
		invalidated source handles due to asyncronous requests.

	Sat Jul 17 19:03:33 2004  Tim Janik  <timj@gtk.org>

		* bseprobe.cc: fix C++ LessThanComparable implementation for sort().

	Sat Jul 17 12:40:38 2004  Tim Janik  <timj@gtk.org>

		* bse/bsebus.[hcp]*: fixed track/bus argument type for bse_bus_connect()
		and bse_bus_disconnect().

		* bse.idl: make bseprobe.idl public core API. bsehack.idl must be the
		last file being included, so all idl types are defined once it's parsed.

		* bseprobe.idl:
		* bseprobe.cc: implemented auxillary BseSourceProbes logic for
		BseSource. this manages generic signal probe handling for sources.
		the code is integrated with BseSource via implementation of
		bse_source_probes*() functions.

		* bsesource.[hc]: introduce and call bse_source_probes*() from various
		parts of the BseSource code.

		* bsetrack.proc: provide get-output-source() instead of create-sniffer().

		* gslopnode.h: record the number of output channels to be probed with
		probe jobs, required to release job resources.

		* gslengine.[hc]: add more docs. allocate probe blocks individually, so
		user code can "steal" allocated blocks.

		* gslopmaster.[hc]: fixed up sample block probing code to work on
		virtual nodes (and return processed probe jobs from "unprocessed"
		nodes). added minor optimization to output buffer pointer virtualisation
		logic.

		* gslopschedule.[ch]: added virtual nodes to debugging output of
		schedules. properly connect even virtual node inputs, so the outputs can
		be probed without walking virtual node input connections.

		* gsloputil.c: properly free probe job blocks.

	Thu Jul 15 01:15:01 2004  Tim Janik  <timj@gtk.org>

		* bsesniffer.cc:
		* bsesniffer.idl: disabled any code that depended on reply jobs,
		this essentially breaks sniffers.

		* bsesource.[hc]: reordered code for brevity. added BseSourceProbes*
		structure member (currently unused).

		* gslopnode.h:
		* gslengine.[hc]: removed reply jobs. added probe jobs. changed
		all uses of GslReplyFunc as free func back to GslFreeFunc.

		* gslopmaster.[hc]: nuked reply jobs. implemented probe job handling
		which means returning an output block copy to the user thread after
		each node calculation. execute module profiling code after all nodes
		have been processed.

		* gsloputil.[hc]: nuked reply jobs. handle probe jobs and ordinary
		free functions. sort unscheduled nodes with probe jobs with nodes
		which have flow jobs pending.

	Wed Jul 14 01:43:05 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl: added thread id to ThreadInfo.

		* bsecore.cc (collect_thread_totals:.exec): pass on thread_id.

	Wed Jul 14 00:14:29 2004  Tim Janik  <timj@gtk.org>

		* bsesongbus.h:
		* bsesongbus.c:
		* bsesongbus.proc: removed in favour of bsebus.*.

	Tue Jul 13 23:12:52 2004  Tim Janik  <timj@gtk.org>

		* bsebus.proc: copied from bsesongbus.proc.

	Tue Jul 13 22:58:15 2004  Tim Janik  <timj@gtk.org>

		* bsebus.c:
		* bsebus.h: CVS copied from bsesongbus.[hc]:

	Tue Jul 13 21:59:07 2004  Tim Janik  <timj@gtk.org>

		* bsecontainer.proc:
		* bsecontainer.[hc]: renamed bse_container_list_items() to
		bse_container_list_children(), since there's a corresponding
		BseItem method already. adapted callers.

		* bsesong.proc:
		* bsesong.[hc]: got rid of track merger object, as the master
		bus takes care of merging track outputs now. s/SongBus/Bus/.
		(bse_song_create_summation): funciton name fixup.
		(ensure-output-busses): fixup procedure for GUIs.
		(ensure-track-links): fixup procedure for GUIs, not currently
		functional.

		* bsesongbus.proc:
		* bsesongbus.[hc]: s/SongBus/Bus/.
		implemented proper connect/disconnect handling of busses and tracks.
		can stand some optimization, so that 1:1 conenction don't use a
		summation object (which means an extra block copy in engine modules).

		* bsesource.[hc]: implemented bse_source_test_input_recursive() to
		catch cycles before they are created.
		(bse_source_set_input): catch cyclic connections and return BAD_LOOPBACK.

		* bsetrack.[hc]: got rid of the merger arg in bse_track_add_modules().
		(bse_track_get_output): provide ouput module.

	Sun Jul 11 23:42:58 2004  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: support flat (direct) input object collection.

		* bsesong.proc:
		* bsesong.[hc]: added master-bus concept.

	Sat Jul 10 20:01:47 2004  Tim Janik  <timj@gtk.org>

		* bsecontainer.[hc]: added bse_container_new_child_bname() which allowes
		to specify a base-name for the newly created child.
		turned bse_container_new_child() into a macro.

		* bsesong.[hc]: added convenience function bse_song_create_merger().

		* bsetrack.c: provide base-names when creating snets, so the
		generated snet name numbers match the track number.

	Sat Jul 10 18:27:53 2004  Tim Janik  <timj@gtk.org>

		* icons/summation.xcf:
		* icons/summation.png:
		* bsesummation.idl:
		* bsesummation.cc: new routing effect to summ up multiple signals.

	Sat Jul 10 17:19:07 2004  Tim Janik  <timj@gtk.org>

		* bsesong.c (bse_song_forall_items): don't iterate over song busses
		which are of BseSource types and thusly handled by chaining to the
		parent class handler.

	Mon Jul  5 08:55:53 2004  Tim Janik  <timj@gtk.org>

		* bsesong.[hcp]: added support for song busses.

		* bsesongbus.[hc]: new source, intended to be used for
		mixing song tracks.

	Tue Jun 29 01:51:29 2004  Tim Janik  <timj@gtk.org>

		* bsepart.c: flag fixes.

		* bsetrack.proc: provide get-last-tick() to calc the last tick
		in a track.

	Sat Jun 12 19:46:42 2004  Tim Janik  <timj@gtk.org>

		* bseserver.c (bse_server_class_init): provide wave_file property
		with a tooltip. hint towards filename.

	Fri Jun 11 04:35:46 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl:
		* bsecore.cc: added API to report CPU usage statistics.

		* bsessequencer.[hc]: export bse_ssequencer_thread handle.

		* bsetype.h: fixed sfidl_pspec_Choice().

		* gslengine.[hc]: renamed threads. provide gsl_engine_get_threads().

		* gslopmaster.c: do thread accounting.

	Thu May 20 13:36:35 2004  Tim Janik  <timj@gtk.org>

		* bsedefs.h: got rid of BsePixdata.

		* bseexports.h: provide means for export nodes to fill in
		translatable strings through a callback.

		* bseplugin.[hc]: register internationalized categories and invoke a
		callback to retrieve type blurb/authors/license strings.

		* mkcproc.pl:
		* bseladspa.c:
		* bsecxxutils.cc:
		* bsescripthelper.c:
		* bsecategories.[hc]: added internationalized category strings
		to registration functions. got rid of BsePixData. fixed callers.
		(bse_categories_register_stock_module): new function to register
		internal modules and do the right thing wrg translation.

		* bsecxxplugin.hh: provide a callback function to fill in translatable
		strings of export node structures, so gettext isn't invoked until
		after bse has been initialized.

		* bsesnooper.c:
		* bsestandardosc.c:
		* bsesubiport.c:
		* bsesuboport.c:
		* bsesubsynth.c:
		* bseconstant.c:
		* bsebiquadfilter.c:
		* bseinstrumentinput.c:
		* bseinstrumentoutput.c:
		* bsemidicontroller.c:
		* bsemidiinput.c:
		* bsepcminput.c:
		* bsepcmoutput.c:
		* bsewaveosc.c:
		register objects with bse_categories_register_stock_module() and
		changed code to use generated pixstream files in icons/.

		* bsemain.c: properly assert that the textdomain is setup (bse
		was initialized) when translating a string.

		* bseutils.[hc]: moved BsePixdata from public API to private helper.

		* icons/Makefile.am: got rid of CVS hosted .c images and Makefile.icons.
		generate C source image files from .png files directly.

		* icons/*.c: removed all CVS hosted C sources.

		* icons/*.png: added png files for all required C sources.

	Wed May  5 18:17:31 2004  Tim Janik  <timj@gtk.org>

		* bsemain.c (bse_async_parse_args): fixed parsing bug.

		* gslcommon.c (gsl_error_from_errno): made ENODEV a
		GSL_ERROR_NOT_FOUND error.
		(gsl_error_select): new function to select the most descriptive
		error in multi error scenarios.

		* bsemididevice-oss.c (bse_midi_device_oss_open): debugging fixes.
		use gsl_error_select() to select error messages from multiple
		devices.

	Wed May  5 15:27:08 2004  Tim Janik  <timj@gtk.org>

		* *.c: adapted log, error, warning and debugging messages.

		* bseenums.h: adapt message types to new logging system.

		* bsemain.c: added support for $BSE_NO_DEBUG and --bse-no-debug.

	Sun May  2 14:50:25 2004  Tim Janik  <timj@gtk.org>

		* gslopmaster.c: clean up debugging code, minor ops.

	Fri Apr  9 12:04:19 2004  Tim Janik  <timj@gtk.org>

		* tests/testwavechunk.c (run_tests): allocate large structures on the
		heap, not the stack. based on a patch by Rasmus Kaj <kaj@e.kth.se>.

	Sat Mar  6 12:17:46 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl: remove gconfig option synth_block_size, added
		synth_latency and synth_control_freq.

		* gslengine.[hc], gslopnode.h: removed sub-sample cruft. export just
		GSL_CONTROL_CHECK(), gsl_engine_control_mask() and
		gsl_engine_control_raster(), changed callers. added SYNC jobs.
		removed configuration parameters from gsl_engine_init().
		added gsl_engine_constrain() to calculate and constrain block and
		control blocck sizes.
		added gsl_engine_configure() to reconfigure engine configuration
		parameters.
		removed cruft from Stream structures. changed GSL_STREAM_MAX_VALUES
		to 1024.

		* gslopmaster.c: implement ENGINE_JOB_SYNC, needed to reconfigure
		the engine.

		* gsloputil.[hc]: prepare for gsl_engine_block_size() changes, allow
		complete nukage of all const-value blocks.

		* bseserver.[hc]: remove pcm-latency property. properly reconfigure
		engine with gsl_engine_configure().

		* bsepcmdevice.[hc]: added minimum watermark field to constrain
		watermark in bse_pcm_handle_set_watermark() for devices with
		fragment sizes, where too small watermarks can confuse the
		fill/poll calculation code.

		* bsepcmdevice-oss.c: request the smallest possible fragment size.
		retrigger device operation after open, setup minimum playback
		watermark.

		* bsecxxmodule.hh: adapt to gslengine.h API changes.

	Tue Mar  2 12:59:38 2004  Tim Janik  <timj@gtk.org>

		* bsepart.c (bse_part_insert_note): ensure enough octaves are present
		to insert a note.

	Tue Mar  2 10:48:19 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: i18n fixes and blurb output fixes.

		* bsecore.idl: provide just BLURB not HELP for records, work
		around a texitheque bug.

	Tue Mar  2 10:23:55 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: changed callers of sfi_boxed_make_record(),
		sfi_boxed_get_record_info(), sfi_info_string_find(),
		sfi_boxed_make_sequence() and sfi_boxed_get_sequence_info()
		which got removed.

	Mon Mar  1 20:08:12 2004  Tim Janik  <timj@gtk.org>

		* switched the native C binding for idl types to a C wrapper
		binding which is based on a C++ binding for core idl types.

		* bsecore.idl: turn ProxySeq into a ItemSeq for proper typing.

		* bsecxxbase.idl:
		* bseamplifier.idl: bring up to par with recent idl fixes.

		* bsecore.cc: new file, needed to implement bsecore.idl contents
		and the C wrapper bindings.

		* bsecxxplugin.hh: provide constants used in idl files. fixed namespace
		issues in BSE_CXX_DECLARED_*_TYPE() macros by making them absolute.

		* bsegconfig.c: retrieve record fields via bse_gconfig_get_fields() now.

		* Makefile.am: added rules to generate bsegencore.cc. this implements
		the C functions from bsegentypes.h on top of the C++ core binding.

		* bsemain.[hc]: initialize C wrapper types.

		* bsesong.c:
		* bsetrack.c:
		* bsesubsynth.c:
		* bsemidisynth.c:
		* bseproject.proc:
		* bseitem.[hcp]*:
		* bsewaveosc.c:
		* bsecontainer.[hcp]*: adapt to BseItemSeq changes.

		* bsetype.c: removed cruft.

		* bserecords.idl: removed, replaced by bsecore.idl.

	Fri Feb 27 11:23:01 2004  Tim Janik  <timj@gtk.org>

		* bsecore.idl: CVS copied from bserecords.idl.

	Fri Feb 27 06:19:32 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c:
		* bsebiquadfilter.c:
		* bseconstant.c:
		* bsecontextmerger.c:
		* bsecxxbase.cc:
		* bsecxxbase.hh:
		* bsecxxmodule.hh:
		* bseinstrumentinput.c:
		* bseinstrumentoutput.c:
		* bseladspamodule.c:
		* bsemidicontroller.c:
		* bsemidiinput.c:
		* bsemidivoice.c:
		* bsepcminput.c:
		* bsepcmoutput.c:
		* bsesnooper.c:
		* bsesource.c:
		* bsesource.h:
		* bsesource.proc:
		* bsestandardosc.c:
		* bsesubiport.c:
		* bsesuboport.c:
		* bsesubsynth.c:
		* bsewaveosc.c: grand fix of channel names. channels have ident,
		label and blurb, where label and blurb are subject to i18n. this fixes
		the demo song not working in locales!=C due to channel identifiers
		being translated. added missing i18n markups.

	Thu Feb 26 20:35:51 2004  Tim Janik  <timj@gtk.org>

		* bsepart.c:
		* bsewave.c:
		* bsetrack.c:
		* bseplugin.c:
		* bsestorage.c:
		* bseparasite.c:
		* bsedatapocket.c:
		* gslloader-gslwave.c: fixed 64bit integer scanning.

		* bserecords.idl: added MAXINT, MININT, MAXNUM and MINNUM constants.

	Wed Feb 25 14:43:23 2004  Tim Janik  <timj@gtk.org>

		* bsemain.[hc]: new function bse_main_getpid() which returns a thread id.

		* bseserver.c: if possible, slightly drop priorities after engine
		initilization, so the BSE thread doesn't get into the way of the sequencer
		or synthesis threads.

	Wed Feb 25 06:00:15 2004  Tim Janik  <timj@gtk.org>

		* bsescripthelper.c: invoke bsesh with BSE version as
		$BSE_PATH_BINARIES/bsesh-$BSE_VERSION.

	Wed Feb 25 03:40:31 2004  Tim Janik  <timj@gtk.org>

		* bsemidifile.c (bse_midi_file_setup_song): fix note insertion
		(use bse-part-insert-note-auto).

	Mon Feb 23 05:13:34 2004  Tim Janik  <timj@gtk.org>

		* bsedefs.h:
		* bsemain.[hc]: use bse_gettext() to translate strings, so we can
		catch places triggering translations prematurely (before
		bindtextdomain() is called), e.g. due to static C++ constructors.

		* bsepart.[hc]: support per-channel matches for note-specific events
		in bse_part_list_controls().
		* bsepart.proc: removed get-range-controls() which is a clone of
		list-controls(). added get-channel-controls() to get note-specific
		control events.

	Sun Feb 22 02:03:51 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: Use new sfidl options.

	Tue Feb 17 01:48:50 2004  Tim Janik  <timj@gtk.org>

		* bsepart.[hc]:
		(bse_part_list_notes):
		(bse_part_select_notes):
		(bse_part_select_notes_exclusive): added support for channel arguments,
		to limit effect of these functions to a specific channel, unless
		channel=~0 was passed. adapted callers.

		* bserecords.idl: enrich PartNote by a channel field. adapted callers.

	Thu Feb 12 10:48:26 2004  Tim Janik  <timj@gtk.org>

		* bsepart.[hc]:
		(bse_part_list_notes): renamed from bse_part_list_notes_crossing(),
		added an argument include_crossings. fixed possible dups of notes
		starting exactly at tick for include_crossings.

	Wed Feb 11 01:43:49 2004  Tim Janik  <timj@gtk.org>

		* bseamplifier.idl: let base_level properly default to 0.

		* bseprocedure.proc: implement accessors for authors and license
		about types.

	Sun Feb  8 03:32:11 2004  Tim Janik  <timj@gtk.org>

		* bseconstvalues.h: provide float and double versions of
		BSE_MAX_FINE_TUNE.

		* bsepart.[hc]:
		comletely reimplemented the basic data structures. switched to binary
		searchable arrays rather than implementing one from scratch.
		keep control events in their own array.
		create an array per channel, each channel array may only contain one
		note per tick, so polyphonic notes require multiple channels.
		keep a list of crossing siblings per note to avoid O(n_notes)
		complexity to expand regions. added ::n_channels property.
		coalesce multiple control events of the same type at the same tick.
		changed serialization format to be more compact for storing multiple
		notes and control events. kept compat code to parse old format.

		* bsepart.proc: adapted to BsePart API changes. added a channel argument
		to insert-note(), introduced insert-note-auto() which preserves the old
		channel-agnostic behaviour of insert-note().

		* bsessequencer.c: adapt to BsePart API changes.

	Tue Feb  3 23:29:30 2004  Tim Janik  <timj@gtk.org>

		* bsemain.c (bse_init_core): minor improvement in passing gettimeofday
		entrophy into srand().

		* bseprocedure.[hc]: implemented procedure class caching, which keeps
		procedure classes alive for ca. 500ms after their last call. this gets
		rid of a lot of unnecessary class (and paramspec) creations and
		destructions.

	Sat Jan 31 23:37:22 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocedure.c (call_proc): Fixed bug in validation: instead of
		validating the procedure input values before and after the procedure
		call, validate the procedure inputs values before, and procedure
		output values after executing a procedure.

	Wed Jan 28 11:10:18 2004  Tim Janik  <timj@gtk.org>

		* bsesniffer.cc: don't swallow requests while inactive, send replies
		with 0-length fblocks instead (fixes GUI loosing track of sniffer
		data after stopping the synth).

	Tue Jan 27 16:41:45 2004  Tim Janik  <timj@gtk.org>

		* bsetrack.c (bse_track_class_init): increased default number of voices
		to 16 (from 8).

	Tue Jan 27 16:03:01 2004  Tim Janik  <timj@gtk.org>

		* bsecxxbase.hh: added instance_is_a(), value_get_gobject<>()
		and value_set_gobject().

		* bseexports.h:
		* bsecxxplugin.hh: adapted to sficxx.h changes, don't call
		record/sequence functions from static constructor as the
		type system may not yet be initialized.

		* bsecxxutils.hh: tweak InvalidArgument() exception.

		* bsesniffer.cc: implement combined requests.

		* bsetype.c: fixed transform function registration.

	Mon Jan 26 02:36:07 2004  Tim Janik  <timj@gtk.org>

		* bsecxxmodule.idl: new idl file to define Bse::Effect.

		* bsecxxbase.idl: new idl file to define Bse::CxxBase.

		* bseeffectbalance.[hc]:
		* bseeffectfinetune.[hc]:
		* bseeffectnotevolume.[hc]:
		* bseeffectpatternbreak.[hc]:
		* bseeffectpatternjump.[hc]:
		* bseeffectvolumedelta.[hc]:
		* bseeffect.[hc]: remove all bseeffect* files, all the code within
		was outdated and unused for several years.

		* bse.idl: added bsecxxbase.idl and bsecxxmodule.idl.

		* bsecxxbase.[hc]*: make gobject() const. implement value_get_object(),
		value_set_object() and value_set_casted().

		* bsecxxvalue.hh: removed g_value_get_object<>() template.

		* bsecxxmodule.[hc]: provide conventional BSE_TYPE_EFFECT and base class.

		* bsesniffer.idl: removed parentation hacks by including
		bsecxxmodule.idl, added Sniffer (object) field in record.

	Sun Jan 25 08:36:28 2004  Tim Janik  <timj@gtk.org>

		* bsesniffer.idl: enable record and sequence generation, still
		need to comment out object references though.

	Sun Jan 25 05:28:23 2004  Tim Janik  <timj@gtk.org>

		* bseplugin.c: use new boxed registration functions.

		* bsetype.[hc]: GType doesn't really support dynamic boxed types, so
		register boxed types from plugins statically and plug their
		implementations internally. tidied up pspec constructors.

	Sat Jan 24 19:14:46 2004  Tim Janik  <timj@gtk.org>

		* bsecxxplugin.hh: remove TypeName argument from BSE_CXX_DECLARE_RECORD()
		and BSE_CXX_DECLARE_SEQUENCE(), get the type names via type_name().

	Sat Jan 24 07:04:59 2004  Tim Janik  <timj@gtk.org>

		* bseexports.h: specify the field array of boxed types directly
		in BseExportNodeBoxed.

		* bsecxxplugin.hh: adaptions due to bseexport.h changes.

		* bsetype.c:
		(bse_type_reinit_boxed):
		(bse_type_uninit_boxed): register and unregister extra info about
		boxed records and sequences with sfi.

		* bseglue.c: adapt to sfi_boxed_type_get_rec_fields() and
		sfi_boxed_type_get_seq_element().

		* bseparam.c: likewise.

	Fri Jan 23 22:38:57 2004  Tim Janik  <timj@gtk.org>

		* bseplugin.c (bse_plugin_check_load): added debugging output for
		--bse-debug=plugins.

	Fri Jan 23 02:28:58 2004  Tim Janik  <timj@gtk.org>

		* bsecxxplugin.hh: complete record and sequence registration macros.

		* bseexports.h: boxed types supply SfiBoxedFields.

		* bsetype.h: fixed sfidl pspec constructors.

	Wed Jan 21 03:35:59 2004  Tim Janik  <timj@gtk.org>

		* bsecxxplugin.hh (BSE_CXX_DECLARE_RECORD): implementation fixups.

	Tue Jan 20 15:30:44 2004  Tim Janik  <timj@gtk.org>

		* bseexports.h: added BseExportNodeBoxed for records and
		sequences.

		* bseparam.c:
		* bseglue.c: honour sfi_boxed_type_get_fields().

		* bseplugin.[hc]: implement un-initialization of types
		upon unloading (needed by boxed). added BSE_EXPORT_NODE_RECORD
		and BSE_EXPORT_NODE_SEQUENCE handling.

		* bsetype.[hc]: implement dynamic boxed.

		* bsecxxplugin.hh: started implementing RECORD type registration.

	Tue Jan 20 05:47:04 2004  Tim Janik  <timj@gtk.org>

		* bsesniffer.cc: adapt to C++ type changes.

	Tue Jan 20 04:52:45 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl bseamplifier.idl: Add "using namespace Sfi;".

	Tue Jan 20 03:05:25 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h Makefile.am: Removed obsolete code.

		* tests/testsmart.cc tests/Makefile.am: Removed test for obsolete
		code.

	Tue Jan 20 00:58:49 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Remove redundant typedefs (now in sfi/sficxx.h).

	Mon Jan 19 20:31:28 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am bseprocidl.c: Exclude types which are from bse.idl (and
		not define from bsehack.idl) automatically, instead of maintaining a
		type list in bseprocidl (uses sfidl --list-types).

	Mon Jan 19 18:54:11 2004  Tim Janik  <timj@gtk.org>

		* Makefile.am: generate bsehack.idl from procidl.
		made bse.idl the canonical client-binding API idl file.

		* bsecxxutils.hh: provide assert_ptr_derivation().

		* bsecxxvalue.hh: use assert_ptr_derivation() in
		g_value_get_object<>() to fix object offset.

		* bsemidireceiver.cc: fix assertion.

		* bseprocidl.cc: skip BseSniffer and BseSnifferType.

		* bsesniffer.cc, bsesniffer.idl: recode process() to handle multiple
		requests per block. queue requests before prepare(). added
		sniffer_get_mix_freq().

		* bsesong.proc:
		* bsetrack.proc: moved sniffer creation from song to track.

	Mon Jan 19 15:31:20 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: beautify float output. s/Name/Identifier/ for
		property/channel identifiers. fixed plugin loading.

	Fri Jan 16 19:42:30 2004  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc]: added support for alaw and ulaw sample formats.
		(wave_format_byte_width): the byte width needs not be deductable from
		the bit-depth (i.e. is different for alaw/ulaw).
		(wave_handle_read): removed conversion cases by means of using
		gsl_conv_to_float() instead.

		* gsldatautils.[hc]: implement alaw/ulaw decoding.

		* gslloader-wav.c: added support for ALAW and ULAW encoded WAV files.

		* gslloader-gslwave.c: started support for additional fields.

		* gslwave.header: document newly supported fields.

	Fri Jan 16 17:51:53 2004  Tim Janik  <timj@gtk.org>

		* engine-mplan.txt: fixed typo.

		* gslengine.c: fixed documentation.

		* gslopmaster.c: make needs_reset unconditionally indicate whether a
		module needs a reset() call. check whether a module flagged needs_reset
		has a reset() function before calling it. defer forced resets until
		shortly before process().

		* gslopschedule.c: propagate needs_reset() down a branch similar to
		suspension state. this fixes missing reset()s of voices where both
		a suspend and resume job for a voice fell into the same block boundary.

	Fri Jan 16 04:32:05 2004  Tim Janik  <timj@gtk.org>

		* gslopmaster.c (master_process_flow): execute flow jobs scheduled at
		block boundary at the start of the new block, not at the end of the old
		block (and with that, *after* corresponding accessor or boundary jobs).

	Thu Jan 15 14:54:01 2004  Tim Janik  <timj@gtk.org>

		* gslwavechunk.c: in fill_block() step through the sample with a step
		width of 1 instead of n_channels, since n_channels wide stepping is
		performed later on through dirstride values > 1. fixes "clicks" at
		the start/end of unlooped stereo samples (and looped stereo samples).

		* gslwaveosc.[hc]:
		* gslwaveosc-aux.c: support channel selection offset in config struct.

	Sun Jan 11 06:18:05 2004  Tim Janik  <timj@gtk.org>

		* bsestorage.c (parse_raw_data_handle): properly setup return values,
		even for empty waves.

		* bsewave.c (parse_wave_chunk): fixed error handling to not mess up
		scanner state.

	Tue Jan  6 01:33:47 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Add typedefs for Sfi::Int, Sfi::Num and similar.

	Sun Jan  4 12:30:30 2004  Tim Janik  <timj@gtk.org>

		* bseautodoc.c (show_plugindoc): added plugin documentation generation.

		* bseamplifier.idl: refine tooltip.

		* bsestandardosc.c: added i18n markup.

	Fri Jan  2 19:04:16 2004  Tim Janik  <timj@gtk.org>

		* bsewave.[hc]: added bse_wave_set_description_bits() to set comment and
		similar information from wave file descriptions.
		(bse_wave_load_wave_file): call bse_wave_set_description_bits() if
		requested.
		* bsewave.proc: call bse_wave_set_description_bits() when loading waves.

		* bsewaverepo.proc: call bse_wave_set_description_bits() when loading waves.

		* gslloader.[hc]: added authors, license and comment fields to
		wave descriptions.

		* tests/magictest.c: added -t option to test load file info.

		* gslcommon.[hc]: register AIFF file loader.

		* gslloader-aiff.c: new file loader for AIFF files.

	Wed Dec 31 01:06:51 2003  Nedko Arnaudov  <nedko@users.sourceforge.net>

	        * bsemididevice-oss.c:
	        * bsepcmdevice-oss.c: Use configure detection of OSS emulation
	        that is not implemented in sys/soundcard.h but in soundcard.h

	Tue Dec 30 23:48:17 2003  Tim Janik  <timj@gtk.org>

		* bsecxxmodule.[hc]*: use GslModule type, strip unnecessary casts,
		added block_size(), tick_stamp() and gslmodule() accessors.
		added wrappers around BseSource accessor macros.

		* bsecxxplugin.[hc]*: changed procedure registration macro to
		BSE_CXX_REGISTER_PROCEDURE() and adapted it to put everything into the
		Procedure namespace.

		* bsecxxutils.[hc]*: provided convenience typedefs to ease procedure
		writing in the Procedure namespace.

		* bsemidireceiver.cc: removed casts.

		* bsesniffer.[hc]*: implemented stereo sniffing routine, as well as
		the corresponding procedures and signal + emission thereof.

		* bsesong.proc: added bse-song-create-sniffer() to create a sniffer
		for a specific track.

		* bsesource.c: removed unnecessary casts.

		* bsetrack.[hc]: added bse_track_connect_sniffer().

		* gslopmaster.c:
		* gslengine.[hc]: made gsl_job_flow_access() and gsl_job_boundary_access()
		take a GslReplyFunc() as free function, made gsl_job_request_reply()
		match their argument ordering. renamed gsl_externvar_block_size.
		provided gsl_module_peek_reply().

	Mon Dec 29 21:00:23 2003  Tim Janik  <timj@gtk.org>

		* bsesniffer.idl:
		* bsesniffer.cc: start at a module to report current sample data
		or statistics thereof. this needs to have its own procedures, signals,
		and a context merging module.

		* opnode.[hc]:
		* gslopmaster.c:
		* gslengine.[hc]: implemented ENGINE_JOB_REQUEST_REPLY and
		gsl_job_request_reply() to support delayed round trip jobs.
		unified destruction logic of reply jobs and timed jobs.
		(gsl_module_process_reply): new function to send a reply job
		back to the client.

		* gslopmaster.c: claim ownership for a node in ENGINE_JOB_INTEGRATE.

		* gsloputil.[hc]:
		renamed _engine_mnl_reorder() to _engine_mnl_node_changed() since it
		also collects trash reply jobs now.
		(free_node): free unused reply jobs, fixed leaks of job data from
		discarded transactions for ENGINE_JOB_INTEGRATE, ENGINE_JOB_FLOW_JOB
		and ENGINE_JOB_BOUNDARY_JOB.
		(gsl_engine_garbage_collect): call reply job handlers as early as
		possible.

		* bsecxxbase.[hc]: renamed add_param(). implemented add_signal().

		* bseobject.[hc]: export bse_object_marshal_signal() to allow C++
		object signals.

		* bsecxxmodule.[hc]*: added lots of GslModule related hooks so
		more advanced modules dealing with BseSource or engine internals can
		still be written in C++.
		moved BSE_CXX_DEFINE_CREATE_MODULE(), BSE_EFFECT_INTEGRATE_MODULE()
		and BSE_CXX_DEFINE_MODULE_CONFIGURATOR() here from bsecxxplugin.hh.

		* bsemidireceiver.cc (voice_switch_module_free): fix free'd
		memory access.

		* bsetype.h: support FBlock pspecs.

		* bseprocidl.cc: guard against already-destroyed signals.

	Sun Dec 28 10:24:29 2003  Tim Janik  <timj@gtk.org>

		* bserecords.idl:
		* bsesong.[hc]:
		* gslfilter.c: s/nominator/numerator/.

	Thu Dec 25 07:25:51 2003  Tim Janik  <timj@gtk.org>

		* bsemidifile.[hc]: new files, containing a MIDI file parser (based on
		BseMidiDecoder) and a rudimentary MIDI file to BseSong converter.

		* bsemidievent.[hc]: comment fixups. added SMF meta event types.
		renamed event tick_stamp field to delta_time. added global macros
		to check for channel-voice, system-common and system-realtime
		messages.
		(bse_midi_signal_default): adjusted #7 (volume) default and added
		defaults for #10 (Panorama) and #11 (Expression).
		(boxed_copy_midi_event): fix bogus allocation and copying.
		(bse_midi_free_event): properly free the new event types.

		* bsemididecoder.[hc]: lots of fixes, added SMF delta time and meta
		event parsing. turned the decoder into a proper state machine.

		* bsessequencer.c:
		* bsemidireceiver.cc: cosmetic fixups, adapt to renames.

		* bseproject.proc: added import-midi-file() procedure.

		* bsemidievent.h:
		* bserecords.idl: fixed midi signal type names, added some.

	Tue Dec 23 05:24:53 2003  Tim Janik  <timj@gtk.org>

		* bseplugin.[hc] (bse_plugin_check_load): disabled .la loading, expect
		readily loadable .so files instead.
		(bse_plugin_path_list_files): allow plugin path to contain executable
		files (instead of directories).

		* bseprocedure.[hc]: removed blurb, name, authors, help and license
		fields from procedures as these informations are kept on types now.
		provide BSE_PROCEDURE_NAME() for easy name access.

		* bsescripthelper.[hc]: introduced "options" field for scripts.

		* mkcproc.pl:
		* bseplugin.[hc]:
		* bsescripthelper.[hc]:
		* bseexports.h: unified type info field order, keep blurb etc. only
		via bse_type_*() accessors.

		* mkcproc.pl: support OPTIONS.

		* *.proc: BLURB => HELP fixes.

		* bseautodoc.c: don't generate @refBlurb{} andymore since procedures
		only have "help" now.

		* bsequery.c: added -:f option for fatal warnings.

		* bseparasite.proc: removed i18n markup, which is not supported for C
		procedures (procedures need to be ported to C++ long-term).

		* *.c: fixes about accessing authors/license/blurb through bsetype.h,
		removed code to keep type info on procedures.

	Mon Dec 22 23:59:28 2003  Tim Janik  <timj@gtk.org>

		* bsecxxplugin.hh: initialize options field in export nodes.

		* bseplugin.c: register type options from plugins.

		* bseplugin.h: let C plugins default to NULL options.

		* mkcproc.pl: let C procedures default to NULL options.

		* bseprocedure.proc: provide bse-type-options().

		* bsetype.[hc]: allow for storing per-type options.

	Sun Dec 21 20:41:46 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h tests/testsmart.cc: Cleaned up the Bse::Sequence
		template. No more iterators. They were not working anyway.

	Sat Dec 20 20:47:25 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added size_type typedef and size() function to our
		Sequence template (like in std::vector).

		* bseprocidl.cc: Support for properties (although without grouping).
		Reenable (most) signals.

	Wed Dec 17 23:54:22 2003  Tim Janik  <timj@gtk.org>

		* bsecategories.c (bse_category_from_id): set the icon to NULL instead
		of creating a degenerated one. removed degenerated dummy-icon hacks.

	Wed Dec 17 19:55:58 2003  Tim Janik  <timj@gtk.org>

		* bseglue.c (bglue_exec_proc): make messages warnings in debugging mode.

	Wed Dec 17 19:14:11 2003  Tim Janik  <timj@gtk.org>

		* bse/bsetype.h: allow options argument for Trigger pspecs.

	Tue Dec 16 11:59:43 2003  Tim Janik  <timj@gtk.org>

		* bsecxxplugin.hh: assign authors and license fields in BseExportNode.

		* bseexports.h: added authors and license fields.

		* bseitem.proc: provide get-type-authors() and get-type-license()
		procedures on items.

		* bseplugin.[hc]: register plugin authors and license with types.

		* bsetype.[hc]: provide bse_type_{add|get}_{blurb|authors|license}().
		_blurb variants got renamed, changed callers.

	Tue Dec 16 02:16:25 2003  Tim Janik  <timj@gtk.org>

		* bsesong.c (bse_song_class_init): make playback properties skip-undo.

		* bseitem.c:
		* bseproject.c:
		* bsesource.c:
		* bsestorage.[hc]: removed BSE_STORAGE_SKIP_DEFAULTS flag and macro,
		since skipping default values is now indicated by the :skip-default:
		property option.

	Mon Dec 15 22:42:37 2003  Tim Janik  <timj@gtk.org>

		* bsemidicontroller.c:
		* bsepcminput.c:
		* bsepcmoutput.c:
		* bsesong.c:
		* bsesource.c:
		* bsestandardosc.c:
		* bsemidiinput.c:
		* bsesubiport.c:
		* bsesuboport.c:
		* bsesubsynth.c:
		* bsesuper.c:
		* bsetrack.c:
		* bsemidisynth.c:
		* bseobject.c: flagged :skip-default: properties.

		* bseparam.c: make object properties skip-default automatically.

		* bseitem.c: skip undo recording for :skip-undo: properties.

		* bserecords.idl: provide SKIP_DEFAULT and SKIP_UNDO constants.

		* bsestorage.c: don't serialize defaulting :skip-default: properties.

		* bsetype.h: skip undo/redo for :trigger: properties.

	Mon Dec 15 21:16:49 2003  Tim Janik  <timj@gtk.org>

		* bseundostack.h: remove 64bit fields from BseUndoStep data union and
		added long/ulong fields to reduce memory usage on 32bit systems.

		* bseitem.c:
		* bsecontainer.c: use v_long/v_ulong data fields in BseUndoStep.

	Mon Dec 15 16:00:48 2003  Tim Janik  <timj@gtk.org>

		* bseamplifier.idl: stripped "/Module" prefix from categories as this
		is auto-prepended by the idl compiler now and shouldn't be translated.
		completed i18n markup of info strings, streams and parameter groups.

	Tue Dec  2 23:28:37 2003  Tim Janik  <timj@gtk.org>

		* bse/bseprocidl.cc: don't error out on SfiRec arguments.

		* bseitem.[hc]: renamed bse_item_uncross() to bse_item_uncross_links().

		* bseparasite.[hc]: implemented new undo-able parasite interface,
		which supports SfiRec as parasite data and uses a file-path alike
		nameing scheme for the parasites. storage not yet implemented.

		* bseparasite.proc: added procedures to list, set, add and get new
		parasite records.

	Fri Nov 28 03:34:15 2003  Tim Janik  <timj@gtk.org>

		* tests/testcxx.cc: reenabled closure test, use BSE_TYPE_AMPLIFIER as
		test object which is implemented in c++.

	Fri Nov 28 00:53:37 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added resize() for sequences.

	Wed Nov 26 22:14:44 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl: Proxy is gone.

	Wed Nov 26 13:40:11 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added (template) classes for SmartPtr, RefCountable,
		Sequence, ... used for records.

		* tests/testsmart.cc: Test for the smartpointer stuff.

		* Makefile.am tests/Makefile.am: Corresponding Makefile entries.

	Tue Nov 18 20:03:38 2003  Tim Janik  <timj@gtk.org>

		* engine-mplan.txt: renamed (from gsl-mplan.txt).

	Tue Nov 18 18:51:53 2003  Tim Janik  <timj@gtk.org>

		* bsequery.c (main): fix root type handling.

		* bseobject.proc: removed.

	Sun Nov 16 13:30:00 2003  Christian Neumair  <chris@gnome-de.org>

		* bsebiquadfilter.c: added xgettext keyword (no-c-format) comment
		to a string.

	Mon Oct 27 22:12:48 2003  Tim Janik  <timj@gtk.org>

		* bseamplifier.[ic]*: from 0.5.5 on, let the amplifier default to
		multiply (and-ing) the two control inputs.

	Mon Oct 27 00:39:10 2003  Tim Janik  <timj@gtk.org>

		* gslloader-oggvorbis.c: added application/ogg.

	Sun Oct 26 09:38:12 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl: Using // within a string now works (no longer
		treated as C++ comment start by sfidl).

	Sat Oct 25 17:30:21 2003  Tim Janik  <timj@gtk.org>

		* bsesuper.c: introduce copyright compat property.

	Sat Oct 25 02:05:14 2003  Tim Janik  <timj@gtk.org>

		* bsebiquadfilter.[hc]: nuked frequency fine-tune setting which was
		rather pointless.

		* bseamplifier.idl: fix compat balance ranges.

	Sat Oct 25 01:49:50 2003  Tim Janik  <timj@gtk.org>

		* *.*: changed "copyright" field of procedures, scripts and objects
		into a "license" field which better reflects what we're asking for.

	Sat Oct 18 05:06:27 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]: keep track of items stored so far, and of items
		referenced so far.

		* bseproject.[hcp]*: implemented dependency storing.
		(bse_project_store_bse): if the item to store is not the project,
		store all out-of-branch objects it referes to.

	Sat Oct 18 04:45:29 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetype.h: Added "scale" hint to Freq param spec. Added LogScale
		param spec.

	Fri Oct 17 22:05:10 2003  Tim Janik  <timj@gtk.org>

		* bseserver.proc: export demo path and custom directories for
		effects and instruments.

		* bsetrack.proc: docu fix.

	Tue Oct 14 21:51:23 2003  Tim Janik  <timj@gtk.org>

		* bseamplifier.cc: more 0.5.4-compatibility handling, audio-gain used to
		default to 50%.

	Tue Oct 14 21:16:44 2003  Tim Janik  <timj@gtk.org>

		* examplepeakfilter.[hc]*: removed first c++ example module, there's
		plenty of other example code now (bsebalance.[ic]*, bseamplifier.[ic]*).

		* bsehelloworld.proc: removed first example procedures, there're plenty
		of others available, examples in scheme even.

	Mon Oct 13 16:09:38 2003  Tim Janik  <timj@gtk.org>

		* bseproject.proc: use bse_undo_stack_push_add_on() to push the undo step
		to deactivate a project after playback started.

		* bseundostack.[hc]: added bse_undo_stack_push_add_on() which merges its
		undo step to the last pushed step if there is any.

	Sun Oct 12 16:37:29 2003  Tim Janik  <timj@gtk.org>

		* bseutils.[hc]: removed old search path mathing code.
		sfi_file_crawler_list_files() does a better job on this.

		* bseladspa.[hc]:
		* bseplugin.[hc]:
		* bsescripthelper.[hc]: provide bse_*_path_list_files() functions
		which take care of extended path specifications and use SfiFileCrawler
		to properly expand ~/ etc.

		* bsemain.c:
		* bseserver.proc: use new bse_*_path_list_files() functions.

		* bserecords.idl: indentation fixes.
		added 6 "Search Paths" properties to BseGConfig, to allow users to
		configure sample/script/plugin/etc. paths directly.

		* bseserver.proc: added procedures to query file paths from bse
		and bse/mp3-handler versions.

		* gsldatahandle-mad.[hc]: export MAD version string.

	Sun Oct 12 14:17:19 2003  Tim Janik  <timj@gtk.org>

		* bsedefs.h:
		* bsemain.c: use BSE_GETTEXT_DOMAIN instead of unversioned "bse" and
		bind gettext charset to UTF-8.

		* bseconfig.h.in: provide BSE_GETTEXT_DOMAIN.

		* bsedefs.h: include bseconfig.h globally.

	Sun Oct 12 01:12:15 2003  Tim Janik  <timj@gtk.org>

		* fixes according to pspec hints->options change.

		* bserecords.idl: fixed indentation.

	Sat Oct 11 22:10:18 2003  Tim Janik  <timj@gtk.org>

		* bsemain.c: bind gettext domain "bse" to BST_PATH_LOCALE.

	Fri Oct 10 16:47:53 2003  Tim Janik  <timj@gtk.org>

		* icons/inport.c:
		* icons/outport.c:
		* icons/subsynth.c:
		* icons/virtual.xcf: replaced virtual in/out/subsynth icons.

		* icons/inport.xcf:
		* icons/outport.xcf:
		* icons/inoutport.c:
		* icons/icons/inoutport.xcf: removed.

	Fri Oct 10 00:53:56 2003  Tim Janik  <timj@gtk.org>

		* bseamplifier.idl (Bse): *sigh* workaround bse/bse.idl include.

	Fri Oct 10 00:22:03 2003  Tim Janik  <timj@gtk.org>

		* bseprocidl.cc (printInterface): *sigh* prevent BseAmplifier from
		being generated.

	Thu Oct  9 23:28:10 2003  Tim Janik  <timj@gtk.org>

		* Makefile.am: added rules to build C++ modules from idl files.

		* bsecxxbase.[hc]*: wrap BseItem.compat_setup().

		* bsecxxmodule.[hc]*: allow setting the output buffer of a module.

		* bsecxxplugin.[hc]*: support in core "plugins", i.e. builtins.

		* bseitem.[hc]: added a method bse_item_compat_setup() to patch up
		object state during parsing according to an old *.bse version.

		* bseplugin.[hc]: provide export identity node for builtin types
		and initialize them.

		* bsestorage.[hc]: compat_setup() items after creation.

		* bseamplifier.cc, bseamplifier.idl: ported bseamplifier.[hc] to
		idl based C++ code. changed property setup to match BseBalance
		where appropriate. optimized inner loop, used C++ templates and
		bseincluder.h to generate processing loop special cases.
		added compat code to ensure compatibility with <=0.5.4 stored
		BseAmplifier setups.

		* bseamplifier.[hc]: removed.

		* bseincluder.h: generate switch()-able function calls with
		a constant integer argument (usefull for C++ templates) in
		the range 0..4096.

		* bse/icons/ampctrl.c: removed.
		* bse/icons/ampctrl.png: added.

	2003-10-08  Christian Neumair  <chris@gnome-de.org>

		* tests/.cvsignore: Added missing file.

	Mon Oct  6 02:55:49 2003  Tim Janik  <timj@gtk.org>

		* bsecategories.c: adapt to new documented toplevel category set.
		check category fundamental types.

		* bse/bsecxxplugin.hh: remove namespace prefix from effect and procedure
		registration macros.

		* bse/bseitem.c: make seqid a non-gui property.

	Sun Oct  5 10:51:06 2003  Tim Janik  <timj@gtk.org>

		* bseamplifier.c: fix property defaults.

	Sun Oct  5 08:18:12 2003  Tim Janik  <timj@gtk.org>

		* bsetype.h (sfidl_pspec_Frequency): new pspec creator.

	Sun Oct  5 07:00:40 2003  Tim Janik  <timj@gtk.org>

		* bseutils.[hc]: added balance property utility functions.

		* bsetype.h: added balance pspec creator.

	Sat Oct  4 04:13:00 2003  Tim Janik  <timj@gtk.org>

		* bsecompat.c (bse_compat_rewrite_type_name): enter renamed
		object type names.

		* bseinstrumentinput.[hc]: implement BseInstrumentInput.
		* bsesubkeyboard.[hc]: removed.

		* bseinstrumentoutput.[hc]: implement BseInstrumentOutput.
		* bsesubinstrument.[hc]: removed.

		* bsemidiinput.[hc]: implement BseMidiInput.
		* bsemonokeyboard.[hc]: removed.

		* bsemidicontroller.[hc]: implement BseMidiController.
		* bsemidiicontroller.[hc]: removed.

		* bsecontainer.c (bse_container_add_item): when creating
		automatic names for modules, strip "Bse" namespace.

	Sat Oct  4 03:00:03 2003  Tim Janik  <timj@gtk.org>

		* copied files in CVS repository for object renames:
		BseMonoKeyboard    -> BseMidiInput
		BseMidiIController -> BseMidiController
		BseSubKeyboard     -> BseInstrumentInput
		BseSubInstrument   -> BseInstrumentOutput

		* bsemidiinput.[hc]: copy of bsemonokeyboard.[hc].
		* bsemidicontroller.[hc]: copy of bsemidiicontroller.[hc].
		* bseinstrumentinput.[hc]: copy of bsesubkeyboard.[hc].
		* bseinstrumentoutput.[hc]: copy of bsesubinstrument.[hc].

	Fri Oct  3 13:34:53 2003  Tim Janik  <timj@gtk.org>

		* bseproject.c (bse_project_dispose): stop and deactivate playing
		projects before attempting to dispose.

	Fri Oct  3 07:37:37 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.cc (bse_midi_receiver_leave_farm): fix wrong assertion.

	Sun Sep 21 04:42:33 2003  Tim Janik  <timj@gtk.org>

		* Makefile.am (libbseinclude_HEADERS): include bse.idl.

	Tue Sep  9 05:22:07 2003  Tim Janik  <timj@gtk.org>

		* bsecxxutils.hh: implemented binary-search templates.

		* bsemidireceiver.cc: more C++-ification, properly namespaced
		stuff. uses stl types in a couple places now.
		keep currently playing voice input modules in a map, handle
		duplicate note-ons. squashed remaining stability bugs.

	Mon Sep  8 14:59:42 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]: made reamining structures private (moved
		to .cc file). renamed voice-input and voice-switch modules and
		their API to make the code more consistent and readable.

	Mon Sep  8 00:11:45 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidireceiver.cc: cvs copy of bsemidireceiver.c.

		* bsemidireceiver.c: removed.

		* bsemidireceiver.*: adapted to compile with a C++ compiler.
		made _BseMidiReceiver private.

	Sun Sep  7 19:35:04 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.c (check_mono_synth_improvement):
		fix pointer==enum typo.

	Sun Sep  7 15:45:26 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.c (activate_switch_module): fix switch module
		activation by using boundary jobs to check connection state.

		* gslopmaster.c (master_update_node_state): really fix all cases where
		reset() could be called after a flow job for an active tick by merging
		reset invocation into the flow job handling function.

		* gslopnode.h:
		* gslopengine.[hc]: added gsl_job_boundary_access().

		* gslopmaster.c: implemented boundary job handling.

		* gslopnode.h:
		* gsloputils.[hc]:
		* gslopmaster.[hc]:
		* gslopschedule.[hc]:
		* gslopengine.[hc]: cleaned up flow job implementation,
		there're no resume flow jobs anymore and we need jobs
		with time stamps at other places. so the underlying structure
		is a TimedJob now.

	Sat Sep  6 20:18:00 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]: allow sub voices per switchable voice.
		major code cleanup. merge voice module and mono synth module.
		introduces designated structure for midi channels.

		* bsemidivoice.[hc]: adapt to new midi receiver API.
		let the switch module handle voice creation on the midi receiver.

		* bsemonokeyboard.c: adapt to ne midi receiver API.

		* bsesnet.h: add voice_id to midi context.

		* gslengine.[hc]: added gsl_module_has_source(), changed
		suspend/resume job creators to gsl_job_suspend_now() and
		gsl_job_resume_at().

		* gslopmaster.c: propagate activation time sptamps for suspend
		and resume jobs. ensure that module->counter is updated
		before invoking any callbacks. fix reset() methods to be executed
		before flow jobs for a specific tick stamp. enfore initial reset()
		after node integration.

		* gslopnode.h: adapt nodes and jobs to allow suspend/activation
		tick stamps instead of just flags.

		* gslopschedule.c: calculate and propagate activation stamps instead
		of suspend flags. fixed suspend calculation for cycles.

		* gsl-mplan.txt: explain introduction of activation stamps used to
		implement suspend state for nodes.

	Thu Sep  4 18:55:56 2003  Tim Janik  <timj@gtk.org>

		* bsesnet.[hc]: introduce BseMidiContext structure which holds
		the midi_receiver, midi_channel, etc. for a (synthesis) context.
		changed context creation, branch cloning and midi-retrival API
		to use BseMidiContext.

		* bsemidivoice.[hc]: give the voice input a voice switch handle,
		rather than the other way around. allocate midi voice from voice
		switch code, and for midi channel of voice switch module. got
		rid of midi_receiver references by means of BseMidiContext usage.

		* bsesubsynth.[hc]: forgo midi-receiver reference, use BseMidiContext.
		allow midi-channel overriding for sub snets.

		* bsetrack.[hc]: fix code according to voice input/switch changes.
		use BseMidiContext, fix midi-channel updates.

		* bsesong.c:
		* bseproject.c:
		* bsemonokeyboard.c:
		* bsemidiicontroller.c: BseMidiContext related fixes.

		* bsemidisynth.c: adapt to new midi voice input/switch code.
		fix midi channel handling. BseMidiContext related fixes.

		* bsemidireceiver.c: assert midi_channel and voice_id to be >= 1.

		* bsemidievent.c: assert midi_channel to be >= 1.

	Thu Sep  4 14:34:36 2003  Tim Janik  <timj@gtk.org>

		* bsenote.[hc]: newly added files. these take over note utility
		fucntions from bseutils.[hc] and at some point probably also note
		specific functions from sfi. implemented frequency array, based
		on the GDArray code.

		* bsewave.[hc]: use BseFreqArray to match frequencies now, since
		GDArray is gone.

		* bsetype.h: added pspec constructors for Trigger and Perc.
		removed Frequency constructor, there's one for Freq.

		* bsecxxplugin.hh: support static data i ninitialization of generated classes.

		* bseutils.h:
		* bseutils.c:
		* bsecompat.h: removed note specific stuff.

	Wed Sep  3 00:59:09 2003  Tim Janik  <timj@gtk.org>

		* bsecxxbase.[hc]*: provide public conversion function for GObject
		to CxxBase.

		* bsecxxmodule.[hc]*: renamed Module to SynthesisModule so plugins
		can simply define "Module" objects. don't register abstract BseEffect
		with categories.

		* bsecxxplugin.[hc]*: unify type registration for classes, enums and
		procedures in plugins.

		* bsecxxutils.[hc]*: fix category registration. get rid of C++ classes
		having to prototye a get_type() function.

		* bsecxxvalue.hh: provide g_value_get_object<>() template to retrieve
		specific Cxx classes from values.

		* bseexports.h: mostly cosmetic patchups on the new export structure.

		* bsemain.c (bse_init_intern): allow automated core plugin registration.

		* bseparam.[hc]: remove all enum hackery.

		* bseplugin.c: fixed plugin loading error handling.

		* bseprocedure.[hc]: reference value types prior to use to properly
		support plugin types in procedures.

		* bseprocidl.cc: fixed up type special casing. however this still lacks
		fundamental supprot for records and sequences, so signal generation
		needs to be disabled at the moment.

		* bsequery.c: fixed plugin registration.

		* bsetype.[hc]: provide enum pspecs creators.

		* mkcproc.pl: fixed recently introduced bug that swallowed procedure infos.

	Sun Aug 31 15:53:17 2003  Tim Janik  <timj@gtk.org>

		* mkcproc.pl: fix recently introduced bug that prevented
		HELP/AUTHORS etc. assignemtns in procedure definitions.

	Mon Aug 25 20:01:58 2003  Tim Janik  <timj@gtk.org>

		* bseladspa.c (bse_ladspa_plugin_check_load):
		* bseplugin.c (bse_plugin_check_load): for type registration, module
		symbols may be bound lazy.

	Mon Aug 25 19:04:24 2003  Tim Janik  <timj@gtk.org>

		* mkbuiltinlist.pl: removed.
		* Makefile.am: get rid of mkbuiltinlist.pl, use mkcproc.pl instead.

		* Makefile.am:
		* mkcproc.pl: generate procedure file type init functions.

		* bsecategories.[hc]:
		(bse_categories_register): feature a pixdata stream argument as icon.

		* bsecxxbase.[hc]*: added add() variant to CxxBaseClass to add already
		grouped pspecs 	to a class.

		* bsecxxutils.[hc]: streamlined type creation macros, so they can be
		resued by bsecxxplugin.[hc].

		* bseexports.h: complete revamp of the symbols and structures exported
		by plugins. there's only a single structure BseExportIdentity now, which
		links to variants of BseExportNode to hold exported type data.

		* bseobject.[hc]: added bse_object_class_add_grouped_property().

		* bseplugin.[hc]: simplified builtin type registration, we use a
		single init function for each procedure file now.
		greatly simplified symbol lookup in modules and type registration,
		according to the new structures in bseexports.h.
		removed the majority of magic type builtin-registration and export
		macros. plugin-alike registration for builtin types is not anymore
		supported, and for plugins, exports boild down to 2 macros.

		* bseprocedure.[hc]: adaptions to the new bseexports.h.

		* bseutils.[hc]: since BSE doesn't link against gdkpixbuf, added a
		small function bse_icon_from_pixstream() that extracts a BsePixdata
		structure from a pixstream as generated by gdk-pixbuf-csource.
		supports only 8bit RGBA images (possibly RLE encoded).

	Fri Aug 22 08:06:29 2003  Tim Janik  <timj@gtk.org>

	        * bse.idl:
	        * bserecords.idl:
	        * Makefile.am: renamed *.sfidl to *.idl.

	Fri Aug 22 05:01:14 2003  Tim Janik  <timj@gtk.org>

		* examplepeakfilter.[hc]*: implementation of a peak filter, and example
		effect implemented in C++.

	        * bsecxxmodule.[hc]*: implement Module, the C++ base class for engine
	        modules. implement Bse::Effect, mostly a wrapper around BseSource
	        functionality to allow effect implementations in C++.

		* bsecxxvalue.[hc]*: C++ GValue wrapper.

		* bsegenclosures.h: generated closure templates to allow signal
		connections in C++ code with many different signatures.

		* bsecxxclosure.[hc]*: implement base signal handler closure,
		and generation code for bsegenclosures.h.

		* bsecxxarg.[hc]*: implement function argument templates to be
		used by signal handler closures.

		* tests/testcxx.cc: new test program to perform cxx tests.

		* bsecxxbase.[hc]*: implement signal connections with type checking.
		implemented class functions to add i/o channels.

		* bsecxxutils.[hc]*: put out a message upon uncaught exceptions.
		added template and exception utilities. allow for better
		parameterization upon type registration.

		* bsesource.[hc]: allow GslClass caching in BseSourceClass.

		* bseexample.[hc]*: removed bad test code, there's a better example
		module now.

		* *.cc: use an anonymous namespace for local (static)
		functions/variables.

		* gslengine.[hc]: implement force-reset jobs to allow forcing
		reset of a module.

		* gslopmaster.[hc]: implement forced resetting of modules.

	Thu Jul 31 18:08:28 2003  Tim Janik  <timj@gtk.org>

		* added BSE gruntwork to get C++ plugins going.

		* bsemain.c: initialize Cxx stuff.

		* bse/bseexample.[hc]*: two C++ example classes.

		* bse/bsecxxbase.[hc]*: base class for C++ objects.

		* bse/bsecxxutils.[hc]*: BSE C++ utilities, type registration etc.

	Wed Jul 30 05:08:54 2003  Tim Janik  <timj@gtk.org>

		* bseexports.h (struct _BseExportEnum): fix constantness.

		* bsetype.[hc]: export sfidl_pspec constructors, so
		plugins may use them.

		* gslloader-gslwave.c: fix symbols.

	Tue Jul 29 13:59:34 2003  Tim Janik  <timj@gtk.org>

		* bsepart.proc: added get-range-controls() to list events
		wthint a tick-duration range.

		* gsldatahandle-mad.c: fix setup.* fields being 0 during
		open().

	Sun Jul 27 02:11:21 2003  Tim Janik  <timj@gtk.org>

		* bsemidiicontroller.[hc]: fix midi channel handling.

		* bsemonokeyboard.[hc]: new module. monophonic midi keyboard input
		module with selectable midi channel.

		* bsemidireceiver.[hc]: implemented monophonic synth (keyboard) module.

		* bseproject.c: fix default midi channel.

	Sat Jul 26 04:33:03 2003  Tim Janik  <timj@gtk.org>

		* bsemididecoder.c (bse_midi_decoder_construct_event): count
		midi channels starting from 1 for decoded events.

		* bsetrack.[hc]: added midi-channel property to allow custom
		midi channel assignments.

	Fri Jul 25 01:05:22 2003  Tim Janik  <timj@gtk.org>

		* bsemididevice-oss.c: push data into a midi decoder.

		* bsemididevice.c: provide default midi decoder (not midi receiver)
		for midi devices.

		* bsemididecoder.[hc]: new files. moved midi event decoding from
		bsemidireceiver.[hc] to here. uses bse_midi_receiver_farm_process_events()
		and bse_midi_receiver_farm_distribute_event() to have the events handled
		by all interested midi receivers.

		* bsemidievent.[hc]: added functions to copy and allocate midi events.

		* bsemidireceiver.[hc]: removed midi event decoding functionality.
		added midi-receiver-farm functions. a global midi event input queue.

		* bseproject.c: add project default decoder to midi receiver farm.

		* bseserver.c: removed default server midi receiver.

	Thu Jul 24 01:28:33 2003  Tim Janik  <timj@gtk.org>

		* bsemidievent.[hc]: remove MIDI_MAX_CHANNEL assertions, up this to 99.

		* bsemidireceiver.[hc]: remove MIDI_MAX_CHANNEL assertions.
		add voice module ref counting.
		(bse_midi_receiver_voices_pending): check poending voices for a specific
		midi-channel.

		* bsemidivoice.c: don't export private functions.

		* bseproject.[hc]: provide a single midi-receiver for the whole project.

		* bsetrack.[hc]: don't provide own midi receiver, use the one from our
		song instead. added midi-channel property per track, per default, an
		internal midi-channel > MIDI_MAX_CHANNEL is used.

		* bsesong.[hcp]*: fetch midi-receiver from project once parent changes.
		provide tracks with midi receiver when creating voices. honour
		midi-channels of tracks.

		* bsessequencer.c: operate on the song's midi receiver, honour
		midi-channels of tracks.

	Fri Jul 18 07:09:01 2003  Tim Janik  <timj@gtk.org>

		* gsldatahandle.c (gsl_data_handle_override): fix locking.

	Fri Jul 18 06:41:08 2003  Tim Janik  <timj@gtk.org>

		* gslloader-gslwave.c: override osc_freq of external data handles.

		* gsldatahandle.[hc]:
		(gsl_data_handle_override): new function to allow overriding of
		setup parameters for closed data handles.
		(gsl_data_handle_open): support overriding of bit_depth, mix_freq
		and osc_freq.
		(gsl_data_handle_close): zero out ->setup.

	Thu Jul 17 03:50:23 2003  Tim Janik  <timj@gtk.org>

		* bsemidievent.[hc]: added bse_midi_event_signal() to create
		non-note events. disabled enum BseMidiSignalType typedef which
		is in idl file now. added internal MIDI event type
		BSE_MIDI_X_CONTINUOUS_CHANGE to better facilitate continuous controls.

		* bsemidireceiver.[hc]: buglet fixups.
		support BSE_MIDI_X_CONTINUOUS_CHANGE events.

		* bsepart.[hc]: major API cleanup. added functions for control events.
		added support to save and load control events.

		* bsepart.proc: API cleanup. added procedures for control events.

		* bseprocidl.cc: hacked around BSE_TYPE_MIDI_SIGNAL_TYPE definition
		in idl file. improved overall code readability.

		* bserecords.sfidl: added control event definition, sependant sequence
		and MidiSignalType choice definition.

		* bsessequencer.c: fixup of velocity handling. added support for
		control events.

		* bsestorage.[hc]: added small helper bse_storage_check_parse_negate().

		* bsetype.c: support default Choice pspecs.

		* bseutils.[hc]: added convenience functions bse_part_control() and
		bse_part_control_seq_take_append().

	Wed Jul 16 18:05:09 2003  Tim Janik  <timj@gtk.org>

		* bsepart.c (bse_part_restore_private): fix parsing bug wrg negative
		fine-tune values.

	Tue Jul 15 03:34:24 2003  Tim Janik  <timj@gtk.org>

		* bsepart.[hcp]*: removed bse_part_find_note_at() which caused us to
		fail to find long overlapped notes. bse_part_list_notes_crossing() does
		find all required notes without bugs.

	Mon Jul 14 14:37:19 2003  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_close): added third argument
		to ioctl(), since on NetBSD (when soundcard.h is included) it's a
		3-argument macro, reported by collver1@comcast.net.

	Tue Jul  8 02:31:30 2003  Tim Janik  <timj@gtk.org>

		* bsemidisynth.[hc]: added slot for postprocessing synthesizer.
		default to 16 voices.

	Mon Jul  7 16:42:05 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.c (wstore_data_handle_reader): remove debugging code.

	Sat Jul  5 02:49:20 2003  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added pnet property to set postprocessing synthesis
		network per song. added sub synth (null-shortcut) after track merger
		to hold pnet.

		* bsetrack.[hc]: added pnet property and sub synth to support post
		processing synthesis networks like above.

		* bsesubsynth.[hc]: added bse_sub_synth_set_null_shortcut(). this
		enables automatic signal-through connections if no snet is set.

	Wed Jun 25 00:18:11 2003  Tim Janik  <timj@gtk.org>

		* bseserver.proc: seperate ladspa and core plugin loading.

	Tue Jun 24 23:25:54 2003  Tim Janik  <timj@gtk.org>

		* bseserver.proc (register_scripts): fixed memleak in if() branch.

		* bsecategories.c (bse_category_from_id): free category fields before
		overwriting them.

	Mon Jun 23 20:33:33 2003  Tim Janik  <timj@gtk.org>

		* bsejanitor.proc:
		* bsejanitor.[hc]: cleaned up connection shutdown logic. spew connection
		aborts to stderr. reap remote child (with small delay after killing if
		necessary).

	Fri Jun 20 00:00:31 2003  Tim Janik  <timj@gtk.org>

		* gsldatahandle-mad.c: fix BSE not compiling without libmad,
		reported by Daniel MacDonald <danboid@yahoo.co.uk>.

	Thu Jun 19 23:21:39 2003  Tim Janik  <timj@gtk.org>

		* bsecategories.proc: get rid of debugging junk.

		* bsemidiicontroller.c:
		* bsepcminput.c:
		* bsepcmoutput.c:
		* bsesubinstrument.c:
		* bsesubiport.c:
		* bsesubkeyboard.c:
		* bsesuboport.c:
		* bsesubsynth.c: fix GType ids still being stored in 32bit integers,
		which breaks on alpha where type ids are 64bit.
		tracked down by Sam Hocevar <sam@zoy.org>.

	Tue Jun 17 14:40:26 2003  Tim Janik  <timj@gtk.org>

		* bseserver.c (engine_init): turn assertion into warning, so we don't
		take down the whole application upon mix frequency changes.

	Tue Jun 17 04:33:46 2003  Tim Janik  <timj@gtk.org>

		* bsecategories.[hc]:
		(categories_match): removed unneccessary value copying.
		(bse_categories_match): match categories via predicate.

		* bsecategories.proc: added bse-categories-match-method() to list
		procedure categories by object.

	Mon Jun 16 20:55:48 2003  Tim Janik  <timj@gtk.org>

		* bsemidisynth.c:
		* bsesong.c: use bse_snet_intern_child() to mark internal children,
		since we also need to keep them alive across dispose.

		* bsesnet.c: added bse_snet_intern_child() to mark a child internal
		and to protected from automatic removal at dispose time.

		* bsemidisynth.c:
		* bsesubsynth.c: use cross-refs to keep track of snets.

		* bsemidisynth.c (bse_midi_synth_list_proxies):
		* bsesubsynth.c (bse_sub_synth_list_proxies):
		* bsetrack.c (bse_track_list_proxies): collect synthesis networks (and
		change ::snet property types) of type BseCSynth, not BseSNet (which is
		abstract and includes songs and midi synths).

		* bseitem.c (bse_item_gather_proxies): don't gather internal items.

		* bseitem.c: renamed BSE_ITEM_AGGREGATE() to BSE_ITEM_INTERNAL().
		added bse_item_set_internal() to set whether an item is internal
		and made this flag affect whole branches.
		added bse_item_needs_storage() and ->needs_storage(), so items can
		refuse to get stored without flagging themselves as "aggregate".
		don't store undo for internal items. changed callers.

		* bseitem.proc: added bse-item-internal() to check whether an
		item is internal.

		* bseproject.c: made bse_project_create_intern_synth() flag the
		newly created synth as internal.

		* bseeditablesample.c: don't flag editable samples as aggregate.

		* bsesnooper.c: don't flag as aggregate, just refuse storage via
		implementing ->needs_storage().

		* bsewave.c: don't flag as aggregate. just refuse storage for
		empty waves by implementing ->needs_storage().

		* bsedatapocket.c: don't flag as aggregate, implement ->needs_storage()
		instead.

	Fri Jun 13 20:01:58 2003  Tim Janik  <timj@gtk.org>

		* bseitem.proc: use bse_item_exec(), not bse_item_exec_void() to keep
		the return value after procedure execution.

	Tue Jun 10 22:08:18 2003  Tim Janik  <timj@gtk.org>

		* bseitem.c: renamed bse_item_exec_void_proc() to bse_item_exec_void().

		* bseitem.proc: added undo, redo, clear-undo, undo-depth and redo-depth
		procedures.

	Mon Jun  9 18:08:27 2003  Tim Janik  <timj@gtk.org>

		* bsepart.[hcp]*: allocate part ids in LIFO scheme to provide correct
		ids for undo state rollbacks. added bse_part_query_note() and implemented
		undo for modifying procedures.

	Mon Jun  9 03:50:49 2003  Tim Janik  <timj@gtk.org>

		* BseWave undo fixup, we now support full undo on waves by keeping
		referenced data handles in memory.

		* bseitem.c:
		(bse_item_backup_to_undo): backup to BSE_STORAGE_DBLOCK_CONTAINED storage,
		so it may later be turned readable.
		(bse_item_push_undo_storage): turn the undo storage readable instead of
		just handing on text, this keeps data handles intact.
		(undo_restore_item): restore item from BseStorage instead of just text.

		* bsestorage.[hc]: added DBLOCK storage mode which keeps data handle
		references in memory.
		added bse_storage_turn_readable() to read out a previously written to
		storage (requires DBLOCK mdoe).
		reorganized data handle parsing code somewhat, got rid of half-baked
		bse_storage_mem_flush().

	Sun Jun  8 19:56:27 2003  Tim Janik  <timj@gtk.org>

		* bseitem.c:
		* bseproject.c:
		* bsestorage.[hc]: error cosmetics.

	Sun Jun  8 17:27:15 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]: reimplementation on top of SfiRStore and SfiWStore.
		added compat code for <=0.5.1 binary data handling, removed lots of cruft.

		* bsebindata.[hc]: removed entirely.

		* bseenums.[hc]: removed BseEndianType.

		* gsldatahandle.[hc]: added osc_freq and mix_freq as fixed members to
		data handles. changed constructors and callers accordingly.
		cosmetic fixups to wave format strings.

		* *.[hc]: made mix_freq, osc_freq ordering in argument lists consistent.

		* gslloader.[hc]:
		* gslloader-mad.c:
		* gslloader-wav.c:
		* gslloader-gslwave.c:
		* gslloader-oggvorbis.c:
		* gsldatahandle-vorbis.[hc]:
		* gsldatahandle-mad.[hc]: provide osc_freq and mix_freq in datahandles.

		* bse/gslcommon.c: cosmetic fixups to endianess strings.

		* bsewave.[hc]: changed storage format, since bse_storage_parse_data_handle()
		now stores mix_freq, osc_freq etc. all automatically.
		left compat code in place to parse <=0.5.1 files.

		* bsesong.proc: fix NULL termination in call to bse_container_new_child().

		* bseproject.c: adapt to BseStorage changes. removed cruft.

		* bsedefs.h: removed BseTokenType, there's SfiTokenType. adapt
		BseTryStatement() to SfiStoreParser() signature.

		* *.c: fixup code due to removal of BseTokenType and other BseStorage
		changes.

	Wed Jun  4 21:54:51 2003  Tim Janik  <timj@gtk.org>

		* bseproject.c:
		* bseitem.c: simplify code by using BseStorage methods.

		* bseprocedure.[hc]: cleaned up dead/unused code.

		* bsestorage.[hc]: code cleanups. removed unused mechanisms.

		* bsewave.c: adapt to bse_storage_parse_rest() changes.

	Fri May 30 18:55:52 2003  Tim Janik  <timj@gtk.org>

		* implemented undo for BSE. We've got unlimited undo/redo for most
		functions now, undo is still missing out for: BseDataPocket and
		BsePart. restoring BseWave from undo only works partially.

		* bsewaverepo.proc: made load-file() and remove-wave() undo aware.

		* bseproject.proc: made create-song(), create-midi-synth(), play(),
		create-csynth(), remove-snet(), activate() and start-playback() undo
		aware. renamed ensure-wave-repo() to get-wave-repo(). added undo(),
		redo(), undo-depth(), redo-depth() and clear-undo().
		made restore-from-file() clear undo stack, because we can't maintain
		undo across merging.

		* bsesnet.proc: made create-source() and remove-source() undo aware.

		* bsesong.proc: made create-part(), remove-part(), create-track() and
		remove-track() undo aware.

		* bsesource.proc: made set-input-by-id(), unset-input-by-id(),
		set-input(), unset-input(), clear-inputs() and clear-outputs() undo
		aware. added undo-aware set-pos() to set ::pos-x and ::pos-y.

		* bsetrack.proc: changed procedures to use part link IDs.
		made insert-part(), remove-tick() and remove-link() undo aware.

		* bseitem.proc: added group-undo() and ungroup-undo() procedures for
		BSE clients to request undo grouping as well. internally we don#t open
		up actual undo groups for this, that could mess up internal state.
		instead, if group-undo() was called, everytime we're closing an undo
		group internally, we merge it with a previously queued undo group.

		* bsewaveosc.[hc]: fixed up cross links and signal reemissions.

		* bsetype.[hc]: added BSE_TYPE_PACKED_POINTER which is an undo
		implementation specific string type.

		* bsestorage.[hc]: restoring items generally does not queue undo/redo
		steps. added function to save an object entirely to memory.

		* bsetrack.[hc]: added IDs to part links.

		* bsesource.[hc]: added bse_source_backup_ichannels_to_undo(),
		bse_source_backup_ochannels_to_undo() and
		bse_source_input_backup_to_undo() which save i/o channels to undo
		without queueing subsequent redo though. added bse_source_check_input().

		* bseundostack.[hc]: new files, implementing a simple undo stack.

		* bsecontainer.[hc]: added undo aware functions to create/remove
		and uncross items. renamed ::item-removed to ::item-remove.

		* bseglue.[hc]:
		(bglue_proxy_set_property): set properties undo-aware.

		* bseobject.[hc]: changed ::uname setter. basically, we have a new uname
		convention now, unames may not contain ':' and the first character (if
		any) must be >=\007.
		fixed up reemission of property notify signals.

		* bseprocedure.[hc]: added bse_procedure_collect_input_args() which
		just collects procedurer call args from the stack.

		* bseproject.[hc]: added undo/redo stacks and ::dirty property.
		::dirty doesn't work like expected currently, but provides reliable
		change notification for undo changes.

		* bseitem.[hc]: added bse_item_get_toplevel(), and facilities
		to queue procedure calls to undo/redo stack. added bse_item_undo_open()
		and bse_item_undo_close() which are used to group any undoable
		operation. added ->get_undo() method to retrieve the current
		undo stack. fixed up bse_item_get_project() to work on projects
		as well. cleaned up procedure code.
		added undo aware property setters, the current implementation
		ignores resetting a property to a value it already has (for a limited
		property set at least), which saves the user lots of undo operations.

		* *.c: changed g_object_set() to undo aware bse_item_set() where
		appropriate and marked the intentionaly unchanged rest with /* no undo */

	Tue May 27 03:33:52 2003  Tim Janik  <timj@gtk.org>

		* bseladspa.c: applied patch from Sam Hocevar <sam@zoy.org> which
		fixes wrong error messages and crashes on some of the cmt.so
		plugins.
		added cosmetic fixups, refined debugging messages, minor optimizations.

		* bseladspa.[hc]: put code under LGPL.

	Tue May 27 02:57:00 2003  Tim Janik  <timj@gtk.org>

		* bsetrack.c (bse_track_list_proxies):
		* bsesubsynth.c (bse_sub_synth_list_proxies):
		* bsewaveosc.c (bse_wave_osc_list_proxies):
		* bsemidisynth.c (bse_midi_synth_list_proxies):
		gather proxies with bse_item_gather_proxies_typed(), now
		that BseSNet is abstract and the type checks don't need
		to resort to BSE_TYPE_SNET== hacks anymore.

		* bseitem.c (bse_item_gather_proxies_typed): don't gather
		ancestors of the originating item (unless allow_ancestor
		is passed as TRUE).

	Tue May 27 02:22:37 2003  Tim Janik  <timj@gtk.org>

		* bseproject.proc: added bse-project-remove-snet.

	Tue May 27 01:36:56 2003  Tim Janik  <timj@gtk.org>

		* bseglue.c (bglue_proxy_set_property): warning cosmetics.

		* bseproject.proc: added bse-project-is-active.

	Sun May 25 15:04:37 2003  Tim Janik  <timj@gtk.org>

		* bsecompat.[hc]: added bse_compat_rewrite_type_name() to handle
		types from different BSE file versions.
		handle BseSNet->BseCSynth for 0.5.2.

		* bsecontainer.c: inhibit restauration of abstract child types.

		* bsemididevice.[hc]:
		* bsecontainer.[hc]:
		* bsepcmdevice.[hc]:
		* bseobject.[hc]:
		* bsesource.[hc]:
		* bsesuper.[hc]:
		* bseitem.[hc]: flagged types appropriately as abstract.

		* bsesnet.[hc]: turned BseSNet into an abstract type.

		* bsecsynth.[hc]: new type, deriving from BseSNet to implement
		custom (user) synth functionality.

		* bseproject.proc: provide csynth instead of snet procedures now.

		* bsequery.c: indicate abstract types.

		* bsetype.[hc]: added bse_type_register_abstract().

		* bsestorage.[hc]: implemented bse-version handling.

	Tue May 20 18:39:03 2003  Tim Janik  <timj@gtk.org>

		* tests/magictest.c: moved here from bsemagictest.c.

		* tests/mathtests.c: moved here from gsltests.c.

		* tests/testfft.c: moved here from gslffttest.c.

		* tests/testwavechunk.c: moved here from gslwchunk.c.

		* tests/Makefile.am: added testwavechunk testfft to TESTS so
		make check runs these automatically.

		* removed: bsemagictest.c, gsltests.c, gslffttest.c and gslwchunk.c.

	Tue May 20 17:46:12 2003  Tim Janik  <timj@gtk.org>

		* tests/cutvorbis.c: added test program for ogg/vorbis file cutting.

		* tests/: new directory to accumulate BSE related test programs.

	Tue May 20 15:08:01 2003  Tim Janik  <timj@gtk.org>

		* port code to gcc-3.3.

		* gsldefs.h: provide gcc specific prefetch macros and rename _EXPECT()
		and _REJECT() macros to _EXPECT1() and _EXPECT0() respectively. removed
		parenthesis around macro arguments to catch inline assignments.

		* gslcommon.[hc]: allow precision specification with progress functions.

	Sun May 18 04:55:45 2003  Tim Janik  <timj@gtk.org>

		* bseprocedure.proc: added bse-string-extract-number() to deal with
		command line argumens and midi notes.

		* gslcommon.[hc]: added simple progress api for comand line apps.

		* gsldatahandle-vorbis.[hc]: changed API, now a data handle relates
		to a logical ogg/vorbis stream specified by either the logical stream
		number or a zero-offset relative file section.

		* gsldatautils.h: reduced peek buffer size from 8192 to 2048 for
		better cache utilization.

		* gslloader-gslwave.c: support inlined (binary appendix) raw sample data
		via "rawlink" key word, and added support for inlined ogg/vorbis sample
		data via "ogglink". adjust binary appendix syntax parsing.

		* gslwave.header: minor description fixes, describe ogglink and rawlink.

		* gslvorbis-enc.[hc]: Ogg/Vorbis encoder API front end.

		* gslvorbis-cutter.[hc]: Ogg/Vorbis stream cutting implementation
		currently supports tail cutting at sample, packet and page boundaries.

	Sun May 11 18:45:40 2003  Tim Janik  <timj@gtk.org>

		* gsldefs.h:
		* bseenums.[hc]:
		* gslcommon.[hc]: added GSL_ERROR_IS_DIR and BSE_ERROR_FILE_IS_DIR
		errors. return GSL_ERROR_IS_DIR for EISDIR from gsl_error_from_errno().
		special case GSL_ERROR_IS_DIR in gsl_check_file().

	Sun May 11 14:22:12 2003  Tim Janik  <timj@gtk.org>

		* bseitem.c: removed ::seqid-changed signal, added readable property
		::seqid that also emits change notification.

	Tue May  6 04:17:19 2003  Tim Janik  <timj@gtk.org>

		* bsemain.c (bse_init_intern):
		(bse_init_async): don't override previously set prgnames.

		* bserecords.sfidl: added SampleFileInfo record.

		* bsewaverepo.proc: provide bse-sample-file-info() to retrive
		info about a sample file prior to loading.

	Mon May  5 03:52:24 2003  Tim Janik  <timj@gtk.org>

		* bseglue.c (bglue_proxy_request_notify): canonify signal names before
		attempting matches, fixes remaining "spurious signal" warnings. minor
		optimizations.

	Mon Apr 28 22:15:52 2003  Tim Janik  <timj@gtk.org>

		* gsltests.c (main): added exp() timing loops.

		* gslcommon.c (gsl_init): properly initialize random numbers by
		calling srand() with usec fractions.

	Mon Apr 28 05:02:28 2003  Tim Janik  <timj@gtk.org>

		* zintern/mono-wave.bse: updates to be used by BseTrack.

		* bsetrack.[hc]: support BseWave property concurrently to the
		"snet" property. "wave" tracks are played through an internal
		standard mono synth.

		* bseproject.[hc]: added bse_project_create_intern_synth() to merge
		an internal standard synth into the project.

		* bsestandardsynths.[hc]: renamed bse_standard_synth_lookup()
		to bse_standard_synth_inflate().

		* bsestorage.c (restore_container_child): check container's child
		filter before restoring a child.

		* bsecontainer.[hc]: added check_restore() methods to prevent
		certain children from being restored.

	Sun Apr 27 22:23:08 2003  Tim Janik  <timj@gtk.org>

		* gslosctable.[hc]: added gsl_osc_wave_form_name(), improved debugging
		messages.

		* gsldatautils.[hc] (gsl_wave_file_dump_data): new function to write data
		portion of a WAVE file from a float block.

	Sun Apr 27 02:52:31 2003  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c: split up debugging messages into "oss" and
		"latency" keys.

		* bsepcmdevice.[hc]: added bse_pcm_device_request() to request
		specific sampling rates and number of channels.

		* bseserver.c: make the mixing frequency preference setting
		actually take effect on the PCM device.

	Fri Apr 18 19:48:59 2003  Tim Janik  <timj@gtk.org>

		* bsepcmwriter.[hc]: new object dumping PCM output to a WAV file.

		* bsepcmmodule.c: route PCM data into a BsePcmWriter if given.

		* bseserver.[hc]: added WAV file name property and support for
		BsePcmWriter.

		* gslloader-wav.c: fixed WAV header file length check.

		* gsldatautils.[hc]:
		(gsl_wave_file_dump_header): new function to write out RIFF/WAVE
		headers, fixing up the file_length logic which was broken in
		gsl_data_handle_dump_wav().
		(gsl_wave_file_patch_length): new function to change the data length
		information in a RIFF/WAVE file after the header was written (changes
		file position pointer).
		(gsl_data_handle_dump): return normal errno.
		(gsl_data_handle_dump_wav): return normal errno, use
		gsl_wave_file_dump_header() to write the wav header.

		* bseproject.c (bse_project_store_bse): use bse_error_from_errno() to
		translate errno to BseErrorType.

	Wed Apr 16 19:24:12 2003  Tim Janik  <timj@gtk.org>

		* bsewaverepo.proc (load_file): fix usage of g_basename().

		* bseobject.c (bse_object_type_register): added missing cast.
		* bseprocedure.c (bse_procedure_type_register): same here.

	Sun Apr 13 23:48:07 2003  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_open): fallback to check
		/dev/dsp[0-3] if /dev/dsp couldn't be opened.

	Fri Apr 11 14:10:07 2003  Tim Janik  <timj@gtk.org>

		* bsemididevice-oss.c (bse_midi_device_oss_open): fallback to check
		/dev/midi[0-3] if /dev/midi couldn't be opened.

	Sun Apr  6 13:56:09 2003  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: added i/o channel identifier to public API.
		fixed up bse_source_class_add_jchannel_ident() and
		bse_source_class_add_ichannel_ident().

		* bseladspamodule.c (bse_ladspa_module_class_init_from_info):
		actually *use* the port identifier as identifier for i/o channels.

		* bseladspa.c (bse_ladspa_info_port_2str): complete flag list.

	Sat Apr  5 17:48:45 2003  Tim Janik  <timj@gtk.org>

		* bseladspamodule.c: adjust property construction to better hinting
		and pre-/post-process audio signals that have the rate_relative hint
		set.

		* bseladspa.c (bse_ladspa_info_add_port): use the ladspa port index to
		construct a unique port identifier instead of the port name, according
		to a recommendation from Steve Harris <S.W.Harris@ecs.soton.ac.uk>.

		* bseladspa.[hc] (bse_ladspa_info_add_port): provide a sample rate
		relative hint and set frequency hint if we have good indications for
		a frequency control input port.

	Fri Apr  4 19:25:52 2003  Tim Janik  <timj@gtk.org>

		* bseparasite.c (bse_parasite_restore): removed pre-0.5.0 compat
		parsing code.

		* gsldatahandle-vorbis.c: require ogg/vorbis >= 1.0.0rc4 now.

		* bseutils.c: documentation fixes.

	Fri Apr  4 10:25:00 2003  Tim Janik  <timj@gtk.org>

		* ladspa.h: added LADSPA API Version 1.1 header file.

		* bseladspa.[hc]: implemented BseLadspaInfo assembler and
		GTypePlugin to load LADSPA plugins.

		* bseladspamodule.[hc]: implemented BseLadspaModule base type
		and derived methods used by BseLadspaModule_* implementations.
		a working LADSPA module is then derived from BseLadspaModule
		using these methods and equipped with BseLadspaInfo.

		* bseserver.proc (register-plugins): register ladspa plugins after
		registering BSE plugins.

		* gslopmaster.c (master_process_job): when integrating nodes,
		flag suspension_update, so the scheduler updates their suspension
		state. also, flag them initially as outputs_suspended, in order to
		trigger reset() method activation prior to the first process()
		call.

	Mon Mar 17 07:06:43 2003  Tim Janik  <timj@gtk.org>

		* bsepcmdevice.[hc]: derive from BseItem, so device can later be valid
		BseServer children and be exported through the middleware.

		* gslwaveosc.c: turn debugging prints into DEBUG() calls.

	Thu Mar 13 21:30:14 2003  Tim Janik  <timj@gtk.org>

		* Makefile.am (gslincludedir): install gsl headers under bse/.

	Thu Mar 13 21:13:33 2003  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_open): if opening in read-write
		mode fails, try falling back to write-only mode.

		* gslcommon.c (gsl_error_from_errno): return fallback error for EINVAL.

	Thu Mar 13 19:42:30 2003  Tim Janik  <timj@gtk.org>

		* bsemidisynth.c (bse_midi_synth_init): set sequencer flag on midi
		synths.

		* bsesong.[hc]:
		* bsesuper.[hc]: move sequencer_pending_SL field from song to super.

		* bsessequencer.[hc]: handle sequencing of supers (there's nothing
		to do for non-song supers, but we need to allow having them in the
		sequencer loop).

	Thu Mar 13 18:39:10 2003  Tim Janik  <timj@gtk.org>

		* bseproject.c (bse_project_finalize): urgs, remove project from
		auto-stop list, rather than adding to it.

		* bseparasite.c: fixed newly introduced parasite parsing bugs.

	Thu Mar 13 13:51:49 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]: added bse_storage_putf(), bse_storage_putd() and
		bse_storage_putr() to store floats, doubles and Reals in a locale
		independent fashion.

		* *.c: fixed storage code by using bse_storage_put{f|d|r}() to store
		float numbers.

		* bsestorage.c (bse_storage_prepare_write): fix bse version storage.

		* bsestandardosc.c (bse_standard_osc_class_init): add SFI_PARAM_FLOAT
		for Real properties which are stored in floats 'cause they don't need
		full double precision.

		* bseamplifier.c (bse_amplifier_class_init): remove bogus pspec flags.

	Sun Mar  9 09:53:41 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_resolve_item_links):
		* bsesource.c (resolve_osource_input): fix link resolution messages.

		* bsepcmdevice-csl.[hc]: removed CSL driver code (in
		accordance with stefan).

		* bserecords.sfidl: added pspec groups to preferences.

		* bsemain.c (bse_async_parse_args): allow enabling of BSE
		developer extensions via developer-extensions field in
		the config record passed in.

	Fri Mar  7 21:44:24 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetype.c: adapted sfidl_xxx macros to pspec group support

	Fri Mar  7 14:52:43 2003  Tim Janik  <timj@gtk.org>

		* *.[hc]: removed old debugging cruft. switched things over
		to SFI debugging functions.

		* bsemain.c: debugging options revamp.

	Fri Mar  7 03:37:47 2003  Tim Janik  <timj@gtk.org>

		* bsesuper.[hc]: removed cruft. fix time types.

		* bseutils.[hc]: removed already replaced timing functions.

	Thu Mar  6 05:59:44 2003  Tim Janik  <timj@gtk.org>

		* bsetrack.c: removed ::part property hack.
		ignore snet changes while our internal sub synth is prepared
		(locked) since changes have no effect then anyway.

	Mon Mar  3 23:17:18 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: slightly beautified mutex init code.

	Mon Mar  3 22:42:25 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: initialize CSL with a mutex, as BSE is
		multithreaded.

	Wed Feb 26 22:57:54 2003  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: provide a pspec nick as blurb if no blurb is given.

		* bserecords.sfidl: added BseSongTiming record.

		* bsesong.[hc]: support tact nominator and denominator properties,
		added BseSongTiming retrieval function and procedure. removed cruft.

		* bsetrack.proc: provide get-part() procedure to lookup a specific tick.
		provide get-timing() for convenience.

		* bsepart.proc: provide get-timing() for convenience.

	Sat Feb 22 17:10:34 2003  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added properties for song looping and exported
		son gposition pointer, accompanied by a signal ::pointer-changed
		for realtime updates.

		* bsessequencer.[hc]: support song looping.

	Tue Feb 18 17:47:17 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bseautodoc.c bsebindata.c bseconstant.c bsecontextmerger.c
		bsedatapocket.c bseitem.c bsemagictest.c bseparasite.c
		bsepcmdevice-oss.c bsequery.c bseserver.c bsestandardsynths.c
		bsesubinstrument.c bsesubiport.c bsesubkeyboard.c bsesuboport.c
		bsesubsynth.c bsewave.c gslffttest.c gslfilter.c
		gslloader-oggvorbis.c gslloader-wav.c gslwaveosc.c gslwchunk.c
		zintern/zintern.c: fixes to build without warnings on gcc-3.2.

	Tue Feb 18 16:56:22 2003  Tim Janik  <timj@gtk.org>

		* bsessequencer.c (bse_ssequencer_process_track_SL): don't forget
		following parts when checking whether a track is done.

	Tue Feb 18 16:29:34 2003  Tim Janik  <timj@gtk.org>

		* bsecontainer.c:
		(bse_container_do_remove_item): decrement n_items _after_ uncrossing
		to keep n_items checks in uncrossing logic working.
		(_bse_container_cross_unlink): give precedence to recursively unlinked
		cross references over further existing cross links.
		(_bse_container_uncross_descendant):
		(_bse_container_uncross): reload BseContainerCrossLinks* which might
		have been reallocated during callbacks.

		* bsetrack.c:
		(track_uncross_part): stop after the first part to uncross was found.

	Tue Feb 18 01:09:06 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: use BSE_PCM_DEVICE_CSL_SUPPORT (which is in the
		BSE namespace) instead of HAVE_LIBCSL

	Mon Feb 17 22:52:02 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: libcsl support

		* bsepcmdevice-csl.[hc]: new PCM device implementation for
		libcsl (Common Sound Layer). This for instance allows using
		beast with aRts.

		* bsepcmdevice-oss.c: bugfix: close filedescriptor when >= 0,
		not when < 0.

	Mon Feb 17 18:34:46 2003  Tim Janik  <timj@gtk.org>

		* bseplugin.c (bse_plugin_register_exports): register choice<=>enum
		transform functions for dynamic enum types.

		* bsestorage.[hc]: keep internal hash table of objects and their unames
		created during parsing. resolve uname paths via internal hash table if
		possible to give storage scope objects precedence over existing objects.
		removed BSE_OBJECT_FLAG_FIXED_UNAME hackery.

	Mon Feb 17 15:31:41 2003  Tim Janik  <timj@gtk.org>

		* bseobject.c:  use global ID allocator.

		* bsesnet.[hc]: nuke per-object id allocator, use global ID allocator.

		* bseutils.[hc]: removed old functions. updated bse_string_hash().
		added global ID allocator.

	Fri Feb 14 07:50:29 2003  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]: major overhaul. made BseStorage an object.
		moved GObject property storage and parsing logic to here.
		provide highlevel storage and parsing primitives and keep the
		basic storage/parsing logic in a single place (bse_storage_store_item()
		and item_restore_try_statement()). use sfi_storage_scanner_config.

		* bseproject.[hcp]*: adapt to new BseStorage code, simplified parsing
		logic.

		* bsesong.c: removed uneccessary parsing hooks.

		* bseparasite.[hc]: just provide bse_parasite_restore() amd
		bse_parasite_store() and rely on BseStorage to invoke parasite
		parsing/storage code when apropriate.

		* bseobject.[hc]:
		* bseitem.[hc]: removed lots of the complicated parsing and storage
		logic.

		* bsecontainer.[hc]: removed serialization methods.
		just provide bse_container_store_children() to loop over all children
		that need to be stored.

		* bsewave.c:
		* bsepart.c:
		* bsetrack.c:
		* bsesource.c:
		* bsedatapocket.c: cleanup and fix restore_private() implementation.

	Thu Feb 13 10:43:23 2003  Tim Janik  <timj@gtk.org>

		* bsequery.c: support "synthlist" and "synth" qualifiers to retrieve
		dumps of standard synth definitions.

		* bsestandardsynths.[hc]: nuked old synth generation code. added
		bse_standard_synth_get_list() and bse_standard_synth_lookup() to
		retrieve standard synth definitions.

		* zintern/mono-wave.bse: added mono wave synth.

		* zintern/zintern.c: small utility to generate C source to inline
		file contents, supporting libz compression of the file contents.

		* zintern/Makefile.am: added new subdir zintern/ for inlined BSE
		files (synth definitions).

	Thu Feb 13 02:22:41 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]: provide bse_midi_receiver_voices_pending()
		which also accounts for pending events, instead of
		bse_midi_receiver_has_active_voices().

		* bsesong.proc (find-track-for-part): adapt to using
		bse_track_find_part().

		* bsessequencer.c: split sequencing code into distinct functions for
		songs, tracks and parts. use bse_track_get_part_SL() to step through
		the parts of a track.

		* bsetrack.[hc]: provide bse_track_find_part() to retrieve the tick
		start of a certain part. provide bse_track_get_part_SL() for sequencer
		lookups.
		got rid of ->part_SL member.

	Tue Feb 11 06:58:09 2003  Tim Janik  <timj@gtk.org>

		* bseobject.[hc]: added bse_object_reemit_signal() and
		bse_object_remove_reemit() to forward signal emissions
		from one object to another.
		added convenience functions bse_object_proxy_notifies() and
		bse_object_unproxy_notifies() to forward signals relevant
		for an object reference.

		* bsetrack.c: fixed up cross-references. keep cross
		references on inserted parts, fixup finalization leaks.
		proxy name changes and last-tick changes from parts to
		::changed.

		* bseitem.[hc]: renamed cross-ref to cross-link in public API.
		removed bse_item_list_cross_owners() and bse_item_has_cross_owners().
		bse_item_uncross() now removes _all_ existing cross links,
		bse_item_cross_unlink() now requires uncross_func passed in to
		a previous call to bse_item_cross_link().

		* bsecontainer.[hc]: reworked and cleaned up cross links.
		allow removal of cross-links during uncross_func() invocation.
		removed bse_container_cross_forall().

	Mon Feb 10 21:37:54 2003  Tim Janik  <timj@gtk.org>

		* bseglue.c (bglue_proxy_set_property): handle invalid value
		types with sfi_warn() and do lax value validation.

		* bsessequencer.c (bse_ssequencer_process_song_SL): don't play
		notes of muted tracks.

		* bsetrack.[hc]: added ::muted property to silence a track during
		playback.

	Thu Feb  6 20:29:00 2003  Tim Janik  <timj@gtk.org>

		* bseprocidl.cc: g++-3.2 wants std:: namespacing for strings and sets.

	Tue Feb  4 18:20:31 2003  Tim Janik  <timj@gtk.org>

		* bseitem.proc: provide bse-item-set-name().

	Fri Jan 31 19:37:31 2003  Tim Janik  <timj@gtk.org>

		* bsetrack.[hcp]*: implemented part lists.

		* bsetrack.proc: added track procedures to modified part list.

		* bsepart.[hc]: get rid of ppqn which is provided by songs now.

		* bsesong.[hc]: provide tpqn (ticks per quarter note) and qnpt
		(quarter notes per tact) properties.

		* misc doc fixes.

	Thu Jan 23 01:40:09 2003  Alper Ersoy <dirt@gtk.org>

		* bseautodoc.c: adjusted linebreaks around revision lines.

	Wed Jan 22 23:24:50 2003  Tim Janik  <timj@gtk.org>

		* bsecontainer.[hc]: supply sequential ID with ::item-removed as this
		can't be retrieved afterwards.

		* bsecontainer.proc: export proc to actually fetch an item via its type
		and sequential id.

	Tue Jan 21 03:42:08 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.c (bse_midi_receiver_process_events): keep
		processing events until the specified max_tick_stamp is reached.

		* bseproject.[hc]: bse_project_keep_activated() keep the project
		from automatic deactivation until a certain tick stamp is reached.

		* bsesong.proc: added procedures to find a track for a part, suitable
		for live playing of notes and to synthesize track notes for immediate
		playback.

	Mon Jan 20 11:18:02 2003  Tim Janik  <timj@gtk.org>

		* bseproject.[hcp]: changed playback and activation logic.
		project playback happens in stages activate, start_playback,
		stop_playback and deactivate. a project can be automatically
		stopped due to the sequencer reaching song ends, and a project
		can be automatically deactivated through a timeout.
		export the new interface in procedures.

		* bseglobals.[hc] (bse_idle_timed): added timeout functions.

	Thu Jan 16 23:27:51 2003  Tim Janik  <timj@gtk.org>

		* bseproject.[hcp]*:

		* bsemain.c (bse_main_loop): start sequencer thread.

		* bsemididevice.[hc]: removed cruft.

		* bsemidireceiver.[hc]: added accessor to check whether some
		voices are still active.

		* bsepart.[hc]: keep track of the last tick and export it as
		property. more _SL fixes for functions/memebers protected by
		the sequencer lock.

		* bsemidisynth.c: set early context creation flag.

		* bsesnet.c: maintain user context creation setting.

		* bsesong.[hc]: integrate with sequencer updates.
		(bse_song_init): set early context creation and sequencing flags.

		* bsessequencer.[hc]: start switching sequencer code over from
		songs to supers. detect song playback ends.

		* bsesuper.[hc]: introduce flags to indicate need of early or
		sequencer context creation and need for sequencing. could remove
		auto_activate field after introduction of the flags.

		* bsetrack.c: cause the sequencer to re-check whether a track is
		done after properties were altered.

		* bsewaverepo.c: nuke auto_activate setting.

		* bseserver.[hc]: simplify device management by exporting just
		bse_server_open_devices() and bse_server_close_devices() and
		suport use counting for them.

		* bseserver.proc: scratch run/halt-project procedures since
		projects export the necessary mechanisms themselves now.

	Wed Jan  8 20:15:01 2003  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]:
		* gsldefs.[hc]:
		* gslcommon.[hc]:
		* gsl*.c:
		* bse*.c: error code cleanups, improved error code handling.

	Mon Jan  6 00:16:17 2003  Tim Janik  <timj@gtk.org>

		* bseproject.[hcp]*: introduce activation state. added state
		notification.

	Sat Jan  4 15:34:28 2003  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.c (process_midi_control_L):
		* bsemidievent.c (bse_midi_signal_default):
		* bserecords.sfidl (GConfig): added config option invert_sustain to
		support sustain pedals which report inverted sustain events.

	Fri Jan  3 19:10:03 2003  Tim Janik  <timj@gtk.org>

		* bsessequencer.[hc]: new song sequencer implementation, based on the
		old song sequencing thread from bsesongthread.[hc].

		* bseproject.c: queue song sequencer jobs to start song playback and
		don't start synthesis networks any earlier than song playback.

		* bsesong.[hc]: use the new song sequencer.

		* gsloputils.[hc]:
		* gslopmaster.[hc]:
		* gslengine.[hc]: implemented engine timers, delayed commits and
		transaction merging.

		* gslengine.[hc]: (gsl_job_add_poll): leak fix, don't forget
		the free_func.

		* bsesongthread.[hc]: removed this.

	Tue Dec 31 03:03:39 2002  Tim Janik  <timj@gtk.org>

		* Makefile.am, toyprof.*: remove toyprof code.

	Mon Dec 30 00:42:19 2002  Tim Janik  <timj@gtk.org>

		* bseglue.c:
		(bglue_proxy_processed_notify):
		(bclosure_notify_marshal):
		(bclosure_marshal): keep objects alive across remote notifications
		via use-count increment.

		* bseitem.[hcp]*: expose bse_item_unuse().

		* bseobject.[hc]: removed pre-GObject compat code, fixed callers.

	Thu Dec 26 21:59:32 2002  Tim Janik  <timj@gtk.org>

		* gslengine.c (gsl_engine_init): provide master thread with user thread
		handle for wakeups.

		* gslopmaster.c (_engine_master_thread): wakeup user thread if jobs
		need to be collected.

		* bseglobals.[hc]: added NORMAL priority for idle handlers.

		* bseserver.[hcp]*: emit ::registration while registering
		scripts and plugins.
		added bse-server-register-scripts() and bse-server-register-plugins()
		procedure which register asyncronously.

		* bsewaveosc.[hc]: pass on the current tick stamp when emitting pcm
		position notification.

	Tue Dec 24 04:57:02 2002  Tim Janik  <timj@gtk.org>

		* bsejanitor.[hc]: emit ::closed once the connection is terminated.

		* *.c:
		* bsemarshal.*:
		* bseobject.[hc]: remove marshaller generation code, use SFI marshaling.

	Tue Dec 24 00:11:50 2002  Tim Janik  <timj@gtk.org>

		* bsepcmoutput.c:
		* gslopmaster.c: misc bug fixes and adaptions due to SFI changes.

	Mon Dec 23 03:35:41 2002  Tim Janik  <timj@gtk.org>

		* bseglue.[hc]: support new poll fd api. removed GSource integration
		which is being provided by BseJanitor now. provide generic conversion
		functions bse_value_from_sfi() and bse_value_to_sfi(). support context
		destruction.

		* bsemain.c: let BseJanitor handle connections now.

		* bsescriptcontrol.[hcp]*: removed, purpose filled by BseJanitor now.

		* bseserver.[hcp]*: use BseJanitor instead of script-control, fixed
		bse_server_run_remote() somewhat. provide procedures to register
		scripts and plugins.

		* bswcommon.[hc]: removed entirely.

		* bsescripthelper.[hc]: integrate with BseJanitor, use SFI
		serialization to pass procedure args via client message. removed
		comwire dispatcher cruft.

		* bsejanitor.[hcp]*: implemented client connection manager object,
		based on the old script-control object.

		* bseprocedure.[hc]:
		* mkcproc.pl:
		* *.proc: got rid of DATE argument to procedures, support multiple
		authors.

	Tue Dec 17 08:27:20 2002  Tim Janik  <timj@gtk.org>

		* gslfilehash.c: locking fixes.

		* gslopmaster.c: handle wakeup pipe from gsl_engine_init().

		* gslengine.c: create a pipe to wakeup the master thread
		in gsl_engine_init(), since the threading layer doesn't
		provide a pipe anymore.

		* bsesnet.c: use bse_idle_remove().

		* bseserver.[hc]: use BSE's main loop context for GSources.

		* bse.h: added public prototypes.
		* bsemain.[hc]: cleaned up intialization routines.
		* *.c: changed callers.

		* bsemain.[hc]:
		(bse_init_async): start asyncronous BSE thread.
		(bse_init_glue_context): provide a glue context connected to
		the asyncronously running BSE thread.
		(bse_init_intern): function resembling the old bse_init(), left
		in place for internal utilities.

		* bseglobals.[hc]: provide bse_idle_remove() and attach idle
		handlers to BSE's main loop context.

		* bseglue.[hc]: completed glue layer table implementations, fixed
		signal handling.
		(bse_glue_context_create): create glue contexts together with a glue
		decoder and a main loop source.

		* bsescripthelper.[hc]:
		* bsescriptcontrol.[hc]: disabled code that has yet to be replaced.

	Fri Dec 13 08:08:34 2002  Tim Janik  <timj@gtk.org>

		* gslcommon.[hc]: moved thread layer and memory block allocator from
		here into SFI.

		* *.[hc]: adapted callers accordingly.

	Thu Dec 12 15:36:16 2002  Tim Janik  <timj@gtk.org>

		* remove gslglue.[hc], gslgluecodec.[hc] and gslgluesignal.c which
		are replaced by new SFI code.

		* gslcommon.[hc]: removed GslRing code, we have SfiRing now.
		* *.[hc]: changed callers.

		* remove unused gslconvert.[hc].

		* removed gslglib.[hc], gslglibhash.cc and gslglibhashtest.cc
		 which GSL doesn't support anymore.

	Tue Dec 10 03:30:14 2002  Tim Janik  <timj@gtk.org>

		* bsecomwire.[hc]: removed these files, communication went into Sfi.

		* *.[hc]: ported BseComWire uses over to SfiComWire.

	Mon Dec  9 07:15:40 2002  Tim Janik  <timj@gtk.org>

		* bsewaveosc.c (bse_wave_osc_set_property): changing waves is very
		expensive, so ignore resetting the same value.

		* gslloader-gslwave.c: support inlined data handles through a
		new keyword "binlink".
		* gslwave.header: added description for "binlink".

		* gsldatahandle.[hc]: added gsl_wave_format_bit_depth() and
		gsl_wave_format_byte_width() as public API, added
		gsl_wave_handle_new_zoffset() to refer to first-zero-byte offset.

		* gslfilehash.[hc]: added gsl_hfile_zoffset() to retrieve and
		cache offset of first zero byte in a file.

		* gsldatautils.[hc]: return -errno in case of failure from
		gsl_data_handle_dump() and gsl_data_handle_dump_wav().
		added gsl_data_handle_dump_wstore() which adds data handle
		to the binary appendix of a SfiWStore.

	Sun Dec  8 05:46:32 2002  Tim Janik  <timj@gtk.org>

		* bsegconfig.[hc]: nuked object implementation, implemented
		global configuration based on BseGConfig record.

		* bseglobals.[hc]: config/gconfig cleanups.

		* bserecords.sfidl: added BseGConfig record.

		* bseserver.[hcp]*: added bse-preferences property, load
		rc-file, offer procedure to save rc-file.

	Sat Dec  7 17:49:04 2002  Tim Janik  <timj@gtk.org>

	        * gsldatacache.c (gsl_data_cache_from_dhandle): fix dcache loop
	        iterations.

	        * bseautodoc.c:
	        * bsemidivoice.c:
	        * bsesnet.c:
	        * bsesongthread.c:
	        * bsesource.c:
	        * gslcommon.c:
	        * gslcommon.h:
	        * gsldatacache.c:
	        * gslgluecodec.c:
	        * gslmagic.c:
	        * gslopschedule.c:
	        * gsltests.c: fix arg ordering in gsl/sfi_ring_walk().

	Wed Dec  4 16:32:07 2002  Tim Janik  <timj@gtk.org>

	        * bse/gslloader.[hc]: add gsl_wave_file_info_loader().

	        * bse/bseautodoc.c: Fixed @revision placement at bottom (alper).

	Tue Dec  3 02:44:39 2002  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: added --seealso argument.

	Tue Dec  3 01:33:31 2002  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: fixes from alper for document font.

	Tue Dec  3 01:02:58 2002  Tim Janik  <timj@gtk.org>

		* bsetype.c: fixed pspec default hints.

	Sun Dec  1 22:44:42 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocidl.cc: support "Neutral" for choices.

		* bseutils.c: changed resizing of note sequences to to use the
		sfidl generated code - default to SFI_KAMMER_NOTE instead of
		SFI_NOTE_VOID

	Sun Dec  1 05:10:12 2002  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_do_set_property):
		* bsesuper.c (bse_super_set_property): use g_strdup_*strip* if needed.

		* bseutils.[hc]: removed bse_strdup_stripped().

	Sun Dec  1 02:42:49 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocidl.cc: capitalized keywords Info, Const, Out, In.

		* Makefile.am: generate public API to bse.sfidl with bseprocidl.

	Sat Nov 30 22:42:33 2002  Tim Janik  <timj@gtk.org>

		* bse*.[cp]: fix pspec_note constructors.

		* bseconstant.c: fix void note properties.

	Sun Dec  1 00:08:00 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: match new sfidl options

		* bseitem.proc: property is an sfidl keyword, renamed parameter

	Sun Nov 24 22:52:04 2002  Tim Janik  <timj@gtk.org>

		* bsewave.c (bse_wave_dispose): NULLify freed values.
		* bsewave.proc: add wave chunk accessors.

		* bseautodoc.c: minor line spacing tweak fro alper.

	Sun Nov 24 02:26:14 2002  Tim Janik  <timj@gtk.org>

		* Makefile.am: reorder sources to speed up parallel compilation.

		* bseautodoc.c: identify and dump records and sequences as
		boxed type names. fix up missing pointer indirection for sequences
		in dumped types.

		* bsecontainer.c: patched up serialization keywords with compat code.
		bseproject.c: same here, serialization fixes.

		* bseobject.c: minor serialization fix.

		* bseparasite.c: add compat code for module positions.

		* bseprocedure.c: storage API adaptions.

		* bserecords.sfidl: fixup types and docs for icons and BseNoteSequence.

		* bsestorage.[hc]: fixup serialization by using SFI. got rid of old
		unused code.

		* bsewave.c: set/get property fixes.

	Wed Nov 13 23:28:28 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocidl.cc: remove BSE_ from enum value names, to avoid
		double namespacing

	Wed Nov 13 20:14:06 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecategories.c: don't put null pointers as icons, as copying
		them does not work

	Tue Nov  5 08:44:40 2002  Tim Janik  <timj@gtk.org>

		* bsescriptcontrol.c (bse_script_control_class_init):
		* bsedatapocket.c (bse_data_pocket_class_init):
		* bsewaveosc.c (bse_wave_osc_class_init):
		* bsepart.c (bse_part_class_init):
		urg, move TYPE_UINT signal arguments to TYPE_INT, since
		UINTs can't be serialized. hope that this doesn't introduce
		subtle breakage.

	Tue Nov  5 05:34:53 2002  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: patch from Alper Ersoy for structure markup.

	Mon Nov  4 11:36:16 2002  Tim Janik  <timj@gtk.org>

		* bserecords.sfidl: provide BLURBs and HELPs for some records.

		* bseautodoc.c (show_structdoc): add ability to dump structure
		documentation.

		* bseautodoc.c (show_procdoc): fix C argument names so they contain
		'_' not '-'. change order of scheme and C prototypes.

		* bseautodoc.c: applied patch from alper ersoy which uses new
		reference documentation texi macros.

	Mon Nov  4 07:24:12 2002  Tim Janik  <timj@gtk.org>

		* bsetrack.c (bse_track_finalize): remove the aggregate midi receiver
		in finalize, not dispose.

		* bsecontainer.c (bse_container_remove_item): allow removal of items
		during finalization phase by explicitely catching ref_count==0.

		* bsesnet.c (bse_snet_release_children): only remove non-aggregate
		children.

		* bseglue.c (bglue_proxy_notify): don't export
		::notify(SfiProxy,GParamSpec*), but
		::property_notify(SfiProxy,const gchar*) as GObject
		property notification signal.
		(bglue_describe_iface): don't export iface signals.

		* bseitem.[hc]: s/ITEM_STORAGE_IGNORE/ITEM_AGGREGATE/, changed
		related files.

	Mon Nov  4 00:00:20 2002  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_do_get_icon): return a static BseIcon, and
		not freed data (bse_categories_from_type() fix).

		* bsecategories.c:
		(bse_categories_from_type):
		(categories_match): properly copy category fields, so static data
		doesn't get freed with the returned category sequence.

		* bsesource.c: introduce x/y position properties.

	Sun Nov  3 21:00:25 2002  Tim Janik  <timj@gtk.org>

		* bsecontainer.c (container_release_children): provide default impl,
		so chaining from derived classes works.

	Sun Nov  3 19:08:25 2002  Tim Janik  <timj@gtk.org>

		* bsesource.c: preserve vital data across dispose() and
		free in finalize().

		* bseitem.c (bse_item_set_parent): dispose items that are
		unparented.

		* bsemidisynth.c: remove internal children in finalize(), not
		dispose().

		* bseproject.c: remove children in release_children().

		* bsesong.c: remove children in release_children() and internal
		children in finalize().

		* bsesuper.c (bse_super_finalize): only remove from global super list
		upon finalize(), not dispose().

		* bsecontainer.c (bse_container_dispose): invoke release_children() if
		no use_count is being held on the container.

	Sun Nov  3 07:03:42 2002  Tim Janik  <timj@gtk.org>

		* bseglue.c (bglue_proxy_notify):
		* bseglue.c (fetch_proxy): connect normal signals !RUN_AFTER and proxy
		release notification as !RUN_AFTER, so the signal has a chance of being
		delivered to user code before the glue layer is informed about proxy
		releases.
		release notification still doesn't work properly, regardless.

		* bserecords.sfidl:
		* bsecategories.c: assign unique IDs to categories.

		* bseobject.c (bse_object_from_id): use SfiUStore instead of a hash
		table for object id maintenance.

		* bseobject.[hc]: remove ::destroy signal and method.
		emit ::release upon ->dispose().

		* bseitem.[hcp]*: don't emit ::set_parent() anymore. auto-remove items
		from containers upon dispose. run ->dispose() if an item is orphaned,
		i.e. lost its parent and has no use_count.

		* bsecontainer.c: remove destroy() method.

		* *.c: const fixes, turned destroy() implementations into dispose()
		or finalize().

	Sat Nov  2 00:06:12 2002  Tim Janik  <timj@gtk.org>

		* bse.h: remove all include files, we'll only export a handfull
		of public functions now.

		* *.c, *.cc: fixup includes.

		* bseglue.c (bglue_proxy_list_properties): fix off-by-one array
		access.

		* bseserver.c: disable BSE internal glue context.

	Fri Nov  1 17:51:26 2002  Tim Janik  <timj@gtk.org>

		* bseglue.c: fix sginal -> glue event delivery.

	Sun Nov  3 00:01:20 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: switch to sfidl long options

	Sat Nov  2 22:00:52 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetype.c: sfidl_pspec_(Rec|Seq) -> sfidl_pspec_Boxed(Rec|Seq)

	Sat Nov  2 00:05:20 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecategories.proc: need to have a boxed type for returning
		BseCategorySeq

		* bseprocidl.cc: generate code to define choices, class forward
		declarations and class help strings

	Thu Oct 31 18:27:52 2002  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.sfidl: added a documentation example.

	Wed Oct 30 00:49:04 2002  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: apply patch from Alper Ersoy to change generated
		texi format.

	Tue Oct 29 00:23:16 2002  Tim Janik  <timj@gtk.org>

		* bseautodoc.c: new program, generate texinfo procedure documentations.

	Mon Oct 28 04:38:42 2002  Tim Janik  <timj@gtk.org>

		* bseglue.c (fetch_proxy): export proxy references if a proxy
		has a parent or a use count.

		* bseserver.c (bse_server_init): add an internal static use count
		on the server singleton.

	Sun Oct 27 23:12:03 2002  Stefan Westerfeld <stefan@space.twc.de>

		* bseprocidl.cc: use Bse namespace, MAXINT/MININT support

		* bserecords.sfidl: removed typedef to match new sfidl syntax

		* bsetype.c: sfi_pspec_* -> sfidl_pspec_*

	Sun Oct 27 16:52:33 2002  Tim Janik  <timj@gtk.org>

		* *.c: fix _log_scale() pspec usage.

		* bsecategories.proc: introduce bse-categories-match().

		* bseglue.[hc]: adapt to new glue layer code in SFI.

		* bseobject.[hc]:
		* bseparam.[hc]: remove old log-scale code.

		* bseprocedure.proc: introduce bse-type-blurb().

		* bsescripthelper.c:
		* bseserver.c:
		* bseprocidl.cc: fix glue context creation.

		* bsesource.proc: introduce BseSource+has-outputs().

	Thu Oct 24 18:02:41 2002  Tim Janik  <timj@gtk.org>

		* moved gbsearcharray.h into SFI.

		* fix gbsearcharray.h usages.

	Sun Oct 27 00:35:01 2002  Stefan Westerfeld <stefan@space.twc.de>

		* bseprocidl.cc: use "signal" rather than "signal void" in the
		sfidl file, as we only have signals without return value.

	Sat Oct 26 23:09:34 2002  Stefan Westerfeld <stefan@space.twc.de>

		* Makefile.am bseprocidl.cc: new program that builds an sfidl file
		containing all classes/procedures found by introspection

		* bsecategories.proc bsecontainer.proc bseitem.proc bsepart.proc
		bseproject.proc bseserver.proc: put return values into the appropriate
		boxed types (i.e. BSE_TYPE_PART_NOTE_SEQ) and use boxed param specs.
		This allows bseprocidl to figure out the type correctly.

	Sun Oct  6 06:32:19 2002  Tim Janik  <timj@gtk.org>

		* bsecategories.[hc]:
		* bsecategories.proc: switch this over to SFIDL generated structures
		and implement procedures to query categories.

		* bseinstrument.h[hc]: don't compile this anymore.

	Sat Oct  5 02:34:19 2002  Tim Janik  <timj@gtk.org>

		* bseeditablesample.proc: use SfiFBlock for return values from
		collect-stats() and read-samples().

		* bseprocedure.proc (bse-note-to-freq):
		* bseserver.proc (describe-note), (note-from-freq), (note-from-string),
		(construct-note): use generated BseNoteDescription instead of
		BswNoteDescription.

		* bsecontainer.proc (list-items):
		* bsecontainer.[hc] (bse_container_list_items):
		* bseproject.proc (match-items-by-uname):
		* bseitem.[hc] (bse_item_gather_proxies), (bse_item_list_proxies):
		* bseitem.proc (list-proxies):
		* *.c (->list_proxies):
		use BseProxySeq instead of a proxy iter to list items.

		* bseproject.proc (list-uname-paths):
		* bseproject.[hc] (bse_project_list_upaths):
		use BseStringSeq instead of a string iter.

		* bsepart.[hc]:
		* bsepart.proc: use BsePartNote and BsePartNoteSeq instead
		of BswIterPartNote in the interfaces.

	Fri Oct  4 09:35:24 2002  Tim Janik  <timj@gtk.org>

		* *.[hc]: removed a bunch of code that went into SFI.

		* bsecompat.h: provide short-term compatibility defines.

	Wed Oct  2 06:50:39 2002  Tim Janik  <timj@gtk.org>

		* bseitem.proc (get-type): return the type as interface
		name rather than gulong.
		* bseproject.proc: same for list-uname-paths() and
		match-items-by-uname().

		* *.c: changed nearly all param_spec_*() conmstructors from
		GLib and Bse variants over to their Sfi counterparts.

	Wed Sep 25 17:51:56 2002  Tim Janik  <timj@gtk.org>

		* bseprocedure.c (bse_procedure_init): ref and sink the procedures
		param specs.

	Sun Sep 15 06:02:16 2002  Tim Janik  <timj@gtk.org>

		* bsebindata.h:
		* bsecontainer.h:
		* bseexports.h:
		* bseitem.h:
		* bsescriptcontrol.h:
		* bsesuper.h: fix extern "C" and constants in structures to fix
		compilation with C++ sources.

		* bseglue.[hc]:
		* gslgluecodec.[hc]:
		* gslglue.[hc]:
		together with Stefan Westerfeld, started out to revise the glue
		layer implementation.
		don't operate on GslGlueValue and GslGlueParam in place, but
		make them seperately allocated objects in their own respect.
		turn GslGlueSeq into a ref counted structure.
		implement deep-copy variants.
		implement constructors for the various data structures.
		implement simplisitic garbage colleciton boundary which frees
		all temporarily kept values returned from the glue layer.

		* *.c: fixed assorted code according to glue layer changes.

	Thu Sep 12 01:57:36 2002  Tim Janik  <timj@gtk.org>

		* bsestandardosc.c: implement standard_osc_reset().

		* gsloscillator.[hc]: added gsl_osc_reset() for module resets.

		* bsebiquadfilter.c: fix reset function name.

		* bseamplifier.c: reorder GUI fields.

	Sat Sep  7 16:00:47 2002  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]: get rid of BSE_ERROR_USER_* values.

		* bseprocedure.[hc]: remove exec status signalling code.

		* bsescriptcontrol.[hcp]*: maintain script_name and proc_name
		fields. remove error_status. add ::progress signal.

		* bseserver.[hc]: remove ::exec-status signal and related code.
		add ::script-start and ::script-error signals and proper
		handling code.
		(bse_server_run_remote): fix ref count leakage on script controls.

		* bsescripthelper.[hc]: adapt to BseServer and
		BseScriptControl changes.

		* *.c, *.proc: remove procedure exec status skipping/blocking code.

	Mon Sep  2 06:17:55 2002  Tim Janik  <timj@gtk.org>

		* bseitem.c (bse_item_store_property): fix missing newline in
		output.

	Fri Aug 30 10:29:33 2002  Tim Janik  <timj@gtk.org>

		* gslmagic.[hc]: added gsl_magic_list_brute_match() to facilitate
		exhaustive matches.

		* gsltests.c: add ring sorting test.

		* gslcommon.[hc]: provide gsl_ring_split(), gsl_ring_sort() and
		gsl_ring_tail().

	Fri Aug 30 03:18:09 2002  Tim Janik  <timj@gtk.org>

		* *.[hc]: update copyrights and license headers.

	Fri Aug 23 13:39:59 2002  Tim Janik  <timj@gtk.org>

		* gslopschedule.c (update_suspension_state):
		* gslopmaster.c: suspension update and reset() invokation fixes.
		whenever we change node->local_suspend or node->outputs_suspended,
		update node->needs_reset.
		* gsl-mplan.txt: keep a note about remaining suspension bugs.

		* gslwaveosc.c (gsl_wave_osc_process): auto-trigger oscillator
		if no sync input is present.
		(gsl_wave_osc_config): reset sync level if the new config caused
		a retrigger.
		(gsl_wave_osc_reset): new function to reset filter state and
		saved signal levels.

		* bsewaveosc.c: slight rename, implement wosc_reset() function
		to retrigger the oscillator.

		* bsetrack.[hc]: support user setting for number of voices.

	Thu Aug 22 04:24:58 2002  Tim Janik  <timj@gtk.org>

		* bsesongthread.c: support multiple tracks per song.

		* gslopschedule.c (update_suspension_state): update
		suspension flag before recursing into cycles that may
		lead back to an object up in the stack trace.

	Thu Aug 15 21:21:46 2002  Tim Janik  <timj@gtk.org>

		* Makefile.am: add mkcproc.pl to EXTRA_DIST.

		* bsestandardosc.c (bse_standard_osc_update_modules):
		pass on transaction.

	Thu Aug  8 18:14:48 2002  Tim Janik  <timj@gtk.org>

		* gslmagic.c (magic_create): fix out-of-bound string access.

	Wed Aug  7 11:20:59 2002  Tim Janik  <timj@gtk.org>

		* toyprof.h: flag conditional enum ToyprofBehaviour to be skipped by
		the glib-mkenums.

	Tue Aug  6 18:48:13 2002  Tim Janik  <timj@gtk.org>

		* bsepart.h:
		* bseinfo.c:
		* bseconstvalues.h:
		* bseserver.proc:
		* bseutils.[hc]:
		* bswcommon.[hc]:
		* bseglobals.[hc]:
		* gslmath.[hc]: s/halftone/semitone/

		* bsemain.c: adjust dcache node size to 4000 so the node's data plus
		padding will normally fit into a page.

		* gsldatacache.c: wow, gross buggyness in caching logic detected. we
		badly miscalculated the current cache size and thus triggered lots of
		sensless cache sweeps. fixed updating of aged nodes in case of
		GSL_DATA_CACHE_PEEK, introduced AGE_EPSILON which prevents sensless
		aging when frequently accessing the same block, added low_persistency
		flag for dcaches that don't really need to cache data (figured through
		gsl_data_handle_needs_cache()). altered caching logic so we do a
		moderately good job at distributed node sweeping around the upper
		cache memory mark. fixed documentation.

		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatahandle.[hc]: introduce recurse() method on data handles which
		has to be implemented for all data handles that use other data handles
		by invoking a user supplied callback on them. introduce ojob() method
		which can be implemented by data handles to support certain optimization
		jobs. remove coarse_seek() method, if this is really required, it can
		be implemented as an optimization job.

		* gsldatahandle.[hc]: introduce gsl_data_handle_needs_cache() which
		figures whether a data handle will actually benefit from caching (not
		true for data handles which don't do IO themselves, e.g. because they
		are using static memory, a dcache or other data handles).

		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatahandle.c (wave_handle_ojob): return TRUE for the
		GSL_DATA_HANDLE_NEEDS_CACHE ojob query.

		* bseconstant.c (bse_constant_class_init): plug string leakage.

		* bsewaveosc.c (pcm_pos_access_free): plug leakage of position struct.

	Sun Aug  4 21:01:56 2002  Tim Janik  <timj@gtk.org>

		* gslloader-mad.c (_gsl_init_loader_mad): flag this loader with
		GSL_LOADER_SKIP_PRECEEDING_NULLS to deal with broken mp3 files.

		* gslmagic.[hc]: implement gsl_magic_list_match_file_skip() which
		allowes for checking magics in files after an initial offset.

		* gslloader.[hc]: support GSL_LOADER_SKIP_PRECEEDING_NULLS loader flag
		to skip preceeding 0s before attempting magic matches.
		this is implemented as a worst case fallback mechanism to deal with
		some broken mp3 files.

	Sun Aug  4 11:56:27 2002  Tim Janik  <timj@gtk.org>

		* gslwavechunk.c: add fix from stefan so tail and head blocks are
		actually read out.

		* gslwavechunk.[hc] (struct _GslWaveChunk): rename ->start and ->end
		fields to ->first and ->last since they both point to the first/last
		position meant to be read out within that block (rather than the start
		and upper boundary of the block).

	Sat Aug  3 17:16:13 2002  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_open):
		* bsemididevice-oss.c (bse_midi_device_oss_open): translate errno
		via bse_error_from_errno().

		* bseserver.[hc]: fallback to null midi device if the real
		midi device can't be opened.

		* gsl-mplan.txt: fix typos.

		* gsldatahandle-vorbis.c: adapt to changes in ov_read_float() in
		libvrobis v1.0.0.

	Fri Aug  2 18:21:19 2002  Tim Janik  <timj@gtk.org>

		* bseitem.[hc]: add per-class list_proxies() method to retrieve a list
		of possible proxies for object properties.
		add list_proxies() function and procedure.
		bse_item_gather_proxies(): new convenience function to add predicate
		filtered proxies to an iterator.

		* bsemidisynth.c: support list_proxies() for synth net property.

		* bseproject.[hc]: provide bse_project_get_wave_repo().

		* bsesubsynth.[hc]: lock synth net property during playback, catch
		infinite recursion during context creation. support list_proxies() for
		synth net property.

		* bsetrack.[hc]: support list_proxies() for synth net and part properties.

		* bsewaveosc.c: support list_proxies() for wave property.

	Tue Jul 30 01:20:48 2002  Tim Janik  <timj@gtk.org>

		* bsewaveosc.[hcp]*: support percentual seekage.

		* gslwavechunk.c: fix uint/GslLong bug and non-loop initialization for
		enter mem block.

		* gsl*.[hc]: miscellanous const fixes.

		* gslloader-oggvorbis.c (_gsl_init_loader_oggvorbis): add MIME
		types application/x-ogg and audio/x-vorbis.

	Sat Jul 27 18:17:49 2002  Tim Janik  <timj@gtk.org>

		* Makefile.am: distcheck-fixing: include -I., prefix
		deps with srcdir, fix file arguments wrg srcdir
		prefixing.

		* mktypes.pl:
		* bsetype.h: fixup builtin type macros.

		* gslmakefile.inc: add missing files.

	Sat Jul 27 12:48:07 2002  Tim Janik  <timj@gtk.org>

		* bswcommon.[hc]: support callback notification from
		bsw_register_scripts() and bsw_register_plugins().

	Sat Jul 27 06:26:10 2002  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc]: redesigned some basic things.
		data handles correspond to samples now, they carry n_values,
		n_channels and bit_depth, provided accessors for those and
		the data handle name. these values are only valid for opened
		data handles now though, implementations have to fill in a
		setup structure upon openening to provide those values.
		(gsl_data_handle_new_mem): new data handle for constant data
		since gsl_data_handle_new_insert() doesn't allow a NULL src_handle
		anymore.

		* gslwavechunk.[hc]: life time redesign. wave chunks are ref counted
		now and have to be explicitely opened.

		* gslfilehash.c: remove debugging code.

		* gslloader.c: adapt to new wave chunk API.

		* bseeditablesample.[hcp]*: adaptions accroding to the new wave chunk
		API. users have to explicitely open and editable sample now.

		* gslloader-gslwave.c:
		* gsldatautils.c:
		* gsldatahandle-vorbis.c:
		* gsldatahandle-mad.c:
		* gsldatacache.c:
		* bsestorage.[hc]: adaptions to the new data handle API.

		* bsewave.[hc]: adaptions to the new data handle and wave chunk API.
		callers must explicitely announce interest in the wave chunk index now.

		* bsewaveosc.[hc]: use new BseWave API, cleanup and fix object
		reference handling. use new GslWaveChunk API.
		(wmod_process): pass NULL for non-connected input buffers.

		* gslwaveosc*.[hc]: fix read out of constant default frequency,
		frequency signal and modulation signal updates and the frequency
		argument to gsl_wave_osc_retrigger() (was expected as signal frequency).

		* gslwchunk.c: test case fixup according to new APIs.

		* some ChangeLog cleanups.

	Thu Jul 25 01:12:51 2002  Tim Janik  <timj@gtk.org>

		* gslfilehash.[hc]: new files, implementing GslHFile, an MT-safe
		pread() wrapper FILE type which shares unix file descriptors (to
		reduce usage thereof), and GslRFile, piggyback implementation
		on top of GslHFile that supports the more common read()+seek() API.

		* gsldatahandle.[hc]: use GslHFile for raw wave handles.
		nuke data handle caching code. remove mtime from data handles.
		make gsl_data_handle_open() and associated method return GslErrorType
		instead of errno.

		* gsldatahandle-vorbis.c: translate ogg/vorbis error codes into
		GSL error codes. use GslRFile instead of unix FILE*.

		* gsldatahandle-mad.c: use GslHFile instead of unix file descriptors.

		* gslcommon.[hc]: provide gsl_error_from_errno(), get rid of
		gsl_check_file_mtime(). sync gsl_strerror() with new error codes.

		* *.c: adaptions due to gsl_wave_handle_new() changes.

		* bseenums.[hc]: sync errors with new GSL errors.
		use gsl_error_from_errno() from bse_error_from_errno().

		* gslmultiwave.[hc]: remove unused code.

		* gsldatahandle.[hc]: instead of gsl_data_handle_new_translate() with
		mildly inconvenient parameters, offer gsl_data_handle_new_crop() and
		gsl_data_handle_new_cut() with intuitive arguments.

	Tue Jul 23 07:47:55 2002  Tim Janik  <timj@gtk.org>

		* bse.h:
		* Makefile.am: remove (currently) unused code from build setup:
		BseInstrument, BseEffect*, BsePattern*.

		* bseconstvalues.[hc]: new files, taking over many constants and note
		related macro definitions from bseglobals.[hc].

		* bsemain.c: initialize GSL with proper kammer frequency/note.

		* bseutils.[hc]: removed duplicated constants, added
		bse_note_fine_tune_from_note_freq ().

		* bswcommon.[hc] bswprivate.h: change BswPartNote to have a note
		and a fine_tune field instead of frequency.

		* bsetype.h:
		* bseparam.[hc]: don't introduce BSE_TYPE_NOTE as fundamental
		type, having a pspec variant is sufficient. added convnience
		function to easily create pspecs for notes and frequencies.

		* bsesongthread.c:
		* bsepart.[hcp]*: ported this over from using frequencies to
		using notes.

		* bsesong.[hcp]*: remove dependancies on unused code.

		* bsemath.h: added more accurate constants for 2^(1/12),
		ln(2^(1/12)) and ln(2^(1/1200)), minor cleanups.

		* bseglobals.[hc]: removed math constants. provide a constant,
		high-accuracy semitone factor table and fine tune factor table
		at compile time. got rid of 16bit-fixed semitone factor table.
		removed lots of MIN/MAX defines, note, fine tune and frequency
		macros.

		* bseglue.c: BseNote fixes.

		* bseconstant.[hc]: remove unused sequencer methods.

		* *.c: constant fixes/adaptions, use new param spec constructors.

		* bseinfo.c: added lots of (inactive) debugging code to check
		note/frequency/table validity.

	Sun Jul 21 04:39:59 2002  Tim Janik  <timj@gtk.org>

		* bseglobals.[hc]: provide saner (and clearer) GSource priorities
		and bse_idle_*() helper functions to install async handlers at
		the various priority levels.

		* *.c: use bse_idle_* functions to queue async handlers.

		* bsepart.[hcp]*: provide notes with event ids, select notes by
		ids and not by range.

	Mon Jul 15 05:07:37 2002  Tim Janik  <timj@gtk.org>

		* bsecontextmerger.[hc]: new internal module which merges signal
		outputs of multiple module contexts.

		* bsemidimodule.[hc]:
		* bsemidisynthinput.[hc]: remove old midi voice implementation modules.

		* bsetrack.[hc]: first start at implementing tracks for songs, which
		arrange song parts.

		* bsemidivoice.[hc]: internal wrapper objects for midi receiver modules.

		* bsecontainer.[hc]: added class method to list children for context
		creation propagation (overriden by BseSNet context branch
		implementation).

		* bseenums.[hc]: remove MIDI related enums.

		* bseglobals.[hc]:
		* gslcommon.[hc] (gsl_init):
		fix MIDI note number for kammer note.

		* bseglue.[hc]: support boxed->GslGlueSequence conversions. fix up
		record and sequence usage.

		* *midi*.[hc]: remove old BseMidiDecoder code.

		* bsemidievent.[hc]: remove old MIDI channel/note/decoder implementations.
		use float values for MIDI event fields.
		add event constructors, remove global MIDI notifier hook.
		add MIDI_SIGNAL enum and default values for the various control
		signals supported per midi channel.

		* bsemidiicontroller.[hc]: adaptions to work with the new MIDI_SIGNAL
		enum and MidiReceiver.

		* bsemidinotifier.[hc]: adaptions to work with the new MidiREceiver.

		* bsemidireceiver.[hc]: actually deploy the new midi receiver
		implementation. added event processing implementation, support float
		values for midi event fields.
		(bse_midi_receiver_push_data): translate system time to engine ticks
		here. process newly enqueued events (this might need to change).
		add API to push and process event structures.
		implement midi control value module.
		reimplement midi voice and switch modules, make use of the engine's
		new virtual module implementation.
		implement midi notifier hooks per midi receiver.
		support continuous midi controls (convert LSB and MSB part to float).
		support "all sound off" and "all notes off" control triggers, abuse
		"local control switch" for debugging output of active voices.
		support sustain pedal for active voices.
		move BseMidiEvent structure back into bsemidievent.[hc].

		* bsemidisynth.[hc]: implement multiple midi voices via branch
		contexts. got rid of the maximum_voices=4 limitation. this also
		requires midi voice synth networks to properly put out the
		"done" signal to figure reusable voices. get rid of "clicks"
		at note boundaries when reusing voices by means of the engine's
		reset() method for modules.

		* bseobject.[hc] (bse_object_debug_name): debugging convenience
		function which describes (partly invalid) object references.

		* bsepart.[hcp]*: support selection rectangle.

		* bseprocedure.proc: add convenience procedure to convert notes into
		frequencies.

		* bseserver.[hcp]*: remove MidiDecoder code, properly support
		BseMidiReceiver.

		* bsesnet.[hc]: added bse_snet_context_clone_branch() and
		bse_snet_context_is_branch() to support context branches for
		selected modules within a synthesis network.

		* bsesong.[hc]: implement voices via MidiReceiver modules
		and context branches.
		* bsesong.proc: add procs for track addition/removal.

		* bsesongthread.[hc]: implement playback of part notes via
		midi note on/off events. fetch part via BseTracks.

		* bsesource.[hc]: added convenience macro bse_source_must_set_input()
		fo rinternal module connections.
		support setting of context data for sources with 0 input and output
		channels. to be used by BseSNet solely (for context branches).
		bse_source_collect_inputs_recursive() traversal function to construct
		a list of modules that form inputs of a given modules.

		* bsesubsynth.[hc]: pass on MidiReceiver per context to custom synth
		networks.

		* bswcommon.[hc]: support iterator->GslGlueSequence conversion.

		* gslcommon.[hc]:
		add flow job debug key.
		(gsl_time_system): retrieve system time in micro seconds.
		(gsl_tick_stamp_last): get the last tick stamp update together with
		the system time of that update.

		* gslgluecodec.c:
		* gslgluesignal.c:
		* gslglue.[hc]: don't fix the element type of sequences.
		ref-count records (should do the same at least for sequences).
		use sequences for compound signal/procedure arguments.
		support field names in record implementation (should use quarks
		for efficiency).

		* gslopnode.h:
		* gslengine.[hc]:
		* gslopmaster.[hc]:
		* gslopschedule.[hc]:
		* gsloputils.[hc]: change GSL Engine license to GPL.

		* gslengine.[hc]: more documentation. make/flag thread-safe functions.
		make garbage collection explicit.
		(gsl_module_new_virtual): really implement cirtual modules.
		(gsl_engine_dispatch): garbag collect here.
		(gsl_engine_tick_stamp_from_systime): translate system time to engine
		tick stamps, based on the last tick stamp update.

		* gslopnode.h:
		* gslopmaster.[hc]: update output stream connected flags during within
		scheduler.
		clenup pending flow jobs when discarding engine modules.
		reimplement resumption implementation.
		fixup flow job implementation.
		implement stream virtualization for virtual modules.
		implement module suspension.

		* gslopnode.h:
		* gslopschedule.[hc]:
		support scheduling virtual modules and ouput stream connected flag
		updates.

		* gsloputil.[hc]: implement proper flow job and garbage collection.

		* gsl-mplan.txt: document virtual modules.

	Wed Jul  3 05:34:10 2002  Tim Janik  <timj@gtk.org>

		* bsemidireceiver.[hc]: new MIDI event handling core which creates
		the required engine modules on demand (not currently deployed).

		* bsemain.[hc]: delay plugin initialization and initialize MIDI core.

		* bsemididevice-oss.c: pipe event data into the new midi receiver.

		* bsemididevice.[hc]: add BseMidiReceiver property.

		* bsemidievent.[hc]: rename, this code is scheduled for removal once
		the new MIDI core is deployed.

		* bseproject.c: create synth nets together with a default MIDI
		receiver.

		* bseserver.[hc]: add API to manage default MIDI receiver.

		* bsesnet.[hc]: add API to maintain an associated MIDI receiver
		per context.

		* bsesubsynth.c: create contexts on the target snet with the
		MIDI receiver and midi_channel from the current context of
		the sub synth.

		* gsl-mplan.txt: describe reset(), describe suspension,
		fix consumer node definition, TODO cleanups.

		* gslcommon.[hc]: add gsl_ring_insert_sorted().

		* gslopmaster.[hc]:
		* gslopschedule.[hc]:
		* gsloputil.[hc]:
		* gslengine.[hc]: implement first stab at virtual modules (not
		yet completed). complete suspension and resume job implementations.

	Wed Jun 19 03:47:45 2002  Tim Janik  <timj@gtk.org>

		* incorporated fixes/changes suggested by stefan and
		Hans Meine <hans_meine@gmx.net>.

		* gsldatahandle-mad.c (create_seek_table): fix // comments.

		* gslengine.h:
		* gslopmaster.c: sigh, remove const integer fields from structures,
		this is simply not C++ compatible.

		* gslloader.[hc]: make GslWaveFileInfo a ref-counted structure.

	Thu Jun 13 07:28:34 2002  Tim Janik  <timj@gtk.org>

		* bsemidinotifier.[hcp]*: new object, emitting notification of incomming
		MIDI events.

		* bsescriptcontrol.[hcp]*: new object, proxying running scripts and
		allowing for user side control of scripts.

		* *.c: more i/o channel name fixups.

		* bsebindata.c: code cleanups.

		* bsecategories.c: check type name syntax.

		* bsecomwire.[hc]: removed temporary hacks, slight fixup to
		random request id generation.

		* bsecontainer.proc: added lookup procedure to find a named child
		of a container.

		* *.proc: const cleanups.

		* bseenums.[hc]: added user error enum values.

		* bseitem.proc: added is_a check procedure.

		* bsemidimodule.c:
		* bsemididevice-oss.c: changes due to new timestamped and thread-safe
		MIDI decoder API.

		* bsemidievent.[hc]: midi decoder API extensions to provide
		time stamped MIDI events. explicitely marked mutex-affected
		functions and implemented thread-safety measures.

		* bseobject.[hc] (bse_object_do_dispose): set the
		BSE_OBJECT_FLAG_DISPOSED flag on objects, since we don't support
		resurrection in general.
		(bse_object_class_add_dsignal): allow addition of detailed signals.
		(bse_object_from_id): don't hand out disposed objects.

		* bseparasite.c: fixed string-escaping bug.

		* bsepart.[hc]: for now, limit the maximum tick count to 0x7fffffff,
		which is a valid signed integer.

		* bsescripthelper.[hc]: properly support the GslGlue layer and
		BseScriptControl.

		* bseserver.[hcp]*: support container usage of the server.
		moved script handling into bsescriptcontrol.c.
		implment procedure to retrieve a MIDI notifier obejct.

		* bsesongthread.c: silence debugging output.

		* bsesource.proc: allow setting a module's input by name.
		added more getters for channels.

		* bsestorage.c: fix string escaping bug.

		* bswcommon.c: added handler to convert a BswNoteDescription
		into a GslGlueRecord.

	Wed Jun 12 06:31:34 2002  Tim Janik  <timj@gtk.org>

		* GSL Glue layer introduction. the code is mature enough for
		our scheme bindings, but still evolving.

		* gslglue.[hc]: new files implementing the GslGlue layer.
		the GslGlue layer is a presumably simple API abstraction
		which allowes acces to foreign object systems with notification
		signals, object properties and object procedures.

		* gslgluecodec.[hc]: serialization/deserialization layer
		which allowes GslGlue to be used from remote processes
		transparently.

		* gslgluesignal.c: implementation of signal notification.

		* bseglue.[hc]: new file, imlpementing the GslGlueVTable backend
		for BSE.

	Mon May 27 16:45:48 2002  Tim Janik  <timj@gtk.org>

		* glib-extra.[hc]: remove the buggy and old g_strdup_quoted() function.
		changed callers to use g_strescape (string, NULL) instead.

		* bsequery.c (show_procdoc): fallback to procedure blurb if there's
		no help available.

		* mkcproc.pl: support procedure BLURBs.

		* gslcommon.[hc]: added function to return main thread handle.

		* gsl*.[hc]: nuked GslPollFD, use GPollFD instead.

	Mon May 27 08:34:28 2002  Tim Janik  <timj@gtk.org>

		* bseprocedure.c (call_proc): provide the procedure execution status
		from the procedure's BseErrorType output if any.

		* bseprocedure.[hc]: allow NULL values for
		bse_procedure_marshal_retval() and bse_procedure_unmarshal_retval().

		* bseserver.[hcp]*: added ::user-message signal with wrapper function
		bse_server_user_message(). added bse_server_run_remote() to start
		a script interpreter. added bse_server_queue_kill_wire() to kill the
		connection to a currently running child process. added interpreter
		wire dispatch source to handle remote connections from the main loop.
		renamed script-status to exec-status.

		* bsestorage.[hc]: fix precision in float/double value storage.
		fix validation of storage values to support G_PARAM_LAX_VALIDATION.

		* bseutils.[hc]: provide documentation for bse_search_path_*().

		* bswcommon.h[hc]: added bsw_register_scripts().
		moved bsw_type_name_to_sname() into this place.

		* bseplugin.[hc] (bse_plugin_dir_list_files): simply use
		bse_search_path_list_files() to find plugin libraries.

		* bseparam.c (param_note_validate): fix validation code to revert
		to BSE_NOTE_VOID.

		* bsemain.c (bse_init): record the current directory for spawning
		child processes.

		* bsemagictest.c (main): use bsw_register_plugins() to load plugins.

		* bsecategories.c (category_strip_toplevels): added /Scripts/ toplevel
		category.

		* bsescripthelper.[hc]: implementation of script registration (currently
		limited to scheme) and wrapper stubs to invoke script functions as
		BseProcedure.

		* bsecomwire.[hc]: implementation of communication stubs to spawn a
		child and talk with it through pipes.

		* bseprocedure.proc: implement utility procedures, mostly for scripts.

		* bsehelloworld.proc: remove bse-progressor a left-over from test-cases
		of an old procedure concept.

		* bsestorage.c (bse_storage_parse_param_value): fix negating unsigned
		ints bug in FLOAT or DOUBLE parsing.

	Wed May 22 07:49:50 2002  Tim Janik  <timj@gtk.org>

		* bsequery.c: use bsw_register_plugins() to load plugins and convert
		procedure names to scheme names for --procdoc.

		* bseplugin.[hc]: fix const for bse_plugin_check_load().

		* bse.h: added missing files.

		* bseprocedure.[hc]: added bse_procedure_eval() to call procedures from
		strings, and bse_procedure_marshal_retval() and it's counterpart
		bse_procedure_unmarshal_retval() to store/retrieve procedure call returns
		in/from strings.

		* bsestorage.c (bse_storage_parse_param_value): allow pspec to be NULL.

		* bswcommon.c (bsw_proxy_get_type): register value transform functions
		for BswProxy <-> BseObject. added bsw_register_plugins() to reduce
		duplication of this code. added function that should go into glib:
		g_type_name_to_cname(), g_type_name_to_sname(), g_type_name_to_cupper(),
		g_type_name_to_type_macro().

	Tue May 21 08:13:51 2002  Tim Janik  <timj@gtk.org>

		* final object reference cleanup. get rid of ulocs, allow freeform
		name for objects with the exception of ":" and uniqueness within
		children of a container. BseObject just has an ::uname property
		for this purpose now, and no ::name or ::uloc properties anymore.

		* bseobject.[hc]: ::uloc/::name/::uname cleanup and changes. virtualize
		property storage.

		* bsecontainer.[hc]: store child references as strings with apropriate
		prefix (bse-container-restore).
		introduce retrieve_child() class function to resolve a (type,uname) pair
		into an existing or a new child.
		removed bse_container_item_from_handle(), bse_container_item_from_path()
		and bse_container_make_item_path(). introduced:
		bse_container_retrieve_child(): same purpose as the new class function.
		bse_container_resolve_upath(): resolve a colon seperated list of unames,
		by following the associated named objects (children).
		bse_container_make_upath(): construct an upath for a (non-immediate)
		child of a container.

		* bseitem.[hc]: remove bse_item_make_handle() and
		bse_item_make_uloc_path().

		* bsecontainer.[hc]:
		* bseitem.[hc]: remove unused PARENT_REF hack.

		* bseproject.[hc]:
		* bsewaverepo.[hc]: moved single-child-per-project hack into
		bseproject.c and cleaned this up some.

		* bsestorage.[hc]: disallow storing/parsing object values through
		bse_storage_put_param()/bse_storage_parse_param_value().
		introduced bse_storage_put_item_link() and bse_storage_parse_item_link()
		for this purpose, where the latter takes a function for deferred
		invocation to resolve object references after all have been created.
		added bse_storage_input_text() and bse_storage_warn_skipc().

		* bseitem.c: implement bse_item_store_property() and
		bse_item_restore_property() to implement object properties via
		BseStorage's _item_link functions.

		* bsedatapocket.c: handle object links according to the new storage API.

		* bse*.[hc], bse*.proc: various uname/upath/uloc fixes. changed
		BseStorage uses to store/retrieve object references via
		bse_storage_put_item_link() and bse_storage_parse_item_link().

	Sun May 19 23:57:10 2002  Tim Janik  <timj@gtk.org>

		* bswcommon.[hc], bswprivate.h: reworked the iterators.
		we now have BswIter as an abstract base, which introduces generic
		iterator functions. there's no boxed iterator type, instead, each
		boxed type that needs an iterator has to be implemented from scratch
		(failry easy though). with that, we currently just need BswIterPartNote.

		* bse*.[hc]: fixes due to iterator changes.

	Sat May 18 02:18:00 2002  Tim Janik  <timj@gtk.org>

		* bswcommon.[hc]: renamed BseSequence to BswNoteSequence and moved it
		into this file.

		* bsesequence.[hc]: removed these files.

		* bsestorage.[hc]: storage format fixups:
		- valid boolean values: #t, #f, #T, #F
		- store notes as strings
		- store flags as lists
		- store BswNoteSequence as list of notes

		* bseparasite.[hc]:
		* bsedatapocket.c: fix character storage, using #\c.

		* bsestorage.[hc]: added bse_storage_parse_eval() to parse
		procedures.

		* bsemain.c: make sure the server is alive.

	Fri May 17 20:56:39 2002  Tim Janik  <timj@gtk.org>

		* gsl*.*: incorporate fixes from stefan.

	Thu May 16 23:15:33 2002  Tim Janik  <timj@gtk.org>

		* bseserver.h: introduced ::script_status signal for GUI notification,
		(not that we could currently execute scripts ;) this is currently used
		to notify about procedure exit codes via BSE_SCRIPT_STATUS_PROC_END.

		* bseprocedure.[hc]: procedure API and implementation cleanups.

		* bsestorage.[hc]: some additions to store procedures.

		* *.c: misc fixes due to procedure changes.

	Tue May 14 21:36:51 2002  Tim Janik  <timj@gtk.org>

		* bsesource.c: defer resolution of the input
		channel until resolve_dinput() and provide a better error
		message.

		* documentation fixes.

	Tue May 14 04:17:08 2002  Tim Janik  <timj@gtk.org>

		* bsestandardosc.c (bse_standard_osc_class_init): channel order fixup.
		* bseamplifier.c (bse_amplifier_class_init): same here.

	Mon May 13 23:27:47 2002  Tim Janik  <timj@gtk.org>

		* icons/biquad.c:
		* bsebiquadfilter.c: fix the biquad filter icon.

	Mon May 13 23:06:49 2002  Tim Janik  <timj@gtk.org>

		* gslmakefile.inc: added $(PERL) invocation fix from stefan.

	Mon May 13 22:07:36 2002  Tim Janik  <timj@gtk.org>

		* gslengine.[hc], gslopmaster.c: reserve space for
		process_defer() in GslClass and provide a reconnect()
		class function, serving as notifier when a module got
		reconnected. adapted related code portions.
		added sub sampling argument to gsl_engine_init().

		* bsestandardosc.c: boost up the range of modulatable
		octaves to 5.

		* gslfilter.[hc]: fix argument ordering of _eval()
		functions. added lowpass and highpass biquad types.

		* gslloader-wav.c: skip unknown sub-chunk rather than
		aborting.

		* gslsignal.[hc]: added implementation of
		GslFrequencyModulator which can prerender a frequency
		buffer out of various frequency modulation settings/inputs.

		* bsebiquadfilter.[hc]: new filter implementation, supporting
		biquad filter types and frequency and gain (modulation) input
		signals.

	Sun May 12 20:48:34 2002  Tim Janik  <timj@gtk.org>

		* bsepcmoutput.c (bse_pcm_output_context_connect): connect to
		joint channels of the internal PCM output module.

		* bsepcmmodule.c: use joint input channels for the internal PCM
		output module.

	Fri May 10 17:46:01 2002  Tim Janik  <timj@gtk.org>

		* gslsignal.h: provide gsl_approx_exp2() to approximate 2^x.
		gsl_signal_exp2() is supposed to be deprecated.
		gsl_approx_exp2() has slightly greater error within -0.5..0.5,
		but is faster and covers a wider range.

	Fri May 10 17:41:11 2002  Tim Janik  <timj@gtk.org>

		* gslieee754.h: make gsl_ftoi() operate on floats and provide
		gsl_dtoi().

	Wed May  8 00:34:09 2002  Tim Janik  <timj@gtk.org>

		* gslmath.h: accuracy fixes of constants, added more constants.

	Mon May  6 13:01:28 2002  Tim Janik  <timj@gtk.org>

		* icons/instrument.xcf: use a speaker different from the
		PcmOutput icon for sub instruments.

	Sun May  5 20:31:57 2002  Tim Janik  <timj@gtk.org>

		* bsewaveosc.[hcp]*: moved this here from ../plugins/ because
		it introduces procedures and otehr core components rely on it.

	Sun May  5 08:07:39 2002  Tim Janik  <timj@gtk.org>

		* bsemidievent.[hc]: provide initialization values other than 0
		for pitch_bend, voume and balance on all MIDI channels.
		allocate the channel controls with the decoder.

	Sun May  5 06:18:17 2002  Tim Janik  <timj@gtk.org>

		* bseamplifier.[hc], bseamplifier-aux.c: new amplifier module, BSE's
		VCA equivalent.

		* gslincluder.c: add facility to reject certain cases with GSL_INCLUDER_REJECT().

		* gslsignal.[hc]: add approximation functions for atan1(), and all
		four quadrants of a circle.

	Wed Apr 24 08:13:26 2002  Tim Janik  <timj@gtk.org>

		* bsesource.c (bse_source_reset): before invoking the ->reset() method,
		wait_on_trans()-action completions unconidionally.

		* bseproject.c (bse_project_stop_playback): eeek, forgot to
		wait_on_trans() after dismissing contexts, before calling
		bse_source_reset().

		* gsldatahandle.[hc]: for consistency, change:
		s/gsl_data_handle_new_reversed/gsl_data_handle_new_reverse/.

		* gsldatahandle.c (gsl_data_handle_new_dcached): make use of
		the padding around a node's value block.

		* gslopmaster.[hc]:
		* gslengine.[hc], gslopnode.h:
		* gslopschedule.[hc]:
		* gsloputil.[hc]:
		major namespace cleanup.

	Sun Apr 21 21:10:17 2002  Tim Janik  <timj@gtk.org>

		* bseglobals.[hc]: change fine-tune to match GSL fine-tune
		cent table.

		* bsesource.[hc]: complete joint channel implementation.

		* bsestandardosc.[hc]: add fine-tune property, allowing
		for slight detunes of multiple oscillators.

		* gslopnode.h:
		* gsloputil.c:
		* gslopschedule.c:
		* gslopmaster.[hc]:
		* gslengine.[hc]: complete joint channel implementation.
		NULL terminate the jstream gfloat**values; pointer array.

		* gsloscillator.h:
		* gsloscillator-aux.c: implement oscillator fine-tune.
		* gsloscillator.c: fix sync-update clicks.

		* gslsignal.[hc]: implement semitone cent fine-tune factor
		table, available as gsl_cent_factor().

	Tue Apr 16 12:51:17 2002  Tim Janik  <timj@gtk.org>

		* bsesnooper.[hc]: move this module from plugins to BSE.

		* bsesubiport.[hc]: virtual sub network input ports.

		* bsesubiport.[hc]: virtual sub network output ports.

		* bsesubkeyboard.[hc]: convenience virual input for instruments.

		* bseinport.[hc], bseoutport.[hc], bsemidikeyboard.[hc]:
		scratch these, they are replaced by the new modules now.

		* bsesubinstrument.[hc]: convenience virual output for instruments.

		* bsecategories.[hc]: provide leaf index of category names.

		* bsesnet.[hc]: provide functions to test for registered port names
		and provide notification when port names got unregistered.

		* bsesource.c:
		(bse_source_set_context_imodule):
		(bse_source_set_context_omodule):
		(bse_source_set_context_module):
		be laxer about module IO checks, only demand the
		GSL module has at least as many input/output channels as the
		BseSource.

		* bsestandardsynths.c: use the new modules.

		* *.c: category fixes.

	Mon Apr 15 14:43:18 2002  Tim Janik  <timj@gtk.org>

		* bsestandardosc.h (enum): get rid of BSE_STANDARD_OSC_NONE.

	Mon Apr 15 09:43:15 2002  Tim Janik  <timj@gtk.org>

		* gslosctable.[hc]: create anti-aliased filter tables for the
		following wave forms: sine, triangle, saw, peak, moog saw and
		square/pulse variants.

		* gsloscillator.[hc], gsloscillator-aux.c: new oscillator code,
		supporting sync out and various inputs: freq, freq modulation,
		sync and pulse width modulation. the wave to use for oscillation
		is supplied via a GslOscTable.

		* gslincluder.c: helper file for sources that need to comile
		various forms of the same function.

		* gslcommon.[hc]: supply debug keys for the debug options.

		* gslieee754.h: mark gsl_ftoi() GNUC_CONST.

		* gslsignal.h: mark gsl_signal_exp2() GNUC_CONST.

		* gbsearcharray.h: minor naming fix.

		* bsemidiicontroller.[hc]: provide midi control inputs.

		* bseconstant.c: allow logarithmic scaling of the input values
		as frequencies.

		* bseenums.h: provide BseMidiControlType enum.

		* bsemain.c: use GSL supplied debug keys.

		* bsemidimodule.c: fix BSE_MIDI_SIGNAL_PITCH_BEND setting, so we put out
		values between -1 and +1 for this.

		* bsestandardosc.[hc]: use new GSL oscillator code for this (and
		support all its bells and whistles).

	Fri Apr 12 04:45:04 2002  Tim Janik  <timj@gtk.org>

		* gsl-fftconf.sh (gsl_power2_fftc_big): fix a missing NULL check to skip
		first fft stage on input values.
		(gsl_power2_fftsr): invoke gsl_power2_fftc_big() with n_cvalues instead
		of n_values like we do for all other ffts as well.

	Mon Apr  8 14:04:30 2002  Tim Janik  <timj@gtk.org>

		* gsldefs.h: define if_expect() and if_reject() if GSL_EXTENSIONS
		is defined, to make these usable in third-party code.

		* gslsignal.[hc]: added windowing functions to implement the
		windows: blackman, cos, bartlett, hamming, sinc and rectangle.

	Fri Apr  5 07:42:16 2002  Tim Janik  <timj@gtk.org>

		* gsldatahandle-mad.c: disable file contents if !GSL_HAVE_LIBMAD.

		* gslloader-mad.c (_gsl_init_loader_mad): don't register the MAD MPEG
		loader if !GSL_HAVE_LIBMAD.

	Fri Apr  5 06:45:29 2002  Tim Janik  <timj@gtk.org>

		* gsldatahandle-mad.[hc]: libmad based mp3 datahandle implementation.

		* gslloader-mad.c: gsldatahandle-mad.[hc] based mp3 loader.

		* gslcommon.[hc]: introduce new debugging mechanism and rework
		GSL messages.

		* gslop*.[hc], gslengine.[hc]: fixup old debugging code.

		* gsldatautils.[hc]: new function gsl_data_find_block().

		* bsesnet.[hc], bsesnet.proc:
		got rid of BSE_SNET_FLAG_FINAL. introduced BSE_SNET_FLAG_USER_SYNTH
		to indicate user editable synthesis networks.
		disallow procedures to modify a synthesis network unless
		BSE_SNET_FLAG_USER_SYNTH or BSE_DVL_EXT are set.

	Thu Apr  4 23:02:54 2002  Tim Janik  <timj@gtk.org>

		* bseinport.[hc], bseoutport.[hc]:
		* bsesubsynth.[hc], bsemidikeyboard.[hc]: use the new BseSNet port API.

		* bsemain.c (bse_init): initialize random numbers properly.

		* bsemidievent.c: add debugging for note on/off events.

		* bsesnet.[hc]: rewrote port handling, changed API.
		provide bse_snet_create_context() to create contexts with an ID provided
		by the snet. added simple ID allocation algorithm to reuse freed IDs.

		* bsesongthread.c: some cleanups.

		* bsesource.[hcp]*: allow only one i/o module for all i/o channels now.
		add more jstream support (still not complete though).
		API cleanups and simplifications.
		redid context management code so context IDs are freely assignable by
		synthesis networks.
		(bse_source_set_context_omodule): allow resetting the module to NULL.
		(bse_source_set_context_imodule): allow resetting the module to NULL.

		* bseinport.c:
		* bseoutport.c:
		* bsesubsynth.c: fix port name changes during playback.

		* gbsearcharray.h: new file from/for GLib with binary searchable array
		implementation.

	Sun Mar 31 19:44:44 2002  Tim Janik  <timj@gtk.org>

		* bseitem.c (bse_item_uncross): new function to remove a cross reference
		by invoking the cross notifier.

	Sat Mar 30 05:57:45 2002  Tim Janik  <timj@gtk.org>

		* bsepart.[hc], bsepart.proc: new song related object which stores a
		list of notes to play.

		* bsestandardosc.[hc]: moved and renamed plugins/bsesimpleosc.[hc]
		to BseStandardOsc since BSE needs a default oscillator.

		* bsestandardsynths.[hc]: new file, adding functions that construct
		standard synthesis components for songs.

		* bsesong.proc: provide procedures to create/delete child components.

		* bseglobals.[hc], bsegconfig.[hc]: remove outdated definitions.

		* bseinstrument.[hc]: some cleanups. provide synthesis networks
		for song to play.

		* bseitem.proc: added procedure to retrieve an item's sequential ID.

		* bsemain.c: define _XOPEN_SOURCE 600 only if
		GSL_HAVE_MUTEXATTR_SETTYPE is > 0, since this seems to break random
		stuff on some systems.

		* bsepattern.c: remove old defines, soon to be deprecated.

		* bseserver.proc: fix loader lookup, provide procedures to
		examine notes.

		* bsesong.[hc]: add support for BsePart.

		* bsesongthread.[hc]: start supporting BsePart.

		* bseutils.c: some cleanups.

		* bswcommon.[hc]: added uspport for iterators over boxed types.
		added boxed types BswPartNote and BswNoteDescription.

		* gslcommon.c: made gsl_alloc_report() more elaborate.
		(gsl_thread_new): do _not_ create joinable threads.
		initialize _gsl_init_loader_mad().

		* gslloader.[hc]: changed GslLoader, so we support lists of
		file extensions, file magics and mime types.

		* gslloader-wav.c:
		* gslloader-oggvorbis.c:
		* gslloader-gslwave.c: prefix function names with loader
		name. adapt code to GslLoader changes.

		* gslloader-wav.c: add "audio/wav" mime type, fix file magic to
		demand PCM format.

		* gslmagic.[hc]:
		(magic_parse_test): off-by-one error in string tests.
		(magic_parse_type): fix *short data size. disable "size" type. fix
		errors for mask handling.
		(magic_create): improve warnings.
		(magic_read_data): fix *short byte swapping.

		* bsemagictest.c: some minor improvements.

	Tue Mar 26 12:22:12 2002  Tim Janik  <timj@gtk.org>

		* removed unneeded files: bsechunk.[hc], bsehunkmixer.[hc],
		bsebuffermixer.[hc] and bsecapture.[hc].

		* bseobject.[hc]:
		(bse_object_class_add_signal):
		(bse_proxy_marshaller_lookup): mandate specification of a BswProxy
		marshaller besides the normal marshaller when introducing signals.
		provide lookup facility to retrieve the proxy marshaller of a signal.

		* *.c: changed class_init() function which introduce signals to provide
		a proxy marshaller.

	Thu Mar 21 08:36:55 2002  Tim Janik  <timj@gtk.org>

		* gslmakefile.inc: sort things out, document interfacing, generate
		gslconfig.h from configure.in checks. provide install hook for GSL
		headers.

		* Makefile.am: adapt to changes in gslmakefile.inc.
		install gsl headers correctly.

		* bsemain.c: define _XOPEN_SOURCE to 600 to make use of Unix98
		pthread API. provide a pthread function vtable for GSL upon
		GSL init if we have pthread available.

		* gslcommon.[hc]: together with stefan, fix alignment problems in the
		memblock caching allocator which lead to segfaults on solaris.

		* gslcommon.[hc]: slim down the implementations for mutexes, recursive
		mutexes and conditions. allow pluggable thread function table for these
		constructs which allow direct use of pthread functions if they are
		available. fixed up condition initialization and timed wait
		implementation.

		* gsldatacache.c: fix GslCond usage.

		* gslglib.c:
		* gsldefs.h: cleanups, use gslconfig.h values.

		* gslengine.h, gslopmaster.c: fix assignment of const structure fields.

		* gsloputil.c: together with stefan, fix and majorly improve the
		constant value block cache algorithm. fix GslCond usage.

	Sun Mar 10 10:08:32 2002  Tim Janik  <timj@gtk.org>

		* bseeditablesample.[hc], bseeditablesample.proc: new object
		exporting the necesary interface to edit samples, i.e.
		GslWaveChunks. (or at least, it'll soon gain interface additions
		towards this end).

		* bseitem.[hc]: export bse_item_use() for non-item procedures.

		* bseplugin.[hc]: fix type registration order, so newly introduced
		procedures can use newly introduced objects.

		* bseserver.proc: supply a procedure to check for loader matches.

		* bsewave.proc: added procedure to retrieve a BseEditableSample.

		* bswcommon.[hc]: made BseIcon into a BswIcon structure, so this
		can be shared and exported through the wrapper code.
		introduced BswValueBlock, which is basically a ref-counted array
		of floats.

		* gsldatacache.[hc]: support checking for presence of nodes without
		affecting the number of queued nodes (schrooedingers katze ;)
		fix dhandle naming.

		* fix BseIcon vs. BswIcon.

	Wed Feb 13 18:12:16 2002  Tim Janik  <timj@gtk.org>

		* gsltests.c:
		* gslfilter.c: applied patch from stefan with bug fixes and doc
		additions.

	Wed Feb 13 17:32:45 2002  Tim Janik  <timj@gtk.org>

		* bsecontainer.proc: add list-items() procedure.

		* bsecontainer.[hc]:
		* bseitem.[hc]:
		* bseproject.[hc]:
		fix functions returning lists of values.

		* bseproject.proc: added procedures for item handling via
		uloc paths.

		* bseitem.proc: bug fixes. provide get-uloc-path().

		* bsedatapocket.c: omit extraneous changed notification from
		_bse_data_pocket_entry_set().

		* bsedatapocket.proc: bug fixes.

		* bsestorage.[hc]: export scanner convenience macros.

		* gslloader-wav.c:
		* bsewave.c: disable debugging output.

	Tue Feb 12 06:42:33 2002  Tim Janik  <timj@gtk.org>

		* bswcommon.[hc] bswprivate.h: provide low-level glue code at the
		BSE layer, to reduce wrapping complexity.
		implement BswVIter, a value iterator which is used to return
		lists of values from procedures.

		* bsedatapocket.c:
		(bse_data_pocket_do_store_private):
		(bse_data_pocket_do_restore_private): implement storage and parsing
		abilities.

	Tue Feb 12 06:40:09 2002  Tim Janik  <timj@gtk.org>

		* bseproject.c (bse_project_find_item): fix bad uninitialized variable.

	Mon Feb 11 22:31:37 2002  Tim Janik  <timj@gtk.org>

		* gsltests.c (main): applied changes from stefan to support filter
		function scans.
		changed file test to use gsl function.

		* gslloader-wav.c: remove junk code.

		* gslglib.[hc]: more compat stuff from stefan.

		* gslfilter.[hc] (gsl_filter_sine_scan): added filter scanning
		function from stefan.

	Mon Feb 11 18:20:57 2002  Tim Janik  <timj@gtk.org>

		* bseitem.proc: add common-ancestor() procedure.

		* bseobject.[hc]: add bse_object_class_set_param_log_scale() to set
		logarithmic scale parameters for a proeprty.

		* bseparam.[hc] (bse_param_spec_set_log_scale): support logarithmic
		parameters on property scales. add bse_param_spec_get_log_scale()
		for read-out.

		* bseproject.[hc]: remove useless bse_project_add/remove_super()
		functions.
		support ordinary items (non-supers) as children of a project.
		add new function bse_project_find_item().

		* bseproject.proc: ad procedure get-data-pocket() to retrieve a
		named data pocket object from a project.

		* bsequery.c: minor improvement to procedure doc generation.

		* bsetype.h: flags cleanup.

		* gslcommon.[hc]: support gsl_thread_self() for the main thread
		in a way that's also suitable for aRts.

		* gsldatautils.c: fix peekbuffer fill size.

		* gsldatautils.c: minor speed improvement for tailmatch_score_loop().

		* gslfilter.c: fox band pass/stop filter scaling, so that b[0]==1.0.

		* gslfilter.[hc]: implement filter evaluation routine for first direct
		canonical form.

		* gslieee754.h: use static inline instead of extern inline in the GCC
		case, so this works with --finstrument-functions.

		* gslloader-gslwave.c: correctly handle relative chunk file paths.

		* gslloader-wav.c: fix gcc-ism.

		* gslloader.h: make loop_start/end GslLongs.

		* gslmath.c: up the default %f precision in stringifaction.

		* gsltests.c: support multiple file names for the wave-scan command.

		* gslwavechunk.[hc]: add strngification functions for GslWaveLoopType.

		* gslwaveosc.h: fix FIXMEs.

		* bsecontainer.c (uncross_ref): important fix to only invoke
		uncross notifier when uncrossing, not when unreffing the cross
		ref.

		* bsedatapocket.[hc] bsedatapocket.proc: new object to hold view
		specific, generic data. currently lacks storage ability.

	Wed Feb  6 04:52:37 2002  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_parse_param_value): allow floats when
		parsing int/uint, to ease backwards compatibility.

	Wed Feb  6 04:38:01 2002  Tim Janik  <timj@gtk.org>

		* gslfilter.[hc]: added gsl_iir_filter_eval() plus _change and
		_setup variants to calculate IIR filters (second canonical
		direct form).

		* gslmakefile: fix tschebyscheff type II steepness in the
		gsltestoutput rule.

	Tue Feb  5 04:32:04 2002  Tim Janik  <timj@gtk.org>

		* remove bsesample.[hc] from the tree as it's hopelessly
		outdated and has been superceeded by BseWave.

		* removed bsevoice.[hc], though songs don't work yet, they
		don't use BseVoice anymore.

		* added BseSequence, a new property type (boxed) containing
		sequences of notes.

		* bsesong.c: fix auto activation property.

		* gslopmaster.c: eeek, added a FIXME about not freeing flow
		jobs when discarding modules.

	Sun Feb  3 23:01:45 2002  Tim Janik  <timj@gtk.org>

		* bseitem.[hc]:
		* bseprocedure.[hc]: support procedures up to BseObject.

		* bseobject.proc: new file to implement BseObject+is_a().

		* *.c:
		* bseobject.[hc]: changed object->name to object->uloc, a non
		user-editable propety which is a unique identifier for the
		objects whithin its container. added a simple string property
		object::name that has no uniquenes or character constrains
		anymore.

		* bsecontainer.[hc]: nuke item_seqid() and get_item() methods,
		we solve this once and for all here and don't need special casing
		in derived objects anymore.
		sequential ids are now handed out per exact type of a child in
		a container.

	Sat Feb  2 12:22:11 2002  Tim Janik  <timj@gtk.org>

		* bseproject.[hc]:
		(bse_project_store_bse): add argument on whether to save wave
		files per reference or inlined.
		BseProject+store-bse: provide a procedure to actually store
		a project.

		* bsestorage.h: added a flag and macro BSE_STORAGE_SELF_CONTAINED()
		to indicate that objects shouldn't store references.
		* bsestorage.c: convert sample data via gsl_conv_from_float_clip().

		* bsewave.c: fix up the raminings of deciding between inlined storage
		or file references, works with BSE_STORAGE_SELF_CONTAINED() now.

	Sat Feb  2 11:22:10 2002  Tim Janik  <timj@gtk.org>

		* bsemididevice-null.[hc]: new NULL midi device. basically allowes
		beast to operate with PCM without the need for /dev/midi.

	Sat Feb  2 09:21:39 2002  Tim Janik  <timj@gtk.org>

		* gslcommon.[hc] (gsl_check_file): new function for elaborate
		error messages.

		* gsldatautils.[hc] (gsl_data_handle_dump_wav): dump a data handle
		as .wav file.
		const fixes for gsl_conv_*().

		* bsepcmdevice-oss.c (oss_device_write): use
		gsl_conv_from_float_clip() to improve accuracy and speed.

		* gsldatahandle.h: add hooks for linear read data handles,
		provide GSL_DATA_HANDLE_READ_LINEAR() to identify them and
		introduce GslDataHandleFuncs.coarse_seek() to reposition
		such handles.

		* gsldatahandle-vorbis.[hc]: Ogg/Vorbis data handle. using this
		with dcaches is suboptimal currently as dcaches warp back in pcm
		positions on block boundaries. so this should be used in conjunction
		with a linear-read-buffer handle only (which is of course not yet
		implemented ;).

		* gslloader-gslwave.c: GslLoader implementation for Ogg/Vorbis files.

		* gslopmaster.c (master_process_flow): assert that rounding mode is
		round-to-nearest, if this assertion is triggered, some software
		didn't cleanup after itself and should be fixed.

		* gsldatautils.c (gsl_data_handle_dump): clip values before saving,
		to avoid nasty value wraps.

		* gsldatautils.h: gsl_conv_from_{float|double}*() use gsl_ftoi()
		for the rounding now, which is more accurate and, at least on i386,
		slightly faster.

		* gslieee754.h: provide fpu rounding functions, most importantly
		gsl_ftoi() to round a float to interger in round-to-nearest mode.
		we also have gsl_fpu_setround()/gsl_fpu_restore() now, to force
		round-to-nearest mode, but that shouldn't be necessary as it's
		the default for ieee754 (and on i387).

	Fri Feb  1 02:43:38 2002  Tim Janik  <timj@gtk.org>

		* gslfilter.[hc]:
		* gslmath.[hc]: moved frequency/epsilon z/s plane transformations
		from gslmath.* to gslfilter.*.

		* gslfilter.[hc]: added gsl_filter_tscheb2_steepness_db() and
		gsl_filter_tscheb2_steepness() from stefan, which calculate the
		required steepness factor for gsl_filter_tscheb2_rp() and variants
		thereof.

	Fri Feb  1 02:11:07 2002  Tim Janik  <timj@gtk.org>

		* bseconstant.[hc]: support stamped flow jobs to set an output by
		frequency, value or note.

		* gslopmaster.c (master_handle_flow_jobs): implement rudimentary flow
		job handling.
		(master_process_locked_node): handle flow jobs, fix output buffer
		virtualization for partial calculations (this is SLOW, desperately
		needs fixing).
		fixed stupid mistake where flow jobs weren't sorted by their tick_stamps
		upon insertion.

		* gslengine.h (struct _GslOStream): removed zero_initialize:1 flag
		from ostreams as modules can easily memset(,0,) themselves and the
		engine just becomes slower by checking this.

		* bsesong.c (song_set_n_channels): grmm, initialize channel constants
		with 0.0 (not the default 1.0).

		* bsesongthread.c: major timing fixes.

		* bseserver.[hc]: removed API/implementation about a magic-matched
		loader procedures (loaders are plugged into GSL now).

		* bsewave.[hc] (bse_wave_load_wave): new function to load a defined
		set of chunks from a wave in a file, uses the GslLoader.

		* bsewave.proc (load-wave): simply use bse_wave_load_wave() and get
		rid of the GValueArrays passed in.

		* bsesource.[hc]: provide bse_source_flow_access_modules() to commit
		access flow jobs.
		removed unused bse_source_access_imodules() and
		bse_source_update_imodules() functions.

		* bseutils.[hc]: provide bse_darrays_match_freq() that operates
		on GDArray instead of value arrays.

		* gslcommon.h: define GSL_MAX_TICK_STAMP.

	Thu Jan 31 17:43:46 2002  Tim Janik  <timj@gtk.org>

		* bsepcminput.[hc]: new module, providing recording abilities,
		(still has latency issues though).

		* bsecapture.[hc]: disabled this (outdated) module, i.e. don't
		enter a category for it.

		* bsepcmoutput.[hc]: code fixes and cleanups.

		* bsepcmdevice-oss.c:
		* bsepcmdevice.[hc]: provide number of values read upon reading
		from a pcm handle.

		* bsepcmmodule.c: provide pcm input module.
		* bseserver.[hc]: use/support pcm input modules.

		* bsesong.[hc]: create left/right mixer.

		* bsesource.c: fix stupid bug that caused deletion of some
		source links to fail.

		* gslopmaster.c: consumer list handling fixes.

	Thu Jan 31 01:15:24 2002  Tim Janik  <timj@gtk.org>

		* gslloader-wav.c: deal gracefully with overlong headers.

		* bseconstant.c: fix variable names.

		* bsewave.[hcp]*: export n_channels.

	Tue Jan 29 15:16:51 2002  Tim Janik  <timj@gtk.org>

		* gslengine.[hc], gslopmaster.c: make consumer property a per module
		property, changable via gsl_job_set_consumer().

		* *.c: changed modules accordingly to set consumership where
		necessary.

		* bsesubsynth.[hc]: make number of input/output channels compile time
		configurable.

		* bsesong.[hc]: more work on the required synthesis network.

		* *.[hc]: s/BSE_ITEM_NEVER_STORE/BSE_ITEM_STORAGE_IGNORE/.

	Fri Jan 25 07:13:25 2002  Tim Janik  <timj@gtk.org>

		* bseconstant.[hc]: moved this from ../plugins/ to here, since
		we refer to it from the core. changed module to deal with multiple
		outputs.

	Thu Jan 24 11:04:41 2002  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]: added more source conneciton errors, removed
		unneeded errors.

		* bsesource.[hc]: add joint (multi-connect) input channels.
		this still needs implementing on the engine side, i.e.
		jchannel->jstream, but the BSE side of things should be fully
		intact.

		* bsesource.proc: added a couple more procedures to let
		callers deal with ichannels and jchannels correctly.

	Thu Jan 24 05:59:45 2002  Tim Janik  <timj@gtk.org>

		* gsl*.*: applied a good bunch of build fixes, and gcc-ism fixes
		and aRts special casing patches from stefan.

		* gsltests.c: feature fir aproximation, this still needs fixing though.

	Thu Jan 24 01:13:47 2002  Tim Janik  <timj@gtk.org>

		* mkcproc.pl: output #line directives after stripping a comment.

		* gslwchunk.c: don't implement your own data handle. reduce
		stack size usage so this works in threading mode as well.
		fix ping-pong loop specification.

		* gslwavechunk.c: fix ping-pong loop assertions.

		* gsltests.c: use new loader API for wave file scan.

		* gslmagic.[hc]: new implementation of a magic(5) matcher,
		required by GslLoader. (formerly, this code was in bsemagic.[hc]).

		* gslloader.[hc]: new loader API implementation.
		(gslloader.c used to be a non-functional test program, removed
		that setup.)
		FIXME: should we fallback to other loaders after the first failed?
		FIXME: datahandle/dcache integration is somewhat suboptimal currently.

		* gsldefs.h: moved GslErrorType enum to here, added a couple
		of new structure prototypes.

		* gslglib.h: provide "GSL" log domain.

		* gsldatautils.c: fix gcc-isms.

		* gsldatahandle.[hc]: redid cache implementation, made it generic
		by supporting a hash structure filled in by data handle implementations
		to use as cache keys. provide public API cache entry points.
		fixed logic in data handle creation functions that could cause leaks
		under rare circumstances.
		provide gsl_wave_format_to_string() and gsl_wave_format_from_string(),
		formerly in gslwavedsc.[hc]).
		removed GslDataHandleLoader proposal API.
		FIXME: there needs to be decided how to handle mtime correctly.
		(gsl_wave_handle_new_cached): removed this as public API.
		(gsl_wave_handle_new): don't create a translation handle if not
		required.

		* gslcommon.[hc]: updated errors. provide gsl_byte_order_to_string()
		and gsl_byte_order_from_string() (formerly in gslwavedsc.[hc]).
		bootup .gslwave and .wav loaders.

		* bsewaverepo.proc: use new GslLoader API to load waves.

		* bsewaverepo.c: strip junk.

		* bsewave.proc: use new GslLoader API to load waves.
		renamed gslwave-loader to load-wave.

		* bsewave.c: use new load-wave procedure.

		* bseserver.[hc]: use GSL magics now.

		* bsemagictest.c: use GSL magics now, loader adaptions.

		* bseinfo.c: silence compiler.

		* bseenums.[hc]: merged GSL errors into BSE errors.

		* bsecategories.c: support new /Modules/ toplevel category.

		* bsemagic.[hc]: files removed.

		* gslwavedsc.[hc]: nuked files.

		* gslloader-wav.c: new file, implementing a RIFF/WAVE file loader.

		* gslloader-gslwave.c: new file, implementing a .gslwave file loader,
		most code migrated from gslwavedsc.[hc].

		* gslwave.header: updated this to reflect syntax changes, mainly, for
		raw sample chunks, byte_order, format and n_channels have to be the
		same for all chunks.

		* gslwaveosc-aux.c: don't abort on non-mono dirstrides. the oscillator
		still needs fixing to let the user specify the channel to use for
		playback.

	Tue Jan 15 17:27:02 2002  Tim Janik  <timj@gtk.org>

		* bsecontainer.c (forall_prepare): ignore already prepared
		children.

		* bseparam.h: grr, gimme bse_param_spec_boolean().

		* bseproject.c (bse_project_prepare): give preparation precedence
		to BseWaveRepos, so synth modules can fetch their wave index
		from BseWave in BseSource.prepare().

		* gslfilter.[hc]: added gsl_filter_fir_approx() from stefan, which
		approximates an FIR filter from a frequency transfer function, given
		in freely-spaced transfer function samples.
		get rid of GSL_SIGNAL_EPSILON and GSL_SIGNAL_KAPPA.

		* gslmath.h: provide GSL_LN2.

		* gslopmaster.c: added debugging/trace facility to catch the slowest
		module in the current schedule.

		* gslsignal.[hc]: new file to aid signal processing. provides macros
		to test for signal edges and changes. also provides gsl_signal_exp2(),
		a fast but limited approximation of exp2f().

		* gslwaveosc*.[hc]: seperated wave oscillator code out of
		plugins/bsewaveosc.c into independantly callable functions. fixed up
		the code somewhat and added modulation.
		this is still missing an LP->LP transformation function in gslfilter.h
		to adjust the filter during modulation.

	Sat Jan 12 11:22:18 2002  Tim Janik  <timj@gtk.org>

		* bseinstrument.[hc]: get rid of old sample and synth inputs. support
		BseWave now. removed a bunch of old/dead code.

		* bsesong.[hc]: create partial (non-savable) synthesis modules to
		play a song now.

		* gslfilter.[hc]: do gsl_trans_zepsilon2ss() in the public filter
		functions automatically, so users are to pass epsilon in z-space
		now, as they are to pass frequencies in z-space already.
		commented out an assertion that triggers an internal compiler error
		(bug reported to gcc-bugs).
		adjusted steepness argument for tschebyscheff type II filters, so
		it's a real factor, based on the first frequency given.

	Fri Jan 11 06:17:23 2002  Tim Janik  <timj@gtk.org>

		* bsecontainer.h: provide object flags user shift macro.

		* *.c: reset TypeInfo prealloc configurations.

		* bseinstrument.c: tiny cleanup.

		* bsemain.[hc]: provide sequencer mutex.

		* bsepattern.c: insert sequencer locks as apropriate.

		* bsepatterngroup.c: same here.

		* bsepcmoutput.c: doh, fix off-by-one buffer access.

		* bsesnet.[hc]: change code to allow derivation.

		* bsesong.[hc]: derive from BseSNet. protect portions
		by sequencer lock. spwan sequencer thread upon playback.

		* bsesource.c: fix parser warning about failing connections.

		* bsestorage.c: fix off-by-one string access.

		* bsesuper.h: provide object flag user shift macro.

		* gsl-mplan.txt: updates, mention flow jobs.

		* gslcommon.[hc]: fix gsl_delete_struct/gsl_delete_structs.
		(gsl_ring_find): nw function to find data in a ring.
		(gsl_thread_new): return a thread handle.
		(gsl_thread_self): same here.
		(gsl_thread_sleep): sleep until timeout expires or woken up.
		(gsl_thread_aborted): should the thread abort?
		(gsl_thread_queue_abort): queue abort event on a thread.
		(gsl_thread_abort): abort a thread and wait until it finished.
		(gsl_thread_wakeup): wake up a sleeping thread.
		(gsl_thread_awake_after): queue wakeup of self after a certain
		tick_stamp.
		(gsl_thread_awake_before): queue wakeup of self before a certain
		tick_stamp.
		(gsl_thread_get_pollfd): retrieve wakeup pollfd for self.
		(gsl_tick_stamp): return current tick stamp counter.
		(GSL_TICK_STAMP): get current tick stamp counter without
		lock protection (should be used within GModule only).

		* *.c: gsl_delete_struct*() adaptions.

		* gsldefs.h: provide GslThread handle.
		(if_reject): if() statement that is unlikely to succeede.
		(if_expect): if() statement that is likely to succeede.

		* gslengine.c: fix stream buffer allocations.
		doc fixes. added proper tick_stamp support.
		(gsl_flow_job_access): queue a time stamped flow job on
		a module to access module data.
		(gsl_flow_job_suspend): queue a time stamped flow job on
		a module to suspend it.
		(gsl_flow_job_resume): queue a time stamped flow job on
		a module to resume it.

		* gslopnode.h: buncha renaming and fields order changing.
		added flow jobs.

		* gslopmaster.c: removed master node list code. handle
		flow jobs. misc fixes. changed wakeup mechanism.
		walk unscheduled nodes with flow jobs at the end of dispatching.

		* gslopschedule.c: care of keping master node list sorted. dump
		schedule for debugging once it changed.

		* gsloputil.[hc]: plugged memleak. removed gross over-allocation
		of buffers. handle flow job trash queue. added function for
		master node list maintenance: _gsl_mnl_remove(), _gsl_mnl_integrate()
		and _gsl_mnl_reorder(). the list is partially sorted now.
		(gsl_engine_garbage_collect): do proper trash collection from
		user thread. removed old wakeup code.

		* gslfilter.h: added GSL_SIGNAL_EPSILON and GSL_SIGNAL_KAPPA
		to compare valid signals against.

		* gslmath.[hc]: make gsl_bit_depth_epsilon() return doubles.

	Thu Dec 20 06:40:04 2001  Tim Janik  <timj@gtk.org>

		* gslmath.[hc]: include gslieee754.h.
		(gsl_bit_depth_epsilon): grumble, make this return doubles.

		* gslieee754.h: new file, containing all the necessary bits to provide
		and check for inf/nan, normal and subnormal numbers on ieee754 floats
		and doubles.

	Fri Dec 14 08:49:49 2001  Tim Janik  <timj@gtk.org>

		* bsemididevice-oss.c: use BseServer IO watch to monitor device.
		this should have its own thread some day, but for now a high
		prioritized main loop source is pretty fine already.

		* bsepcmdevice.[hc]: support setting watermarks on pcm handles.

		* bsepcmdevice-oss.c: fix up to PCM changes.

		* bsepcmmodule.c: yay, fixup poll function, finally! supports
		watermark now.

		* bseserver.[hc]: added pcm_latency property. implemented io watch
		handlers through a main loop source for now, should be a thread
		someday.

	Fri Dec 14 04:09:52 2001  Tim Janik  <timj@gtk.org>

		* gslengine.c (gsl_engine_prepare): fix loop filling for the
		threaded case, we don't need to be processed at all, so return
		a timeout of -1.

	Wed Dec 12 04:44:08 2001  Tim Janik  <timj@gtk.org>

		* fft.h: added tentative float convenience wrapers.

		* gslwavedsc.[hc]: added stringification and parsing functions for
		byte order and wave format.

		* gslcommon.[hc]: added gsl_ring_length(), gsl_ring_nth(),
		and gsl_ring_nth_data(), fixed other gsl_ring_* functions.

		* gsldatautils.h: add double conversion variants gsl_conv_from_double,
		gsl_conv_from_double_clip and gsl_conv_to_double.

	Tue Dec 11 01:17:43 2001  Tim Janik  <timj@gtk.org>

		* gsldatautils.[hc]: new files containing general sample data/
		data handle utility functions, some of these functions are
		based on code from Stefan Westerfeld.
		(gsl_data_detect_signal): detects signal start and end position within
		a data handle.
		(gsl_data_find_sample): find sample values or ranges thereof within
		a data handle.
		(gsl_data_find_tailmatch): determine loop points to aproximate a data
		handle's tail.
		(gsl_data_handle_dump): write out data handle contents to a file
		descriptor.
		(gsl_data_handle_peek_value): function to read a single sample out of a
		data handle. needs temporary peekbuffer variable to perform block-wise
		reads behind the scenes.

		* gsllooper.[hc]: removed these files.

		* gsldatahandle.h: added wave format loader hook proposal.

	Tue Dec 11 00:52:02 2001  Tim Janik  <timj@gtk.org>

		* FFT mania:

		* gsl-fftgen.pl: perl script to generate speed-optimized fft
		calculating routines.

		* gsl-fftconf.sh: configuration file to invoke gsl-fftgen.pl,
		and to provide public FFT routine frontends.

		* gslfft.h: publically exported FFT function header file.
		* gslfft.c: autogenerated FFT calculation code.

		* gslffttest.c: test code for FFT accuracy.

	Mon Dec 10 23:01:44 2001  Tim Janik  <timj@gtk.org>

		* changes done together with Stefan Westerfeld.

		* gslmath.[hc]:
		(gsl_complex_reciprocal): new function to compute the reciprocal
		value of a complex number.
		(gsl_complex_id): new function, returning the passed in complex number.
		(gsl_poly_mul): function changed and fixed to deal with variable length
		polynomials and work in place.
		(gsl_cpoly_mul): complex variant of gsl_poly_mul().
		(gsl_float_sign): extract sign of a float or double.

		* gslfilter.[hc]: scratched old filter variants.
		(gsl_filter_butter_rp):
		(gsl_filter_tscheb1_rp):
		(gsl_filter_tscheb2_rp): new functions to compute roots and poles for
		butterworth, and the both tschebyscheff types filters.
		(gsl_filter_butter_lp):
		(gsl_filter_tscheb1_lp):
		(gsl_filter_tscheb2_lp): added lowpass filter functions.
		(gsl_filter_butter_hp):
		(gsl_filter_tscheb1_hp):
		(gsl_filter_tscheb2_hp): added highpass filter functions.
		(gsl_filter_butter_bp):
		(gsl_filter_tscheb1_bp):
		(gsl_filter_tscheb2_bp): added bandpass filter functions.
		(gsl_filter_butter_bs):
		(gsl_filter_tscheb1_bs):
		(gsl_filter_tscheb2_bs): added bandstop filter functions.

		* gsltests.c: support new filter types.

	Mon Nov 26 10:04:42 2001  Tim Janik  <timj@gtk.org>

		* bsecontainer.c: fix things to not cast GType into UINT.
		* bseobject.c:
		* bseserver.c:
		* bseproject.c: same here.

	Mon Nov 26 05:08:50 2001  Tim Janik  <timj@gtk.org>

		* gsldatahandle.[hc] (gsl_data_handle_new_insert):  implemented new
		handle for insertion of a small fixed value block.

		* gslmath.[hc] (gsl_bit_depth_epsilon): new function for epsilons at
		certain bit depths.

	Sun Nov 25 23:47:16 2001  Tim Janik  <timj@gtk.org>

		* gsl*.[hc]: applied patch from stefan to use g_newa() instead
		of g_alloca() and fix other minor portability issues.

	Sun Nov 25 23:36:57 2001  Tim Janik  <timj@gtk.org>

		* bsetype.h: fix fundamental type IDs accoring to recent
		glib changes.

	Wed Nov 14 10:37:24 2001  Tim Janik  <timj@gtk.org>

		* gslcommon.[hc]: add more error types.

		* gslconvert.[hc]: preliminary UTF8 conversion.

	Wed Nov 14 08:36:41 2001  Tim Janik  <timj@gtk.org>

		* gsl*.[hc]: applied heavily modified patch from stefan to make
		things more portable and get rid of various GCC-isms.

	Wed Nov 14 03:37:14 2001  Tim Janik  <timj@gtk.org>

		* bsequery.c (show_procdoc): s/param_get/param_spec_get/.

	Tue Nov 13 01:44:01 2001  Tim Janik  <timj@gtk.org>

		* gsllooper.[hc]: minor fixes.

	Mon Oct 29 22:45:37 2001  Tim Janik  <timj@gtk.org>

		* gsldatahandle.h: provide GSL_DATA_HANDLE_OPENED() to
		check whether a handle is open.
		added bit_depth member to GslDataHandle, so the information
		about the number of significant bits doesn't get lost by using
		floats.

		* gsldatahandle.c: implement reversed data handle.
		gsl_data_handle_open(): return errno instead of GslErrorType
		(so code portions that want to, can produce more elaborate
		messages).
		(gsl_data_handle_read): fixed a bug with boundary alignment.
		(gsl_data_handle_common_init): added bit_Depth argument, so
		an apropriate format can be choosen at save time.

		* gsldefs.h: nuke GSL_BYTE_ORDER, we have G_BYTE_ORDER even
		in the glib-compat code.

		* gsllooper.[hc]: renamed gsl_loop_find_tailmatch to
		gsl_data_find_tailmatch() should probably have a gsldata.[hc]
		file for this.
		added gsl_data_find_sample() to search for a certain sample
		in a GslDataHandle.
		provide gsl_data_peek_value() which is a macro to be used to
		extract single data samples from a GslDataHandle (it needs a
		user supplied stack buffer GslDataPeekBuffer which needs to be
		0-initialized). this avoids wiritng custom buffering code
		over and over when looping over a data handle's values.

		* gslwave.header: provide a sample for how gslwave headers
		are structured.

		* gsltests.c: add midi2freq function.

	Mon Oct 29 22:40:52 2001  Tim Janik  <timj@gtk.org>

		* gslcommon.c (gsl_init): don't crash on NULL options.

	Sat Oct  6 14:27:39 2001  Tim Janik  <timj@gtk.org>

		* gslglibhash.cc: new GHashTable implementation in c++ from
		stefan, that doesn't use SGI specific classes.

		* gslglibhashtest.cc (main): new file from stefan to test hashtable.

		* bseitem.proc: add procedure to retrieve type blurb of an item.

	Thu Sep 27 13:10:43 2001  Tim Janik  <timj@gtk.org>

		* MANY fixes, new APIs and cleanups.

		* we're now using GSL, a common sound stuff backend for, at this
		point, at least aRts and BSE. GSL comes with an abstraction to
		sound file handles, file caches (that're designed for asyncronous
		prereading), wavechunk looping, multi-sample waves and a flow
		module operation engine. there're little docs on this yet, however
		for the engine, the public guts are in engine.h and gsl-mplan.txt
		gives a conceptual overview of the engine.
		the core rationale for GSL is code sharing between BSE and aRts
		to reduce required effords by both projects, and for the engine
		specifically, the need to process modules of huge networks and
		cycles tehreof, asyncronously and efficiently with full support
		for multi processor systems.

		* rough summary:
		- we're using GSL now for data file caching, format conversion
		  and similar things and filter calculation.
		- we're just having GObject and GLib as BSE dependancy again,
		  as the GObject move is completed now and remains of blib got
		  backmerged into BSE.
		- we're using the GSL engine at the core now. most things work
		  again or better, except for songs. songs have to be implemented
		  a whole lot differently using engine concepts, the exact outcome
		  of this is not yet clear.
		- a basic midi backend is supplied now
		- BSE objects now just generally serve as templates for GSL module
		  networks to be created. this allowes for the same synthesis network
		  object to be plugged into different contexts and be realized
		  multiple times.
		- instead of BseSample, samples are now gotten from BseWaveRepo
		  and BseWave now, which deals with samples, multi-samples and
		  collection thereof via GSL.

	Sun Nov  5 02:30:38 2000  Tim Janik  <timj@gtk.org>

		* Makefile.am: parallel build fix, bseenum_arrays.c wouldn't get
		initially created.

		* mktypes.pl: include perl script name when dieing. to figure parent
		types, just match /_type_register_static/ so we catch bse_ and g_.

	Sun Jul 23 02:57:16 2000  Tim Janik  <timj@gtk.org>

		* bsesongsequencer.c (bse_song_sequencer_step_row): seperated code for
		row stepping, we do the checking of the bse_effect_jump_sequencer()
		return values on the fly now.

		* bseeffect.c (bse_effect_jump_sequencer): don't return a boolean value
		on whether the arguments changed.

	Mon May 29 02:37:01 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.c: save and load effect list with notes.

		* bseeffect.[ch]: object framework cleanup, we really just derive from
	        BseObject and that's it. provide class methods for effect settings.
		scratched the BseEffectType idea, we use real methods instead of
		hardcoded object type special casing in sequencer and front ends.

		* bseeffectfinetune.c:
		* bseeffectpatternbreak.c:
		* bseeffectbalance.c:
		* bseeffectnotevolume.c: completed effect implementation.

		* bseeffectpatternjump.c:
		* bseeffectvolumedelta.c: unimplemented, still on hold.

		* bsevoice.[hc]: fine_tune bug squeezed (API cleanup), support arbitrary
		effect settings.

		* bsesongsequencer.c (bse_song_mixer_activate_voice): inserted effect
		hooks for sequencer stepping and initial voice setup.

	Sat May 27 16:16:01 2000  Tim Janik  <timj@gtk.org>

		* bsevoice.c (bse_voice_make_poly_and_renew): simply reset voices that
		haven't started playing yet.

		* mkenums.pl (parse_entries): urg, don't hang on multi line comments,
		but read them up.

	Fri May 26 07:58:14 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.[hc]: provide effect management functions:
		(bse_pattern_note_get_n_effects): number if effects on note.
		(bse_pattern_note_get_effect): get effect by index.
		(bse_pattern_note_find_effect): get effect by type.
		(bse_pattern_note_actuate_effect): install effect type.
		(bse_pattern_note_drop_effect): drop effect type.

		* bsecategories.c (category_strip_toplevels): handle /Effect toplevel
		categories.

		* bse.h: only export the BseEffect basis type to the rest of the world.

	Thu May 25 02:56:18 2000  Tim Janik  <timj@gtk.org>

		* bsebuffermixer.[hc]:
		* bsebuffermixercore.c: mixer function cleanup, implemented cubic
		interpolation.

	Wed May 24 06:40:11 2000  Tim Janik  <timj@gtk.org>

		* bsebuffermixercore.c: squeezed half_step thinko in linear
		interpolation. optimized linear interpolation by trading a
		multiplication for a bitshift.

		* bsevoice.c (bse_voice_set_note): set BseMixSource's block_padding
		field from the munk's bin_data object.

		* bsebuffermixer.[hc] (struct _BseMixVolume): added block_padding field,
		since certain interpolation can only be run with sufficient start and
		end padding on the sample data.

		* bsestorage.c (bse_storage_create_rblock): set bin data padding on
		newly created bin_data objects to BSE_DFL_BIN_DATA_PADDING.

		* bsebindata.[hc]: support zero padding at start and end of data block
		by a certain amount of bytes.
		(bse_bin_data_set_byte_padding): set padding if no data was
		allocated yet.

	Tue May 23 18:17:24 2000  Tim Janik  <timj@gtk.org>

		* bseenums.h (enum): new enum BseInterpolType.

		* bseinstrument.[hc]: made the interpoltion field an enum.

	Fri Apr 28 21:27:16 2000  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_add_notifier_i): list all valid characters in
		call to g_strcanon().

	Thu Apr 20 00:35:20 2000  Tim Janik  <timj@gtk.org>

		* bsecontainer.c (bse_container_do_remove_item): remove child source's
		input/output channels, regardless of the prepared state of the
		container.

	Thu Apr 13 01:11:22 2000  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_do_shutdown): assert no further ref_count
		increments.

	Tue Apr 11 04:02:47 2000  Tim Janik  <timj@gtk.org>

		* ported everything BSE over to the new GLib type system.

		* BseParam* got nuked.

		* *.[hc]: port over to use GValue instead of BseParam, use
		GParamSpec* and BParamSpec structures instead of BseParamSpec*
		and BseObjectParamSpec.
		pitfall: [bg]_param_spec_* () creation functions in general
		take minimum, maximum, default_value, stepping_rate now (swapped
		stepping_rate and default_value from the old bse_param_spec_*()
		functions).

		* *.[hc]: port objects over to GType and GObject, most objects
		perform their cleanups in BseObjectClass.destroy() now.
		finalize() got moved to GObject.
		shutdown() got moved to GObject and shouldn't normally be
		used by object implementations.
		BseObject is a derived type of GObject now.

		* bseobject.[hc]: apart from porting this over to GObject derivation,
		a bunch of its implementation vanished, such as parameter set/get
		facilities, reference counting and finalization.
		nuked old BseInterface cruft.

		* bseprocedure.[hc]: port over to GValue from BseParam, that means
		in/out values are now matched by position, and automated value
		conversion is performed where applicable.

		* bsestorage.[hc]: port over from BseParam to GValue. we still
		provide all means for loading and saving in this place, rather
		than implementing it as virtual functions in the ParamSpec
		classes. to switch() identify the non-fundamental param types,
		we now use BLib's B_SEQ_PARAM_* id facility.

		* bsetype.[hc]: nuked most of the rest of the file contents,
		all param types are now introduced and implemented in BLib.

		* miscellaneous related code cleanups.

	Mon Apr  3 17:05:32 2000  Tim Janik  <timj@gtk.org>

		* bsemagic.[hc]: file magic implementation to figure file types
		from contents. provides simple TRUE/FALSE match results, optimized
		for running multiple match types on a single file.

		* bseexports.h:
		* bseplugin.[hc]: started out on load/save handler plugin
		facilities.

		* bseplugin.h: provided one liner descriptions for the complex
		macro magic we use for loading plugins.

	Sun Apr  2 04:53:12 2000  Tim Janik  <timj@gtk.org>

		* Makefile.am: removed glib-* entries that went into blib.
		* glib-*.[hc]: files removed.

	Fri Apr 28 21:33:52 2000  Tim Janik  <timj@gtk.org>

		* glib-extra.h: more adaptions for GLib 1.3.1 compatibility.
		* glib-extra.c (g_strcanon): only allow characters passed as
		valid_chars.

		* glib-gparam.c (g_param_spec_internal):
		* glib-gparam.c (g_param_spec_hash_table_lookup): list all valid
		characters in call to g_strcanon().

	Mon Apr 17 20:45:50 2000  Tim Janik  <timj@gtk.org>

		* glib-gobject.c (g_object_base_class_finalize): oops, don't unset
		n_params prior to destructing them.

	Tue Apr 11 04:28:10 2000  Tim Janik  <timj@gtk.org>

		* fixed a coupole of bugs in the initial parameter/object
		implementations, after getting beast running on GObject and GValue.

		* btype.[hc]: miscellaneous B* type stuff, provide sequential
		is for B_TYPE_PARAM_* types, so code can switch() on them.

	Fri Apr  7 04:27:49 2000  Tim Janik  <timj@gtk.org>

		* glib-gobject.[hc]: completed parameter set/get implementations,
		along with asyncronous parameter changed notification queue.

	Mon Apr  2 02:07:55 2000  Tim Janik  <timj@gtk.org>

		* bparam.[hc]: BParamSpec implementations, some of them are just
		simple extensions of the GLib parameter specifications.

	Sun Apr  2 04:54:36 2000  Tim Janik  <timj@gtk.org>

		* glib-includes.h: mangle GLib extension files together.

		* glib-gobject.[hc]: GObject implementation, that is facilities
		for setting/getting quarked data and reference counting.

		* glib-gparamspecs.[hc]: first actuall parameter implementations
		for GLib, so far we have: char, uchar, bool, int, uint, long,
		ulong, enum, flags, float, double, string and object. each of these
		GParamSpecs is a new instantiatable type in its own respect,
		so the .c file derives 13 new types from G_TYPE_PARAM and
		defines over 50 (*2) conversion facilities.

		* glib-gvaluecollector.h: generic varargs handling stubs for
		GParamSpecs, private header file (does get installed for
		inclusion into user code though).

		* glib-gvalue.[hc]: GValue functionality implementation.

		* glib-gparam.[hc]: basis GParamSpec implementation for
		the virtual base type G_TYPE_PARAM.

	        * glib-genums.[hc]: enum/flags type implementation, based on
		bseenum.[hc].

		* glib-extra.[hc]: GLib additions, including 1.3 compatibility
		routines and various other functions, from string manipulation
		over list manipulation up to a unix signal GSource.

		* glib-gtype.[hc]: GLib Type System implementation, heavily
		based on BSE's dynamic type system.

	Tue Mar 28 14:39:38 2000  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_put_bin_data): corrected byte order
		bugs when saving.

		* bsebindata.c (bse_bin_data_set_values_from_fd): correct some
		byte order bugs. this object still needs some clean ups.
		(bse_bin_data_init_values): new function to pre-initialize the
		object with a specified number of 0 values.

	Tue Mar 28 05:38:07 2000  Tim Janik  <timj@gtk.org>

		* glib-gobject.[hc]: GObject implementation.

		* builtin_bsepattern.c: capitalize procedure categories.

	Sat Mar 25 10:31:40 2000  Tim Janik  <timj@gtk.org>

		* glib-genums.[hc]: new files, takling over most of the bseenum.[hc]
		functionality.

		* bsequery.c: quickly added facility to iterate over the
		fundamental types.

		* bseplugin.c (bse_plugin_register_types): register enums and flags
		types inline.

		* *.[hc]: port over to G_TYPE_ENUM and G_TYPE_FLAGS.

	Fri Mar 24 09:19:55 2000  Tim Janik  <timj@gtk.org>

		* bsetype.[hc]: ported the BSE type system over to use the GLib
		one, bsetype.c is now < 200 lines, hoehoe ;)

		* *.[hc]: port over from BSE to GLib type system.

	Fri Mar 24 06:00:07 2000  Tim Janik  <timj@gtk.org>

		* glib-gtype.[hc]: finished GLib Type System implementation, now
		on to the testing.

	Mon Mar 13 00:05:37 2000  Tim Janik  <timj@gtk.org>

		* bsesongsequencer.c (bse_song_sequencer_step): handle songs with
		empty playlists (pattern==NULL). we still simply loop the song
		at the end though...

		* bsepatterngroup.[hc] (bse_pattern_group_get_nth_pattern): new function
		to return pattern by play index.

		* bsesong.c (bse_song_get_pattern_from_list): implemented this in
		terms of fetching the current pattern to play from the pattern groups.

	Sun Mar 12 16:07:50 2000  Tim Janik  <timj@gtk.org>

		* bseinstrument.c (bse_instrument_class_init): disabled synthesis
		input facility.
		* bsesinstrument.c (BSE_BUILTIN_TYPE): don't register a category
		for this object yet.

	Fri Mar 10 22:48:33 2000  Tim Janik  <timj@gtk.org>

		* bsesong.c:
		* bsesnet.c:
		* bseheart.c:
		* bsesample.c:
		* bsepattern.c:
		* bseinstrument.c:
		* bsepatterngroup.c:
		* bseeffectfinetune.c:
		* bseeffectnotevolume.c:
		* bseeffectpatternjump.c:
		* bseeffectvolumedelta.c:
		* bseeffectpatternbreak.c:
		preallocation adjustments.

		* bseglobals.h (BSE_PREALLOC_N_SUPERS): added object preallocation
		defines so memory can be trimmed if desired.

		* bseutils.c (bse_icon_ref_static):
		s/bse_icon_static_ref/bse_icon_ref_static/ and changed callers.

		* TODO: cleanups.

	Wed Mar  8 14:57:50 2000  Tim Janik  <timj@gtk.org>

		* bsepatterngroup.c: implemented bse_pattern_group_store_private()
		and bse_pattern_group_restore_private() to store tha pattern list.

		* bsesong.c: implemented bse_song_restore_private(),
		bse_song_store_after() and bse_song_restore() to save and load
		the pattern group list.

		* bseobject.[hc]: semantic change, substituted store_termination()
		method with store_after(), so second stage saving can be used
		in the same way as store_private() (derived widgets can store
		stuff even after chaining the parent handler).
		(bse_object_store): after invoking store_after(), store
		the actual termination.

	Wed Mar  8 12:28:19 2000  Tim Janik  <timj@gtk.org>

		* bsesong.c (bse_song_remove_item): remove references to
		removed pattern from pattern groups.

	Mon Mar  6 23:47:46 2000  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added pattern group support:
		bse_song_get_default_pattern_group(),
		bse_song_insert_pattern_group_link(),
		bse_song_insert_pattern_group_copy() and
		bse_song_remove_pattern_group_entry().

		* bsepatterngroup.[hc]: new maintenance object to keep track of
		patterns, grouped together for arranger parts.

		* bseitem.[hc] (bse_item_queue_seqid_changed): made seqid_changed() an
		async notification.

	Tue Feb 22 07:28:03 2000  Tim Janik  <timj@gtk.org>

		* builtin_bsepattern.c: added Tools/Fill random procedure, formerly
		in fldbsepattern.c as a test procedure.

	Tue Feb 22 04:58:22 2000  Tim Janik  <timj@gtk.org>

		* bsebuffermixer.[hc]: new files, containing abstracted and optimized
		BseMixValue buffer mixing functions, based on the former song mixing
		core.
		* bsebuffermixercore.c: actuall mixer function implementation, compiled
		multiple times with different optimization setups.

		* bsehunkmixer.[hc]: removed BseMixValue related mixing functions,
		s/bse_hunk_clip_mix_buffer()/bse_hunk_clip_from_mix_buffer()/.

		* bsesongsequencer.c: moved a bunch of the former bsesongmixer.c
		fucntions here, cleaned code up a bit by using bse_mix_buffer_*()
		functions.
		temporarily disabled synth instruments.

		* bsevoice.[hc]: major cleanups and rewrites, use BseMix* type
		structures for certain value sets. some preparation for note effect
		support.

	Wed Feb  9 12:58:48 2000  Tim Janik  <timj@gtk.org>

		* bseparam.[hc]: major parameter cleanups, scratched the param_group,
		param_id and parent_type memebers so params are more appropriate for
		general use.

		* bseobject.[hc]: changed the way we store per-class parameter specs,
		so we can still suply a param_id and a param_group, and have the
		object_type for hash lookups.
		got rid of the IN_PARAM_CHANGED flag.
		we pass the param_id as a seperate argument to the classes
		get_param() and set_param() functions now.
		(bse_object_class_get_n_param_specs):
		(bse_object_class_get_param_spec): accessors for param specs.

		* *.c: changed all get_param() and set_param() functions accordingly.

	Wed Feb  9 03:17:18 2000  Tim Janik  <timj@gtk.org>

		* bseparam.c (param_exchange_lookup): a conversion rule for
		BSE_TYPE_PARAM_UINT <=> BSE_TYPE_PARAM_UINT was missing.
		optimized exchange function table lookups by returning
		param_exch_copy() right away for equal types.
		(bse_param_values_exchange): validate parameters after exchanging.

	Wed Feb  9 00:53:20 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.h (struct _BsePatternClass): put a comment to not confuse
		people about current_channel and current_row.

	Tue Feb  8 09:23:25 2000  Tim Janik  <timj@gtk.org>

		* bseutils.[hc]: return the referenced icon from bse_icon_static_ref()
		and bse_icon_ref().

		* bsesnet.c:
		(BSE_BUILTIN_TYPE): don't add to categories.
		(bse_snet_class_init):
		(bse_snet_do_get_icon): return synthesis network icon.

	Mon Feb  7 02:57:43 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.[hc]: reintroduce bse_pattern_select_note() and
		bse_pattern_unselect_note() to modify note selections on individual
		notes.
		(bse_pattern_restore_selection): use bse_pattern_select_note() or
		bse_pattern_unselect_note() so notifiers get invoked.
		(bse_pattern_has_selection): new function to quickly check whether
		selected notes are present at all.

		* bsedefs.h: introduced BseNotify_note_selection_changed() notifier.

	Thu Feb  3 09:19:49 2000  Tim Janik  <timj@gtk.org>

		* glib-extra.[hc]:
		s/signal/usignal/ for glib's unix (user) signal loop source.
		compat code to make g_datalist_id_remove_no_notify() return
		the data for !1.3.1 glib.

		* bseobject.[hc]:
		* bsesource.c:
		* bseparasite.c:
		* bsecontainer.c:
		qdata_remove_no_notify fixups.

	Wed Feb  2 23:59:48 2000  Tim Janik  <timj@gtk.org>

		* builtin_bsepattern.c (multi_select_exec): added Select/All,
		Select/None and Select/Invert procedures.

		* bsepattern.[hc]: revamped selection API, we only store the
		selection for procedure invokations now.

		* bseexports.h:
		* bseprocedure.[hc]: added private_id field to procedure class and
		export type for multipurpose procedures.

	Wed Feb  2 05:37:02 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.[hc]:
		(bse_pattern_unselect_except): new (internal) function.

		* *.c: altered seom copyright years.

	Tue Feb  1 02:35:04 2000  Tim Janik  <timj@gtk.org>

		* bsepattern.[hc] (bse_pattern_modify_note): disentangle note selection
		from note modifications.

		* builtin_bsepattern.c: change accordingly.

	Mon Jan 31 19:09:37 2000  Tim Janik  <timj@gtk.org>

	        * bsesongsequencer.[hc]:
	        * bsesongmixer.c:
	        * bsevoice.[hc]: play bsesinstrument blocks for synthesis instruments,
	        we still have some fading problems here.

	Thu Jan 27 19:20:45 2000  Tim Janik  <timj@gtk.org>

		* bsesnet.c:
		(bse_snet_remove_item): don't reset items, let BseContainer take
		care of this.

		* bseproject.c: only rprepare/reset the prject itself for playback, the
		rest is taken care off by the BseContainer implementation.

		* bsecontainer.c:
		(bse_container_prepare): prepare all BseSource children.
		(bse_container_reset): rest all BseSource children.
		(bse_container_do_add_item): prepare items if necessary.
		(bse_container_do_remove_item): reset item if necessary, clear input
		and output channels for non-container children.

	Mon Jan 24 20:07:48 2000  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_queue_param_changed): do param_changed
		notification fully asyncronous from an idle handler (not only
		compressed for multiple param specs).

		* bseproject.[hc]:
		(bse_project_list_nick_paths):
		(bse_project_item_from_nick_path): new functions to list nick path of
		all items of a specific type contained in this project, and to find
		the items again from their nick paths.

		* bseitem.[hc] (bse_item_make_nick_path): create an item path made up of
		object names only.

		* bsecontainer.c: fixed uncross bug.

		* bsesongsequencer.[hc]:
		* bsesongmixer.c:
		* bsevoice.[hc]:
		recoded the voice allocation scheme, so we keep the association of
		poly voices with their original channels.
		major source cleanups, fixed a bunch of bugs.
		added support for voice inputs from other objects than samples.

		* bsesong.[hc] (bse_song_update_sequencer): provide possibility for
		external sequencer syncronization.

		* icons/mic.*:
		* bsecapture.[hc]:
	        moved capturing source from plugin dir to BSE proper.

		* bsepattern.[hc]: s/BseNote/BsePatternNote/.
	        *.[hc]: bunch of BsePatternNote fixups and signedness corrections for
	        notes in general.

	        * bseglobals.h:
	        * bsecontainer.c:
	        * bseheart.c: priority fixups.

	Mon Jan 17 15:01:11 2000  Tim Janik  <timj@gtk.org>

		* bsedefs.h:
		* bsecontainer.c: provide asyncronous notification of cross-link
		changes through a "cross_changes" notifier.

		* glib-extra.[hc]: added g_slist_remove_any() to walk the whole list
		and remove items, in case an item got added twice or more times.
		added G_STRLOC macro that expands to a string, describing its current
		source file location.

		* bseitem.[hc]: supply bse_item_has_cross_owners() and
		bse_item_list_cross_owners(), the return value needs to be
		g_list_free()ed, no references are held on the items though.

		* bsecontainer.[hc]: implemented bse_container_cross_forall() to walk
		all cross references (do *not* modify the cross references during
		execution of this function).

		* bsesongmixer.c (bse_song_mixer_activate_voice): deal with NULL samples
		in instruments.

		* bsesongsequencer.c:
		* bsesongmixer.c (bse_song_mixer_fill_buffer): namespace fixups.

	Mon Jan 17 12:59:16 2000  Tim Janik  <timj@gtk.org>

		* bsechunk.[hc]: provide bse_chunk_get_trigger_state() that returns
		whether a specified track of a chunk carries a positive trigger signal
		or not.

	Mon Jan 17 11:07:16 2000  Tim Janik  <timj@gtk.org>

		* bsehunkmixer.h: provide BSE_CLIP_SAMPLE_VALUE().

		* bsehunkmixer.c: make use of BSE_CLIP_SAMPLE_VALUE().

		* bseglobals.h: provide BSE_MIX_FREQ_f, BSE_TRACK_LENGTH_f,
		BSE_MIX_FREQ_d and BSE_TRACK_LENGTH_d.

	Sun Jan 16 06:36:54 2000  Tim Janik  <timj@gtk.org>

		* bsecontainer.[hc]:
		(bse_container_shutdown): destroy remaining cross references.
		(bse_container_do_remove_item): uncross item when removing it.
		(bse_container_cross_ref): install a cross reference.
		(bse_container_cross_unref): destroy a cross reference.
		(bse_container_uncross_item): destroy all cross references that
		contain item (or any of its children) and another item that
		is not part of the hirarchy branch spawned by item.

		* bseitem.[hc]:
		(bse_item_cross_ref):
		(bse_item_cross_unref): new functions to maintain cross references
		(a special kind of weak reference between two hirarchy branches)
		between items within the same project.

		* bseinstrument.c (bse_instrument_set_param): use cross references to
		keep a pointer to the sample.

	Sat Jan 15 18:42:28 2000  Tim Janik  <timj@gtk.org>

		* bsemixer.[hc]:
		* bsehunkmixer.[hc]: renamed bsemixer.[hc] to bsehunkmixer.[hc].
		added bse_hunk_clip_mix_buffer() and bse_mix_buffer_fill().

		* bseheart.c (bse_heart_mix_chunks): use bse_hunk_clip_mix_buffer().
		* bsesongsequencer.c (bse_song_sequencer_fill_hunk): same here.

		* bsesnet.[hc]: added master volume (finally!).

	Fri Jan 14 01:11:47 2000  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-alsa.c: added compatibility defines for ALSA lib < 0.5.0
		to alias snd_pcm_playback_drain(), snd_pcm_channel_flush() work around
		lack of snd_card_get_longname() and snd_card_get_name().
		fixed up the rest to work with 0.5.0.

	Thu Jan 13 18:12:51 2000  Tim Janik  <timj@gtk.org>

		* bsedevice.[hc]: new object, taking over part of BsePcmDevice's
		responsibilities as its parent type.

		* bsepcmdevice.[hc]:
		* bsepcmdevice-oss.[hc]:
		* bsepcmdevice-alsa.[hc]: minor adaptions because of the hirarchy
		change.

	Wed Jan 12 23:11:31 2000  Tim Janik  <timj@gtk.org>

		* bseplugin.[hc]: exported enum types support.

		* bseexports.h: provide support for auto-generated exported enum
		types.

		* bseenums.[hc]: provide bse_enum_type_register() and
		bse_enum_complete_info() to register exported enums.

		* bsestorage.c (bse_storage_parse_param_value): humpf, flags value
		parsing case was missing.
		(bse_storage_put_param): store enum values by names to avoid
		ambiguities.

		* mkenums.pl (parse_trigraph): allow white spaces in nick names.

	Sun Jan  9 22:58:42 2000  Tim Janik  <timj@gtk.org>

		* mkenums.pl: enforce real trigraphs (again), so /*< skip >*/
		is recognized while /* < skip > */ is not.

		* *.h: bunch of trigraphs adapted.

	Sun Jan  9 13:42:01 2000  Tim Janik  <timj@gtk.org>

		* bsegconfig.c (bse_gconfig_do_default_revert):
		(bse_gconfig_revert): walk *all* classes when reverting the parameters,
		not only the topmost one.

		* bseobject.c (bse_object_do_set_name): don't pass destroy notifier when
		name == NULL.

	Sun Jan  9 12:49:29 2000  Tim Janik  <timj@gtk.org>

		* bsegconfig.[hc]: moved the BseGConfig object from bseglobals.[hc].
		implement object functions as methods in class so they can be overridden.

		* bseglobals.[hc]: cleanups, provide private interface for BseGConfig.

		* bseenums.[hc] (bse_error_from_errno): new function to map errno values
	        to BSE_ERROR_* values.

	Fri Jan  7 23:15:08 2000  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-alsa.c (bse_pcm_device_alsa_retrigger): use ALSA's
		snd_pcm_channel_go() to retrigger input and output.

		* bseheart.c (bse_heart_dispatch): be a bit laxer in overrun detection,
		i.e. allow two (+1) extra input chunks.

		* bsepcmdevice.[hc]: scratched obsolete in_playback() method.

		* bsepcmdevice-alsa.c (bse_pcm_device_alsa_setup): operate in
		non-blocking mode.

		* bsepcmdevice-alsa.c (bse_pcm_device_alsa_update_state): fixed bug,
		return amount of bytes left to write.

	Tue Jan  4 20:25:44 2000  Tim Janik  <timj@gtk.org>

		* bsetype.[hc] (bse_type_next_base): new function that works like
		bse_type_parent() but in the opposite direction for a given
		parent<->child inheritance path.

	Mon Jan  3 17:08:08 2000  Tim Janik  <timj@gtk.org>

		* Makefile.am: removed bseconfigpaths.h build rule.
		removed building of TAGS file for now.

	Thu Dec 30 19:19:22 1999  Tim Janik  <timj@gtk.org>

		* bsestorage.[hc]: prefix flag values, provide one to flag default
		value storage.

		* bseobject.c (bse_object_do_store_private): save object parameters
		even if tehy default when BSE_STORAGE_PUT_DEFAULTS (storage).

	Thu Dec 30 05:47:24 1999  Tim Janik  <timj@gtk.org>

		* bseheart.[hc] (bse_heart_unregister_all_devices): provide function to
		perform necessary cleanups after all sources got detached.

	Wed Dec 29 22:41:27 1999  Tim Janik  <timj@gtk.org>

		* bseglobals.[hc]: added BseGConfig object that exports the BseGlobals
		values through its parameter interface, and provides notification for
		when BseGlobals are locked/unlocked.

		* bseglobals.c (bse_globals_unlock): clear up hunk/chunk memory pool
		when BseGlobals are unlocked.

		* bseheart.c: squeezy squeezy, the GSource was stealing a BseHeart ref
		count that it didn't own.

		* bsepcmdevice-oss.c (bse_pcm_device_oss_update_state): grr, the es1371
		driver in 2.3.34 can report audio_buf_info.bytes greater than
		audio_buf_info.fragsize * audio_buf_info.fragstotal, which could
		cause int wrap arounds in calculations we perform.

	Wed Dec 29 14:36:17 1999  Tim Janik  <timj@gtk.org>

		* bseheart.[hc]: completely revised the GSource part according to
		docs/bse-heart.txt, highlights are over- and under-run detection
		with retriggering and variable latency setting.
		(bse_heart_mix_chunks): changed semantics, we unref and free the
		chunk list now and return a newly created chunk.

		* bsepcmdevice.[hc]: removed a lot of cruft such as the _iready() and
		oready() interfaces and the capture cache.
		implemented high level data processing API with input and output queues
		according to docs/bse-heart.txt. added ability to retrigger input and
		output for over-/under-run situations.

		* bsepcmdevice-oss.c:
		* bsepcmdevice-alsa.c: bug fixes, minor adaptions to the BsePcmDevice
		structure changes, more debug messages.

	Sun Dec 26 18:51:35 1999  Tim Janik  <timj@gtk.org>

		* bseobject.[hc]: finally introduce a get_icon() class function and
		provide icon_changed notification if necessary.

	Wed Dec 22 18:57:10 1999  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_open):
		(bse_pcm_device_oss_setup): open() the device always non-blocking, since newer
		kernels apparently don't return EBUSY upon opening anymore.

	Tue Dec 21 06:54:26 1999  Tim Janik  <timj@gtk.org>

		* bseobject.[hc] (bse_object_get_name_or_type): added convenience function.

	Fri Dec 17 16:57:59 1999  Tim Janik  <timj@gtk.org>

		* bseparam.[hc]: added parameter nick name for GUI uses.
		* *.c: bunch of adaptions to bse_param_spec_*() calls to supply nick names.

	Fri Dec 17 08:48:29 1999  Tim Janik  <timj@gtk.org>

		* bsemixer.[hc] (bse_hunk_fill): new function to fill a hunk with a
		value.

	Thu Dec 16 10:08:25 1999  Tim Janik  <timj@gtk.org>

		* bseplugin.c (bse_plugin_dir_list_files): return a sorted list of
		file names.

	Sun Dec 12 09:06:29 1999  Tim Janik  <timj@gtk.org>

		* bsesource.c (bse_source_set_input): don't calc history here,
		we do that on demand.

	Sun Dec 12 04:50:19 1999  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.c (bse_pcm_device_oss_open): start playback with
		read() here already, normally select(in) should do, but that is not
		the case for pseudo-OSS drivers in the kernel.

		* bsepcmdevice-oss.c (bse_pcm_device_oss_update_caps): fixed bug with
		max_fragment_size readout, this could stop OSS card drivers from
		working if they supported all fragment sizes we check for.

		* <sigh> duplex still doesn't work correctly here, this defers further
		work until i got a new machine that *does* work in duplex mode. it's
		certainly not the fault of all the 3 soundcards and 5 drivers that i
		eventually tested here ;(

	Sat Dec 11 05:34:17 1999  Tim Janik  <timj@gtk.org>

		* bsetype.h (BSE_DUMMY_TYPE): install a dummy type, needed when normal
		type defs had to be disabled.

		* bsepcmdevice-alsa.[hc]: first implementation of an ALSA based pcm
		driver.

	Fri Dec 10 16:19:51 1999  Tim Janik  <timj@gtk.org>

		* bsesource.c (bse_source_default_skip_chunk): hm, changed ckip_chunk()
		semantics, reinvoking calc_chunk() doesn't really go along with
		different source cycle indices. unless we change skip_chunk() to be
		comprehensively called for all BseHeart sources before the global
		index is increased, one basically can't call ref_chunk() from
		this method.

	Fri Dec 10 08:26:00 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.c (bse_snet_reset): reset all sources that we serve
		as a container for.

		* bsesource.c: we prepare isource in two cases, for osources that
		are already prepared and get a new isource, for osources that are
		currently being prepared and have isources as input.
		we mostly do not reset sources anymore.

	Thu Dec  9 23:55:00 1999  Tim Janik  <timj@gtk.org>

		* bsepcmdevice.[hc]:
		(bse_pcm_device_iready):
		(bse_pcm_device_oready):
		return number of writable blocks instead of just boolean.
		(bse_pcm_device_write):
		(bse_pcm_device_read):
		adjust left space appropriatedly.

	Thu Dec  9 16:34:15 1999  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]:
		(bse_source_do_cycle):
		(bse_source_do_prepare):
		(bse_source_calc_history):
		cleanups/optimizations to the ochannel history buffer. fixed a bug
		introduced with recent cleanups that completely disabled history.
		(bse_source_do_shutdown): do proper cleanups through function calls,
		and don't reinvent the wheel all over ;)

	Thu Dec  9 03:23:30 1999  Tim Janik  <timj@gtk.org>

		* bsesource.c (bse_source_set_input): don't allow shortcircuiting
		within the same source (BSE_ERROR_SOURCE_BAD_LOOPBACK).

		* bseenums.[hc]: BSE_ERROR_STREAM_* cleanups.

		* bsechunk.[hc]: return chunk->hunk from bse_chunk_complete_hunk()
		for convenience.

	Sat Dec  4 23:48:57 1999  Tim Janik  <timj@gtk.org>

		* bseproject.[hc]: added functions
		(bse_project_start_playback): retrigger playback for all supers.
		(bse_project_stop_playback): reset all currently playing supers.

		* bsesnet.c:
		(bse_snet_prepare): lock object (and globals).
		(bse_snet_reset): unlock object (and globals).

		* bsesong.c:
		(bse_song_prepare): lock object (and globals).
		(bse_song_reset): unlock object (and globals).

		* bsesongsequencer.c: no need to do locking in
		bse_song_sequencer_destroy() and bse_song_sequencer_setup() that's what
		the BseSource PREPARED state cares about.

		* bsesource.c (bse_source_reset): finally got around to implement
		this function ;)

	Sat Dec  4 20:59:22 1999  Tim Janik  <timj@gtk.org>

		* got rid of a bunch of dead sources: bsetext.[hc], bsestream.[hc],
		bsefilestream.[hc], bsenullstream.[hc], bsepcmstream.[hc],
		bsepcmstream-oss.[hc] and bsemaster.[hc].
		removed olaf's testmixer.c, look at ../test/testmixer.bse.

	Sat Dec  4 16:30:14 1999  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: introduce (*skip_chunk)() member function. per cycle
		we now guarrantee that either calc_chunk() or skip_chunk() gets called
		per output channel. even if no output sources are connected to this
		channel.
		(bse_source_do_prepare):
		(bse_source_do_reset): attach/detach to from BseHeart.

	Fri Dec  3 23:44:22 1999  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: source flag cleanups, introduced *attached flags for
		BseHeart.

		* bsemain.c (bse_parse_args): construct the debug keys from generated
		enum list.

		* *.[hc]: generic objetc flags cleanups, s/BSE_DEBUG/BSE_IF_DEBUG/.

	Thu Dec  2 21:36:00 1999  Tim Janik  <timj@gtk.org>

		* bsesource.[hc]: removed pausing junk.
		(bse_source_do_cycle): don't cycle input sources, this is done
		centrally by BseHeart now.

		* bseheart.[hc]: added pcm device registry.

	Wed Dec  1 23:53:23 1999  Tim Janik  <timj@gtk.org>

		* bseheart.[hc]: started out on a new bse core engine, based on
		bstmaster.[hc] and bsemaster.[hc].

		* bseenums.[hc] (BseErrorType): cleaned up some of the stream error
		enums, added device errors enums.

	Wed Dec  1 22:57:24 1999  Tim Janik  <timj@gtk.org>

		* bsepcmdevice-oss.[hc]: pcm device backend for OSS (based on
		duplex.c and bsepcmstream-oss.[hc]).

		* bsepcmdevice.[hc]: new base type for dealing with pcm devices
		(code redesigned, based on bsestream.[hc] and bsepcmstream.[hc]).

	Sat Nov 27 09:11:32 1999  Tim Janik  <timj@gtk.org>

		* bseobject.c (bse_object_class_init): install parasite parsers.

		* bseparasite.c:
		(store_parasite_list):
		(parasite_parser): implemented storing/parsing abilities for parasites.

		* bseobject.[hc]: cleaned up the custom parser interface.
		(bse_object_do_try_statement): feature custom parsers.
		(bse_object_store): emit store when storing.

	Sat Nov 27 05:40:45 1999  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_flush_fd): terminate with newline if we
		don't have binary data.

		* bsesource.c:
		(bse_source_do_store_private): store input links here.
		(bse_source_do_restore_private): restore input links (deferred until
		project emits complete_restore).

		* bsesource.[hc]: new functions bse_source_get_ochannel_id and
		bse_source_get_ichannel_id to get channel ids from their names.

		* bseproject.c (bse_project_restore): emit complete_restore upon
		completion.

		* bsecontainer.c (bse_container_store_termination): eeek, need to chain
		parent class handler here.

	Tue Nov 23 23:55:49 1999  Tim Janik  <timj@gtk.org>

		* bseparasite.[hc]: started parasite implementation. only floats
		are featured currently, and we need saving/parsing hooks.

		* bseobject.[hc] (bse_object_kill_qdata_no_notify): remove a certain
		data poriotn without notification.

	Sat Nov 20 12:27:21 1999  Tim Janik  <timj@gtk.org>

		* bseparam.h (BseParamBits): added BSE_PARAM_HINT_RADIO.

		* bseutils.[hc]: added bse_note_from_freq(), bse_note_to_freq() and
		bse_note_to_tuned_freq(), we use the constants from bseglobals.c.

		* bseglobals.h (BSE_MAX_NOTE): changed this to 123=dis+7=19912.127Hz,
		so we stay below BSE_MAX_OSC_FREQ_d (and below 22050).
		added BSE_MAX_OSC_FREQ_d=20000 and BSE_MIN_OSC_FREQ_d=1/20000.

		* bseglobals.c (BSE_LN_OF_2_RAISED_TO_1_OVER_12_d): added constant for
		ln(2^(1/12)).

		* bsesource.c (bse_source_do_reset):
		* bsesource.c (bse_source_init): default initialize ->index with 0 not
		-1, so we are always greater than ->start.

	Sun Nov 14 19:44:51 1999  Tim Janik  <timj@gtk.org>

		* bseglobals.h: eeeek, bad change necessary: BSE_KAMMER_NOTE is actually
		A' not A-0, and it's MIDI code is actually 57, not 69. this displaces
		all saved songs by one octave, but there are hopefully not too much of
		them out there yet ;)

	Sun Nov 14 05:52:23 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.c (bse_snet_calc_chunk): use bse_hunk_mix () to do the
		mixing for us.

		* bsemixer.c (bse_hunk_mix): don't multiply added values of a qualified
		pointer with sizeof (*pointer).

	Sun Nov 14 05:28:37 1999  Tim Janik  <timj@gtk.org>

		* bsepcmstream-oss.c (pcm_stream_oss_open_dsp): disable duplex for now.

		* bsedefs.h: make sure we have PI, BSE_MAX_SAMPLE_VALUE and
		BSE_MIN_SAMPLE_VALUE defined. oh, and i recently added BSE_EPSILON
		and BSE_EPSILON_CMP to provide generic double/float comparision
		against a certain quantity (BSE_EPSILON=1e-6).

	Sat Nov 13 04:40:45 1999  Tim Janik  <timj@gtk.org>

		* bsepcmstream-oss.c: reordered stuff so initialization actually works
		with OSS as well.

	Fri Nov 12 04:41:59 1999  Tim Janik  <timj@gtk.org>

		* bsemixer.[hc]: new files to cover common mixing requirements for
		hunks (maybe also generic buffers at a later point).
		this file is a good candidate to get partly generated upon compilation
		time in the future.

		* bsechunk.c (bse_hunk_free): reordered arguments so n_tracks comes
		always first.
		(bse_hunk_copy): same here.

	Fri Nov 10 16:04:08 1999  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]: minor fixes/additions to BSE_ERROR_ enum values.

		* bsepcmstream-oss.c: use new BSE_ERROR_ enum values.

	Mon Nov  8 22:09:49 1999  Tim Janik  <timj@gtk.org>

		* bsepcmstream-oss.c (pcm_stream_oss_open_dsp): set blocking behaviour
		prior to any ioctl()s.
		(pcm_stream_oss_set_dsp): set BSE_PCMSA_FRAGMENT_SIZE right at the
		beginning (probably still not enough for OSS).

	Mon Nov  8 02:42:44 1999  Tim Janik  <timj@gtk.org>

		* bsepcmstream.[hc]:
		* bsepcmstream-oss.c: added an incredibly bad hack for the microphone
		source to plugin. this does give me the opportunity to test stuff untill
		the pcm side is redesigned.

	Mon Nov  8 02:01:31 1999  Tim Janik  <timj@gtk.org>

		* bseobject.h (BSE_NOTIFY): don't notify objects that are destroyed.
		* bseobject.c (bse_object_do_shutdown): notify object of ::destroy,
		allthough it is of course destroyed (prevent the BSE_NOTIFY()
		sanity check for destroyed objects in this case).

		* bsesnet.[hc]: make the sole input channel we have a multi track
		channel (well, actually only stereo for the moment).
		(bse_snet_calc_chunk): mix input hunk to stereo if necessary.

		* bsesource.[hc]: added max_n_tracks field to BseSourceIChannelDef.
		enforced further usage of the BSE_SOURCE_*() macros, instead of direct
		class usage. renamed the class-> ichannels and ochannels fields to
		ichannel_defs and ochannel_defs to keep distinction to the ->ochannels
		member in sources (and because these are actually *definitions* only).
		moved BseSourceInput ->history field, this actually belongs into the
		BseSourceIChannelDef structure.
		got rid of the history argument to bse_source_set_input() and the
		->add_input() member function that way.
		made BSE_SOURCE_ICHANNEL_DEF() and BSE_SOURCE_OCHANNEL_DEF() return
		pointers.
		(bse_source_ref_state_chunk):
		(bse_source_ref_chunk): reduced code duplication by moving 98% percent
		of the code into an inlined bse_source_fetch_chunk().
		(bse_source_fetch_chunk): guard against negative indices.
		(bse_source_do_prepare): recalc history for all output channels.
		(bse_source_do_remove_input): notify the output source about io_changed.
		(bse_source_get_input): new function to return input handle for a given
		channel.

		* bseenums.[hc]: added BSE_ERROR_SOURCE_TOO_MANY_OTRACKS
		error case.

	Sun Nov  7 08:12:21 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.c (N_RAND_BLOCKS): uhg, don't kill my speakers with that
		test sound.

	Sun Nov  7 03:05:39 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.[hc]: create a mono input channel.

	Sat Nov  6 19:21:06 1999  Tim Janik  <timj@gtk.org>

		* bsesource.c: notify outside world when input/output channels got
		added/removed. we simply notify "io_changed" in this case for now.

		* bseobject.c (bse_object_do_destroy): squeezed a bug that had been
		causing random crashes recently. basically, we left invalid pointers
		in the object name hash table.

	Sat Nov  6 05:55:59 1999  Tim Janik  <timj@gtk.org>

		* icons/snet.xcf:
		* icons/snet.c: slight color change.

	Fri Nov  5 04:49:05 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.[hc]: added necessary bits to serve as output source.

		* bsechunk.[hc] (bse_hunk_copy): new function to alloc a new hunk filled
		with sample data.

		* bsesource.h:
		renamed BSE_SOURCE_ICHANNEL() to BSE_SOURCE_ICHANNEL_DEF() and
		renamed BSE_SOURCE_OCHANNEL() to BSE_SOURCE_OCHANNEL_DEF().
		introduced BSE_SOURCE_OCHANNEL() to return a pointer to the source's
		output channel connection.

		* bsesource.c: pass normal ochannel_ids to calc_history as well,
		instead of hackery 0-starting indices. use BSE_SOURCE_OCHANNEL() over
		the place, instead of direct strcuture member adressing.

	Wed Nov  3 21:50:38 1999  Tim Janik  <timj@gtk.org>

		* bseenums.[hc]: don't return const strings, this is extremely annoying.

		* bseplugin.c (bse_plugin_get_export_spec): fixed a bad bad bug here,
		we were walking the export specs by sizeof(BseExportSpec) instead of
		the appropriate sizeof(BseExportObject) or sizeof(BseExportProcedure),
		depending on what type of specs we actually handle. this led to only
		the first type being recognized (which was moderatedly mild, could
		have insanely crashed instead ;).

	Wed Nov  3 20:05:14 1999  Tim Janik  <timj@gtk.org>

		* bsecategories.c (bse_categories_register_icon): category icons stay
		alive throughout a program's life time.

		* bseobject.c (bse_object_get_icon): removed icon cruft from object
		class and simply provided bse_object_get_icon(). there might be a
		notifier someday to indicate that an object's icon should get
		refetched.

		* bseutils.h: provide simple refcounting functions for BseIcons,
		facilitate permanent icon ref_counts.

	Sun Oct 31 16:20:49 1999  Tim Janik  <timj@gtk.org>

		* bsestorage.c (bse_storage_parse_bin_data): eeek, fixed a bad bad bug.
		we weren't saving/restoring the current parsing position around binary
		block reads.
		(bse_storage_ensure_bin_offset):
		(bse_storage_restore_offset): retrieve/restore current file offset.

	Fri Oct 29 11:27:47 1999  Tim Janik  <timj@gtk.org>

		* bseplugin.c: minor const correctness fixes.

	Fri Oct 15 02:09:24 1999  Tim Janik  <timj@gtk.org>

		* bsemain.c (bse_parse_args): added --bse-debug and --bse-no-debug args
		and featuring of BSE_DEBUG and BSE_NO_DEBUG environment variables.

		* bseobject.c: wrapped up NOTIFY and OBJECTS debugging stuff.

		* bsetype.c: wrapped up CLASSES debugging stuff.

	Fri Oct 15 00:20:30 1999  Tim Janik  <timj@gtk.org>

		* icons/Makefile.am:
		* icons/Makefile.icons: setup ./icons subdirectory.

	Fri Oct 15 00:00:41 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.c: add category with ugly test-icon for an internal object.

	Thu Oct 14 23:28:27 1999  Tim Janik  <timj@gtk.org>

		* bseutils.[hc]: added bse_icon_from_pixdata() to create a new icon
		structure from a pixdata buffer (and decode the run-length encoding).

	Wed Oct 13 06:05:55 1999  Tim Janik  <timj@gtk.org>

		* Makefile.am: adapted some stuff so loging domains and fallback
		plugin names are featured for builtin plugins as well.

	Tue Oct 12 20:15:34 1999  Tim Janik  <timj@gtk.org>

		* bseplugin.[hc]: recognize predefined plugin names, only evaluate
		plugin-name specification for strings for builtin_* plugins, create
		their symbols from their underscored file name.
		removed some export stuff.
		added object type support for plugins.

		* bseexports.h: moved lots of new stuff here, fixed up object types.

		* mkbuiltinlist.pl: output the actuall file name of builtin plugins
		as symbol part (with non-identifier chars converted into '_').

	Fri Oct 8 15:04:40 1999  Tim Janik  <timj@gtk.org>

		* bseprocedure.[hc]: removed proecedure category implementation,
		adapted code to work with bsecategories.[hc].

	Thu Oct  7 00:17:38 1999  Tim Janik  <timj@gtk.org>

		* glib-extra.[hc]:
		nuked g_pattern_spec_init() and g_pattern_spec_free_segs() in favour of
		g_pattern_spec_new() and g_pattern_spec_free() which create and free a
		newly allocated structure. also cleverly optimized g_pattern_spec_new()
		by counting tail and head wildcards and jokers. from these numbers, we
		can make better judgement whether to match from tail or head and also
		got rid of a bunch of strchr() calls.

	Wed Oct  6 23:53:07 1999  Tim Janik  <timj@gtk.org>

		* bsecategories.[hc]: new files, implementing a more general
		categorization approach. intended to take over the procedure category
		administration and feature object categories as well (see also
		docs/bse-categories.txt on this topic).

	Tue Oct  5 13:49:57 1999  Tim Janik  <timj@gtk.org>

		* bseexports.h: added export structure for objects.
		* bseplugin.h: extended macro magic to feature object types.
		* bseplugin.c: register, reinit, unload and complete exported
		and builtin object types.

	Fri Oct  1 07:29:32 1999  Tim Janik  <timj@gtk.org>

		* bsemaster.c (bse_master_do_cycle): added ability to mix multiple
		stereo songs together.

		* some const corrections.

	Thu Sep 30 09:18:58 1999  Tim Janik  <timj@gtk.org>

		* bsesample.c (bse_sample_do_shutdown):
		* bsepattern.c (bse_pattern_do_shutdown):
		* bseinstrument.c (bse_instrument_do_shutdown):
		* bsesong.c (bse_song_do_shutdown):
		* bseproject.c (bse_project_do_shutdown):
		remove/release items/objects in shutdown handler, rather than destroy.

		* bseobject.c (bse_object_unlock): release global lock *after* the
		->unlocked class method has been invoked.

		* bseobject.[hc]: changed destruction mechanism to using an intermediate
		->shutdown method. this eases class destruction, shutdown is invoked
		prior to the object's destroy notification and one ref_count is at least
		being held. once the final reference count dropps, the ->destroy method
		is actually invoked.
		(bse_object_set_valist):
		(bse_object_set_param): check for non-destroyed object first.

		* bsecontainer.[hc] (bse_container_add_item_unrefed): new function for
		containers to manage (non-destroyed) items, without holding an extra
		ref count on them, we use destroy notification from BseItem for cleanup.

		* bseitem.c (bse_item_do_shutdown): remove item from container in
		->shutdown instead of ->destroy.

		* bsesource.c: added some !destroyed checks.
		(bse_source_do_shutdown): use ->shutdown instead of ->destroy.

	Sat Sep 27 12:30:02 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.[hc]: new super type to manage source networks (skeleton
		only).

	Wed Sep 22 06:24:00 1999  Tim Janik  <timj@gtk.org>

		* bsetype.[hc]: lots of code cleanups and bug fixes over the last few
		days. significantly changed allocation system, so TypeNodes are not
		themselves relocatable anymore (certain structure parts are though).
		nodes get allocated with their supers list in one piece now.

	Thu Sep 16 09:14:19 1999  Tim Janik  <timj@gtk.org>

		* bsetype.[hc]: started out on bse_type_class_lastref() as a
		preparation for delayed destruction.
		we need to catch FIXMEs.

	Mon Sep 13 05:19:17 1999  Tim Janik  <timj@gtk.org>

		* Makefile.am: minor autogeneration fixups, use cp instead of mv.

	1999-06-03    <timj@dhcpd7.redhat.com>

		* bsesong.c: fix typo.

	1999-05-31    <timj@dhcpd7.redhat.com>

		* bsepcmstream-oss.c (pcm_stream_oss_set_dsp): ignore failing fragment
		size settigns for now, so we work with the OSS driver.

	1999-05-28  Tim Janik  <timj@couch.wilmington.net>

		* bsepattern.c (save_note): don't prefix seq ids with an 0, which
		would make them octal nombers.

	Mon May 17 02:52:49 1999  Tim Janik  <timj@gtk.org>

		* bunch of Makefile and configure changes so make distcheck works.
		BSE is version 0.2.0 now.

	Sat May 15 23:23:05 1999  Tim Janik  <timj@gtk.org>

		* bsesongmixer.c (bse_mixer_activate_voice): don't set notes on inactive
		voices.

	Wed May  5 09:16:41 1999  Tim Janik  <timj@gtk.org>

		* bseeffect*.[hc]: started out on effect objects, they are fairly
		lightweight (and somewhat uncommon) objects, in that they are managed
		by BsePattern and in principle serve as simple operators and id
		containers only. the reason to implement them as real objects, rather
		than plain auxillary structures is to provide the convenient BseObject
		facilities, i.e. a generalized parameter interface for GUI generation
		and state restauration as well as basic locking facilities during
		playing.
		next step is to featured effects in the song sequencer.

	Wed May  4 16:43:45 1999  Tim Janik  <timj@gtk.org>

		* nuked inappropriate ChangeLog stuff (about 15 entries over the
		last year). To sum it up, BSE implements its own type system now,
		which features a bunch of different fundamental types, e.g. the
		generic parameters, enumeration and flags classes, objects with
		single inheritance, multiple interfaces and procedure classes.
		the generic parameter interface is used to route most of the setting
		and getting of BSE objects through a central point, which serves for
		object state recording to implement undo facilities and to serialize
		objects (though there are some tweaks to that since we have to feature
		inter-object links in the trees). the type system is layed out in a
		dynamic fashion, so that new types can be registerd by third party
		plugins and get their implementation loaded (and unloaded) on demand.
		the basic infra structure for modular synthesis sources and filters
		is also in place, though BseSong doesn't currently integrate very
		nicely into that and it deserves some serious testing.

	Tue Mar 24 04:28:26 1998  Tim Janik  <timj@gtk.org>

		* started ChangeLog.

	svn path=/trunk/; revision=4479

2008-06-12  Stefan Westerfeld 	# 8b3b4bfae366e1c01bef40479fd462a7257db129

	Compile fixes for G++-4.3.

	Wed Jun 11 14:04:31 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetsignal.hh:
		* birnetsignaltemplate.hh: Compile fixes for G++-4.3, which does not
		allow typedefs to the same name that an existing template uses.

		* birnetutils.cc:
		* tests/sorting.cc:
		* tests/strings.cc:
		* tests/threads.cc:
		* birnetmsg.cc: Compile fixes for G++-4.3: added a few standard
		includes for strcmp(), rand() and such.

	Sun Jun  8 11:19:57 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* mksignals.sh: Removed bash specific syntax as suggested by Chris
		Lamb (debian bug #472659).

	Wed Feb 21 03:27:02 2007  Tim Janik  <timj@gtk.org>

		* birnetthread.hh: fixed up destructor ordering. added missing
		privatization of class copies. fixed memory region aliasing that
		could cause segfaults with some gcc optimizations. worked around
		ICE (GCC#30894). minor assertion optimization. added AutoLocker
		compile time assertion about structure/area sizes.

		* birnetutils.hh, birnetutils.cc: provide zintern_free() alongside
		zintern_decompress(), so the API doesn't depend on GLib.

		* tests/infotest.cc: use zintern_free().

	Sun Feb 18 03:00:54 2007  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: if LLONG_MAX isn't provided by gcc's limits.h despite
		C99/GNU_SOURCE, fallback to define *INT64* constants via LONG_LONG_MAX,
		which is provided by all 3.0+ gcc versions.

	Wed Feb 14 23:58:43 2007  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: unconditionally include C99 headers limits.h and float.h.
		provide UINT64_MAX, INT64_MIN, INT64_MAX if the system doesn't.

		* birnetutils.cc: assert working implementations of the various limits
		and constants introduced by limits.h and float.h.

	Fri Feb  9 21:13:21 2007  Tim Janik  <timj@gtk.org>

		* configure.inc, Makefile.am, birnetconfig.h: define BIRNET_SYSVAL_*
		for POLL constants.

		* tests/systest.cc: check POLL constants.

	Fri Feb  9 18:27:27 2007  Tim Janik  <timj@gtk.org>

		* configure.inc, Makefile.am, birnetconfig.h: define BIRNET_SIZEOF_LONG
		and BIRNET_SIZEOF_POINTER.

	Sun Feb  4 17:08:31 2007  Tim Janik  <timj@gtk.org>

		* updated .gitignore files.

	Sun Feb  4 17:00:38 2007  Tim Janik  <timj@gtk.org>

		* updated all licenses to GNU Lesser General Public License version 2.1.

	Fri Feb  2 00:54:32 2007  Tim Janik  <timj@gtk.org>

		* birnetdebugtools.cc: don't write trailing 0s in debug stream,
		slightly reduced stack requirements, 4000 chars are hopefully
		enough for async debugging messages.

	Thu Feb  1 23:24:16 2007  Tim Janik  <timj@gtk.org>

		* birnetdebugtools.hh: make printf_valist() public to allow wrapper
		implementations.

		* birnetdebugtools.cc: auto append newlines to printed lines.

	Thu Feb  1 20:27:09 2007  Tim Janik  <timj@gtk.org>

		* birnetdebugtools.hh, birnetdebugtools.cc: added DebugChannel, a
		reference counted interface which allows sending of debug messages.
		if a debug channel is created with new_from_file_async(), printing
		a message happens in constant time in the calling thread, and the
		debugging output is written into a file by a background thread.

		* tests/threads.cc: added simply DebugChannel test.

	Mon Jan 29 23:29:27 2007  Tim Janik  <timj@gtk.org>

		* examples/mkhost.sh: generate Makefile.decl with slowcheck: and perf:
		rules. also generate report: rule which runs all of check: slowcheck:
		and perf: and generates a report.out file.

	Mon Jan 29 22:46:40 2007  Tim Janik  <timj@gtk.org>

		* birnet/birnetthread.hh: made read_barrier() and write_barrier() a NOP
		on systems that don't need barriers. provided full_barrier().

		* birnetthread.cc: fixed a bad bug in atomic_int_set() and
		atomic_pointer_set() which caused atomic values to temporarily be 0.

		* birnet/birnetcdefs.h: provide memory barrier implementations based on atomic ops.

		* birnet/Makefile.am: define BIRNET_MEMORY_BARRIER_NEEDED in birnetconfig.h.

		* configure.inc: provide BIRNET_MEMORY_BARRIER_NEEDED=[01] based on
		glib's G_ATOMIC_OP_MEMORY_BARRIER_NEEDED.

	Sun Jan 28 19:31:12 2007  Tim Janik  <timj@gtk.org>

		* fixed various compiler warnings.

	Sun Jan 28 19:05:51 2007  Tim Janik  <timj@gtk.org>

		* birnetthread.hh: provide read and write memory barriers:
		Atomic::read_barrier(), Atomic::write_barrier().
		Atomic::RingBuffer: prevent class copies, fixed destructor, use
		std::copy() for fast memory copies and added missing barriers;
		fixes suggested by Stefan Westerfeld.

		* tests/threads.cc: fixed contention handling in ring buffer tests.

	Thu Jan 25 02:43:28 2007  Tim Janik  <timj@gtk.org>

		* tests/threads.cc: give up CPU if ring buffer reader/writer
		are busy spinning. this speeds up tests on single-CPU systems
		significantly.

	Thu Jan 25 02:03:37 2007  Tim Janik  <timj@gtk.org>

		* birnetthread.[hc]*: sink & ref threads around run() to keep the Thread
		structure alive. added Thread::Self::yield().
		added Atomic::RingBuffer<>, a simple 1-reader/1-writer ring bufferthat
		does atomic reads/writes without needing mutexes.

		* tests/threads.cc: added atomic ring buffer tests.
		test_deletable_destruction(): shutup old debug output.
		main(): always run quick tests.

	Sat Jan 20 17:41:06 2007  Tim Janik  <timj@gtk.org>

		* birnetthread.hh: fixed volatile pointer attribute to apply to the
		pointer value.

		* birnetutils.cc: changed DeletionHook linking to form a ring. added
		an assertion to ~DeletionHook() that *this was unlinked before being
		destroyed. changed deletable_maps[] implementation to be created
		atomically on demand and never be destroyed. this fixes problems with
		unpredictable constructor/destructor ordering.

	Fri Jan 19 01:48:22 2007  Tim Janik  <timj@gtk.org>

		* birnetutils.hh, birnetutils.cc: call monitoring_deletable()
		when deletion hooks are added to deletables, renamed
		dismiss_deletable() method.

		* birnetsignalslot.hh: adapted DeletionHook methods.

		* tests/threads.cc: added deletion hook test cases.

	Wed Jan 17 02:30:35 2007  Tim Janik  <timj@gtk.org>

		* examples/mkhost.sh: added a small script to set up an example project
		that configures, builds and tests (via make check) a birnet/ subdir.

	Wed Jan 17 02:28:18 2007  Tim Janik  <timj@gtk.org>

		* Makefile.am: define _BIRNET_SOURCE_EXTENSIONS, so birnet extensions
		can be used internally.

	Wed Jan 17 02:19:56 2007  Tim Janik  <timj@gtk.org>

		* COPYING.LGPL: explicitely include Birnet license, GNU LGPL.

	Thu Jan  4 21:53:56 2007  Tim Janik  <timj@gtk.org>

		* birnetthread.hh:
		* birnetutils.hh: introduce virtual destructors demanded by g++-4.1.

		* birnetthreadimpl.cc:
		* birnetutils.cc: make double->int64 conversion explicit.

	Thu Jan  4 20:29:24 2007  Tim Janik  <timj@gtk.org>

		* mksignals.sh: changed script interpreter to /bin/bash to account
		for bash-isms.

	Sun Dec 17 02:16:50 2006  Tim Janik  <timj@gtk.org>

		* tests/strings.cc: glib condition fix, g_unichar_iswide_cjk()
		was introduced in glib-2.12.

	Sun Dec 17 00:11:24 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.[hc]*: provide virtual destructor for class with virtual
		methods, demanded by g++.

		* acbirnet.m4: added autoconf utility file (moved here from beast).

	Sat Dec 16 12:51:20 2006  Tim Janik  <timj@gtk.org>

		* birnetutf8.cc (iswide_cjk): glib condition fix, g_unichar_iswide_cjk()
		was introduced in glib-2.12.

	Fri Dec  8 23:03:14 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.hh (binary_lookup_insertion_pos): fixed missing "std::".

	Sun Dec  3 20:09:58 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: added x86_sse4 to BirnetCPUInfo.

		* birnetcpu.cc (get_x86_cpu_features): detect x86_sse4 bit of CPUID.

	Tue Nov 28 01:20:57 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadimpl.cc: do not provide chain/unchain functions after
		thread system initialization, since calling them at this point is
		invalid.

	Wed Nov 22 19:45:21 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.cc (url_test_show): prefer configurable browser launchers
		over non-configurable browser launchers.

		* birnetcdefs.h: provide EXTERN_C and BIRNET_MAY_ALIAS.

	Tue Nov 21 22:04:15 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.cc: reworked browser launching logic to work around
		launcher scripts failing unnoticed by executing browser programs
		asyncronously and executing browser launch scripts syncronously
		to check the exit code.
		added "browser" debug key and messages.
		due to unreliable exit codes or foreground/background execution
		behaviour, support had to be removed for the launcher scripts
		xdg-open, htmlview, browser-config and sensible-browser,
		added support for exo-open, galeon, epiphany, amaya and dillo.

		* birnetmsg.hh, birnetmsg.cc: added Msg::CustomType class through
		which users can easily create new logging types. added printf-style
		Msg::display() variant for custom message types.

	Mon Nov 20 23:39:43 2006  Tim Janik  <timj@gtk.org>

		* birnetmsg.hh, birnetmsg.cc: implemented C++ messaging API,
		mostly based on the former sfimsg.c.
		extended API to match most of the old sfi_msg_* API, including
		syslog logging, stdlog configuraiton and various new message types.

		* birnetthread.cc: fixed missing zero initialization of C structs.

		* tests/infotest.cc: added some message tests.

	Wed Nov 15 01:00:21 2006  Tim Janik  <timj@gtk.org>

		* birnetmath.hh, birnetmath.cc: added dtoi32, dtoi64, iround, iceil,
		ifloor definitions from Rapicorn. these are fast float->integer
		conversion routines on i386.

		* tests/math.cc: test dtoi implementation and friends.

	Thu Nov  2 22:28:49 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: added TABORT_HANDLER() to specify a custom callback
		for informative printouts to be executed upon failing assertions.
		such a handler setup is only active within a single TSTART/TDONE block.
		added TCHECK_CMP() and TASSERT_CMP() to print out mismatching
		values of failing comparisons.

	Wed Nov  1 11:46:10 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetcdefs.h: Applied Patch from Tim to define BirnetInt64 and
		BirnetUInt64 as (signed) long long int, as otherwise %lld printf
		formats on AMD64 emit compiler warnings.

		* birnetthreadimpl.cc: Use BirnetUInt64 arguments for thread table
		function implementations of thread_awake_after and
		thread_emit_wakeups, to be consistent with the thread table function
		pointers defined in birnetcdefs.h.

	Tue Oct 24 23:51:12 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: added cpu name to treport_*() output.

	Mon Oct 23 17:56:19 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetthreads.hh: Fixed typos in AutoLocker documentation.

	Wed Oct 11 02:11:29 2006  Tim Janik  <timj@gtk.org>

		* birnetutf8.hh: added utf8_align() and utf8_aligned() to step back
		from the middle of an UTF-8 char.

	Sat Oct 21 19:02:47 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h (treport_generic): allow fixed portion of numbers
		to occupy 9 characters. added more test units.

	Sat Oct 21 17:14:54 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.hh, birnetutils.cc: provide init_settings() function to
		access initialization setting values. test should now use:
		init_settings().test_perf
		init_settings().test_slow or
		init_settings().test_quick.

		* birnettests.h: fixed float printing.

	Sat Oct 21 03:46:05 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: added treport_maximized() and treport_minimized()
		benchmark reporting funcitons. added TUnitType to allow specification
		of units for benchmark results.

		* birnetcdefs.h:
		* birnetutils.cc: parse --g-fatal-warnings, --test-quick, --test-slow
		and --test-perf. allow special casing of tests via
		birnet_init_settings->test_quick, birnet_init_settings->test_slow and
		birnet_init_settings->test_perf.

		* tests/sorting.cc:
		* tests/strings.cc:
		* tests/threads.cc:
		* tests/Makefile.am: split up TESTS into SLOWTESTS and PERFTESTS and
		report performance results properly.

	Tue Oct 10 23:23:11 2006  Tim Janik  <timj@gtk.org>

		* birnetutf8.hh, birnetutf8.cc: added Unichar::isvalid().
		changed arguemnt order of utf8_find_prev() to match that of
		g_utf8_find_prev_char(), adapted test case. added utf8_validate(),
		wrapping g_utf8_validate().

		* tests/strings.cc: adapt to utf8_find_prev(). added Unichar::isvalid()
		test and utf8_validate() test.

	Tue Oct 10 01:34:05 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: provide extra prototype for extern inline functions
		for newer gcc.

	Mon Oct  9 23:58:21 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.cc: fixed typo in condition.

		* birnet-zintern.cc: fixed debugging statement.

	Mon Oct  9 23:47:30 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: ensure we have FALSE, TRUE, ABS, MIN, MAX, CLAMP,
		ARRAY_SIZE and STRFUNC.

		* birnetutils.hh: don't publically include glib.h, adapted affected
		callers. pre-declare ThreadTable to use atomic functions in class
		ReferenceCountImpl.

		* birnetutils.hh, birnetutils.cc: added string utilities to convert
		strings to and from bool, int, uint, float, double and double vector.
		added utilities to convert strings tolower, toupper, totitle, to strip
		strings and to print into strings in printf style.
		added uuid string test and comparison and errno to string conversion.

		* birnet-zintern.cc: converted somewhat more to C++.

		* tests/strings.cc: added uuid string functions tests.

	Mon Oct  9 23:00:39 2006  Tim Janik  <timj@gtk.org>

		* birnetutf8.hh, birnetutf8.cc: wrap GLib isalnum() and friends to
		classify unichar characters. provide inline functions to increment
		and decrement positions in UTF-8 strings.

		* tests/strings.cc: new test program to test birnetutf8.hh functions.

	Sun Oct  8 16:20:18 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: ship birnetcdefs.h.

		* birnetthreadimpl.cc: added internal default constructors for gcc-3.3.

		* birnetmsg.hh: reordered function attributes on constructors for gcc-3.3.

	Sat Oct  7 23:58:58 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h (BIRNET_ABORT_NORETURN): added noreturn call to macros
		which can't return, to silence compiler in some cases.

	Sat Oct  7 18:32:00 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: moved non-symbol C API bits from birnetcore.h and
		birnethread.h bits here. extended threading table to also cover the
		normal threading API.

		* birnetcpu.hh, birnetcpu.cc: minor API changes.

		* birnetthread.hh, birnetthread.cc: use global threading table to
		access thread layer.

		* birnetthreadimpl.cc: main threading implementation moved here and
		ported to C++. work around g_atomic_int_set and g_atomic_pointer_set
		missing from glib <= 2.10. reworked threading functions to use the
		global threading table.

		* birnetthread.h, birnetthread.c: removed. mostly merged into birnetthreadimpl.cc.

		* birnetutils.hh, birnetutils.cc: added birnet_runtime_problemv().

		* merged birnetutils.hh with birnetutilsxx.hh, and the same for the .cc files.

		* tests/threads.cc: added simple wrappers to keep the threading tests going.

	Fri Oct  6 23:26:10 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: new header file to contain (or include) all definitions
		and declarations that are useful for C only programs. while Birnet is not
		to support *any* C symbol at all, using common structure definitions
		helps in wrapping certain features for C programs.

		* birnetcpu.hh, birnetcpu.cc: renamed and moved from .h and .c.

		* birnetutilsxx.hh, birnetutilsxx.cc: use birnetcdefs.h definitions.
		provided init functionality. added raise_sigtrap() and BREAKPOINT()
		implementations.

		* birnetutilsxx.hh, birnetutilsxx.cc: merged everything from
		birnetutils.hh and birnetutils.cc into these files.

		* birnet-zintern.cc:
		* birnettests.h: namespace fixups.

		* configure.inc: detect windows operating system.

	Fri Oct  6 18:53:30 2006  Tim Janik  <timj@gtk.org>

		* birnet.hh: renamed from birnet.h.

		* tests/ring.cc:
		* birnetring.[hc]: removed, moved to sfi/ as SfiRing.

		* birnetutilsxx.hh, birnetutilsxx.cc: hide implementation of ref_diag().

		* birnetutils.hh, birnetutils.cc: renamed and ported to C++ from
		birnetutils.h and birnetutils.c. changed callers.

		* birnetthread.c: ported from BirnetRing to GSList.

		* birnet-zintern.cc: C++ fixes. changed callers.

		* birnettests.h: removed C function definitions.

		* birnetmsg.hh, birnetmsg.cc: implement messaging API akeleton for C++.

		* birnetmsg.[hc]: removed. (implementation moved to Sfi)

	Sun Oct  1 13:31:47 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.hh: added Deletable docs.

	Sat Sep 30 18:00:13 2006  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignal.cc: moved virtual methods from .hh to
		.cc to emit fewer typeinfos.

		* birnetutilsxx.hh, birnetutilsxx.cc: moved DataList::NodeBase,
		Deletable and ReferenceCountImpl destructors into .cc file to emit
		fewer typeinfos.
		added class VirtualTypeid and moved cxx_demangle() into this class.
		let Deletable derive from VirtualTypeid to have typeid methods available
		for allmost all virtual classes. renamed Deletable::DestructionHook to
		Deletable::DeletionHook for consistency.

		* tests/infotest.cc (test_virtual_typeid): test VirtualTypeid methods.

	Thu Sep 28 01:01:55 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: introduce BIRNET_CONSTRUCTOR which wraps gcc's
		"constructor" argument. as a work around for gcc-3.3, which tends
		to forget to emit code for static constructor functions if
		-finline-functions is activated, also add attribute "used".

		* birnetthread.h:
		* birnetmsg.h: use BIRNET_CONSTRUCTOR to declare constructor functions.

		* tests/threads.cc: added a check for proper constructor function
		invokation before main().

	Mon Sep 25 02:10:43 2006  Tim Janik  <timj@gtk.org>

		* birnetsignalslot.hh: fixed reference handling for Data slots, so
	        reference types are supported as Data argument (they need to implement
	        operator==() though).

		* tests/signal.cc: added data reference slot creation.

	Thu Sep 21 00:16:05 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.h, birnetutilsxx.cc: added birnet_cxx_demangle() and
		cxx_demangle() to easily demangle C++ names.

	Sat Sep 16 15:14:32 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.c (birnet_malloc_aligned): fixed alginment adjustment so
		this function *really* returnes aligned memory. added check on whether
		malloc already aligned the memory the way we wanted it.

	Sat Sep 16 09:20:49 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetutils.[hc]: Added birnet_malloc_aligned(), which allocates
		memory with an arbitary alignment. The caller is responsible for
		for keeping track of and freeing the unaligned memory.

	Tue Sep 12 01:41:18 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.cc (rip_data): fix missing updates of 'last' pointer
		wich caused data loss.

	Thu Aug 23 21:21:00 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h, birnetutilsxx.hh: always use global uint definition
		(either from types.h or from a fallback definition) to avoid
		ambiguities.

	Mon Aug 21 01:03:24 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.h, birnetutils.c: added birnet_memset4(), a function to
		fill large memory regions with data of 32bit integer width.

	Tue Jul 18 01:14:22 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.cc: use birnet_*__chain4init() and
		birnet_*__unchain() functions to construct initializer lists for
		mutexes and conditions. that way we don't require std::list to be
		constructed at static mutex construction time (which can be a
		problem).

		* birnetthread.h, birnetthread.c: provide chain4init and
		unchain variants for recursive mutexes and conditions. this required
		reordering of the BirnetRecMutex fields. provide static declaration
		macros for recursive mutexes and conditions in C.

		* birnetsignalslot.hh: hook trampolines into the destruction phase
		of a Deletable, if the instance of a method trampoline is a Deletable.
		as a side effect of this, slot-= only works for Deletable instance
		methods, *before* the instance is deleted.

		* birnetsignal.hh: provide VoidSlot and BoolSlot for convenience.

		* birnetutilsxx.hh, birnetutilsxx.cc: implemented class
		Deletable::DestructionHook which allowes hooking up (thread safe) of
		callbacks into the destruction phase of a Deletable.

		* tests/signal.cc: added tests for signal connections on temporary
		objects that trigger Deletable destruction hooks.

		* tests/threads.cc: test statically declared recursive mutextes and
		conditions in C.

	Fri Jul  7 02:15:50 2006  Tim Janik  <timj@gtk.org>

		* tests/infotest.cc: implement file tests in terms of the C++ API
		which also checks the C implementation.

		* birnetutilsxx.[hc][hc]: added Path::chek() and Path::equals().

		* birnetutils.c: document birnet_file_equals().

	Fri Jul  7 01:51:35 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.[hc]: moved birnet_file_check() and birnet_file_equals()
		from beast/sfi/ here. fixed socket file type test.

		* tests/infotest.cc: added test for file type checks.

		* tests/Makefile.am:
		* Makefile.am: removed bogus $LIBZ which should be part of $BIRNET_LIBS.

		* configure.inc: check for zlib.h and -lz and provide $LIBZ as part
		of $BIRNET_LIBS

	Thu Jul  6 23:43:06 2006  Tim Janik  <timj@gtk.org>

		* birnet-zintern.c: gen_zfile(): add "+ 1" to the dumed data array size
		because g++ refuses to initialize non 0-terminated strings and murns
		about the array size.

	Thu Jul  6 23:18:46 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.[hc]: added birnet_zintern_decompress(), based on
		gxk_zfile_uncompress().

		* tests/Makefile.am: link against $LIBZ.

		* tests/infotest.cc: added zintern test.

	Thu Jul  6 22:40:58 2006  Tim Janik  <timj@gtk.org>

		* birnet-zintern.c: some fixups and renames.

		* Makefile.am: build birnet-zintern.

		* dummy.cc: dummy C++ file for linking C binaries.

	Thu Jul  6 22:25:13 2006  Tim Janik  <timj@gtk.org>

		* birnet-zintern.c: CVS copied from beast/bse/zintern/zintern.c.

	Thu Jul  6 22:07:54 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.[hc]*: moved dirname and basename into Path:: namespace.
		added isabs(), skip_root(), join().

		* tests/infotest.cc: test Path:: functions.

	Wed Jul  5 01:54:59 2006  Tim Janik  <timj@gtk.org>

		* birnetutils.c (birnet_url_test_show): added logic to restart browser
		executable checks if none was found to be working. added support for the
		"xdg-open" browser launching script.

		* birnetutils.[hc]: moved url opener code and cleanup handler code from
		GXK here. provide:
		birnet_url_show(): show an url, show an error if no browser is present.
		birnet_url_show_with_cookie(): same as birnet_url_show() albeit setting
		a cookie before hand and then redirecting automatically to the actual url.
		birnet_url_test_show(): show an url, return false if no browser is present.
		birnet_url_test_show_with_cookie(): same as birnet_url_show_with_cookie()
		with false return code instead of a warning.
		birnet_cleanup_add(): register a cleanup handler with the default main loop.
		birnet_cleanup_force_handlers(): force cleanup handler execution prematurely.

		* tests/threads.cc: test static C mutex.

		* birnetthread.[hc]: added support for static mutexes in C via:
		static BIRNET_MUTEX_DECLARE_INITIALIZED (mutexname);

		* birnetcore.h: provide BIRNET_CPP_PASTE[234]().

		* birnetmsg.h: use BIRNET_CPP_PASTE4().

	Wed Jun 21 23:38:35 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: define _GNU_SOURCE for the birnet programming environment,
		to automatically get GNU extensions like dprintf(), large file, uint, ...

	Wed Jun 21 02:13:38 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: provide versioning information and BIRNET_SIZEOF_SYS_TYPESH_UINT.

		* birnetcore.h: include <sys/types.h> for uint, ssize and other types.
		used gcc modes to define type width now. resolve clashes when defining
		uint by checking BIRNET_SIZEOF_SYS_TYPESH_UINT.

		* birnetthreadxx.cc: fixed missing ThreadDescendant() constructor which
		the gcc-4.2.0 snapshot 20060530 failed to catch.

		* tests/datalist.cc: make all data keys static, otherwise we get crashes
		due to mixed up destruction order. (data keys should always be static).

		* tests/infotest.cc: added a simple test for BIRNET_CHECK_VERSION().

		* configure.inc: provide birnet versioning information. check for uint
		in <sys/types.h>.

	Sun Jun 18 03:11:35 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh, birnetthreadxx.cc: provide Thread::Self::exit().

		* birnetthread.h, birnetthread.c: provide birnet_thread_exit().

	Fri Jun 16 01:28:35 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.cc: initialize GThread as early as possible.
		minor cleanups.

	Tue Jun 13 01:51:18 2006  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh: renamed SignalBase::Link to TrampolineLink.
		fixed SlotBase::~SlotBase() to not leak trampoline reference
		counts. renamed link accessor to SlotBase::get_trampoline_link() and
		fixed callers.

		* birnetsignalslot.hh: added Slot*::get_trampoline() method to all
		Slot* classes to access the trampoline in a type safe manner.

		* tests/signal.cc: added a test for trampoline accesses on slots.

	Mon Jun 12 01:06:47 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.hh: moved template declarations from bsecxxutils.hh
		here, to signal template usage errors.
		added function TEMPLATE_ERROR::invalid_type<>();
		added class TEMPLATE_ERROR::InvalidType<>;

	Sun Jun 11 23:48:59 2006  Tim Janik  <timj@gtk.org>

		* birnetthread.c: destruction phase fixups.
		birnet_thread_unref(): ensure all callback related destruction has
		already taken place when ref_count drops to 0.
		birnet_thread_handle_exit(): call C++ destruciton logic.

		* birnetthreadxx.cc: moved magic trhread implementation bits into
		Thread::ThreadWrapperInternal.

		* birnetthreadxx.hh: added OwnedMutex to Thread. cleaned up magic
		implementation bits. provide Thread::Self::owned_mutex().
		provide DataListContainer API by reimplementation for thread safety.

		* tests/datalist.cc: test Thread DataListContainer API.

		* tests/threads.cc: minor adjustments.

	Sun Jun 11 19:47:27 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.hh, birnetutilsxx.cc: moved DataList implementation here
		from Rapicorn. this provides the API types DataKey and DataListContainer.

		* tests/datalist.cc: DataList test, adapted from Rapicorn.

		* birnettests.h: made TASSERT() more verbose if TEST_VERBOSE is defined.

	Sun Jun 11 19:02:05 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: provide STRFUNC if _BIRNET_SOURCE_EXTENSIONS is defined.

	Fri Jun  9 19:54:52 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h (birnet_init_test): check that NULL is defined to __null
		in C++ on 64bit.

	Fri Jun  9 19:50:24 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: allow multiple invocations of relock() without
		unlock() on an auto locker and have the auto locker clear up these
		locks in its destructor. i.e. added a lock counter to auto locker.

		* birnetthreadxx.cc (_birnet_init_threads_cxx):
		avoid std::list::size() which is O(N).

		* test/threads.cc: moved former AutoLocker here as GenericAutoLocker,
		added it to auto locker benchmarks. added a test to check auto locker
		lock counting.

	Thu Jun  8 00:00:10 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh, birnetthreadxx.cc: added initialization queues for
		mutexes and conditions to allow static mutexes and conditions. however,
		locking/unlocking of course still only works *after* threading
		initialization.

		* birnetthread.h:
		* birnetthread.c: added birnet_threads_initialized() and a C++ threading
		initialization hook.

		* test/threads.cc: test static mutexes.

	Wed Jun  7 20:14:14 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: turned OwnedMutex into a recursive mutex.
		* birnetthreadxx.cc: turned OwnedMutex into a recursive mutex.
		* tests/threads.cc (test_thread_cxx): adapted tests.

	Wed Jun  7 20:00:03 2006  Tim Janik  <timj@gtk.org>

		* birnetmsg.c: fixed up atomic accessors.

		* birnetthread.h: fixed up atomic accessors, introduced atomic_uint
		functions.

		* birnetthreadxx.cc:
		* birnetthread.c: fixed up C++ thread pointer implementation.

		* birnetthreadxx.cc, birnetthreadxx.hh: added OwnedMutex.

		* tests/threads.cc: test OwnedMutex.

	Tue Jun  6 16:53:40 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Check that C++ constructors and destructors and
		the AutoLocker constructor and destructor will be executed in the
		order we need, that is: an AutoLocker that is created before an object
		should protect its constructor and destructor, an AutoLocker created
		after an object should not affect its constructor and destructor.

	Tue Jun  6 16:47:23 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: got rid of the extra locker pointer by using a
		(void*) and static_cast(). added new assertions. const-optimized code.

		* birnettests.h (TEST_CALIBRATION): give a tiny bit more time for
		calibration to increase accuracy somewhat.

		* threads.cc: adapted auto locker test counts to be more precise.
		added a new benchmark for the former birnet AutoLocker implementation
		which doesn't cast memory but stores an additional pointer.
		adapted AutoLocker assertion code which now uses a protected method.

	Tue Jun  6 14:34:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Fixed bug in auto locker benchmark. It is
		necessary to take into account that the different loops will run with
		a different number of dups; so the times need to be adjusted
		accordingly.

	Tue Jun  6 02:03:07 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: reimplemented the AutoLocker class with the help of
		an inlined template wrapper object. all types of lockable objects are
		now supported, and the new implementation is actually faster.

		* threads.cc: call assert_impl() on the new auto locker which assert
		crucial implementation assumptions. added auto locker benchamrks for
		the former birnet implementation, an early heap based prototype and
		the current implementation.

	Mon Jun  5 18:04:19 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: added support for atomic const pointer access.
		fixed missing return value cast in Atomic::ptr_get().

	Mon Jun  5 17:51:42 2006  Tim Janik  <timj@gtk.org>

		* birnetthreadxx.hh: fixed up AutoLocker member names.
		added support for initialization from mutex pointers.

		* tests/threads.cc: extended AutoLocker test to check constructors
		from mutex pointers.

	Mon Jun  5 14:09:45 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.hh (binary_lookup_fuzzy): use unsigned types for offs
		and n_elements to extend the range of binary lookups from 2^31 to 2^32.

	Mon Jun  5 13:55:59 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: added TCHECK() which can be used like TASSERT() but
		doesn't print a mark. (silent assertion, usefull for *many* tests).

		* birnetutilsxx.hh: moved templates binary_lookup_insertion_pos(),
		binary_lookup_sibling() and binary_lookup() from bsecxxutils.hh here.

		* tests/sorting.cc: new test which tests various binary lookups.

	Wed May 31 18:19:30 2006  Tim Janik  <timj@gtk.org>

		* tests/threads.cc (test_recursive_auto_lock): minor extensions to the
		AutoLocker test case. fixed formatting.

	Wed May 31 15:48:35 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Add some AutoLocker test code.

		* birnetthreadxx.hh: Provide Birnet::AutoLocker class which locks a
		mutex on construction, and automatically unlocks it on destruction, so
		that putting an AutoLocker object on the stack conveniently ensures
		that the mutex will be properly unlocked for instance when the
		function returns or an exception gets thrown.

	Fri May 26 17:38:00 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: define BIRNET_*LIKELY() macros.

	Fri May 26 14:01:45 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.[hc]*: added dirname() and basename().
		provide PRIVATE_CLASS_COPY() as birnet source extension.

		* birnetcore.h: provide BIRNET_DIR_SEPARATOR, BIRNET_SEARCHPATH_SEPARATOR
		and related macros.

	Fri May 26 13:42:59 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: provide ABS, MIN, MAX, CLAMP.

	Sat May 20 15:34:05 2006  Tim Janik  <timj@gtk.org>

		* birnetutilsxx.cc (birnet_init_extended): added srand48() call to random
		number initializations.

		* birnettests.h: expose birnet_test_setup(). initialize birnet
		with stand-alone=true for test programs to prevent rcfiles and the like
		to taint test results.

		* birnetutilsxx.cc:
		* birnetcore.[hc]: added BirnetInitValue and accessors to get values of
		different types. added birnet_init_extended() and birnet_init_settings.

	Wed May 10 00:07:16 2006  Tim Janik  <timj@gtk.org>

		* birnetthread.c: minor protability fix for sched_yield().

		* birnetthreadxx.cc: use birnet_thread_yield().

	Tue May  9 22:55:08 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h (TEST_CALIBRATION): give up the current time slice
		before calibrating, this can stabelize the loop on some OSes.

		* birnetthread.[hc]: implemented birnet_thread_yield().

	Tue May  9 22:50:23 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetutilsxx.cc (birnet_init): Initialize rand()'s random generator
		seed via gettimeofday.

	Mon Apr 24 21:38:55 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnettests.h (TEST_CALIBRATION): Ensure that TEST_CALIBRATION
		returns at least 1. Before this change, a return value of 0 would be
		possible for very slow test code.

	Mon Apr 24 19:26:04 2006  Tim Janik  <timj@gtk.org>

		* birnetthread.c (get_pth_thread_table): use fputs() to print messages
		when starting up the thread system. g_message() and friends are not
		yet usable.

	Sat Apr 22 17:54:12 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h (TEST_CALIBRATION): comment and whitespace fixups.
		consolidated code bloat. tweaked timing bounds to speed up calibration
		runs. use g_printerr() for printouts.

	Sat Apr 22 13:25:54 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnettests.h: Added TEST_CALIBRATION macro, which allows benchmark
		tests to figure out how often to perform a test for a given CPU.
		Besides the actual benchmark code, it allows the programmer to specify
		how much time the bencharking should take, and a suitable number of
		repetitions for the test code is computed.

		* birnetutilsxx.cc: Use g_path_get_basename() to call g_set_progname()
		with the application name only (without the full path).

	Sat Apr 15 03:36:21 2006  Tim Janik  <timj@gtk.org>

		* birnetcpu.c (birnet_cpu_info_string): added proper CPU prefixing.

	Sat Apr 15 03:18:53 2006  Tim Janik  <timj@gtk.org>

		* birnetcpu.[hc]: do runtime detection of the CPU type and
		the CPU features. in particular, detect the available (SIMD)
		instruction sets at runtime. currently supports i368 and
		amd64 via CPUID.

		* birnetcore.h: provide wrapper macros for GCC attributes.

		* tests/infotest.cc: test the CPU info API.

	Tue Apr 11 23:37:32 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: make dist fixes.

	Wed Apr  5 02:11:07 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: removed unused TFAIL() macro. TERROR() is more
		elaborate anyway and can be used instead.

	Tue Apr  4 21:58:49 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: allow printf-style arguments to TSTART().
		added TERROR() to forcefully abort.

	Mon Apr  3 23:00:15 2006  Tim Janik  <timj@gtk.org>

		* birnettests.h: add macros and convenience functions useful for
		test programs.

		* tests/signal.cc:
		* tests/threads.cc:
		* tests/ring.cc: use test macros.

		* tests/Makefile.am:
		* tests/testutils.h: removed entirely in favour of birnettests.h.

	Sun Apr  2 03:28:04 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: provide ISLIKELY() as alias for LIKELY().

		* birnetsignaltemplate.hh:
		* birnetsignal.hh:
		* tests/signal.cc: fixed assertions.

		* birnetutilsxx.hh: fixed primitive type ambiguities.

		* Makefile.am: -D_BIRNET_SOURCE_EXTENSIONS is provided by Makefile.decl.

		* tests/Makefile.am: DEFS is defined by Makefile.decl.

	Thu Mar 30 19:34:07 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: changed switch macro for birnet extensins
		to _BIRNET_SOURCE_EXTENSIONS.

		* birnetcore.h: added more return_if_fail and assertion macros
		plus shorthands.

		* birnet.h:
		* mksignals.sh:
		* birnetsignal.hh:
		* birnetsignalslot.hh:
		* birnetsignaltemplate.hh: added C++ signal system.
		* ChangeLog: added old signal system change entries.

		* tests/signal.cc: test the C++ signal system.

		* configure.inc: added libtool workaround for missing -lpthread.

	    Wed Dec 28 01:07:43 2005  Tim Janik  <timj@gtk.org>

		* birnetsignaltemplate.hh: added disconnect() and
		corrsponding -= operators.

		* birnetsignal.hh: added operator== to signal handler
		links, to allow disconnections. implemented disconnect_equal_link()
		for signal links.

		* mksignals.sh:
		* birnetsignalslot.hh: renamed handler to trampoline.
		added slot() constructor for signals + emit() method. with this,
		slot(sig_some_signal) can be connected and disconnected.

		* tests/signal.cc: signal handler data must implement operator== now.

	    Wed Jul  6 20:06:05 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh: added struct CollectorUntil0 signal
		collector template. predefine SignalVoid for void(void) signals.

	    Mon Apr 18 23:10:21 2005  Tim Janik  <timj@gtk.org>

		* mksignals.sh: /bin/sh is more protable than bash.

	    Sun Apr 17 19:06:31 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh: introduce ScopeReference to keep an
		instance referenced within block scope. added SignalFinalize
		which does not need the emitter to be ref/unref-ed around emit(),
		but instead asserts its in finalization stage. cleanups.
		* birnetsignaltemplate.hh: use ScopeReference.

		* tests/signal.cc: removed cruft.

	    Wed Mar 30 00:52:05 2005  Tim Janik  <timj@gtk.org>

		* birnetsignalslot.hh: moved signal handler and slot
		definitions here. there're no emitter handlers/slots anymore.
		support extra data argument for function and method handlers.

		* birnetsignaltemplate.hh: removed handlers/slots. moved
		knowledge about emitter obejct into Emission. let class Emission
		care about casting handlers correctly (with or without emitter arg),
		cleaned up signal methods some.

		* birnetsignal.hh: removed HandlerBase, ReferencableBase.
		added with_emitter flag to signal handlers. made SlotBase a regular
		class, rather than a template.

		* mksignals.sh: fixed line numbers. allow 17 arguments.
		allow specification of maximum argument count.

		* tests/signal.cc: test data handlers and emitter-less ahndlers.

		* Makefile.am: generate birnetsignalvariants.hh from
		birnetsignalslot.hh (we need 0..17 argument handlers) and
		birnetsignaltemplate.hh (for 0..16 argument signals).

	    Tue Mar 29 17:00:08 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignal.cc: namespace change
		to namespace Signals. added EmissionBase, extended SignalBase to
		maintain a signal handler list as ring data structure. removed
		accumulators, added Collectors, added Signature template to extract the
		return type of a function type for functions with up to 16 arguments.
		include birnetsignalvariants.hh to define all signal variants.

		* birnetsignaltemplate.hh: implement signal with emission and
		handlers etc, for exactly 3 signal arguments.

		* mksignals.sh: generate signal variants for 0..16 signal
		arguments from birnetsignaltemplate.hh.

		* Makefile.am: generate birnetsignalvariants.hh.

		* tests/signal.cc: test signal variants for 0..16 arguments with void
		and other return types.

	    Mon Mar 28 10:12:34 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignaldefs.hh:
		moved signals into an extra Signal namespace, renamed Signal::Closure
		to Signal::Handler.

	    Mon Mar 28 10:01:06 2005  Tim Janik  <timj@gtk.org>

		* birnetsignaldefs.hh: disabled signal generation.
		added test implementation of a 3 argument signal which supports passing
		the emitter object as first argument to signal handlers.

		* tests/signal.cc: disabled old signal tests.
		added test for 3 argument signal variant, currently implemented in
		birnetsignaldefs.hh.

	    Sun Mar 27 19:52:12 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignalinc.hh:
		* birnetsignaldefs.hh:
		rudimentary signal (callback list) implementation for C++.

		* tests/signal.cc: test signals.

	Thu Mar 30 19:12:29 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h:
		* birnetutilsxx.cc: added argc/argv to birnet_init().
		propagated change and changed callers.

	Sun Mar 19 22:26:02 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: compile with -DBIRNET_FEATURES.
		fixed up birnetconfig.h generation.

		* birnetthread.h:
		* birnetthread.c:
		moved BirnetThreads to a reference counted model, to
		execute a thread, birnet_thread_start() must be called now.
		birnet_thread_run() will now create a thread and automatically
		start it, the returned thread structure must be unrefed.
		always demand a well formed thread name. added C++ hooks.
		use 64bit data types for time ranges. some atomic fixes.
		birnet_thread_get_aborted(): return whether a thread got aborted.
		birnet_thread_get_running(): return whether a thread is
		currently running.
		birnet_thread_wait_for_exit(): block until the thread has exited.

		* birnetthreadxx.hh:
		* birnetthreadxx.cc: provide a C++ API for threads. added classes
		Mutex, RecMutex, Cond, Atomic, Thread and Thread::Self.

		* birnetutils.h:
		* birnetutils.c: added for C utilities.

		* birnetutilsxx.hh:
		* birnetutilsxx.cc: define fundamental types in the Birnet:: namespace.
		moved birnet_init() hook logic here. added ReferenceCountImpl class,
		which implements atomic reference counting for objects.

		* birnetcore.h: define BIRNET_STATIC_ASSERT() and
		BIRNET_ASSERT(), removed C++ code. define standard types,
		such as uint64 and unichar.

		* birnetcore.c: removed birnet_init() implementation.

		* birnetcore.hh:
		* birnetcore.cc: removed entirely.

		* tests/threads.cc: extended tests, added C++ tests.

	Fri Mar 17 19:41:50 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: CVS copied from birnetcore.hh.

		* birnetcore.c: CVS copied from birnetcore.cc.

	Thu Mar  9 18:06:55 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: install birnet.h.

	Thu Mar  9 02:57:33 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.cc (birnet_init): allow double initialization.

	Thu Mar  9 01:50:07 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: generate partial library libbirnet.o.

		* birnet.h: combine include header.

		* birnetcore.hh:
		* birnetcore.cc: provide birnet_init() and provide initialization
		hook funcitonality for C++.

		* birnetthread.c: fixed thread start syncronization races.

	Tue Mar  7 19:50:01 2006  Tim Janik  <timj@gtk.org>

		* Makefile.am: fix dependency.

	Tue Mar  7 03:06:55 2006  Tim Janik  <timj@gtk.org>

		* configure.inc: define AC_BIRNET_REQUIREMENTS() to perform configure
		checks for libbirnet.la.

	Tue Mar  7 02:56:25 2006  Tim Janik  <timj@gtk.org>

		* tests/threads.cc: added BirnetThread from sfi/testsfi.c.
		also added a test for atomic integer increments.

		* tests/testutils.h: utility functions for tests.

		* tests/ring.cc: added BirnetRing tests from sfi/testsfi.c.

		* tests/Makefile.am: build and check test programs.

	Tue Mar  7 02:34:38 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: build rules for libbirnet.la.

	        * birnetmsg.[hc]: slight atomicity fixes.

	        * birnetring.[hc]: removed non ring related cruft.
	        added docs to some ring functions.

	        * birnetthread.[hc]: fixed atomic functions. fixed
	        birnet_thread_run() race by letting newly created threads
	        sleep until birnet_thread_run() completed its setup.
	        allocate per-thread BirnetCond as part of the thread structure.
	        fixed thread handle leaks in birnet_thread_run() by introducing
	        birnet_thread_handle_free().
	        fixed accounting accuracy in thread_info_from_stat_L() by reading
	        out /proc/%u/task/%u/stat files which provide per-thread info,
	        instead of using getrusage(). renamed mutex macros.
		support GSlice. cache getpid(). added birnet_init().

	Tue Mar  7 02:45:06 2006  Tim Janik  <timj@gtk.org>

		* birnetmsg.[hc]:
		* birnetring.[hc]:
		* birnetthread.[hc]: Sfi -> Birnet rename.

	Mon Mar  6 20:28:02 2006  Tim Janik  <timj@gtk.org>

		* birnetmsg.[hc]: CVS copied from beast/sfi/sfilog.[hc].

	Mon Mar  6 20:24:04 2006  Tim Janik  <timj@gtk.org>

		* birnetthread.[hc]: CVS copied from beast/sfi/sfithreads.[hc].

		* birnetring.[hc]: CVS copied from beast/sfi/sfiprimitives.[hc].

	svn path=/trunk/; revision=4478

2008-06-12  Stefan Westerfeld 	# 01cace635727cb4065e4bfa194426ec5deee8598

	NEWS: Some fixes due to review from Tim.

	Thu Jun 12 12:28:40 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* NEWS: Some fixes due to review from Tim.

	svn path=/trunk/; revision=4477

2008-06-11  Stefan Westerfeld 	# 707b022f25c7ed0f84fd871530a26c49bae18552

	Improved Category entry for beast.desktop.in

	Wed Jun 11 17:25:26 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* data/beast.desktop.in: Improved Category entry with changes
		from Debian. Now includes Audio, Midi and Sequencer categories.

	svn path=/trunk/; revision=4476

2008-06-11  Stefan Westerfeld 	# 7ef80d3fde8263228358797ad02e437410ed49e5

	Update NEWS file.

	Wed Jun 11 15:17:37 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* NEWS: Include changes between 0.7.1 and 0.7.2.

	svn path=/trunk/; revision=4475

2008-06-11  Yannig MARCHEGAY 	# bac90d68ecaa418d1846081bc336fc0773644da3

	Updated Occitan translation

	svn path=/trunk/; revision=4474

2008-06-08  Stefan Westerfeld 	# d716b59adeb0a6072d41671e4982b2a0608b1497

	Removed bashism from mksignals.sh.

	Sun Jun  8 11:19:57 2008  Stefan Westerfeld  <stefan@space.twc.de>

		* mksignals.sh: Removed bash specific syntax as suggested by Chris
		Lamb (debian bug #472659).

	svn path=/trunk/; revision=4473

2008-06-04  23:52:21  Tim Janik 	# ec56d206d744184397ab75045edeafeb32856540

	Added versioned sample dir to search path.

	2008-06-04 23:52:21  Tim Janik  <timj@gtk.org>

	        * configure.in: renamed bse*sample*dir variables to be less ambiguous.

	        * data/Makefile.am: added versioned sample dir to search path.

	        * library/samples/Makefile.am: renamred variables accordingly.

	svn path=/trunk/; revision=4472

2008-06-04  Tim Janik 	# 3b1bace4cda31a474fb65df1154fe1e699d984db

	shell/Makefile.am: fixed binary installation check rule

	svn path=/trunk/; revision=4471

2008-06-04  22:17:33  Tim Janik 	# 398c47d66302b5c569d8a478b660e1f22e2c4456

	bse-alsa: depend on BSE >= 0.7.2.

	2008-06-04 22:17:33  Tim Janik  <timj@gtk.org>

	        * configure.in: depend on BSE >= 0.7.2.

	svn path=/trunk/; revision=4470

2008-06-04  22:12:00  Tim Janik 	# 93f20ec45ff66d6d269713dd2befe9ebd11e3c83

	configure.in: updated version to 0.7.2.

	2008-06-04 22:12:00  Tim Janik  <timj@gtk.org>

	        * configure.in: updated version to 0.7.2.

	svn path=/trunk/; revision=4469

2008-06-04  21:42:47  Tim Janik 	# 8becb1e995e84c418f174c503a0034f7567a0ce6

	it.po: updates from Michele Petrecca.

	2008-06-04 21:42:47  Tim Janik  <timj@gtk.org>

	        * it.po: updates from Michele Petrecca.

	svn path=/trunk/; revision=4468

2008-06-04  Tim Janik 	# d8f041316e8de552d337d86b62f9b9d4737368bb

	docs/imports: updated docs from testbit.eu.

	svn path=/trunk/; revision=4467

2008-06-04  Tim Janik 	# 6149a98fab7a1e220cca4dabebebd058620dfe7c

	docs/imports/Makefile.am: updated import-docs: rule to new testbit.eu chrome

	svn path=/trunk/; revision=4466

2008-06-04  Tim Janik 	# 651b5a3bb06a38e2b4c5542f7e97690d61c54bc1

	Improved "make import-docs" warning.

	svn path=/trunk/; revision=4465

2008-06-04  Tim Janik 	# ae1c386a1d82aaf9d0542d87ec8b95a3cfa0b36c

	oc.po: upate missing translation strings.

	svn path=/trunk/; revision=4464

2008-05-12  18:01:32  Stefan Westerfeld 	# cf71246f9b3d24e2d85f6db711374bb2c14a6fe8

	Improved Retrokit Acoustic Drumkit.

	2008-05-12 18:01:32  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/scripts/retrokit.sh: Improved Retrokit Acoustic Drumkit.

	svn path=/trunk/; revision=4463

2008-04-27  18:39:56  Stefan Westerfeld 	# 688f8c1e4abf7bc2700a5d4f7684a54831e789f5

	Added chunk selection options (like --chunk-key) to upsampling and

	2008-04-27 18:39:56  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Added chunk selection options (like
		--chunk-key) to upsampling and downsampling commands.

	svn path=/trunk/; revision=4462

2008-04-02  09:49:29  Stefan Westerfeld 	# 88614505f575c0836619b8e42db691dcac1d43db

	Use BIRNET_PRETTY_FUNCTION instead of G_GNUC_PRETTY_FUNCTION.

	2008-03-15 09:49:29  Stefan Westerfeld  <stefan@space.twc.de>

		* bse/bsecategories.c:
		* bse/bseutils.c: Use BIRNET_PRETTY_FUNCTION instead of G_GNUC_PRETTY_FUNCTION.

	svn path=/trunk/; revision=4461

2008-04-02  10:07:23  Stefan Westerfeld 	# db8b66fa3a2440b6c386aee13db2324c895c6266

	Added bsewavetool man page, see bug #437469.

	2008-03-16 10:07:23  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/Makefile.am:
		* docs/bsewavetool.1.doxi: Added bsewavetool man page, see bug #437469.

	svn path=/trunk/; revision=4460

2008-04-02  10:35:29  Stefan Westerfeld 	# 52c6b5abdf10a45f1f639fa44e5db60757af249a

	Added retrokit.sh.

	2008-03-16 10:35:29  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/scripts/Makefile.am:
		* tools/scripts/retrokit.sh: Added retrokit.sh.

	svn path=/trunk/; revision=4459

2008-03-26  13:59:18  Stefan Westerfeld 	# 56a51002d980ac6a8c355ec2067534c2b03f7345

	Added Retro Acoustic Drumkit with GM Layout.

	2008-03-15 13:59:18  Stefan Westerfeld  <stefan@space.twc.de>

		* library/samples/retrokit.bsewave: Added Retro Acoustic Drumkit with
		GM Layout.

	svn path=/trunk/; revision=4458

2008-03-26  10:27:02  Stefan Westerfeld 	# 81dd9043bce38eb1b877bdc0b367f00bb1a03e34

	Install bsewavetool, since it has a manual page now.

	2008-03-16 10:27:02  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/Makefile.am: Install bsewavetool, since it has a manual page
		now.

	svn path=/trunk/; revision=4457

2008-03-22  11:42:10  Tim Janik 	# a09414f24368aa0730c7c5a279a4fe23f4387e18

	bse-alsa: removed automake-1.9 max-version check.

	2008-03-09 11:42:10  Tim Janik  <timj@gtk.org>

	        * autogen.sh: removed automake max-version check because
	        automake-1.10 seems to work fine these days. suppress automake
	        warnings about GNU make features.

	svn path=/trunk/; revision=4456

2008-03-22  Tim Janik 	# 8ec536bf060f78deaae7a1aa2c9eaffde25ff6a3

	TODO: FSM rename

	svn path=/trunk/; revision=4455

2008-03-16  Stefan Westerfeld 	# 6ac4ea080e40f73bcd64f3e231b4c7ed018e7a83

	Added retrokit.sh.

	svn path=/trunk/; revision=4454

2008-03-16  Stefan Westerfeld 	# e05e9ac7f47224b93e97e1ad6711adf3d99c97d4

	Install bsewavetool, since it has a manual page now.

	svn path=/trunk/; revision=4453

2008-03-16  Stefan Westerfeld 	# e7fba236abf7c3b9224991d9791a4526a9050c5b

	Added bsewavetool man page, see bug #437469.

	svn path=/trunk/; revision=4452

2008-03-15  Stefan Westerfeld 	# 50091d4688e0a314402ccda312af946ee4dc7cd0

	Added Retro Acoustic Drumkit with GM Layout.

	svn path=/trunk/; revision=4451

2008-03-15  Stefan Westerfeld 	# 2f16bc5f5ea7addff61bf05d17aeb24187b64a70

	Use BIRNET_PRETTY_FUNCTION instead of G_GNUC_PRETTY_FUNCTION.

	svn path=/trunk/; revision=4450

2008-03-12  Stefan Westerfeld 	# 1b82aad3a0851e4c42a0fdb132a5f00fc926b193

	Added news item about the Fantasy III contest.

	svn path=/trunk/; revision=4449

2008-03-07  Sam Hocevar 	# 46678b25049dab0477ebe5a82deef8b599bee21d

	Fix alignment issues in BirnetCond and BirnetMutex by adding a long long

	  * Fix alignment issues in BirnetCond and BirnetMutex by adding a long long
	    int dummy variable in the unions. Prevents a crash on Sparc systems where
	    BirnetCond has 32-bit alignment but pthread_cond_t has a 64-bit member.

	svn path=/trunk/; revision=4448

2008-02-23  Yannig MARCHEGAY 	# 405b53f7d08ca558ad3c46fdb2b110b61a891ba9

	Updated Occitan translation

	svn path=/trunk/; revision=4447

2008-02-19  Yannig MARCHEGAY 	# 63aa10b346d8866c8930e2604a452adfefc95318

	Updated Occitan translation

	svn path=/trunk/; revision=4446

2008-02-13  Stefan Westerfeld 	# 5190bebe26413f7d00cfa6c55b58265354787a60

	TODO: removed already implemented features from TODO

	svn path=/trunk/; revision=4445

2008-01-24  22:37:55  Tim Janik 	# 0d1a178529dec23481de8bee8fc25cfc03282db7

	Support automake-1.10.

	2008-01-24 22:37:55  Tim Janik  <timj@gtk.org>

	        * autogen.sh: removed automake max-version check because
	          automake-1.10
	        seems to work fine these days. suppress automake warnings about GNU
	        make features.

	svn path=/trunk/; revision=4444

2008-01-24  21:53:47  Tim Janik 	# 2b4ba0939c5a702723a411bed94fe82f8e2aff24

	po/: updated po file.s

	2008-01-24 21:53:47  Tim Janik  <timj@gtk.org>

	        * *.po: update all po files to recent source changes
	        and to contain missing translated scheme strings.

	svn path=/trunk/; revision=4443

2007-12-31  Yannig MARCHEGAY 	# 64064bd571c1b4f8a33fbf0c247286d07c6cf8a1

	Updated Occitan translation

	svn path=/trunk/; revision=4442

2007-12-31  Yannig MARCHEGAY 	# 053153fac1ab97eeae083bcec01f5cd467027b64

	Updated Occitan translation

	svn path=/trunk/; revision=4441

2007-11-21  Yannig MARCHEGAY 	# 0efb25d11874ad3fe4b3fadffc46f89b7391c472

	Updated Occitan translation

	svn path=/trunk/; revision=4440

2007-11-15  Stefan Westerfeld 	# a0010badd1f6edcecffb4aa69c8190c6cbf13fda

	Remove obsolete wave-mono replay network.

	Thu Nov 15 23:44:54 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* zintern/Makefile.am:
		* zintern/wave-mono.bse: Remove obsolete wave-mono replay network.

	svn path=/trunk/; revision=4439

2007-11-15  Stefan Westerfeld 	# f51fc164b5576a8310bdb539b47900ee3ecbcc13

	Document various play-types, see bug #433531.

	* docs/architecture.doxi: Added documentation for adsr-wave-[12] and
	plain-wave-[12] play types.

	svn path=/trunk/; revision=4438

2007-11-15  Stefan Westerfeld 	# e181ea3b06a4e624eeee7f69f33d863ef569e3ad

	Support various play-types in bse, bug #433431.

	* bsewaveosc.[hc]: Added done output (inverse gate), which makes it
	easy to use only the wave oscillator without adsr envelope in an
	instrument.

	* zintern/Makefile.am:
	* zintern/plain-wave-[12].bse:
	* zintern/adsr-wave-[12].bse: Add zintern mono/stereo version for
	replaying samples with adsr envelope, and zintern mono/stereo bse file
	for replaying waves without envelope (for drum samples). Pitch bend
	is +/- 200 cent exponential, replay volume compatible to beast-0.7.1.

	* bsetrack.c: Use plain-wave-[12] and adsr-wave-[12] depending on
	play-type xinfo of the bsewave file.

	svn path=/trunk/; revision=4437

2007-11-15  Stefan Westerfeld 	# cdb29875f622c8027514f455871497c4d314ef82

	Fix module reset when user presses play again, bug #336766.

	* bseproject.c (bse_project_stop_playback): When this method is
	called, we need to dismiss the contexts of the BseSuper classes
	we previously created in bse_project_start_playback.

	svn path=/trunk/; revision=4436

2007-11-15  Stefan Westerfeld 	# f1327247982aeee8befefc1a2a43ae9fe2f55274

	Applied patch from #450490 by stw and fixed up some whitespaces and docs.

	Wed Oct 31 21:39:13 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/architecture.doxi: Documented the new "fine-tune" xinfo.

	Mon Nov  5 18:54:39 2007  Stefan Westerfeld  <stefan@space.twc.de>

		Added necessary code for "fine-tune" xinfo, bug #450490.

		* bsemathsignal.[hc]: Implemented bse_cent_tune(), which is similar to
		bse_cent_tune_fast(), but accepts arbitary doubles as input because it
		doesn't use a table internally.

		* tests/misctests.cc: Added test for bse_cent_tune().

		* gsldatahandle.[hc]: Implemented gsl_data_handle_fine_tune, which
		returns a fine tuning measured in cent ("fine-tune" xinfo).

		* gslwavechunk.[hc]: Cache the fine tune factor here, so that
		GslWaveOsc can access it quickly.

		* gslwaveosc.c (gsl_wave_osc_set_filter): Take fine tune factor of
		the chunk into account for step computation (and thus for filter
		computation).

	svn path=/trunk/; revision=4435

2007-11-05  Stefan Westerfeld 	# 3d93bcf7538575c8f031d089d77bead61e336d6f

	Use bse_cent_tune_fast() where appropriate, bug #450490.

	* davxtalstrings.c:
	* davorgan.c: Use bse_cent_tune_fast() which replaces
	bse_cent_factor().

	svn path=/trunk/; revision=4434

2007-11-05  Stefan Westerfeld 	# 62eca664b29ffc201ca770fe9b1ee819a8f74378

	Merge BSE_FINE_TUNE_FACTOR() and bse_cent_factor(), bug #450490.

	* bse/bseglobals.h:
	* bsemathsignal.[hc]: Merge BSE_FINE_TUNE_FACTOR() and
	bse_cent_factor() to bse_cent_tune_fast(). The resulting function
	automatically clamps its input and uses the cent table to compute its
	result.

	* bse/bseinfo.c:
	* bse/bsenote.cc:
	* bse/bsepart.h:
	* bse/bsesong.proc:
	* bse/gsloscillator-aux.c:
	* bse/tests/misctests.cc: Use bse_cent_tune_fast() where appropriate.

	svn path=/trunk/; revision=4433

2007-10-31  Stefan Westerfeld 	# 0b3aa6edd508860fb5be8f25e691a89b67f34bd3

	Fix bsewavetool info output for multichannel samples #491552.

	* tools/bsewavetool.cc: When computing the sample count and the sample
	length in seconds, take into account the number of channels.

	svn path=/trunk/; revision=4432

2007-10-30  Tim Janik 	# 85300b892811fbef4c5a1adcbf46b9416d785a77

	web/htaccess.in: fixed redirects.

	svn path=/trunk/; revision=4431

2007-10-30  Tim Janik 	# f0f4a6717086e6f4a6cd68fbc3c44ae71213d9e9

	ChangeLog: updates

	svn path=/trunk/; revision=4430

2007-10-30  Tim Janik 	# a039b934b646e5ad965fa0b0525982708372cc4d

	Removed last traces of Beast-Quickstart.

	* docs/Makefile.am: removed quickstart.doxi from EXTRA_DIST.

	* docs/beast-index.doxi: link to Beast-Quickstart now.

	* docs/site-navigation.xml: removed unused quickstart.html.

	* web/Makefile.am: removed quickstart.doxi from html targets.

	* web/htaccess.in: redirect quickstart.html to Beast-Quickstart.

	svn path=/trunk/; revision=4429

2007-10-29  Tim Janik 	# 4cd10f26139b7079af1046b4422dace0961715db

	Mon Oct 29 22:42:08 2007 +0100 Tim Janik

		docs/quickstart.doxi: removed, Beast-Quickstart is imported now.

	Mon Oct 29 21:51:18 2007 +0100 Tim Janik

		docs/imports/Makefile.am: changed rule name to import-docs, check for new docs upon distcheck.

	svn path=/trunk/; revision=4428

2007-10-29  Tim Janik 	# 0a5fc85012a12edb4dacb96d03d9b58eb4dbce58

	docs/quickstart.doxi: removed, Beast-Quickstart is imported now.

	svn path=/trunk/; revision=4427

2007-10-29  Tim Janik 	# 27f55445c0ea9de6faa31947ef15ad0f864bb90a

	docs/imports/Makefile.am: changed rule name to import-docs, check for new docs upon distcheck.

	svn path=/trunk/; revision=4426

2007-10-29  Tim Janik 	# 9562bcf84c0ca23c3825ea0663e14be8a83e72c9

	ChangeLog: updates.

	svn path=/trunk/; revision=4425

2007-10-29  Tim Janik 	# 38d5b0b8e8a6789d463960398928f4b580bcd019

	docs/imports: Imported docs from testbit.eu.

	* docs/imports/Makefile.am: handle style-append.css.

	* docs/imports/Beast-Quickstart: imported from testbit.eu.

	* docs/imports/beastdocs.css: imported from testbit.eu.

	* docs/imports/style-append.css: additional styles for beastdocs.css.

	svn path=/trunk/; revision=4424

2007-10-29  Tim Janik 	# 1473dafb44ec00c22bd9f7efe1b35e767edd9a13

	Moved Beast-Quickstart to testbit.eu.

	* beast-gtk/bstapp.c: the quickstart URL is now "html/Beast-Quickstart".

	* docs/imports/Makefile.am: download Beast-Quickstart and beastdocs.css
	from testbit.eu.

	* docs/Makefile.am: retrieve some docs from imports/.

	* configure.in: build docs/imports/Makefile.

	svn path=/trunk/; revision=4423

2007-10-28  18:12:38  Tim Janik 	# ed61e9a644c76efb214d9f99d85a8f77826cc358

	rebuilt to include strings from the latest sources and to include

	2007-10-28 18:12:38  Tim Janik  <timj@gtk.org>

	        * oc.po: rebuilt to include strings from the latest sources and to
	        include translation strings from scheme scripts.

	svn path=/trunk/; revision=4422

2007-10-14  Yannig MARCHEGAY 	# 9c7572c7587307e19a12ec68c58a260a49b8fa32

	Updated Occitan translation

	svn path=/trunk/; revision=4421

2007-10-13  Tim Janik 	# b7cc615854a5cf285c51ee53284608206dc87b71

	ChangeLog: updates

	svn path=/trunk/; revision=4420

2007-10-13  Tim Janik 	# 60503d1b462c138589d08fc678601bdb7c4744f9

	tools/bsewavetool.cc: compacted info --pretty=medium output.

	svn path=/trunk/; revision=4419

2007-10-13  Tim Janik 	# 0378b70e9eaf57d5858a81f5e8cad7f41d7fa59f

	tools/bsewavetool.cc: don't save the bsewave after reading out info, coding style fixes

	svn path=/trunk/; revision=4418

2007-10-13  Tim Janik 	# 0e8f7a6143206ca6953dd4ea3d149baac26925d7

	tools/bsewavetool.[hc]*: refactored so exec() determines need for bsewave saving

	svn path=/trunk/; revision=4417

2007-10-13  Tim Janik 	# b05402048f02a2da7393fe9dec6b9d27360129a4

	tools/bsewavetool.cc: "info" command usage fixups.

	svn path=/trunk/; revision=4416

2007-10-13  Tim Janik 	# 9ade8acbe1145ca9bb94934fc28d73b9ca4067b1

	tools/bsewavetool.cc: whitespace fixups.

	svn path=/trunk/; revision=4415

2007-10-13  Tim Janik 	# b301d56a7ea44223e430bd42cc406ac438486a90

	New bsewavetool "info" command, patch by stw from bug #454121.

		* docs/architecture.doxi: Documented label and blurb xinfos.

		* tools/bsewavetool.cc: Implemented a new bsewavetool command called
		"info", which allows users and scripts to query information about all
		or specific chunks of a bsewave file. See #454121.

	svn path=/trunk/; revision=4414

2007-10-13  Tim Janik 	# a0525807bfb4296c6c80682a05b1d8579df990e3

	ChangeLog: updates.

	svn path=/trunk/; revision=4413

2007-10-13  Tim Janik 	# f2e48642a98191c05f1209b458ebf32a9165197b

	tools/bsewavetool.cc: structure name fixup

	svn path=/trunk/; revision=4412

2007-10-13  Tim Janik 	# 2577e4ca346f3225024bd360768f53aa81516bdf

	tools/bsewavetool.cc: fixed up whitespaces.

	svn path=/trunk/; revision=4411

2007-10-13  Tim Janik 	# 46a3080e44bdf0cd7d39429d5f99c0bc09bfc8e0

	tools/Makefile.am: fixed paths for bsewavetool invocation.

	svn path=/trunk/; revision=4410

2007-10-13  Stefan Westerfeld 	# 7a98476c50facd0f498b4f6f23172b952a23eaa4

	Unit test for wave chunk keys, patch by stw from bug #450724.

	Thu Aug 23 15:56:05 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/Makefile.am:
		* tools/bsewavetool.cc: Add --unit-test option to bsewavetool, which
		for now performs checks on the wave chunk key code, and automatic
		testing to make check.

	svn path=/trunk/; revision=4409

2007-09-26  Stefan Westerfeld 	# c8c6be9e3b03e1faa0ab4d7ebea694dc7351edba

	Introduced feature for DC offset measurements: --dc-offset-db.

	Wed Sep 26 19:37:53 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Introduced feature for DC offset measurements:
		--dc-offset-db.

	svn path=/trunk/; revision=4408

2007-09-23  16:31:06  Tim Janik 	# 72d097afc616e6b237ad9ce533526d52b5c0c479

	beast-gtk/bstutils.c: fixed missing cast.

	2007-09-23 16:31:06  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (bst_gui_error_bell): cast void* into GtkWidget*
	        before accessing members.

	svn path=/trunk/; revision=4407

2007-09-22  Stefan Westerfeld 	# 06796ee90aa92d88f684be65cbea7f4d6ec8c9c7

	Added KF Fresh Water Bass instrument by Krzysztof Foltman.

	Sat Sep 22 03:57:48 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* library/instruments/Makefile.am:
		* library/instruments/kf-fresh-water-bass.bse: Added KF Fresh Water
		Bass instrument by Krzysztof Foltman.

	svn path=/trunk/; revision=4406

2007-09-21  Tim Janik 	# fc7d4242a6d5a06159b4af124d4ce3e55bcc03ce

	web/synthesis-links.doxi: updated synthesis links.

	svn path=/trunk/; revision=4405

2007-09-21  00:27:48  Tim Janik 	# d28b9fed44109b504ae5ea71f81f42a5ab10f179

	library/instruments/: updated to 0.7.2.

	2007-09-21 00:27:48  Tim Janik  <timj@gtk.org>

	        * library/instruments/kf-synth-string-sweep.bse:
	        * library/instruments/bqs-bass-drum-e8012.bse:
	        * library/instruments/bqs-fretless-bass.bse:
	        * library/instruments/bqs-moog-saw-bass.bse:
	        * library/instruments/bqs-queek-synth.bse:
	        * library/instruments/stw-iron-string.bse:
	        * library/instruments/illus-vtremolo.bse:
	        * library/instruments/kf-growl-bass.bse:
	        * library/instruments/bqs-merp-pad.bse:
	        * library/instruments/bqs-slow-hum.bse:
	        * library/instruments/bqs-syndrum.bse:
	        * library/instruments/bqs-organ.bse:
	        * library/instruments/bqs-organ.bse: updated to BSE 0.7.2.

	svn path=/trunk/; revision=4404

2007-09-21  23:50:33  Tim Janik 	# 4377f875f8ec038b27a5415549811e246f85f51a

	GUI: implemented configurable error bells.

	2007-09-20 23:50:33  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgconfig.h:
	        * beast-gtk/bstrecords.idl: added gui_enable_error_bell setting, because
	        some users dislike audible error notification in music programs.

	        * beast-gtk/bstgconfig.[hc]: added bst_gconfig_push_updates()
	        to push current config settings to code portions that cannot
	        poll configuration options.

	        * beast-gtk/bstutils.[hc]: provide bst_gui_error_bell() to enable
	        configuration of error bells, and to issue error bells on the right
	        display.

	        * *.c: changed callers of gdk_beep() to use bst_gui_error_bell().

	        * beast-gtk/gxk/gxkstatusbar.[hc]: allow enabling/disabling of
	        error bell via gxk_status_enable_error_bell().

	svn path=/trunk/; revision=4403

2007-09-20  Stefan Westerfeld 	# 1684e107d4afd0e59724c88d46597bc04d48fbe2

	Added KF Growl Bass instrument by Krzysztof Foltman.

	Thu Sep 20 23:30:35 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* library/instruments/Makefile.am:
		* library/instruments/kf-growl-bass.bse: Added KF Growl Bass
		instrument by Krzysztof Foltman.

	svn path=/trunk/; revision=4402

2007-09-20  22:59:29  Tim Janik 	# 46ffac032270ad2527877315b5c385770e26ed4b

	beast-gtk/bsttrackview.c: guard against item destruction, bug #451086.

	2007-09-20 22:59:29  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c (track_view_fill_value): guard against
	        non-existing items when querying object properties, fixes bug #451086.

	svn path=/trunk/; revision=4401

2007-09-20  22:16:19  Tim Janik 	# c5768dba09c647fb9fdfa732436b6729a89ce3b1

	bseamplifier.cc: fixed whitespaces and extra variables.

	2007-09-20 22:16:19  Tim Janik  <timj@gtk.org>

	        * bseamplifier.cc: fixed whitespaces and extra variables.

	svn path=/trunk/; revision=4400

2007-09-20  21:59:18  Tim Janik 	# bdc82ab73f66a2c69ae2f603cdced57b08cbb62f

	bseamplifier.cc: fixed bug #474244 where multiplied control signals got halved.

	2007-09-20 21:59:18  Tim Janik  <timj@gtk.org>

	        * bseamplifier.cc: fixed bug #474244, based on a patch by Stefan
	        Westerfeld which changes multiplied control signals to not get
	        halved as we do with summated signals to constrain the range to [0,1].
	        compatibility code handles value adjustments for bse files <= 0.7.1.

	svn path=/trunk/; revision=4399

2007-09-20  20:41:30  Tim Janik 	# e655c195c8783b21f042f942345069a231fc18d2

	bsestorage: support versioned BseObject.restore_finished() method.

	2007-09-20 20:41:30  Tim Janik  <timj@gtk.org>

	        * bsebus.c:
	        * bsestorage.c:
	        * bseobject.h, bseobject.c: pass BseStorage version information on in
	        restore_finish() methods.

	        * bsecxxbase.hh, bsecxxbase.cc: introduced restore_finished() virtual
	        method, so C++ modules can execute version specific compat code after
	        after it has been restored from serialized object state.

	svn path=/trunk/; revision=4398

2007-09-20  20:08:16  Tim Janik 	# 32c0ce255881d0fa4b912e3c6e1f74a2dc10eea7

	plugins/bseamplifier.cc: fixed compat proeprties, bug #474332.

	2007-09-20 20:08:16  Tim Janik  <timj@gtk.org>

	        * bseamplifier.cc:
	        property_changed(): fixed missing property notifies and compat
	        property handling wrg to audio levels and ctrl_balance, fixes
	        bug #474332.

	svn path=/trunk/; revision=4397

2007-09-20  18:33:33  Tim Janik 	# a01fe1e776841e217b67ab0766423a536a7948c4

	Makefile.am: fix po/POTFILES.in in dist-hook.

	2007-09-20 18:33:33  Tim Janik  <timj@gtk.org>

	        * Makefile.am (dist-hook): fix po/POTFILES.in to exclude non-distributed po files.

	svn path=/trunk/; revision=4396

2007-09-20  Tim Janik 	# 265996bc70d1c5f439cbda0f8bed6be1367423b1

	po/POTFILES.in: removed non-existant plugins/davorgan.cc.

	svn path=/trunk/; revision=4395

2007-09-20  Stefan Westerfeld 	# 1b40929967fbe7c8b26e0d7f92cda3b0ac9519ed

	bse-alsa: fix make distcheck.

	Thu Sep 20 16:09:23 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am: Added a missing file to EXTRA_DIST - beasts
		make distcheck succeeds here now (with po directory alsa patch)

	svn path=/trunk/; revision=4394

2007-09-20  Stefan Westerfeld 	# 81333a56dad99bf89012550e6f26501a7dd451da

	Added a missing file to EXTRA_DIST - beasts make distcheck succeeds here

	Thu Sep 20 16:09:23 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am: Added a missing file to EXTRA_DIST - beasts
		make distcheck succeeds here now (with po directory alsa patch)

	svn path=/trunk/; revision=4393

2007-09-18  Stefan Westerfeld 	# 590f590f248dc3e6a651040273eba3053e07868e

	bsewavetool normalize is implemented now

	svn path=/trunk/; revision=4392

2007-09-18  Stefan Westerfeld 	# 189a7ea2b2269094c54243a36a5bf85662695cee

	tracks are now default connected after midi import

	svn path=/trunk/; revision=4391

2007-09-18  Tim Janik 	# b93f608662878faee736861604c22ec801e55077

	po-helper.sh: fixed up to 0.7.2

	svn path=/trunk/; revision=4390

2007-09-18  02:50:22  Tim Janik 	# c0cbb17a05dea38f075ea321da5e9f05cfa2d43e

	updated version to 0.7.2-rc1, interface age 0, binary age 0.

	2007-09-18 02:50:22  Tim Janik  <timj@gtk.org>

	        * updated version to 0.7.2-rc1, interface age 0, binary age 0.

	svn path=/trunk/; revision=4389

2007-09-18  02:50:53  Tim Janik 	# 3a47b86c5993ae35f4806ba67b477d52d2986d70

	updated version to 0.7.2, interface age 0, binary age 0.

	2007-09-18 02:50:53  Tim Janik  <timj@gtk.org>

	        * updated version to 0.7.2, interface age 0, binary age 0.

	svn path=/trunk/; revision=4388

2007-09-18  02:27:58 Tim Janik 	# 1c76d37023ab16a79da8156e1ee0f44e73b881ca

	added G_GNUC_NULL_TERMINATED to function ellipsis, patch by Stefan

	2007-09-18 02:27:58 Tim Janik <timj@gtk.org>

	        * beast-gtk/bstmenus.h:
	        * beast-gtk/bstprocedure.h:
	        * beast-gtk/bstutils.h:
	        * beast-gtk/gxk/gxkutils.h:
	        * tools/sfiutils.h: added G_GNUC_NULL_TERMINATED to function ellipsis,
	        patch by Stefan Westerfeld from bug #344388.

	svn path=/trunk/; revision=4387

2007-09-18  02:25:33 Tim Janik 	# 5f6838abce55f4622a1acb501f3987e7993e96b2

	added G_GNUC_NULL_TERMINATED to function ellipsis, patch by Stefan

	2007-09-18 02:25:33 Tim Janik <timj@gtk.org>

	        * bse/bsecxxbase.hh:
	        * bse/bseengine.h:
	        * bse/bseitem.h: added G_GNUC_NULL_TERMINATED to function ellipsis,
	        patch by Stefan Westerfeld from bug #344388.

	svn path=/trunk/; revision=4386

2007-09-18  02:27:07 Tim Janik 	# 35f7829c86d6e66b56fdecaca3e94c7dabb8b0bc

	added G_GNUC_NULL_TERMINATED to function ellipsis, patch by Stefan

	2007-09-18 02:27:07 Tim Janik <timj@gtk.org>

	        * sfi/glib-extra.h:
	        * sfi/sfiglueproxy.h: added G_GNUC_NULL_TERMINATED to function ellipsis,
	        patch by Stefan Westerfeld from bug #344388.

	svn path=/trunk/; revision=4385

2007-09-18  02:01:08 Tim Janik 	# d68a53b8b0a1a6645b4f5efe72662ebdcd0d08c5

	removed bogus function decl. bse_project_get_song(): new function to

	2007-09-18 02:01:08 Tim Janik <timj@gtk.org>

	        * bseproject.[hc]: removed bogus function decl.
	        bse_project_get_song(): new function to retrieve the first song of
	        a project if any. at some point this should become the sole song.

	        * bseproject.proc: reuse an existing song if possible when importing
	        MIDI files, effectively merging the import into the existing song.

	svn path=/trunk/; revision=4384

2007-09-18  01:30:51 Tim Janik 	# f4ffbecc009ed603712dbccf6133999ba4997837

	removed/disabled debugging printouts.

	2007-09-18 01:30:51 Tim Janik <timj@gtk.org>

	        * bseproject.proc:
	        * bsemidifile.c: removed/disabled debugging printouts.

	svn path=/trunk/; revision=4383

2007-09-18  00:53:28 Tim Janik 	# ae99d5f5584faa383589029beefa224062029f5d

	added small comment.

	2007-09-18 00:53:28 Tim Janik <timj@gtk.org>

	        * library/instruments/kf-synth-string-sweep.bse: added small comment.

	svn path=/trunk/; revision=4382

2007-09-18  00:38:43 Tim Janik 	# 806621f0de0ce8bf0c9dc0b3f6406d6765b9a2ae

	added synth string instrument by Krzysztof Foltman.

	2007-09-18 00:38:43 Tim Janik <timj@gtk.org>

	        * library/instruments/kf-synth-string-sweep.bse: added synth string
	        instrument by Krzysztof Foltman.

	svn path=/trunk/; revision=4381

2007-09-18  Stefan Westerfeld 	# 70720020d978b678b5668b7831f2f0ea9ab7904e

	Assign newly created tracks to the master bus. Fixes #441936.

	Fri Sep 7 22:46:20 2007 Stefan Westerfeld <stefan@space.twc.de>

	        * bsemidifile.c: Assign newly created tracks to the master bus. Fixes
	        #441936.

	svn path=/trunk/; revision=4380

2007-09-17  Stefan Westerfeld 	# 7a9f85ee2df615171529c6d2ab974708dc85000b

	Display error message in the case that somebody tries to run the script

	Tue Sep 18 00:02:32 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* library/scripts/mixer-splitup-by-track.scm: Display error message in
		the case that somebody tries to run the script while the project is
		playing (instead of messing up things silently).

	svn path=/trunk/; revision=4379

2007-09-17  Tim Janik 	# 376084ca6d8dafd802adb7081c4c6fe9a43835a7

	web/: changed preview location to ~/public_html/beast-preview/

	svn path=/trunk/; revision=4378

2007-09-16  22:20:15  Tim Janik 	# a4e5106d6406a6bda0d5e267b7361f997f690739

	doxer: fix for doxygen-1.5.1 2007-09-16 22:20:15  Tim Janik  <timj@gtk.org>

		* Data.py (SrcFile.add_member): protect against duplicate member
		additions, this works around a doxygen-1.5.1 bug.

	svn path=/trunk/; revision=4377

2007-09-08  04:00:42 Tim Janik 	# 2a88c05ac4088bba42bade83e7e7d043abde6376

	catch missing git-log or git repo.

	2007-09-08 04:00:42 Tim Janik <timj@gtk.org>

	        * DoxiParser.py (doxer_setget): catch missing git-log or git repo.

	svn path=/trunk/; revision=4376

2007-09-08  Tim Janik 	# 3d786f6b9f06f77ef87960f5930819fb4464f304

	MAINTAINERS: http://live.gnome.org/MaintainersCorner#maintainers

	svn path=/trunk/; revision=4375

2007-08-25  Tim Janik 	# b1bf15068a9549c19dfdb594fac0115fca37fd44

	Doxer: reap git-log. Sat Aug 25 03:36:42 2007  Tim Janik  <timj@gtk.org>

	        * DoxiParser.py (doxer_setget): reap child process, fixed stripping.

	svn path=/trunk/; revision=4374

2007-08-25  Tim Janik 	# 4502833572e545f029f60f286eeec6ee93610877

	Fixed $Date parsing, allow to extract dates from git. Sat Aug 25 03:18:50 2007  Tim Janik  <timj@gtk.org>

	        * fixed $Date parsing, allow to extract dates from git.

	svn path=/trunk/; revision=4373

2007-08-25  Tim Janik 	# 9a97b5dfded916fc53c7e00b3f2f655bf5ba1540

	Fixed $Date parsing, allow to extract dates from git. Sat Aug 25 03:16:48 2007  Tim Janik  <timj@gtk.org>

	        * fixed $Date parsing, allow to extract dates from git.

	svn path=/trunk/; revision=4372

2007-08-25  Tim Janik 	# ea97e9c4cb17b2e23b6bb58ddf62b25588677352

	Doxer: support git_author_date flag. Sat Aug 25 02:53:19 2007  Tim Janik  <timj@gtk.org>

	        * DoxiParser.py: support git_author_date flag in doxer_setget(),
	        which tries to set the value from git history.
	        extended datetime_parse() to parse rfc2822 dates.

	svn path=/trunk/; revision=4371

2007-08-24  Stefan Westerfeld 	# d2f4471c659e4e698e0bda4b9d92e5a48a48d976

	Replaced guint64 variables by uint64 variables, to avoid "%lld" compiler

	Fri Aug 24 20:04:12 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Replaced guint64 variables by uint64
		variables, to avoid "%lld" compiler warnings on AMD64.

	svn path=/trunk/; revision=4370

2007-08-23  Stefan Westerfeld 	# 8c811d9cd92b73e367cc2b5954cd90c474ab6237

	Replaced global -k option by --skip-errors, global -q option by --silent

	Thu Aug 23 15:17:57 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Replaced global -k option by --skip-errors,
		global -q option by --silent and oggenc -Q <n> by oggenc -q <n>. The
		idea behind the switch is to avoid global short options where possible
		to minimize collisions with command options now and in the future.
		Fixes #468229.

	svn path=/trunk/; revision=4369

2007-08-19  Yannig MARCHEGAY 	# 1051c4900e430a8d9941e116eb5bdbfed990bdd5

	Updated Occitan translation

	svn path=/trunk/; revision=4368

2007-08-19  Yannig MARCHEGAY 	# 75a21fa1287fac0d941c6ea44a10791b5b053439

	Updated Occitan translation

	svn path=/trunk/; revision=4367

2007-08-17  Stefan Westerfeld 	# 5d02c61caacf8db75421789a60daf13617cc4ec1

	Change documentation to recommend installing plugins in ~/beast/plugins.

	Sat Aug 18 00:18:16 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/plugin-devel.doxi: Change documentation to recommend installing
		plugins in ~/beast/plugins.

	svn path=/trunk/; revision=4366

2007-08-17  Stefan Westerfeld 	# 41463443a160a46cedfd43549408af643dfa5734

	Include ~/beast/plugins in the default plugin search path, to make it

	Sat Aug 18 00:15:22 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecore.idl: Include ~/beast/plugins in the default plugin search
		path, to make it easier for users and developers to install extra
		plugins from source.

	svn path=/trunk/; revision=4365

2007-08-15  Tim Janik 	# 86d6356793d9b0d30dfbc87b7535d01b9263956a

	TODO: minor updates

	svn path=/trunk/; revision=4364

2007-08-13  Stefan Westerfeld 	# 4d19b133e735758bb555ff997e1de9f01c399bfb

	Remove cyclic include dependancy between sfiwrapper.h and sfitypes.h by

	Mon Aug 13 23:38:53 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* sfiwrapper.h: Remove cyclic include dependancy between sfiwrapper.h
		and sfitypes.h by not longer including sfitypes.h. This will allow
		using things defined here in sfitypes.h, which was not possible
		before.

		* sfitypes.h: Use int64 instead of gint64 for SfiTime/SfiNum, which
		expands to long long on both, 32- and 64-bit systems. This will make
		printf ("%lld", some_sfi_num) a valid printf format (as seen by gcc),
		and thus some compiler warnings disappear with this change. Fixes:
		#456879.

	svn path=/trunk/; revision=4363

2007-08-13  Stefan Westerfeld 	# 0c92d4e273c756e5e13ca76c4879e5fa54893e3b

	Improved plugin compilation instructions according to Tims comments.

	Mon Aug 13 23:19:42 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/plugin-devel.doxi: Improved plugin compilation instructions
		according to Tims comments.

	svn path=/trunk/; revision=4362

2007-07-29  Leonardo Ferreira Fontenelle 	# d698cbd545920ab65c344b789913f39c4d60ac83

	Brazilian Portugues translation minor enhancement to fix bug #454165.

	2007-07-29  Leonardo Ferreira Fontenelle  <leonardof@svn.gnome.org>

		* pt_BR.po: Brazilian Portugues translation minor enhancement to fix
		bug #454165.

	svn path=/trunk/; revision=4361

2007-07-14  Stefan Westerfeld 	# d488db47c751955b2b46e95c834d2cd4d9d71601

	fix typo

	svn path=/trunk/; revision=4360

2007-07-14  Stefan Westerfeld 	# 2c46af54795447260e85fcb45c0ca03a4a0e4f92

	Added a small section about how to compile and install a plugin to the

	Sat Jul 14 17:50:06 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/plugin-devel.doxi: Added a small section about how to compile
		and install a plugin to the plugin development guide.

	svn path=/trunk/; revision=4359

2007-07-14  Stefan Westerfeld 	# f0d30b489da70398fd799177f897ae4f5e5670b7

	When compiled in C++ sources, use [u]int16/32/... typedefs from Birnet

	Sat Jul 14 15:54:33 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* sfiwrapper.h: When compiled in C++ sources, use [u]int16/32/...
		typedefs from Birnet instead of providing own typedefs. This allows
		using these types in C++ sources which are using namespace Birnet.
		Fixes #456408.

		* sfiwrapper.cc: Since this is a C++ source, after the change above,
		birnet/birnetutils.hh will already get included in sfi/sfiwrapper.h.
		But then, undefining BIRNET__RUNTIME_PROBLEM afterwards will create
		compile errors in the other birnet headers which are included after
		sfi/sfiwrapper.h, because they rely on a definition provided by
		birnet/birnetutils.hh. So I am removing the #undef, which doesn't seem
		to have any useful purpose anyway.

	svn path=/trunk/; revision=4358

2007-07-12  Stefan Westerfeld 	# 53c395f7eba35bafc2653ac7b6a82413358cdc13

	Added this file now, necessary for the artscompressor test commited

	Fri Jul 13 00:18:09 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/artscompressor.bse: Added this file now, necessary for
		the artscompressor test commited before.

	svn path=/trunk/; revision=4357

2007-07-11  Stefan Westerfeld 	# 9b569ada5e1130ae8108c3b56e3d5d13137d10fc

	Remove items from TODO, which are assigned to m0.7 now.

	svn path=/trunk/; revision=4356

2007-07-11  Stefan Westerfeld 	# 170e37c7cf6f480afcfe6d704a62b5d64c23a54d

	TODO reorganization: move next release items to the next release section.

	svn path=/trunk/; revision=4355

2007-07-11  Stefan Westerfeld 	# f287bd7f597515ffcb25f788472366de88ed7c8f

	Move wavetool base freq detector to post release TODOs.

	svn path=/trunk/; revision=4354

2007-07-10  Stefan Westerfeld 	# 53c1e15dbc8e2a108285ee20f3c4787ff82244e8

	Implemented the necessary code to allow shell scripts to iterate over the

	Tue Jul 10 16:34:02 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Implemented the necessary code to allow shell
		scripts to iterate over the chunks in a bsewave file. This includes
		support for the --chunk-key option for many commands, as well as a new
		list-chunks command which generates chunk keys suitable for iteration.

	svn path=/trunk/; revision=4353

2007-07-05  Stefan Westerfeld 	# e7c18e130e358b68ef4bd4e7c409a05011f9e2df

	Yet another release TODO filed to bugzilla:   bsewavetool command for listing per chunk xinfos

	svn path=/trunk/; revision=4352

2007-07-01  Tim Janik 	# 43514578becfc45c86987922c2cdbc4a24cf5759

	fixed string buffer size, #452604.

	Sun Jul  1 17:13:28 2007  Tim Janik  <timj@gtk.org>

	        * launchers/bseshstart.c (custom_find_executable): fixed string buffer
	        size, #452604.

	svn path=/trunk/; revision=4351

2007-06-30  Tim Janik 	# 7d3a6be3b6b5062dc34c805a529de2ebe71115be

	fixed string buffer size, #452604.

	Sat Jun 30 23:58:54 2007  Tim Janik  <timj@gtk.org>

	        * launchers/beaststart.c (custom_find_executable): fixed string buffer
	        size, #452604.

	svn path=/trunk/; revision=4350

2007-06-27  Tim Janik 	# c2e71b5b607b7f15074562e1cad2e61da8b7793b

	clean up after stefan (as he tells me to do ;)

	svn path=/trunk/; revision=4349

2007-06-27  Stefan Westerfeld 	# 224f345be5a61a55bab8ead6ce383bab36b782a5

	Added doxer man page bug link.

	svn path=/trunk/; revision=4348

2007-06-24  Stefan Westerfeld 	# b04b3de7b086eec5b6ebc1c17e4836fc6e124cc2

	Add bugzilla link for Bug 450724 : bsewavetool shell iteration capabilities

	svn path=/trunk/; revision=4347

2007-06-23  Stefan Westerfeld 	# 29da00bfdce2b96a9375226afaeceb6590c355ea

	Add bugzilla links of 0.7.2 release TODOs where available.

	svn path=/trunk/; revision=4346

2007-06-23  Stefan Westerfeld 	# b67b713b608e5acf8ab26a393d3e86cfec3e3a68

	Moved constants to bse/bsemath.h.

	Sun Jun 24 00:18:52 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.cc: Moved constants to bse/bsemath.h.

	svn path=/trunk/; revision=4345

2007-06-23  Stefan Westerfeld 	# caef459d05817e1d37be634c4bb20203f2fcd0ba

	Added ln (10)/20 constant for ArtsCompressor.

	Sun Jun 24 00:17:40 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemath.h: Added ln (10)/20 constant for ArtsCompressor.

	svn path=/trunk/; revision=4344

2007-06-21  Stefan Westerfeld 	# b6d0b2e2f83e522824d27b1bab05bcec3ab7762f

	Replaced log() and exp() calls by constants where possible, that is for

	Thu Jun 21 18:44:18 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.cc: Replaced log() and exp() calls by constants where
		possible, that is for all cases where the argument is constant, too.

	svn path=/trunk/; revision=4343

2007-06-21  Stefan Westerfeld 	# 8b1884e835ffd52d12a64bb71aadcf6ababe9af0

	Added new test for ArtsCompressor.

	Thu Jun 21 18:21:33 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am:
		* tests/audio/artscompressor.ref: Added new test for ArtsCompressor.

	svn path=/trunk/; revision=4342

2007-06-20  Stefan Westerfeld 	# 6cc8ed2eb9024c0e09e1da95c93b811936508f89

	Added implementation details for bsewavetool shell loop interface.

	svn path=/trunk/; revision=4341

2007-05-20  Tim Janik 	# a93e890642f148e357c8c9ad75e0173743b58e7b

	TODO: updated diagnostics dialog todos

	svn path=/trunk/; revision=4340

2007-05-07  Tim Janik 	# 2a1aef79b8d063f9aaebb4d6c2d30d527dbc1ed9

	applied updates by Michele Petrecca <michelinux@alice.it>.

	Tue May  8 00:23:29 2007  Tim Janik  <timj@gtk.org>

	        * it.po: applied updates by Michele Petrecca <michelinux@alice.it>.

	svn path=/trunk/; revision=4339

2007-04-26  Stefan Westerfeld 	# e65f8b9058ec3e0c1fb6063276d95205be0121b8

	Fixed typos: usefull -> useful, qbeast -> beast.

	svn path=/trunk/; revision=4338

2007-04-26  Stefan Westerfeld 	# 03e8cbfd04489fbb4d40f63fdd96eb410a74b5cb

	Added more pre-release TODOs, most of which are related to drum kits or bsewavetool.

	svn path=/trunk/; revision=4337

2007-04-25  Stefan Westerfeld 	# 05c1cc74433f5a040f928a1b9e496d476adf1015

	Removed entry about gslice thread test, submitted code as glib bug #433314.

	svn path=/trunk/; revision=4336

2007-04-25  Stefan Westerfeld 	# c57de4d9c905a204affa0359acd35e14e8c73e7b

	Added item about version number bumping for next release.

	svn path=/trunk/; revision=4335

2007-04-24  Stefan Westerfeld 	# 0924bdc157c7b7de1fe84eda5fb47a377aa3b580

	Removed directory that is no longer used from SVN.

	Fri Apr 20 14:32:32 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* slowtests: Removed directory that is no longer used from SVN.

	svn path=/trunk/; revision=4334

2007-04-20  Stefan Westerfeld 	# f79a1580f3b78c5c557faf625e967c89a4d22e97

	Release planning: improved items that need to be fixed before/after 0.7.2.

	svn path=/trunk/; revision=4333

2007-04-16  Stefan Westerfeld 	# 86691f544fdc525b1ac6e3727d88d3fbe8f629d1

	Refactored some code in order to remove unneccessary include files and to

	Mon Apr 16 13:51:51 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-*[hc]: Refactored some code in order to remove unneccessary
		include files and to avoid "using namespace std;".

		* sfidl-typelist.hh:
		* sfidl-corec.hh:
		* sfidl-corecxx.hh:
		* Makefile.am: Remove include files that are not really needed any
		more.

	svn path=/trunk/; revision=4332

2007-04-16  Stefan Westerfeld 	# 72e4450c36ceab0d9667817a07103885b3eb8af8

	Added include central file which provides String and string_* helper

	Fri Apr 13 14:22:34 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am:
		* sfidl-utils.hh: Added include central file which provides String and
		string_* helper functions by using them from birnet.

		* sfidl-*[hc]: Use String instead of std::string.

	svn path=/trunk/; revision=4331

2007-04-11  Stefan Westerfeld 	# 7f129ef8f65ac4f69a056694566f8e2f09178538

	Fix a bug in seek() spotted by Tim: invalidate m_input_data contents

	Wed Apr 11 15:46:31 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Fix a bug in seek() spotted by Tim: invalidate
		m_input_data contents properly if a read error occurs during filling
		it.

	svn path=/trunk/; revision=4330

2007-04-10  Stefan Westerfeld 	# d50c208e90ddae39022a02fef53f25016635404a

	Don't use g_strdup_printf, but g_ascii_formatd for formatting doubles

	Tue Apr 10 17:22:11 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Don't use g_strdup_printf, but g_ascii_formatd for
		formatting doubles (locale independency). Some simplification could be
		achieved by switching from char* to std::string for some code.
		Fix #424897 "Bad code generated for double constants by sfidl".

		* sfidl-parser.hh:
		* sfidl-parser.cc:
		* sfidl-corecxx.cc: Use birnet functions to convert between strings
		and integers, instead of reimplementing our own version.

		* sfidl-generator.cc: Use birnet function string_tolower, instead of
		reimplementing our own version.

		* Makefile.am: Start linking sfidl against birnet, as we use birnet
		string helper functions now.

		* tests/testidl.idl:
		* tests/misctests.c: Test that the code generator output for doubles
		is correct (see #424897), by computing a record default with a
		double division and checking its result.

		* sfidl-corec.cc: Fix a compiler warning by using "%zd" as printf
		format where appropriate.

	svn path=/trunk/; revision=4329

2007-03-31  Stefan Westerfeld 	# c66164f5521b0d6ec5c6a7a23dca0acb29d0fcf4

	Document the new "volume" xinfo.

	Sat Mar 31 15:18:54 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/architecture.doxi: Document the new "volume" xinfo.

	svn path=/trunk/; revision=4328

2007-03-31  Stefan Westerfeld 	# 1d629778965da3b6ef627fe229879d8f974250fc

	Implemented gsl_data_handle_volume, which returns a volume adjustment

	Sat Mar 31 15:18:54 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatahandle.[hc]: Implemented gsl_data_handle_volume, which
		returns a volume adjustment factor ("volume" xinfo).

		* gslwavechunk.[hc]: Cache the volume adjustment factor here, so that
		GslWaveOsc can access it quickly.

		* gslwaveosc.c (gsl_wave_osc_set_filter): Adjust volume of the chunk
		according to its volume adjustment.

	svn path=/trunk/; revision=4327

2007-03-15  Tim Janik 	# 6a634b45ba516e750e8e12429b2d441cfc1f0bda

	updated all po files from recent sources.

	Thu Mar 15 01:20:25 2007  Tim Janik  <timj@gtk.org>

	        * updated all po files from recent sources.

	svn path=/trunk/; revision=4326

2007-03-12  David Lodge 	# 6a5b7a39e7cf26f4fc5ff518bd2cec5c17db4025

	Update en_GB translation

	svn path=/trunk/; revision=4325

2007-02-28  Stefan Westerfeld 	# f112f9d703d5e30e7962623769d927eff9d87c58

	added TODO item

	svn path=/trunk/; revision=4324

2007-02-22  Stefan Westerfeld 	# 345b8716358cc87fba0814f6d78d44bf0dad8ab5

	added a drumkit issue to the TODO

	svn path=/trunk/; revision=4323

2007-02-22  Tim Janik 	# b89ac97fa9572c8e97d673058a8166cf3b27ee21

	Merged birnet.git commit id e348637be777e69e09675b56f1b05f34154bdba6

		* birnet/: Merged birnet/ from http://birnet.org/git/birnet.git
		commit id e348637be777e69e09675b56f1b05f34154bdba6.

	Wed Feb 21 03:27:02 2007 Tim Janik <timj@gtk.org>

	        * birnetthread.hh: fixed up destructor ordering. added missing
	        privatization of class copies. fixed memory region aliasing that
	        could cause segfaults with some gcc optimizations. worked around
	        ICE (GCC#30894). minor assertion optimization. added AutoLocker
	        compile time assertion about structure/area sizes.

	        * birnetutils.hh, birnetutils.cc: provide zintern_free() alongside
	        zintern_decompress(), so the API doesn't depend on GLib.

	        * tests/infotest.cc: use zintern_free().

	svn path=/trunk/; revision=4322

2007-02-22  Tim Janik 	# e3d08be785860fb6e9cae1fa499be557cbd1bd94

	if LLONG_MAX isn't provided by gcc's limits.h despite C99/GNU_SOURCE,

	Sun Feb 18 03:00:54 2007 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: if LLONG_MAX isn't provided by gcc's limits.h despite
	        C99/GNU_SOURCE, fallback to define *INT64* constants via LONG_LONG_MAX,
	        which is provided by all 3.0+ gcc versions.

	svn path=/trunk/; revision=4321

2007-02-22  Tim Janik 	# 952d21302f1cc39bf483b0ce1b0db70af7f8cf88

	unconditionally include C99 headers limits.h and float.h. provide

	Wed Feb 14 23:58:43 2007 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: unconditionally include C99 headers limits.h and float.h.
	        provide UINT64_MAX, INT64_MIN, INT64_MAX if the system doesn't.

	        * birnetutils.cc: assert working implementations of the various limits
	        and constants introduced by limits.h and float.h.

	svn path=/trunk/; revision=4320

2007-02-22  Tim Janik 	# aaee4137d8bb4c9afafe009a2310de126caf29c0

	define BIRNET_SYSVAL_* for POLL constants.

	Fri Feb 9 21:13:21 2007 Tim Janik <timj@gtk.org>

	        * configure.inc, Makefile.am, birnetconfig.h: define BIRNET_SYSVAL_*
	        for POLL constants.

	        * tests/systest.cc: check POLL constants.

	svn path=/trunk/; revision=4319

2007-02-22  Tim Janik 	# f4c43ee47075637e3f8ff8051ea37e6b978970c9

	define BIRNET_SIZEOF_LONG and BIRNET_SIZEOF_POINTER.

	Fri Feb 9 18:27:27 2007 Tim Janik <timj@gtk.org>

	        * configure.inc, Makefile.am, birnetconfig.h: define BIRNET_SIZEOF_LONG
	        and BIRNET_SIZEOF_POINTER.

	svn path=/trunk/; revision=4318

2007-02-22  Tim Janik 	# f9b1bcbb96e5ccda0bbb689eda9df5f3f3db288f

	ChangeLog fixup

	svn path=/trunk/; revision=4317

2007-02-13  Tim Janik 	# 97bb5840bc1a8e75d4229741f2f5591bbc402157

	slight precision increment for the last digit of the final rating, to see

	Wed Feb 14 00:00:01 2007  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc: slight precision increment for the last digit
	        of the final rating, to see fractions if we fail by the tenth of a promille.

	svn path=/trunk/; revision=4316

2007-02-13  Tim Janik 	# b119e31f7dd8fc5cbec27df845b1134660896f20

	fixed output logic. never conditionalize printf format-strings, this

	Tue Feb 13 22:48:04 2007  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc: fixed output logic. never conditionalize
	        printf format-strings, this prevents certain compile time checks
	        and isn't internationalizable. never omit value units (percent)
	        when printing out numbers. adapted formats to skip value digits
	        smaller than a tenth promille. if those were needed, percent
	        wouldn't be an appropriate unit anyway. moved rating commentary
	        into (the good, the bad, the ugly... ;) into a less disturbing place.

	svn path=/trunk/; revision=4315

2007-02-12  Stefan Westerfeld 	# 647615781ca90b773ff15100d9545f505c5aecad

	updates

	svn path=/trunk/; revision=4314

2007-02-12  Tim Janik 	# bc2af26c41fe26cdcdb272c031af21a8fc83014c

	Bass drum modelled after drum synthesizer from Elrad 12/1980.

	Mon Feb 12 01:41:30 2007  Tim Janik  <timj@gtk.org>

	        * library/instruments/bqs-bass-drum-e8012.bse: Bass drum modelled after
	        drum synthesizer from Elrad 12/1980.

	svn path=/trunk/; revision=4313

2007-02-11  Tim Janik 	# 5aaecc4e8797fb63a1779cf655a1012801cafc76

	new instrument by Stefan Westerfeld and William DeVore.

	Mon Feb 12 00:10:04 2007  Tim Janik  <timj@gtk.org>

	        * library/instruments/bqs-slow-hum.bse: new instrument by Stefan
	        Westerfeld and William DeVore.

	svn path=/trunk/; revision=4312

2007-02-11  Tim Janik 	# e8d232f07cfc408a5fb6b2844271191bd0343928

	fixed typo

	svn path=/trunk/; revision=4311

2007-02-11  Stefan Westerfeld 	# 6cc0510e129c627a06be4c5daf7973e2f85b8724

	Added this little utility script which is useful for computing 12-TET

	Sun Feb 11 17:42:58 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* r+d-files/transpose_freq.scm: Added this little utility script which is
		useful for computing 12-TET transposed frequencies. I used it while
		turning a .bse file with hardcoded oscillator frequencies into one with
		relative frequencies to the instrument base frequency.

	svn path=/trunk/; revision=4310

2007-02-08  Stefan Westerfeld 	# f11bb713e4c856a9918da6ba75c384499989a959

	Removed this test which is no longer needed, because a nicer version is in

	Thu Feb  8 20:12:51 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* test/midi-test.bse: Removed this test which is no longer needed,
		because a nicer version is in library/demo already.

		* test/Makefile.am:
		* test: Finally removed the test directory, which is now empty.

	svn path=/trunk/; revision=4309

2007-02-07  Tim Janik 	# a0001cce6080c45c37256131483abae3ce07d852

	removed test/.

	Wed Feb  7 21:17:42 2007  Tim Janik  <timj@gtk.org>

	        * Makefile.am, configure.in: removed test/.

	svn path=/trunk/; revision=4308

2007-02-07  Tim Janik 	# 99ec89cfe40ad22eced9d7d55ad6460f51ec3186

	fixed license to AS-IS.

	Wed Feb  7 21:14:39 2007  Tim Janik  <timj@gtk.org>

	        * library/demo/x2-midi-test.bse: fixed license to AS-IS.

	svn path=/trunk/; revision=4307

2007-02-07  Tim Janik 	# 50a7b3d04783d64f8254862f3e3e72a262627e52

	turned this into an illustration instrument for velocity controlled

	Wed Feb  7 20:33:57 2007  Tim Janik  <timj@gtk.org>

	        * library/instruments/illus-vtremolo.bse: turned this into an
	        illustration instrument for velocity controlled tremolo.

	svn path=/trunk/; revision=4306

2007-02-07  Tim Janik 	# 0c23097c9da6d491ba9594aeec8b5b17a11f5b19

	moved test/simple-echo.bse here.

	Wed Feb  7 20:31:26 2007  Tim Janik  <timj@gtk.org>

	        * library/instruments/illus-vtremolo.bse: moved test/simple-echo.bse
	        here.

	svn path=/trunk/; revision=4305

2007-02-07  Tim Janik 	# 540ceb8c351416c096628db846c710aa4d748764

	added "nothing happens on Play" item which describes PCM debugging.

	Wed Feb  7 02:35:13 2007  Tim Janik  <timj@gtk.org>

	        * docs/faq.doxi: added "nothing happens on Play" item which describes
	        PCM debugging.

	svn path=/trunk/; revision=4304

2007-02-07  Tim Janik 	# 108fce149bcf7b9bc42381efad895fe545b03116

	fixed byte_per_sample check.

	Tue Feb  6 23:16:15 2007  Tim Janik  <timj@gtk.org>

	        * bseloader-wav.c (wav_read_fmt_header): fixed byte_per_sample check.

	svn path=/trunk/; revision=4303

2007-02-06  Tim Janik 	# 666dfc780e3311f6fc17888bd660117956f82f5c

	added normalization command.

	Tue Feb  6 02:34:27 2007  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: added normalization command.

	svn path=/trunk/; revision=4302

2007-02-06  Tim Janik 	# edd0cc09e55163b0b73b5164ba95a3651580c21a

	added scaling data handle, the scaling factor is provided at construction

	Tue Feb  6 02:27:05 2007  Tim Janik  <timj@gtk.org>

	        * bse/gsldatahandle.[hc]: added scaling data handle, the scaling
	        factor is provided at construction time.

	        * bse/gsldatautils.[hc]: added gsl_data_find_min_max() to detect
	        min and max signal range of a data handle.

	svn path=/trunk/; revision=4301

2007-02-05  Stefan Westerfeld 	# bf81fb834f3d74962aca823c175e284fb61089c0

	Disabled freak-noise-test, simple-loop-test and osc-test, as they are

	Tue Feb  6 00:32:05 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am: Disabled freak-noise-test, simple-loop-test
		and osc-test, as they are currently not really stable, since --seconds
		does not guarantee exact timing.

	svn path=/trunk/; revision=4300

2007-02-05  Stefan Westerfeld 	# eb6631312967b32ea4ffdf96be1fe7546168147a

	Nullify noise_table pointer after deleting it, so that it never points to

	Mon Feb  5 22:16:01 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsenoise.cc: Nullify noise_table pointer after deleting it, so that
		it never points to deleted and invalid memory. This just makes
		debugging easier in case something goes wrong later, and doesn't
		change the current behaviour.

	svn path=/trunk/; revision=4299

2007-02-05  Stefan Westerfeld 	# 853f18f5978d78ca04f664ac7caf17877406e6b3

	Saved with the current version of beast, to make the file version

	Mon Feb  5 04:20:07 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/freak-noise.bse: Saved with the current version of
		beast, to make the file version compatibility check happy again.

	svn path=/trunk/; revision=4298

2007-02-05  Stefan Westerfeld 	# cac9e1a54965de8cf0ad3e3d34fbce131f6ae8fc

	updates

	svn path=/trunk/; revision=4297

2007-02-05  Tim Janik 	# 27d2d48f4ef32a67edf2f409e873ecb54c1affd9

	support 32bit, 3byte 24bit and 4byte 24bit (with unused upper byte)

	Mon Feb  5 02:54:14 2007  Tim Janik  <timj@gtk.org>

	        * bseloader-wav.c: support 32bit, 3byte 24bit and 4byte 24bit (with
	        unused upper byte) PCM-format WAV files.

	        * gsldatahandle.h: added GSL_WAVE_FORMAT_SIGNED_32,
	        GSL_WAVE_FORMAT_SIGNED_24_PAD4 and GSL_WAVE_FORMAT_SIGNED_24.

	        * gsldatahandle.c: read 24, 24_pad4 and 32 bit files.

	        * gsldatautils.h: extended to/from float/double with/without clip
	        conversion functions to also handle 24, 24_pad4 and 32bit data.

	svn path=/trunk/; revision=4296

2007-02-05  Stefan Westerfeld 	# bfd6526a8675957abbfc9df5b56fa18698fd516d

	Move these test files to the tests/audio directory.

	Mon Feb  5 03:20:51 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* test/Makefile.am:
		* test/freak-noise.bse:
		* test/simple-loop.bse:
		* test/osc-test.bse: Move these test files to the tests/audio
		directory.

		* tests/audio/Makefile.am:
		* tests/audio/freak-noise.*:
		* tests/audio/simple-loop.*:
		* tests/audio/osc-test.*: Add tests from test/ directory to the
		automated testing environment.

	svn path=/trunk/; revision=4295

2007-02-05  Stefan Westerfeld 	# 9b86b4fd2857d018581c41de99c92b996c4586e5

	Since BseNoise finally supports deterministic random generation,

	Mon Feb  5 02:53:04 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am:
		* tests/audio/partymonster.ref: Since BseNoise finally supports
		deterministic random generation, regenerated the Party Monster
		reference file, and set the comparision threshold to 99.99. It still
		sounds the same, though (only minor changes in the extracted
		features).

	svn path=/trunk/; revision=4294

2007-02-05  Stefan Westerfeld 	# d1a942db198558a2deb669414c49f7736ae01b6f

	Added the necessary API to find out the maximum engine block size to

	Mon Feb  5 01:22:24 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxmodule.*: Added the necessary API to find out the maximum
		engine block size to Bse::Effect. The new function is called
		Effect::max_block_size().

	svn path=/trunk/; revision=4293

2007-02-05  Stefan Westerfeld 	# 0dcbdfe8546f5d8f1cb6645ead85ca2b7df6505b

	Added a script which plots audio signals with gnuplot to allow visual

	Mon Feb  5 01:02:53 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* r+d-files/plotsignals.sh: Added a script which plots audio signals
		with gnuplot to allow visual comparisions. This can for instance be
		hepful to inspect the difference between a wav file that passes a
		certain automatic audio test, and a version that doesn't.

	svn path=/trunk/; revision=4292

2007-02-05  Stefan Westerfeld 	# 783f1e2b7f22cfe7e28d3b00c7958ee8eb9d7c66

	Added deterministic random number generator (from rapicorn) and use it if

	Mon Feb  5 02:47:29 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsenoise.cc: Added deterministic random number generator (from
		rapicorn) and use it if --bse-disable-randomization is active.

	svn path=/trunk/; revision=4291

2007-02-05  Stefan Westerfeld 	# b7a1d59636efaea590f509154eaedb024fb1bfce

	Bugfix: Generate a noise table with the same size, instead of generating

	Mon Feb  5 01:31:02 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsenoise.cc: Bugfix: Generate a noise table with the same size,
		instead of generating smaller noise tables for smaller block sizes.
		This means that the noise will no longer degenerate for small block
		sizes.
		Generate just one single noise table, instead of one-per-instance.

	svn path=/trunk/; revision=4290

2007-02-05  Stefan Westerfeld 	# 32b445fcf99b4186074c3b0c70caa72eb4c344c9

	Added the necessary API to find out the maximum engine block size to

	Mon Feb  5 01:22:24 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxmodule.*: Added the necessary API to find out the maximum
		engine block size to Bse::Effect.

	svn path=/trunk/; revision=4289

2007-02-04  Tim Janik 	# cf21c69ba63f22ac4c58aa54f7923b3aaf4e148b

	TODO: updated LGPL item

	svn path=/trunk/; revision=4288

2007-02-04  Tim Janik 	# 70d3bc1e7df3a436a32bcd5a4566a6108b1b8ebf

	TODO: cleared gui-event-optimization

	see: http://beast.gtk.org/wiki:UsabilityGuidelines#gui-event-optimization

	svn path=/trunk/; revision=4287

2007-02-04  Tim Janik 	# a0879c329ecc49a052f753c8c9c0d8597a35c606

	download.doxi: adapted bleeding edge disclaimer

	svn path=/trunk/; revision=4286

2007-02-04  Tim Janik 	# 0d778e825b62e610444553f3cfcea6d698a16a1c

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 18:09:15 2007  Tim Janik  <timj@gtk.org>

	        * updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4285

2007-02-04  Tim Janik 	# 4f521a4acb607407b8f0ffc8af8eba5e4da3ac89

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 18:07:22 2007  Tim Janik  <timj@gtk.org>

	        * updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4284

2007-02-04  Tim Janik 	# 4b258b46b2b83a049aff68673c7e53acfe3038cc

	Merged birnet.git commit id a05a17e504b947b6d9cd4518ef3fd38345fcd607

		* birnet/: Merged birnet/ from http://birnet.org/git/birnet.git
		commit id a05a17e504b947b6d9cd4518ef3fd38345fcd607.

	Sun Feb 4 17:08:31 2007 Tim Janik <timj@gtk.org>

	        * ChangeLog: updated .gitignore files.

	svn path=/trunk/; revision=4283

2007-02-04  Tim Janik 	# 57221f3ab8efadf70f9f90e8da768710efc38570

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb 4 17:00:38 2007 Tim Janik <timj@gtk.org>

	        * updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4282

2007-02-04  Tim Janik 	# 309bdc43b7bae756751ed6e2f2e5e41e74bbdd8c

	updated licenses to GNU Lesser General Public License version 2.1 with

	Sun Feb  4 04:18:33 2007  Tim Janik  <timj@gtk.org>

	        * updated licenses to GNU Lesser General Public License version 2.1
	        with permission from Stefan Westerfeld where required.

	        * artscompressor.idl, artscompressor.cc:
	        relicensed under GNU Lesser General Public License version 2.1
	        with permission from Matthias Kretz and Stefan Westerfeld.

	        * davguitar.c, davxtalstrings.c: updated patent license notice.

	svn path=/trunk/; revision=4281

2007-02-04  Tim Janik 	# faa05f1890866e89488f891e666f07d266685493

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 03:54:22 2007  Tim Janik  <timj@gtk.org>

	        * tests/:
	        updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4280

2007-02-04  Tim Janik 	# b9862d59db54fdf5080b57817ca73da463bcef19

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 03:49:43 2007  Tim Janik  <timj@gtk.org>

	        * tools/:
	        updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4279

2007-02-04  Tim Janik 	# 558579828659d4ea4d0c53bee86ab792eeeac352

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 03:46:42 2007  Tim Janik  <timj@gtk.org>

	        * shell/:
	        updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4278

2007-02-04  Tim Janik 	# 45cdfeeaeafb51e8068c58c8aa6fdf294830b050

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 03:42:30 2007  Tim Janik  <timj@gtk.org>

	        * beast-gtk/:
	        updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4277

2007-02-04  Tim Janik 	# 7c13d2edaaf045c4a06af966cf274ee44c9c1497

	updated all licenses to GNU Lesser General Public License version 2.1.

	Sun Feb  4 03:35:58 2007  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/:
	        updated all licenses to GNU Lesser General Public License version 2.1.

	svn path=/trunk/; revision=4276

2007-02-04  Tim Janik 	# 7e28e4905132a449ce452212fb00be9443589e7f

	updated all licenses to GNU Lesser General Public License version 2.1 with

	Sun Feb  4 03:24:30 2007  Tim Janik  <timj@gtk.org>

	        * updated all licenses to GNU Lesser General Public License version 2.1
	        with permission from Stefan Westerfeld where required.

	svn path=/trunk/; revision=4275

2007-02-04  Tim Janik 	# eaace171e783ff63f842faaa1b4d8700a335c899

	updated all licenses to GNU Lesser General Public License version 2.1 with

	Sun Feb  4 03:01:38 2007  Tim Janik  <timj@gtk.org>

	        * updated all licenses to GNU Lesser General Public License version 2.1
	        with permission from Stefan Westerfeld where required.

	svn path=/trunk/; revision=4274

2007-02-04  Tim Janik 	# d49d604e023b510c2308f14b1421e07e205e989c

	removed OGG/BSE web todo

	svn path=/trunk/; revision=4273

2007-02-04  Tim Janik 	# 19598991aba9ed2c2276c45a0d8318c7a22641df

	provide SVN revision number in reports.

	Sun Feb  4 01:58:20 2007  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: provide SVN revision number in reports.

	svn path=/trunk/; revision=4272

2007-02-03  Tim Janik 	# 4ded954a882acdbbd3dec01fe294705bdb499178

	properly take sequencer forerun into account when starting a song so we

	Sat Feb  3 04:26:38 2007  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc (bse_sequencer_thread_main): properly take sequencer
	        forerun into account when starting a song so we won't delay song start
	        until it's definitely too late.

	svn path=/trunk/; revision=4271

2007-02-03  Tim Janik 	# ac5e5125b9490765158209719aa2b7d29358c6c5

	refined tracing information. provide more timing details.

	Sat Feb  3 04:22:16 2007  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc: refined tracing information. provide more timing details.

	svn path=/trunk/; revision=4270

2007-02-03  Tim Janik 	# f433a3c318c160a0faaaf3ab994981e6dc15674d

	added support for debugging channels. added --bse-trace-sequencer.

	Fri Feb 2 00:16:39 2007 Tim Janik <timj@gtk.org>

	        * bsemain.h, bsemain.cc: added support for debugging channels.
	        added --bse-trace-sequencer.

	        * bsesequencer.cc: added note on/off and control event tracing.

	svn path=/trunk/; revision=4269

2007-02-03  Tim Janik 	# 84b2b33dec3ba094b5c11ac27c0f92e75484ae12

	wrapped Birnet::DebugChannel with SfiDebugChannel API.

	Fri Feb 2 00:20:58 2007 Tim Janik <timj@gtk.org>

	        * sfiwrapper.h, sfiwrapper.cc: wrapped Birnet::DebugChannel with
	        SfiDebugChannel API.

	svn path=/trunk/; revision=4268

2007-02-02  Tim Janik 	# cc426158519480f7a41031201e51ebe6d0b7f583

	Merged with http://birnet.org/git/birnet.git commit id

	Fri Feb  2 01:44:53 2007  Tim Janik  <timj@gtk.org>

		* birnet/: Merged with http://birnet.org/git/birnet.git
		commit id 43e681d19203cad908c3118bbb21501f021fbeac.

	svn path=/trunk/; revision=4267

2007-02-02  Tim Janik 	# 5809f88841511a675cabf06f63b168e937884968

	don't write trailing 0s in debug stream, slightly reduced stack

	Fri Feb 2 00:54:32 2007 Tim Janik <timj@gtk.org>

	        * birnetdebugtools.cc: don't write trailing 0s in debug stream,
	        slightly reduced stack requirements, 4000 chars are hopefully
	        enough for async debugging messages.

	svn path=/trunk/; revision=4266

2007-02-02  Tim Janik 	# 5fafa0d12044a9d3f6aecde7cc0d040f56aa3dbe

	make printf_valist() public to allow wrapper implementations.

	Thu Feb 1 23:24:16 2007 Tim Janik <timj@gtk.org>

	        * birnetdebugtools.hh: make printf_valist() public to allow wrapper
	        implementations.

	        * birnetdebugtools.cc: auto append newlines to printed lines.

	svn path=/trunk/; revision=4265

2007-02-01  Tim Janik 	# a80dece01b4f6fbe3d6f174c3247f8bb1f3d444e

	Merged with http://birnet.org/git/birnet.git commit id

	Thu Feb  1 20:51:57 2007  Tim Janik  <timj@gtk.org>

		* birnet/: Merged with http://birnet.org/git/birnet.git
		commit id 8d5799e2fc064bfaf8439a6f7e15d8db0bdc45f3.

	svn path=/trunk/; revision=4264

2007-02-01  Tim Janik 	# b1dc4eaca53cb10584f6df13af92344afac92754

	added DebugChannel, a reference counted interface which allows sending of

	Thu Feb 1 20:27:09 2007 Tim Janik <timj@gtk.org>

	        * birnetdebugtools.hh, birnetdebugtools.cc: added DebugChannel, a
	        reference counted interface which allows sending of debug messages.
	        if a debug channel is created with new_from_file_async(), printing
	        a message happens in constant time in the calling thread, and the
	        debugging output is written into a file by a background thread.

	        * tests/threads.cc: added simply DebugChannel test.

	svn path=/trunk/; revision=4263

2007-02-01  Tim Janik 	# 9ca90603abaf34f4e225baea5d0270ef825de383

	added a LADSPA todo item

	svn path=/trunk/; revision=4262

2007-01-29  Tim Janik 	# 31972f23af4eca9e988400275c21fe617699063e

	Merged with http://birnet.org/git/birnet.git commit id

	Tue Jan 30 00:56:10 2007  Tim Janik  <timj@gtk.org>

		* birnet/: Merged with http://birnet.org/git/birnet.git
		commit id b7275b0b32ccbb12d5fba5a1aa95d9a48352b239.

	svn path=/trunk/; revision=4261

2007-01-29  Tim Janik 	# 9445a4757115e5191a1d106b315910586b667746

	generate Makefile.decl with slowcheck: and perf: rules. also generate

	Mon Jan 29 23:29:27 2007 Tim Janik <timj@gtk.org>

	        * examples/mkhost.sh: generate Makefile.decl with slowcheck: and perf:
	        rules. also generate report: rule which runs all of check: slowcheck:
	        and perf: and generates a report.out file.

	svn path=/trunk/; revision=4260

2007-01-29  Tim Janik 	# 5cf079ee5146c0c8f732a3211984e6d970496b6a

	made read_barrier() and write_barrier() a NOP on systems that don't need

	Mon Jan 29 22:46:40 2007 Tim Janik <timj@gtk.org>

	        * birnet/birnetthread.hh: made read_barrier() and write_barrier() a NOP
	        on systems that don't need barriers. provided full_barrier().

	        * birnetthread.cc: fixed a bad bug in atomic_int_set() and
	        atomic_pointer_set() which caused atomic values to temporarily be 0.

	        * birnet/birnetcdefs.h: provide memory barrier implementations based on atomic ops.

	        * birnet/Makefile.am: define BIRNET_MEMORY_BARRIER_NEEDED in birnetconfig.h.

	        * configure.inc: provide BIRNET_MEMORY_BARRIER_NEEDED=[01] based on
	        glib's G_ATOMIC_OP_MEMORY_BARRIER_NEEDED.

	svn path=/trunk/; revision=4259

2007-01-29  Tim Janik 	# 6870162838fb00c76746556d99ff8dd04eec17e8

	fixed various compiler warnings.

	Sun Jan 28 19:31:12 2007 Tim Janik <timj@gtk.org>

	        * fixed various compiler warnings.

	svn path=/trunk/; revision=4258

2007-01-29  Tim Janik 	# 8044fb477e573f42bd361d5e5a863300a6f051f7

	fixed signed/unsigned compiler warnings

	svn path=/trunk/; revision=4257

2007-01-29  Tim Janik 	# d1ea74dda2ef1eceabc52fa27f35c3e18036704a

	provide read and write memory barriers: Atomic::read_barrier(),

	Sun Jan 28 19:05:51 2007 Tim Janik <timj@gtk.org>

	        * birnetthread.hh: provide read and write memory barriers:
	        Atomic::read_barrier(), Atomic::write_barrier().
	        Atomic::RingBuffer: prevent class copies, fixed destructor, use
	        std::copy() for fast memory copies and added missing barriers;
	        fixes suggested by Stefan Westerfeld.

	        * tests/threads.cc: fixed contention handling in ring buffer tests.

	svn path=/trunk/; revision=4256

2007-01-29  Tim Janik 	# 2c71a67bd916036cc619c3026d7f71f5a5a32277

	give up CPU if ring buffer reader/writer are busy spinning. this speeds up

	Thu Jan 25 02:43:28 2007 Tim Janik <timj@gtk.org>

		* tests/threads.cc: give up CPU if ring buffer reader/writer
		are busy spinning. this speeds up tests on single-CPU systems
		significantly.

	svn path=/trunk/; revision=4255

2007-01-29  Tim Janik 	# 92bca5a3e6b59bd9bd9e635e3595e7f51149dcbc

	sink & ref threads around run() to keep the Thread structure alive. added

	Thu Jan 25 02:03:37 2007 Tim Janik <timj@gtk.org>

		* birnetthread.[hc]*: sink & ref threads around run() to keep the Thread
		structure alive. added Thread::Self::yield().
		added Atomic::RingBuffer<>, a simple 1-reader/1-writer ring bufferthat
		does atomic reads/writes without needing mutexes.

		* tests/threads.cc: added atomic ring buffer tests.
		test_deletable_destruction(): shutup old debug output.
		main(): always run quick tests.

	svn path=/trunk/; revision=4254

2007-01-29  Tim Janik 	# edcc10c979f07d47ba5fa582e05e14d84273a8cb

	minor ChangeLog fix

	svn path=/trunk/; revision=4253

2007-01-28  Tim Janik 	# 937b1e44e359b9ea3c68b963774a3ad85c276614

	only allow .bse or .ogg file uploads.

	Sun Jan 28 01:12:18 2007  Tim Janik  <timj@gtk.org>

		* web/file-upload.php: only allow .bse or .ogg file uploads.

	svn path=/trunk/; revision=4252

2007-01-28  Tim Janik 	# 85d9b413ab419fcf7267948b0fa15a5346d9d84b

	fixed svn:mime-type from application/x-httpd-php to text/x-httpd-php to allow svn diff for web/gallery.php web/file-upload.php web/file-browser.php

	svn path=/trunk/; revision=4251

2007-01-25  Stefan Westerfeld 	# d43927a210df2ad0d29ab4b75430538506231da0

	Adjusted error bounds for the filter test, because it failed sometimes

	Thu Jan 25 01:23:08 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* bseresamplerimpl.hh: Adjusted error bounds for the filter test,
		because it failed sometimes although the implementation is ok. Be more
		verbose when using verbose mode.

	svn path=/trunk/; revision=4250

2007-01-24  Stefan Westerfeld 	# cbf652180e4111d8ab05a07f2b06337b58c274ed

	Added a small song to test the DavXtalStrings module.

	Thu Jan 25 00:05:52 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am:
		* tests/audio/xtalstringssong.*: Added a small song to test the
		DavXtalStrings module.

		* tests/audio/partymonster.ref: Regenerated reference features (since
		DavXtalStrings has now deterministic random). Since I needed to
		regenerate the features anyway, I choose to also use the new spectrum
		slice joining mode, to make the reference file small. This will make
		the comparisions less sensitive, though.

	svn path=/trunk/; revision=4249

2007-01-24  Stefan Westerfeld 	# cc03040f9ff807c374ebe138128dfd231b0cc79b

	Added a small random number generator (from rapicorn) to deterministically

	Wed Jan 24 23:50:09 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* davxtalstrings.c: Added a small random number generator (from
		rapicorn) to deterministically generate random values if the option
		--bse-disable-randomization is used. This makes it possible to bring
		this module under test properly.

	svn path=/trunk/; revision=4248

2007-01-24  Stefan Westerfeld 	# 86f4705911492082e4c87079971ffe2ff835676a

	updates

	svn path=/trunk/; revision=4247

2007-01-24  Stefan Westerfeld 	# 47ae38ae4f6e65571b8aa2f482c5a4af5fca9130

	updates (#340437 is fixed)

	svn path=/trunk/; revision=4246

2007-01-23  Tim Janik 	# fad710be206807087bf130669fec95eddde73cc4

	ported to guile-1.8. kept guile-1.6 compat code, removed cruft that was

	Tue Jan 23 02:08:24 2007  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.c: ported to guile-1.8. kept guile-1.6 compat
	        code, removed cruft that was deprecated in 1.6 and removed from 1.8.

	        * shell/bsescminterp.h: removed bsescminterp.c implementation details.

	        * shell/bsescm.c: changed debugging hooks:
	        BSESCM_SLEEP4GDB>=3: sleep before parsing args;
	        BSESCM_SLEEP4GDB>=2: sleep after parsing args;
	        BSESCM_SLEEP4GDB>=1: sleep after parsing args when not registering;
	        otherwise: don't sleep.

	svn path=/trunk/; revision=4245

2007-01-21  Tim Janik 	# 5ce0906af8371bf1ce86a0803424788442044f78

	Merged with http://birnet.org/git/birnet.git commit id

	Sun Jan 21 01:39:15 2007  Tim Janik  <timj@gtk.org>

		* birnet/: Merged with http://birnet.org/git/birnet.git
		commit id 73964e6fc1bf0f40fd2c3c71f30c0fb045951e39.

	svn path=/trunk/; revision=4244

2007-01-21  Tim Janik 	# adafb7aaa1cf09a72eede55b0bc929cda846b179

	fixed ChangeLog typo

	svn path=/trunk/; revision=4243

2007-01-21  Tim Janik 	# d82fcccb9f4947d3bd15a0dce453bc1bd8910ca6

	fixed volatile pointer attribute to apply to the pointer value.

	Sat Jan 20 17:41:06 2007 Tim Janik <timj@gtk.org>

		* birnetthread.hh: fixed volatile pointer attribute to apply to the
		pointer value.

		* birnetutils.cc: changed DeletionHook linking to form a ring. added
		an assertion to ~DeletionHook() that *this was unlinked before being
		destroyed. changed deletable_maps[] implementation to be created
		atomically on demand and never be destroyed. this fixes problems with
		unpredictable constructor/destructor ordering.

	svn path=/trunk/; revision=4242

2007-01-21  Tim Janik 	# 211612ce4ae730a04cb611584b1998b45fcc699f

	call monitoring_deletable() when deletion hooks are added to deletables,

	Fri Jan 19 01:48:22 2007 Tim Janik <timj@gtk.org>

	        * birnetutils.hh, birnetutils.cc: call monitoring_deletable()
	        when deletion hooks are added to deletables, renamed
	        dismiss_deletable() method.

	        * birnetsignalslot.hh: adapted DeletionHook methods.

	        * tests/threads.cc: added deletion hook test cases.

	svn path=/trunk/; revision=4241

2007-01-21  Tim Janik 	# 1b5b01522b04cc6ea68df51a656d4ef806836a2e

	reworked DeletionHook methods, fixed test case.

		* birnetutils.hh, birnetutils.cc: call monitoring_deletable()
		when deletion hooks are added to deletables, renamed
		dismiss_deletable() method.

		* birnetsignalslot.hh: adapted DeletionHook methods.

		* tests/threads.cc: fixed test deletion hook implementation
		and usage.

	svn path=/trunk/; revision=4240

2007-01-21  Tim Janik 	# 78c38f301f877102e5176bfb0395d69e7f005ca3

	first DeletionHook crash test case

	svn path=/trunk/; revision=4239

2007-01-21  Tim Janik 	# 949b19b33c704737e8d48f143b6c3491a23ef3a6

	added a small script to set up an example project that configures, builds

	Wed Jan 17 02:30:35 2007 Tim Janik <timj@gtk.org>

	        * examples/mkhost.sh: added a small script to set up an example project
	        that configures, builds and tests (via make check) a birnet/ subdir.

	svn path=/trunk/; revision=4238

2007-01-21  Tim Janik 	# 8288054107360c04fbe80fd56c8a981707609253

	define _BIRNET_SOURCE_EXTENSIONS, so birnet extensions can be used

	Wed Jan 17 02:28:18 2007 Tim Janik <timj@gtk.org>

	        * Makefile.am: define _BIRNET_SOURCE_EXTENSIONS, so birnet extensions
	        can be used internally.

	svn path=/trunk/; revision=4237

2007-01-21  Tim Janik 	# a702ca14844166e1bc50ef7928b2177dbc5998ad

	explicitely include Birnet license, GNU LGPL.

	Wed Jan 17 02:19:56 2007 Tim Janik <timj@gtk.org>

	        * COPYING.LGPL: explicitely include Birnet license, GNU LGPL.

	svn path=/trunk/; revision=4236

2007-01-18  Tim Janik 	# 2639a4f5c7a5fce058c9384f0dd47cbbc8167b0b

	finished tagging item

	svn path=/trunk/; revision=4235

2007-01-17  Stefan Westerfeld 	# fefeff57062a3bd6f6b96711be62e1c88ffad600

	Make comparision strategy pluggable, so that different features can be

	Wed Jan 17 17:58:38 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefcompare.cc: Make comparision strategy pluggable, so that
		different features can be compared using different strategies. As
		example, implemented a simple comparision strategy for the
		attack_times and release_times features.

	svn path=/trunk/; revision=4234

2007-01-17  Stefan Westerfeld 	# 9eb590bdccfb4e3a1bf85489d7818733a7b1e160

	Implement a spectral flux based attack/release detector (new options:

	Wed Jan 17 12:11:40 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Implement a spectral flux based attack/release
		detector (new options: --attack-times, --release-times), configurable
		with the --timing-window-* options.
		Added --verbose option for figuring out actual window settings.

	svn path=/trunk/; revision=4233

2007-01-17  Stefan Westerfeld 	# e5809114ec9cafeb9a2555116683a819e6eb3618

	Made some cosmetic improvements to fix violations of the beast coding

	Wed Jan 17 08:12:53 2007  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Made some cosmetic improvements to fix
		violations of the beast coding style.

	svn path=/trunk/; revision=4232

2007-01-16  Tim Janik 	# 73534bea0aa7040c62ea0bcc1b191f398ce09975

	commented caveats.

	Tue Jan 16 23:57:40 2007  Tim Janik  <timj@gtk.org>

	        * bseenginemaster.c: commented caveats.

	svn path=/trunk/; revision=4231

2007-01-14  Tim Janik 	# ee9840ff48170513500e18492487f9637f1192e1

	removed all .cvsignore files

	svn path=/trunk/; revision=4230

2007-01-13  Tim Janik 	# 85f5bd470a04b6551bcb9881abfff220bf5396de

	reactivate $Date:$ expansion

	svn path=/trunk/; revision=4228

2007-01-13  Tim Janik 	# 46ad42a9dc7a994a644307d393cba588ea4539b2

	restore $Date:$ expansions

	svn path=/trunk/; revision=4227

2007-01-13  Tim Janik 	# c5bb182758c35edf445cc8644b3c831b199e14c1

	TODO updates (noise)

	svn path=/trunk/; revision=4223

2007-01-13  Tim Janik 	# 9eea11a82606cbfa128230518b853176ce90c041

	TODO updates (tags)

	svn path=/trunk/; revision=4222

2007-01-12  Tim Janik 	# 20eb5ea33390d316d6be6ab6b346375f83060935

	TODO updates

	svn path=/trunk/; revision=4221

2007-01-12  Tim Janik 	# 6250c9ef49ab10b892451b25aab46a5bb2f69302

	ignore autognenerated field names for anonymous structs or unions.

	Fri Jan  5 00:54:29 2007  Tim Janik  <timj@gtk.org>

	        * qxmlparser.py (DoxygenXMLParser.parse_field): ignore
	        autognenerated field names for anonymous structs or unions.

	svn path=/trunk/; revision=4220

2007-01-12  Tim Janik 	# 66b466e9cc7f69e4216fc6a0cf81746d3580d175

	introduce virtual destructors demanded by g++-4.1.

	Thu Jan  4 21:53:56 2007  Tim Janik  <timj@gtk.org>

	        * birnetthread.hh:
	        * birnetutils.hh: introduce virtual destructors demanded by g++-4.1.

	        * birnetthreadimpl.cc:
	        * birnetutils.cc: make double->int64 conversion explicit.

	svn path=/trunk/; revision=4219

2007-01-12  Tim Janik 	# 7a162e8956be7fbff2f9beb91f1712ce67079ed6

	get rid of tmeporary file warnings.

	Thu Jan 04 21:12:19 2007  Tim Janik  <timj@gtk.org>

	        * tests/filecheck/Makefile.am: get rid of tmeporary file warnings.

	svn path=/trunk/; revision=4218

2007-01-12  Tim Janik 	# 8c754544183833c61b41f2f5853164b1e7098d98

	changed script inetrpreter to /bin/bash to account for bash-isms.

	Thu Jan 04 20:29:24 2007  Tim Janik  <timj@gtk.org>

	        * mksignals.sh: changed script inetrpreter to /bin/bash to account
	        for bash-isms.

	svn path=/trunk/; revision=4217

2006-12-28  Tim Janik 	# b3a1a9c0a8dece3a6c12046b7c566f0c412e005e

	0.7.0 release announcement.

	Thu Dec 28 01:18:46 2006 Tim Janik <timj@gtk.org>

	        * web/news.doxi: 0.7.0 release announcement.

	        * web/oldnews.doxi: news rotation.

	        * NEWS: added missing bug numbers.

	        * web/Makefile.am: preview dir update.

	svn path=/trunk/; revision=4216

2006-12-28  Tim Janik 	# d2eb69ea86dc88905edae21f498425ad084be7d8

	released 0.7.1.

	Wed Dec 27 22:51:58 2006 Tim Janik <timj@gtk.org>

	        * released 0.7.1.

	Wed Dec 27 22:50:04 2006  Tim Janik  <timj@gtk.org>

	        * released beast 0.7.1.

	        * beast-gtk/bstmain.c (beast_show_about_box): added "Hanno Behrens" to
	        contributors.

	svn path=/trunk/; revision=4215

2006-12-26  Tim Janik 	# 0687f1a5bab6a1d925ddc041983fe5ad1c2768b5

	removed mad.pc from dependencies because libmad doesn't come with a mad.pc

	Tue Dec 26 23:24:01 2006 Tim Janik <timj@gtk.org>

	        * configure.in:
	        * data/bse.pc.in: removed mad.pc from dependencies because libmad
	        doesn't come with a mad.pc in every distribution.

	Sat Dec 23 20:56:33 2006  Tim Janik  <timj@gtk.org>

	        * tests/audio/sum-diff-test.ref:
	        * tests/audio/sum-diff-test.bse:
	        * tests/audio/Makefile.am: added sum-diff-test: test rule to test
	        BseSummation audio-diff output channel.

	        * tests/audio/bse2wav.scm: added option parsing, support --seconds <>
	        option to constrain the time intervall used for recording.

	        * Makefile.am: depend on automake 1.9.

	svn path=/trunk/; revision=4214

2006-12-26  timj 	# b7a3da6a43d7225121d5cb35309caa1fa7ee91c8

	updates

	svn path=/trunk/; revision=4213

2006-12-26  timj 	# c6530df77dc3de802e9749a52a41617430fa8d24

	added note about 2.6.x kernels

	svn path=/trunk/; revision=4212

2006-12-25  timj 	# 1455a14a95fbc04b56194ce5924f62c9497d2d95

	removed -rc* version tags in release preparation

	svn path=/trunk/; revision=4211

2006-12-25  Tim Janik 	# a6ad6b481a62718a02fafa20cc4d44a34ca14b3f

	use symbolic i/o channel identifiers to avoid breakage in hardcoded

	Mon Dec 25 16:43:46 2006 Tim Janik <timj@gtk.org>

	        * bsebus.c (bse_bus_ensure_summation): use symbolic i/o channel identifiers
	        to avoid breakage in hardcoded channel numbers.

	        * bsepcmwriter.c (bse_pcm_writer_write): fixed calculation to avoid overflow.

	svn path=/trunk/; revision=4210

2006-12-24  Stefan Westerfeld 	# b37b8d26c5bd7b4c3505a850d9630e9fd278eb7a

	BseSummation was recently extended to have three output channels (a new

	Sun Dec 24 15:20:51 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * bsebus.c: BseSummation was recently extended to have three output
	        channels (a new one computing the difference), which broke make
	        report. This change fixes it, by adapting the hardcoded channel number
	        in this file to match the new summation plugin.

	svn path=/trunk/; revision=4209

2006-12-23  timj 	# 5aed3eaaaf74e18d36314b6c9bccf79dcc1b1c69

	fixed newline

	svn path=/trunk/; revision=4208

2006-12-23  timj 	# e93c3a956a2fab9fa8fcb3d6842a8645a4917c39

	small fix

	svn path=/trunk/; revision=4207

2006-12-23  timj 	# e90563a90f21e706d36bbfca68465bfb68eef9d3

	added missing dependencies

	svn path=/trunk/; revision=4206

2006-12-23  Tim Janik 	# e377ea4c359079ec33f564552a26052557e61ee1

	added sum-diff-test: test rule to test BseSummation audio-diff output

	Sat Dec 23 20:56:33 2006 Tim Janik <timj@gtk.org>

	        * tests/audio/sum-diff-test.ref:
	        * tests/audio/sum-diff-test.bse:
	        * tests/audio/Makefile.am: added sum-diff-test: test rule to test
	        BseSummation audio-diff output channel.

	        * tests/audio/bse2wav.scm: added option parsing, support --seconds <>
	        option to contrain the time intervall used for recording.

	        * tests/audio/Makefile.am: lowered threshold for organsong-test and
	        velocity-test which seem to occasionally fail due to timing variances.

	        * Makefile.am: depend on automake 1.9.

	svn path=/trunk/; revision=4205

2006-12-23  Tim Janik 	# 18dccabd2f7a5ba7db1c49b3ad13950445602fbd

	added audio-diff output channel which provides a difference signal between

	Sat Dec 23 20:53:15 2006 Tim Janik <timj@gtk.org>

	        * bsesummation.idl, bsesummation.cc: added audio-diff output channel
	        which provides a difference signal between it's two output signals.

	svn path=/trunk/; revision=4204

2006-12-23  Tim Janik 	# 0f52293a85916a0d4e9ac79cb61020ece08b0406

	added bse_server_start_recording() and bse_server_stop_recording()

	Sat Dec 23 20:49:22 2006 Tim Janik <timj@gtk.org>

	        * bseserver.[hcp]*: added bse_server_start_recording() and
	        bse_server_stop_recording() functions to schedule WAV file
	        recording for a specific time intervall.
	        added bse-server-start-recording procedure.

	        * bsepcmwriter.[hc]: implemented time intervall
	        recording.

	svn path=/trunk/; revision=4203

2006-12-23  timj 	# ab621d323b955046299f27fd230fc613bb1eb0e4

	updates

	svn path=/trunk/; revision=4202

2006-12-20  Stefan Westerfeld 	# 7de4f1bd4e6a359979983f44e1932b4789b09e6c

	Tiny fix so that the new tests really are performed.

	Tue Dec 19 15:47:32 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * tests/audio/Makefile.am: Tiny fix so that the new tests really are
	        performed.

	Tue Dec 19 15:12:18 2006  Stefan Westerfeld  <stefan@space.twc.de>

	        * tests/audio/Makefile.am:
	        * tests/audio/osctranspose1.ref:
	        * tests/audio/osctranspose1.bse:
	        * tests/audio/osctranspose2.ref:
	        * tests/audio/osctranspose2.bse: Added tests for the transpose
	        property of BseStandardOsc. Should catch problems like #387364.
	        The tests: osctranspose1 checks that oscillator transposing works if
	        the frequency is constant, osctranspose2 checks that oscillator
	        transposing works if the frequency is a signal.

	svn path=/trunk/; revision=4201

2006-12-19  Stefan Westerfeld 	# 47987c16016aa311fdc8d3a6234c9fecf60f9e11

	Tiny fix so that the new tests really are performed.

	Tue Dec 19 15:47:32 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * tests/audio/Makefile.am: Tiny fix so that the new tests really are
	        performed.

	svn path=/trunk/; revision=4200

2006-12-19  Stefan Westerfeld 	# d59b7b59d8008c4a8df0e55c4a315812cf36f31a

	Added tests for the transpose property of BseStandardOsc. Should catch

	Tue Dec 19 15:12:18 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * tests/audio/Makefile.am:
	        * tests/audio/osctranspose1.ref:
	        * tests/audio/osctranspose1.bse:
	        * tests/audio/osctranspose2.ref:
	        * tests/audio/osctranspose2.bse: Added tests for the transpose
	        property of BseStandardOsc. Should catch problems like #387364.

	svn path=/trunk/; revision=4199

2006-12-19  Stefan Westerfeld 	# d915fe63782bdf1ce52d5c7f35eaeba3648a2c8c

	Take transpose factor into account for table lookups when the oscillator

	Tue Dec 19 14:18:53 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * gsloscillator.c: Take transpose factor into account for table
	        lookups when the oscillator frequency is constant. Fixes #387364.

	svn path=/trunk/; revision=4198

2006-12-19  Tim Janik 	# 6a7fb5792bfd7b747be5fbf6e31fb93c15baa4d0

	keep a flag around to detect the first sequencer underrun, reset the flag

	Tue Dec 19 02:10:33 2006 Tim Janik <timj@gtk.org>

	        * bsesong.[hc]: keep a flag around to detect the first sequencer underrun,
	        reset the flag when prepared.

	        * bsesequencer.cc (bse_sequencer_thread_main): always warn about
	        sequencer underruns, regardles of debugging state.

	svn path=/trunk/; revision=4197

2006-12-18  Stefan Westerfeld 	# c3b870134319878ac849c0fd0e491072aa6b17f7

	Fix argument parsing for the --no-debug=... option.

	Mon Dec 18 20:43:57 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * beast-gtk/bstmain.c: Fix argument parsing for the --no-debug=...
	        option.

	svn path=/trunk/; revision=4196

2006-12-18  Stefan Westerfeld 	# b9b24e2aee4e1cc7eb39b5226a2e4bd7245c3dfc

	Spelling fix: the unit for frequencies is spelled "Hertz" (not "Herz").

	Mon Dec 18 20:14:34 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * bsebiquadfilter.c:
	        * bseconstant.c:
	        * bsestandardosc.c:
	        * bseladspamodule.c: Spelling fix: the unit for frequencies is spelled
	        "Hertz" (not "Herz").

	svn path=/trunk/; revision=4195

2006-12-18  Stefan Westerfeld 	# 9e953b17625d7c9e6a8d16801564dfcc75dfa963

	Spelling fix: the unit for frequencies is spelled "Hertz" (not "Herz").

	Mon Dec 18 19:39:46 2006 Stefan Westerfeld <stefan@space.twc.de>

	        * davxtalstrings.c:
	        * davsyndrum.c:
	        * davcanyondelay.c:
	        * bseiirfilter.c:
	        * davorgan.c: Spelling fix: the unit for frequencies is spelled
	        "Hertz" (not "Herz").

	svn path=/trunk/; revision=4194

2006-12-17  Tim Janik 	# b17be6d8af567df91ec49644c373ecdb581c7fe4

	added missing update of the transpose factor to update_modules(), fixes

	Sun Dec 17 20:58:40 2006 Tim Janik <timj@gtk.org>

	        * bsestandardosc.c (bse_standard_osc_update_modules): added missing
	        update of the transpose factor to update_modules(), fixes #386862.

	svn path=/trunk/; revision=4193

2006-12-17  stw 	# 6e64c5a75dc94aaad932f3f0d23e9b7381d2cad9

	made a note about that "transpose-is-broken" thing

	svn path=/trunk/; revision=4192

2006-12-17  Tim Janik 	# 9424ba5264259b4d8aa596d0a213e99f72e0d905

	depend on bse >= 0.7.1.

	Sun Dec 17 18:35:49 2006 Tim Janik <timj@gtk.org>

	        * configure.in: depend on bse >= 0.7.1.

	svn path=/trunk/; revision=4191

2006-12-17  timj 	# 2a83b604b3ba0ba8a643c9d857eb30aa70e48b86

	update

	svn path=/trunk/; revision=4190

2006-12-17  Tim Janik 	# 4d89190049913c3f1a0f56036dae00aabc894afe

	dav_xtal_strings_init(): initialize transpose_factor to 0 to uncover late

	Sun Dec 17 02:18:46 2006 Tim Janik <timj@gtk.org>

	        * davxtalstrings.c:
	        dav_xtal_strings_init(): initialize transpose_factor to 0 to uncover late update bugs.
	        dav_xtal_prepare(): update config.transpose_factor, using BseSource's musical_tuning.

	svn path=/trunk/; revision=4189

2006-12-17  Tim Janik 	# f4a9fd514b0a364216529d14feb0857f3730d5b2

	glib condition fix, g_unichar_iswide_cjk() was introduced in glib-2.12.

	Sun Dec 17 02:16:50 2006 Tim Janik <timj@gtk.org>

	        * tests/strings.cc: glib condition fix, g_unichar_iswide_cjk()
	        was introduced in glib-2.12.

	svn path=/trunk/; revision=4188

2006-12-17  Tim Janik 	# ef94557c55e38c0138d4f6ec568a4063e0a087a1

	dav_organ_init(): initialize transpose_factor to 0 to uncover late update

	Sun Dec 17 00:33:34 2006 Tim Janik <timj@gtk.org>

	        * davorgan.c:
	        dav_organ_init(): initialize transpose_factor to 0 to uncover late update bugs.
	        dav_organ_update_modules():
	        dav_organ_prepare(): update config.transpose_factor, using BseSource's musical_tuning.

	svn path=/trunk/; revision=4187

2006-12-17  timj 	# e219872c196b5b25f77915274a93fc351d213b60

	updates

	svn path=/trunk/; revision=4186

2006-12-17  Tim Janik 	# 099047cd907e32d06e064e5856bf5c11df20657c

	updated version to 0.7.1-rc2, interface age 0, binary age 0.

	Sat Dec 16 19:45:18 2006 Tim Janik <timj@gtk.org>

	        * updated version to 0.7.1-rc2, interface age 0, binary age 0.

	        * acbeast.m4: moved to birnet/.

	svn path=/trunk/; revision=4185

2006-12-17  timj 	# ab5c2f0ff786d2572afa0affbaf766e314df6ae9

	variable fixups

	svn path=/trunk/; revision=4184

2006-12-17  Tim Janik 	# 0752339521fafd28415514df9a22dd8b53741f7e

	provide virtual destructor for class with virtual methods, demanded by

	Sun Dec 17 00:11:24 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.[hc]*: provide virtual destructor for class with virtual
	        methods, demanded by g++.

	        * acbirnet.m4: added autoconf utility file (moved here from beast).

	svn path=/trunk/; revision=4183

2006-12-16  Tim Janik 	# 8082834e3497df7a81854a33cb6f4b878444d277

	glib condition fix, g_unichar_iswide_cjk() was introduced in glib-2.12.

	Sat Dec 16 12:51:20 2006 Tim Janik <timj@gtk.org>

	        * birnetutf8.cc (iswide_cjk): glib condition fix, g_unichar_iswide_cjk()
	        was introduced in glib-2.12.

	svn path=/trunk/; revision=4182

2006-12-16  Tim Janik 	# d5fdf3dff8988513f19fd690493f64b276db270a

	released beast 0.7.1-rc1.

	Sat Dec 16 01:54:05 2006 Tim Janik <timj@gtk.org>

	        * released beast 0.7.1-rc1.

	svn path=/trunk/; revision=4181

2006-12-16  timj 	# 93067997da965ab96d281f4156481523327f1f29

	updates

	svn path=/trunk/; revision=4180

2006-12-16  Tim Janik 	# 1b9df3b650f1839fc4a1f75af34c3c14ff20d9af

	released bse-alsa 0.7.1-rc1.

	Sat Dec 16 01:51:10 2006 Tim Janik <timj@gtk.org>

	        * released bse-alsa 0.7.1-rc1.

	svn path=/trunk/; revision=4179

2006-12-16  timj 	# c0ff9be44f54fea29d01c5e63f3674d6ee693752

	fixups

	svn path=/trunk/; revision=4178

2006-12-16  timj 	# c85f1a1ad30efc39dfedf6a5c26efbbc679f7f3b

	fixups

	svn path=/trunk/; revision=4177

2006-12-15  Tim Janik 	# b2fa6f29e501eb7bd22b0f501c54151f76ef8bd1

	improved blurb, support fractional quantization steps. adjusted steppings.

	Fri Dec 15 22:47:36 2006 Tim Janik <timj@gtk.org>

	        * bsequantizer.idl:
	        * bsequantizer.cc: improved blurb, support fractional quantization
	        steps. adjusted steppings. use nearbyint() for rounding to avoid
	        buglets around 32bits.

	svn path=/trunk/; revision=4176

2006-12-15  Tim Janik 	# a18d35df5d21ca5d62fa63bc2347de979fbefbc4

	use quantizer.png as icon.

	Fri Dec 15 21:54:21 2006 Tim Janik <timj@gtk.org>

	        * bsequantizer.idl: use quantizer.png as icon.

	        * icons/quantizer.png:
	        * icons/quantizer.xcf: changed to updated version by Hanno Behrens.

	svn path=/trunk/; revision=4175

2006-12-15  Tim Janik 	# fddce6461a888a5948142b9dd8bc01e0ad07cd11

	added icon by Hanno Behrens <pebbles@schattenlauf.de>.

	Fri Dec 15 21:47:54 2006 Tim Janik <timj@gtk.org>

	        * icons/quantizer.xcf: added icon by Hanno Behrens <pebbles@schattenlauf.de>.

	svn path=/trunk/; revision=4174

2006-12-15  Tim Janik 	# e726fae021334966b9ae6184af93dde8ff6ff263

	fixed menu_list type which is a GList, not a GSList, and has to be

	Fri Dec 15 18:21:46 2006 Tim Janik <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c (popup_menus_detach): fixed menu_list type
	        which is a GList, not a GSList, and has to be released as a GList.
	        this fixes creeping memory corruption in GSlice.

	svn path=/trunk/; revision=4173

2006-12-15  timj 	# 6628bc34d45fcd1a211ded21268d10e8fd80993d

	updates

	svn path=/trunk/; revision=4172

2006-12-14  Tim Janik 	# 1364d81f5677de6dbcf8fe6b62ea34ce4725c0b6

	fix missing initialization of transpose_factor, fix found by Stefan.

	Thu Dec 14 22:10:26 2006 Tim Janik <timj@gtk.org>

		* davorgan.c (dav_organ_init):
		* davxtalstrings.c (dav_xtal_strings_init): fix missing initialization
		of transpose_factor, fix found by Stefan.

	svn path=/trunk/; revision=4171

2006-12-14  Tim Janik 	# 947e05666034ba08074cc361a1b7e6e21a152b47

	reintroduced tee(1) to preserve output during report generation, but use

	Thu Dec 14 21:38:31 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl (report): reintroduced tee(1) to preserve output
	        during report generation, but use $PIPESTATUS to ensure successful
	        execution of the subshell commands.

	svn path=/trunk/; revision=4170

2006-12-14  Tim Janik 	# cb53618152e44bf61ca8793f15e1b5c168a8f4dc

	special case ENODATA, which is not available on GNU/kFreeBSD, reported by

	Thu Dec 14 23:07:16 2006 Tim Janik <timj@gtk.org>

	        * gslcommon.c (gsl_error_from_errno): special case ENODATA, which is not
	        available on GNU/kFreeBSD, reported by Petr Salinger <Petr.Salinger@seznam.cz>.

	        * gsldatahandle-vorbis.c (gsl_vorbis1_handle_read): use EIO in unclear
	        error cases, because GNU/kFreeBSD lacks ENODATA.

	svn path=/trunk/; revision=4169

2006-12-14  Tim Janik 	# 55121573cf50d56aec5428f710fcdc72e4033693

	reintroduced tee(1) to preserve output during report generation, but use

	Thu Dec 14 21:38:31 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl (report): reintroduced tee(1) to preserve output
	        during report generation, but use $PIPESTATUS to ensure successful
	        execution of the subshell commands.

	svn path=/trunk/; revision=4168

2006-12-14  timj 	# 3f45e92e7083e99c69b56ce97512c084a65bbd93

	upates

	svn path=/trunk/; revision=4167

2006-12-14  timj 	# 3294b525ba6ba778db46d793833839998abdcd13

	back out accidental commit

	svn path=/trunk/; revision=4166

2006-12-14  Tim Janik 	# 4d8477ad5e595fd5940b90cd16d35e6badf8626e

	reintroduced tee(1) to preserve output during report generation, but use

	Thu Dec 14 21:38:31 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl (report): reintroduced tee(1) to preserve output
	        during report generation, but use $PIPESTATUS to ensure successful
	        execution of the subshell commands.

	svn path=/trunk/; revision=4165

2006-12-14  Tim Janik 	# 54cb3363f864f294e67bfd9ed065fdbbd51d4d2c

	added missing stopband damping check for LOWPASS filters, caught by

	Mon Dec 11 01:13:00 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc (generic_filter_tests): added missing stopband
	        damping check for LOWPASS filters, caught by Stefan.

	svn path=/trunk/; revision=4164

2006-12-14  Tim Janik 	# c53979b78a859b903eb5ebe7d5b8f501feb87457

	fix report rule so that failure exit status is not swallowed by tee(1).

	Thu Dec 14 02:37:04 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl (report): fix report rule so that failure exit
	        status is not swallowed by tee(1).

	svn path=/trunk/; revision=4163

2006-12-14  Tim Janik 	# 758aa31b0a5ecfa7d42393c18284d81948155c23

	set buffer start fragments to zero for nodes that are partially suspended

	Wed Dec 13 23:55:15 2006 Tim Janik <timj@gtk.org>

	        * bseenginemaster.c (master_process_locked_node): set buffer start
	        fragments to zero for nodes that are partially suspended and have
	        pending probe jobs, so probes don't contain outdated junk data.

	svn path=/trunk/; revision=4162

2006-12-13  Tim Janik 	# 640ab092925f8f8e9e65195c0fb738d1cb8d540e

	set buffer start fragments to zero for nodes that are partially suspended

	Wed Dec 13 23:55:15 2006 Tim Janik <timj@gtk.org>

	        * bseenginemaster.c (master_process_locked_node): set buffer start
	        fragments to zero for nodes that are partially suspended and have
	        pending probe jobs, so probes don't contain outdated junk data.

	svn path=/trunk/; revision=4161

2006-12-13  Tim Janik 	# 3773861893c0d9436a1dbce414d257df9ecf36b9

	fixup ostreams[].value pointers before returning a probe, since those may

	Wed Dec 13 21:30:39 2006 Tim Janik <timj@gtk.org>

	        * bseenginemaster.c (master_take_probes): fixup ostreams[].value
	        pointers before returning a probe, since those may have been altered
	        by process() routines.

	        * bseprobe.cc: added debugging field and a few assertions.

	svn path=/trunk/; revision=4160

2006-12-13  timj 	# 2750d6c89bd20d65c681530942a33299f5f10697

	updates

	svn path=/trunk/; revision=4159

2006-12-13  Tim Janik 	# 9152d72583045facbef6bdd9644fdceb73058c61

	added musical tuning system tables submitted by Hanno Behrens

	Tue Dec 12 01:18:22 2006 Tim Janik <timj@gtk.org>

	        * bsecore.idl, bsemathsignal.c: added musical tuning system tables
	        submitted by Hanno Behrens <pebbles@schattenlauf.de>:
	        12-TET, 7-TET, 5-TET, DIATONIC_SCALE, INDIAN_SCALE, PYTHAGOREAN_TUNING,
	        PENTATONIC_5_LIMIT, PENTATONIC-BLUES, PENTATONIC-GOGO,
	        QUARTER_COMMA_MEANTONE, SILBERMANN_SORGE, WERCKMEISTER_3,
	        WERCKMEISTER_4, WERCKMEISTER_5, WERCKMEISTER_6, KIRNBERGER_3
	        and YOUNG.

	svn path=/trunk/; revision=4158

2006-12-13  Tim Janik 	# e5640cfb5fb2695356712d735a7280f6e5dba979

	fix possible flat copies of pointers to deeply nested object structures.

	Tue Dec 12 08:50:45 2006 Tim Janik <timj@gtk.org>

	        * bseundostack.c: fix possible flat copies of pointers to deeply
	        nested object structures. in particular, this fixes potential GSList
	        node corruptions.

	svn path=/trunk/; revision=4157

2006-12-12  Tim Janik 	# de601c0b663725d090a4cc2c1d35bbe9549539b7

	adapt to new tuning relative note API.

	Mon Dec 11 00:51:36 2006 Tim Janik <timj@gtk.org>

	        * tests/perftest.cc:
	        * beast-gtk/bstpatterncolumns.c:
	        * tools/bsewavetool.cc: adapt to new tuning relative note API.

	        * tests/latency/bselatencytest.idl: minor fix.

	svn path=/trunk/; revision=4156

2006-12-12  Tim Janik 	# d752e8dc29dbd8d413a8f69d46c738d5ee794f77

	added musical_tuning property.

	Mon Dec 11 00:51:36 2006 Tim Janik <timj@gtk.org>

		* bsesong.[hc]: added musical_tuning property.

		* bseutils.h, bseutils.c:
		* bsenote.h, bsenote.c, bsenote.cc: converted bsenote to C++. added musical
		tuning argument to all note/freq API functions and adapted internal logic
		to cope with different tunings. removed unused BSE_FREQ*() macros.

		* bsecore.idl: introduce Bse::MusicalTuningType. added musical_tuning
		field to NoteDescription.

		* bseserver.proc:
		* bseprocedure.proc: added musical tuning arguments to various note
		related procedures, moved note procedures from bseserver.proc to
		bseprocedure.proc and got rid of their BseServer argument.

		* bsemathsignal.h, bsemathsignal.c: made semitone and transpose tables
		musical tuning sensitive.

		* bsepart.[hc]: allow per-part semitone tables, and changed macros so that
		part notes are converted to frequencies according to the musical tuning
		specific to a part.

		* bseitem.[hc]: provide bse_item_current_musical_tuning() and document
		its caveats.

		* bsesource.[hc]: added bse_source_prepared_musical_tuning() which
		provides musical tuning setting for a source if and only if the
		source is prepared. the tuning stays constant while the source is prepared.

		* bsesequencer.cc: perform part specific note->freq conversion.

		* bsemidifile.[hc]: added musical_tuning to use the new note API,
		defaulting to equal temperament.

		* bsemididecoder.c: hard code musical tuning to equal temperament,
		since we have to provide notes to frequencies for MIDI events up front.

		* bseconstant.c:
		* bsestandardosc.c:
		* bseladspamodule.c:
		* bsebiquadfilter.c: adapt to new tuning relative note API, add a
		warning to tooltips that informs about the musical tuning specific
		interpretation of note properties.

		* gsloscillator*.[hc]: changed configuration to contain a transpose_factor
		and not a transpose index which needs to be looked up in conjunction with
		a specific musical tuning.

		* bseglobals.h: removed unused macros.

		* bseinfo.c: adapt to new note API by defaulting to to equal temperament.

		* tests/misctests.cc: test various musical tuning system properties and
		note<->freq conversions.

	svn path=/trunk/; revision=4155

2006-12-12  Tim Janik 	# d41aec5d6af49a63650f721376740e5a51db5653

	adapt to new tuning relative note API.

	Mon Dec 11 00:51:36 2006 Tim Janik <timj@gtk.org>

	        * tests/perftest.cc:
	        * beast-gtk/bstpatterncolumns.c:
	        * tools/bsewavetool.cc: adapt to new tuning relative note API.

	        * tests/latency/bselatencytest.idl: minor fix.

	svn path=/trunk/; revision=4154

2006-12-12  Tim Janik 	# fa04d19350221921ae9a5ec8aefe6e263b4013dc

	adapt to new tuning relative note API, add a warning to tooltips that

	Mon Dec 11 00:51:36 2006 Tim Janik <timj@gtk.org>

	        * bsesequencer.c:
	        * bseiirfilter.c:
	        * davorgan.c:
	        * davsyndrum.c:
	        * davcanyondelay.c:
	        * davxtalstrings.c: adapt to new tuning relative note API, add a
	        warning to tooltips that informs about the musical tuning specific
	        interpretation of note properties.
	        use bse_source_prepared_musical_tuning() once sources are prepared
	        and if possible.

	svn path=/trunk/; revision=4153

2006-12-12  Tim Janik 	# adff6c495606ff54bcde4fb399caf4d0c839d429

	added musical tuning system tables submitted by Hanno Behrens

	Tue Dec 12 01:18:22 2006 Tim Janik <timj@gtk.org>

		* bsecore.idl, bsemathsignal.c: added musical tuning system tables
		submitted by Hanno Behrens <mailto:shaftoe@nurfuerspam.de>:
		12-TET, 7-TET, 5-TET, DIATONIC_SCALE, INDIAN_SCALE, PYTHAGOREAN_TUNING,
		PENTATONIC_5_LIMIT, PENTATONIC-BLUES, PENTATONIC-GOGO,
		QUARTER_COMMA_MEANTONE, SILBERMANN_SORGE, WERCKMEISTER_3,
		WERCKMEISTER_4, WERCKMEISTER_5, WERCKMEISTER_6, KIRNBERGER_3
		and YOUNG.

	Mon Dec 11 00:51:36 2006  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added musical_tuning property.

		* bseutils.h, bseutils.c:
		* bsenote.h, bsenote.c, bsenote.cc: converted bsenote to C++. added musical
		tuning argument to all note/freq API functions and adapted internal logic
		to cope with different tunings. removed unused BSE_FREQ*() macros.

		* bsecore.idl: introduce Bse::MusicalTuningType. added musical_tuning
		field to NoteDescription.

		* bseserver.proc:
		* bseprocedure.proc: added musical tuning arguments to various note
		related procedures, moved note procedures from bseserver.proc to
		bseprocedure.proc and got rid of their BseServer argument.

		* bsemathsignal.h, bsemathsignal.c: made semitone and transpose tables
		musical tuning sensitive.

		* bsepart.[hc]: allow per-part semitone tables, and changed macros so that
		part notes are converted to frequencies according to the musical tuning
		specific to a part.

		* bseitem.[hc]: provide bse_item_current_musical_tuning() and document
		its caveats.

		* bsesource.[hc]: added bse_source_prepared_musical_tuning() which
		provides musical tuning setting for a source if and only if the
		source is prepared. the tuning stays constant while the source is prepared.

		* bsesequencer.cc: perform part specific note->freq conversion.

		* bsemidifile.[hc]: added musical_tuning to use the new note API,
		defaulting to equal temperament.

		* bsemididecoder.c: hard code musical tuning to equal temperament,
		since we have to provide notes to frequencies for MIDI events up front.

		* bseconstant.c:
		* bsestandardosc.c:
		* bseladspamodule.c:
		* bsebiquadfilter.c: adapt to new tuning relative note API, add a
		warning to tooltips that informs about the musical tuning specific
		interpretation of note properties.

		* gsloscillator*.[hc]: changed configuration to contain a transpose_factor
		and not a transpose index which needs to be looked up in conjunction with
		a specific musical tuning.

		* bseglobals.h: removed unused macros.

		* bseinfo.c: adapt to new note API by defaulting to to equal temperament.

		* tests/misctests.cc: test various musical tuning system properties and
		note<->freq conversions.

	svn path=/trunk/; revision=4152

2006-12-12  Tim Janik 	# b2afbb092fcf3b3dfa09c5eb65fbd17509e01617

	added musical tuning system tables submitted by Hanno Behrens

	Tue Dec 12 01:18:22 2006 Tim Janik <timj@gtk.org>

		* bsecore.idl, bsemathsignal.c: added musical tuning system tables
		submitted by Hanno Behrens <mailto:shaftoe@nurfuerspam.de>:
		12-TET, 7-TET, 5-TET, DIATONIC_SCALE, INDIAN_SCALE, PYTHAGOREAN_TUNING,
		PENTATONIC_5_LIMIT, PENTATONIC-BLUES, PENTATONIC-GOGO,
		QUARTER_COMMA_MEANTONE, SILBERMANN_SORGE, WERCKMEISTER_3,
		WERCKMEISTER_4, WERCKMEISTER_5, WERCKMEISTER_6, KIRNBERGER_3
		and YOUNG.

	Mon Dec 11 00:51:36 2006  Tim Janik  <timj@gtk.org>

		* bsesong.[hc]: added musical_tuning property.

		* bseutils.h, bseutils.c:
		* bsenote.h, bsenote.c, bsenote.cc: converted bsenote to C++. added musical
		tuning argument to all note/freq API functions and adapted internal logic
		to cope with different tunings. removed unused BSE_FREQ*() macros.

		* bsecore.idl: introduce Bse::MusicalTuningType. added musical_tuning
		field to NoteDescription.

		* bseserver.proc:
		* bseprocedure.proc: added musical tuning arguments to various note
		related procedures, moved note procedures from bseserver.proc to
		bseprocedure.proc and got rid of their BseServer argument.

		* bsemathsignal.h, bsemathsignal.c: made semitone and transpose tables
		musical tuning sensitive.

		* bsepart.[hc]: allow per-part semitone tables, and changed macros so that
		part notes are converted to frequencies according to the musical tuning
		specific to a part.

		* bseitem.[hc]: provide bse_item_current_musical_tuning() and document
		its caveats.

		* bsesource.[hc]: added bse_source_prepared_musical_tuning() which
		provides musical tuning setting for a source if and only if the
		source is prepared. the tuning stays constant while the source is prepared.

		* bsesequencer.cc: perform part specific note->freq conversion.

		* bsemidifile.[hc]: added musical_tuning to use the new note API,
		defaulting to equal temperament.

		* bsemididecoder.c: hard code musical tuning to equal temperament,
		since we have to provide notes to frequencies for MIDI events up front.

		* bseconstant.c:
		* bsestandardosc.c:
		* bseladspamodule.c:
		* bsebiquadfilter.c: adapt to new tuning relative note API, add a
		warning to tooltips that informs about the musical tuning specific
		interpretation of note properties.

		* gsloscillator*.[hc]: changed configuration to contain a transpose_factor
		and not a transpose index which needs to be looked up in conjunction with
		a specific musical tuning.

		* bseglobals.h: removed unused macros.

		* bseinfo.c: adapt to new note API by defaulting to to equal temperament.

		* tests/misctests.cc: test various musical tuning system properties and
		note<->freq conversions.

	svn path=/trunk/; revision=4151

2006-12-11  timj 	# 437ca5fef833b1aa7fb782b6d07fa2106442d8a0

	expand $Date:$

	svn path=/trunk/; revision=4150

2006-12-11  timj 	# d7a4f0478ad39e99c2b9279d915ff2093ca13c42

	collapsed $Date:$ tags

	svn path=/trunk/; revision=4149

2006-12-11  Tim Janik 	# 16a1f1c9b4969e875500b8d0fcb2abdad7e34a18

	added missing stopband damping check for LOWPASS filters, caught by

	Mon Dec 11 01:13:00 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc (generic_filter_tests): added missing stopband
	        damping check for LOWPASS filters, caught by Stefan.

	svn path=/trunk/; revision=4148

2006-12-11  Tim Janik 	# 74cef2c2521dda2376be4454820bdba956ad0585

	added i18n markup and adapted some tooltips.

	Sun Dec 10 23:56:56 2006 Tim Janik <timj@gtk.org>

	        * davxtalstrings.c (dav_xtal_strings_class_init):
	        * davsyndrum.c (dav_syn_drum_class_init): added i18n markup and
	        adapted some tooltips.

	svn path=/trunk/; revision=4147

2006-12-10  Tim Janik 	# 85338085994127eea6d3dbe6a968b63c03ffbb28

	added i18n markup and adapted some tooltips.

	Sun Dec 10 23:43:42 2006 Tim Janik <timj@gtk.org>

	        * davcanyondelay.c (dav_canyon_delay_class_init): added i18n markup and
	        adapted some tooltips.

	svn path=/trunk/; revision=4146

2006-12-10  stw 	# 8ce04765b85819904307daed993026106f644de2

	update

	svn path=/trunk/; revision=4145

2006-12-10  timj 	# 8b42aaa0cfe9bf03a158735ebcaa9da0ae0459f8

	minor variable rename

	svn path=/trunk/; revision=4144

2006-12-10  stw 	# b36fa44583b18a1f33417d6e9a27e8365c92e221

	updates

	svn path=/trunk/; revision=4143

2006-12-10  Stefan Wasterfeld 	# 6c9c7d00106c789e0adadf19697f8ec8f51b7ded

	Added seek test.

	Sun Dec 10 14:15:18 2006 Stefan Wasterfeld <stefan@space.twc.de>

		* tests/firhandle.cc: Added seek test.

	svn path=/trunk/; revision=4142

2006-12-09  timj 	# 34ba1894f97b34ab5ab48c866f61aa0197ed2875

	minor cleanup

	svn path=/trunk/; revision=4141

2006-12-08  Tim Janik 	# bef8f37265703b7429d2a8204621033efb04399a

	fixed missing "std::".

	Fri Dec 8 23:03:14 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.hh (binary_lookup_insertion_pos): fixed missing "std::".

	svn path=/trunk/; revision=4140

2006-12-04  Stefan Westerfeld 	# 4d301156426b1b6a6aa0cbc955c5330521b458b7

	Added lowpass command. Both commands: made order configurable. Print out

	Mon Dec 4 12:38:13 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsewavetool.cc: Added lowpass command. Both commands: made
		order configurable. Print out the frequency where the filter response
		is close to -48dB. This allows the user to get an idea how wide the
		transition band is for a given order.

	svn path=/trunk/; revision=4139

2006-12-04  Stefan Wasterfeld 	# ff226e7213f2af2569ded8b4b893e372c15f5b3a

	Added a function which computes the filter response in dB, given a FIR

	Mon Dec 4 12:03:19 2006 Stefan Wasterfeld <stefan@space.twc.de>

		* gsldatahandle.h:
		* bsedatahandle-fir.cc: Added a function which computes the filter
		response in dB, given a FIR handle and a frequency.

		* tests/firhandle.cc: Test that theoretical filter response (computed
		by bse_data_handle_fir_response_db) and scanned response match.

	svn path=/trunk/; revision=4138

2006-12-04  Tim Janik 	# 20fcc2fa573f41c5c1c6f57c49a351f2186ddeca

	print out version information for Ogg/Vorbis.

	Mon Dec 4 02:45:21 2006 Tim Janik <timj@gtk.org>

	        * beast-gtk/bstmain.c: print out version information for Ogg/Vorbis.

	svn path=/trunk/; revision=4137

2006-12-04  Tim Janik 	# 00ada5a42a35cfe7fcdc8793490e3b420f62cb08

	added gsl_vorbis_encoder_version() which has to go through some hoops to

	Mon Dec 4 02:42:56 2006 Tim Janik <timj@gtk.org>

	        * gslvorbis-enc.h, gslvorbis-enc.c: added gsl_vorbis_encoder_version()
	        which has to go through some hoops to query the library version (encode
	        and decode a dummy file), but manages to return a version string.

	        * bseserver.proc: provide bse_server_get_vorbis_version().

	svn path=/trunk/; revision=4136

2006-12-04  Tim Janik 	# f80030b9c7951fca8625a584be5bebba42027374

	removed plugin names.

	Mon Dec 4 01:05:20 2006 Tim Janik <timj@gtk.org>

	        * bsepcmdevice-alsa.c:
	        * bsemididevice-alsa.c: removed plugin names.

	svn path=/trunk/; revision=4135

2006-12-04  Tim Janik 	# 3b4e5a75003762f1d1677bc8bbb06f03a1c8e7c5

	rewrote rules to compile multiple C++ plugins into a single .so binary.

	Sun Dec 3 19:42:12 2006 Tim Janik <timj@gtk.org>

	        * Makefile.am, Makefile.plugins: rewrote rules to compile multiple
	        C++ plugins into a single .so binary.

	        * *.[hc]: removed plugin names.

	svn path=/trunk/; revision=4134

2006-12-04  Tim Janik 	# c89d883f3834b6793a313c925c61ee9ecae31254

	changed plugin mechanism to skip per-plugin names and to provide feature

	Sun Dec 3 19:13:17 2006 Tim Janik <timj@gtk.org>

	        * bseexports.h: changed plugin mechanism to skip per-plugin names and
	        to provide feature flag masks to check plugin requirements (to check
	        for MMX/SSE support).

	        * bsecxxplugin.hh, bsecxxplugin.cc: changed symbol export mechanism to
	        use Bse::ExportTypeKeeper constructor and destructor instead of single
	        symbols. use bse_exports__add_node() and bse_exports__del_node() to
	        register/unregister the type nodes. this allows compilation of multiple
	        C++ plugin types into the same .so binary.

	        * bseplugin.h, bseplugin.c: rewrote plugin symbol lookup and type node
	        exports to support load time registration via bse_exports__add_node()
	        and bse_exports__del_node().

	svn path=/trunk/; revision=4133

2006-12-04  Tim Janik 	# 3739d72c905668dc8eb9650a9cfa6d8f02396e48

	added x86_sse4 to BirnetCPUInfo.

	Sun Dec 3 20:09:58 2006 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: added x86_sse4 to BirnetCPUInfo.

	        * birnetcpu.cc (get_x86_cpu_features): detect x86_sse4 bit of CPUID.

	svn path=/trunk/; revision=4132

2006-12-03  Stefan Westerfeld 	# c6c83394ca2bcf80441c6284d35334b83d7e6ead

	Made state size computation work correctly. Added lowpass handle.

	Sun Dec 3 21:13:32 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Made state size computation work correctly.
		Added lowpass handle.

		* tests/firhandle.cc: Extended tests to cover both, the highpass and
		the lowpass handle.

	svn path=/trunk/; revision=4131

2006-12-03  stw 	# a517cdd4ae6c1dce96134ced0d703976e7144e02

	updates

	svn path=/trunk/; revision=4130

2006-12-03  Stefan Westerfeld 	# 7c37315d25427c3358ed5dc9226c205490451355

	Use "%zd" when formatting size_t values with printf. This avoids compiler

	Sun Dec 3 13:52:52 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/bse/filtertest.cc:
		* tools/bsefcompare.cc: Use "%zd" when formatting size_t values with
		printf. This avoids compiler warnings.

	svn path=/trunk/; revision=4129

2006-12-03  Stefan Westerfeld 	# 6f74888b0d6eafb1062fddeecab58c14e2752913

	Use "%zd" instead of "%d" when printing size_t variables. This avoids

	Sun Dec 3 13:47:31 2006 Stefan Westerfeld <stefan@space.twc.de>

		* sfidl-clientcxx.cc:
		* sfidl-corec.cc:
		* sfidl-hostc.cc:
		* sfidl-corecxx.cc:
		* sfidl-cbase.cc:
		* sfimemory.c: Use "%zd" instead of "%d" when printing size_t
		variables. This avoids printf compiler warnings on AMD64.

	svn path=/trunk/; revision=4128

2006-12-03  Stefan Westerfeld 	# 37b9593e13d348b8d3811b79ba415b72349b76f6

	Added code to free feature data properly. This change also fixes compiler

	Sun Dec 3 10:34:13 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsefextract.cc: Added code to free feature data properly. This
		change also fixes compiler warnings on gcc < 4.2, because a virtual
		destructor was added thet was missing before.

	svn path=/trunk/; revision=4127

2006-12-03  Stefan Westerfeld 	# 3b56d89595707e4e68e1962c8cdb93e10fac6838

	Added a test for the highpass performance.

	Sat Dec 2 23:55:44 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/firhandle.cc: Added a test for the highpass performance.

		* bsedatahandle-fir.cc: Optimized performance of the highpass handle.
		It is plain FPU code (not SSE), though.

	svn path=/trunk/; revision=4126

2006-12-02  Stefan Westerfeld 	# ec1d228bba9f09f06679f085a8fedfc383925ecb

	Added a highpass test for multichannel signals.

	Sat Dec 2 22:03:57 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/firhandle.cc: Added a highpass test for multichannel signals.

		* bsedatahandle-fir.cc: Fixed the code for n_channels != 1. Minor
		code cleanups.

	svn path=/trunk/; revision=4125

2006-11-29  Tim Janik 	# 177524203b1f8b288276d8193c264251b558a4db

	do not provide chain/unchain functions after thread system initialization,

	Tue Nov 28 01:20:57 2006 Tim Janik <timj@gtk.org>

	        * birnetthreadimpl.cc: do not provide chain/unchain functions after
	        thread system initialization, since calling them at this point is
	        invalid.

	svn path=/trunk/; revision=4124

2006-11-28  Stefan Westerfeld 	# 96190ba0dac3e308f14803fe4104a39edbad6208

	Some optimizations, more to come.

	Tue Nov 28 21:05:16 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-fir.cc: Some optimizations, more to come.

	svn path=/trunk/; revision=4123

2006-11-27  Stefan Westerfeld 	# 0648f970cea0da20f3149b158d1b611532b8a5ad

	Move highpass handle from gsl to bse namespace.

	Mon Nov 27 22:40:46 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsewavetool.cc: Move highpass handle from gsl to bse
		namespace.

	svn path=/trunk/; revision=4122

2006-11-27  Stefan Westerfeld 	# 0cd1060891160951dabe0407f31f27a2cc542e18

	Move highpass handle from gsl to bse namespace.

	Mon Nov 27 22:32:24 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-fir.cc:
		* gsldatahandle.h:
		* tests/firhandle.cc: Move highpass handle from gsl to bse namespace.

		* bsedatahandle-fir.cc: Implement a "real" data handle. It is not yet
		performance optimized, though.

	svn path=/trunk/; revision=4121

2006-11-27  Stefan Westerfeld 	# d2fb34f4fec64b27d4278bb58f11fac0da3577b1

	Use Birnet::int64 instead of gint64 avoids printf compiler warnings on

	Mon Nov 27 20:46:02 2006 Stefan Westerfeld <stefan@space.twc.de>

		* sfidl-parser.hh: Use Birnet::int64 instead of gint64 avoids printf
		compiler warnings on AMD64.

	svn path=/trunk/; revision=4120

2006-11-27  Stefan Westerfeld 	# 342e616e2758eb95bd0b412bd9465dff4f017505

	Added new gsl_data_handle_get_state_length function for datahandles, with

	Mon Nov 27 20:29:53 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gsldatahandle.[hc]: Added new gsl_data_handle_get_state_length
		function for datahandles, with a corresponding vtable entry. For
		filtering datahandles (such as lowpass handles), which are usually
		stateful, it returns the filter state length.

		* gsldatahandle-vorbis.c:
		* gsldatahandle-mad.c:
		* bsedatahandle-resample.cc:
		* tests/loophandle.c: Implement the get_state_length datahandle
		method.

		* tests/resamplehandle.cc: Test the resampler get_state_length
		function.

	svn path=/trunk/; revision=4119

2006-11-27  Stefan Westerfeld 	# 7aa58707023c94714b73a21f3f0bb3aa884ae7ea

	Check that the filter is zero phase in the passband (== no delay).

	Mon Nov 27 15:19:47 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/firhandle.cc: Check that the filter is zero phase in the
		passband (== no delay).

	svn path=/trunk/; revision=4118

2006-11-26  Stefan Westerfeld 	# 7ac3b5fec0a517d550431ba25d2e4ca96a7ddd7d

	Created test for the fir highpass handle.

	Sun Nov 26 19:08:01 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/firhandle.cc: Created test for the fir highpass handle.

		* bsedatahandle-fir.cc: Fixed parameters passed to coefficient design
		function. Filters have the right cutoff frequency now.

	svn path=/trunk/; revision=4117

2006-11-26  Stefan Westerfeld 	# 3cc9786aa1b488bebceeb931c10b194d759e095d

	Moved highpass handle to bse/bsedatahandle-fir.cc.

	Sun Nov 26 16:25:50 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bseloopfuncs.[hc]: Moved highpass handle to
		bse/bsedatahandle-fir.cc.

		* tools/bsewavetool.cc: Commented out experimental thinout command.

	svn path=/trunk/; revision=4116

2006-11-26  Stefan Westerfeld 	# 40f1b05e648ade397bacff0369bfe8abe8bf117f

	Added bsedatahandle-fir.cc.

	Sun Nov 26 16:32:00 2006 Stefan Westerfeld <stefan@space.twc.de>

		* Makefile.am: Added bsedatahandle-fir.cc.

		* gsldatahandle.h:
		* bsedatahandle-fir.cc: Moved highpass handle here from
		../tools/bseloopfuncs.[hc].

	svn path=/trunk/; revision=4115

2006-11-26  Stefan Westerfeld 	# 3c8cca395d34fa05b6d3109b01e6030a0da351bc

	svn copy from ../bseloopfuncs.c: prepare for moving highpass handle here.

	Sun Nov 26 15:51:39 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-fir.cc: svn copy from ../bseloopfuncs.c: prepare for
		moving highpass handle here.

	svn path=/trunk/; revision=4114

2006-11-26  Stefan Westerfeld 	# 6b0d0fabc519dde631bfdd12394b447fb6004912

	svn copy from ../bseloopfuncs.c: prepare for moving highpass handle here.

	Sun Nov 26 15:51:39 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-fir.cc: svn copy from ../bseloopfuncs.c: prepare for
		moving highpass handle here.

	svn path=/trunk/; revision=4113

2006-11-26  Stefan Westerfeld 	# f7b8d8658fe22230b5c5f9aeab0c9412243a3c5e

	Adapted the API of the highpass handle. Fixed a bug in the convolution

	Sun Nov 26 15:25:49 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bseloopfuncs.[hc]: Adapted the API of the highpass handle.
		Fixed a bug in the convolution code.

		* tools/bsewavetool.cc: Improved the user interface of the highpass,
		so that the user just needs to specify one single frequency: the
		cutoff frequency.

	svn path=/trunk/; revision=4112

2006-11-25  Tim Janik 	# 1e84e29dde71b12cb1938b6a4a3132d6be6dff86

	added a simple adsr test that checks ADSR volume in comparison to a

	Sat Nov 25 01:37:18 2006 Tim Janik <timj@gtk.org>

	        * tests/audio/Makefile.am:
	        * tests/audio/adsrtest.bse: added a simple adsr test that checks ADSR
	        volume in comparison to a reference signal. used avg-spectrum, spectrum
	        and avg-energy to check the colume level, which seems to be catching
	        all relevant changes to ADSR property changes.

	svn path=/trunk/; revision=4111

2006-11-25  timj 	# 2f045c1fc44988f21f07cc52abfd536a44c46f96

	updates

	svn path=/trunk/; revision=4110

2006-11-23  stw 	# a81a57fc8683d15130570e318678f926eb5087ee

	updates

	svn path=/trunk/; revision=4109

2006-11-23  Stefan Westerfeld 	# b1f39d416cf89b86378010ff9aed8286b6420402

	Improved some help strings.

	Thu Nov 23 12:55:14 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsewavetool.cc: Improved some help strings.

	svn path=/trunk/; revision=4108

2006-11-22  Tim Janik 	# 878ebaa7ca59a88625a43c2cc657da8cff677714

	made messages about ladspa compatibility debugging messages. improved

	Wed Nov 22 21:40:17 2006 Tim Janik <timj@gtk.org>

	        * bseladspa.cc: made messages about ladspa compatibility debugging
	        messages. improved message clarity, supressed messages about plugin
	        registration. added missing 'extern "C"'.

	svn path=/trunk/; revision=4107

2006-11-22  timj 	# b05de34727e075e1b7738041a52fdcd8b113afe9

	updates (good commit message, eh? ;)

	svn path=/trunk/; revision=4106

2006-11-22  Tim Janik 	# 6c0e38bcad70c6b55f526d89e2559e3fdbb10c59

	ported bseladspa.c to C++. use BIRNET_MAY_ALIAS to work around strict

	Wed Nov 22 19:52:09 2006 Tim Janik <timj@gtk.org>

	        * bseladspa.cc: ported bseladspa.c to C++. use BIRNET_MAY_ALIAS to
	        work around strict aliasing warnings. load LADSPA modules with local
	        symbol bindings.

	        * bseladspa.h: fixed structure layout for C++.

	        * bsetype.h: use EXTERN_C in code generating macros, to account for
	        macro usage in C++.

	svn path=/trunk/; revision=4105

2006-11-22  Tim Janik 	# 415e8a9166fa976a2d456aaf686ed39ab37fd17e

	prefer configurable browser launchers over non-configurable browser

	Wed Nov 22 19:45:21 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.cc (url_test_show): prefer configurable browser launchers
	        over non-configurable browser launchers.

	        * birnetcdefs.h: provide EXTERN_C and BIRNET_MAY_ALIAS.

	svn path=/trunk/; revision=4104

2006-11-21  Tim Janik 	# bf40536252159dbeb0e8db22c4b6500f32adfe09

	reworked browser launching logic to work around launcher scripts failing

	Tue Nov 21 22:04:15 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.cc: reworked browser launching logic to work around
	        launcher scripts failing unnoticed by executing browser programs
	        asyncronously and executing browser launch scripts syncronously
	        to check the exit code.
	        added "browser" debug key and messages.
	        due to unreliable exit codes or foreground/background execution
	        behaviour, support had to be removed for the launcher scripts
	        xdg-open, htmlview, browser-config and sensible-browser,
	        added support for exo-open, galeon, epiphany, amaya and dillo.

	        * birnetmsg.hh, birnetmsg.cc: added Msg::CustomType class through
	        which users can easily create new logging types. added printf-style
	        Msg::display() variant for custom message types.

	svn path=/trunk/; revision=4103

2006-11-21  Tim Janik 	# 592e25266b4c9b45315aadbdc7564815f5b66907

	updated all po files to new source file set.

	Tue Nov 21 02:03:44 2006 Tim Janik <timj@gtk.org>

	       * updated all po files to new source file set.

	Tue Nov 21 01:57:31 2006  Tim Janik  <timj@gtk.org>

	       * merged po file updates from beast CVS.

	Tue Nov 21 01:26:51 2006  Tim Janik  <timj@gtk.org>

	       * updated all po files to new source file set.

	       * POTFILES.in: added missing files.

	svn path=/trunk/; revision=4102

2006-11-21  Tim Janik 	# 5e19ecf903089078c31585473b43727c2cd01357

	updated all po files to new source file set.

	Tue Nov 21 02:03:44 2006 Tim Janik <timj@gtk.org>

	       * updated all po files to new source file set.

	Tue Nov 21 01:57:31 2006  Tim Janik  <timj@gtk.org>

	       * merged po file updates from beast CVS.

	Tue Nov 21 01:26:51 2006  Tim Janik  <timj@gtk.org>

	       * updated all po files to new source file set.

	       * POTFILES.in: added missing files.

	svn path=/trunk/; revision=4101

2006-11-21  Tim Janik 	# 56c43720badc799effa5b1e64cd97e835401a5a3

	updated all po files to new source file set.

	Tue Nov 21 02:03:44 2006 Tim Janik <timj@gtk.org>

	       * updated all po files to new source file set.

	Tue Nov 21 01:57:31 2006  Tim Janik  <timj@gtk.org>

	       * merged po file updates from beast CVS.

	Tue Nov 21 01:26:51 2006  Tim Janik  <timj@gtk.org>

	       * updated all po files to new source file set.

	       * POTFILES.in: added missing files.

	svn path=/trunk/; revision=4100

2006-11-21  Tim Janik 	# d61eafb070df934389e34379a0b31b8b593cd7fa

	ported to new SFI Msg API. made dialog messaging self-hosted to avoid

	Mon Nov 20 23:39:58 2006 Tim Janik <timj@gtk.org>

	        * bstusermessage.h, bstusermessage.c: ported to new SFI Msg API.
	        made dialog messaging self-hosted to avoid unnecessary messaging
	        API indirections.

	        * bstcxxutils.h, bstcxxutils.cc: new files, providing utilities
	        implemented in C++. provide message handler installation API.

	        * bstmain.c: use bst_message_handler_install() and
	        bst_message_handler_uninstall().

	        * bstapp.c: adaptions to new Msg API.

	        * bstbseutils.h: fixed include order for C++.

	        * bstxxutils.hh, bstxxutils.cc: removed unused files.

	        * tools/bsewavetool.cc: port to C++ Msg API.

	        * shell/bsescminterp.c: ported to new sfi_msg* API. send messages
	        directly instead of introducing an unnecessary Msg layer indireciton.

	svn path=/trunk/; revision=4099

2006-11-21  Tim Janik 	# 6b2e7242d91b3f1444c9e2006b013b7c7fa5aa65

	ported bsemain.c to C++, use C++ Msg API.

	Mon Nov 20 23:39:51 2006 Tim Janik <timj@gtk.org>

	        * bsemain.cc: ported bsemain.c to C++, use C++ Msg API.

	        * bsemain.h: API adaptions due to bsemain.cc porting.

	        * bsecore.idl:
	        * bsejanitor.proc:
	        * bseserver.c: ported to new sfi_msg_* API.

	        * bsesequencer.cc: use bse_message_setup_thread_handler().

	        * bseenginemaster.c: use bse_message_setup_thread_handler() and
	        BIRNET_STATIC_ASSERT().

	svn path=/trunk/; revision=4098

2006-11-21  Tim Janik 	# 745555f350fa7d7482bee12977b341b8c4a8763c

	wrapped C++ Msg API.

	Mon Nov 20 23:39:31 2006 Tim Janik <timj@gtk.org>

	        * sfiwrapper.h, sfiwrapper.cc: wrapped C++ Msg API.

	        * glib-extra.h: removed g_static_assert(), we now have BIRNET_STATIC_ASSERT().

	        * sfimsg.h, sfimsg.c: removed, obsoleted by C++ Msg API wrapper.

	        * tests/misctests.c: added some sfi_msg_*() tests, mostly to check
	        compilability of the provided macros.

	        * tests/testsfidl.cc: fixed compiler warnings.

	svn path=/trunk/; revision=4097

2006-11-21  timj 	# 84272cb39444779319bb627a2b96c697ac409c15

	updates

	svn path=/trunk/; revision=4096

2006-11-21  Tim Janik 	# e84416494761235b5059190c46c802bad92ea8f7

	implemented C++ messaging API, mostly based onthe former sfimsg.c.

	Mon Nov 20 23:39:43 2006 Tim Janik <timj@gtk.org>

	        * birnetmsg.hh, birnetmsg.cc: implemented C++ messaging API,
	        mostly based onthe former sfimsg.c.
	        extended API to match most of the old sfi_msg_* API, including
	        syslog logging, stdlog configuraiton and various new message types.

	        * birnetthread.cc: fixed missing zero initialization of C structs.

	        * tests/infotest.cc: added some message tests.

	svn path=/trunk/; revision=4095

2006-11-15  Tim Janik 	# d2f21703e7e266ac17d5f6ba99205b21b271d003

	changed accesl to use Ctrl+S for saving and Ctrl+D to stop playing songs.

	Wed Nov 15 16:03:00 2006 Tim Janik <timj@gtk.org>

	        * beast-gtk/bstapp.c: changed accesl to use Ctrl+S for saving
	        and Ctrl+D to stop playing songs.

	svn path=/trunk/; revision=4094

2006-11-15  timj 	# edba969bcb456d9754ca4cde3f20e4feb2d1e50b

	Wed Nov 15 01:15:30 2006 Tim Janik <timj@gtk.org> * bsequantizer.cc: use dtoi32 for quantisation effects, which gives round-to-nearest, i.e. {-1.5 -> -1 <- -0.5}, {-0.5 -> 0 <- +0.5} and {+0.5 -> +1 <- +1.5}.

	svn path=/trunk/; revision=4093

2006-11-15  timj 	# c19b53d9c9499cba2d12748eefc4426d0bccc794

	updates

	svn path=/trunk/; revision=4092

2006-11-15  Tim Janik 	# b9902c7c7a8bd073e3b4b3f227b753e856f08bba

	added dtoi32, dtoi64, iround, iceil, ifloor definitions from Rapicorn.

	Wed Nov 15 01:00:21 2006 Tim Janik <timj@gtk.org>

	        * birnetmath.hh, birnetmath.cc: added dtoi32, dtoi64, iround, iceil,
	        ifloor definitions from Rapicorn. these are fast float->integer
	        conversion routines on i386.

	        * tests/math.cc: test dtoi implementation and friends.

	svn path=/trunk/; revision=4091

2006-11-15  Tim Janik 	# bde3199c61e41b2e1c4f80eb0a02582805bc5acf

	restrict typeinfo symbol exports to Sfi/Bse/Birnet symbols. export vtable

	Wed Nov 15 00:59:15 2006 Tim Janik <timj@gtk.org>

	        * ldscript.map: restrict typeinfo symbol exports to Sfi/Bse/Birnet
	        symbols. export vtable symbols to allow plugin building withou tlibtool.

	svn path=/trunk/; revision=4090

2006-11-15  Tim Janik 	# d39c044f0c18f40f3d6f43c47b384de4345dba0a

	added bit-quantization module.

	Wed Nov 15 00:27:55 2006 Tim Janik <timj@gtk.org>

	        * bsequantizer.idl, bsequantizer.cc: added bit-quantization module.

	svn path=/trunk/; revision=4089

2006-11-15  Tim Janik 	# 91ab5c98623524561ca129d683101ecefa1ca33c

	added gobject to bse's link list.

	Wed Nov 15 00:25:16 2006 Tim Janik <timj@gtk.org>

	        * data/bse.pc.in: added gobject to bse's link list.

	svn path=/trunk/; revision=4088

2006-11-15  Tim Janik 	# f09d7cecbd4278cfe12bf0ebd6adfe965f7249b1

	serialize int parameters with LL prefix, to allow values >= 2^31.

	Wed Nov 15 00:23:44 2006 Tim Janik <timj@gtk.org>

	        * sfidl-parser.cc (parseParamHints): serialize int parameters with LL
	        prefix, to allow values >= 2^31.

	svn path=/trunk/; revision=4087

2006-11-14  stw 	# cf54679d9cd04bdc5b41418288733ca7cc21cc6e

	Updates.

	svn path=/trunk/; revision=4086

2006-11-14  Stefan Westerfeld 	# 706968c588f26be677fc2dece1256f5881a7a824

	Added upsample2 and downsample2 commands.

	Tue Nov 14 01:15:00 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsewavetool.cc: Added upsample2 and downsample2 commands.

	svn path=/trunk/; revision=4085

2006-11-14  Stefan Westerfeld 	# 23a36f33ae2f887493d23ca8bf5f6ca69c4979ea

	Added Resampler2::find_precision_for_bits to the API, and an precision

	Tue Nov 14 01:02:45 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseresampler.[hc]*: Added Resampler2::find_precision_for_bits to the
		API, and an precision enum -> string conversion function.

		* bsedatahandle-resample.cc: Use find_precision_for_bits.

	svn path=/trunk/; revision=4084

2006-11-13  stw 	# 58d0a3bca9f81a99e1eda74090110b807fbf4614

	updates.

	svn path=/trunk/; revision=4083

2006-11-13  Stefan Westerfeld 	# 2b748a1d48bc3e0d8995a673a045d2f30ec413ee

	Removed unnecessary delay. The stream delay for both, upsampling and

	Mon Nov 13 20:05:53 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseresamplerimpl.hh: Removed unnecessary delay. The stream delay for
		both, upsampling and downsampling should be truely minimal now.

		* bseresampler.hh: The guarantee that the upsampler delay is even was
		removed from the API. The reason is that we can have a shorter stream
		delay when the upsampler delay is odd.

		* bsedatahandle-resample.cc: Introduced additional delay compensation
		code, because compensating an odd upsampler delay wasn't necessary
		when this code was initially written.

	svn path=/trunk/; revision=4082

2006-11-08  Stefan Westerfeld 	# 380e9e0f1714b2410fd947296ad2dc6eeb420439

	Support for testing linear interpolation.

	Wed Nov 8 23:27:33 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Support for testing linear interpolation.

	svn path=/trunk/; revision=4081

2006-11-08  Stefan Westerfeld 	# b48663edad3a8fc41b43b1db8a2cfc2ed2ae0fcd

	Added coefficient set for linear interpolation. It will probably sound

	Wed Nov 8 23:28:05 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseresampler.[hc]* bseresamplerimpl.hh: Added coefficient set for
		linear interpolation. It will probably sound bad, but its useful for
		testing.

	svn path=/trunk/; revision=4080

2006-11-08  Stefan Westerfeld 	# 0e62c7b6da306e2a764ebaaa55d1c27b92f6be78

	Ensure that accuracy tests use the same amount of samples regardless of

	Wed Nov 8 22:09:36 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Ensure that accuracy tests use the same
		amount of samples regardless of the block size. Make testresampler
		work with very small blocksizes (such as 2). Use impl_name() feature
		of bses blockutils. Small speedup by using shorter test signals.

	svn path=/trunk/; revision=4079

2006-11-08  Stefan Westerfeld 	# d138ac715adf16eb2f08eaa6c07ebe2aa5a6ab5f

	Introduce phase wrapping for sine computation, so that the comparision

	Wed Nov 8 22:00:55 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Introduce phase wrapping for sine
		computation, so that the comparision results don't get worse with the
		length of the input signal.

	svn path=/trunk/; revision=4078

2006-11-05  Tim Janik 	# b6398a7b83f0a624f26b5e5cba66ace3568188b3

	extended fixed orders to 32 and random orders to 64. cut the requested

	Sun Nov 5 04:23:07 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc (random_filter_tests): extended fixed orders to 32
	        and random orders to 64. cut the requested order for band filters in
	        half, because it's doubled upon design.

	svn path=/trunk/; revision=4077

2006-11-05  Tim Janik 	# 629137bd4fa9e876847e57972e9f14998b79f125

	work around a g++-3.3 bug.

	Sun Nov 5 03:21:41 2006 Tim Janik <timj@gtk.org>

	        * tools/bsefextract.cc: work around a g++-3.3 bug.

	svn path=/trunk/; revision=4076

2006-11-04  timj 	# 6f4bf14f9396698e1187f6ea7fe83f294bd0d2af

	updated comments

	svn path=/trunk/; revision=4075

2006-11-04  Tim Janik 	# 9dcfab9f4d3c3adb792177fcbb426f3a40de3d3e

	removed ellf-behavior special casing. switched to higher precision

	Sat Nov 4 20:09:33 2006 Tim Janik <timj@gtk.org>

	        * bsefilter-ellf.c: removed ellf-behavior special casing. switched
	        to higher precision constants. substituted bsemath.h constants.

	        * bsemath.h: provide ln(4), decibel10 and decibel20 factors.

	svn path=/trunk/; revision=4074

2006-11-04  Tim Janik 	# 0167eebdc103ec7350e424b4dd7539bbe68da8e1

	replaced all ellf specific complex number arithmetic by bse_complex*()

	Sat Nov 4 19:46:01 2006 Tim Janik <timj@gtk.org>

	        * bsefilter-ellf.c: replaced all ellf specific complex number
	        arithmetic by bse_complex*() calls.

	        * bsemath.h: provide BSE_COMPLEX_ONE for convenience.

	svn path=/trunk/; revision=4073

2006-11-04  Tim Janik 	# 4dc9507589b941b3edc5555428a0b04f784b20f9

	removed, this has been ported to bsemathtest and is long unused.

	Sat Nov 4 18:14:08 2006 Tim Janik <timj@gtk.org>

	        * gslmathtest.c: removed, this has been ported to bsemathtest and
	        is long unused.

	svn path=/trunk/; revision=4072

2006-11-04  Tim Janik 	# 70690f3a865321583bf8c658001085285f4e8297

	don't include neither of the C++ <complex> or the C99 <complex.h> header

	Sat Nov 4 17:38:28 2006 Tim Janik <timj@gtk.org>

	        * bsemath.h: don't include neither of the C++ <complex> or the C99
	        <complex.h> header files. removed compat typedefs. we'll simply resort
	        to using BseComplex in headers and use <complex> in C++ files.

	        * bsefilter.h: use BseComplex for complex numbers in header files.

	        * bsefilter.cc: adaptions to BseComplex.

	        * bsefilter-ellf.c: use BseComplex instead of C99 complex.

	        * tests/filtertest.cc: adaptions to BseComplex. fixed elliptic filter
	        test to really use stopband_edges, not stopband_db.

	svn path=/trunk/; revision=4071

2006-11-04  Tim Janik 	# 74d37799abbc0d434da074ab0bfbfb08bf8e6458

	removed redundant parenthesis from join_slices().

	Sat Nov 4 17:36:59 2006 Tim Janik <timj@gtk.org>

	        * tools/bsefextract.cc: removed redundant parenthesis from join_slices().

	svn path=/trunk/; revision=4070

2006-11-04  timj 	# e66c2c70bf7fe78c2907fa57a03abbbf99511a22

	updates

	svn path=/trunk/; revision=4069

2006-11-03  stw 	# 34247a4f704cefeb0613d07c239bfbc07ec85e40

	updates

	svn path=/trunk/; revision=4068

2006-11-03  Tim Janik 	# ea75ff44e0e2c0a83cb3376d9659fcbf3e04c0dc

	removed transfer funciton nominator and denominator from public API,

	Fri Nov 3 02:19:09 2006 Tim Janik <timj@gtk.org>

	        * bsefilter.h, bsefilter.cc: removed transfer funciton nominator and
	        denominator from public API, because they are useless for higher
	        order filters. added center-frequency to public API, which is the
	        middle frequency for band filters (used to evaluate gain ot stopband).

	        * bsefilter-ellf.c: provide BseIIRFilterDesign.center_frequency.
	        made some slight precision improvements for cgam evaluations.

	        * tests/filtertest.cc: special cased lengthy routines as slowtest.
	        removed any code (check, eval) related to filter transfer functions.
	        did some test split ups. added random filter tests for butterworth,
	        chebyshev1, elliptic. extended generic filter test to test passband
	        min/max from both sides. added some stopband tests.

	        * tests/filtercatalog.cc: random filter catalog generated with bse-ellf.

	svn path=/trunk/; revision=4067

2006-11-03  Tim Janik 	# 7b5639634852b22fe56920911dbe554ebe6fc700

	ssignificantly reduced the number of generated filters.

	Fri Nov 3 02:20:01 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: ssignificantly reduced the number of
	        generated filters.

	svn path=/trunk/; revision=4066

2006-11-03  Tim Janik 	# 80f9d43fc97d15db39f08ab9992c1d6f68f729ef

	removed transfer funciton nominator and denominator from public API,

	Fri Nov 3 02:19:09 2006 Tim Janik <timj@gtk.org>

		* bsefilter.h, bsefilter.cc: removed transfer funciton nominator and
		denominator from public API, because they are useless for higher
		order filters. added center-frequency to public API, which is the
		middle frequency for band filters (used to evaluate gain ot stopband).

		* bsefilter-ellf.c: provide BseIIRFilterDesign.center_frequency.
		made some slight precision improvements for cgam evaluations.

		* tests/filtertest.cc: special cased lengthy routines as slowtest.
		removed any code (check, eval) related to filter transfer functions.
		did some test split ups. added random filter tests for butterworth,
		chebyshev1, elliptic. extended generic filter test to test passband
		min/max from both sides. added some stopband tests.

		* tests/filtercatalog.cc: random filter catalog generated with bse-ellf.

	svn path=/trunk/; revision=4065

2006-11-02  Tim Janik 	# 144c89df44ef931ae527e54f8668e7a14f30f183

	z_plane_zeros_poles_to_numerator_denomerator(): reimplemented gain

	Thu Nov 2 22:56:55 2006 Tim Janik <timj@gtk.org>

	        * bsefilter-ellf.c: z_plane_zeros_poles_to_numerator_denomerator():
	        reimplemented gain calculation by evaluating the pole and zero
	        polinomials. this eliminates the precision artefacts which caused
	        gain miscalculations for high order filters.

	svn path=/trunk/; revision=4064

2006-11-02  timj 	# b08db1f6efdf39fbfd616ee13afa0a26d15adcee

	cosmetics

	svn path=/trunk/; revision=4063

2006-11-02  Tim Janik 	# 33f22e94e96ae37edaddef723175c67282ccb637

	temporary fix against ring buffer overflow.

	Thu Nov 2 22:44:16 2006 Tim Janik <timj@gtk.org>

	        * bsemath.c: temporary fix against ring buffer overflow.

	        * bsefilter-ellf.c: replaced overly verbose debugging function
	        implementation by simple printf like macros. moved ellf compat
	        constant definitions.

	        * bsefilter.cc: cosmetic changes to bse_iir_filter_request_string().

	        * tests/filtertest.cc: compare filter zero/pole coefficients
	        instead of filter transfer function coefficients which are useless
	        for high order filters. zero/pole pairs for comparsion are
	        determined through nearest-neighbour searches.
	        use TABORT_HANDLER() to hook up print_filter_on_abort(), to print
	        out mismatching filters when tests fail. use T*_CMP() test macros
	        for more informative printouts. extended generic filter test to
	        cover more filter properties.
	        added predesigned filters where ellf miscalculates gain.

	svn path=/trunk/; revision=4062

2006-11-02  Tim Janik 	# 618c548ac40206ae59fcb5db4199c0bb2a573071

	initialize random generators. generate tables for zeros/poles and not

	Thu Nov 2 22:30:27 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: initialize random generators.
	        generate tables for zeros/poles and not transfer function
	        coefficients which are useless for high order filters.
	        randomized various generation parameters to reduce overall
	        number of filters while keeping variety. fixed a few more debug
	        messages.

	svn path=/trunk/; revision=4061

2006-11-02  Tim Janik 	# e3216130761364cb5dc17f0e872c16c32628215a

	added TABORT_HANDLER() to specify a custom callback for informative

	Thu Nov 2 22:28:49 2006 Tim Janik <timj@gtk.org>

	        * birnettests.h: added TABORT_HANDLER() to specify a custom callback
	        for informative printouts to be executed upon failing assertions.
	        such a handler setup is only active within a single TSTART/TDONE block.
	        added TCHECK_CMP() and TASSERT_CMP() to print out mismatching
	        values of failing comparisons.

	svn path=/trunk/; revision=4060

2006-11-02  stw 	# c8c897b1c92a64feb71169d1ec71058b8724415e

	Fixed credits to include the full name: J.S.Bach -> Johann Sebastian Bach.

	svn path=/trunk/; revision=4059

2006-11-01  Stefan Westerfeld 	# 44890e21f2d793635db259c1c0638379e14bd690

	Applied Patch from Tim to define BirnetInt64 and BirnetUInt64 as (signed)

	Wed Nov 1 11:46:10 2006 Stefan Westerfeld <stefan@space.twc.de>

		* birnetcdefs.h: Applied Patch from Tim to define BirnetInt64 and
		BirnetUInt64 as (signed) long long int, as otherwise %lld printf
		formats on AMD64 emit compiler warnings.

		* birnetthreadimpl.cc: Use BirnetUInt64 arguments for thread table
		function implementations of thread_awake_after and
		thread_emit_wakeups, to be consistent with the thread table function
		pointers defined in birnetcdefs.h.

	svn path=/trunk/; revision=4058

2006-10-31  Stefan Westerfeld 	# aa8006874f552074caf5068dcff1bb7eaccc33d5

	Updated copyright/comment: melody is based on music composed by J.S.Bach.

	Tue Oct 31 14:23:33 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/audio/organsong.bse: Updated copyright/comment: melody is
		based on music composed by J.S.Bach.

		* tests/testresampler.cc: Use delay compensation API where
		appropriate, instead of using the filter order to compute the
		resampler delay.

	svn path=/trunk/; revision=4057

2006-10-31  Stefan Westerfeld 	# 2be41533527600bc3157bb43072d3fbe836b681a

	Raise coefficient comparision epsilon ceps 8e-13 for Chebychev filters, as

	Tue Oct 31 13:52:17 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/filtertest.cc: Raise coefficient comparision epsilon ceps
		8e-13 for Chebychev filters, as recommended by Tim, so that "make
		check" on AMD64 passes again.

		* tests/resamplehandle.cc: Use BseResampler delay compensation C API
		where appropriate, instead of computing the delay from the filter
		order.

	svn path=/trunk/; revision=4056

2006-10-31  Tim Janik 	# 2245775d549041420282f7427ca6294524a17353

	added brute_coefficient_tests() which can be used to test massive amounts

	Mon Oct 30 23:57:03 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc: added brute_coefficient_tests() which can be
	        used to test massive amounts of test filters against the library
	        design algorithm.

	svn path=/trunk/; revision=4055

2006-10-31  Tim Janik 	# 7db0904863d146777fda4607d83b2aa6e02f1a71

	changed code generation to generate tables, which is much more gcc

	Mon Oct 30 23:57:03 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: changed code generation to generate tables,
	        which is much more gcc friendly than unlooped code.
	        added support for a --test-code command line option which
	        auto-generates lots of test filters useful for design algorithm tests.
	        added automated butterworth and chbyshev filter code generation.

	svn path=/trunk/; revision=4054

2006-10-30  Tim Janik 	# fae48a8c22077b9c3df34205494b4366a2224bfa

	extended output to server as a code generator for bse/tests/filtertest.cc.

	Mon Oct 30 23:41:58 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: extended output to server as a code generator
	        for bse/tests/filtertest.cc.

	svn path=/trunk/; revision=4053

2006-10-30  Tim Janik 	# 53e98ae9cf89f00a7ed1021f85d82bfea7faeab4

	fixed compilation command, complex function names. wrapped printf

	Mon Oct 30 23:18:50 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: fixed compilation command, complex function
	        names. wrapped printf functions by macros to enable/disable output.

	svn path=/trunk/; revision=4052

2006-10-30  Tim Janik 	# 8dbb43577f50c8e058c00d85c197dfb4cbd833a8

	added early version (SVN r3971) of the concatenated ellf.c program which

	Mon Oct 30 23:02:18 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/bse-ellf.c: added early version (SVN r3971) of the
	        concatenated ellf.c program which was checked into BSE as
	        bseiirfilter.c and then copied to bseellipticfilter.c.

	svn path=/trunk/; revision=4051

2006-10-30  Tim Janik 	# 84de94411a6d14c85175125097c2c1cbd2e37ba8

	new directory for various Research & Development files (scripts, docs,

	Mon Oct 30 22:09:25 2006 Tim Janik <timj@gtk.org>

	        * r+d-files/: new directory for various Research & Development files
	        (scripts, docs, etc.) that aren't currently/actively/directly used by
	        the project.

	svn path=/trunk/; revision=4050

2006-10-30  Tim Janik 	# 2e9d62e8706814fdd9ce785c7edd7e9bfa27470f

	applied some correcitons suggested by Stefan. fixed frequency range loops

	Mon Oct 30 21:57:20 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc: applied some correcitons suggested by Stefan.
	        fixed frequency range loops to test both frequency bounds.
	        extended exit_with_iir_filter_gnuplot() to print the filter design.
	        assert allmost 0-gain for all filters. simplified tests somewhat.
	        added low/high pass and band stop/pass chebyshev1 filters.

	svn path=/trunk/; revision=4049

2006-10-30  Tim Janik 	# 0df345fa79ac0ca3054c9214eb0fd30ef9dcc34a

	some cosmetic fixups. fixed printf format strings for size_t types.

	Mon Oct 30 19:12:12 2006 Tim Janik <timj@gtk.org>

	        * tools/bsefextract.cc: some cosmetic fixups. fixed printf format strings
	        for size_t types.

	        * tools/bsewavetool.cc: resolved C++ pow() call ambiguities.

	svn path=/trunk/; revision=4048

2006-10-30  stw 	# a22ff7d4a635c0d2cfaaaf094b43e84afbfe0397

	updates

	svn path=/trunk/; revision=4047

2006-10-30  Tim Janik 	# 0a32824f5391b41369cee3e108eaf5d16797c123

	new test for the new IIR filter design API. currently covers Butterworth

	Mon Oct 30 01:25:56 2006 Tim Janik <timj@gtk.org>

	        * tests/filtertest.cc: new test for the new IIR filter design API.
	        currently covers Butterworth low pass, high pass, band stop and
	        band pass filter tests. tests are based on coefficient comparisons,
	        filter transfer function analysis, and zero + pole function
	        analysis. for debugging purposes, provided the possibility to
	        prematurely abort filter tests and provide a gnuplot dump.

	svn path=/trunk/; revision=4046

2006-10-30  Tim Janik 	# e3197b0e309110e8831f36d468c6030ca4e67207

	implement bse_iir_filter_kind_string(), bse_iir_filter_type_string(),

	Mon Oct 30 00:55:01 2006 Tim Janik <timj@gtk.org>

	        * bsefilter.cc: implement bse_iir_filter_kind_string(),
		bse_iir_filter_type_string(), bse_iir_filter_request_string(),
		bse_iir_filter_design_string(). implemented bse_iir_filter_design()
		as a thin wrapper around _bse_filter_design_ellf().

		* bsemath.h: include complex.h or complex, depending on C / C++.
		provide ComplexFloat, ComplexDouble, ComplexLongDouble and
		Complex as alias for ComplexDouble.

	svn path=/trunk/; revision=4045

2006-10-30  Tim Janik 	# 668c5e0f1747ad894943e17609962a2036359773

	new header for offering a unified IIR filter API.

	Mon Oct 30 00:47:23 2006 Tim Janik <timj@gtk.org>

	        * bsefilter.h: new header for offering a unified IIR filter API.

	        * bsefilter-ellf.c: define _GNU_SOURCE instead of _ISOC99_SOURCE before
	        including any headers. this gets us the C99 API *and* GNU features
	        (i.e. the uint typedef).
	        split up the implementation so that the current stand-alone behavior
	        is preserved if ELLF_BEHAVIOR is defined and so that the necessary
	        contents from bseellipticfilter.h are inlined otherwise.
	        moved EllfDesignState here (from bseellipticfilter.h). renamed
	        EllfComplex.
	        _bse_filter_design_ellf(): implemented library function prototyped
	        in bsefilter.h to design butterworth, chebychev1 and elliptic filters.

	        * bseellipticfilter.h, bseellipticfilter.c: removed.

	svn path=/trunk/; revision=4044

2006-10-30  Tim Janik 	# 6983cd5e16b55b4d88207c045ece2f49db1f42f8

	new header for offering a unified IIR filter API.

	Mon Oct 30 00:47:23 2006 Tim Janik <timj@gtk.org>

	        * bsefilter.h: new header for offering a unified IIR filter API.

	        * bsefilter-ellf.c: define _GNU_SOURCE instead of _ISOC99_SOURCE before
	        including any headers. this gets us the C99 API *and* GNU features
	        (i.e. the uint typedef).
	        split up the implementation so that the current stand-alone behavior
	        is preserved if ELLF_BEHAVIOR is defined and so that the necessary
	        contents from bseellipticfilter.h are inlined otherwise.
	        moved EllfDesignState here (from bseellipticfilter.h). renamed
	        EllfComplex.
	        _bse_filter_design_ellf(): implemented library function prototyped
	        in bsefilter.h to design butterworth, chebychev1 and elliptic filters.

	        * bseellipticfilter.h, bseellipticfilter.c: removed.

	svn path=/trunk/; revision=4043

2006-10-29  Tim Janik 	# 5c5e2fe7153ff7837413556733686c35a76913c9

	copied from bseellipticfilter.c.

	Sun Oct 29 22:26:09 2006 Tim Janik <timj@gtk.org>

	        * bsefilter-ellf.c: copied from bseellipticfilter.c.

	svn path=/trunk/; revision=4042

2006-10-28  Tim Janik 	# 648ceaca479fbd3853dc7e3acaeecefe133ebc71

	extended BseIIRFilterKind, renamed extended BseIIRFilterKind, renamed

	Sat Oct 28 18:34:48 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h: extended BseIIRFilterKind, renamed
	        * bseellipticfilter.c: extended BseIIRFilterKind, renamed
	        BseIIRFilterRequest, BSE_IIR_MAX_ORDER and BSE_IIR_CARRAY_SIZE.
	        added BseIIRFilterDesign structure which is the intended future
	        output API. renamed some DesignState fields to match BseIIRFilterDesign
	        more closely.

	svn path=/trunk/; revision=4041

2006-10-26  Stefan Westerfeld 	# 35801484467276280458e9a3184dc2394d3715c0

	More comments.

	Thu Oct 26 00:15:53 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gslfilter.c (gsl_filter_sine_scan): More comments.

	svn path=/trunk/; revision=4040

2006-10-25  Stefan Westerfeld 	# 7d44f62444a794aedd288601d4e40eb7ccc311dc

	Implemented --join-spectrum-slices, which allows joining multiple 30ms

	Wed Oct 25 17:47:44 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsefextract.cc: Implemented --join-spectrum-slices, which
		allows joining multiple 30ms spectrums (generated by the --spectrum
		option) into one. The main motivation is getting the file size of
		the reference files in the SVN/tarball down.
		If the filesize doesn't matter, don't use this option, as it makes
		the comparision less accurate.

	svn path=/trunk/; revision=4039

2006-10-24  Tim Janik 	# acf614401610cc61f60924be2b21c6e9b42725ca

	provide "SSE" as impl_name.

	Tue Oct 24 23:55:45 2006 Tim Janik <timj@gtk.org>

	        * bseblockutils.cc: provide "SSE" as impl_name.

	svn path=/trunk/; revision=4038

2006-10-23  Stefan Westerfeld 	# 8d29689c320dd1ec41b874ac049a299b3033680b

	Copied from davorgan.c, to start porting DavOrgan to C++.

	Mon Oct 23 16:10:57 2006 Stefan Westerfeld <stefan@space.twc.de>

		* davorgan.idl:
		* davorgan.cc: Copied from davorgan.c, to start porting DavOrgan to
		C++.

	svn path=/trunk/; revision=4037

2006-10-24  Tim Janik 	# 947916072b4370597bb53834f7fe23090e0976cb

	provide an block utils implementation name. usually "FPU" or "SSE".

	Tue Oct 24 23:52:58 2006 Tim Janik <timj@gtk.org>

	        * bseblockutils.hh, bseblockutils.cc: provide an block utils
	        implementation name. usually "FPU" or "SSE".

	        * bsemain.c: add block utils implementaiton name as suffix to
	        the treport_*() CPU name.

	        * tests/Makefile.am:
	        * tests/blocktests.cc: conditionalized benchmarks, use treport_*().

	        * tests/blocktests.cc, tests/resamplehandle.cc: CPU name fixups.

	svn path=/trunk/; revision=4036

2006-10-24  Tim Janik 	# 5071b8b7bded58255c1c0f346e2463cb089ab562

	setup CPU name similar to birnet_init_test().

	Tue Oct 24 23:51:55 2006 Tim Janik <timj@gtk.org>

	        * sfitests.h (sfi_init_test): setup CPU name similar to birnet_init_test().

	svn path=/trunk/; revision=4035

2006-10-24  Tim Janik 	# 9987712d03ebdca8c6a7d89db43defc61b45d419

	added cpu name to treport_*() output.

	Tue Oct 24 23:51:12 2006 Tim Janik <timj@gtk.org>

	        * birnettests.h: added cpu name to treport_*() output.

	svn path=/trunk/; revision=4034

2006-10-24  timj 	# 656240475c499c509cd6599a2a1186a87a1db211

	make perf: and slowcheck: depend on all, just like it's the case with check:

	svn path=/trunk/; revision=4033

2006-10-24  timj 	# 6318bd5933a5228892ac97d04f26424cd2543634

	coments fixes

	svn path=/trunk/; revision=4032

2006-10-23  stw 	# 74761c6cd2efa35ee7a7acf853834e2e64236b18

	updates

	svn path=/trunk/; revision=4031

2006-10-23  stw 	# 4eac12c223b88c0514c6b5ac74975bd6b8f2274a

	updates

	svn path=/trunk/; revision=4030

2006-10-23  stw 	# c0f5fc4aa054637e01e97fd93d2fdeaebeb104e3

	updates

	svn path=/trunk/; revision=4029

2006-10-23  Tim Janik 	# 8f1b271788f8ab819ed55ed4af2f8b2e1774beba

	minor fixups, rotate news.

	Sun Oct 22 17:19:40 2006 Tim Janik <timj@gtk.org>

	        * web/news.doxi: minor fixups, rotate news.

	svn path=/trunk/; revision=4028

2006-10-23  stw 	# 6bd6c791a7e8c0544d5e5a52367c7b7134672d96

	updates, translated those part that were german to english

	svn path=/trunk/; revision=4027

2006-10-23  Stefan Westerfeld 	# c0f86cfef988de65fff986d5edf3ddb82e628988

	Fixed typos in AutoLocker documentation.

	Mon Oct 23 17:56:19 2006 Stefan Westerfeld <stefan@space.twc.de>

		* birnetthreads.hh: Fixed typos in AutoLocker documentation.

	svn path=/trunk/; revision=4026

2006-10-23  stw 	# 215cf619023b37ad5781620607332bcb6f2a49d3

	updated MCD priorities

	svn path=/trunk/; revision=4025

2006-10-23  Tim Janik 	# 581397e592b626d38f38d1d0efe5b99c4ec07b06

	added utf8_align() and utf8_aligned() to step back from the middle of an

	Wed Oct 11 02:11:29 2006 Tim Janik <timj@gtk.org>

	        * birnetutf8.hh: added utf8_align() and utf8_aligned() to step back
	        from the middle of an UTF-8 char.

	svn path=/trunk/; revision=4024

2006-10-23  Tim Janik 	# 40c23a79cb1f65128ec7f9395ed9e7a370f8af7f

	escape commas in urls.

	Mon Oct 23 01:07:55 2006 Tim Janik <timj@gtk.org>

	        * Code2Doxi.py: escape commas in urls.

	svn path=/trunk/; revision=4023

2006-10-22  Tim Janik 	# ace987c837d88b41a19459f07ad3939cf25520e5

	improved error message slightly.

	Sun Oct 22 22:37:16 2006 Tim Janik <timj@gtk.org>

	        * launchers/suidmain.c: improved error message slightly.

	svn path=/trunk/; revision=4022

2006-10-22  Tim Janik 	# 1c50405e7493535c7425cfe09b8b99f1c4b0804f

	drop priviledges more reliably by re-querying the effective user id with

	Sun Oct 22 22:21:44 2006 Tim Janik <timj@gtk.org>

	        * launchers/suidmain.c: drop priviledges more reliably by re-querying
	        the effective user id with geteuid() instead of just catching errors.

	svn path=/trunk/; revision=4021

2006-10-22  Stefan Westerfeld 	# fb975963712288cc19b4e189f48bf0e8461b2042

	A summary of the things that happened since the last release.

	Sun Oct 22 14:31:48 2006 Stefan Westerfeld <stefan@space.twc.de>

		* web/news.doxi: A summary of the things that happened since the last
		release.

	svn path=/trunk/; revision=4020

2006-10-22  timj 	# af62f7f672c0293ac87534bdd1d77c2386018fd1

	more report.out fixes

	svn path=/trunk/; revision=4019

2006-10-22  Stefan Westerfeld 	# dadf13eb36bf11add2b4bc9c0fffd53d50815439

	Fix tact numbers in TrackRoll view, fixes bug #346916. Instead of printing

	Sun Oct 22 01:54:54 2006 Stefan Westerfeld <stefan@space.twc.de>

		* beast-gtk/bsttrackroll.c: Fix tact numbers in TrackRoll view,
		fixes bug #346916. Instead of printing (more or less) useless
		numbers, the tacts in the TrackRoll view are now numbered 1 2 3 4 and
		so on, and only every fourth of these numbers is shown if there is not
		enough screenspace. This change only works for 4/4 tacts, so this is a
		temporary fix, until the tact handling of beast is rewritten.

	svn path=/trunk/; revision=4018

2006-10-22  Stefan Westerfeld 	# 03589f1e7dd6e52cb277fbede2544b81fbe9c48e

	Pass --bse-disable-randomization to BSE2WAV to make tests deterministic

	Sun Oct 22 01:30:05 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/audio/Makefile.am: Pass --bse-disable-randomization to BSE2WAV
		to make tests deterministic (although still some plugins need to make
		use of that setting).

		* tests/audio/Makefile.am:
		* tests/audio/organsong.ref:
		* tests/audio/organsong.bse: Added test for the DavOrgan module.

	svn path=/trunk/; revision=4017

2006-10-22  Stefan Westerfeld 	# dcb5988e078cee471d344ffb36d199bbbe9dd046

	Added a reset() function for the organ modules, which explicitely

	Sun Oct 22 01:35:37 2006 Stefan Westerfeld <stefan@space.twc.de>

		* davorgan.c: Added a reset() function for the organ modules, which
		explicitely initializes the phases. It initializes them to zero if
		--bse-disable-randomization is active, and randomly otherwise. This
		replaces the old behaviour to initialize the phases somewhat randomly,
		by simply not implementing reset() at all.
		See also bug #364041, which is fixed by this change.

	svn path=/trunk/; revision=4016

2006-10-22  Tim Janik 	# 958b1e144cf32ca883b3f7e5e5aa70dc32d171b5

	fixed up all noinst_PROGRAMS uses to contain $(ALLTESTS), so tests get

	Sun Oct 22 00:30:08 2006 Tim Janik <timj@gtk.org>

	        * **/Makefile.am: fixed up all noinst_PROGRAMS uses to contain
	        $(ALLTESTS), so tests get automatically build by adding them
	        to one of the three *TESTS variables.

	        * Makefile.decl: define ALLTESTS to contain TESTS, SLOWTESTS and
	        PERFTESTS.

	svn path=/trunk/; revision=4015

2006-10-22  Tim Janik 	# 829d26c800cfb4cebd1f8a8e93edd4b3a2dee249

	let allow_randomization default to TRUE, added --bse-disable-randomization

	Sun Oct 22 00:22:27 2006 Tim Janik <timj@gtk.org>

	        * bsemain.c: let allow_randomization default to TRUE, added
	        --bse-disable-randomization and --bse-enable-randomization args.

	svn path=/trunk/; revision=4014

2006-10-22  Tim Janik 	# 433936d4ed90662a69e199955f24b75c70b608d0

	added allow_randomization to BseMainArgs to configure deterministic vs.

	Sun Oct 22 00:04:49 2006 Tim Janik <timj@gtk.org>

	        * bsemain.h: added allow_randomization to BseMainArgs to configure
	        deterministic vs. non-deterministic behavor. mostly interesting
	        for physical modelling plugins.

	svn path=/trunk/; revision=4013

2006-10-21  Stefan Westerfeld 	# ba0fe72cf8500fbda02ad4af7aa2a1df208e7b6b

	Added an example instrument, which sounds like a quite distorted plucked

	Sat Oct 21 22:38:23 2006 Stefan Westerfeld <stefan@space.twc.de>

		* library/instruments/Makefile.am:
		* library/instruments/stw-iron-string.bse: Added an example
		instrument, which sounds like a quite distorted plucked string.

		* tests/bse/Makefile.am: Unbreak make slowcheck from a clean tree: if
		cxxbinding is only in SLOWTESTS, then noinst_PROGRAMS must contain
		$(SLOWTESTS), because otherwise cxxbinding will not be built.

	svn path=/trunk/; revision=4012

2006-10-21  Stefan Westerfeld 	# 145e8e72c35af6fd9d49af5a234d4be5a3e834b7

	Improved comment.

	Sat Oct 21 20:56:27 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/resamplehandle.cc: Improved comment.

	svn path=/trunk/; revision=4011

2006-10-21  Tim Janik 	# 625b93c503b9839c891445d40543e449eab0d554

	reworked to split performance tests from ordinary tests. speed up ordinary

	Sat Oct 21 18:58:35 2006 Tim Janik <timj@gtk.org>

	        * tests/resamplehandle.cc: reworked to split performance tests from
	        ordinary tests. speed up ordinary tests if --test-slow was not
	        specified. fixed test program to use TASSERT() instead of silent exit
	        or return_if_fail on errors.

	        * tests/subnormals.cc: refactored a bit, split up performance tests.

	svn path=/trunk/; revision=4010

2006-10-21  Tim Janik 	# a804fb15237fdc7645246d81e57fab316e4df77d

	allow fixed portion of numbers to occupy 9 characters. added more test

	Sat Oct 21 19:02:47 2006 Tim Janik <timj@gtk.org>

	        * birnettests.h (treport_generic): allow fixed portion of numbers
	        to occupy 9 characters. added more test units.

	svn path=/trunk/; revision=4009

2006-10-21  Tim Janik 	# ba60de0c84fa142b01eb76ffe0089bc35200fb1c

	refactored to sanitize print outs and to run slow tests seperately.

	Sat Oct 21 17:44:03 2006 Tim Janik <timj@gtk.org>

	        * tests/testwavechunk.c: refactored to sanitize print outs
	        and to run slow tests seperately.

	        * tests/bse/Makefile.am: moved cxxbinding test to slow tests.

	        * tests/Makefile.am: speed up resampler quick tests by using
	        larger steppings in the frequency scanning.

	        * tests/filecheck/Makefile.am: moved loading tests to slowcheck.

	        * Makefile.am: ignore report.out on distcleanchecks.

	svn path=/trunk/; revision=4008

2006-10-21  Tim Janik 	# 2d79c5b0efcff470d58c39f70722388eaa083f8d

	adapt to init settings changes.

	Sat Oct 21 17:29:05 2006 Tim Janik <timj@gtk.org>

	        * sfitests.h, sfiwrapper.cc: adapt to init settings changes.

	svn path=/trunk/; revision=4007

2006-10-21  Tim Janik 	# 11d01c5cc4f1d051c4bd75d6137e186ce7dbabf3

	provide init_settings() function to access initialization setting values.

	Sat Oct 21 17:14:54 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.hh, birnetutils.cc: provide init_settings() function to
	        access initialization setting values. test should now use:
	        init_settings().test_perf
	        init_settings().test_slow or
	        init_settings().test_quick.

	        * birnettests.h: fixed float printing.

	svn path=/trunk/; revision=4006

2006-10-21  Tim Janik 	# aa9b8c5416aec5326cbc1e09e4041f5f9646d24b

	preinitialize TESTS, auto-check SLOWTESTS and PERFTESTS in slowcheck and

	Sat Oct 21 04:01:11 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl: preinitialize TESTS, auto-check SLOWTESTS and
	        PERFTESTS in slowcheck and perf rules. added report rule to
	        run all of check, slowcheck and perf and log into report.out.

	svn path=/trunk/; revision=4005

2006-10-21  timj 	# 8cbb3cffbed7b9bb17f2650db204911c14f46d84

	some comments

	svn path=/trunk/; revision=4004

2006-10-21  Tim Janik 	# ddf97e758233b15f3b15b40aaa6d8e79b35d4d28

	added treport_maximized() and treport_minimized() benchmark reporting

	Sat Oct 21 03:46:05 2006 Tim Janik <timj@gtk.org>

	        * birnettests.h: added treport_maximized() and treport_minimized()
	        benchmark reporting funcitons. added TUnitType to allow specification
	        of units for benchmark results.

	        * birnetcdefs.h:
	        * birnetutils.cc: parse --g-fatal-warnings, --test-quick, --test-slow
	        and --test-perf. allow special casing of tests via
	        birnet_init_settings->test_quick, birnet_init_settings->test_slow and
	        birnet_init_settings->test_perf.

	        * tests/sorting.cc:
	        * tests/strings.cc:
	        * tests/threads.cc:
	        * tests/Makefile.am: split up TESTS into SLOWTESTS and PERFTESTS and
	        report performance results properly.

	svn path=/trunk/; revision=4003

2006-10-20  Stefan Westerfeld 	# db908253a2cfd186ef8cefbf4ffdd60bb12db856

	More refactoring.

	Fri Oct 20 23:03:36 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/bse/filtertest.cc: More refactoring.

	svn path=/trunk/; revision=4002

2006-10-20  Stefan Westerfeld 	# c4a194761efbba2d4ec05ea5354b5c65b5ac0e78

	Fixed a small bug in block volume computation.

	Fri Oct 20 23:03:57 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gslfilter.c (gsl_filter_sine_scan): Fixed a small bug in block
		volume computation.

	svn path=/trunk/; revision=4001

2006-10-20  Stefan Westerfeld 	# 2883ab8caccce5419b6c1813474554fed4d976c1

	Refactoring. Adapted to the changes of the sine scanning function.

	Fri Oct 20 14:01:19 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/bse/filtertest.cc: Refactoring. Adapted to the changes of the
		sine scanning function.

		* configure.in: Added configure check for sincos() function.

		* tools/mathtool.c: Adapted to changes of the sine scanning function.

	svn path=/trunk/; revision=4000

2006-10-20  Stefan Westerfeld 	# aa93e9644911af48b062e0126d1fbb31160bb8be

	Changed the API and implementation of the sine scanning function to figure

	Fri Oct 20 13:58:38 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gslfilter.[hc] (gsl_filter_sine_scan): Changed the API and
		implementation of the sine scanning function to figure out how long to
		scan by computing the volume for 0.1 second blocks, and waiting until
		the volume doesn't change anymore.

	svn path=/trunk/; revision=3999

2006-10-18  Stefan Westerfeld 	# 5f3c8ee8507864b27f82f6d3058c12a9192bc078

	Fixed my last commit. Sorry.

	Wed Oct 18 22:05:37 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Fixed my last commit. Sorry.

	svn path=/trunk/; revision=3998

2006-10-18  Stefan Westerfeld 	# 7ae47bc070302b08be19d46d0e57beb7a5a31d38

	Improved comments on delay compensation.

	Wed Oct 18 21:47:15 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/resamplehandle.cc:
		* bseresampler.hh: Improved comments on delay compensation.

		* bsedatahandle-resample.cc: Reorganized delay compensation code in
		open() a bit, improved comments.

	svn path=/trunk/; revision=3997

2006-10-17  Tim Janik 	# 4e036338c2e2cca648c43b0f4ea7fcacef16323c

	cosmetics, fixed constants.

	Tue Oct 17 23:10:43 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.c: cosmetics, fixed constants.

	svn path=/trunk/; revision=3996

2006-10-17  timj 	# 211b91307f6e61c41fd4bdc5b6aef87a67fa80bd

	rearranged functions

	svn path=/trunk/; revision=3995

2006-10-17  Tim Janik 	# 6d01e9dbec0d4732319e8258d4f0e08e2c7382ac

	turned remaining global variables into local variables or structure

	Tue Oct 17 22:03:52 2006 Tim Janik <timj@imendio.com>

	        * bseellipticfilter.h:
	        * bseellipticfilter.c: turned remaining global variables into local
	        variables or structure members.

	svn path=/trunk/; revision=3994

2006-10-17  Stefan Westerfeld 	# 659c7cba3e0ac0c44bf594e8cc63cf4108308d23

	Run filtertest during make check.

	Tue Oct 17 19:04:03 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/bse/Makefile.am: Run filtertest during make check.

		* tests/bse/filtertest.cc: Added option parsing and usage(). Included
		a few more example filters. Increased coefficient precision for
		compiled-in coefficients.

	svn path=/trunk/; revision=3993

2006-10-17  Tim Janik 	# e9706b030d56bfa6e32646d5b8299aef76a73dae

	moved elliptic integral values, chebyshev/elliptic phi and gain into the

	Tue Oct 17 02:12:24 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h, bseellipticfilter.c: moved elliptic integral
	        values, chebyshev/elliptic phi and gain into the filter state structure.
	        eliminated other global variables by declaring them in local scopes.

	svn path=/trunk/; revision=3992

2006-10-17  Tim Janik 	# 2ed6fe8ac9dd33f3439a8370b2ee2dc4631825d5

	define MAX_ORDER and MAX_COEFFICIENT_ARRAY_SIZE. added array for s-plane

	Tue Oct 17 01:43:26 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h: define MAX_ORDER and MAX_COEFFICIENT_ARRAY_SIZE.
	        added array for s-plane poles and zeros to DesignState.

	        * bseellipticfilter.c: added -ffloat-store to the compilation option to
	        keep compatibility with math.h-enabled ellf.c. resolved non-local double
	        variable fixmes. store s-plane zeros and poles as ds->zs. changed to use
	        MAX_COEFFICIENT_ARRAY_SIZE as array bound.

	svn path=/trunk/; revision=3991

2006-10-17  Tim Janik 	# b604f4e58ca92313907b7c11ab13554845151fa3

	changed static y[] array into local scope variables/arrays.

	Tue Oct 17 00:50:08 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.c: changed static y[] array into local scope
	        variables/arrays.

	svn path=/trunk/; revision=3990

2006-10-17  Tim Janik 	# f4e8608a4bf442e2005da0ca5a460b87a9e4bbaa

	removed remaining static integers by using either local variables or by

	Tue Oct 17 00:31:20 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.c: removed remaining static integers by using
	        either local variables or by using ds->z_counter. minor whitespace
	        fixups.

	        * bseellipticfilter.h: added and documented z_counter.

	svn path=/trunk/; revision=3989

2006-10-17  Tim Janik 	# 6a97752c621e288a4e6345be4250173c93e12de6

	whitespace and paranthese fixes.

	Tue Oct 17 00:17:23 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.c: whitespace and paranthese fixes.

	svn path=/trunk/; revision=3988

2006-10-17  Tim Janik 	# 37eb00e42e0410fd537038d79def87b337ee825a

	white space fixups, changed static zord to ds->n_solved_poles.

	Tue Oct 17 00:05:55 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h, bseellipticfilter.c: white space fixups,
	        changed static zord to ds->n_solved_poles.

	svn path=/trunk/; revision=3987

2006-10-16  Tim Janik 	# 61e0f26c5c15739c5d3b37c47b8feac83f2a810f

	fixed documentation typo.

	Mon Oct 16 23:26:40 2006 Tim Janik <timj@gtk.org>

	        * bsesummation.idl:
	        * bseadder.c: fixed documentation typo.

	svn path=/trunk/; revision=3986

2006-10-16  Tim Janik 	# 91d6829693ed54ccd9eb353456d8a0ea0192c958

	-programs are supposed to be quick sanity tests, to be executed e.g.

	Mon Oct 16 22:53:35 2006 Tim Janik <timj@gtk.org>

	        * this change accomplishes the move to distinguish test programs
	        only by the makefile rules they are executed at. check:-programs
	        are supposed to be quick sanity tests, to be executed e.g. before
	        commits. slowcheck:-programs are in place to check implementations,
	        features and auxillary files, and may consume significant amounts
	        of time. perf:-programs are programs run as performance tests and
	        should provide performance measurement information as output.
	        all three targets are supposed to pass without errors for make
	        distcheck.

	        * tests/audio/: moved here from slowtests/audio/.
	        * tests/filecheck/: moved here from slowtests/filecheck/.

	        * tests/audio/Makefile.am: slight fixups.

	        * tests/.:
	        * tests/Makefile.am: moved slowtests/ contents here.
	        added perftest and testresampler to perf: rule.

	        * Makefile.decl: added recursive perf: rule. silenced check-local:.

	svn path=/trunk/; revision=3985

2006-10-16  Tim Janik 	# 41e940c34091fa27553c4bd5048560830559d0e3

	-programs are supposed to be quick sanity tests, to be executed e.g.

	Mon Oct 16 22:53:35 2006 Tim Janik <timj@gtk.org>

	        * this change accomplishes the move to distinguish test programs
	        only by the makefile rules they are executed at. check:-programs
	        are supposed to be quick sanity tests, to be executed e.g. before
	        commits. slowcheck:-programs are in place to check implementations,
	        features and auxillary files, and may consume significant amounts
	        of time. perf:-programs are programs run as performance tests and
	        should provide performance measurement information as output.
	        all three targets are supposed to pass without errors for make
	        distcheck.

	        * tests/audio/: moved here from slowtests/audio/.
	        * tests/filecheck/: moved here from slowtests/filecheck/.

	        * tests/audio/Makefile.am: slight fixups.

	        * tests/.:
	        * tests/Makefile.am: moved slowtests/ contents here.
	        added perftest and testresampler to perf: rule.

	        * Makefile.decl: added recursive perf: rule. silenced check-local:.

	svn path=/trunk/; revision=3984

2006-10-16  Tim Janik 	# 7787756fcfb7e270d56ca8550d4e648ed56151d2

	-programs are supposed to be quick sanity tests, to be executed e.g.

	Mon Oct 16 22:53:35 2006 Tim Janik <timj@gtk.org>

	        * this change accomplishes the move to distinguish test programs
	        only by the makefile rules they are executed at. check:-programs
	        are supposed to be quick sanity tests, to be executed e.g. before
	        commits. slowcheck:-programs are in place to check implementations,
	        features and auxillary files, and may consume significant amounts
	        of time. perf:-programs are programs run as performance tests and
	        should provide performance measurement information as output.
	        all three targets are supposed to pass without errors for make
	        distcheck.

	        * tests/audio/: moved here from slowtests/audio/.
	        * tests/filecheck/: moved here from slowtests/filecheck/.

	        * tests/audio/Makefile.am: slight fixups.

	        * tests/.:
	        * tests/Makefile.am: moved slowtests/ contents here.
	        added perftest and testresampler to perf: rule.

	        * Makefile.decl: added recursive perf: rule. silenced check-local:.

	svn path=/trunk/; revision=3983

2006-10-16  Tim Janik 	# 74478b0996f0cf30a228dde58617071db3450c20

	-programs are supposed to be quick sanity tests, to be executed e.g.

	Mon Oct 16 22:53:35 2006 Tim Janik <timj@gtk.org>

	        * this change accomplishes the move to distinguish test programs
	        only by the makefile rules they are executed at. check:-programs
	        are supposed to be quick sanity tests, to be executed e.g. before
	        commits. slowcheck:-programs are in place to check implementations,
	        features and auxillary files, and may consume significant amounts
	        of time. perf:-programs are programs run as performance tests and
	        should provide performance measurement information as output.
	        all three targets are supposed to pass without errors for make
	        distcheck.

	        * tests/audio/: moved here from slowtests/audio/.
	        * tests/filecheck/: moved here from slowtests/filecheck/.

	        * tests/audio/Makefile.am: slight fixups.

	        * tests/.:
	        * tests/Makefile.am: moved slowtests/ contents here.
	        added perftest and testresampler to perf: rule.

	        * Makefile.decl: added recursive perf: rule. silenced check-local:.

	svn path=/trunk/; revision=3982

2006-10-16  Stefan Westerfeld 	# 7fc5311d83ffdb435e3405cb1d81fe0c31e892ef

	Added test program for testing IIR filters against specifications. It

	Mon Oct 16 13:40:47 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/bse/Makefile.am:
		* tests/bse/filtertest.cc: Added test program for testing IIR filters
		against specifications. It supports both: scanning the actual filter
		transfer function by filtering sine waves, and computing the filter
		transfer function by evaluating H(z).

	svn path=/trunk/; revision=3981

2006-10-16  Tim Janik 	# 87787419e7c4adc33d2a09d9fd5379c2c1ab5504

	include math.h instead of declaring standard math.h functions. print

	Sun Oct 15 23:17:39 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h:
	        * bseellipticfilter.c: include math.h instead of declaring standard
	        math.h functions. print debugging/informative output through an
	        extra function. beefed up ARRSIZ once more for high order filters.
	        added custom function to print the transfer function coefficients
	        for debugging. fixed reading from stdin to use fgets().
	        reverted granularity changes in filter table printing. renamed all
	        complex functions to not clash with complex.h.
	        added some workarounds with fixme marks to stay value (error)
	        compatible with former versions of the ellf program, these can be
	        removed once we have filter tests in place. removed unecessary
	        comments, streamlined others. removed obsolete configuration
	        logic and other unecessary preprocessor cruft. removed unused
	        declarations, moved many variable and constant declarations into
	        an inner scope. renamed heavily abbreviated functions. renamed
	        and recoded main() into iir_filter_design() which does read all
	        design parameters from a structure. added a new main with simply
	        stdin-read logic to call iir_filter_design().
	        for the moment, moved structure declarations for filter design
	        parameters and filter calculation state into bseellipticfilter.h.

	svn path=/trunk/; revision=3980

2006-10-16  Tim Janik 	# 6e5a1174d19c603d23b8afb53f1a31149a8f13d2

	include math.h instead of declaring standard math.h functions. print

	Sun Oct 15 23:17:39 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.c: include math.h instead of declaring standard
	        math.h functions. print debugging/informative output through an
	        extra function. beefed up ARRSIZ once more for high order filters.
	        added custom function to print the transfer function coefficients
	        for debugging. fixed reading from stdin to use fgets().
	        reverted granularity changes in filter table printing.

	svn path=/trunk/; revision=3979

2006-10-15  Tim Janik 	# 3503fec7791884ac9ee6454beacb7a00d392af4f

	renamed from bseiirfilter.*.

	Sun Oct 15 22:52:53 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h, bseellipticfilter.c: renamed from bseiirfilter.*.

	svn path=/trunk/; revision=3978

2006-10-15  Tim Janik 	# 6c581f3a745b4180134817c72c9ca26a1dafc65d

	renamed from bseiirfilter.*.

	Sun Oct 15 22:52:53 2006 Tim Janik <timj@gtk.org>

	        * bseellipticfilter.h, bseellipticfilter.c: renamed from bseiirfilter.*.

	svn path=/trunk/; revision=3977

2006-10-15  Tim Janik 	# 00b8b6603e92430ccd634bc4f2b7b05e2fadcf5f

	added BSE_DOUBLE_EPSILON and BSE_FLOAT_EPSILON, constants for the

	Sun Oct 15 22:49:51 2006 Tim Janik <timj@gtk.org>

	        * bseieee754.h: added BSE_DOUBLE_EPSILON and BSE_FLOAT_EPSILON,
	        constants for the round-off error at 1.0.

	svn path=/trunk/; revision=3976

2006-10-15  Stefan Westerfeld 	# e84f9a289d1b50f8a72e226aec45868007dd5d5c

	Made implementation of gsl_filter_sine_scan() more reliable by using two

	Sun Oct 15 20:58:57 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gslfilter.c: Made implementation of gsl_filter_sine_scan() more
		reliable by using two phase shifted signals (see comment in the
		implementation).

	svn path=/trunk/; revision=3975

2006-10-12  Stefan Westerfeld 	# d0399a509978a3eb9c3c18b495a51166f7a1806f

	Use the newly introduced Resampler2::delay().

	Thu Oct 12 22:30:46 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Use the newly introduced
		Resampler2::delay().

	svn path=/trunk/; revision=3974

2006-10-12  Stefan Westerfeld 	# 6bc24740b1dfd7956630a9321cabb3bfb78815ba

	Documentation improvements. Fixed subsampling and downsampling accuracy

	Thu Oct 12 22:11:49 2006 Stefan Westerfeld <stefan@space.twc.de>

		* slowtests/testresampler.cc: Documentation improvements. Fixed
		subsampling and downsampling accuracy test for frequencies > 11025 Hz,
		where the correct result is that the frequency gets filtered out.
		Reimplemented the error-spectrum FFT normalization.

	svn path=/trunk/; revision=3973

2006-10-12  Stefan Westerfeld 	# bac25bbc5913962cd3da8ea1b76b2ac674933071

	Added a virtual function Resampler2::delay(), which can be used for

	Thu Oct 12 21:48:54 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseresampler.hh:
		* bseresampler.cc:
		* bseresamplerimpl.hh: Added a virtual function Resampler2::delay(),
		which can be used for compensation of the resampler introduced delay.
		Provide C API wrapper for the function: bse_resampler2_delay().

		* tests/resamplehandle.cc: Test the delay compensation function.
		Fix a buglet in another test (comparing signals needs fabs()).

	svn path=/trunk/; revision=3972

2006-10-12  stw 	# 8964b277edeb95a560e44af29f1ecdf222adabaa

	updates

	svn path=/trunk/; revision=3971

2006-10-12  Stefan Westerfeld 	# 4416c1f13b1c20b20971c00ae9a20c7b34db5503

	Improved documentation on FFT normalization.

	Thu Oct 12 16:54:42 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gslfft.h: Improved documentation on FFT normalization.

	svn path=/trunk/; revision=3970

2006-10-12  Stefan Westerfeld 	# bc6720b9d2e32767dc08ec71472bc8bda7b486ed

	Added some comments.

	Thu Oct 12 13:25:38 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseiirfilter.c: Added some comments.

	svn path=/trunk/; revision=3969

2006-10-12  Tim Janik 	# 2ce730b4b3f2a03f8dc2cc2b91c510f645c8e87e

	enlarged ARRSIZ so order 16 filters can be calculated. renamed and

	Thu Oct 12 02:23:15 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: enlarged ARRSIZ so order 16 filters can be calculated.
	        renamed and reworked print_filter_table() to print the filter table with
	        much finer granularity.

	svn path=/trunk/; revision=3968

2006-10-12  Tim Janik 	# 690c2fdd4e2da8301057ff838f8705a44bab33e0

	more unused section removal. auto-fixed indentation.

	Thu Oct 12 02:14:44 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: more unused section removal. auto-fixed indentation.

	svn path=/trunk/; revision=3967

2006-10-12  Tim Janik 	# d64c4ca4d09d9b4be158be351f179e4fe739f054

	streamlined first comment section. got rid of useless definitions and

	Thu Oct 12 02:01:47 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: streamlined first comment section. got rid of useless
	        definitions and preprocessor special cases.

	svn path=/trunk/; revision=3966

2006-10-12  Tim Janik 	# b1554c14978c934e602cd89cba6153000618805b

	streamlined some comments, fixed includes and prototypes and constant

	Thu Oct 12 01:50:57 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: streamlined some comments, fixed includes and
	        prototypes and constant tables to compile into a test program.

	svn path=/trunk/; revision=3965

2006-10-12  Tim Janik 	# dcc4c6bbf9daa8bb0fa8ec80ccc7091864dc5eb7

	since the ellf program is shipped standalone and as part of the cephes

	Thu Oct 12 01:44:17 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: since the ellf program is shipped standalone and as
	        part of the cephes math library, with no copying restrictions, this
	        code is now put under an "AS IS" NO-WARRANTY license, properly
	        attributing Stephen L. Moshier.

	svn path=/trunk/; revision=3964

2006-10-12  Tim Janik 	# 50c71a4c9abaf09d554a74757355d9894a009ca5

	added concatenated source code of the ellf filter design program by

	Thu Oct 12 01:38:39 2006 Tim Janik <timj@gtk.org>

	        * bseiirfilter.c: added concatenated source code of the ellf filter
	        design program by Stephen L. Moshier. program homepage is:
	          http://www.moshier.net/ellfdoc.html

	        * bseiirfilter.h: new empty header file.

	svn path=/trunk/; revision=3963

2006-10-11  stw 	# b80d65e1cdf5ad3d18b856d6f5204da9a2e2b7a7

	updates

	svn path=/trunk/; revision=3962

2006-10-10  Tim Janik 	# 9aefe2f61a38b3f1ae34c99d94bcf031797eef31

	added Unichar::isvalid(). changed arguemnt order of utf8_find_prev() to

	Tue Oct 10 23:23:11 2006 Tim Janik <timj@gtk.org>

	        * birnetutf8.hh, birnetutf8.cc: added Unichar::isvalid().
	        changed arguemnt order of utf8_find_prev() to match that of
	        g_utf8_find_prev_char(), adapted test case. added utf8_validate(),
	        wrapping g_utf8_validate().

	        * tests/strings.cc: adapt to utf8_find_prev(). added Unichar::isvalid()
	        test and utf8_validate() test.

	svn path=/trunk/; revision=3961

2006-10-10  Tim Janik 	# ccdf539c21b5c5d52f12604209a73316d391da63

	provide extra prototype for extern inline functions for newer gcc.

	Tue Oct 10 01:34:05 2006 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: provide extra prototype for extern inline functions
	        for newer gcc.

	svn path=/trunk/; revision=3960

2006-10-10  Tim Janik 	# 5ae8eed8afd536c05d28c61ccd4f22d72a1388e7

	fixed typo in condition.

	Mon Oct 9 23:58:21 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.cc: fixed typo in condition.

	        * birnet-zintern.cc: fixed debugging statement.

	svn path=/trunk/; revision=3959

2006-10-10  Tim Janik 	# a6fbfcc6d6dbd92e63d83dfb0113ca1d6b64135d

	ensure we have FALSE, TRUE, ABS, MIN, MAX, CLAMP, ARRAY_SIZE and STRFUNC.

	Mon Oct 9 23:47:30 2006 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: ensure we have FALSE, TRUE, ABS, MIN, MAX, CLAMP,
	        ARRAY_SIZE and STRFUNC.

	        * birnetutils.hh: don't publically include glib.h, adapted affected
	        callers. pre-declare ThreadTable to use atomic functions in class
	        ReferenceCountImpl.

	        * birnetutils.hh, birnetutils.cc: added string utilities to convert
	        strings to and from bool, int, uint, float, double and double vector.
	        added utilities to convert strings tolower, toupper, totitle, to strip
	        strings and to print into strings in printf style.
	        added uuid string test and comparison and errno to string conversion.

	        * birnet-zintern.cc: conveted somewhat more to C++.

	        * tests/strings.cc: added uuid string functions tests.

	svn path=/trunk/; revision=3958

2006-10-09  Tim Janik 	# 1c12a52031b72b74b7ad55ed7331d21b8ced1790

	wrap GLib isalnum() and friends to classify unichar characters. provide

	Mon Oct 9 23:00:39 2006 Tim Janik <timj@gtk.org>

	        * birnetutf8.hh, birnetutf8.cc: wrap GLib isalnum() and friends to
	        classify unichar characters. provide inline functions to increment
	        and decrement positions in UTF-8 strings.

	        * tests/strings.cc: new test program to test birnetutf8.hh functions.

	svn path=/trunk/; revision=3957

2006-10-09  timj 	# ab29c226d12f49aa87f51bd5af0d8cc5fee3abf1

	test commit

	svn path=/trunk/; revision=3956

2006-10-08  Stefan Westerfeld 	# 9580d07f4acc453dee1a062f1507b2e756b07472

	Lessen the thresholds for downsampling datahandle 24bit test, because

	Sun Oct 8 21:20:14 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/resamplehandle.cc: Lessen the thresholds for downsampling
		datahandle 24bit test, because AMD64, due to its -mfpmath=sse default,
		doesn't get as good results as i386 machines do. With the new
		thresholds, make check passes on AMD64, too.

	svn path=/trunk/; revision=3955

2006-10-08  Tim Janik 	# b7baeed524f66e536f7946c00779cade8ae6e153

	ship birnetcdefs.h.

	Sun Oct 8 16:20:18 2006 Tim Janik <timj@gtk.org>

		* Makefile.am: ship birnetcdefs.h.

		* birnetthreadimpl.cc: added internal default constructors for gcc-3.3.

		* birnetmsg.hh: reordered function attributes on constructors for gcc-3.3.

	Sat Oct  7 23:58:58 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h (BIRNET_ABORT_NORETURN): added noreturn call to macros
		which can't return, to silence compiler in some cases.

	Sat Oct  7 18:32:00 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: moved non-symbol C API bits from birnetcore.h and
		birnethread.h bits here. extended threading table to also cover the
		normal threading API.

		* birnetcpu.hh, birnetcpu.cc: minor API changes.

		* birnetthread.hh, birnetthread.cc: use global threading table to
		access thread layer.

		* birnetthreadimpl.cc: main threading implementation moved here and
		ported to C++. work around g_atomic_int_set and g_atomic_pointer_set
		missing from glib <= 2.10. reworked threading functions to use the
		global threading table.

		* birnetthread.h, birnetthread.c: removed. mostly merged into birnetthreadimpl.cc.

		* birnetutils.hh, birnetutils.cc: added birnet_runtime_problemv().

		* merged birnetutils.hh with birnetutilsxx.hh, and the same for the .cc files.

		* tests/threads.cc: added simple wrappers to keep the threading tests going.

	svn path=/trunk/; revision=3954

2006-10-08  Tim Janik 	# 2ca3f6d04f6cc6a34390ccde38f40f6a93f1195c

	ship birnetcdefs.h.

	Sun Oct 8 16:20:18 2006 Tim Janik <timj@gtk.org>

		* Makefile.am: ship birnetcdefs.h.

		* birnetthreadimpl.cc: added internal default constructors for gcc-3.3.

		* birnetmsg.hh: reordered function attributes on constructors for gcc-3.3.

	Sat Oct  7 23:58:58 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h (BIRNET_ABORT_NORETURN): added noreturn call to macros
		which can't return, to silence compiler in some cases.

	Sat Oct  7 18:32:00 2006  Tim Janik  <timj@gtk.org>

		* birnetcdefs.h: moved non-symbol C API bits from birnetcore.h and
		birnethread.h bits here. extended threading table to also cover the
		normal threading API.

		* birnetcpu.hh, birnetcpu.cc: minor API changes.

		* birnetthread.hh, birnetthread.cc: use global threading table to
		access thread layer.

		* birnetthreadimpl.cc: main threading implementation moved here and
		ported to C++. work around g_atomic_int_set and g_atomic_pointer_set
		missing from glib <= 2.10. reworked threading functions to use the
		global threading table.

		* birnetthread.h, birnetthread.c: removed. mostly merged into birnetthreadimpl.cc.

		* birnetutils.hh, birnetutils.cc: added birnet_runtime_problemv().

		* merged birnetutils.hh with birnetutilsxx.hh, and the same for the .cc files.

		* tests/threads.cc: added simple wrappers to keep the threading tests going.

	svn path=/trunk/; revision=3953

2006-10-07  Tim Janik 	# b5fc77dc92d79ad29978bf456a3c8ebcb5dbb96c

	header file to be included by test programs.

	Sat Oct 7 23:01:54 2006 Tim Janik <timj@gtk.org>

	        * sfitests.h: header file to be included by test programs.

	svn path=/trunk/; revision=3952

2006-10-07  Tim Janik 	# a077ef6b1f81949ebfaee2561fc2643a049623f8

	adapted to recent Birnet/Sfi changes.

	Sat Oct 7 21:32:38 2006 Tim Janik <timj@gtk.org>

	        * bsepcmdevice-alsa.c:
	        * bsemididevice-alsa.c: adapted to recent Birnet/Sfi changes.

	svn path=/trunk/; revision=3951

2006-10-07  Tim Janik 	# d31fcc05eb135aa3088d0c888aca3d05f24b6ab3

	adapt to new file names.

	Sat Oct 7 20:56:04 2006 Tim Janik <timj@gtk.org>

	        * POTFILES.in:
	        * POTFILES.skip: adapt to new file names.

	svn path=/trunk/; revision=3950

2006-10-07  Tim Janik 	# e91fd6be6f52444d246774d0b0639de8aa07ddba

	provide integer types. wrap cpu info and threading APIs. changed callers

	Sat Oct 7 20:33:04 2006 Tim Janik <timj@gtk.org>

	        * sfiwrapper.cc, sfiwrapper.h: provide integer types.
	        wrap cpu info and threading APIs. changed callers to use
	        the wrapped SFI variants.

	        * sfitypes.h: removed obsoleted cruft.

	        * tests/misctests.c: added compilation test for all threading
	        macros.

	svn path=/trunk/; revision=3949

2006-10-06  Tim Janik 	# 46abcd4d0e5168fb6b3106d9890b1a9990614d17

	new header file to contain (or include) all definitions and declarations

	Fri Oct 6 23:26:10 2006 Tim Janik <timj@gtk.org>

	        * birnetcdefs.h: new header file to contain (or include) all definitions
	        and declarations that are useful for C only programs. while Birnet is not
	        to support *any* C symbol at all, using common structure definitions
	        helps in wrapping certain features for C programs.

	        * birnetcpu.hh, birnetcpu.cc: renamed and moved from .h and .c.

	        * birnetutilsxx.hh, birnetutilsxx.cc: use birnetcdefs.h definitions.
	        provided init functionality. added raise_sigtrap() and BREAKPOINT()
	        implementations.

	        * birnetutilsxx.hh, birnetutilsxx.cc: merged everything from
	        birnetutils.hh and birnetutils.cc into these files.

	        * birnet-zintern.cc:
	        * birnettests.h: namespace fixups.

	        * configure.inc: detect windows operating system.

	svn path=/trunk/; revision=3948

2006-10-06  Tim Janik 	# fe5cb2d0778dc8b6d92abffeccc15e527469a652

	C API wrapper around useful Birnet utilities.

	Fri Oct 6 23:13:05 2006 Tim Janik <timj@gtk.org>

	        * sfiwrapper.h, sfiwrapper.cc: C API wrapper around useful
	        Birnet utilities.

	svn path=/trunk/; revision=3947

2006-10-06  Tim Janik 	# c76cec648b3f43d57b97ea76e7271511acdeabc3

	renamed and moved here from birnet/. changed callers.

	Fri Oct 6 18:53:35 2006 Tim Janik <timj@gtk.org>

	        * sfimsg.h, sfimsg.c: renamed and moved here from birnet/.
	        changed callers.

	        * sficxx.cc: don't shadow "sfi_init" symbol.

	        * sfitypes.h: removed portions covered by sfimsg.h.

	svn path=/trunk/; revision=3946

2006-10-06  Tim Janik 	# 9c4087391f4fda85a68dc60271560a9f902ddb3f

	renamed from birnet.h.

	Fri Oct 6 18:53:30 2006 Tim Janik <timj@gtk.org>

	        * birnet.hh: renamed from birnet.h.

	        * tests/ring.cc:
	        * birnetring.[hc]: removed, moved to sfi/ as SfiRing.

	        * birnetutilsxx.hh, birnetutilsxx.cc: hide implementation of ref_diag().

	        * birnetutils.hh, birnetutils.cc: renamed and ported to C++ from
	        birnetutils.h and birnetutils.c. changed callers.

	        * birnetthread.c: ported from BirnetRing to GSList.

	        * birnet-zintern.cc: C++ fixes. changed callers.

	        * birnettests.h: removed C function definitions.

	        * birnetmsg.hh, birnetmsg.cc: implement messaging API akeleton for C++.

	        * birnetmsg.[hc]: removed. (implementation moved to Sfi)

	svn path=/trunk/; revision=3945

2006-10-05  Stefan Westerfeld 	# 837eb649a89df22c6e15177e9dd86ed8cc6f8678

	Implemented factor 2 downsampling datahandle. Moved common code into a

	Thu Oct 5 17:39:50 2006 Stefan Westerfeld <stefan@space.twc.de>

		* gsldatahandle.h:
		* bsedatahandle-resample.cc: Implemented factor 2 downsampling
		datahandle.  Moved common code into a base class for both datahandles.

		* tests/resamplehandle.cc: Test downsampling datahandle.

	svn path=/trunk/; revision=3944

2006-10-05  stw 	# 42711034f386f1c918aff4f3e24c6f65ad41d81a

	updates.

	svn path=/trunk/; revision=3943

2006-10-04  stw 	# 28984049de87c46feb5d6e15f3103aaf411c3969

	updates

	svn path=/trunk/; revision=3942

2006-10-04  Stefan Westerfeld 	# 661b102bbd9c70edc133421d20c9408f1ad8edab

	Implemented new mode for inspecting the resampler accuracy: testresampler

	Wed Oct 4 14:09:08 2006 Stefan Westerfeld <stefan@space.twc.de>

		* slowtests/testresampler.cc: Implemented new mode for inspecting the
		resampler accuracy: testresampler error-spectrum. This allows not only
		examining how much the total error is when resampling a certain
		frequency, but also inspecting how that error is distributed across
		the spectrum.

	svn path=/trunk/; revision=3941

2006-10-03  timj 	# ca47dd92da59799bebb84c381900ae1e96534603

	updates

	svn path=/trunk/; revision=3940

2006-10-03  Tim Janik 	# 420b7598b7d8522ae0cb1dc8945ca01a620bcdf5

	moved remaining sfi/ tests to sfi/tests.

	Tue Oct 3 18:44:43 2006 Tim Janik <timj@gtk.org>

	        * moved remaining sfi/ tests to sfi/tests.

	        * tests/misctests.c: moved here from sfi/testsfi.c.

	        * tests/testsfidl.cc:
	        * tests/testidl.idl: moved here from sfi/.

	svn path=/trunk/; revision=3939

2006-10-03  Tim Janik 	# f451426f90b10299b454d9f24aae910bfca23cb9

	moved here from sfi/.

	Tue Oct 3 17:57:59 2006 Tim Janik <timj@gtk.org>

	        * tests/testcxx.cc: moved here from sfi/.

	svn path=/trunk/; revision=3938

2006-10-03  Tim Janik 	# 4254841a30fcea72bba2768f9abe9571a02db5d6

	removed ring tests which are in tests/ring.c now.

	Tue Oct 3 17:42:51 2006 Tim Janik <timj@gtk.org>

	        * testsfi.c: removed ring tests which are in tests/ring.c now.

	svn path=/trunk/; revision=3937

2006-10-03  Tim Janik 	# 09a977c37c108b0a264eb1e539c5b8fdf8144de6

	removed, moved to sfi/ as SfiRing.

	Tue Oct 3 17:26:50 2006 Tim Janik <timj@gtk.org>

	        * tests/ring.cc:
	        * birnetring.[hc]: removed, moved to sfi/ as SfiRing.

	        * birnetthread.c: ported from BirnetRing to GSList.

	svn path=/trunk/; revision=3936

2006-10-03  Tim Janik 	# 682e23e3f3da856cc759c04213757b70871a58e3

	moved BirnetRing here, renamed to Sfi.

	Tue Oct 3 17:21:08 2006 Tim Janik <timj@gtk.org>

	        * sfiring.h, sfiring.c: moved BirnetRing here, renamed to Sfi.

	        * sfiprimitives.h, sfiprimitives.c: removed obsolete Ring code.

	        * tests/ring.c: test SfiRing thoroughly.
	        moved here from birnet/tests/ring.cc, renamed to use SfiRing.

	        * tests/Makefile.am:
	        * Makefile.am: build and integrate sfi/tests/.

	svn path=/trunk/; revision=3935

2006-10-03  Tim Janik 	# 78587a1c8d0f0461876e7214bf523d70e7b02d11

	execute slowcheck: as part of distcheck:

	Tue Oct 3 13:19:06 2006 Tim Janik <timj@gtk.org>

	        * Makefile.am: execute slowcheck: as part of distcheck:

	svn path=/trunk/; revision=3934

2006-10-02  Stefan Westerfeld 	# 019aa709e946c97c5470320c73cb69d6bd5a3fec

	Fix small bug: only show accuracy threshold when the option was actually

	Mon Oct 2 18:10:38 2006 Stefan Westerfeld <stefan@space.twc.de>

		* slowtests/testresampler.cc: Fix small bug: only show accuracy
		threshold when the option was actually specified by the user.

		* slowtests/Makefile.am: Moved the resampler test to make slowcheck,
		and only do a bit of testing during make check. Speedup of the
		resampler tests in make check (on AMD64): approximately factor 15.

	svn path=/trunk/; revision=3933

2006-10-01  Tim Janik 	# fb3fd090da26a634a4484cbc0d9e602744532c14

	extended Parameter for default values and const-ness. extended Function

	Sun Oct 1 13:09:24 2006 Tim Janik <timj@gtk.org>

	        * Data.py: extended Parameter for default values and const-ness.
	        extended Function for various qualifier bits. extended Struct to
	        contain methods and a list of derived types.

	        * Code2Doxi.py: write methods out with structures.

	        * HtmlGenerator.py: fixed parameter/flush_parameters to work at any
	        nested level within a section. fixed endless recursion bug in case
	        elements nested in parameter descriptions call flush_parameters.

	        * qxmlparser.py: for compounds, search for descriptions in the children
	        of a node, not the whole subtree of a node, so we don't attribute the
	        description of a child element to a prent element. test variables for
	        const-ness. parse methods as part of structures. parse class methods.
	        parse default values for function arguments.
	        parse doxygen namespaces, this seems to lack namespace application to
	        symbols defined within the namespace though.

	        * qdoxygen.py: do not delete doxyfile in debugging mode.

	svn path=/trunk/; revision=3932

2006-10-01  Tim Janik 	# 565ab0dca41814dd5e7971f25c662a2ccf9c9b3b

	added Deletable docs.

	Sun Oct 1 13:31:47 2006 Tim Janik <timj@gtk.org>

	        * birnetutilsxx.hh: added Deletable docs.

	svn path=/trunk/; revision=3931

2006-09-30  Tim Janik 	# be6ac70111231af5419d0c91c7f5f61122ad2e63

	fixed -p and -s not taking effect.

	Sat Sep 30 21:36:39 2006 Tim Janik <timj@gtk.org>

	        * bseautodoc.c: fixed -p and -s not taking effect.

	svn path=/trunk/; revision=3930

2006-09-30  Tim Janik 	# 07489792cad802831c4bf233455a1e17cd9f7824

	moved virtual methods from .hh to .cc to emit fewer typeinfos.

	Sat Sep 30 18:00:13 2006 Tim Janik <timj@gtk.org>

	        * birnetsignal.hh, birnetsignal.cc: moved virtual methods from .hh to
	        .cc to emit fewer typeinfos.

	        * birnetutilsxx.hh, birnetutilsxx.cc: moved DataList::NodeBase,
	        Deletable and ReferenceCountImpl destructors into .cc file to emit
	        fewer typeinfos.
	        added class VirtualTypeid and moved cxx_demangle() into this class.
	        let Deletable derive from VirtualTypeid to have typeid methods available
	        for allmost all virtual classes. renamed Deletable::DestructionHook to
	        Deletable::DeletionHook for consistency.

	        * tests/infotest.cc (test_virtual_typeid): test VirtualTypeid methods.

	svn path=/trunk/; revision=3929

2006-09-28  Tim Janik 	# b6069dc37ca5d3266e10623b3f05cb3676902b3b

	added recursive slowcheck: rule, intended for checks that take too long

	Thu Sep 28 19:52:02 2006 Tim Janik <timj@gtk.org>

	        * Makefile.decl: added recursive slowcheck: rule, intended for checks
	        that take too long for an ordinary make check. added check-before: and
	        check-after: aliases for check-am and check-local. fixed all Makefiles
	        to use check-before: and check-after: where appropriate.

	        * intltool-extract.in: patched to support multiline scheme strings.

	        * po/Makefile.intltool: added dummy slowcheck: rule.

	        * po/intltool-scm-35.diff: updates.

	svn path=/trunk/; revision=3928

2006-09-28  Tim Janik 	# 4cac0b172c23d203b63297447c1556434ec25a15

	skip checking and running intltool. generate po/Makefile.in.in from

	Thu Sep 28 19:35:04 2006 Tim Janik <timj@gtk.org>

	        * autogen.sh: skip checking and running intltool.
	        generate po/Makefile.in.in from po/Makefile.intltool.

	        * configure.in: read acintltool.m4, call IT_PROG_INTLTOOL.

	        * po/intltool-scm-35.diff: fixes for stock intltool-0.35.0.

	        * po/Makefile.intltool: added the Makefile.in.in from stock intltool-0.35.0.

	        * acintltool.m4: added the intltool.m4 from stock intltool-0.35.0.

	        * intltool-merge.in:
	        * intltool-update.in:
	        * intltool-extract.in: added from stock intltool-0.35.0.

	        * po/intltool-scm.diff: unused, removed.

	svn path=/trunk/; revision=3927

2006-09-28  Tim Janik 	# c3366dcfb106206e117daf738a38e4dd134ba5ae

	introduce BIRNET_CONSTRUCTOR which wraps gcc's "constructor" argument. as

	Thu Sep 28 01:01:55 2006 Tim Janik <timj@gtk.org>

	        * birnetcore.h: introduce BIRNET_CONSTRUCTOR which wraps gcc's
	        "constructor" argument. as a work around for gcc-3.3, which tends
	        to forget to emit code for static constructor functions if
	        -finline-functions is activated, also add attribute "used".

	        * birnetthread.h:
	        * birnetmsg.h: use BIRNET_CONSTRUCTOR to declare constructor functions.

	        * tests/threads.cc: added a check for proper constructor function
	        invokation before main().

	svn path=/trunk/; revision=3926

2006-09-27  Stefan Westerfeld 	# 8c0bb807c03fbf301840bd9f38d5a3f6b0e7659f

	Trimmed default output of "filter-impl" test. Verbose output can be

	Wed Sep 27 21:33:48 2006 Stefan Westerfeld <stefan@space.twc.de>

		* slowtests/testresampler.cc: Trimmed default output of "filter-impl"
		test. Verbose output can be enabled using --filter-impl-verbose.

	svn path=/trunk/; revision=3925

2006-09-27  Stefan Westerfeld 	# 3b48b9d6d9430c891bb6c46410f8b1cc7ef80135

	Only optionally produce output during the filter implementation test.

	Wed Sep 27 21:59:47 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.cc: Only optionally produce output during the filter
		implementation test.

	svn path=/trunk/; revision=3924

2006-09-27  Stefan Westerfeld 	# 030a5ade75753ee3fad23b3567516e5b6a475ada

	Only optionally produce output during the filter implementation test.

	Wed Sep 27 21:35:12 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.cc:
		* bseblockutils.hh:
		* bseresamplerimpl.hh: Only optionally produce output during the
		filter implementation test.

	svn path=/trunk/; revision=3923

2006-09-27  Tim Janik 	# 0926b27ee4b235e0c887efbd3f9ce119b171ad65

	build and check ./ before subdirs. added various testresampler checks to

	Wed Sep 27 20:02:00 2006 Tim Janik <timj@gtk.org>

	        * slowtests/Makefile.am: build and check ./ before subdirs.
	        added various testresampler checks to check: rule which were suggested
	        by Stefan Westerfeld.

	svn path=/trunk/; revision=3922

2006-09-27  timj 	# 4170f2971ab13f3b057f2683773141492b560d47

	update

	svn path=/trunk/; revision=3921

2006-09-27  Stefan Westerfeld 	# c4a8ef776e3ac82b54117aab437f3492ab5a2107

	Added rule that data members in classes are declared before functions.

	Wed Sep 27 13:38:39 2006 Stefan Westerfeld <stefan@space.twc.de>

		* docs/coding-style.doxi: Added rule that data members in classes are
		declared before functions.

	svn path=/trunk/; revision=3920

2006-09-27  stw 	# eaa05b04b0c33fce68d081476ada88165ab698cf

	updates

	svn path=/trunk/; revision=3919

2006-09-27  Stefan Westerfeld 	# a5b7f540389b6626d13afd26a8d36accd5311443

	Fixes and cleanups. Upsampling Datahandle class Members are now prefixed

	Wed Sep 27 13:04:49 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bsedatahandle-resample.cc: Fixes and cleanups. Upsampling Datahandle
		class Members are now prefixed with m_, all code that could possibly
		be moved into the class - such as the C vtable - is now present as
		static functions within the class, the destructor was made private
		- because reference counting is supposed to be used.
		Finally the class uses C style inheritance, by embedding m_dhandle.

	svn path=/trunk/; revision=3918

2006-09-27  stw 	# 3da0f34dadb2df9f8e0d2df06e2a482cb9257e78

	Added my timeline.

	svn path=/trunk/; revision=3917

2006-09-27  Stefan Westerfeld 	# d769e7fdc9bdd6f549c1283a6b84ed949b84b31a

	Moved testresampler.cc from bse/tests to slowtests, to prepare it for

	Wed Sep 27 11:30:27 2006 Stefan Westerfeld <stefan@space.twc.de>

		* slowtests/Makefile.am:
		* slowtests/testresampler.cc: Moved testresampler.cc from bse/tests to
		slowtests, to prepare it for automatic accuracy testing. Excessive
		automatic testing will be quite slow, thus it needs to be in this
		directory.

	svn path=/trunk/; revision=3916

2006-09-27  Stefan Westerfeld 	# 245ca8f3f8f25bc3bf48abc65f8a067052931f2e

	Moved testresampler.cc from bse/tests to slowtests, to prepare it for

	Wed Sep 27 11:30:27 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/Makefile.am:
		* tests/testresampler.cc: Moved testresampler.cc from bse/tests to
		slowtests, to prepare it for automatic accuracy testing. Excessive
		automatic testing will be quite slow, thus it needs to be in this
		directory.

	svn path=/trunk/; revision=3915

2006-09-27  Stefan Westerfeld 	# 33304e5f2ed9fa0239e17e426e884de0d69ced9a

	Allow using --fpu instead of --bse-force-fpu, because that means less

	Wed Sep 27 11:27:35 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Allow using --fpu instead of
		--bse-force-fpu, because that means less typing.
		In the accuracy test, print out the threshold given by the user, if
		any (that way, it becomes easier to validate the "safety margin"
		between the specified and the actual threshold)

	svn path=/trunk/; revision=3914

2006-09-26  Tim Janik 	# f1d69354d677d59e1c310de77f9d3bcb4c584673

	mention in --help that chunks are exported as WAV files.

	Tue Sep 26 18:47:39 2006 Tim Janik <timj@gtk.org>

	        * tools/bsewavetool.cc: mention in --help that chunks are exported
	        as WAV files.

	        * tools/bseloopfuncs.c: minor fixups.
	        don't leak data handles in gsl_loop_highpass_handle().

	svn path=/trunk/; revision=3913

2006-09-26  Stefan Westerfeld 	# cb2cd9d693611f0185a6549978c94bf1a68497f9

	Use fir_test_filter_sse() within test_resampler2() hook, to test that the

	Tue Sep 26 10:38:12 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.cc: Use fir_test_filter_sse() within test_resampler2()
		hook, to test that the SSEified FIR filter routines work as expected.

	svn path=/trunk/; revision=3912

2006-09-26  Stefan Westerfeld 	# 8bc1e1ddb0d0547651a307fda017d51ec389c795

	Provide hook for testing the resampler2 implementation.

	Tue Sep 26 10:34:03 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.cc bseblockutils.hh: Provide hook for testing the
		resampler2 implementation.

		* tests/testresampler.cc bseresamplerimpl.hh: Moved SSE filter
		implementation test to the new function fir_test_filter_sse, which
		can then be properly compiled using -msse within the bseblockutils
		plugin for the SSE case.

	svn path=/trunk/; revision=3911

2006-09-25  Tim Janik 	# df91c8f6831100b69812bc7f2774e6c8c812fc1a

	fixed reference handling for Data slots, so reference types are supported

	Mon Sep 25 02:10:43 2006 Tim Janik <timj@gtk.org>

	        * birnetsignalslot.hh: fixed reference handling for Data slots, so
	        reference types are supported as Data argument (they need to implement
	        operator==() though).

	        * tests/signal.cc: added data reference slot creation.

	svn path=/trunk/; revision=3910

2006-09-22  Stefan Westerfeld 	# 873cee03a8f24c3553583e57069f40a67c877677

	Make resampler more user friendly, by using more long options, explicit

	Fri Sep 22 15:25:19 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Make resampler more user friendly, by using
		more long options, explicit command names and improving the usage. For
		instance testresampler ad becomes testresampler accuracy --down.
		We also leave it up to bse to determine whether to use the SSE or FPU
		variant; bse's decision can be influenced by --bse-force-fpu.
		Print usage() to stdout, to make it less'able.

	svn path=/trunk/; revision=3909

2006-09-21  Tim Janik 	# 5cd49053ab431f3b918cf191b7c72580802df1e4

	added birnet_cxx_demangle() and cxx_demangle() to easily demangle C++

	Thu Sep 21 00:16:05 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.h, birnetutilsxx.cc: added birnet_cxx_demangle() and
	        cxx_demangle() to easily demangle C++ names.

	svn path=/trunk/; revision=3908

2006-09-19  Tim Janik 	# 53cc684da4acc68e1be3a1de7d26133d8b0c346b

	fix variable name for Stefan.

	Tue Sep 19 22:32:26 2006 Tim Janik <timj@gtk.org>

	        * tests/testresampler.cc: fix variable name for Stefan.

	svn path=/trunk/; revision=3907

2006-09-17  stw 	# 61fb3d7b0302b57190516ee016402f5a42718a07

	Resampler related updates.

	svn path=/trunk/; revision=3906

2006-09-17  Stefan Westerfeld 	# f7ab922c692f91e085b57248da0ee65add2867ea

	Minor fix in usage() function.

	Sun Sep 17 16:42:36 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Minor fix in usage() function.

	svn path=/trunk/; revision=3905

2006-09-17  Stefan Westerfeld 	# 455aae63e2493fff9e319f976b0ed358240b3889

	Added option parsing, to be able to specify a lot more details on what

	Sun Sep 17 16:27:59 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tests/testresampler.cc: Added option parsing, to be able to specify
		a lot more details on what test should be performed and how.
		Use bse to instantiate the upsampler and downsampler; this allows us
		to use bse's automatic SSE detection features, and bse's coefficient
		sets. Added --precision option to select coefficient set.
		Added --freq-scan option, to test accuracy of an entire frequency
		range with one single call of the program.
		Added --precision-assert-db option, which allows the test program to
		be used in automated tests. If the accuracy is less than the specified
		minimum precision, an assertion is triggered.

		* tests/testresamplercoeffs.h: Remove this file, because the new
		testresampler code uses the coefficients defined in bseresampler.cc.

	svn path=/trunk/; revision=3904

2006-09-17  Stefan Westerfeld 	# 2352b0dd7f0fd7815f16fc832e110cb754597515

	Replace atof with g_ascii_strtod in option parsing, since otherwise the

	Sun Sep 17 13:39:49 2006 Stefan Westerfeld <stefan@space.twc.de>

		* tools/bsefextract.cc tools/bsefcompare.cc: Replace atof with
		g_ascii_strtod in option parsing, since otherwise the automatic tests
		in slowtests/audio (and other bsefextract/bsefcompare based scripts)
		will break when the system locale has a different "decimal point"
		setting.

	svn path=/trunk/; revision=3903

2006-09-16  Tim Janik 	# d0aa0cb2787484e18d4779bf0f75a72f8e168e00

	merged with resamplercapi.c. made internal functions "static". fixed

	Sat Sep 16 15:50:34 2006 Tim Janik <timj@gtk.org>

	        * tests/resamplehandle.cc: merged with resamplercapi.c. made internal
	        functions "static". fixed TSTART() usages. cleaned up main().

	        * tests/Makefile.am, tests/resamplercapi.c: removed resamplercapi.c.

	svn path=/trunk/; revision=3902

2006-09-16  timj 	# 26a4747c188dbeacb60fb2663874cb8f4eff0ec9

	remove testresampler from TESTS because it's currently broken

	svn path=/trunk/; revision=3901

2006-09-16  Tim Janik 	# 727813ad8ebce9ec8198b3ebc56c8579c45e3770

	renamed bseresampler.tcc to bseresamplerimpl.hh to match beast naming

	Sat Sep 16 15:19:33 2006 Tim Janik <timj@gtk.org>

	        * bseresamplerimpl.hh: renamed bseresampler.tcc to bseresamplerimpl.hh
	        to match beast naming conventions, and because it effectively implements
	        parts of bseresampler.hh.

	svn path=/trunk/; revision=3900

2006-09-16  Tim Janik 	# ffceef1ec09a91f2d41e69ae87452e07ab318018

	renamed bseresampler.tcc to bseresamplerimpl.hh to match beast naming

	Sat Sep 16 15:19:33 2006 Tim Janik <timj@gtk.org>

	        * bseresamplerimpl.hh: renamed bseresampler.tcc to bseresamplerimpl.hh
	        to match beast naming conventions, and because it effectively implements
	        parts of bseresampler.hh.

	svn path=/trunk/; revision=3899

2006-09-16  Tim Janik 	# f98006749af60b2826a9947a270a036015d2d5a9

	fixed alginment adjustment so this function *really* returnes aligned

	Sat Sep 16 15:14:32 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.c (birnet_malloc_aligned): fixed alginment adjustment so
	        this function *really* returnes aligned memory. added check on whether
	        malloc already aligned the memory the way we wanted it.

	svn path=/trunk/; revision=3898

2006-09-16  Tim Janik 	# 0290bc3de099e1b84b6ea13bcde3a6431a9adf3c

	access Resampler2::create_impl() via derivation.

	Sat Sep 16 14:53:00 2006 Tim Janik <timj@gtk.org>

	        * bseblockutils.cc: access Resampler2::create_impl() via derivation.

	svn path=/trunk/; revision=3897

2006-09-16  Tim Janik 	# 7c13a9e5e5ca743c196c8db7b82337089def8f9e

	access Resampler2::create_impl() via derivation.

	Sat Sep 16 14:45:49 2006 Tim Janik <timj@gtk.org>

	        * bseblockutils.cc: access Resampler2::create_impl() via derivation.

	        * bseresampler.tcc: whitespace fixups. fixed includes. fixed
	        unconditional use of __m128. renamed AlignedMem to AlignedArray because
	        this class implements aligned array accesses instead of a memory
	        allocator. adapted callers.

	        * bsedatahandle-resample.cc:
	        * bseresampler.cc, gsldatahandle.h: whitespace and comment fixups.

	        * bse/bseresampler.hh: whitespace fixups. made create_impl() non-public,
	        it can be accessed by blockutil implementations via derivation.

	svn path=/trunk/; revision=3896

2006-09-16  Stefan Westerfeld 	# 1194e727e797708a51fb37feb7d8b788c705e69b

	Provide resampler factory method, so that an SSE resampler will be used

	Sat Sep 16 09:35:26 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.cc: Provide resampler factory method, so that an SSE
		resampler will be used when beast detects SSE instructions.

	svn path=/trunk/; revision=3895

2006-09-16  Stefan Westerfeld 	# 367e80119f26c7a7532980fcb1caf19f0a8540cc

	Added factor 2 resampling code (up- and downsampling), which can use SSE

	Sat Sep 16 09:25:17 2006 Stefan Westerfeld <stefan@space.twc.de>

		* bseresampler.tcc bseresampler.cc bseresampler.hh: Added factor 2
		resampling code (up- and downsampling), which can use SSE instructions
		when available. The implementation was tuned for speed.

		* gsldatahandle.h bsedatahandle-resample.cc: Provide a datahandle,
		which does factor 2 upsampling.

		* bseblockutils.cc bseblockutils.hh: Provide factory method for the
		resampler, so that bse can automatically use the SSE version when SSE
		instructions are available.

		* tests/testresamplercoeffs.h tests/testresampler.cc: Standalone
		interactive test code for the resampler.

		* tests/resamplercapi.c tests/resamplehandle.cc: Tests for the
		resampler C API and the resampler data handle.

		* Makefile.am: Adapted Makefile rules for the new resampler sources.

		* tests/Makefile.am: Adapted Makefile rules for the new resampler
		tests. Fixed subnormals_CXXFLAGS, which now includes AM_CXXFLAGS.

	svn path=/trunk/; revision=3894

2006-09-16  Stefan Westerfeld 	# 744929b8fabdba5a432c9a24fb77bd7b4880654f

	Added birnet_malloc_aligned(), which allocates memory with an arbitary

	Sat Sep 16 09:20:49 2006 Stefan Westerfeld <stefan@space.twc.de>

		* birnetutils.[hc]: Added birnet_malloc_aligned(), which allocates
		memory with an arbitary alignment. The caller is responsible for
		for keeping track of and freeing the unaligned memory.

	svn path=/trunk/; revision=3893

2006-09-12  Tim Janik 	# 51d35aae9870258d06948a1992eedb9d6d6b4da5

	fix missing updates of 'last' pointer wich caused data loss.

	Tue Sep 12 01:41:18 2006 Tim Janik <timj@gtk.org>

	        * birnetutilsxx.cc (rip_data): fix missing updates of 'last' pointer
	        wich caused data loss.

	svn path=/trunk/; revision=3892

2006-09-10  Tim Janik 	# 411ad6caed9b2f75546c083c1bbcd8b862e85084

	added bse_wave_file_from_fbuffer() and bse_wave_file_from_dbuffer() to

	Sun Sep 10 22:46:55 2006 Tim Janik <timj@gtk.org>

	        * gsldatautils.h, gsldatautils.c: added bse_wave_file_from_fbuffer() and
	        bse_wave_file_from_dbuffer() to easily save WAV files from memory.

	svn path=/trunk/; revision=3891

2006-09-10  timj 	# 8185cc254c78171ba71524e9b949d0ef2e7a8049

	revert accidental commit

	svn path=/trunk/; revision=3890

2006-09-10  timj 	# b403dd9a0491cb29a21194ef9df52177d7e321c0

	updates

	svn path=/trunk/; revision=3889

2006-09-10  Tim Janik 	# 677540b440c3b5b8100227f5aeceeca4d58d0d34

	abort the program if we failed to drop priviledges and continue to run

	Wed Aug 30 21:57:32 2006 Tim Janik <timj@gtk.org>

	        * launchers/suidmain.c (main): abort the program if we failed to drop
	        priviledges and continue to run suid (could happen due to user process
	        limits being reached).

	svn path=/trunk/; revision=3888

2006-09-10  timj 	# 5f2e728225cd468ba186a3132d95a3baff4d3413

	minor fixup

	svn path=/trunk/; revision=3887

2006-08-29  Stefan Westerfeld 	# dbe5cbadb59845ad77e8bb59af1b48daa69bef2e

	Add transpose and fine_tune settings, just like they can be found in the

	Tue Aug 29 20:48:48 2006 Stefan Westerfeld <stefan@space.twc.de>

		* davorgan.[hc]: Add transpose and fine_tune settings, just like they
		can be found in the oscillator code. Fixed a few minor i18n bugs in
		property translation markup.

	svn path=/trunk/; revision=3886

2006-08-29  Stefan Westerfeld 	# 61c8b473037b552754d723d24445a6995f54c639

	Add transpose and fine_tune settings, just like they can be found in the

	Tue Aug 29 17:34:30 2006 Stefan Westerfeld <stefan@space.twc.de>

		* davxtalstrings.[hc]: Add transpose and fine_tune settings, just like
		they can be found in the oscillator code. Fixed a few minor i18n bugs
		in property translation markup.
		Use gdouble precision to store transposed frequency within the engine
		module data structure.

	svn path=/trunk/; revision=3885

2006-08-24  Tim Janik 	# 77d0e5f2a933458ff514e97e41f9da16a5aef993

	always use global uint definition (either from types.h or from a fallback

	Thu Aug 23 21:21:00 2006 Tim Janik <timj@gtk.org>

	        * birnetcore.h, birnetutilsxx.hh: always use global uint definition
	        (either from types.h or from a fallback definition) to avoid
	        ambiguities.

	svn path=/trunk/; revision=3884

2006-08-22  Stefan Westerfeld 	# 213c8428d94c1b104bd75469a4b0cf359cf24706

	Added a description of the beast coding style to the developer

	Tue Aug 22 17:02:50 2006 Stefan Westerfeld <stefan@space.twc.de>

		* docs/Makefile.am:
		* docs/beast-index.doxi:
		* docs/coding-style.doxi: Added a description of the beast coding
		style to the developer documentation.

	svn path=/trunk/; revision=3872

2006-08-22  timj 	# 87327e1ef3e6471152f2269f59ba5382a767a7f5

	Added bugnumber to "C++ classes need documentation" todo item.

	svn path=/trunk/; revision=3871

2006-08-22  Tim Janik 	# 5d455dbbb52f80d10db710da3ab405e40d176d10

	added birnet_memset4(), a function to fill large memory regions with data

	Mon Aug 21 01:03:24 2006 Tim Janik <timj@gtk.org>

	        * birnetutils.h, birnetutils.c: added birnet_memset4(), a function to
	        fill large memory regions with data of 32bit integer width.

	svn path=/trunk/; revision=3870

2006-08-16  timj 	# 46104d8f6d7cb191a8c02ae0dc45d04247e2f986

	web link updates

	svn path=/trunk/; revision=3869

2006-08-15  timj 	# 6ddc6f14a1e735510de8582d30587de2113af25b

	added missing redirects for bsesh -> bsescm

	svn path=/trunk/; revision=3868

2006-08-15  Tim Janik 	# 4a1c26d856f3cbecbd977b799264ecb2da866845

	upgraded version to 0.7.1, interface age 0, binary age 0.

	Tue Aug 15 01:26:20 2006 Tim Janik <timj@gtk.org>

	        * upgraded version to 0.7.1, interface age 0, binary age 0.

	svn path=/trunk/; revision=3867

2006-08-15  timj 	# a5f52e808d4ea59d7c53039ec463d28e4ff71af9

	fixed shell script mime types

	svn path=/trunk/; revision=3866

2006-08-15  Tim Janik 	# 1a0e0e8808c04082cc5e4d7e7add788b89a91fe8

	use birnet_*__chain4init() and birnet_*__unchain() functions to construct

	Tue Jul 18 01:14:22 2006 Tim Janik <timj@gtk.org>

	        * birnetthreadxx.cc: use birnet_*__chain4init() and
	        birnet_*__unchain() functions to construct initializer lists for
	        mutexes and conditions. that way we don't require std::list to be
	        constructed at static mutex construction time (which can be a
	        problem).

	        * birnetthread.h, birnetthread.c: provide chain4init and
	        unchain variants for recursive mutexes and conditions. this required
	        reordering of the BirnetRecMutex fields. provide static declaration
	        macros for recursive mutexes and conditions in C.

	        * birnetsignalslot.hh: hook trampolines into the destruction phase
	        of a Deletable, if the instance of a method trampoline is a Deletable.
	        as a side effect of this, slot-= only works for Deletable instance
	        methods, *before* the instance is deleted.

	        * birnetsignal.hh: provide VoidSlot and BoolSlot for convenience.

	        * birnetutilsxx.hh, birnetutilsxx.cc: implemented class
	        Deletable::DestructionHook which allowes hooking up (thread safe) of
	        callbacks into the destruction phase of a Deletable.

	        * tests/signal.cc: added tests for signal connections on temporary
	        objects that trigger Deletable destruction hooks.

	        * tests/threads.cc: test statically declared recursive mutextes and
	        conditions in C.

	svn path=/trunk/; revision=3865

2006-08-15  Tim Janik 	# 7dc4e776c65f220aef72ed023ce435dcd19721cd

	skip ./.* files when scanning for images, this avoids bogus images (e.g.

	Tue Jul 18 01:43:25 2006 Tim Janik <timj@gtk.org>

	        * web/scanimages.sh: skip ./.* files when scanning for images, this
	        avoids bogus images (e.g. from ./.svn) to appear on the web site.
	        (change accidentally already committed with r3852).

	svn path=/trunk/; revision=3864

2006-08-15  Tim Janik 	# bb4afcaa690f92bff54a6fbdbd3369e6bebb7cc7

	skip ./.* files when scanning for images, this avoids bogus images (e.g.

	Tue Jul 18 01:43:25 2006 Tim Janik <timj@gtk.org>

	        * web/scanimages.sh: skip ./.* files when scanning for images, this
	        avoids bogus images (e.g. from ./.svn) to appear on the web site.
	        (change accidentally already committed with r3852).

	svn path=/trunk/; revision=3863

2006-08-14  Tim Janik 	# 36f8e71a50782a58c01b7e70175fac160d3bdc02

	upgraded version to 0.7.1, interface age 0, binary age 0.

	Tue Jul 18 01:43:25 2006 Tim Janik <timj@gtk.org>

	        * upgraded version to 0.7.1, interface age 0, binary age 0.

	        * beast-gtk/bstmain.c: adapt release notes for 0.7.x.

	        * beast-gtk/bstsplash.c: cosmetic fixes.

	svn path=/trunk/; revision=3862

2006-08-10  timj 	# 61c2f073ca3f04e845e9d4d010996d1c1d66b218

	added announcement link

	svn path=/trunk/; revision=3861

2006-07-16  timj 	# a851f7465a044a89837b8634953332fe0f411a7f

	slight fixup

	svn path=/trunk/; revision=3860

2006-07-16  timj 	# 59910b08ca9ad7ebda84ee9788928d629672b9d9

	announce 0.7.0 release

	svn path=/trunk/; revision=3859

2006-07-16  Tim Janik 	# c7ebec188d39c2d3d922ce8df7bdd6f051947a12

	5827285 2006-07-16 14:18:51 +0200 beast-0.7.0.tar.bz2 208591 2006-07-16

	2006-07-16 Tim Janik <timj@gtk.org>

		5827285 2006-07-16 14:18:51 +0200 beast-0.7.0.tar.bz2
		208591  2006-07-16 16:04:22 +0200 bse-alsa-0.7.0.tar.bz2

	svn path=/trunk/; revision=3858

2006-07-16  Tim Janik 	# bda09e27c420cb6710bd0a21ae12b828ce6e2b01

	release bse-alsa 0.7.0.

	Sun Jul 16 15:53:19 2006 Tim Janik <timj@gtk.org>

	        * release bse-alsa 0.7.0.

	svn path=/trunk/; revision=3857

2006-07-16  Tim Janik 	# aaec9c55ea54e98f4791bab2238d0820d5eddc22

	released beast-0.7.0.

	Sun Jul 16 14:05:45 2006 Tim Janik <timj@gtk.org>

	        * released beast-0.7.0.

	        * beast-gtk/bstmain.c: updated contributor list.

	svn path=/trunk/; revision=3856

2006-07-16  Tim Janik 	# 92d285ee7b48fe1764f7a4279fe1cc62e239e18a

	fixed ratio read-out. spotted by Stefan.

	Sun Jul 16 13:58:12 2006 Tim Janik <timj@gtk.org>

	        * davsyndrum.c (dmod_process): fixed ratio read-out. spotted by Stefan.

	svn path=/trunk/; revision=3855

2006-07-15  timj 	# 69504823727fc701f77571036719178eabd36ff9

	updates

	svn path=/trunk/; revision=3854

2006-07-15  Tim Janik 	# 2b2855a8cceb041607c8b9e12a369f2919f1808b

	use doubles instead of floats to store temporary filter state. this avoids

	Sat Jul 15 20:06:24 2006 Tim Janik <timj@gtk.org>

	        * gslwaveosc-aux.c: use doubles instead of floats to store temporary
	        filter state. this avoids artefacts for larger pitch values.

	svn path=/trunk/; revision=3853

2006-07-15  Tim Janik 	# 33ab34417709e4bbd083b03b0e79d2e57fde1fc6

	removed norm-type field.

	Sat Jul 15 05:15:42 2006 Tim Janik <timj@gtk.org>

	        * library/demo/partymonster.bse:
	        * library/instruments/bqs-merp-pad.bse:
	        * library/instruments/bqs-fretless-bass.bse:
	        * library/instruments/bqs-queek-synth.bse:
	        * library/instruments/bqs-moog-saw-bass.bse:
	        * slowtests/audio/velocity.bse:
	        * test/simple-loop.bse: removed norm-type field.

	svn path=/trunk/; revision=3852

2006-07-15  Tim Janik 	# 88220e88ca9723ee734d76eec223a4b8ef98c983

	announced CVS -> SVN move.

	Sat Jul 15 04:49:55 2006 Tim Janik <timj@gtk.org>

	        * web/news.doxi: announced CVS -> SVN move.

	        * web/related-links.doxi:
	        * web/development.doxi:
	        * web/download.doxi: changed docs from CVS to SVN for gnome.org.

	svn path=/trunk/; revision=3851

2006-07-15  timj 	# 4585ea99e81a4b5bc416ad609fd2f2f968d5aaef

	fix typo

	svn path=/trunk/; revision=3850

2006-07-15  timj 	# 15d181330068163d90c85373b1c4c4b61400a216

	updates

	svn path=/trunk/; revision=3849

2006-07-15  Tim Janik 	# bfa8e459d045f9115a732e08f44732360ffafacb

	disabled ::norm_type property because chenging it to something non-default

	Sat Jul 15 04:11:06 2006 Tim Janik <timj@gtk.org>

	        * bsebiquadfilter.c (bse_biquad_filter_class_init):
	        disabled ::norm_type property because chenging it to something
	        non-default drives the filter unstable too easily.

	Modified: trunk/bse/ChangeLog
	===================================================================

	svn path=/trunk/; revision=3848

2006-07-13  Tim Janik 	# 70e9deb450e8ea37d5cbbc4d09a88c0d61d5fba9

	start bseautodoc without parsing bse rc files.

	Thu Jul 13 21:37:26 2006  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: start bseautodoc without parsing bse rc files.

	svn path=/trunk/; revision=3830

2006-07-13  Tim Janik 	# 578b6bddffa83ab23588e0bdda6acd357b60c7a9

	pass through --bse-rcfile to bse.

	Thu Jul 13 21:36:28 2006  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: pass through --bse-rcfile to bse.

	svn path=/trunk/; revision=3829

2006-07-12  Stefan Westerfeld 	# f9ac5ff053d696478b5b126170e805b92cb40c1e

	Added a compressor effect, which can be used as post processing networks.

	Wed Jul 12 14:49:21 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* library/effects/bqs-compressor.bse: Added a compressor effect, which
		can be used as post processing networks. Settings are from the party
		monster demo song.

		* library/effects/bqs-reverb.bse: Added a quick start reverb effect.

		* library/effects/bqs-saturation-and-reverb.bse: Added a quick start
		saturation and reverb effect, where saturation is performed prior to
		reverb.

		* library/effects/Makefile.am: Added the three effects to the build
		system.

	svn path=/trunk/; revision=3828

2006-07-09  Tim Janik 	# 850d68c5d6570171970446c4af29100307854bdd

	top_srcdir fixup

	svn path=/trunk/; revision=3827

2006-07-09  Tim Janik 	# 8a80ddbd81953f10b7b7524055b32bb137be8397

	check po/ files for .scm string extraction.

	Sun Jul  9 18:03:39 2006  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: check po/ files for .scm string extraction.

	svn path=/trunk/; revision=3826

2006-07-09  Tim Janik 	# a73551c939bc9c8f8b80a2ca2b04c79f8d099490

	assert proper bsescm installation when make check: is run.

	Sun Jul  9 17:22:25 2006  Tim Janik  <timj@gtk.org>

	        * shell/Makefile.am: assert proper bsescm installation when
	        make check: is run.

	svn path=/trunk/; revision=3825

2006-07-09  Tim Janik 	# 50ae387ff27028e77ffd981e814e409db28fba01

	updates

	svn path=/trunk/; revision=3824

2006-07-09  Tim Janik 	# 09a2be4e9582a6aa329c25ad107f161f2c0ae728

	rotated news.

	Sun Jul  9 16:15:52 2006  Tim Janik  <timj@gtk.org>

	        * web/news.doxi:
	        * web/oldnews.doxi: rotated news.

	svn path=/trunk/; revision=3823

2006-07-09  Tim Janik 	# 2cb22b0d9de13317c9678d1c532eca9b85f60a3b

	renamed the guile based bsesh to bsescm. adapted related build rules,

	Sun Jul  9 14:53:26 2006  Tim Janik  <timj@gtk.org>

	        * renamed the guile based bsesh to bsescm. adapted related build rules,
	        variable names, function names and documentation.

	        * shell/bsesh.c: removed.

	        * docs/bsesh.1.doxi: removed.

	svn path=/trunk/; revision=3822

2006-07-09  Stefan Westerfeld 	# db0429a380ee24f1362881301102b8beae35afb2

	A summary of the things that happened since the last development news.

	Sun Jul  9 14:49:38 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* web/news.doxi: A summary of the things that happened since the last
		development news.

	svn path=/trunk/; revision=3821

2006-07-09  Tim Janik 	# e035295c07a8eb6f489d77b79d5805b4e3b75ebe

	CVS copied here from bsesh.1.doxi.

	Sun Jul  9 13:58:31 2006  Tim Janik  <timj@gtk.org>

	        * docs/bsescm.1.doxi: CVS copied here from bsesh.1.doxi.

	        * shell/bsescm.c: CVS copied here from bsesh.c.

	svn path=/trunk/; revision=3820

2006-07-09  Tim Janik 	# 165978d6975174d4ce086521c6627813f06f12f4

	wording fixup.

	Sun Jul  9 03:50:09 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): wording fixup.

	        * tools/scripts/waveloadtest.scm:
	        * tools/scripts/noteplaytest.scm:
	        * slowtests/audio/bse2wav.scm:
	        * slowtests/filecheck/checkproject.scm:
	        * shell/bse-scm-glue.boot: renamed (bse-test-error) to (bse-error-test).

	svn path=/trunk/; revision=3819

2006-07-09  Tim Janik 	# 8a423433ac33306e92e98498b3ad30f6e66a9f2d

	renamed bse_engine_garbage_collect() to bse_engine_user_thread_collect().

	Sun Jul  9 02:44:41 2006  Tim Janik  <timj@gtk.org>

	        * renamed bse_engine_garbage_collect() to bse_engine_user_thread_collect().

	svn path=/trunk/; revision=3818

2006-07-09  Tim Janik 	# d43a2aaac99d2337d26508711b27cbe604f06553

	updates

	svn path=/trunk/; revision=3817

2006-07-09  Tim Janik 	# 0d528388f16cf79d3417d8e5aadd6904bcaefa14

	added bse-version-check: rule which enforces that all .bse files in the

	Sun Jul  9 02:23:25 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/filecheck/Makefile.am: added bse-version-check: rule which
	        enforces that all .bse files in the tarball match the major and minor
	        version of libbse.
	        fixed bse-loading-check: rule to be honest about skipped .bse files.

	        * library/demo/stereo-through.bse:
	        * library/effects/atan-canyon.bse:
	        * tests/latency/midi-latency.bse:
	        * test/simple-loop.bse: updated to beast 0.7.0, clarified license.

	        * tests/latency/Makefile.am: fixed list of libraries to link against.

	svn path=/trunk/; revision=3816

2006-07-09  Tim Janik 	# 8475ecff3128a0bb1212fd79c2f46826c5de4d91

	updated to beast 0.7.0, clarified license.

	Sun Jul  9 02:24:00 2006  Tim Janik  <timj@gtk.org>

	        * zintern/gus-patch.bse:
	        * bse/zintern/wave-mono.bse: updated to beast 0.7.0, clarified license.

	svn path=/trunk/; revision=3815

2006-07-08  Tim Janik 	# e93a9f5005e084cdef0f85d5c8709c4ddeb6dca6

	release notes fixups.

	Sat Jul  8 13:56:07 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): release notes fixups.

	svn path=/trunk/; revision=3814

2006-07-07  Tim Janik 	# 0968df6a3ba011ec0765b4c3411915b55f9f017c

	fire up a text window with some 0.7 specific release notes (inlined in

	Fri Jul  7 21:57:41 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: fire up a text window with some 0.7 specific
	        release notes (inlined in bstmain.c) instead of firing up a web browser.

	        * beast-gtk/bstapp.c: added bug reporting link to Help/ menu.

	        * beast-gtk/gxk/gxktexttools.c: properly navigate to URLs even if no
	        toolbar is present.

	        * docs/release-notes.doxi:
	        * docs/beast-index.doxi:
	        * docs/Makefile.am: removed release-notes.html, bstmain.c has some
	        release notes inlined now.

	svn path=/trunk/; revision=3813

2006-07-07  Tim Janik 	# d182b3dde41fe70ab7756dc5e946d904b6c11fc7

	fix birnet.o path

	svn path=/trunk/; revision=3812

2006-07-07  Tim Janik 	# 34d50708107b81a7370c3e6f4cec5a5de66aa1fe

	use birnet-zintern.

	Fri Jul  7 02:17:02 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/Makefile.am: use birnet-zintern.

	        * tests/latency/bselatencytest.cc:
	        * tools/bsewavetool.cc: use birnet_file_equals() and
	        birnet_file_check().

	svn path=/trunk/; revision=3811

2006-07-07  Tim Janik 	# 1e8c038059b22490b99954bdd98f74351cfd24a2

	use birnet_file_equals() and birnet_file_check().

	Fri Jul  7 02:17:02 2006  Tim Janik  <timj@gtk.org>

	        * gslcommon.c:
	        * bsepcmdevice-oss.c:
	        * bsemididevice-oss.c: use birnet_file_equals() and
	        birnet_file_check().

	svn path=/trunk/; revision=3810

2006-07-07  Tim Janik 	# 41207ce17808060252cd616e306d36b605414884

	implement file tests in terms of the C++ API which also checks the C

	Fri Jul  7 02:15:50 2006  Tim Janik  <timj@gtk.org>

	        * tests/infotest.cc: implement file tests in terms of the C++ API
	        which also checks the C implementation.

	        * birnetutilsxx.[hc][hc]: added Path::chek() and Path::equals().

	        * birnetutils.c: document birnet_file_equals().

	svn path=/trunk/; revision=3809

2006-07-07  Tim Janik 	# e346a5cbdb5d85fa390139e8ead71bd753ca0080

	GLib version check fixup

	svn path=/trunk/; revision=3808

2006-07-07  Tim Janik 	# bf13c41f668e4d1091d7734cf36a9f214c50aa98

	include $BIRNET_LIBS in $SFI_LIBS, leave libz checking up to birnet.

	Fri Jul  7 02:09:16 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: include $BIRNET_LIBS in $SFI_LIBS, leave libz checking
	        up to birnet.

	svn path=/trunk/; revision=3807

2006-07-07  Tim Janik 	# 9528e8d9248eeb5b3f44728cf14f262998bc2334

	removed sfi_file_check() and sfi_file_equals() which are now provided and

	Fri Jul  7 02:10:42 2006  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.[hc]: removed sfi_file_check() and sfi_file_equals()
	        which are now provided and tested by libbirnet.

	svn path=/trunk/; revision=3806

2006-07-06  Tim Janik 	# 65da056e5fe4ea984c150445d014dad0f4ae315b

	moved birnet_file_check() and birnet_file_equals() from beast/sfi/ here.

	Fri Jul  7 01:51:35 2006  Tim Janik  <timj@gtk.org>

	        * birnetutils.[hc]: moved birnet_file_check() and birnet_file_equals()
	        from beast/sfi/ here. fixed socket file type test.

	        * tests/infotest.cc: added test for file type checks.

	        * tests/Makefile.am:
	        * Makefile.am: removed bogus $LIBZ which should be part of $BIRNET_LIBS.

	        * configure.inc: check for zlib.h and -lz and provide $LIBZ as part
	        of $BIRNET_LIBS

	svn path=/trunk/; revision=3805

2006-07-06  Tim Janik 	# 6847ffc48d8d9bb90396d1464f774cd96e6a35eb

	gen_zfile(): add "+ 1" to the dumed data array size because g++ refuses to

	Thu Jul  6 23:43:06 2006  Tim Janik  <timj@gtk.org>

	        * birnet-zintern.c: gen_zfile(): add "+ 1" to the dumed data array size
	        because g++ refuses to initialize non 0-terminated strings and murns
	        about the array size.

	svn path=/trunk/; revision=3804

2006-07-06  Tim Janik 	# 8bca7a9aee27aaaf6bff4eeaf5b1d9b7a4d6ca1b

	added birnet_zintern_decompress(), based on gxk_zfile_uncompress().

	Thu Jul  6 23:18:46 2006  Tim Janik  <timj@gtk.org>

	        * birnetutils.[hc]: added birnet_zintern_decompress(), based on
	        gxk_zfile_uncompress().

	        * tests/Makefile.am: link against $LIBZ.

	        * tests/infotest.cc: added zintern test.

	svn path=/trunk/; revision=3803

2006-07-06  Tim Janik 	# 83f69985138d0a8306c4c43b09629d034493443a

	use birnet-zintern.

	Thu Jul  6 22:45:17 2006  Tim Janik  <timj@gtk.org>

	        * zintern/Makefile.am: use birnet-zintern.

	        * zintern/zintern.c: rmeoved.

	svn path=/trunk/; revision=3802

2006-07-06  Tim Janik 	# b603962ab2e12f49cee193a99db04b48ecaa584f

	some fixups and renames.

	Thu Jul  6 22:40:58 2006  Tim Janik  <timj@gtk.org>

	        * birnet-zintern.c: some fixups and renames.

	        * Makefile.am: build birnet-zintern.

	        * dummy.cc: dummy C++ file for linking C binaries.

	svn path=/trunk/; revision=3801

2006-07-06  Tim Janik 	# 5aea1a94a05da32c3183d9d035d23b3ccef6ef5b

	CVS copied from beast/bse/zintern/zintern.c.

	Thu Jul  6 22:25:13 2006  Tim Janik  <timj@gtk.org>

	        * birnet-zintern.c: CVS copied from beast/bse/zintern/zintern.c.

	svn path=/trunk/; revision=3800

2006-07-06  Tim Janik 	# 51532341ae1663bbb58386e9d2ae2e5a719b7080

	moved dirname and basename into Path:: namespace. added isabs(),

	Thu Jul  6 22:07:54 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.[hc]*: moved dirname and basename into Path:: namespace.
	        added isabs(), skip_root(), join().

	        * tests/infotest.cc: test Path:: functions.

	svn path=/trunk/; revision=3799

2006-07-05  Tim Janik 	# b2352240236bbabcda92d451a25bc3839486e508

	generate .tar.bz2 dist tarball which saves roughly 1M.

	Thu Jul  6 01:06:12 2006  Tim Janik  <timj@gtk.org>
	  * Makefile.am: generate .tar.bz2 dist tarball which saves roughly 1M.

	svn path=/trunk/; revision=3798

2006-07-05  Stefan Westerfeld 	# ad1d121131057a3faa4768a893ee27f0f1848cae

	updates

	svn path=/trunk/; revision=3797

2006-07-05  Tim Janik 	# 8a2319175242402eb48803b8de7d095f37b4cbfc

	use birnet url launcher.

	Wed Jul  5 02:55:27 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: use birnet url launcher.

	        * beast-gtk/bstmain.c: invoke birnet cleanup handlers.

	        * beast-gtk/gxk/gxkutils.[hc]: moved url launchers and cleanup
	        handlers to birnet.

	svn path=/trunk/; revision=3796

2006-07-05  Tim Janik 	# f1f4847e040600b34b8db99ac1dc2b9cb2ad6eb7

	added logic to restart browser executable checks if none was found to be

	Wed Jul  5 01:54:59 2006  Tim Janik  <timj@gtk.org>

	        * birnetutils.c (birnet_url_test_show): added logic to restart browser
	        executable checks if none was found to be working. added support for the
	        "xdg-open" browser launching script.

	        * birnetutils.[hc]: moved url opener code and cleanup handler code from
	        GXK here. provide:
	        birnet_url_show(): show an url, show an error if no browser is present.
	        birnet_url_show_with_cookie(): same as birnet_url_show() albeit setting
	        a cookie before hand and then redirecting automatically to the actual url.
	        birnet_url_test_show(): show an url, return false if no browser is present.
	        birnet_url_test_show_with_cookie(): same as birnet_url_show_with_cookie()
	        with false return code instead of a warning.
	        birnet_cleanup_add(): register a cleanup handler with the default main loop.
	        birnet_cleanup_force_handlers(): force cleanup handler execution prematurely.

	        * tests/threads.cc: test static C mutex.

	        * birnetthread.[hc]: added support for static mutexes in C via:
	        static BIRNET_MUTEX_DECLARE_INITIALIZED (mutexname);

	        * birnetcore.h: provide BIRNET_CPP_PASTE[234]().

	        * birnetmsg.h: use BIRNET_CPP_PASTE4().

	svn path=/trunk/; revision=3795

2006-07-04  Tim Janik 	# ac757d3087d03694f8e7ef97cdc9665220afa18c

	applied updates by Michele Petrecca <michelinux@alice.it>.

	Wed Jul  5 00:45:21 2006  Tim Janik  <timj@gtk.org>

	        * it.po: applied updates by Michele Petrecca <michelinux@alice.it>.

	svn path=/trunk/; revision=3794

2006-07-04  Tim Janik 	# cb5883dab54942906b08f54499a339548843c625

	generation updates

	svn path=/trunk/; revision=3793

2006-06-22  Tim Janik 	# 124c8608d952f5c60024619e28bf9ba21b9ed373

	added --enable-maintainer-mode to all autogen.sh

	svn path=/trunk/; revision=3792

2006-06-21  Tim Janik 	# ec397c5842e332f372936671a16aaea0000b1b31

	removed unnecessary _ISOC99_SOURCE.

	Wed Jun 21 23:42:35 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdbmeter.c: removed unnecessary _ISOC99_SOURCE.

	svn path=/trunk/; revision=3791

2006-06-21  Tim Janik 	# aa786b58a4f7306b872fe29e2d4ffe6d8869ae38

	include birnet.h before glib-extra.h for _GNU_SOURCE to take effect.

	Wed Jun 21 23:40:33 2006  Tim Janik  <timj@gtk.org>

	        * sfitypes.h: include birnet.h before glib-extra.h for _GNU_SOURCE to
	        take effect.

	svn path=/trunk/; revision=3790

2006-06-21  Tim Janik 	# 76a6490d8a92cdac638032b58d527417ede2695c

	define _GNU_SOURCE for the birnet programming environment, to

	Wed Jun 21 23:38:35 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: define _GNU_SOURCE for the birnet programming environment,
	        to automatically get GNU extensions like dprintf(), large file, uint, ...

	svn path=/trunk/; revision=3789

2006-06-21  Tim Janik 	# 2f1a9b394669ffb6d8bbccc4faea58137398f82e

	type fixup.

	Wed Jun 21 23:37:41 2006  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: type fixup.

	svn path=/trunk/; revision=3788

2006-06-21  Tim Janik 	# 6d2600e10a244dd02e989b6609ee36738ecc632c

	provide versioning information and BIRNET_SIZEOF_SYS_TYPESH_UINT.

	Wed Jun 21 02:13:38 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: provide versioning information and BIRNET_SIZEOF_SYS_TYPESH_UINT.

	        * birnetcore.h: include <sys/types.h> for uint, ssize and other types.
	        used gcc modes to define type width now. resolve clashes when defining
	        uint by checking BIRNET_SIZEOF_SYS_TYPESH_UINT.

	        * birnetthreadxx.cc: fixed missing ThreadDescendant() constructor which
	        the gcc-4.2.0 snapshot 20060530 failed to catch.

	        * tests/datalist.cc: make all data keys static, otherwise we get crashes
	        due to mixed up destruction order. (data keys should always be static).

	        * tests/infotest.cc: added a simple test for BIRNET_CHECK_VERSION().

	        * configure.inc: provide birnet versioning information. check for uint
	        in <sys/types.h>.

	svn path=/trunk/; revision=3787

2006-06-18  Tim Janik 	# 07e7af5b9506b8fedbd3cded6ca6ae66bca249f7

	provide Thread::Self::exit().

	Sun Jun 18 03:11:35 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh, birnetthreadxx.cc: provide Thread::Self::exit().

	        * birnetthread.h, birnetthread.c: provide birnet_thread_exit().

	svn path=/trunk/; revision=3786

2006-06-15  Tim Janik 	# ef6a5206b146de43ac7e8c460577d0e1b3b627ee

	initialize GThread as early as possible. minor cleanups.

	Fri Jun 16 01:28:35 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.cc: initialize GThread as early as possible.
	        minor cleanups.

	svn path=/trunk/; revision=3785

2006-06-15  Tim Janik 	# de215cbb8b67732e36e171b681996d1429a6350a

	added links, updated TODO

	svn path=/trunk/; revision=3784

2006-06-15  Hendrik Richter 	# 94e4236cf4a9ac0dc847d345a3b84bb48d8ed001

	Updated German translation.

	2006-06-15  Hendrik Richter  <hendrikr@gnome.org>

		* de.po: Updated German translation.

	svn path=/trunk/; revision=3783

2006-06-15  Hendrik Richter 	# b26f2971c5ae4da39ff9f6ff83afede6301a15da

	Updated German translation.

	2006-06-15  Hendrik Richter  <hendrikr@gnome.org>

		* de.po: Updated German translation.

	svn path=/trunk/; revision=3782

2006-06-14  Stefan Westerfeld 	# 140ccfad678224996b733c3ea4d5723e744d3a7b

	Remove prototype for gxk_led_set_colors for which no implementation exists

	Wed Jun 14 15:42:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/gxk/gxkled.h: Remove prototype for gxk_led_set_colors
		for which no implementation exists in gxkled.c.

	svn path=/trunk/; revision=3781

2006-06-14  Stefan Westerfeld 	# 5989f57cedbc04ad76f1ce27e025f9e084d09bf4

	Added G_GNUC_PRINTF printf format attribute to the functions

	Wed Jun 14 15:45:57 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.hh: Added G_GNUC_PRINTF printf format attribute to the
		functions Parser::printWarning and Parser::printError.

	svn path=/trunk/; revision=3780

2006-06-14  Stefan Westerfeld 	# e4450ad5d582d8c0376fa64100d93e2a2249d101

	Added G_GNUC_PRINTF printf format attribute.

	Wed Jun 14 15:44:27 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseitem.h(bse_item_undo_open): Added G_GNUC_PRINTF printf format
		attribute.

	svn path=/trunk/; revision=3779

2006-06-13  Tim Janik 	# 2895b88c430c519bf303b24b7d0167ba1a4876f0

	renamed SignalBase::Link to TrampolineLink. fixed SlotBase::~SlotBase() to

	Tue Jun 13 01:51:18 2006  Tim Janik  <timj@gtk.org>

	        * birnetsignal.hh: renamed SignalBase::Link to TrampolineLink.
	        fixed SlotBase::~SlotBase() to not leak trampoline reference
	        counts. renamed link accessor to SlotBase::get_trampoline_link() and
	        fixed callers.

	        * birnetsignalslot.hh: added Slot*::get_trampoline() method to all
	        Slot* classes to access the trampoline in a type safe manner.

	        * tests/signal.cc: added a test for trampoline accesses on slots.

	svn path=/trunk/; revision=3778

2006-06-11  Tim Janik 	# 4d52b2631a9c7b212579dfdc663b82c306c8bdf5

	got rid of TEMPLATE_ERROR::* which is provided by Birnet now.

	Mon Jun 12 01:09:51 2006  Tim Janik  <timj@gtk.org>

	        * bsecxxutils.hh: got rid of TEMPLATE_ERROR::* which is provided
	        by Birnet now.

	        * bsecxxarg.hh: use Birnet::TEMPLATE_ERROR::invalid_type().

	svn path=/trunk/; revision=3777

2006-06-11  Tim Janik 	# 11c49317087e899a044ccc3e6896baddd35b38d9

	moved template declarations from bsecxxutils.hh here, to signal template

	Mon Jun 12 01:06:47 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.hh: moved template declarations from bsecxxutils.hh
	        here, to signal template usage errors.
	        added function TEMPLATE_ERROR::invalid_type<>();
	        added class TEMPLATE_ERROR::InvalidType<>;

	svn path=/trunk/; revision=3776

2006-06-11  Tim Janik 	# 9ae120835203f980ce6962b7f9a0bbf2e2322be3

	destruction phase fixups. birnet_thread_unref(): ensure all callback

	Sun Jun 11 23:48:59 2006  Tim Janik  <timj@gtk.org>

	        * birnetthread.c: destruction phase fixups.
	        birnet_thread_unref(): ensure all callback related destruction has
	        already taken place when ref_count drops to 0.
	        birnet_thread_handle_exit(): call C++ destruciton logic.

	        * birnetthreadxx.cc: moved magic trhread implementation bits into
	        Thread::ThreadWrapperInternal.

	        * birnetthreadxx.hh: added OwnedMutex to Thread. cleaned up magic
	        implementation bits. provide Thread::Self::owned_mutex().
	        provide DataListContainer API by reimplementation for thread safety.

	        * tests/datalist.cc: test Thread DataListContainer API.

	        * tests/threads.cc: minor adjustments.

	svn path=/trunk/; revision=3775

2006-06-11  Tim Janik 	# 65cab0196c43f919e9266320d760badfa87e7b6f

	shuffled function position

	svn path=/trunk/; revision=3774

2006-06-11  Tim Janik 	# e4e07deff7824e63477b4bee6d775d4f62c3d216

	moved DataList implementation here from Rapicorn. this provides the API

	Sun Jun 11 19:47:27 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.hh, birnetutilsxx.cc: moved DataList implementation here
	        from Rapicorn. this provides the API types DataKey and DataListContainer.

	        * tests/datalist.cc: DataList test, adapted from Rapicorn.

	        * birnettests.h: made TASSERT() more verbose if TEST_VERBOSE is defined.

	svn path=/trunk/; revision=3773

2006-06-11  Tim Janik 	# 899c62030dbe18b5601e0fc3d230ac6490d66e26

	provide STRFUNC if _BIRNET_SOURCE_EXTENSIONS is defined.

	Sun Jun 11 19:02:05 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.h: provide STRFUNC if _BIRNET_SOURCE_EXTENSIONS is defined.

	svn path=/trunk/; revision=3772

2006-06-09  Tim Janik 	# fea6e9575cdaf762d3c02fe1db96c6340507304d

	check that NULL is defined to __null in C++ on 64bit.

	Fri Jun  9 19:54:52 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h (birnet_init_test): check that NULL is defined to __null
	        in C++ on 64bit.

	svn path=/trunk/; revision=3771

2006-06-09  Tim Janik 	# 2f129dd62c615222ab2199a19b065e8eddd33d48

	allow multiple invocations of relock() without unlock() on an auto locker

	Fri Jun  9 19:50:24 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: allow multiple invocations of relock() without
	        unlock() on an auto locker and have the auto locker clear up these
	        locks in its destructor. i.e. added a lock counter to auto locker.

	        * birnetthreadxx.cc (_birnet_init_threads_cxx):
	        avoid std::list::size() which is O(N).

	        * test/threads.cc: moved former AutoLocker here as GenericAutoLocker,
	        added it to auto locker benchmarks. added a test to check auto locker
	        lock counting.

	svn path=/trunk/; revision=3770

2006-06-08  Tim Janik 	# 9b073c31c24b3cabfb709eb0905008fe64b5e50c

	back out -Wstrict-null-sentinel again, since it doesn't detect 0 vs.

	Thu Jun  8 18:46:32 2006  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: back out -Wstrict-null-sentinel again, since it doesn't
	        detect 0 vs. __null.

	svn path=/trunk/; revision=3769

2006-06-08  Tim Janik 	# b0bf9a60747a11a6dc3b5bcbc772dec868024446

	add -Wstrict-null-sentinel to CXXFLAGS.

	Thu Jun  8 18:26:33 2006  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: add -Wstrict-null-sentinel to CXXFLAGS.

	svn path=/trunk/; revision=3768

2006-06-08  Stefan Westerfeld 	# d9b24d6de2b01d4fd0bf86aa7021503572728541

	Fixed a strange assertion which looked like this: TASSERT (a == b == 1).

	Thu Jun  8 16:57:39 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* testsfidl.cc: Fixed a strange assertion which looked like this:
		TASSERT (a == b == 1). Correct is TASSERT (a == 1); TASSERT (b == 1).

	svn path=/trunk/; revision=3767

2006-06-07  Tim Janik 	# b5cea446b13beaf6bba5762fed33aa28fe4a4681

	added initialization queues for mutexes and conditions to allow static

	Thu Jun  8 00:00:10 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh, birnetthreadxx.cc: added initialization queues for
	        mutexes and conditions to allow static mutexes and conditions. however,
	        locking/unlocking of course still only works *after* threading
	        initialization.

	        * birnetthread.h:
	        * birnetthread.c: added birnet_threads_initialized() and a C++ threading
	        initialization hook.

	        * test/threads.cc: test static mutexes.

	svn path=/trunk/; revision=3766

2006-06-07  Tim Janik 	# 1a5edb449a1367fc2b6acc19ee473a779c043e05

	turned OwnedMutex into a recursive mutex. turned OwnedMutex into a

	Wed Jun  7 20:14:14 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: turned OwnedMutex into a recursive mutex.
	        * birnetthreadxx.cc: turned OwnedMutex into a recursive mutex.
	        * tests/threads.cc (test_thread_cxx): adapted tests.

	svn path=/trunk/; revision=3765

2006-06-07  Tim Janik 	# f8dd0fd79c7581c2a3aed8c2436fe7d39eade430

	fixed up atomic accessors.

	Wed Jun  7 20:00:03 2006  Tim Janik  <timj@gtk.org>

	        * birnetmsg.c: fixed up atomic accessors.

	        * birnetthread.h: fixed up atomic accessors, introduced atomic_uint
	        functions.

	        * birnetthreadxx.cc:
	        * birnetthread.c: fixed up C++ thread pointer implementation.

	        * birnetthreadxx.cc, birnetthreadxx.hh: added OwnedMutex.

	        * tests/threads.cc: test OwnedMutex.

	svn path=/trunk/; revision=3764

2006-06-06  Tim Janik 	# bd67cd1907056e248f9d50c4009de304141fcebc

	cosmetics

	svn path=/trunk/; revision=3763

2006-06-06  Tim Janik 	# 5288f42a069397f804d3e5c04b5fee6377be9144

	const fixes

	svn path=/trunk/; revision=3762

2006-06-06  Stefan Westerfeld 	# a11385b2b5af8d767f2480e050bb320c052b2b3f

	Check that C++ constructors and destructors and the AutoLocker constructor

	Tue Jun  6 16:53:40 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Check that C++ constructors and destructors and
		the AutoLocker constructor and destructor will be executed in the
		order we need, that is: an AutoLocker that is created before an object
		should protect its constructor and destructor, an AutoLocker created
		after an object should not affect its constructor and destructor.

	svn path=/trunk/; revision=3761

2006-06-06  Tim Janik 	# 04d40f7b5454ec3f92b6bac53e312cf0ce18f13b

	got rid of the extra locker pointer by using a (void*) and static_cast().

	Tue Jun  6 16:47:23 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: got rid of the extra locker pointer by using a
	        (void*) and static_cast(). added new assertions. const-optimized code.

	        * birnettests.h (TEST_CALIBRATION): give a tiny bit more time for
	        calibration to increase accuracy somewhat.

	        * threads.cc: adapted auto locker test counts to be more precise.
	        added a new benchmark for the former birnet AutoLocker implementation
	        which doesn't cast memory but stores an additional pointer.
	        adapted AutoLocker assertion code which now uses a protected method.

	svn path=/trunk/; revision=3760

2006-06-06  Stefan Westerfeld 	# d278e0f2738a85266cf2b96a38c56aa9ac49e98f

	Fixed bug in auto locker benchmark. It is necessary to take into account

	Tue Jun  6 14:34:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Fixed bug in auto locker benchmark. It is
		necessary to take into account that the different loops will run with
		a different number of dups; so the times need to be adjusted
		accordingly.

	svn path=/trunk/; revision=3759

2006-06-06  Tim Janik 	# e1089568149092be33642b753c5bc6023039b92e

	added benchmark for manual locking.

	Tue Jun  6 02:26:59 2006  Tim Janik  <timj@gtk.org>

	        * tests/threads.cc (bench_auto_locker_cxx): added benchmark for manual
	        locking.

	svn path=/trunk/; revision=3758

2006-06-06  Tim Janik 	# dfbe810c514efd9dff627603ded287338e60cdb8

	reimplemented the AutoLocker class with the help of an inlined template

	Tue Jun  6 02:03:07 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: reimplemented the AutoLocker class with the help of
	        an inlined template wrapper object. all types of lockable objects are
	        now supported, and the new implementation is actually faster.

	        * threads.cc: call assert_impl() on the new auto locker which assert
	        crucial implementation assumptions. added auto locker benchamrks for
	        the former birnet implementation, an early heap based prototype and
	        the current implementation.

	svn path=/trunk/; revision=3757

2006-06-05  Tim Janik 	# 0f72224a04bbfe55c7d10a4066b2cb50bc8431b4

	added support for atomic const pointer access. fixed missing return value

	Mon Jun  5 18:04:19 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: added support for atomic const pointer access.
	        fixed missing return value cast in Atomic::ptr_get().

	svn path=/trunk/; revision=3756

2006-06-05  Tim Janik 	# 7f6c5a3db3a5a40f251e1b82d5c5d8565c86b022

	fixed up AutoLocker member names. added support for initialization from

	Mon Jun  5 17:51:42 2006  Tim Janik  <timj@gtk.org>

	        * birnetthreadxx.hh: fixed up AutoLocker member names.
	        added support for initialization from mutex pointers.

	        * tests/threads.cc: extended AutoLocker test to check constructors
	        from mutex pointers.

	svn path=/trunk/; revision=3755

2006-06-05  Tim Janik 	# 413ee4dc6454d4a07ea185667533220a6a397da4

	fix binary_lookup namespace.

	Mon Jun  5 15:33:26 2006  Tim Janik  <timj@gtk.org>

	        * tools/bwtwave.cc: fix binary_lookup namespace.

	        * tools/bsewavetool.cc (parse_str_option): fixed output argument passing.

	svn path=/trunk/; revision=3754

2006-06-05  Tim Janik 	# f094cedcd0a530f63a00dbe2162a5152c23d4fca

	removed binary lookup templates which are in Birnet now.

	Mon Jun  5 13:59:52 2006  Tim Janik  <timj@gtk.org>

	        * bsecxxutils.hh: removed binary lookup templates which are
	        in Birnet now.

	svn path=/trunk/; revision=3753

2006-06-05  Tim Janik 	# 3c5242000e13870d2e75a6f1945d44fa0f2f9e3e

	use unsigned types for offs and n_elements to extend the range of binary

	Mon Jun  5 14:09:45 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.hh (binary_lookup_fuzzy): use unsigned types for offs
	        and n_elements to extend the range of binary lookups from 2^31 to 2^32.

	svn path=/trunk/; revision=3752

2006-06-05  Tim Janik 	# f24030f151507fb85ecf2406aee811e9a40b5f9b

	added TCHECK() which can be used like TASSERT() but doesn't print a mark.

	Mon Jun  5 13:55:59 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h: added TCHECK() which can be used like TASSERT() but
	        doesn't print a mark. (silent assertion, usefull for *many* tests).

	        * birnetutilsxx.hh: moved templates binary_lookup_insertion_pos(),
	        binary_lookup_sibling() and binary_lookup() from bsecxxutils.hh here.

	        * tests/sorting.cc: new test which tests various binary lookups.

	svn path=/trunk/; revision=3751

2006-06-03  Tim Janik 	# 0651650f2c247f76d7e0e2c26f0f18abc7e7cbc5

	updates

	svn path=/trunk/; revision=3750

2006-05-31  Tim Janik 	# f98a030950deb396fe21468213ec8869091bc658

	minor extensions to the AutoLocker test case. fixed formatting.

	Wed May 31 18:19:30 2006  Tim Janik  <timj@gtk.org>

	        * tests/threads.cc (test_recursive_auto_lock): minor extensions to the
	        AutoLocker test case. fixed formatting.

	svn path=/trunk/; revision=3749

2006-05-31  Stefan Westerfeld 	# 9f874f403ac45f829121f3e5f019a71db7458398

	Add some AutoLocker test code.

	Wed May 31 15:48:35 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/threads.cc: Add some AutoLocker test code.

		* birnetthreadxx.hh: Provide Birnet::AutoLocker class which locks a
		mutex on construction, and automatically unlocks it on destruction, so
		that putting an AutoLocker object on the stack conveniently ensures
		that the mutex will be properly unlocked for instance when the
		function returns or an exception gets thrown.

	svn path=/trunk/; revision=3748

2006-05-31  Tim Janik 	# 652aeee94687ae874cc963345b7bc46aa4c3ba45

	added preserve_non_dirty flag to bst_project_restore_from_file(), adapted

	Wed May 31 03:02:36 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbseutils.[hc]: added preserve_non_dirty flag to
	        bst_project_restore_from_file(), adapted callers.

	svn path=/trunk/; revision=3747

2006-05-31  Tim Janik 	# 2f5ed521adbe5f675ba8bcecf6b0bc6a76bad348

	force dirty project flag after restoring/merging.

	Wed May 31 03:04:03 2006  Tim Janik  <timj@gtk.org>

	        * bseproject.c bse_project_restore(): force dirty project flag
	        after restoring/merging.

	        * gslfft.h: fixed documentation.

	        * tests/testfft.c: added resynthesis tests.

	svn path=/trunk/; revision=3746

2006-05-30  Tim Janik 	# 7b8ac4f811a87f23cd4bfb055ce2445920583986

	support patching of intltool-extract.in versions >= 0.35.

	Wed May 31 00:39:52 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh: support patching of intltool-extract.in versions >= 0.35.

	        * po/intltool-scm-35.diff: version of intltool-scm.diff that applies
	        against intltool-extract.in 0.35.2.

	svn path=/trunk/; revision=3745

2006-05-30  Tim Janik 	# 2ebdead573a4772dc10a967c83340270f3d637ac

	docu fixups.

	Wed May 31 00:39:24 2006  Tim Janik  <timj@gtk.org>

	        * bseengine.c (bse_trans_merge): docu fixups.

	svn path=/trunk/; revision=3744

2006-05-30  Stefan Westerfeld 	# a47719bcb1c7c366fbb25e9c0dc2465bb9efaa24

	Older libgnomecanvas versions had a bug (they don't clear their

	Tue May 30 11:57:03 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/bstcanvaslink.c:
		* beast-gtk/bstcanvassource.c: Older libgnomecanvas versions had a
		bug (they don't clear their item->canvas pointers properly), for which
		a workaround was present. However, newer libgnomecanvas versions no
		longer have this bug, which caused problems with the old workaround.
		So this is an upgraded workaround which should work with both: older
		and newer libgnomecanvas versions. For details see also #340437.

	svn path=/trunk/; revision=3743

2006-05-26  Tim Janik 	# 75fb7a4bbe0deaa46d298e0c7f080c22a70b482f

	document that gsl_power2_fftsr() scales the output data by 1.0/n_values.

	Sat May 27 00:22:44 2006  Tim Janik  <timj@gtk.org>

	        * gslfft.h: document that gsl_power2_fftsr() scales the output data
	        by 1.0/n_values.

	svn path=/trunk/; revision=3742

2006-05-26  Tim Janik 	# f9b9af31354c6b692406f8b03bdb929bb9dbe238

	define BIRNET_*LIKELY() macros.

	Fri May 26 17:38:00 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.h: define BIRNET_*LIKELY() macros.

	svn path=/trunk/; revision=3741

2006-05-26  Tim Janik 	# d4318a64f1920b8baab28a8a1529d4c59f4f0707

	added dirname() and basename(). provide PRIVATE_CLASS_COPY() as birnet

	Fri May 26 14:01:45 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.[hc]*: added dirname() and basename().
	        provide PRIVATE_CLASS_COPY() as birnet source extension.

	        * birnetcore.h: provide BIRNET_DIR_SEPARATOR, BIRNET_SEARCHPATH_SEPARATOR
	        and related macros.

	svn path=/trunk/; revision=3740

2006-05-26  Tim Janik 	# 51c3c2b8ab92cc75a42ba325589040c2a708d293

	provide ABS, MIN, MAX, CLAMP.

	Fri May 26 13:42:59 2006  Tim Janik  <timj@gtk.org>
	        * birnetcore.h: provide ABS, MIN, MAX, CLAMP.

	svn path=/trunk/; revision=3739

2006-05-25  Stefan Westerfeld 	# d4bc8a3b9834c79c64ccb49f7a83e15a62bf8725

	Made last ChangeLog entry more verbose.

	svn path=/trunk/; revision=3738

2006-05-25  Stefan Westerfeld 	# 616c044d3ea8f2e3f292e67181e547982b89b9ea

	Use locale independant g_ascii_formatd for writing the doubles now;

	Thu May 25 15:24:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Use locale independant g_ascii_formatd for
		writing the doubles now; increased output precision to %15.9g (which
		is in some cases a huge improvement over %f).

		* slowtests/audio/Makefile.am:
	        * slowtests/audio/partymonster.ref: Test partymonster.bse, too. To do
	        it right, bse would need an option to produce deterministic random
	        values, but for now, with a more relaxed threshold, the test passes.

		* slowtests/audio/*.ref: New reference files in the new format.

	svn path=/trunk/; revision=3737

2006-05-25  Stefan Westerfeld 	# 6e9a44b2f3d92297456f9f746930e8a73219459c

	Clip audio data - it seems that PortAudio doesn't clip, but JACK requires

	Thu May 25 14:38:32 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: Clip audio data - it seems that PortAudio
		doesn't clip, but JACK requires clipped audio data.

	svn path=/trunk/; revision=3736

2006-05-25  Stefan Westerfeld 	# ec1217d47fb8e78fbc0e02042645b42612fd6fdb

	upgrade to automake-1.9

	Thu May 25 13:07:39 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* autogen.sh:
		* Makefile.am: upgrade to automake-1.9

		* bsepcmdevice-portaudio.cc: compatibility with 0.7.0.

		* configure.in: bump version to 0.7.0.

		* README:
		* NEWS: Updated.

	svn path=/trunk/; revision=3735

2006-05-25  Stefan Westerfeld 	# 75aaf1d5b2467ff80ba406c1baac4c716378820a

	Added "Tricks" section with some of the things that are non-obvious but

	Thu May 25 10:24:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* slowtests/audio/README: Added "Tricks" section with some of the
		things that are non-obvious but are good to keep in mind when
		designing tests.

	svn path=/trunk/; revision=3734

2006-05-25  Stefan Westerfeld 	# 30117bf8d9b6ad21a7a8ab39db82f22afaa09af8

	updates, marked 0.7.0 items in my section

	svn path=/trunk/; revision=3733

2006-05-24  Stefan Westerfeld 	# dc57687c6896b417459899aa710b156c413553fe

	Explicitely allow setting the threshold to a value > 100%, which will make

	Wed May 24 17:50:55 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefcompare.cc: Explicitely allow setting the threshold to a
		value > 100%, which will make bsefcompare always fail.

	svn path=/trunk/; revision=3732

2006-05-22  Tim Janik 	# 69c8172f4477cfe52dbdf73e09e1b343e9cddc75

	fixed up bogus non-true exit values in distfile-list: rule.

	Tue May 23 00:10:47 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: fixed up bogus non-true exit values in distfile-list: rule.

	        * slowtests/filecheck/Makefile.am: srcdir != builddir fixups.

	svn path=/trunk/; revision=3731

2006-05-22  Tim Janik 	# 97d410c343d68bc34cc8295b7b3ca8f057e67e79

	removed definition of G_IMPLEMENT_INTERFACE() which is supplied by stock

	Tue May 23 00:11:30 2006  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: removed definition of G_IMPLEMENT_INTERFACE() which is
	        supplied by stock glib-2.6.

	svn path=/trunk/; revision=3730

2006-05-22  Tim Janik 	# f8943b87ba2957c31c332a0f1b451bad3a749465

	CVS moved here from slowtests/.

	Mon May 22 22:18:44 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/filecheck/checkproject.scm: CVS moved here from slowtests/.

	svn path=/trunk/; revision=3729

2006-05-21  Tim Janik 	# fd8cbbfe666d12058a07632f4aa458da3c3ce55f

	scheme script to record BSE files to WAV files, based on

	Sun May 21 17:06:40 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/audio/bse2wav.scm: scheme script to record BSE files to WAV
	        files, based on bse-scm-glue.boot. properly check command line args,
	        display progress and errors.

	        * slowtests/audio/Makefile.am: use bse2wav.scm, fixup $(srcdir)
	        relative file names. disable minisong-test: which requires bsewave
	        file loading from a dir other than CWD.

	        * bsetowav.scm: removed, superceeded by bse2wav.scm.

	        * slowtests/filecheck/Makefile.am: naming fixup.

	        * Makefile.am: more distcheck rule fixes.

	svn path=/trunk/; revision=3728

2006-05-21  Tim Janik 	# ce73e603033fc80905ea48d14f201561cdd3d987

	removed debugging printerr

	svn path=/trunk/; revision=3727

2006-05-21  Tim Janik 	# 479e6fcfea3d71d3c27e6306811bb1d0d18cd41a

	added compat code for "license" and "author" fields, loaded from BSE files

	Sun May 21 12:19:52 2006  Tim Janik  <timj@gtk.org>

	        * bsesuper.c (super_compat_setup): added compat code for "license" and
	        "author" fields, loaded from BSE files < 0.7.0.

	svn path=/trunk/; revision=3726

2006-05-21  Tim Janik 	# c87b3435b4f999cee51d7634dd7e85094dac6cdc

	translatable file updates.

	Sun May 21 11:56:04 2006  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: translatable file updates.

	svn path=/trunk/; revision=3725

2006-05-21  Tim Janik 	# d32b889f1f62926e2370380f8d6a2d4cc67274b3

	fixed up --help messgae.

	Sat May 20 15:34:05 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: fixed up --help messgae.

	        * beast-gtk/bststest.c:
	        * tools/bsefextract.cc:
	        * tools/bsewavetool.cc:
	        * tools/magictest.c:
	        * tools/mathtool.c:
	        * beast-gtk/bstmain.c: adapted to refactored BSE initialization.

	        * tools/bsewavetool.cc:
	        * tools/magictest.c:
	        * tools/mathtool.c:
	        * tools/bsefextract.cc: prevent rcfile loading.

	        * configure.in: generate slowtests/filecheck/Makefile.

	        * slowtests/Makefile.am: removed BSE filecheck.

	        * slowtests/filecheck/Makefile.am: added BSE filecheck from slowtests/.

	        * Makefile.am: echo a banner when all tests passed.

	        * library/demo/partymonster.bse:
	        * library/demo/x2-midi-test.bse:
	        * test/midi-test.bse:
	        * test/osc-test.bse: converted to 0.7.0.

	svn path=/trunk/; revision=3724

2006-05-21  Tim Janik 	# 5465f5d98ce8707cd7eb045109edba4d09f01836

	added srand48() call to random number initializations.

	Sat May 20 15:34:05 2006  Tim Janik  <timj@gtk.org>

	        * birnetutilsxx.cc (birnet_init_extended): added srand48() call to random
	        number initializations.

	        * birnettests.h: expose birnet_test_setup(). initialize birnet
	        with stand-alone=true for test programs to prevent rcfiles and the like
	        to taint test results.

	        * birnetutilsxx.cc:
	        * birnetcore.[hc]: added BirnetInitValue and accessors to get values of
	        different types. added birnet_init_extended() and birnet_init_settings.

	svn path=/trunk/; revision=3723

2006-05-21  Tim Janik 	# ba3c48db112a1a728dd3ebc7c03f504cfb1e4e18

	merged config data from gsl into BSE config data. make use of

	Sat May 20 15:49:07 2006  Tim Janik  <timj@gtk.org>

	        * bse.h:
	        * bsemain.[hc]: merged config data from gsl into BSE config data. make
	        use of BirnetInitValue to allow non-argc/argv configuraiton upon initilaization.
	        removed bse_init_intern(). added bse_init_inprocess() and bse_init_test().
	        adapted dependent code.

	        * gslcommon.[hc]: removed config and initialization logica that moved to BSE.

	        * bseserver.c: prevent rcfile loading if
	        birnet_init_settings->stand_alone is true.

	        * bseobject.c: fixup "blurb" parameter handling, default to the
	        empty string and skip default when saving.

	        * bsesuper.c: fix up "license" and "author" defaults to empty strings.

	        * bsesuper.c: pre-initialize authors and license field when
	        creating objects.

	        * bsecore.idl: added configurable defaults for author and license fields.
	        removed "Stepping Rates" config section. adapted dependent code.

	        * bseutils.[hc]: provide initial default author and license values.

	svn path=/trunk/; revision=3722

2006-05-19  Tim Janik 	# 20d56bb49b3743df05a00e69b3b37f6bba60acac

	updates

	svn path=/trunk/; revision=3721

2006-05-19  Stefan Westerfeld 	# 6ea252e1a993fa26ed8b148fbd4ac2efaba803ec

	updates

	svn path=/trunk/; revision=3720

2006-05-19  Tim Janik 	# c2e4c75a80b089ce2871f3f18ed35832ff01c5ca

	fixed audio test rules, run audio tests upon make check.

	Fri May 19 17:51:33 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/audio/Makefile.am: fixed audio test rules, run audio
	        tests upon make check.

	svn path=/trunk/; revision=3719

2006-05-19  Stefan Westerfeld 	# 0e0cc62f22c61d1a4a637446b29457e86ffc6063

	Reorder tar options so that make site-preview works with GNU tar-1.15.1,

	Fri May 19 17:48:27 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* web/Makefile.am: Reorder tar options so that make site-preview works
		with GNU tar-1.15.1, too.

	svn path=/trunk/; revision=3718

2006-05-19  Stefan Westerfeld 	# 30141c390f4d577a2b97dc617a3f3e67161c9c63

	updates

	svn path=/trunk/; revision=3717

2006-05-18  Stefan Westerfeld 	# 56eb0faf08808a038f9d5bad8052993427c6d6c3

	Added frowzy-drums.bsewave. Fixed up plugin dirs to include location of

	Thu May 18 13:39:08 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* slowtests/audio/Makefile.am: Added frowzy-drums.bsewave. Fixed up
		plugin dirs to include location of the freeverb plugin.

		* slowtests/audio/README: Update documentation: removed
		featuretests.sh related stuff, and included overview over common
		bsefextract features.

		* slowtests/audio/minisong.bse: Replace absolute path with relative
		path.

	svn path=/trunk/; revision=3716

2006-05-18  Stefan Westerfeld 	# dfb340d624993d577135cf2046e8f0d3cd3e1e7a

	Remove binary data from minisong, by replacing the drums it with a tiny

	Thu May 18 13:29:10 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* slowtests/audio/frowzy-drums.bsewave:
		* slowtests/audio/minisong.ref:
		* slowtests/audio/minisong.bse: Remove binary data from minisong, by
		replacing the drums it with a tiny low quality drum kit, that is
		now linked from the .bse file, not included.

	svn path=/trunk/; revision=3715

2006-05-18  Stefan Westerfeld 	# 64d5ca0133afdca8160ab39d55a813fa6fcfc22f

	Document what thinout currently does in --help.

	Thu May 18 12:03:18 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Document what thinout currently does in
		--help.

	svn path=/trunk/; revision=3714

2006-05-17  Stefan Westerfeld 	# 2995a908f714ad29b894a6f43c8c8aaf5fa7852f

	Provide a very rough summary what has been happening in CVS since the last

	Wed May 17 13:27:39 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* web/news.doxi: Provide a very rough summary what has been happening
		in CVS since the last release. Once I write such a summary more often,
		it can get more fine grained, but for now, I'll leave out too much
		details.

	svn path=/trunk/; revision=3713

2006-05-16  Stefan Westerfeld 	# 07e07bd36161c8f60f006dc548fa285e8ffd7280

	removed cvsignore

	svn path=/trunk/; revision=3712

2006-05-16  Stefan Westerfeld 	# 5b46398c4a67321aabf6c83a11c01eec6f5b3c01

	Makefile changes caused by moving the tests from tests/audio to

	Tue May 16 17:31:34 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am:
		* slowtests/Makefile.am:
		* configure.in: Makefile changes caused by moving the tests from
		tests/audio to slowtests/audio.

		* tests/audio/*: Removed remaining files. The tests can be found in
		slowtests/audio now.

		* test/Makefile.am: Makefile changes caused by moving some files from
		the test/ directory to slowtests/audio.

		* slowtests/audio/Makefile.am: Removed old featuretest.sh related
		rules now. The tests that are executed upon "make test" are now
		balance-test, minisong-test, syndrum-test, velocity-test and
		bseadder-test.

		* slowtests/audio/bseadder.bse: Replaced constant exponential FM with
		transpose.

		* test/test-song.bse:
		* slowtests/audio/minisong.bse: Moved test/test-song.bse to
		slowtests/audio/minisong.bse, clean up stuff so that its a usable
		little test song now.

		* test/drum-test.bse:
		* slowtests/audio/syndrum.bse: Moved test/drum-test.bse to
		slowtests/audio/syndrum.bse but with lower volume to prevent clipping.

		* test/velocity-test.bse:
		* slowtests/audio/velocity.bse: Moved file from
		test/velocity-test.bse to slowtests/audio/velocity.bse and added a
		second track.
		This is a *trick* to get bsefextract to really measure velocities.
		Normally, the --spectrum feature will not take into account low loud
		something is (it normalizes the spectrum during the comparision).
		However, by adding a second track, we achieve a *relative* difference
		in the spectrum (i.e.  how much drum-like does it sound and how much
		melody-like), which can be measured.

	svn path=/trunk/; revision=3711

2006-05-16  Tim Janik 	# 0c4abe30fb3c83b477fd2d3a059d1aefcbc9191e

	CVS copied from test/drum-test.bse.

	Tue May 16 16:14:31 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/audio/syndrum.bse: CVS copied from test/drum-test.bse.

	        * slowtests/audio/velocity.bse: CVS copied from test/velocity-test.bse.

	        * slowtests/audio/minisong.bse: CVS copied from test/test-song.bse.

	svn path=/trunk/; revision=3710

2006-05-16  Tim Janik 	# e46cf3f9f0d1126d709429cc7df5a49d9e7bbf86

	CVS copied here from tests/audio/.

	Tue May 16 16:06:47 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/audio/.cvsignore:
	        * slowtests/audio/Makefile.am:
	        * slowtests/audio/README:
	        * slowtests/audio/balance.bse:
	        * slowtests/audio/balance.ref:
	        * slowtests/audio/bseadder.bse:
	        * slowtests/audio/bsetowav.scm: CVS copied here from tests/audio/.

	svn path=/trunk/; revision=3709

2006-05-16  Tim Janik 	# d829a667d8723a40470486f2b039ae3ecaaa6719

	CVS copied here from tests/audio/.

	Tue May 16 16:06:47 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/audio/.cvsignore:
	        * slowtests/audio/Makefile.am:
	        * slowtests/audio/README:
	        * slowtests/audio/balance.bse:
	        * slowtests/audio/balance.ref:
	        * slowtests/audio/bseadder.bse:
	        * slowtests/audio/bsetowav.scm: CVS copied here from tests/audio/.

	svn path=/trunk/; revision=3708

2006-05-16  Stefan Westerfeld 	# f65fff8816fd262541cf6818df97b35b921e86d2

	It is important to update sample rate dependant parameters in the "params"

	Mon May 15 22:09:53 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* davsyndrum.c (dav_syn_drum_update_modules): It is important to
		update sample rate dependant parameters in the "params" struct within
		the object, because the "params" struct within the object will be used
		by dav_syn_drum_context_create to initialize the state for the
		modules. This fixes #337703.

	svn path=/trunk/; revision=3707

2006-05-15  Tim Janik 	# 86b0eb8d9809053eef198d4e63acdcf4e9a4ae85

	use checkproject.scm to test-load .bse files. even bail on warnings issued

	Tue May 16 01:37:20 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/Makefile.am (bse-check): use checkproject.scm to test-load
	        .bse files. even bail on warnings issued on stderr.
	        issue bse-check: upon make check.

	        * slowtests/checkproject.scm: new file to test-load .bse files which
	        only need stock tarball plugins.

	        * tests/Makefile.am: removed bse-check:-rule which is in slowtests/ now.

	svn path=/trunk/; revision=3706

2006-05-15  Tim Janik 	# fed507e7700aafb1d21f1936d249a363e8e4b1f5

	fix up plugin path glob

	svn path=/trunk/; revision=3705

2006-05-15  Tim Janik 	# 44add85cfcd4592fc9b4edd4d34b991fd11cdf6a

	message update

	svn path=/trunk/; revision=3704

2006-05-15  Tim Janik 	# 36c758cee25245d0b2a2eeec72ce9c532c7d41b3

	added distfile-list:-rule to recursively generate a list of all DISTFILES

	Mon May 15 21:21:28 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: added distfile-list:-rule to recursively generate a
	        list of all DISTFILES files.

	        * tests/Makefile.am: check that no .bse file listed in DISTFILES
	        produces warnings when loaded.

	svn path=/trunk/; revision=3703

2006-05-15  Tim Janik 	# c371461c87d0c2df1666b7ab78a9aef701931eb4

	minor error message fixup.

	Mon May 15 21:30:47 2006  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc (parse): minor error message fixup.

	svn path=/trunk/; revision=3702

2006-05-15  Tim Janik 	# 02b6120adce90a7fd661deddfbe567298891a30d

	added distfile-list:-rule to recursively generate a list of all DISTFILES

	Mon May 15 21:21:28 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: added distfile-list:-rule to recursively generate a
	        list of all DISTFILES files.

	        * tests/Makefile.am: check that no .bse file listed in DISTFILES
	        produces warnings when loaded.

	svn path=/trunk/; revision=3701

2006-05-15  Stefan Westerfeld 	# 17637f7fe0369e31bbdb3069b1c6573caa6f62f8

	For feature extraction the --cut-zeros argument is needed, to eliminate

	Mon May 15 20:23:42 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am: For feature extraction the --cut-zeros
		argument is needed, to eliminate the extra zeros before and after the
		signal. Otherwise, feature comparision will be unreliable.
		For the balance test, I also added the --spectrum and --avg-spectrum
		features again, and renamed the reference file to balance.ref.

		* tests/audio/balance.bse: In addition to testing the left and right
		position, the test file now starts with the center position.

		* tests/audio/balance.ref: New reference file (in the new format) for
		the balance test.

	svn path=/trunk/; revision=3700

2006-05-14  Stefan Westerfeld 	# dd385654975ea6ae7245e0c278fa383e7d25bced

	Changed format of the feature file according to #340386. This allows

	Sun May 14 15:20:10 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc tools/bsefcompare.cc: Changed format of the
		feature file according to #340386. This allows --permissive matching
		in bsefcompare (which is now default), that can cope with comparing
		matrices or vectors with different sizes. For the --spectrum feature
		this means that you can finally compare the spectrums of two files
		which have the different lengths (only the start of the files will be
		compared).

	svn path=/trunk/; revision=3699

2006-05-13  Stefan Westerfeld 	# 1aa3c9a475de9743dd5a3141378bd4c4737d0d80

	Got rid of per feature output redirection code, and replaced it with a

	Sat May 13 21:56:36 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Got rid of per feature output redirection
		code, and replaced it with a simple "-o" option, which allows all of
		bsefextract's output to be redirected into a file.

	svn path=/trunk/; revision=3698

2006-05-13  Stefan Westerfeld 	# 39778498246c6dbb2e10c0514b5817f22d159948

	Adapt coding style a bit to the rest of BEAST (mainly removed

	Sat May 13 21:09:21 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc tools/bsefcompare.cc: Adapt coding style a bit
		to the rest of BEAST (mainly removed semiCapitalizedIdentifiers).

	svn path=/trunk/; revision=3697

2006-05-12  Tim Janik 	# b39579903bdc8d54b39798f8d495da35ef04bb13

	started rewrite of test rules.

	Fri May 12 16:52:32 2006  Tim Janik  <timj@gtk.org>

	        * tests/audio/Makefile.am: started rewrite of test rules.

	        * tests/audio/bsetowav.scm: don't load scripts or LADSPA plugins.
	        fixed progress indication.

	svn path=/trunk/; revision=3696

2006-05-12  Tim Janik 	# 5f79f47cf67ea2265c3ce7b00180d2e6ffef03f4

	permit specification of an rcfile via --bse-rcfile.

	Fri May 12 16:49:38 2006  Tim Janik  <timj@gtk.org>

	        * bseserver.c:
	        * bsemain.[hc]: permit specification of an rcfile via --bse-rcfile.

	        * bseplugin.c: fixed SSE vs. FPU filtering to also affect drivers.

	svn path=/trunk/; revision=3695

2006-05-12  Tim Janik 	# 79627765231c26dbd80b008d05394f9131f4e7e6

	fixed option parser similar to bsefextract.

	Fri May 12 16:47:08 2006  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc (parse): fixed option parser similar to bsefextract.

	F

	svn path=/trunk/; revision=3694

2006-05-12  Stefan Westerfeld 	# 11aaaad76493d8788f007f5ddc0cb517ff16ce74

	Option parsing should work reliably now (fixed a few bugs in check_arg).

	Fri May 12 14:44:41 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Option parsing should work reliably now (fixed
		a few bugs in check_arg).

	svn path=/trunk/; revision=3693

2006-05-11  Tim Janik 	# 362ee22dd0ddbccc1d67d610db885300f410a25b

	fixed option parser so using '=' for args with options isn't mandatory.

	Thu May 11 02:59:08 2006  Tim Janik  <timj@gtk.org>

	        * tools/bsefextract.cc: fixed option parser so using '=' for args with
	        options isn't mandatory. fixed initialisation so bse components are
	        actually initialised when used.
	        something is still borked with the option parser though, in that the
	        order in which the input file and feature arg are passed does matter.

	svn path=/trunk/; revision=3692

2006-05-10  Tim Janik 	# e3006d8703874cf27dce42c45fa0f29ba556e8c1

	changed fft scope mass request priority to a very low idle priority since

	Wed May 10 19:54:52 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.c (bst_source_queue_probe_request): changed
	        fft scope mass request priority to a very low idle priority since we essentially
	        don't want it to cause any other thing to come to a halt.

	svn path=/trunk/; revision=3691

2006-05-10  Tim Janik 	# 87963a3fa192e10291e4a753aa24321e686402ef

	document that probe jobs may be freely reordered.

	Wed May 10 19:13:28 2006  Tim Janik  <timj@gtk.org>

	        * bseengine.c: document that probe jobs may be freely reordered.

	        * bseenginemaster.c: simply prepend probe jobs to a node's probe
	        job list, compared to appending, this has O(1) instead of O(n^2)
	        complexity which makes a huge different for some scenarios that
	        trigger long probe job queues.
	        also, collect probe jobs unconditionally after probes have been
	        taken, since probing is not parallelized anymore.

	        * bseglobals.[hc]: introduced new (idle handler) priority
	        BSE_PRIORITY_NEXT. this essentially takes over the prio of the
	        previous "now" stage which now got bumped up to the topmost
	        priority. change bse_idle_next() and bse_idle_now() functions
	        and their callers accordingly.

	        * bseprobe.cc: shortened queue length to 3, so usually 3 client side
	        probe requests will be handled including notification in a row.
	        after 3 requests, the client should have managed to request new
	        probes if it can process them this fast.
	        fixed up low level job queueing to occour asyncronously with highest
	        priority, so it essentially happens immediately but still allowes
	        for aggregation of multiple probe requests. also fixed up queue length
	        handling which was previously buggy in requesting only partial queue
	        lengths which resulted in very short probe job queues on the engine
	        modules and lots of unerruns during probe evaluation. added assertions.

	svn path=/trunk/; revision=3690

2006-05-10  Tim Janik 	# c3c12407f9747a15728b7cee36ab8622b159bea6

	minor protability fix for sched_yield().

	Wed May 10 00:07:16 2006  Tim Janik  <timj@gtk.org>

	        * birnetthread.c: minor protability fix for sched_yield().

	        * birnetthreadxx.cc: use birnet_thread_yield().

	svn path=/trunk/; revision=3689

2006-05-10  Tim Janik 	# eb4a3d6d7d1d653bd9dca9173be53f77a0dfa92b

	fixed up BSE_REGISTER_OBJECT() args.

	Wed May 10 19:11:33 2006  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c:
	        * bsemididevice-alsa.c: fixed up BSE_REGISTER_OBJECT() args.

	svn path=/trunk/; revision=3688

2006-05-10  Stefan Westerfeld 	# 395a8a46b3d124d86db887722c6647a742a84526

	Add benchmarks for fill and copy.

	Wed May 10 15:34:12 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Add benchmarks for fill and copy.

	svn path=/trunk/; revision=3687

2006-05-10  Stefan Westerfeld 	# 5bef0663502f5f9910b8af96e74ec79d3e977c13

	Make testing different block sizes easier by adding a const int for the

	Tue May  9 16:54:43 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Make testing different block sizes easier by
		adding a const int for the block size.

	svn path=/trunk/; revision=3686

2006-05-10  Stefan Westerfeld 	# cba28d1cbef1eb8087986338ced8cc4c9dfe56c8

	Minor optimizations, introduced a few LIKELY() calls to indicate what

	Wed May 10 15:12:26 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseblockutils.cc: Minor optimizations, introduced a few LIKELY()
		calls to indicate what usually should be the case, and improved some
		comments.

	svn path=/trunk/; revision=3685

2006-05-09  Stefan Westerfeld 	# 37d03ef532bc5858e32210b39e78a302f536fc21

	Use SSE functions to calculate the minimum/maximum and the vector sum

	Wed May 10 01:47:22 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseblockutils.cc (range, range_and_square_sum): Use SSE functions to
		calculate the minimum/maximum and the vector sum after the main loop.
		I benchmarked it on AMD64 and Pentium-M, and its faster on both.

	svn path=/trunk/; revision=3684

2006-05-09  Stefan Westerfeld 	# 3888e4e5b03e6aa5bb7afd472ecd90b29547a158

	Minor formatting fix.

	Wed May 10 00:44:58 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.hh: Minor formatting fix.

	svn path=/trunk/; revision=3683

2006-05-09  Tim Janik 	# 8edd0b5dda75ec7e83c0578224a9084e8c2f65e1

	use bseblockutils.hh functions to increase performance.

	Wed May 10 00:19:16 2006  Tim Janik  <timj@gtk.org>

	        * bseprobe.cc:
	        * bseengineutils.c:
	        * bseladspamodule.c:
	        * bsecontextmerger.c: use bseblockutils.hh functions to increase performance.

	svn path=/trunk/; revision=3682

2006-05-09  Tim Janik 	# 82949f7995a2cb9073c8794cd6d8ac62eacee514

	define _mm_extract_ss() for convenience. square_sum(): use SSE functions

	Tue May  9 22:57:07 2006  Tim Janik  <timj@gtk.org>

	        * bseblockutils.cc: define _mm_extract_ss() for convenience.
	        square_sum(): use SSE functions to calculate the vector sum
	        after the main loop.

	svn path=/trunk/; revision=3681

2006-05-09  Tim Janik 	# 65bef82ae4da6bb7621106b6690b271493448292

	give up the current time slice before calibrating, this can stabelize the

	Tue May  9 22:55:08 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h (TEST_CALIBRATION): give up the current time slice
	        before calibrating, this can stabelize the loop on some OSes.

	        * birnetthread.[hc]: implemented birnet_thread_yield().

	svn path=/trunk/; revision=3680

2006-05-09  Stefan Westerfeld 	# 8a2e266e2cc7991ff3f7b23335b761c6db93ad3f

	Removed random generator seed initialization for rand(), since it is now

	Tue May  9 22:53:51 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bsemain.c (bse_init_core): Removed random generator seed
		initialization for rand(), since it is now done by birnet_init.

	svn path=/trunk/; revision=3679

2006-05-09  Stefan Westerfeld 	# edc3fe37be91c297a5d8eac1659a38e678e5d6e8

	Initialize rand()'s random generator seed via gettimeofday.

	Tue May  9 22:50:23 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnetutilsxx.cc (birnet_init): Initialize rand()'s random generator
		seed via gettimeofday.

	svn path=/trunk/; revision=3678

2006-05-09  Stefan Westerfeld 	# f03181b2eddd1f40e54268403313002f503d0124

	Implement new sub, mul, range, square_sum, range_and_square_sum functions

	Tue May  9 16:54:22 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* bseblockutils.cc: Implement new sub, mul, range, square_sum,
		range_and_square_sum functions using SSE.

	svn path=/trunk/; revision=3677

2006-05-09  Stefan Westerfeld 	# eb26b1beacf4093eea6bb26e5d89185198718fe1

	Added new block functions for subtracting and multiplying blocks, as well

	Tue May  9 16:54:43 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.*: Added new block functions for subtracting and
		multiplying blocks, as well as calculating square sum (useful for
		determining the block energy) and minimum/maximum values.

		* tests/blocktests.cc: Test newly added functions.

	svn path=/trunk/; revision=3676

2006-05-08  Tim Janik 	# 88feae912559d0fe867bfd9b8caf6d76cf101e56

	disabled listing of deprecated plugins.

	Mon May  8 03:28:55 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: disabled listing of deprecated plugins.

	        * docs/plugin-devel.doxi: documented "deprecated" plugin option.

	svn path=/trunk/; revision=3675

2006-05-08  Tim Janik 	# 1fe8c06a7a9efa35a17e83536c8f04b18146d6c9

	deprecated this plugin (use BseSummation instead).

	Mon May  8 03:27:48 2006  Tim Janik  <timj@gtk.org>

	        * bseadder.c: deprecated this plugin (use BseSummation instead).

	        * *.c: adapted to new BSE_REGISTER_OBJECT*() macro args.

	svn path=/trunk/; revision=3674

2006-05-08  Tim Janik 	# 884431365bc892aa109cf1564c466888f6d3b34e

	reduce the number of supported output channels to 4.

	Mon May  8 03:25:51 2006  Tim Janik  <timj@gtk.org>

	        * bseconstant.h: reduce the number of supported output channels to 4.

	        * bseplugin.h: allow type option specification for BSE_REGISTER_OBJECT*.

	svn path=/trunk/; revision=3673

2006-05-08  Tim Janik 	# adf63c8190eeacd70aaf87edbd687b096dbd0406

	removed BseSummation which now resides in plugins/.

	Mon May  8 02:21:59 2006  Tim Janik  <timj@gtk.org>

	        * icons/Makefile.am:
	        * icons/summation.png, icons/summation.xcf:
	        * Makefile.am:
	        * bsesummation.idl, bsesummation.cc: removed BseSummation which now
	        resides in plugins/.

	        * bsesong.c: abort with g_error() if BseSummation can't be loaded.

	svn path=/trunk/; revision=3672

2006-05-08  Tim Janik 	# 1d1ff8d691af2c0a03d0a44c7b6641f9a1324704

	build and install BseSummation.

	Mon May  8 02:26:40 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am:
	        * Makefile.plugins:
	        * icons/Makefile.icons: build and install BseSummation.

	svn path=/trunk/; revision=3671

2006-05-07  Tim Janik 	# 169805fc70b41826594a9186d0328a0c86aea422

	CVS copied here from bse/.

	Mon May  8 01:23:45 2006  Tim Janik  <timj@gtk.org>

	        * bsesummation.cc:
	        * bsesummation.idl: CVS copied here from bse/.

	        * icons/summation.png:
	        * icons/summation.xcf: CVS copied here from bse/icons/.

	svn path=/trunk/; revision=3670

2006-05-07  Tim Janik 	# 2e3a084b2697819406fc3b210d8fd1cf4156f89f

	removed BseAmplifier which now resides in plugins/.

	Mon May  8 00:19:00 2006  Tim Janik  <timj@gtk.org>

	        * icons/Makefile.am:
	        * icons/ampctrl.png, icons/ampctrl.xcf:
	        * Makefile.am:
	        * bse.idl:
	        * bseamplifier.idl, bseamplifier.cc: removed BseAmplifier which now
	        resides in plugins/.

	        * tests/testcxx.cc: create a BseBusModule as test object since
	        BseAmplifier is not part of the BSE core anymore.

	svn path=/trunk/; revision=3669

2006-05-07  Tim Janik 	# 13a6e6fbd88c7840de4e567020733d8c6238abe8

	added BseAmplifier to plugins/.

	Mon May  8 00:25:25 2006  Tim Janik  <timj@gtk.org>

	        * plugins/bseamplifier.cc:
	        * plugins/Makefile.plugins:
	        * plugins/Makefile.am: added BseAmplifier to plugins/.

	svn path=/trunk/; revision=3668

2006-05-07  Tim Janik 	# 776de1b7c8597b3b9b111c127755a0e0dbdddfa6

	CVS copied here from bse/icons/.

	Sun May  7 23:53:16 2006  Tim Janik  <timj@gtk.org>

	        * icons/ampctrl.png:
	        * icons/ampctrl.xcf: CVS copied here from bse/icons/.

	svn path=/trunk/; revision=3667

2006-05-07  Tim Janik 	# 3312a51e688ccf76c91268f3c0584bcbc0298d2d

	CVS copied here from bse/.

	Sun May  7 23:48:35 2006  Tim Janik  <timj@gtk.org>

	        * bseamplifier.idl:
	        * bseamplifier.cc: CVS copied here from bse/.

	svn path=/trunk/; revision=3666

2006-05-07  Tim Janik 	# 13c13dd88a35e5347968f4d9a50233c6b68e4969

	added bench test for the float-cancellation macros used by BSE.

	Sun May  7 23:39:43 2006  Tim Janik  <timj@gtk.org>

	        * tests/subnormals.cc: added bench test for the float-cancellation macros
	        used by BSE.

	        * tests/Makefile.am: compile subnormals.cc with -ffast-match because this
	        affects the subnormal cancellation benchmarks and because this option is
	        used when compiling plugins.

	svn path=/trunk/; revision=3665

2006-05-07  Tim Janik 	# 275db0cf4351f61690b8be45b31a2645458ae160

	update

	svn path=/trunk/; revision=3664

2006-05-07  Tim Janik 	# a2cf0bf7aa783dbe2a68981caed016c25f5c88e5

	fixup

	svn path=/trunk/; revision=3663

2006-05-07  Tim Janik 	# f2ca1e4df5a47dfe958db9f50eafd2539f8e3e8b

	answer platform ports FAQ.

	Sun May  7 19:47:19 2006  Tim Janik  <timj@gtk.org>

	        * docs/faq.doxi: answer platform ports FAQ.

	svn path=/trunk/; revision=3662

2006-05-07  Tim Janik 	# 81f4bcd48404d269513b5861190d64ef7932b166

	dialog button fixups.

	Sun May  7 19:25:26 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpreferences.c: dialog button fixups.

	        * beast-gtk/bstutils.[hc]: added DISMISS as stock button/icon.

	        * beast-gtk/gxk/gxkutils.c: docu fixup.

	svn path=/trunk/; revision=3661

2006-05-07  Tim Janik 	# 383cdc3284970cdbac836b7dac2c89c7eb888e4c

	updates

	svn path=/trunk/; revision=3660

2006-05-07  Tim Janik 	# 6526448de1ae03bc5b8e648e41055e4747432bad

	allow creation of new projects from new filenames specified on the command

	Sun May  7 19:13:14 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): allow creation of new projects from
	        new filenames specified on the command line.

	svn path=/trunk/; revision=3659

2006-05-07  Tim Janik 	# a17da3c6c8a7fadecf343623373116b6a6ff0ed6

	removed "enable_scopes" and "enable_meters" config options and added

	Sun May  7 03:31:41 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: removed "enable_scopes" and "enable_meters"
	        config options and added "slow_scopes" instead.

	        * beast-gtk/bstscrollgraph.c: fixed probe result search so the correct
	        fft block can be found depending on the requested size.

	        * beast-gtk/bstsnifferscope.[hc]: renamed and changed signature of
	        bst_source_queue_probe_request(). the desired update frequency has to
	        be explicitely requested by the caller now. adapted callers.

	svn path=/trunk/; revision=3658

2006-05-07  Tim Janik 	# a9e130c38782191d2ad3ab48a9b47e0d7e36a5ee

	allmost complete rewrite to fix lots of bugs and experimental code

	Sun May  7 03:37:18 2006  Tim Janik  <timj@gtk.org>

	        * bseprobe.hh, bseprobe.cc: allmost complete rewrite to fix lots of
	        bugs and experimental code portions. several probe queues exist per
	        BseSource now, one for each output channel / block-size combination.
	        underruns in probe calculation are now detected and are zeroed out
	        where neccessary (e.g. in ffts). optimized quite some block copies,
	        fills and loops. for min/max and energie calculation loops, SIMD
	        variants are still needed. optimized probing logic for coalescing of
	        signal emissions. added "idle"-probing, i.e. continuous probe result
	        notification is now supported for unprepared sources without modules.
	        syncronized simulataneous probe requests on multiple sources.

	        * bseenginemaster.[hc]:
	        * bseenginenode.[hc]:
	        * bseengine.[hc]: reworked probing so probe jobs now simply replace
	        the BseOStream array of a node when probing. creation of probe jobs
	        and the probe callback was adapted accordingly. the user may take
	        over memory management for the resulting BseOStream array, release
	        then happens via the newly added bse_engine_free_ostreams(). fixed
	        lots of buglets on the way, made use of bseblockutils.hh.

	        * bseengine.[hc]: export bse_engine_const_zeros() to access a block
	        of 0 floats at least as big as any engine block.

	        * bsecxxmodule.hh:
	        * bsecxxmodule.cc: got rid of istreams, jstreams and ostreams
	        fields which just duplicated BseModule pointers for no good. since
	        bseengine.h is deliberately not included by bsecxxmodule.hh, use
	        the BSE_MODULE_GET_?STREAMSP() macros supplied by bsedefs.h.

	        * bsedefs.h: provide BSE_MODULE_GET_?STREAMSP() similar to
	        BSE_MODULE_GET_USER_DATA(), so some BseModule fields can be accessed
	        without inclusion of bseengine.h.

	svn path=/trunk/; revision=3657

2006-05-07  Tim Janik 	# 653f3179f94cb129028ce84eb0cfb602f7723a66

	fixed reference counting and related assertions for records, fblocks,

	Fri May  5 19:58:06 2006  Tim Janik  <timj@gtk.org>

	        * sficxx.hh: fixed reference counting and related assertions for
	        records, fblocks, bblocks and objects.

	svn path=/trunk/; revision=3656

2006-05-03  Tim Janik 	# 6e5ef4198e5820909c6ed6d0417566edce3fe18b

	minor wording fix

	svn path=/trunk/; revision=3655

2006-05-03  Tim Janik 	# 80c9d530a5d66425769469aa0244ed124f98a39b

	added a link to http://beast.gtk.org/LICENSE-AS-IS to clarify the

	Wed May  3 23:19:32 2006  Tim Janik  <timj@gtk.org>

	        * library/effects/atan-canyon.bse:
	        * library/instruments/bqs-organ.bse:
	        * library/instruments/bqs-organ.bse:
	        * library/instruments/bqs-syndrum.bse:
	        * library/instruments/bqs-merp-pad.bse:
	        * library/instruments/bqs-queek-synth.bse:
	        * library/instruments/bqs-moog-saw-bass.bse:
	        * library/instruments/bqs-fretless-bass.bse:
	        added a link to http://beast.gtk.org/LICENSE-AS-IS to clarify
	        the licensing information.

	        * web/htaccess.in: redirect http://beast.gtk.org/LICENSE-AS-IS

	svn path=/trunk/; revision=3654

2006-05-02  Tim Janik 	# 836b282f7eb7b2fedbb585003e07a29b6ba807cf

	GMANE link updates

	svn path=/trunk/; revision=3653

2006-05-02  Tim Janik 	# d4decf94cf93c46643f0ca5268865ceec6c622f6

	provide bugzilla links.

	Tue May  2 19:23:23 2006  Tim Janik  <timj@gtk.org>

	        * web/news.doxi:
	        * web/contact.doxi: provide bugzilla links.

	        * web/htaccess.in: support /bugs redirect.

	svn path=/trunk/; revision=3652

2006-05-01  Stefan Westerfeld 	# 1db063d2921bdbdef3bed6ad2cdbcbdfdbe353d0

	Ensure that TEST_CALIBRATION returns at least 1. Before this change, a

	Mon Apr 24 21:38:55 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnettests.h (TEST_CALIBRATION): Ensure that TEST_CALIBRATION
		returns at least 1. Before this change, a return value of 0 would be
		possible for very slow test code.

	svn path=/trunk/; revision=3651

2006-04-29  Tim Janik 	# a63090aaea17362f5d3fabee3f46ecae5b8589de

	reset CFLAGS & LDFLAGS around AC_CHECK_LIB() to work around link errors

	Sat Apr 29 16:55:18 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: reset CFLAGS & LDFLAGS around AC_CHECK_LIB() to work
	        around link errors due to -lbse and missing dummy.cc (for older gcc
	        versions).

	svn path=/trunk/; revision=3650

2006-04-24  Tim Janik 	# 5161d39b0aa602265e31e23c1d1cb7350edc9456

	shut up

	svn path=/trunk/; revision=3649

2006-04-24  Tim Janik 	# b375bb071468c5e3df3b189480b528df0749be78

	shut up

	svn path=/trunk/; revision=3648

2006-04-24  Tim Janik 	# f6840950217f260e6531be7ab94a2a79d31f4bc4

	shutup

	svn path=/trunk/; revision=3647

2006-04-24  Tim Janik 	# 40045e773700343558dc77b8aed4e347b4165012

	moved news entry macros here, added anchors.

	Mon Apr 24 20:49:04 2006  Tim Janik  <timj@gtk.org>

	        * web/webmenu.doxi: moved news entry macros here, added anchors.

	        * docs/beastdefs.doxi: removed news entry macros.

	        * web/Makefile.am: fixed file paths in .md5sum files.

	svn path=/trunk/; revision=3646

2006-04-24  Tim Janik 	# 57dd6ae92efcfe696f18ffb485ee30cad8a901e1

	rotate, announce LAD conference 2006 visit.

	Mon Apr 24 20:11:45 2006  Tim Janik  <timj@gtk.org>

	        * web/oldnews.doxi:
	        * web/news.doxi: rotate, announce LAD conference 2006 visit.

	        * web/Makefile.am (ACCOUNT): fix for timj to update the website from
	        multiple accounts.

	svn path=/trunk/; revision=3645

2006-04-24  Tim Janik 	# 3b3c2095d3a0140194f0bd2d8408eea27387fae6

	use fputs() to print messages when starting up the thread system.

	Mon Apr 24 19:26:04 2006  Tim Janik  <timj@gtk.org>

	        * birnetthread.c (get_pth_thread_table): use fputs() to print messages
	        when starting up the thread system. g_message() and friends are not
	        yet usable.

	svn path=/trunk/; revision=3644

2006-04-22  Tim Janik 	# 9e010892c1fff2a05a6a85f109577d98f2c20a58

	dependency fixups

	svn path=/trunk/; revision=3643

2006-04-22  Tim Janik 	# 1de95cc276990a9a83a02946303fafcde206bbe6

	added type blurb.

	Sat Apr 22 18:31:54 2006  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c:
	        * bsemididevice-alsa.c: added type blurb.

	svn path=/trunk/; revision=3642

2006-04-22  Tim Janik 	# 00b622284729398a4626405291c9d0b5f06d9331

	shut up CVS

	svn path=/trunk/; revision=3641

2006-04-22  Tim Janik 	# 92657ad9305fe73cc9132b10e88d2a88f8df1aef

	function name fixups. print out timing information about benchmark tests

	Sat Apr 22 18:06:39 2006  Tim Janik  <timj@gtk.org>

	        * tests/blocktests.cc: function name fixups. print out timing
	        information about benchmark tests and calibration. assigned more
	        benchmarking time to increase accuracy.

	svn path=/trunk/; revision=3640

2006-04-22  Tim Janik 	# a696b78ed28cfbb8ee3137acd7182baea893622b

	comment and whitespace fixups. consolidated code bloat. tweaked timing

	Sat Apr 22 17:54:12 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h (TEST_CALIBRATION): comment and whitespace fixups.
	        consolidated code bloat. tweaked timing bounds to speed up calibration
	        runs. use g_printerr() for printouts.

	svn path=/trunk/; revision=3639

2006-04-22  Tim Janik 	# 9f198228975ec4539318f3bff0204bf65f0dae7c

	comment and whitespace fixups. consolidated code bloat. tweaked timing

	Sat Apr 22 17:54:12 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h (TEST_CALIBRATION): comment and whitespace fixups.
	        consolidated code bloat. tweaked timing bounds to speed up calibration
	        runs. use g_printerr() for printouts.

	svn path=/trunk/; revision=3638

2006-04-22  Tim Janik 	# 08606db5062566facb293377cb144d4b7f715cf2

	shut up CVS

	svn path=/trunk/; revision=3637

2006-04-22  Tim Janik 	# ca7adfc80aac48e593dcf3aef973cb5bb1784788

	shut up CVS

	svn path=/trunk/; revision=3636

2006-04-22  Tim Janik 	# e00a292a328fa1ccb3e419d1e5d86e8b0a5b9b50

	"clean" rule fixes

	svn path=/trunk/; revision=3635

2006-04-22  Tim Janik 	# 68be8a1702c8998b992a404a758ffcae7a987923

	avoid configuring USE_HTAGS which only doxygen 1.4.4 has.

	Sat Apr 22 17:09:50 2006  Tim Janik  <timj@gtk.org>

	        * qdoxygen.py: avoid configuring USE_HTAGS which only doxygen 1.4.4 has.

	        * Makefile.am: fixed "clean" rule, has to be "clean-local".

	svn path=/trunk/; revision=3634

2006-04-22  Tim Janik 	# 0c594d0a9ab3a6a52ceb519af7e94288c3cb3619

	shut up cvs

	svn path=/trunk/; revision=3633

2006-04-22  Tim Janik 	# 74aa8362093e1f46b0e150fbe4e9fd412e8178a5

	shut up CVS

	svn path=/trunk/; revision=3632

2006-04-22  Stefan Westerfeld 	# 207de0fefd930a7000b4685cc54068bada376ee4

	Introduce benchmark time calibration from birnettests.h, so that the

	Sat Apr 22 13:36:24 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/blocktests.cc: Introduce benchmark time calibration from
		birnettests.h, so that the benchmarks take the same amount of time on
		any processor.

	svn path=/trunk/; revision=3631

2006-04-22  Stefan Westerfeld 	# 43469816cc22dce4bbc5d4d7abefaa7c1df176c0

	Added TEST_CALIBRATION macro, which allows benchmark tests to figure out

	Sat Apr 22 13:25:54 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* birnettests.h: Added TEST_CALIBRATION macro, which allows benchmark
		tests to figure out how often to perform a test for a given CPU.
		Besides the actual benchmark code, it allows the programmer to specify
		how much time the bencharking should take, and a suitable number of
		repetitions for the test code is computed.

		* birnetutilsxx.cc: Use g_path_get_basename() to call g_set_progname()
		with the application name only (without the full path).

	svn path=/trunk/; revision=3630

2006-04-21  Tim Janik 	# 7e2e58b318d1fbf071df1b94846ba0da2d461fff

	updates

	svn path=/trunk/; revision=3629

2006-04-20  Tim Janik 	# 99eae38fac74eca38dbc785e0788a266f5158d8e

	updates

	svn path=/trunk/; revision=3628

2006-04-20  Tim Janik 	# 70d8ed6ada177eba1e36817e66d87a9c6a555425

	added extra guards to ensure that assortment free() functions do not cause

	Thu Apr 20 20:50:35 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkassortment.c: added extra guards to ensure that
	        assortment free() functions do not cause self->selected to point to
	        invalid/freed entries.

	svn path=/trunk/; revision=3627

2006-04-20  Tim Janik 	# 2704c1bd53858c0692a5042b92d0c215c8bd001b

	updated translation from Michele Petrecca <michelinux@alice.it>.

	Thu Apr 20 20:22:19 2006  Tim Janik  <timj@gtk.org>

	        * it.po: updated translation from Michele Petrecca <michelinux@alice.it>.

	        * sv.po: restored missing *.scm entries.

	svn path=/trunk/; revision=3626

2006-04-20  Tim Janik 	# 29718c0af6f5806f30727515c880485d8387409a

	fixed inner variable declarations which erroneously shadowed the real

	Thu Apr 20 20:08:52 2006  Tim Janik  <timj@gtk.org>

	        * bseblockutils.cc: fixed inner variable declarations which erroneously
	        shadowed the real variables declared in an outer scope. this fixes mis-
	        calculations of the add() and scale() SSE routines. fix from Stefan
	        Westerfeld.

	svn path=/trunk/; revision=3625

2006-04-20  Stefan Westerfeld 	# b480ccfb660e26978b8bd65ce8c923d5c0657faa

	Tiny name fix: substrate is not the right word for the argument here;

	Thu Apr 20 14:11:54 2006  Stefan Westerfeld <stefan@space.twc.de>

		* bseblockutils.*(substitute): Tiny name fix: substrate is not the
		right word for the argument here; substitute_impl is better.

	svn path=/trunk/; revision=3624

2006-04-20  Tim Janik 	# cb6acf1e01b0aee9e41299d38b76eb447e7c3e2d

	be more verbose on errors

	svn path=/trunk/; revision=3623

2006-04-20  Tim Janik 	# 9a0a8d48c21a0c44e9ed004bcd35d223b84e2438

	fixed alignment check logic in ::scale(), this fixes segfaults on

	Thu Apr 20 01:33:47 2006  Tim Janik  <timj@gtk.org>

	        * bseblockutils.cc: fixed alignment check logic in ::scale(), this
	        fixes segfaults on unaligned blocks.

	svn path=/trunk/; revision=3622

2006-04-19  Stefan Westerfeld 	# 2e47cbe5e0a076fbe506a271a0622e385bf02b3e

	Fix printf format warnings.

	Thu Apr 20 01:23:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Fix printf format warnings.

	svn path=/trunk/; revision=3621

2006-04-19  Tim Janik 	# c42b8033415ad64e52161c41da296b37693927f9

	fixed inverted WITH_PERLRULE check.

	Wed Apr 19 23:49:36 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: fixed inverted WITH_PERLRULE check.

	        * beast-gtk/gxk/Makefile.am: fixed up clean rules so stamp files
	        are properly deleted and dependent files are properly built.

	svn path=/trunk/; revision=3620

2006-04-19  Tim Janik 	# b8f85f0ca5c88b902b0eee29e71e5c7b352c9f96

	new files which provide a couple utility functions for operations on

	Wed Apr 19 23:50:48 2006  Tim Janik  <timj@gtk.org>

	        * bseblockutils.hh, bseblockutils.cc: new files which provide a couple
	        utility functions for operations on blocks of floats and ints.

	        * tests/blocktests.cc: test the new block utils.

	        * bseplugin.c: added hook nodes to allow specialized plugins.

	        * bseexports.h: added BseExportNodeHook.

	        * bsecxxplugin.hh: added BSE_CXX_REGISTER_STATIC_HOOK() and
	        BSE_CXX_REGISTER_HOOK().

	        * Makefile.am: fixed up clean rules so stamp files
	        are properly deleted and dependent files are properly built.

	svn path=/trunk/; revision=3619

2006-04-19  Tim Janik 	# 408de5b2e19544f5df0905c84a0d211d069b1398

	new SSE-only plugin which replaces the FPU block utils provided by BSE

	Wed Apr 19 23:53:28 2006  Tim Janik  <timj@gtk.org>

	        * plugins/bseblockutils.cc: new SSE-only plugin which replaces the FPU
	        block utils provided by BSE with SSE variants.
	        SSE variants are so far supplied for add() and scale() based on SSE
	        code by Stefan Westerfeld.

	svn path=/trunk/; revision=3618

2006-04-19  Daniel Nylander 	# 5125c91339d283d0c0ef3bdb0835175e3211f205

	Updated Swedish translation.

	2006-04-19  Daniel Nylander  <po@danielnylander.se>

	        * sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=3617

2006-04-19  Tim Janik 	# 785966529cf0b7f1fb95a0f246d6d841c034ad2d

	added specialized "distcheck" rule that disables a recursive make dist.

	Wed Apr 19 02:30:34 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: added specialized "distcheck" rule that disables a
	        recursive make dist. the reason for which is explained here:
	        http://blogs.gnome.org/view/timj/2006/04/18/0

	        * docs/beast.1.doxi:
	        * beast-gtk/bstmain.c: implemented --merge.

	        * configure.in: provide AM conditional WITH_PERLRULE.

	        * beast-gtk/icons/Makefile.am:
	        * configure.in: removed STRIP_* cruft.

	svn path=/trunk/; revision=3616

2006-04-19  Tim Janik 	# ebfa8b96f89182e3250ce85e67f67ef42ec9d4bd

	don't add @PERLRULE@ to CLEANFILES, as this can cause its contents to be

	Wed Apr 19 02:41:55 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am:
	        (CLEANFILES): don't add @PERLRULE@ to CLEANFILES, as this can cause
	        its contents to be partially commented out. instead, add
	        $(bse_proc_gen_sources) conditionally to MAINTAINERCLEANFILES
	        or CLEANFILES, depending on the AM conditional WITH_PERLRULE.

	svn path=/trunk/; revision=3615

2006-04-18  Stefan Westerfeld 	# f6e58425bf0ac043b702fb4026749dcf588d1220

	Fix double initialization of the application name (which causes glib to

	Tue Apr 18 21:25:00 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/bstmain.c: Fix double initialization of the application
		name (which causes glib to print a warning, which renders
		--g-fatal-warnings useless for debugging).
		Removed obsolete g_set_prgname (birnet_init is responsible for that).

	svn path=/trunk/; revision=3614

2006-04-16  Tim Janik 	# e7a400db4b05e32ac30b7f1e81d0d70acae48589

	added new pad string.

	Sun Apr 16 20:33:57 2006  Tim Janik  <timj@gtk.org>

	        * library/instruments/bqs-merp-pad.bse: added new pad string.

	svn path=/trunk/; revision=3613

2006-04-16  Tim Janik 	# 3ed70a308de17e91df0b088651bae63fa298c6e8

	comment changes

	svn path=/trunk/; revision=3612

2006-04-16  Tim Janik 	# f0a6a33fb4360359888474742f6b339bec3c265b

	added new bass instrument from Stefan Westerfeld.

	Sun Apr 16 18:35:12 2006  Tim Janik  <timj@gtk.org>

	        * library/instruments/bqs-moog-saw-bass.bse: added new bass instrument
	        from Stefan Westerfeld.

	svn path=/trunk/; revision=3611

2006-04-16  Tim Janik 	# acadeea236f25fe5511e67d512ede945d9b027f6

	CVS renamed "base" to "bass".

	Sun Apr 16 18:31:05 2006  Tim Janik  <timj@gtk.org>

	        * library/instruments/Makefile.am:
	        * library/instruments/bqs-fretless-bass.bse: CVS renamed "base" to "bass".

	svn path=/trunk/; revision=3610

2006-04-16  Tim Janik 	# 64f46b8964572ac49215ca99a96db00df220b067

	fixup distuninstallcheck:-rule which reports not uninstalled files created

	Sun Apr 16 17:43:23 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fixup distuninstallcheck:-rule which reports
	        not uninstalled files created by update-mime-database(1).

	svn path=/trunk/; revision=3609

2006-04-15  Tim Janik 	# 7bec6318a1ca236a7f193463c3276f816500cfbc

	cosmetics

	svn path=/trunk/; revision=3608

2006-04-15  Tim Janik 	# e1d0b1d25b3c14be26e81e19b32ddd681611e74d

	document --bse-force-fpu and print processor detection information.

	Sat Apr 15 03:08:47 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: document --bse-force-fpu and print processor
	        detection information.

	        * configure.in: profide PLUGIN_FLAGS, FPU_FLAGS and SSE_FLAGS. define
	        BSE_WITH_SSE_FLAGS for bse runtime logic.

	        * acbeast.m4: cosmetic change.

	        * web/download.doxi: provide viewcvs link.

	svn path=/trunk/; revision=3607

2006-04-15  Tim Janik 	# f641ef47b6874b9c96262bd1098603fb140714aa

	added proper CPU prefixing.

	Sat Apr 15 03:36:21 2006  Tim Janik  <timj@gtk.org>

	        * birnetcpu.c (birnet_cpu_info_string): added proper CPU prefixing.

	svn path=/trunk/; revision=3606

2006-04-15  Tim Janik 	# f4fe1504f2e2b93ad33dd7087ab288b565a8ef55

	propagate PLUGIN_FLAGS, FPU_FLAGS and SSE_FLAGS from configure.in to the

	Sat Apr 15 03:29:35 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: propagate PLUGIN_FLAGS, FPU_FLAGS and SSE_FLAGS from
	        configure.in to the various plugin types.

	        * plugins/Makefile.plugins: updates.

	svn path=/trunk/; revision=3605

2006-04-15  Tim Janik 	# 15157511148092aa18e5a45438a77059793afac4

	use BirnetCPUInfo to determine whether to load plugins with .SSE

	Sat Apr 15 03:11:18 2006  Tim Janik  <timj@gtk.org>

	        * bse/bseplugin.c: use BirnetCPUInfo to determine whether to load
	        plugins with .SSE extension.

	        * bse/bsemain.[hc]: added BseMainArgs.force_fpu, settable
	        via --bse-force-fpu.

	svn path=/trunk/; revision=3604

2006-04-15  Tim Janik 	# 435a1b1c70360b814a272d0ffbb299ee9713cd42

	do runtime detection of the CPU type and the CPU features. in particular,

	Sat Apr 15 03:18:53 2006  Tim Janik  <timj@gtk.org>

	        * birnetcpu.[hc]: do runtime detection of the CPU type and
	        the CPU features. in particular, detect the available (SIMD)
	        instruction sets at runtime. currently supports i368 and
	        amd64 via CPUID.

	        * birnetcore.h: provide wrapper macros for GCC attributes.

	        * tests/infotest.cc: test the CPU info API.

	svn path=/trunk/; revision=3603

2006-04-14  Tim Janik 	# 728e8ae4851427e7cb159f5bb54e868842c0ee98

	moved everything extern "C" and everything static out of the anon

	Fri Apr 14 02:18:51 2006  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc: moved everything extern "C" and everything static
	        out of the anon namespace. leave just C++ class definitions inside
	        namespace anon. this fixes C API linking errors with gcc-4.2.

	svn path=/trunk/; revision=3602

2006-04-14  Tim Janik 	# f77ff8e3115f822f39503c422cf9d92da38c30a3

	add-missing files from automake

	svn path=/trunk/; revision=3601

2006-04-13  Tim Janik 	# a0e6e785faf492a384b1d741c4842f22a3ac2c06

	slight profiler view label fixup.

	Thu Apr 13 23:59:22 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprofiler.c: slight profiler view label fixup.

	        * configure.in: always check for srcdir == builddir. disable PERLRULE
	        srcdir != builddir.

	        * beast-gtk/gxk/Makefile.am: added includes missing for srcdir != builddir.
	        fixed code generation rules.

	svn path=/trunk/; revision=3600

2006-04-13  Tim Janik 	# 1b1cf261725c4052b3efe07cca263c7f7f9ab1ed

	fixed test macros.

	Thu Apr 13 23:59:08 2006  Tim Janik  <timj@gtk.org>

	        * testsfi.c:
	        * testsfidl.cc:
	        * testcxx.cc: fixed test macros.

	svn path=/trunk/; revision=3599

2006-04-13  Tim Janik 	# b3f007f6566d9339465276021b29a502ed37ae54

	install all plugins into the same dir. generate .FPU. and .SSE. plugins.

	Thu Apr 13 23:57:39 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: install all plugins into the same dir. generate .FPU.
	        and .SSE. plugins.

	        * Makefile.plugins: updates.

	svn path=/trunk/; revision=3598

2006-04-13  Tim Janik 	# 77f510c4ba6e654fe8fe251043b4b2a667f4d8f5

	fixed regeneration of files in srcdir.

	Thu Apr 13 23:56:01 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fixed regeneration of files in srcdir.

	        * bseplugin.c: filter out plugins that don't end in .FPU.*.

	svn path=/trunk/; revision=3597

2006-04-12  Tim Janik 	# f9a656b08cfd3255d6e54bf4a0e0bb0281ce72cb

	define supported languages.

	Tue Apr 11 23:39:51 2006  Tim Janik  <timj@gtk.org>

	        * LINGUAS: define supported languages.

	        * intltool-scm.diff: ensure LINGUAS is contained in tarballs by make dist.

	svn path=/trunk/; revision=3596

2006-04-12  Tim Janik 	# 8505bc900271fb0cbdfe177d70df1e363fe5f829

	provide SSE_FLAGS and WITH_SSE_FLAGS automake conditional.

	Wed Apr 12 02:29:11 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: provide SSE_FLAGS and WITH_SSE_FLAGS automake conditional.

	        * acbeast.m4: added MC_PROG_CC_SPECIAL_FLAGS() to help constructing SSE_FLAGS.

	svn path=/trunk/; revision=3595

2006-04-12  Tim Janik 	# 33715d4ac8e32f60a18e2f733e65170b6910b69d

	added a rule "refresh-Makefile.plugins:" to rebuild the Makefile.plugins

	Wed Apr 12 02:35:47 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: added a rule "refresh-Makefile.plugins:" to rebuild the
	        Makefile.plugins manually, without listplugins.sh. removed cruft about
	        generted enum headers for C plugins. build plugins twice now, once in
	        an ordinary "+PLAIN" version, and once with SSE_FLAGS as "+SSE". the
	        sse variant is built conditionally. install plugins in "plugins+PLAIN/"
	        and "plugins+SSE/" directories. lots of cleanups in the generation rules.

	        * listplugins.sh: removed, generation logic was moved into Makefile.am.

	        * Makefile.plugins: manual update.

	svn path=/trunk/; revision=3594

2006-04-11  Tim Janik 	# 9fd4fd751c6ca16cad77403e39f52a928a9bd7dc

	add --with-doxer configure arg which holds TRUE for CVS builds.

	Tue Apr 11 23:33:42 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh: add --with-doxer configure arg which holds TRUE for CVS builds.

	        * configure.in: added --with-doxer arg which enables doxer dependent build rules.
	        retrive ALL_LINGUAS from po/LINGUAS. slight fixups to maintainer-mode checks.
	        got rid of unused *DVLBUILD* cruft. check for perl 5.002 and define PERLRULE.

	        * docs/Makefile.am: conditionalize doxer rules.

	        * po/LINGUAS: define supported languages.

	svn path=/trunk/; revision=3593

2006-04-11  Tim Janik 	# 8938dc2f869bccaff22eb62fc0f7f849d0723561

	define supported languages.

	Tue Apr 11 23:39:51 2006  Tim Janik  <timj@gtk.org>

	        * LINGUAS: define supported languages.

	        * intltool-scm.diff: ensure LINGUAS is contained in tarballs by make dist.

	svn path=/trunk/; revision=3592

2006-04-11  Tim Janik 	# 1845e3ba584799da0645bfbcf9f02257ff2a9a8e

	make dist fixes, conditionalize perl rules.

	Tue Apr 11 23:38:11 2006  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am:
	        * Makefile.am: make dist fixes, conditionalize perl rules.

	svn path=/trunk/; revision=3591

2006-04-11  Tim Janik 	# 84705d8408399372122a1a9da44832233dbc0514

	make dist fixes.

	Tue Apr 11 23:37:32 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: make dist fixes.

	svn path=/trunk/; revision=3590

2006-04-10  Stefan Westerfeld 	# 18e92281801fc26d2d4e96c19b1430825c63d047

	updates

	svn path=/trunk/; revision=3589

2006-04-09  Tim Janik 	# a9f8578d77a28d46113c3b1cd2f252dcbeb0d8e1

	new manual page about the BSE file format.

	Sun Apr  9 17:55:51 2006  Tim Janik  <timj@gtk.org>

	        * docs/bse.5.doxi: new manual page about the BSE file format.

	        * docs/Makefile.am: build and install manual pages. fixed up some rules.

	        * beast-gtk/bstapp.c: removed html page extensions from online resources.

	        * docs/beast-index.doxi: fixed online links and added .bse manual page.

	        * docs/sfidl.1.doxi:
	        * docs/beast.1.doxi: link fixups.

	        * docs/bsesh.1.doxi: link and synopsis fixups.

	        * web/robots.txt: disallow reference docs for W3C-checklink.

	svn path=/trunk/; revision=3588

2006-04-09  Tim Janik 	# 2346adc1bf10a63eb1a4e326b8c0e36af0a8be12

	allow content type negotiation via MultiViews. removed content type

	Sun Apr  9 15:54:25 2006  Tim Janik  <timj@gtk.org>

	        * web/htaccess.in: allow content type negotiation via MultiViews.
	        removed content type extensions from redirects. added redirects
	        for old screenshot and logogallery links.

	        * web/*.doxi: removed content type extensions from internal links.

	        * web/Makefile.am: adapted to screenshots and logogallery files
	        residing in web/screenshotdir/ and web/logogallerydir/.

	svn path=/trunk/; revision=3587

2006-04-09  Tim Janik 	# c94029a2c65b81c473fba1d3ef3bf7943b60e7af

	CVS moved from web/logogallery/.

	Sun Apr  9 14:30:52 2006  Tim Janik  <timj@gtk.org>

	        * web/logogallerydir/: CVS moved from web/logogallery/.

	        * web/screenshotdir/: CVS moved from web/screenshots/.

	svn path=/trunk/; revision=3586

2006-04-08  Tim Janik 	# 8093efd516f81034f0129981c1380f2a8abd5e6d

	added fretless base instrument from Stefan Westerfeld.

	Sat Apr  8 14:29:07 2006  Tim Janik  <timj@gtk.org>

	        * library/instruments/bqs-fretless-base.bse: added fretless base
	        instrument from Stefan Westerfeld.

	        * library/instruments/bqs-organ.bse: added Organ instrument.

	        * library/instruments/bqs-queek-synth.bse: added simplistic synth
	        instrument.

	        * library/instruments/bqs-syndrum.bse: added DavSynDrum instrument.

	        * library/instruments/test-string.bse:
	        * library/instruments/synth-lead.bse: removed old test synths,
	        superceeded by bqs-queek-synth.bse.

	svn path=/trunk/; revision=3585

2006-04-08  Stefan Westerfeld 	# d1a0b25a99004a0737bda364194df231aef92428

	updated

	svn path=/trunk/; revision=3584

2006-04-08  Tim Janik 	# e77ebd067e795ae38bcaefe0c3c50cf30846f85d

	added tooltips. when displaying huge file libraries, display WAVE_NAME in

	Sat Apr  8 02:03:52 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c: added tooltips. when displaying
	        huge file libraries, display WAVE_NAME in the first column, i.e.
	        the file baename or any internal detected filename.

	        * beast-gtk/bsttreestores.c: fallback to the file basename for
	        WAVE_NAME, until file info could be loaded.
	        check non-sample files for ".bse" postfix and try to extract the
	        first "container-child" name from ".bse" files.

	svn path=/trunk/; revision=3583

2006-04-08  Tim Janik 	# 8ae0c28cfd7d21b84f330faa3c300186abc0a059

	use basename instead of full file path for internal wave names.

	Sat Apr  8 02:09:15 2006  Tim Janik  <timj@gtk.org>

	        * bseloader-mad.c:
	        * bseloader-wav.c: use basename instead of full file path for internal
	        wave names.

	svn path=/trunk/; revision=3582

2006-04-08  Tim Janik 	# 74253a618731f3073987b586049fda8a2ee83b6c

	added sfi_time_to_nice_string() to allow more flexible formatting.

	Sat Apr  8 02:10:07 2006  Tim Janik  <timj@gtk.org>

	        * sfitime.[hc]: added sfi_time_to_nice_string() to allow more flexible formatting.

	svn path=/trunk/; revision=3581

2006-04-07  Tim Janik 	# 196013b841c36c6ed160f7f187123c05334ddc2d

	upgraded Gtk+ dependency to 2.6.4.

	Fri Apr  7 18:52:36 2006  Tim Janik  <timj@gtk.org>

	        * README:
	        * configure.in: upgraded Gtk+ dependency to 2.6.4.

	svn path=/trunk/; revision=3580

2006-04-05  Stefan Westerfeld 	# e8eb53b035b058a74ec28b0114815533e6d7c261

	updates

	svn path=/trunk/; revision=3579

2006-04-05  Tim Janik 	# d58c804c0de115064e616bfc8ffd29e1e90ed3db

	removed unused TFAIL() macro. TERROR() is more elaborate anyway and can be

	Wed Apr  5 02:11:07 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h: removed unused TFAIL() macro. TERROR() is more
	        elaborate anyway and can be used instead.

	svn path=/trunk/; revision=3578

2006-04-04  Tim Janik 	# 068c696730cd8242a1640f9f100ed93bf2c43f6b

	build new tools.

	Tue Apr  4 22:30:07 2006  Tim Janik  <timj@gtk.org>

	        * tools/Makefile.am: build new tools.

	        * tools/cutvorbis.c: usage fixup.

	        * web/resources.doxi: link updates.

	svn path=/trunk/; revision=3577

2006-04-04  Tim Janik 	# 86fc54059f60e6187f3e0b4fe16ec877f8f8bd20

	cosmetic fix

	svn path=/trunk/; revision=3576

2006-04-04  Tim Janik 	# f335240428295cdd971e60e6ca090aea443c2a9d

	removed tools.

	Tue Apr  4 21:59:39 2006  Tim Janik  <timj@gtk.org>

	        * tests/cutvorbis.c:
	        * tests/magictest.c:
	        * tests/mathtests.c:
	        * Makefile.am: removed tools.

	        * tests/testfft.c:
	        * tests/subnormals.cc: changed to make use of test macros.

	svn path=/trunk/; revision=3575

2006-04-04  Tim Janik 	# d2a7fe09fc99bc74045e38ebd02710e7a5a42796

	allow printf-style arguments to TSTART(). added TERROR() to forcefully

	Tue Apr  4 21:58:49 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h: allow printf-style arguments to TSTART().
	        added TERROR() to forcefully abort.

	svn path=/trunk/; revision=3574

2006-04-04  Stefan Westerfeld 	# 45e19161c454c336b581fcdade44077ebdf5408d

	updates

	svn path=/trunk/; revision=3573

2006-04-04  Tim Janik 	# ae57af414e9217dd546ba20682ec23ecb8fc36d5

	CVS moved.

	Tue Apr  4 20:42:49 2006  Tim Janik  <timj@gtk.org>

	        * tools/mathtool.c: CVS moved.

	svn path=/trunk/; revision=3572

2006-04-04  Tim Janik 	# 859a34b0af44871e338d994b78bdb5243721fb5e

	CVS copied.

	Tue Apr  4 20:10:39 2006  Tim Janik  <timj@gtk.org>

	        * tools/cutvorbis.c:
	        * tools/magictest.c:
	        * tools/mathtests.c: CVS copied.

	svn path=/trunk/; revision=3571

2006-04-04  Tim Janik 	# 4cb357251b4793cba81f58a53820cb402b65616a

	added missing --add-missing

	svn path=/trunk/; revision=3570

2006-04-04  Tim Janik 	# d94adffd633597e0c844b3cd335e12447bd7e9b3

	build and check perftest testwavechunk.

	Tue Apr  4 02:08:16 2006  Tim Janik  <timj@gtk.org>

	        * slowtests/Makefile.am: build and check perftest testwavechunk.

	        * tests/Makefile.am: removed outdated rules.

	        * tests/bse/Makefile.am: build and test cxxbinding and testplugin.la.

	        * tools/scripts/Makefile.am: added script tools waveloadtest.scm and
	        noteplaytest.scm.

	Tue Apr  4 01:21:32 2006  Tim Janik  <timj@gtk.org>

	        * bse/tests/testwavechunk.c:
	        * tests/cxxbinding.cc:
	        * tests/empty.ogg:
	        * tests/perftest.cc:
	        * tests/testplugin.cc:
	        * tests/testplugin.idl:
	        * tests/bse/loophandle.c:
	        * tests/scripts/noteplaytest.scm:
	        * tests/scripts/waveloadtest.scm: removed from CVS.

	svn path=/trunk/; revision=3569

2006-04-04  Tim Janik 	# afa3495fe4fb13ca5a526249a5f0c3e9a9c1ae1f

	build and check loophandle, got rid of testwavechunk.

	Tue Apr  4 02:06:45 2006  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: build and check loophandle, got rid of testwavechunk.

	Tue Apr  4 01:21:32 2006  Tim Janik  <timj@gtk.org>

	        * bse/tests/testwavechunk.c:
	        * tests/cxxbinding.cc:
	        * tests/empty.ogg:
	        * tests/perftest.cc:
	        * tests/testplugin.cc:
	        * tests/testplugin.idl:
	        * tests/bse/loophandle.c:
	        * tests/scripts/noteplaytest.scm:
	        * tests/scripts/waveloadtest.scm: removed from CVS.

	svn path=/trunk/; revision=3568

2006-04-03  Tim Janik 	# fc046ef0592bbe73658facdee88b00c7c90eb3bf

	CVS copied.

	Tue Apr  4 01:14:42 2006  Tim Janik  <timj@gtk.org>

	        * bse/tests/loophandle.c:
	        * slowtests/perftest.cc:
	        * slowtests/testwavechunk.c:
	        * tests/bse/cxxbinding.cc:
	        * tests/bse/empty.ogg:
	        * tests/bse/testplugin.cc:
	        * tests/bse/testplugin.idl:
	        * tools/scripts/noteplaytest.scm:
	        * tools/scripts/waveloadtest.scm: CVS copied.

	svn path=/trunk/; revision=3567

2006-04-03  Tim Janik 	# 137c0b551339177000df90e143c4a0391529893a

	force upgrade of automake-originating files.

	Tue Apr  4 01:04:27 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh: force upgrade of automake-originating files.

	        * configure.in: only issue a warning if pcm/midi devices couldn't
	        be found instead of erroring out. default to /dev/dsp and /dev/midi
	        if no devices could be detected.

	svn path=/trunk/; revision=3566

2006-04-03  Tim Janik 	# 745ed4c4210f30e8c837307075eba22818ccbbca

	add macros and convenience functions useful for test programs.

	Mon Apr  3 23:00:15 2006  Tim Janik  <timj@gtk.org>

	        * birnettests.h: add macros and convenience functions useful for
	        test programs.

	        * tests/signal.cc:
	        * tests/threads.cc:
	        * tests/ring.cc: use test macros.

	        * tests/Makefile.am:
	        * tests/testutils.h: removed entirely in favour of birnettests.h.

	svn path=/trunk/; revision=3565

2006-04-03  Tim Janik 	# 4b0276505fc45aa7be31dd40abfbe9f933f31f35

	first test for correctness, then for performance.

	Mon Apr  3 21:51:28 2006  Tim Janik  <timj@gtk.org>

	        * tests/subnormals.cc: first test for correctness, then for performance.

	svn path=/trunk/; revision=3564

2006-04-03  Tim Janik 	# ecee1175c533a6667a740db99b360e7e7074577f

	upgrade to automake-1.9.

	Mon Apr  3 21:29:18 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh:
	        * Makefile.am: upgrade to automake-1.9.

	        * configure.in: fixed buglets.

	svn path=/trunk/; revision=3563

2006-04-03  Stefan Westerfeld 	# f9168ccf981dc3768f9c77ab039936bad90dbd10

	Added code which verifies that subnormal elimination functions are

	Mon Apr  3 15:50:14 2006  Stefan Westerfeld <stefan@space.twc.de>

		* tests/subnormals.cc tests/subnormals-aux.cc: Added code which
		verifies that subnormal elimination functions are correct.

	svn path=/trunk/; revision=3562

2006-04-03  Tim Janik 	# 173d3b6af1cae596a0e4aee52fb2a179f9e2af20

	*** empty log message ***

	svn path=/trunk/; revision=3561

2006-04-02  Tim Janik 	# 8498245f0260cf26d5d82d7449b9dd68cc23db05

	don't link against libsfi/libbirnet if linking against libbse.

	Sun Apr  2 18:58:34 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: don't link against libsfi/libbirnet if
	        linking against libbse.

	        * beast-gtk/gxk/dummy.cc:
	        * beast-gtk/gxk/Makefile.am: added C++ dummy, for proper linkage
	        with older gccs.

	svn path=/trunk/; revision=3560

2006-04-02  Tim Janik 	# bfdf9ba5c3f52d1b3f382f2aa56bdb8e17af5b5d

	auto-add GENERATED to MAINTAINERCLEANFILES. added GENERATED_CLEANFILES for

	Sun Apr  2 18:16:56 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: auto-add GENERATED to MAINTAINERCLEANFILES.
	        added GENERATED_CLEANFILES for generated files to be removed upon
	        make clean.

	        * beast-gtk/Makefile.am: fixed dependencies. simplified build rules,
	        integrated with Makefile.decl. removed lots of cruft.

	        * beast-gtk/*.c: various minor fixes.

	svn path=/trunk/; revision=3559

2006-04-02  Tim Janik 	# f4443734beeb5268fd47e4daadc37c026e2371f1

	some more dependency and minor build fixes.

	Sun Apr  2 18:19:42 2006  Tim Janik  <timj@gtk.org>

	        * bse/Makefile.am: some more dependency and minor build fixes.

	svn path=/trunk/; revision=3558

2006-04-02  Tim Janik 	# da2367c1f0ad696cdb84707fc848a70e9cf00b75

	removed workaround variables.

	Sun Apr  2 16:56:57 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: removed workaround variables.

	        * beast-gtk/Makefile.am: automake fix to build versioned beast.

	        * beast-gtk/gxk/Makefile.am: linkage flags fixups.

	        * beast-gtk/gxk/gxkstock.c:
	        * beast-gtk/gxk/gxkradget.c: fixed missing initializations.

	        * shell/Makefile.am: automake fix to build versioned shell.

	svn path=/trunk/; revision=3557

2006-04-02  Tim Janik 	# 41dc03d6bcbff5e985dd43b1ad5b575c99bef0e5

	declare GENERATED to list generated files. declare GENERATED_EXTRA_DIST

	Sun Apr  2 03:44:31 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: declare GENERATED to list generated files.
	        declare GENERATED_EXTRA_DIST for files that automatically end up
	        in GENERATED and EXTRA_DIST.
	        define _BIRNET_SOURCE_EXTENSIONS for the whole source tree by
	        adding it to AM_CXXFLAGS and AM_CFLAGS.

	        * configure.in: moved libmad check into BSE namespace. presence is
	        now indicated by the BSE_HAVE_LIBMAD macro provided by topconfig.h.
	        removed cruft.

	svn path=/trunk/; revision=3556

2006-04-02  Tim Janik 	# 3256d8785d68f070a26bda56a99135b34f4b0eca

	fixed "const" return value types.

	Sun Apr  2 03:48:29 2006  Tim Janik  <timj@gtk.org>

	        * sfidl-corec.cc: fixed "const" return value types.

	        * testsfi.c: renamed special test assertion macro to TASSERT().

	svn path=/trunk/; revision=3555

2006-04-02  Tim Janik 	# 6a08bc4f43ac16d976784b1eb8c6b90e3a587ab1

	merged with gslmakefile.inc. fixed dependencies. simplified build rules.

	Sun Apr  2 03:31:24 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: merged with gslmakefile.inc. fixed dependencies.
	        simplified build rules. integrated with Makefile.decl.

	        * *.hh *.cc: removed useless "mode: c++;" statement.
	        fixed Bse::* functions being implemented in anonymous namespaces.

	        * bsecxxmodule.cc: fixed non-static functions and static assertions.

	        * bsecxxmodule.hh: assert the correct object type in the
	        BSE_EFFECT_INTEGRATE_MODULE() macro via const_cast<>(this) instead
	        of by using bogus namespacing.

	        * bseieee754.h: work around gcc-4.2 not allowing "register" unions.

	        * bseloader-guspatch.cc: fixed compiler warning.

	        * gsldatahandle-mad.c:
	        * bseloader-mad.c: include topconfig.h for libmad presence.

	        * bsesequencer.cc: use offsetof() instead of G_STRUCT_OFFSET() which
	        gcc-4.2 doesn't seem to like.

	        * bsesong.c: fixed prototype scope.

	        * gslmakefile.inc: removed, merged into Makefile.am.

	        * gsldefs.h: include gslconfig.h, don't define BIRNET macros.

	        * gslwavechunk.c: fixed variable initialization.

	svn path=/trunk/; revision=3554

2006-04-02  Tim Janik 	# 921c2bc8075df3316af375ce78ef64206cdd6238

	provide ISLIKELY() as alias for LIKELY().

	Sun Apr  2 03:28:04 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.h: provide ISLIKELY() as alias for LIKELY().

	        * birnetsignaltemplate.hh:
	        * birnetsignal.hh:
	        * tests/signal.cc: fixed assertions.

	        * birnetutilsxx.hh: fixed primitive type ambiguities.

	        * Makefile.am: -D_BIRNET_SOURCE_EXTENSIONS is provided by Makefile.decl.

	        * tests/Makefile.am: DEFS is defined by Makefile.decl.

	svn path=/trunk/; revision=3553

2006-04-01  Tim Janik 	# 34671cf4b9e8fa4828e4df08a94b05064b68560b

	fix macro name.

	Sat Apr  1 16:59:52 2006  Tim Janik  <timj@gtk.org>

	        * freeverb/denormals.h (undenormalise): fix macro name.

	svn path=/trunk/; revision=3552

2006-04-01  Tim Janik 	# 67cbd3231c1845b1d90b670795b47c001f34b33c

	fix macro name.

	Sat Apr  1 16:59:52 2006  Tim Janik  <timj@gtk.org>

	        * freeverb/denormals.h (undenormalise): fix macro name.

	F

	svn path=/trunk/; revision=3551

2006-04-01  Tim Janik 	# 8e1d0a642fe20ee06be1eba790f7a42f04e89514

	choose inlined variant

	svn path=/trunk/; revision=3550

2006-04-01  Tim Janik 	# ef7883071c2649c7d7d6d01ad18cf11e8899d8e0

	extended tests.

	Sat Apr  1 16:34:48 2006  Tim Janik  <timj@gtk.org>

	        * tests/subnormals-aux.cc:
	        * tests/subnormals.cc: extended tests.

	        * bseieee754.h: renamed denormal-cancellation macros to
	        BSE_FLOAT_FLUSH() and BSE_DOUBLE_FLUSH().
	        added arithmetic and ?:-operator variants for denormal cancellation.
	        use the arithmetic variants by default, which seems to be the fastest
	        in most scenrios.

	svn path=/trunk/; revision=3549

2006-03-31  Tim Janik 	# b70a7290b0722a428e87fb0ccd08c5eb6da339f8

	implement undenormalise() as BSE_FLOAT_FLATTEN(). this is faster and

	Fri Mar 31 23:47:52 2006  Tim Janik  <timj@gtk.org>

	        * freeverb/denormals.h: implement undenormalise() as BSE_FLOAT_FLATTEN().
	        this is faster and circumvents a gcc bug/optimization that rendered the
	        roomsize and damping parameters useless.

	svn path=/trunk/; revision=3548

2006-03-31  Tim Janik 	# 48928f1d5f2eedd2d72c79106bb0ece99e23c788

	added bse_float_zap_denormal() and bse_double_zap_denormal() to get rid of

	Fri Mar 31 23:44:41 2006  Tim Janik  <timj@gtk.org>

	        * bseieee754.h: added bse_float_zap_denormal() and
	        bse_double_zap_denormal() to get rid of denormal floating point
	        numbers.
	        added coarse but faster BSE_FLOAT_FLATTEN() and BSE_DOUBLE_FLATTEN()
	        macros to modify denormal float variables.

	svn path=/trunk/; revision=3547

2006-03-31  Tim Janik 	# 902de2ac239c27501f9023dc22fec2d0c9f82f2d

	force to-float conversion in FPU by using buffers

	svn path=/trunk/; revision=3546

2006-03-31  Tim Janik 	# ccbf4269bc9e0f24b4f14d539fe1a24e1a9e991e

	test fixups

	svn path=/trunk/; revision=3545

2006-03-31  Tim Janik 	# 53047ec22ace45017d48bb537b3aa2cf4a8a31b0

	fix BSE_FLOAT_PARTS() and BSE_DOUBLE_PARTS() for C++ which needs

	Fri Mar 31 21:57:36 2006  Tim Janik  <timj@gtk.org>

	        * bseieee754.h: fix BSE_FLOAT_PARTS() and BSE_DOUBLE_PARTS() for C++
	        which needs constructors for union casts.

	        * tests/subnormals-aux.cc:
	        * tests/subnormals.cc: test for subnormal float performance.

	svn path=/trunk/; revision=3544

2006-03-30  Tim Janik 	# 32d9bbc473177fbe81fac5a9371d9ff08ff03e25

	depend on automake-1.9.

	Thu Mar 30 20:49:43 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh: depend on automake-1.9.

	        * acbeast.m4: check for -Wno-pointer-sign support before using it.

	svn path=/trunk/; revision=3543

2006-03-30  Tim Janik 	# 10cb03fb811a3601c9c4ee3d1e4bf513faf04e64

	removed cruft.

	Thu Mar 30 20:46:48 2006  Tim Janik  <timj@gtk.org>

	        * sfidl-clientcxx.cc: removed cruft.

	svn path=/trunk/; revision=3542

2006-03-30  Tim Janik 	# de2d73fee4cbb88cc1417cda18b3b54daf60ba28

	add -Wno-pointer-sign when comiling mit gcc-4.2 to omit bogus warnings

	Thu Mar 30 20:16:08 2006  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: add -Wno-pointer-sign when comiling mit gcc-4.2 to omit
	        bogus warnings about signedness of string pointers in C.

	        * autogen.sh: permit compilatiopn with automake 1.9.

	        * birnet/birnetring.c: fixed bogus "const" in return type.

	        * birnet/birnetthread.c: fixed strict aliasing warning.

	        * **/Makefile.am: fixed automake "+=" warnings.

	svn path=/trunk/; revision=3541

2006-03-30  Tim Janik 	# aec00c6f2f5d1b9cbb2c6805ff43c896f15b1a2d

	added atuomake/libtool double-compilation workaround.

	Thu Mar 30 20:20:52 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: added atuomake/libtool double-compilation workaround.

	        * sfimemory.[hc]: fixed bogus "const" in return type.

	        * sfidl-clientcxx.cc: removed bogus code.

	        * sfidl-corec.cc: namespace prefixing fixup.

	svn path=/trunk/; revision=3540

2006-03-30  Tim Janik 	# a1d0a41454a1190408f8eb0957efde88a4b0cd5b

	changed switch macro for birnet extensins to _BIRNET_SOURCE_EXTENSIONS.

	Thu Mar 30 19:34:07 2006  Tim Janik  <timj@gtk.org>

		* birnetcore.h: changed switch macro for birnet extensins
		to _BIRNET_SOURCE_EXTENSIONS.

		* birnetcore.h: added more return_if_fail and assertion macros
		plus shorthands.

		* birnet.h:
		* mksignals.sh:
		* birnetsignal.hh:
		* birnetsignalslot.hh:
		* birnetsignaltemplate.hh: added C++ signal system.
		* ChangeLog: added old signal system change entries.

		* tests/signal.cc: test the C++ signal system.

		* configure.inc: added libtool workaround for missing -lpthread.

	    Wed Dec 28 01:07:43 2005  Tim Janik  <timj@gtk.org>

		* birnetsignaltemplate.hh: added disconnect() and
		corrsponding -= operators.

		* birnetsignal.hh: added operator== to signal handler
		links, to allow disconnections. implemented disconnect_equal_link()
		for signal links.

		* mksignals.sh:
		* birnetsignalslot.hh: renamed handler to trampoline.
		added slot() constructor for signals + emit() method. with this,
		slot(sig_some_signal) can be connected and disconnected.

		* tests/signal.cc: signal handler data must implement operator== now.

	    Wed Jul  6 20:06:05 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh: added struct CollectorUntil0 signal
		collector template. predefine SignalVoid for void(void) signals.

	    Mon Apr 18 23:10:21 2005  Tim Janik  <timj@gtk.org>

		* mksignals.sh: /bin/sh is more protable than bash.

	    Sun Apr 17 19:06:31 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh: introduce ScopeReference to keep an
		instance referenced within block scope. added SignalFinalize
		which does not need the emitter to be ref/unref-ed around emit(),
		but instead asserts its in finalization stage. cleanups.
		* birnetsignaltemplate.hh: use ScopeReference.

		* tests/signal.cc: removed cruft.

	    Wed Mar 30 00:52:05 2005  Tim Janik  <timj@gtk.org>

		* birnetsignalslot.hh: moved signal handler and slot
		definitions here. there're no emitter handlers/slots anymore.
		support extra data argument for function and method handlers.

		* birnetsignaltemplate.hh: removed handlers/slots. moved
		knowledge about emitter obejct into Emission. let class Emission
		care about casting handlers correctly (with or without emitter arg),
		cleaned up signal methods some.

		* birnetsignal.hh: removed HandlerBase, ReferencableBase.
		added with_emitter flag to signal handlers. made SlotBase a regular
		class, rather than a template.

		* mksignals.sh: fixed line numbers. allow 17 arguments.
		allow specification of maximum argument count.

		* tests/signal.cc: test data handlers and emitter-less ahndlers.

		* Makefile.am: generate birnetsignalvariants.hh from
		birnetsignalslot.hh (we need 0..17 argument handlers) and
		birnetsignaltemplate.hh (for 0..16 argument signals).

	    Tue Mar 29 17:00:08 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignal.cc: namespace change
		to namespace Signals. added EmissionBase, extended SignalBase to
		maintain a signal handler list as ring data structure. removed
		accumulators, added Collectors, added Signature template to extract the
		return type of a function type for functions with up to 16 arguments.
		include birnetsignalvariants.hh to define all signal variants.

		* birnetsignaltemplate.hh: implement signal with emission and
		handlers etc, for exactly 3 signal arguments.

		* mksignals.sh: generate signal variants for 0..16 signal
		arguments from birnetsignaltemplate.hh.

		* Makefile.am: generate birnetsignalvariants.hh.

		* tests/signal.cc: test signal variants for 0..16 arguments with void
		and other return types.

	    Mon Mar 28 10:12:34 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignaldefs.hh:
		moved signals into an extra Signal namespace, renamed Signal::Closure
		to Signal::Handler.

	    Mon Mar 28 10:01:06 2005  Tim Janik  <timj@gtk.org>

		* birnetsignaldefs.hh: disabled signal generation.
		added test implementation of a 3 argument signal which supports passing
		the emitter object as first argument to signal handlers.

		* tests/signal.cc: disabled old signal tests.
		added test for 3 argument signal variant, currently implemented in
		birnetsignaldefs.hh.

	    Sun Mar 27 19:52:12 2005  Tim Janik  <timj@gtk.org>

		* birnetsignal.hh, birnetsignalinc.hh:
		* birnetsignaldefs.hh:
		rudimentary signal (callback list) implementation for C++.

		* tests/signal.cc: test signals.

	svn path=/trunk/; revision=3539

2006-03-30  Tim Janik 	# 3f521b4e3aa2b73cf9359ea16db8c64a3b5e24ba

	shutup

	svn path=/trunk/; revision=3538

2006-03-30  Stefan Westerfeld 	# 859be468abd0dcbe90011bb2f6156ae2adbab490

	Fixes for gcc-4.2 snapshot related to anonymous namespaces.

	Thu Mar 30 19:17:12 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Fixes for gcc-4.2 snapshot related to anonymous
		namespaces.

	svn path=/trunk/; revision=3537

2006-03-30  Tim Janik 	# 6ee10a40a06e620e3085a25b250273915ee58c68

	added argc/argv to birnet_init(). propagated change and changed callers.

	Thu Mar 30 19:12:29 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.h:
	        * birnetutilsxx.cc: added argc/argv to birnet_init().
	        propagated change and changed callers.

	svn path=/trunk/; revision=3536

2006-03-29  Tim Janik 	# 7b806b33e7ffe9675cda1e1666f944d2ae7bba14

	translation updates by Michele Petrecca <michelinux@alice.it>.

	Wed Mar 29 15:15:31 2006  Tim Janik  <timj@gtk.org>

	        * it.po: translation updates by Michele Petrecca <michelinux@alice.it>.

	svn path=/trunk/; revision=3535

2006-03-29  Tim Janik 	# e255b0fb1414d2b7dc7f8db77571f635f9298b2b

	web buglet

	svn path=/trunk/; revision=3534

2006-03-28  Tim Janik 	# 7caf7bf647734193b36c245b2f38ce6bd26b70dc

	PHP fixups to tell robots: content="noindex" for tmeporary EditThisPage

	Wed Mar 29 01:54:38 2006  Tim Janik  <timj@gtk.org>

	        * web/wiki.doxi: PHP fixups to tell robots: content="noindex" for
	        tmeporary EditThisPage wiki pages.

	        * web/style/beast-style.css: beautify wiki tables somewhat.

	svn path=/trunk/; revision=3533

2006-03-28  Tim Janik 	# e1e17755bdb086882e13423d76b2ad8974d148b9

	minor rename

	svn path=/trunk/; revision=3532

2006-03-27  Stefan Westerfeld 	# 23ec36a672f5b8d17b0e924c9b920ed479ac678b

	g_intern_(static)_string only needs to be provided for old glib versions

	Mon Mar 27 18:22:18 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* glib-extra.[hc]: g_intern_(static)_string only needs to be provided
		for old glib versions (< glib-2.9.0).

	svn path=/trunk/; revision=3531

2006-03-23  Tim Janik 	# 9feee2238e931389caeb5887bddddd7385fdca34

	more fixups.

	Thu Mar 23 02:47:28 2006  Tim Janik  <timj@gtk.org>

	        * docu-main.doxi: more fixups.

	svn path=/trunk/; revision=3530

2006-03-23  Tim Janik 	# 42b9334079cc20fca396225bc8f97caaf7fc4533

	dependency fixup.

	Thu Mar 23 02:02:50 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile.am: dependency fixup.

	svn path=/trunk/; revision=3529

2006-03-23  Tim Janik 	# 59d1cb56d2283982a1efb58b27d7d2fa8312ca09

	flag nestable macros appropriately. plain_text_from_token_list(): simple

	Thu Mar 23 01:56:30 2006  Tim Janik  <timj@gtk.org>

	        * DoxiParser.py: flag nestable macros appropriately.
	        plain_text_from_token_list(): simple function to convert tokens back to text.
	        parsable_text_from_token_list(): convert tokens back to Doxer source.
	        internal_text_from_token_list(): refactored version of the former
	        text_from_token_list() function. fixed '@'-escaping within quotes of QUOTABLE
	        macro arguments. (rare but significant special case)
	        parse_stream(): argument fixups.
	        text_expand_args_reescape(): moved to a DoxiParser method.

	        * HtmlGenerator.py: support strikethrough, subscript, superscript.

	        * Data.py: added NESTING flag.

	        * docu-main.doxi: extended the documentation somewhat.

	svn path=/trunk/; revision=3528

2006-03-21  Tim Janik 	# 917554ca319472dd7f9d8b096dc9627c20905d9b

	improve wording

	svn path=/trunk/; revision=3527

2006-03-20  Tim Janik 	# 72174c4151af34224c1a6f7591ab70635fceccb3

	generate documentation for birnet/.

	Tue Mar 21 00:55:27 2006  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am:
	        * web/Makefile.am:
	        * web/webmenu.doxi: generate documentation for birnet/.

	svn path=/trunk/; revision=3526

2006-03-20  Tim Janik 	# 13c0ad4efd993a8da6511a7825ade96c1de5d76b

	fix test

	svn path=/trunk/; revision=3525

2006-03-20  Tim Janik 	# b4caa64de2c64ea9c2d01a9b7ed8bbf91577e4d4

	added todos

	svn path=/trunk/; revision=3524

2006-03-20  Tim Janik 	# c6d33e583424a6c9fae5849e6ed17abe39789d4e

	compile with -DBIRNET_FEATURES. fixed up birnetconfig.h generation.

	Sun Mar 19 22:26:02 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: compile with -DBIRNET_FEATURES.
	        fixed up birnetconfig.h generation.

	        * birnetthread.h:
	        * birnetthread.c:
	        moved BirnetThreads to a reference counted model, to
	        execute a thread, birnet_thread_start() must be called now.
	        birnet_thread_run() will now create a thread and automatically
	        start it, the returned thread structure must be unrefed.
	        always demand a well formed thread name. added C++ hooks.
	        use 64bit data types for time ranges. some atomic fixes.
	        birnet_thread_get_aborted(): return whether a thread got aborted.
	        birnet_thread_get_running(): return whether a thread is
	        currently running.
	        birnet_thread_wait_for_exit(): block until the thread has exited.

	        * birnetthreadxx.hh:
	        * birnetthreadxx.cc: provide a C++ API for threads. added classes
	        Mutex, RecMutex, Cond, Atomic, Thread and Thread::Self.

	        * birnetutils.h:
	        * birnetutils.c: added for C utilities.

	        * birnetutilsxx.hh:
	        * birnetutilsxx.cc: define fundamental types in the Birnet:: namespace.
	        moved birnet_init() hook logic here. added ReferenceCountImpl class,
	        which implements atomic reference counting for objects.

	        * birnetcore.h: define BIRNET_STATIC_ASSERT() and
	        BIRNET_ASSERT(), removed C++ code. define standard types,
	        such as uint64 and unichar.

	        * birnetcore.c: removed birnet_init() implementation.

	        * birnetcore.hh:
	        * birnetcore.cc: removed entirely.

	        * tests/threads.cc: extended tests, added C++ tests.

	svn path=/trunk/; revision=3523

2006-03-17  Tim Janik 	# efa46eade015cc29d398d055af1d4270b4a3cbcb

	CVS copied from birnetcore.hh.

	Fri Mar 17 19:41:50 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.h: CVS copied from birnetcore.hh.

	        * birnetcore.c: CVS copied from birnetcore.cc.

	svn path=/trunk/; revision=3522

2006-03-16  Tim Janik 	# 16f7cb80293f63ef3bb9e18935d2f01ffe68f0eb

	declare variables that are used in += statements.

	Sun Mar 12 12:21:40 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: declare variables that are used in += statements.

	        * */Makefile.am: added include statement for Makefile.decl.

	svn path=/trunk/; revision=3521

2006-03-12  Tim Janik 	# 68981b123270692ad99767fbf59353cd57356c9a

	declare variables that are used in += statements.

	Sun Mar 12 12:21:40 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.decl: declare variables that are used in += statements.

	        * */Makefile.am: added include statement for Makefile.decl.

	svn path=/trunk/; revision=3520

2006-03-12  Tim Janik 	# 61b0bc6d4bf20fbba0256ca2eaa4d4e1609d6457

	updated source file lists and .po files.

	Sun Mar 12 12:02:47 2006  Tim Janik  <timj@gtk.org>

	        * updated source file lists and .po files.

	        * eo.po: fixed Project-Id-Version.

	svn path=/trunk/; revision=3519

2006-03-11  Jens Seidel 	# 9622a7d3880360674b71f6c4ec0953d88c544c45

	German translation update

	svn path=/trunk/; revision=3518

2006-03-11  Jens Seidel 	# 83d133bfe57c73e28865b5eeba784a841779718e

	fixed a typo

	svn path=/trunk/; revision=3517

2006-03-11  Tim Janik 	# a47dc24ccea4d29e640df108148611ef50a01e1c

	added missing copyright notices. changed/added LGPL license with

	Sat Mar 11 20:23:51 2006  Tim Janik  <timj@gtk.org>

	        * */Makefile.am:
	        added missing copyright notices.
	        changed/added LGPL license with permission
	        from Stefan Westerfeld (required for some files).

	svn path=/trunk/; revision=3516

2006-03-10  Tim Janik 	# abf06aefa15c9561a91ae8cfd7bd2a3b70a62f74

	added freebsd, arch and gentoo package links.

	Fri Mar 10 21:48:03 2006  Tim Janik  <timj@gtk.org>

	        * web/download.doxi: added freebsd, arch and gentoo package links.

	        * web/htaccess.in: more screenshot redirections.

	        * web/related-links.doxi: link updates.

	svn path=/trunk/; revision=3515

2006-03-10  Tim Janik 	# 0a9a28032fa035b5098da8ad041c4263ec01af41

	license fixups.

	Fri Mar 10 19:49:56 2006  Tim Janik  <timj@gtk.org>

	        * web/*.php: license fixups.

	        * web/htaccess.in: redirect old screenshot links.

	svn path=/trunk/; revision=3514

2006-03-10  Tim Janik 	# 7de5d69b79c9ad93118e0a2e27ff1f358905efe5

	disallow temporary wiki pages and the sandbox.

	Fri Mar 10 19:25:50 2006  Tim Janik  <timj@gtk.org>

	        * web/robots.txt: disallow temporary wiki pages and the sandbox.

	svn path=/trunk/; revision=3513

2006-03-10  Tim Janik 	# 14b19e8d142b4b418654a2b161309f5ade725744

	install robots.txt and favicon.ico.

	Fri Mar 10 18:06:26 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile.am: install robots.txt and favicon.ico.

	        * web/robots.txt: new file to avoid constant web server errors.
	        allow access to everything for all spiders by default.

	        * web/wiki.doxi: added meta header to avoid indexing of generated
	        wiki pages.

	        * web/web-images/favicon.ico: transparent mini beast logo.

	        * web/webframe.doxi:
	        * web/webmenu.doxi: link to favicon.ico.

	svn path=/trunk/; revision=3512

2006-03-10  Tim Janik 	# f3c674393009d8c5cdd3da079a451f60f355c7de

	allow raw-html head lines to be generated from the env variable

	Fri Mar 10 18:05:20 2006  Tim Janik  <timj@gtk.org>

	        * HtmlGenerator.py (HtmlGenerator.write_meta): allow raw-html head lines
	        to be generated from the env variable 'raw_html_head'.

	svn path=/trunk/; revision=3511

2006-03-10  Tim Janik 	# 70644475c2eb889039d6927be76bfbc40a35359c

	use 'raw_html_title' doxer variable to set the page title dynamically,

	Fri Mar 10 02:52:18 2006  Tim Janik  <timj@gtk.org>

	        * web/wiki.doxi: use 'raw_html_title' doxer variable to set the
	        page title dynamically, based on the wiki page.

	svn path=/trunk/; revision=3510

2006-03-10  Tim Janik 	# 8dbc487a916ed9c5451b1e37c74b698b75d5e158

	support 'raw_html_title' env variable and give it precedence over 'title'.

	Fri Mar 10 02:51:21 2006  Tim Janik  <timj@gtk.org>

	        * HtmlGenerator.py (HtmlGenerator.write_meta): support 'raw_html_title'
	        env variable and give it precedence over 'title'.

	svn path=/trunk/; revision=3509

2006-03-10  Tim Janik 	# e22d491c69a5dab10cb62821e96289e5139dc1d9

	fixed or changed the license to a 'provided "as is"' disclaimer with

	Fri Mar 10 01:21:09 2006  Tim Janik  <timj@gtk.org>

	        * library/scripts/mixer-splitup-by-track.scm:
	        * library/scripts/part-harmonic-transposer.scm:
	        * library/scripts/song-parts-operations.scm:
	        * tests/scripts/noteplaytest.scm:
	        * tests/scripts/waveloadtest.scm:
	        * tests/audio/bsetowav.scm:
	        * shell/bse-scm-glue.boot:
	        fixed or changed the license to a 'provided "as is"' disclaimer with
	        permission from Stefan Westerfeld.

	svn path=/trunk/; revision=3508

2006-03-09  Tim Janik 	# 97e41ceda7982b2428979e46f1b295824da067a7

	fixed or changed the license to LGPL with permission from Stefan

	Thu Mar  9 23:42:19 2006  Tim Janik  <timj@gtk.org>

	        * tests/*: fixed or changed the license to LGPL with permission
	        from Stefan Westerfeld (required for some files).

	svn path=/trunk/; revision=3507

2006-03-09  Tim Janik 	# 005473cf2e195eff5392fce8e39d56c36fc3b424

	added missing or changed the license to LGPL.

	Thu Mar  9 23:38:29 2006  Tim Janik  <timj@gtk.org>

	        * tests/*: added missing or changed the license to LGPL.

	svn path=/trunk/; revision=3506

2006-03-09  Tim Janik 	# 5af8057f66746f020557082ab1b00bbbc2f7b8be

	fixed or changed the license to LGPL with permission from Stefan

	Thu Mar  9 21:08:13 2006  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc:
	        * tools/bsefextract.cc:
	        * tools/bsewavetool.cc:
	        * tools/bsewavetool.hh:
	        * tools/bwtwave.cc:
	        * tools/bwtwave.hh:
	        fixed or changed the license to LGPL with permission from Stefan
	        Westerfeld (required for some files).

	svn path=/trunk/; revision=3505

2006-03-09  Tim Janik 	# c97b338e12797c62e3a976b91150eb271f83f7a8

	fix missing licenses.

	Thu Mar  9 21:03:17 2006  Tim Janik  <timj@gtk.org>

	        * web/*: fix missing licenses.

	svn path=/trunk/; revision=3504

2006-03-09  Tim Janik 	# ed3e466fcc7c18cf07b1d5524f8632b925882ca8

	applied patch from Ralf Wildenhues <Ralf.Wildenhues@gmx.de> to work with

	Thu Mar  9 20:52:59 2006  Tim Janik  <timj@gtk.org>

	        * acbeast.m4:
	        * configure.in:
	        * birnet/configure.inc: applied patch from Ralf Wildenhues
	        <Ralf.Wildenhues@gmx.de> to work with newer autoconf.
	         clarified licensing to mention LGPL explicitely in all places.

	        * autogen.sh: clear autom4te cache. clarified licensing to mention
	        LGPL explicitely in all places.

	svn path=/trunk/; revision=3503

2006-03-09  Tim Janik 	# 80ac6b366a58a933cc32948bc83412b2ec5c913e

	don't link against libsfi.la which is included in libbse.la now

	svn path=/trunk/; revision=3502

2006-03-09  Tim Janik 	# 65409543d9ac3f05d550e9ad7404c64a67e46306

	removed texitheque traces.

	Thu Mar  9 18:19:02 2006  Tim Janik  <timj@gtk.org>

	        * web/download.doxi:
	        * configure.in: removed texitheque traces.

	svn path=/trunk/; revision=3501

2006-03-09  Tim Janik 	# 429460e91237374c1ab9c3631898a5b869f35202

	adapted to birnet_ namespace.

	Thu Mar  9 18:05:14 2006  Tim Janik  <timj@gtk.org>

	        * *.c: adapted to birnet_ namespace.

	svn path=/trunk/; revision=3500

2006-03-09  Tim Janik 	# b280d4e56800318d5cc0397297c430b038e6ed48

	adapted to birnet_ namespace.

	Thu Mar  9 18:07:47 2006  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c:
	        * bsepcmdevice-alsa.c: adapted to birnet_ namespace.

	Tue

	svn path=/trunk/; revision=3499

2006-03-09  Tim Janik 	# be2f6a8057d269b667e9b1e0634ed8e41850e6c4

	install birnet.h.

	Thu Mar  9 18:06:55 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: install birnet.h.

	svn path=/trunk/; revision=3498

2006-03-09  Tim Janik 	# ff19f60bef1baea03ecdf90526a1db39c86958c4

	adapted to birnet_ namespace.

	Thu Mar  9 03:12:11 2006  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.c: adapted to birnet_ namespace.

	        * shell/bsesh.c: initialization fixes.

	svn path=/trunk/; revision=3497

2006-03-09  Tim Janik 	# 32f5228cecdb831be6728ddfb29d24359ce26d2c

	updates

	svn path=/trunk/; revision=3496

2006-03-09  Tim Janik 	# c3f009a8dba95f7855091356aabe76d85068ff7e

	fix up -pthread -> -lpthread, required for libtool library linkage. link

	Thu Mar  9 02:40:51 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fix up -pthread -> -lpthread, required for libtool
	        library linkage. link against libbirnet.o and libsfi.o.

	        * bse/ldscript.map: export birnet symbols.

	        * *.[hc]*: adaptions to birnet_ namespace.

	svn path=/trunk/; revision=3495

2006-03-09  Tim Janik 	# af4e4e836d03bb376b7b2a12001f7f8745d37c1a

	allow double initialization.

	Thu Mar  9 02:57:33 2006  Tim Janik  <timj@gtk.org>

	        * birnetcore.cc (birnet_init): allow double initialization.

	svn path=/trunk/; revision=3494

2006-03-09  Tim Janik 	# 3c1082de60a8351eb92d66f157c5492f4287ccac

	get rid of sficonfig.h. generate partial library libsfi.o. dummy file used

	Thu Mar  9 00:55:39 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: get rid of sficonfig.h. generate partial library libsfi.o.
	        * dummy.cc: dummy file used to force C++ program linkage.

	        * glib-extra.[hc]: removed GScanner clone.
	        g_scanner_new64(): turned into a g_scanner_new() wrapper that ensures 64bit mode.

	        * sfi/sfilog.[hc]:
	        * sfi/sfithreads.[hc]: removed, functionality is provided by libbirnet now.

	        * *.[hc]: use functions from the birnet_ namespace for threading and messages.

	        * sficxx.cc: new file, used to hook up _sfi_init_*() functions with birnet_init().

	        * sficxx.h: removed, contents are provided by sficxx.hh now.

	        * sfidl-parser.cc: fixed 64bit scanner config.

	        * sfitypes.c: removed old init code.

	        * sfitypes.h: provide message function aliases in the sfi namespace to ease
	        transition.

	        * testsfi.c: fixed initialization.

	svn path=/trunk/; revision=3493

2006-03-09  Tim Janik 	# 10bccb466c422132a6b22f49b2e31b29f25ad304

	generate partial library libbirnet.o.

	Thu Mar  9 01:50:07 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: generate partial library libbirnet.o.

	        * birnet.h: combine include header.

	        * birnetcore.hh:
	        * birnetcore.cc: provide birnet_init() and provide initialization
	        hook funcitonality for C++.

	        * birnetthread.c: fixed thread start syncronization races.

	svn path=/trunk/; revision=3492

2006-03-07  Tim Janik 	# 6060c26a09c194cb21842a30bf0e8ad76ef23ec2

	CVS copied from sficxx.h, because this is a C++ header.

	Tue Mar  7 22:42:52 2006  Tim Janik  <timj@gtk.org>

	        * sficxx.hh: CVS copied from sficxx.h, because this is a C++ header.

	svn path=/trunk/; revision=3491

2006-03-07  Tim Janik 	# 2681e89582a4f2e70a5db689e794dac1b2757370

	fix dependency.

	Tue Mar  7 19:50:01 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fix dependency.

	svn path=/trunk/; revision=3490

2006-03-07  Tim Janik 	# dfcf957b588ff51e578c3ee2973606619007d8b9

	up version to 0.7.0, binary 0, interface 0.

	Tue Mar  7 02:31:18 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.7.0, binary 0, interface 0.

	        * merged libsfi.la and libbirnet.la into libbse.la, so only
	        libbse.so is installed as public library now.

	        * configure.in:
	        * Makefile.am: added birnet/.

	        * configure.in: execute checks from birnet/configure.inc.
	        comment fixups.

	        * data/bse.pc.in: libbse.so doesn't link against libsfi.so anymore.

	        * data/Makefile.am:
	        * data/sfi.pc.in: removed.

	svn path=/trunk/; revision=3489

2006-03-07  Tim Janik 	# 79664be0f36a64403ca4d5caa8f5f3757dc55783

	define AC_BIRNET_REQUIREMENTS() to perform configure checks for

	Tue Mar  7 03:06:55 2006  Tim Janik  <timj@gtk.org>

	        * configure.inc: define AC_BIRNET_REQUIREMENTS() to perform configure
	        checks for libbirnet.la.

	svn path=/trunk/; revision=3488

2006-03-07  Tim Janik 	# c7e9a441a02a9e4f01efe53f2d05a7c72db86c5d

	up version to 0.7.0, depend on bse-0.7.0.

	Tue Mar  7 03:05:45 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.7.0, depend on bse-0.7.0.

	svn path=/trunk/; revision=3487

2006-03-07  Tim Janik 	# 6209af3b3dbf11af224bb370ede4ef40b9eaea0a

	link libsfi.la and libbirnet.la into libbse.la. export only symbols from

	Tue Mar  7 03:04:13 2006  Tim Janik  <timj@gtk.org>

	        * ldscript.map:
	        * Makefile.am: link libsfi.la and libbirnet.la into libbse.la.
	        export only symbols from the public namespaces.

	svn path=/trunk/; revision=3486

2006-03-07  Tim Janik 	# 9c11a234e65057a141e394ef2d8d909d5e9cee9c

	added BirnetThread from sfi/testsfi.c. also added a test for atomic

	Tue Mar  7 02:56:25 2006  Tim Janik  <timj@gtk.org>

	        * tests/threads.cc: added BirnetThread from sfi/testsfi.c.
	        also added a test for atomic integer increments.

	        * tests/testutils.h: utility functions for tests.

	        * tests/ring.cc: added BirnetRing tests from sfi/testsfi.c.

	        * tests/Makefile.am: build and check test programs.

	svn path=/trunk/; revision=3485

2006-03-07  Tim Janik 	# c362f579abcc0e0862aee1039e4a9589fb28888f

	build rules for libbirnet.la.

	Tue Mar  7 02:34:38 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: build rules for libbirnet.la.

	        * birnetmsg.[hc]: slight atomicity fixes.

	        * birnetring.[hc]: removed non ring related cruft.
	        added docs to some ring functions.

	        * birnetthread.[hc]: fixed atomic functions. fixed
	        birnet_thread_run() race by letting newly created threads
	        sleep until birnet_thread_run() completed its setup.
	        allocate per-thread BirnetCond as part of the thread structure.
	        fixed thread handle leaks in birnet_thread_run() by introducing
	        birnet_thread_handle_free().
	        fixed accounting accuracy in thread_info_from_stat_L() by reading
	        out /proc/%u/task/%u/stat files which provide per-thread info,
	        instead of using getrusage(). renamed mutex macros.
	        support GSlice. cache getpid(). added birnet_init().

	svn path=/trunk/; revision=3484

2006-03-07  Tim Janik 	# 68433c7fcbd2d801f7436fd73bc8d742cd98b2ff

	Sfi -> Birnet rename.

	Tue Mar  7 02:45:06 2006  Tim Janik  <timj@gtk.org>

	        * birnetmsg.[hc]:
	        * birnetring.[hc]:
	        * birnetthread.[hc]: Sfi -> Birnet rename.

	svn path=/trunk/; revision=3483

2006-03-06  Tim Janik 	# bc6d74263ef909da9c950216bbbc11194bf37630

	CVS copied from beast/sfi/sfilog.[hc].

	Mon Mar  6 20:28:02 2006  Tim Janik  <timj@gtk.org>

	        * birnetmsg.[hc]: CVS copied from beast/sfi/sfilog.[hc].

	svn path=/trunk/; revision=3482

2006-03-06  Tim Janik 	# 46ddc0fc49b14e9b24dcf38b8089aaa47dd8a0d3

	CVS copied from beast/sfi/sfithreads.[hc].

	Mon Mar  6 20:24:04 2006  Tim Janik  <timj@gtk.org>

	        * birnetthread.[hc]: CVS copied from beast/sfi/sfithreads.[hc].

	        * birnetring.[hc]: CVS copied from beast/sfi/sfiprimitives.[hc].

	svn path=/trunk/; revision=3481

2006-03-04  Tim Janik 	# e8a85c8e7f8c13aa90ab975656d01bdf6a2ea1e4

	updates

	svn path=/trunk/; revision=3480

2006-03-04  Tim Janik 	# 075f4f2d2d3260680edff1b9fdfe93c8e1fcecc4

	added plottest rule (moved here from gslmakefile.inc).

	Sat Mar  4 18:47:30 2006  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am (plottest): added plottest rule
	        (moved here from gslmakefile.inc).

	        * gslmakefile.inc: removed gsltestoutput test rule.

	        * tests/filter-defs.gp: increase precision (10000 samples).

	svn path=/trunk/; revision=3479

2006-03-04  Tim Janik 	# c78f706e903e8d1481b182298d88610d47d0c02d

	removed.

	Sat Mar  4 18:41:59 2006  Tim Janik  <timj@gtk.org>

	        * gsl.gnuplot:
	        * gslarrows: removed.

	svn path=/trunk/; revision=3478

2006-03-04  Tim Janik 	# ca8557b5ef0805d718b4299f5beee4bb6cab5f37

	CVS copied.

	Sat Mar  4 18:41:08 2006  Tim Janik  <timj@gtk.org>

	        * tests/filter-defs.gp:
	        * tests/arrows.gp: CVS copied.

	svn path=/trunk/; revision=3477

2006-03-04  Tim Janik 	# 58697c61f19fc32731278815899d930a9e4f4ec6

	turn the font-weight for unexisting wiki pages from bold back to normal.

	Sat Mar  4 16:11:33 2006  Tim Janik  <timj@gtk.org>

	        * web/style/beast-style.css: turn the font-weight for unexisting
	        wiki pages from bold back to normal.

	svn path=/trunk/; revision=3476

2006-03-04  Tim Janik 	# cfb81fdb3ad339fd7aa958fb228117c2cef590ef

	added .bse and .bsewave file types.

	Sat Mar  4 14:13:27 2006  Tim Janik  <timj@gtk.org>

	        * web/htaccess.in: added .bse and .bsewave file types.

	svn path=/trunk/; revision=3475

2006-02-28  Tim Janik 	# 12d2278832d9108e3f3f9389fb67940d10984da0

	more quiteing

	svn path=/trunk/; revision=3474

2006-02-28  Tim Janik 	# 6d7fbe77bf4810564e9aae98a6deba9c8c237f91

	chutup

	svn path=/trunk/; revision=3473

2006-02-28  Tim Janik 	# b0682fc68632d5c3e38dcf5ee3ad303ac0ac4369

	shutup

	svn path=/trunk/; revision=3472

2006-02-28  Tim Janik 	# e519e8d77438805f95ea0a16cd56d2c029fe6940

	added doxer/ to automake tree.

	Tue Feb 28 01:33:06 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am:
	        * configure.in: added doxer/ to automake tree.

	svn path=/trunk/; revision=3471

2006-02-28  Tim Janik 	# 61f5f573bd4f31085023a3f96126782ae2bdec6d

	add build rules here.

	Tue Feb 28 01:34:13 2006  Tim Janik  <timj@gtk.org>

	        * Makefile.am: add build rules here.

	svn path=/trunk/; revision=3470

2006-02-28  Tim Janik 	# d442ab150a81b5c3d68a7cc5f587d50bb875700b

	use doxer from ../doxer/.

	Tue Feb 28 00:29:43 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile.am:
	        * docs/Makefile.am: use doxer from ../doxer/.

	svn path=/trunk/; revision=3469

2006-02-28  Tim Janik 	# cb317532c6c722e6285036ab4048fc603514592d

	doxer executable, supports various commands to parse source code and to

	Tue Feb 28 00:30:39 2006  Tim Janik  <timj@gtk.org>

	        * doxer.py: doxer executable, supports various commands to parse
	        source code and to generate and process .doxi files.

	        * Code2Doxi.py: doxer markup generator for source code documentation.

	        * DoxiParser.py: .doxi parser implementation. also implements
	        sectioning, line breaking, macro expansion, etc.

	        * HtmlGenerator.py: HTML generator backend.

	        * ManGenerator.py: generator for manual pages. a bit messy still
	        because it's just a tweaked version of HtmlGenerator.py. will be
	        extended and cleaned as needed.

	        * Data.py: doxer data structures, used by .doxi parser and
	        to hold information about source code and its documentation.

	        * Utils.py: utility functions for doxer.

	        * Config.py: configuration and debugging functions for doxer.

	        * ScadParser.py: parser for source code analysis dumps.

	        * qxmlparser.py: parses doxygen XML into SrcFile and Docu structures.

	        * qdoxygen.py: Doxygen wrapper for doxer, generate XML descriptions
	        from source code documentation.

	        * qcomment.py: doxer helper program used by Doxygen to rip comments out
	        of source files.

	        * doxer-standard.doxi: standard macro short-forms for doxer usage.

	        * doxer-style.css: doxer CSS definitions, used by Code2Doxi.py and
	        the HTML generator.

	        * changelog2doxi.py: custom script to convert beast ChnageLogs to
	        doxer markup. due to symbol matching, it's glib/gtk/gnome/beast
	        namespace specific.

	        * linkdict.py: link target dictionary (not doxer specific).

	        * linkdict_gnome.py: gtk+ reference documentation link dictionary.

	svn path=/trunk/; revision=3468

2006-02-26  Tim Janik 	# 1aa7df9612d997049dbf5fffe85dde1b3fcd738b

	up version to 0.6.7, binary 0, interface 0.

	Sun Feb 26 18:26:47 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.6.7, binary 0, interface 0.

	        * Makefile.am: added web/ to build tree.

	        * beast-gtk/bstapp.[hc]: removed "/Help/Development..." menu option.
	        fire up web browser for installed help docuemnts.

	        * beast-gtk/bstmain.c: initialize random number generators properly.

	        * beast-gtk/gxk/gxkutils.c: added support for more web browsers,
	        "htmlview" for fedora, "gnome-open", "firefox", "mozilla-firefox",
	        "opera" and native "konqueror" (as opposed to the already supported
	        "kfmclient").
	        gxk_url_show(): renamed.
	        gxk_url_show_with_cookie(): new function to show an url via a file:///
	        redirect, thereby setting a cookie.
	        gxk_cleanup_add(): new function to add a cleanup handler.
	        gxk_cleanup_force_handlers(): new function to trigger cleanup handlers
	        at program exit.

	        * docs/beast-index.doxi: beautifications.

	        * web/Makefile.am: fixed relicts.

	svn path=/trunk/; revision=3467

2006-02-26  Tim Janik 	# b32f68866e8262680de12265beb80195105a3ab6

	removed.

	Sun Feb 26 18:23:35 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: removed.

	svn path=/trunk/; revision=3466

2006-02-26  Tim Janik 	# fcf32b9ed6e59c4ac42e32769329923324bed36a

	CVS copied from web/Makefile.

	Sun Feb 26 18:19:47 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile.am: CVS copied from web/Makefile.

	svn path=/trunk/; revision=3465

2006-02-25  Tim Janik 	# 9e21ce4094505f3b088da87cc06fc9755e401f19

	minor rule optimizations.

	Sat Feb 25 18:53:01 2006  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: minor rule optimizations.

	        * docs/docframe.doxi: provide documentation frame.

	svn path=/trunk/; revision=3464

2006-02-25  Tim Janik 	# 521aaf5fd0252a39a5fddc8cdbf8bb1fd30ea0b1

	generate HTML documentation.

	Sat Feb 25 17:40:00 2006  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: generate HTML documentation.

	        * docs/docu-template.doxi: template fixups.

	        * docs/beast-index.doxi: links to HTML documentation.

	        * web/Makefile: consolidated generation rules, make use of the files
	        generated in ../docs/.

	        * web/rdocu-template.doxi: removed.

	        * docs/WRITING.3.texi:
	        * docs/teximacros.texi:
	        * docs/generated/*:
	        * docs/generated/css/*:
	        * docs/generated/cgi-bin/*:
	        * docs/generated/css/images/*: removed remainings of old documentation system.

	svn path=/trunk/; revision=3463

2006-02-25  Tim Janik 	# ae31ab1b872ce7a3971425b3d8ed929d3f7b4fd1

	CVS copied from web/.

	Sat Feb 25 15:18:04 2006  Tim Janik  <timj@gtk.org>

	        * docs/docu-template.doxi: CVS copied from web/.

	svn path=/trunk/; revision=3462

2006-02-23  Tim Janik 	# 673a3f8244707cc764f030c45704d4125c65bf96

	provide DOXI_INCLUDE_FILE definition for files generated from the docs/.

	Thu Feb 23 23:16:25 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile:
	        provide DOXI_INCLUDE_FILE definition for files generated from the
	        docs/. directory.

	        * web/webframe.doxi:
	        * web/webmenu.doxi:
	        * web/Makefile: adapt to moving beastdefs.doxi.

	svn path=/trunk/; revision=3461

2006-02-23  Tim Janik 	# 2301337174815cb89055582dd5027fa49a8b7310

	fixed records being treated like sequences.

	Thu Feb 23 23:15:32 2006  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c (show_structdoc): fixed records being treated like sequences.

	svn path=/trunk/; revision=3460

2006-02-21  Tim Janik 	# 442f9f7baa03a6c78e9931167442dde38c9068ed

	removed.

	Tue Feb 21 01:31:42 2006  Tim Janik  <timj@gtk.org>

	        * web/beastdefs.doxi: removed.

	svn path=/trunk/; revision=3459

2006-02-21  Tim Janik 	# 7eab6aff7e2bb131a9a8ebb4b0016efd2002c7c0

	CVS copied here from web/.

	Tue Feb 21 01:29:38 2006  Tim Janik  <timj@gtk.org>

	        * docs/beastdefs.doxi: CVS copied here from web/.

	svn path=/trunk/; revision=3458

2006-02-21  Tim Janik 	# 0cf7ebb704c605c1483a273f83a452eff0535f94

	build HTML docs with doxer.

	Tue Feb 21 01:26:43 2006  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: build HTML docs with doxer.

	        * docs/release-notes.doxi:
	        * docs/beast-index.doxi: ported to doxer markup.

	        * docs/*.doxi: include fixes.

	        * web/Makefile: include fixes.

	svn path=/trunk/; revision=3457

2006-02-19  Tim Janik 	# ae46c945a35e6c96fece30a22f1455b4363c2d88

	announce website move.

	Sun Feb 19 01:26:19 2006  Tim Janik  <timj@gtk.org>

	        * web/news.doxi: announce website move.

	svn path=/trunk/; revision=3456

2006-02-18  Tim Janik 	# 2d1b36fc9916c203c3c131a283d211c7b6fdc4a0

	misc wording and link fixes.

	Sun Feb 19 00:20:15 2006  Tim Janik  <timj@gtk.org>

	        * web/*.doxi: misc wording and link fixes.

	        * web/htaccess.in: wiki redirection fixes, updated older redirects.

	svn path=/trunk/; revision=3455

2006-02-18  Tim Janik 	# 83d6b5519c759a7662142b4b4a048d75f6c1dcdc

	enable wiki pages

	svn path=/trunk/; revision=3454

2006-02-18  Tim Janik 	# 579af8ccdc0284ed2627183da571a8ccb23a8542

	IE and indentaiton fixes. added tree expanders for web menus.

	Sat Feb 18 19:41:00 2006  Tim Janik  <timj@gtk.org>

	        * web/style/beast-style.css: IE and indentaiton fixes. added tree
	        expanders for web menus.

	        * web/webmenu.doxi: added different CSS classes for submenus and expand
	        vs. collapsed state.

	        * web/sound-browser.doxi: fixed up file type icon links.

	        * web/web-images/back.png:
	        * web/web-images/compressed.png:
	        * web/web-images/folder-open.png:
	        * web/web-images/folder.png:
	        * web/web-images/sound2.png:
	        * web/web-images/text.png: added public domain icons from apache.

	        * web/style/triangle-down-blue.png: tree expand icon by Alper Ersoy.

	        * web/style/triangle-right-blue.png: tree collapsed icon by Alper Ersoy.

	svn path=/trunk/; revision=3453

2006-02-17  Tim Janik 	# dc8a622d505e28400314e7abb2ca53f21bfe3d47

	file path adaptions

	svn path=/trunk/; revision=3452

2006-02-17  Tim Janik 	# 0500d529173777feac2975ca080bb5b631ae8ad9

	slight fixups

	svn path=/trunk/; revision=3451

2006-02-17  Tim Janik 	# 8fd2faac40ef8e4a710af9a7998b2f51fb7ec083

	shutup

	svn path=/trunk/; revision=3450

2006-02-17  Tim Janik 	# 3d8d5c1abe781c2a0c7d7e1f45c5a51083123e26

	new directory containing screenshots for the beast website.

	Fri Feb 17 23:15:42 2006  Tim Janik  <timj@gtk.org>

	        * web/screenshots/: new directory containing screenshots for the beast website.

	        * web/logogallery/: new directory containing images from the 2003 logo contest.

	svn path=/trunk/; revision=3449

2006-02-17  Tim Janik 	# 9d389a8cdf5f4d01ce992965cc037a1f432fd2e1

	fixed site update rules.

	Fri Feb 17 23:09:43 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: fixed site update rules.

	        * web/Makefile: consolidated build rules. added website tarball build
	        rules. added remote website update rules. fixes for index file generation.

	        * web/htaccess.in: new file, covering wiki rewrite rules, compatibility
	        redirections and PHP size constraints.

	        * web/scanimages.sh: issue file list to stdout.

	        * web/webframe.doxi: use CSS classes beast-website and beast-webframe.

	        * web/webmenu.doxi: use CSS classes beast-website and beast-webpage.

	        * web/web-images/LT-PartView512.png:
	        * web/web-images/LT-WaveView512.png:
	        * web/web-images/LT-SynthView512.png: image required by overview2003de.doxi.

	        * web/style/beast-style.css: new beast website CSS stylesheet.

	        * web/style/plain.css: alternative beast website CSS stylesheet.

	        * web/style/beast-small.png: "beast" logo writing by jimmac (Jakub Steiner).

	        * web/style/beast-left.png: "beast" logo drawing by Alper Ersoy.

	        * web/style/beast-right.png: "Bedevilled Audio System" drawing by Alper Ersoy.

	        * web/style/title-arrow-24x64.png: right arrow for section titles by Alper Ersoy.

	        * web/style/home-arrow-24x64.png: left arrow for 'Home' links by Alper Ersoy.

	        * web/style/square.png: square news item bullet by Alper Ersoy.

	        * web/style/beast-bg.png:
	        * web/style/beast-dot.png:
	        * web/style/beast-bg-h5.png: auxillary pictures for the beast website
	        logo backgrounds by Alper Ersoy.

	        * docs/Makefile.am: removed outdated rules.

	svn path=/trunk/; revision=3448

2006-02-15  Tim Janik 	# 6fec0af797243bdfa2b5d2e2d41a278cba296bb5

	generate BSE object documentation. generate SFI reference documentation.

	Wed Feb 15 23:45:48 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: generate BSE object documentation.
	        generate SFI reference documentation.

	        * configure.in: removed plugins/evaluator/Makefile generation.

	svn path=/trunk/; revision=3447

2006-02-15  Tim Janik 	# 376d0a905991a359746816358daee5db84555731

	unify pspec output. generate doxer digestible object documentation.

	Wed Feb 15 23:43:08 2006  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: unify pspec output. generate doxer digestible object
	        documentation.

	svn path=/trunk/; revision=3446

2006-02-15  Tim Janik 	# 54aa75c7462363dea9c29da260b350d58e8e7500

	Building of this plugin has been completely disabled because it never left

	Wed Feb 15 23:35:26 2006  Tim Janik  <timj@gtk.org>

	        * evaluator/: Building of this plugin has been completely disabled
	        because it never left pre-prototype stage, and it contains mallicious
	        code that gets into the way of normal program operations (such as
	        printf() statements that spew into the stdout channel).

	        * Makefile.am: removed evaluator/ from SUBDIRS.

	        * evaluator/Makefile.am: disabled build rules.

	svn path=/trunk/; revision=3445

2006-02-15  Tim Janik 	# 473dda84326879dab7cdccf63967984c16e860fd

	ported documentation to doxer format.

	Wed Feb 15 23:18:42 2006  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.c:
	        * sfilog.c:
	        * sfiprimitives.c:
	        * sfithreads.c:
	        * sfitime.c: ported documentation to doxer format.

	svn path=/trunk/; revision=3444

2006-02-12  Tim Janik 	# 1e8910045d6e5ba093336989708a3313e0a8fed3

	turn on guile debugging mode for script registration, so we can retrieve

	Sun Feb 12 03:33:18 2006  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.c: turn on guile debugging mode for script registration,
	        so we can retrieve file and line number information for script registration
	        and pass it on to BSE.

	        * web/Makefile: build fixes. generate bse-interface, which includes procedure
	        and script documentation.

	        * web/webmenu.doxi: link/menu fixes.

	        * beast-gtk/bstutils.c: docu fixups.

	svn path=/trunk/; revision=3443

2006-02-12  Tim Janik 	# ecf00cb6aa818725801e506cd24b741cdfb39ccc

	pass file/line information to pspec constructors.

	Sun Feb 12 03:31:04 2006  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: pass file/line information to pspec constructors.

	        * sfidl-parser.[hc]*: added string_from_int function.

	svn path=/trunk/; revision=3442

2006-02-12  Tim Janik 	# ee334181110cc8e74595856462bd6c7574a4e137

	write out procedure and structure docu as python parsable hash

	Sun Feb 12 03:01:09 2006  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: write out procedure and structure docu as python
	        parsable hash table/tuples. this allowes doxer to generate ordinary
	        API documentation from it.

	        * bsemain.c: allow script registratrion for bse_init_intern().

	        * *.c: added __FILE__ and __LINE__ when registering type blurbs.

	        * bseplugin.c:
	        * bseexports.h:
	        * bsecxxutils.[hc]*:
	        * bsescripthelper.[hc]:
	        store and pass on file/line information for type blurbs.

	        * bsetype.[hc]: store file and line information together with type blurbs.
	        adaped IDL compiler pspec constructors.

	        * mkcproc.pl: generate type blurb with file/line information.

	svn path=/trunk/; revision=3441

2006-02-02  Tim Janik 	# b1296cb7abfed4d895947dda8e77c873ad77ef94

	converted documentation markup to doxer.

	Thu Feb  2 02:15:58 2006  Tim Janik  <timj@gtk.org>

	        * bse/*.[hc]: converted documentation markup to doxer.

	        * web/Makefile: build full BSE API docs.

	svn path=/trunk/; revision=3440

2006-02-01  Tim Janik 	# cb14615bcec8381abac2a764543816b2fd92300b

	slight fixup

	svn path=/trunk/; revision=3439

2006-02-01  Tim Janik 	# 22cb6201f995aa363f32c531f88752ff7b922b24

	converted documentation markup to doxer.

	Wed Feb  1 20:01:08 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]:
	        * beast-gtk/gxk/*.[hc]: converted documentation markup to doxer.

	        * web/Makefile: build full GXK API docs.

	svn path=/trunk/; revision=3438

2006-01-31  Tim Janik 	# 69bd7dcad2d6be5938b55a32b3ec578a43bf7c33

	converted documentation markup to doxer.

	Wed Feb  1 00:21:38 2006  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c: converted documentation markup to doxer.

	        * web/webframe.doxi: fixed relative URIs.

	svn path=/trunk/; revision=3437

2006-01-31  Tim Janik 	# 33396cb342e04e70483c80e8a584e7f4ddde6373

	generate docs/images/Makefile.

	Tue Jan 31 02:36:17 2006  Tim Janik  <timj@gtk.org>

	        * configure.in: generate docs/images/Makefile.

	        * docs/Makefile.am: adapt to recent file renames/moves.

	        * docs/images/Makefile.am: ship documentation images.

	        * web/*.doxi:
	        * docs/*.doxi: fixed includes. fixed URIs to be @top_webdir/ relative.

	        * web/beastdefs.doxi: provide @top_webdir and @top_styledir macros,
	        based on the TOP_WEBDIR definition passed in from Makefile.

	        * web/rdocu-template.doxi:
	        * web/doxer-docu.doxi:
	        * web/Makefile:
	        generate doxer docu. generate GXK source code documentation.

	svn path=/trunk/; revision=3436

2006-01-31  Tim Janik 	# 07610fb3ebfc6a9e6eede1fffd1a32b9ffd3ac43

	start of doxer documentation.

	Tue Jan 31 02:42:38 2006  Tim Janik  <timj@gtk.org>

	        * doxer/docu-main.doxi: start of doxer documentation.

	svn path=/trunk/; revision=3435

2006-01-31  Tim Janik 	# 778e220487f17a89b7a5b4677d12224f4a02d2fa

	new directory for a new documentation system.

	Tue Jan 31 02:41:09 2006  Tim Janik  <timj@gtk.org>

	        * doxer/: new directory for a new documentation system.

	svn path=/trunk/; revision=3434

2006-01-30  Tim Janik 	# 686b0ff88f120fa5a4290ba2a10113484db00cfe

	translation update by Michele Petrecca <michelinux@alice.it>.

	Mon Jan 30 01:32:25 2006  Tim Janik  <timj@gtk.org>

	        * it.po: translation update by Michele Petrecca <michelinux@alice.it>.

	svn path=/trunk/; revision=3433

2006-01-30  Tim Janik 	# 165008dec2e50ac4fa71f9e79f3782a941dbae48

	patch intltool to support .scm internationalization.

	Mon Jan 30 01:27:17 2006  Tim Janik  <timj@gtk.org>

	        * autogen.sh: patch intltool to support .scm internationalization.

	        * po/intltool-scm.diff: added diff which allowes intltool to extract
	        internationalizable strings from .scm files.

	svn path=/trunk/; revision=3432

2006-01-29  Tim Janik 	# 76786a6c1085ac1b5034f12774cc558ec44158ed

	fixed non-open webmenu

	svn path=/trunk/; revision=3431

2006-01-29  Tim Janik 	# 12b0183a657e032c2698a91d8fc56012afe8b7ee

	generate html files form ChangeLogs.

	Sun Jan 29 20:04:47 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: generate html files form ChangeLogs.

	        * web/beastdefs.doxi: removed bogus heading aliases.

	        * web/overview2003de.doxi: fixed headings.

	svn path=/trunk/; revision=3430

2006-01-28  Tim Janik 	# 2feb72e79059f99e6be654c130941de8f391156c

	page rename, moved footer to bottom.

	Sun Jan 29 00:06:22 2006  Tim Janik  <timj@gtk.org>

	        * web/webmenu.doxi: page rename, moved footer to bottom.

	        * web/Makefile: generate and build NEWS and engine-mplan web docs.

	        * docs/*.doxi, web/*.doxi: renamed webmenu branch variable to "webmenu".

	svn path=/trunk/; revision=3429

2006-01-28  Tim Janik 	# 681da37d1fe947230765bf1ce92b20988d28cc21

	uri fix

	svn path=/trunk/; revision=3428

2006-01-28  Tim Janik 	# 34d71731fd55bd831ccdc2a5ece65bfba9a92730

	converted to doxer markup, many markup fixes.

	Sat Jan 28 19:59:41 2006  Tim Janik  <timj@gtk.org>

	        * docs/sfidl-manual.doxi:
	        * docs/plugin-devel.doxi: converted to doxer markup, many
	        markup fixes.

	        * web/beastdefs.doxi: added more source code specific markup macros.

	svn path=/trunk/; revision=3427

2006-01-28  Tim Janik 	# 56f0c60f2a8495647f312a4a71f69325d39e0517

	converted to doxer markup.

	Sat Jan 28 18:20:18 2006  Tim Janik  <timj@gtk.org>

	        * docs/architecture.doxi: converted to doxer markup.

	        * web/Makefile: install docs/images/* under html/images/.

	        * web/webmenu.doxi: renamed "NEWS File" menu entry which had a very
	        confusing name before.

	        * docs/beast-components.dia:
	        * docs/beast-components.png:
	        * docs/module-voices.dia:
	        * docs/module-voices.png:
	        * docs/beast-progs.dia:
	        * docs/beast-progs.png: removed.

	svn path=/trunk/; revision=3426

2006-01-28  Tim Janik 	# aee0ac1cb98dbf877cf6b8f8fa5fb1e1f1bb7b61

	CVS copied here freom docs/.

	Sat Jan 28 18:07:14 2006  Tim Janik  <timj@gtk.org>

	        * docs/images/beast-components.dia:
	        * docs/images/beast-components.png:
	        * docs/images/module-voices.dia:
	        * docs/images/module-voices.png:
	        * docs/images/beast-progs.dia:
	        * docs/images/beast-progs.png: CVS copied here freom docs/.

	svn path=/trunk/; revision=3425

2006-01-28  Tim Janik 	# 8af064b297a380dc35e556575682b6a663427def

	converted to doxer markup.

	Sat Jan 28 17:34:59 2006  Tim Janik  <timj@gtk.org>

	        * web/wiki.doxi: converted to doxer markup.

	        * web/webmenu.doxi:
	        * web/search.doxi: correctly indicate search domain in the google
	        search result list.

	svn path=/trunk/; revision=3424

2006-01-28  Tim Janik 	# e0a7b2e6c0d548bd2c85993cc51879a43e048362

	converted to doxer markup.

	Sat Jan 28 16:06:04 2006  Tim Janik  <timj@gtk.org>

	        * docs/sfidl.1.doxi:
	        * docs/bsesh.1.doxi:
	        * docs/beast.1.doxi: converted to doxer markup.

	        * web/webmenu.doxi: added sfidl.1 to webmenu.

	        * web/beastdefs.doxi: added manual page markup commands.

	        * web/Makefile: build manual pages, listed unported files.

	svn path=/trunk/; revision=3423

2006-01-24  Tim Janik 	# 757227bffb8c81071b46c52c965a0f33b2f79c13

	converted to doxer markup.

	Tue Jan 24 03:25:26 2006  Tim Janik  <timj@gtk.org>

	        * web/overview2003de.doxi: converted to doxer markup.

	        * web/Makefile: added overview2003de and web-image rules.

	        * web/oldnews.doxi: uri fixup.

	        * web/webframe.doxi: implement small web banner.

	        * docs/quickstart.doxi: use small web banner.

	        * web/webmenu.doxi: minor fixups.

	svn path=/trunk/; revision=3422

2006-01-23  Tim Janik 	# d07f9e5ee24d9bcf20178ec40317478ee4699fac

	CVS moved here from ../docs/

	Mon Jan 23 23:58:08 2006  Tim Janik  <timj@gtk.org>

	        * web/overview2003de.doxi: CVS moved here from ../docs/

	svn path=/trunk/; revision=3421

2006-01-23  Tim Janik 	# bf3e81c845f0557bd8c0d4675de1c7f7e8341a00

	converted to doxer markup.

	Mon Jan 23 23:33:52 2006  Tim Janik  <timj@gtk.org>

	        * web/documentation.doxi: converted to doxer markup.

	        * docs/faq.doxi: minor fixups.

	svn path=/trunk/; revision=3420

2006-01-23  Tim Janik 	# 57b591df0b48e14342cd8d5347b240f3781a46c9

	converted to doxer markup.

	Mon Jan 23 22:55:15 2006  Tim Janik  <timj@gtk.org>

	        * docs/faq.doxi: converted to doxer markup.

	svn path=/trunk/; revision=3419

2006-01-23  Tim Janik 	# b53fc5838f6fdb358bacd0823792cba851969f49

	removed all files which have been replaced by a .doxi version.

	Mon Jan 23 21:41:21 2006  Tim Janik  <timj@gtk.org>

	        * architecture.texi:
	        * beast-index.texi:
	        * beast.1.texi:
	        * bsesh.1.texi:
	        * faq.texi:
	        * overview-de.texi:
	        * plugin-devel.texi:
	        * quickstart.texi:
	        * release-notes.texi:
	        * sfidl-manual.texi:
	        * sfidl.1.texi:
	        * site-about.texi:
	        * site-browse-bse-files.texi:
	        * site-contact.texi:
	        * site-development.texi:
	        * site-documentation.texi:
	        * site-download.texi:
	        * site-historic.texi:
	        * site-links-related.texi:
	        * site-links-synthesis.texi:
	        * site-news.texi:
	        * site-oldnews.texi:
	        * site-resources.texi:
	        * site-search.texi:
	        * site-upload-bse-files.texi:
	        * site-wiki.texi:
	        removed all files which have been replaced by a .doxi version.

	svn path=/trunk/; revision=3418

2006-01-23  Tim Janik 	# e1728db1999c26c302aea19b85da31017ab6ce1e

	CVS copied these files from docs/*.texi.

	Mon Jan 23 21:34:36 2006  Tim Janik  <timj@gtk.org>

	        * docs/release-notes.doxi:
	        * docs/architecture.doxi:
	        * docs/plugin-devel.doxi:
	        * docs/sfidl-manual.doxi:
	        * docs/overview-de.doxi:
	        * docs/beast-index.doxi:
	        * docs/quickstart.doxi:
	        * docs/beast.1.doxi:
	        * docs/bsesh.1.doxi:
	        * docs/sfidl.1.doxi:
	        * docs/faq.doxi: CVS copied these files from docs/*.texi.

	svn path=/trunk/; revision=3417

2006-01-23  Tim Janik 	# 3ad6289b8bc39e8fb0a260f038c0e3b4362b93b8

	updates

	svn path=/trunk/; revision=3416

2006-01-21  Tim Janik 	# fc5d357b7af5df820547832d1c48c0a43647189d

	added synth secret title comments.

	Sat Jan 21 21:32:23 2006  Tim Janik  <timj@gtk.org>

	        * web/synthesis-links.doxi: added synth secret title comments.

	svn path=/trunk/; revision=3415

2006-01-21  Stefan Westerfeld 	# cef37f2ea1a09f18c1b0fec86fc0b8a202a732ba

	Change caching code to handle 64 bit offsets.

	Sat Jan 21 18:50:44 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldatacache.[hc]: Change caching code to handle 64 bit offsets.

	svn path=/trunk/; revision=3414

2006-01-21  Stefan Westerfeld 	# d30d70992b96e2ffdbd40f9d94767d009c9a6435

	Adapted printf format strings to the GslLong change ("%ld" -> "%lld").

	Fri Jan 20 20:45:13 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/bse/loophandle.c:
		* tools/bseloopfuncs.c:
		* tools/bsewavetool.cc: Adapted printf format strings to the GslLong
		change ("%ld" -> "%lld").

	svn path=/trunk/; revision=3413

2006-01-21  Stefan Westerfeld 	# 9d9769110a974834bb736a0766c57da6ddb45784

	GslLong is now 64-bit on any platform (before, it was only 64 bit on 64

	Fri Jan 20 14:46:43 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* gsldefs.h: GslLong is now 64-bit on any platform (before, it was
		only 64 bit on 64 bit platforms).

		* tests/testwavechunk.c:
		* gsldatahandle-mad.c:
		* gsldatahandle-vorbis.c:
		* gsldatautils.c:
		* gslwavechunk.c:
		* gslwaveosc.c: Adapted printf format strings to the GslLong change
		("%ld" -> "%lld").

		* gsldatahandle.[hc]: Changed GslLong -> int64.

	svn path=/trunk/; revision=3412

2006-01-21  Stefan Westerfeld 	# 1a10bf48f24c8c18d0569d4e1b4f0cc6409aeedd

	Introduce int64 and uint64 types - within the scope of BEAST, we guarantee

	Tue Jan 17 23:38:02 2006  Stefan Westerfeld  <stefan@space.twc.de>

		* sfitypes.h: Introduce int64 and uint64 types - within the scope of
		BEAST, we guarantee that their printf format is always "%lld" (as
		opposed to gint64/guint64, which requires different printf formats on
		32-bit and 64-bit platforms).

	svn path=/trunk/; revision=3411

2006-01-21  Tim Janik 	# 8a925f557f4fac640178e45c7ee488f2406c989e

	added preset seciton

	svn path=/trunk/; revision=3410

2006-01-11  Francisco Javier F. Serrador 	# ff33d15eabbc85b7a6da6d6243b8766e4dff5dd2

	Updated Spanish translation.

	2006-01-11  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3409

2006-01-10  Tim Janik 	# 31a1ecf8dd048ab6ac3878eefa2953cdf9c3cdc8

	added preset notes

	svn path=/trunk/; revision=3408

2006-01-10  Tim Janik 	# 11bd97ed6b42ca9a2a87e7a8e59f060c7d87f11c

	translation updates from Michele Petrecca <michelinux@alice.it>.

	Tue Jan 10 08:44:23 2006  Tim Janik  <timj@gtk.org>

	        * it.po: translation updates from Michele
	        Petrecca <michelinux@alice.it>.

	svn path=/trunk/; revision=3407

2006-01-08  Tim Janik 	# 642cd7bcf737c8cec29761f708a6f0430ffb23a4

	build logogallery files.

	Sat Jan  7 18:25:00 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: build logogallery files.

	        * web/logogallery.doxi: new file, showing the logo gallery.

	        * web/webmenu.doxi:
	        * web/oldnews.doxi:
	        * web/historic.doxi:
	        * web/about.doxi: link fixes.

	svn path=/trunk/; revision=3406

2006-01-05  Tim Janik 	# c5d43ec2b3c423834b7eb3a31a88181c6de22ab3

	build sound browser page with included php.

	Thu Jan  5 01:22:36 2006  Tim Janik  <timj@gtk.org>

	        * web/sound-browser.doxi: build sound browser page with included php.

	        * web/sound-upload.doxi: build sound upload page with included php.

	        * web/file-upload.php: file upload facility implementation.

	        * web/file-browser.php: subdirectory file browser implementation.

	        * web/Makefile: process and install sound browser and upload files.

	        * web/webmenu.doxi:
	        * web/oldnews.doxi:
	        * web/news.doxi: uri fixes.

	svn path=/trunk/; revision=3405

2006-01-04  Adam Weinberger 	# 6a6e60be0098140518fdcf93652e73ac79170cb3

	Removed missing file. Updated Canadian English translation.

	2006-01-04  Adam Weinberger  <adamw@gnome.org>

		* POTFILES.skip: Removed missing file.
		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3404

2006-01-04  Tim Janik 	# 189507ec5dca57e5c3d96bdc7372cc6df57435b0

	fixes for MSIE applying "<center>" recursively. padding fixes.

	Wed Jan  4 01:18:35 2006  Tim Janik  <timj@gtk.org>

	        * web/gallery.php: fixes for MSIE applying "<center>" recursively.
	        padding fixes.

	        * web/scanimages.sh: padding fixes.

	svn path=/trunk/; revision=3403

2006-01-03  Tim Janik 	# 84a8c4f50792e0032bce599aa6bfce2865c4fa35

	new file with rules to build new web site docs. also generates

	Wed Jan  4 00:23:51 2006  Tim Janik  <timj@gtk.org>

	        * web/Makefile: new file with rules to build new web site docs.
	        also generates screenshots.phpini.

	        * web/gallery.php: php implementation of a picture gallery browser
	        with thumbnail and description support.

	        * web/scanimages.sh: script to generate a .phpini file from a picture
	        gallery directory, needed by gallery.php.

	        * web/screenshots.doxi: added screenshot gallery page.

	svn path=/trunk/; revision=3402

2006-01-02  Tim Janik 	# 273721951b4f4f34cafd8f83ad3bb8bcbcd57434

	CVS moved here from docs/web/.

	Mon Jan  2 23:36:54 2006  Tim Janik  <timj@gtk.org>

	        * web/*.doxi: CVS moved here from docs/web/.

	svn path=/trunk/; revision=3401

2006-01-02  Tim Janik 	# 674898f674d47c3e55192bd6dad0c433d7b0eb34

	heading and URL fixes.

	Mon Jan  2 23:27:26 2006  Tim Janik  <timj@gtk.org>

	        * docs/web/*.doxi: heading and URL fixes.

	svn path=/trunk/; revision=3400

2006-01-02  Tim Janik 	# 7eba155416e097e327c662ee1ce56c65e38a08d9

	updates

	svn path=/trunk/; revision=3399

2006-01-02  Tim Janik 	# caf12d9af9fd1c556c400b336c879f0a0403cea5

	provide BSE_MIN_TRANSPOSE and BSE_MAX_TRANSPOSE which currently allow a

	Fri Dec 23 00:57:58 2005  Tim Janik  <timj@gtk.org>

	        * bseconstvalues.h: provide BSE_MIN_TRANSPOSE and BSE_MAX_TRANSPOSE
	        which currently allow a transposition range of 2 * 72 semitones, i.e.
	        +- 6 octaves.

	        * bseglobals.h: implement BSE_TRANSPOSE_FACTOR() which provides
	        the transposition factor for a semitone in the range -72..0..+72.
	        implement BSE_FINE_TUNE_FACTOR() and BSE_SEMITONE_FACTOR() in terms
	        of bsemathsignal.h functions.

	        * bseglobals.c: removed transposition and fine tune factor tables.

	        * bsemathsignal.c: added double precision tables for cent fine tune
	        factors and transposition by +-11 octaves. removed slow and sub-accurate
	        table initialization routines.

	        * bsemathsignal.h: const fixes for factor table pointers. added
	        transposition factor function for +-11 octaves.

	        * bsestandardosc.c: added transpose property.

	        * gsloscillator-aux.c, gsloscillator.h: added config setting for
	        transposition in semitones.

	svn path=/trunk/; revision=3398

2005-12-22  Tim Janik 	# 872c530f732d5d6a75f988274f02fb31201e6436

	converted to doxer markup.

	Thu Dec 22 23:20:01 2005  Tim Janik  <timj@gtk.org>

	        * docs/web/news.doxi:
	        * docs/web/search.doxi:
	        * docs/web/download.doxi:
	        * docs/web/development.doxi:
	        * docs/web/documentation.doxi:
	        * docs/web/contact.doxi: converted to doxer markup.

	        * docs/web/oldnews.doxi:
	        * docs/web/webmenu.doxi: small fixups.

	        * docs/web/historic.doxi:
	        * docs/web/about.doxi: adapted page title.

	        * docs/web/beastdefs.doxi: more markup facilities.

	svn path=/trunk/; revision=3397

2005-12-19  Tim Janik 	# 7eadfeaec41e4a41ab766e26e153edff39c52278

	converted to doxer markup.

	Mon Dec 19 02:00:44 2005  Tim Janik  <timj@gtk.org>

	        * docs/web/synthesis-links.doxi:
	        * docs/web/related-links.doxi:
	        * docs/web/resources.doxi:
	        * docs/web/historic.doxi:
	        * docs/web/oldnews.doxi:
	        * docs/web/about.doxi: converted to doxer markup.

	        * docs/web/documentation.doxi: link fixes.

	        * docs/web/beastdefs.doxi: new file, containing semantic
	        markup definitions.

	        * docs/web/webmenu.doxi: new file, containing website
	        navigation markup.

	svn path=/trunk/; revision=3396

2005-12-19  Tim Janik 	# 13c986e0ae5a7aeaa31081ac835dedc869c0d13e

	get rid of --enable-devel-rules, only build documentation if

	Mon Dec 19 01:56:45 2005  Tim Janik  <timj@gtk.org>

	        * autogen.sh:
	        * configure.in: get rid of --enable-devel-rules, only build
	        documentation if --enable-maintainer-mode was specified.
	        make missing texitheque a warning, not an error.
	        added python2.4 dependency.

	svn path=/trunk/; revision=3395

2005-12-10  Tim Janik 	# 82985db7722fae97ceb29dcbfbc4d66dbfd8f8e8

	renamed to docs/web/*.doxi.

	Sat Dec 10 18:42:50 2005  Tim Janik  <timj@gtk.org>

	        * docs/web/*.texi: renamed to docs/web/*.doxi.

	svn path=/trunk/; revision=3394

2005-12-10  Tim Janik 	# f2592b369b14b50491fb70521d519c69001af978

	CVS copied these files from docs/site-*.

	Sat Dec 10 18:34:41 2005  Tim Janik  <timj@gtk.org>

	        * docs/web/about.texi:
	        * docs/web/contact.texi:
	        * docs/web/development.texi:
	        * docs/web/documentation.texi:
	        * docs/web/download.texi:
	        * docs/web/historic.texi:
	        * docs/web/news.texi:
	        * docs/web/oldnews.texi:
	        * docs/web/related-links.texi:
	        * docs/web/resources.texi:
	        * docs/web/search.texi:
	        * docs/web/sound-browser.texi:
	        * docs/web/sound-upload.texi:
	        * docs/web/synthesis-links.texi:
	        * docs/web/wiki.texi: CVS copied these files from docs/site-*.

	svn path=/trunk/; revision=3393

2005-12-10  Tim Janik 	# 3c2e7d062ee4570bb94a7b9707f5600f9ba7db29

	add whishlist items

	svn path=/trunk/; revision=3392

2005-12-04  Stefan Westerfeld 	# 5b9cd57b95533ddbcfc9f69d71d5bccf125c2f50

	.cvsignore

	svn path=/trunk/; revision=3391

2005-12-04  Stefan Westerfeld 	# 77dec29a56531d912f71dd3366115686362f4d5d

	Added new directory for bse related tests.

	Sun Dec  4 18:07:03 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in:
		* tests/Makefile.am tests/bse/Makefile.am: Added new directory for bse
		related tests.

		* tests/bse/loophandle.c: Copied implementation of the "old" bse loop
		handle to this file (called LoopHandleReference here), and compare its
		output with the output of bse loop handle itself. This is useful
		because the next thing I'll add is a new loop handle implementation
		for bse.

	svn path=/trunk/; revision=3390

2005-12-01  Stefan Westerfeld 	# 911c732c882249279a53c528a674fafc4864effa

	Initial implementation of bsewavetool export command, which can be used to

	Thu Dec  1 16:43:07 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Initial implementation of bsewavetool export
		command, which can be used to export chunks from a bsewave to wav
		files.

	svn path=/trunk/; revision=3389

2005-12-01  Stefan Westerfeld 	# eae09c47de2e2599ea24c07ca546c22c6533cef6

	updates

	svn path=/trunk/; revision=3388

2005-12-01  Stefan Westerfeld 	# ca267d5492aad8506151c91acbdc7c8fb86980d0

	Added new argument to gsl_filter_fir_approx, to enable interpolation not

	Thu Nov 17 18:10:56 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslfilter.[hc]: Added new argument to gsl_filter_fir_approx, to
		enable interpolation not "value linear" between the values in the
		transfer functions, but "dB linear".

		* tests/mathtests.c: Changed due to gsl_filter_fir_approx API change.

	svn path=/trunk/; revision=3387

2005-12-01  Stefan Westerfeld 	# 8a3c1f9d7c3d59530e49312f8355eb7690bfc666

	Added highpass command based on a FIR filter. Currently, normalization

	Thu Dec  1 13:17:34 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsewavetool.cc: Added highpass command based on a FIR filter.
		Currently, normalization seems to be still broken.

		* tools/bseloopfuncs.c: Implemented gsl_loop_highpass_handle.

	svn path=/trunk/; revision=3386

2005-11-30  Tim Janik 	# 3e8c13a5f7f206467b2e4804b5a8b661ab3e9917

	added auto looper totods otgether with stefan

	svn path=/trunk/; revision=3385

2005-11-30  Tim Janik 	# 238364fde94448c992222edc8f176aeb07b88ee6

	more items

	svn path=/trunk/; revision=3384

2005-11-17  Stefan Westerfeld 	# 8287405ee5b68d90b724380a6ff7ed4f42e80e8a

	Started implementing a FIR filter, which can be used to make high

	Thu Nov 17 18:51:32 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bseloopfuncs.[hc]: Started implementing a FIR filter, which
		can be used to make high frequencies "more important" in the overall
		loop score.

	svn path=/trunk/; revision=3383

2005-11-16  Stefan Westerfeld 	# d4e985366087a32e7a2cb9e55c1d91f3ff35b099

	Fixed score normalization to a per-sample error. Adapted the "premature

	Wed Nov 16 19:51:39 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bseloopfuncs.c (gsl_data_find_loop5): Fixed score
		normalization to a per-sample error. Adapted the "premature abort
		score" for the headloop/tailloop functions accordingly.

	svn path=/trunk/; revision=3382

2005-11-16  Tim Janik 	# 75f02003524779a91a9b5793c588cc978643eb01

	disable docu build system.

	Wed Nov 16 19:36:59 2005  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: disable docu build system.

	        * tools/bseloopfuncs.c (gsl_data_find_loop5): adjust frame size to
	        roughly 10ms.

	Wed Nov 16 00:01:12 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: loop through chunks in ascending order in the
	        loop finder.

	svn path=/trunk/; revision=3381

2005-11-15  Tim Janik 	# 3ed4dbe9850b1efbf7f26ee846c673c4911e66cb

	fixed loop bounds calculations to properly account for frame lengths.

	Tue Nov 15 21:59:52 2005  Tim Janik  <timj@gtk.org>

	        * tools/bseloopfuncs.c (gsl_data_find_loop5): fixed loop bounds
	        calculations to properly account for frame lengths. fixed premature
	        loop aborts (was buggy due to load balancing in the inner loop).
	        fixed accomplished with assitence of stefan.

	        * tools/bseloopfuncs.h: properly document loop5.

	svn path=/trunk/; revision=3380

2005-11-15  Stefan Westerfeld 	# 3b404d8b31cc321dd3afdcbee82b7483f8df8c72

	Added functions bse-proxy-is-null? and bse-proxy-get-null, to deal with

	Tue Nov 15 19:58:00 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsescminterp.c: Added functions bse-proxy-is-null? and
		bse-proxy-get-null, to deal with SfiProxy values for a NULL proxy.
		Removed obsolete functions bse-is-null and bse-null-proxy?.

		* tools/bseloopfuncs.[hc]: Provide the necessary API to export a
		number of score details which the loop code used to determine the
		overall loop score.

		* tools/bsewavetool.cc: Use loop5 instead of loop1 as loop algorithm;
		store loop algorithm, score and score details within the resulting
		looped sample.
		Implemented a new "thinout" command, which reduces the number of
		chunks in an instrument. An error criterium is used to determine
		removing (and keeping) which chunks results in an "optimal" chunk
		subset. Currently, this error criterium is based mainly on the loop
		score, but it remains to be seen whether this will be appropriate for
		our use case.
		There are two implemented optimization algorithms to actually find the
		"optimal" subset: a simple greedy algorithm, which is fast, and a
		slower but better genetic algorithm.

	svn path=/trunk/; revision=3379

2005-11-10  Tim Janik 	# 80e53801ac73017cd3cb5513bf99fa6c3f3a0222

	commit test

	svn path=/trunk/; revision=3378

2005-11-02  Sam Hocevar 	# e6e1698da3666798676e2b28cea0ab7282a06da5

	Updated Debian build files.

	 * debian/postinst:
	   + Setuid the wrapper binaries.
	 * debian/control:
	   + Recommend bse-alsa which is a far better output driver.
	   + Build-depend on gettext because of the patched de.po file.
	 * debian/rules:
	   + Set the XPM icon size to 32x32 as per policy instead of 48x48.

	svn path=/trunk/; revision=3377

2005-11-01  Sam Hocevar 	# 906a4a7c0b7e20c9873a1fa83125ad319b7b5c01

	updated Debian build rules to match latest upload. Removed Debian-specific

	  * debian/*: updated Debian build rules to match latest upload.
	  * Removed Debian-specific manpages that now have upstream versions.

	svn path=/trunk/; revision=3376

2005-10-30  Stefan Westerfeld 	# 7d391ff77328a868e840836b1fd5729dd63ef713

	Compile bse loop functions into bsewavetool.

	Sun Oct 30 19:14:22 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/Makefile.am: Compile bse loop functions into bsewavetool.

		* tools/bseloopfuncs.c: Error codes are nowerdays defined in bse
		namespace.

		* tools/bsewavetool.cc: Implemented loop command.

	svn path=/trunk/; revision=3375

2005-10-30  Tim Janik 	# 544e0523ad54939aa2d3d44aed1adc342a2a90c5

	comment fixup

	svn path=/trunk/; revision=3374

2005-10-29  Tim Janik 	# e61977e154d4cf793cae3bf9359ed96ad0bade38

	loopfinder items

	svn path=/trunk/; revision=3373

2005-10-29  Stefan Westerfeld 	# 5050b4f739df89c45be3c35a00fcf37ab393ba50

	Add win32 section.

	svn path=/trunk/; revision=3372

2005-08-29  Jens Seidel 	# 9c33919c0b152ab3638156cc8b2260d81028c3ec

	Typo corrections

	svn path=/trunk/; revision=3371

2005-08-21  Tim Janik 	# 8badc42e4f1fb655bb29cc776cd17fa20b80153f

	updates

	svn path=/trunk/; revision=3370

2005-08-16  Stefan Westerfeld 	# e69336b931c38af5ed387289954f345186b56522

	fixed typo

	svn path=/trunk/; revision=3369

2005-08-12  Stefan Westerfeld 	# c76b37fec0c2aae549aa24b9e26cde04bcee90db

	updates

	svn path=/trunk/; revision=3368

2005-08-11  Tim Janik 	# 84a19cdb1753d5c5e07c897fa9a129450f0921cb

	extended libguile check to check for guile-1.6 header files being in

	Thu Aug 11 22:41:23 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: extended libguile check to check for guile-1.6 header
	        files being in place.

	svn path=/trunk/; revision=3367

2005-08-09  Stefan Westerfeld 	# a8841050d084eeb31bb1a5409e866ba4c312f765

	Implemented --focus-center and --focus-width options. They can be used to

	Tue Aug  9 16:12:00 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Implemented --focus-center and --focus-width
		options. They can be used to extract features from a part of the
		signal only. Small documentation fixes.

	svn path=/trunk/; revision=3366

2005-08-08  Stefan Westerfeld 	# 5310dd76793b47c908333676811ba38c72633062

	Implemented --volume, --volume-smear and --volume-wobble, which work

	Mon Aug  8 13:36:27 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Implemented --volume, --volume-smear and
		--volume-wobble, which work pretty much like the pitch detector, but
		are based on the volume (absolute value of the analytic signal from
		hilbert filter).
		These features should be usable to detect the characteristics of a
		tremolo.

	svn path=/trunk/; revision=3365

2005-08-07  Stefan Westerfeld 	# fc9e7f9e25aa938617f1e00b5aaf7cc079988b40

	Implemented --base-freq-smear and --base-freq-wobble to represent

	Sun Aug  7 18:15:55 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Implemented --base-freq-smear and
		--base-freq-wobble to represent inaccuracy and rate of change for the
		pitch detector. These should be usable to detect the characteristics
		of a vibrato.
		Changed documentation to refer to the --base-freq* options as "pitch"
		related (instead of the old term: "keynote").

	svn path=/trunk/; revision=3364

2005-08-07  Stefan Westerfeld 	# 182f9992a0d0dae96cbbaa08de952b797db3e276

	To improve reliability and accuracy of the pitch detection, the user can

	Sun Aug  7 14:32:03 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: To improve reliability and accuracy of the
		pitch detection, the user can now specify the expected base frequency.
		Specifying this hint is recommended whenever the base frequency is
		known, and only secondary features which depend on the base frequency,
		such as vibrato features, should be detected.

	svn path=/trunk/; revision=3363

2005-08-02  Stefan Westerfeld 	# 47302130b1a1e09083a9d6b2d24aac7dffb7813b

	Added initial implementation for --base-freq, a base frequency finder (or

	Tue Aug  2 18:22:07 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added initial implementation for --base-freq,
		a base frequency finder (or as the help text describes the feature:
		detect keynote of a signal). The algorithm uses a complex signal
		generated by a hilbert filter.
		To see the complex signal that is being used, I also added
		--complex-signal, that is similar to --raw-signal.

	svn path=/trunk/; revision=3362

2005-08-01  Stefan Westerfeld 	# 2266876cbb15f4f6c00ef051c7209ab691d72f82

	Introduced --silence-threshold option, which can be used to customize

	Mon Aug  1 21:27:24 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Introduced --silence-threshold option, which
		can be used to customize zerocutting. Another new feature is
		--raw-signal, which just prints out the individual sample values.
		This is useful for using another program (i.e. gnuplot) to process
		sample data.

	svn path=/trunk/; revision=3361

2005-08-01  Vincent van Adrighem 	# 43ce4dc78d8711f4f90c282ffffaa8f8331da4c7

	Translation updated.

	2005-08-01  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated.

	svn path=/trunk/; revision=3360

2005-08-01  Vincent van Adrighem 	# 11414416995d20f17fa9a49f2f176477cae87bce

	Changed encoding from ISO-8859 to UTF-8 with iconv

	svn path=/trunk/; revision=3359

2005-07-31  Tim Janik 	# 39b93b63e679898fb74e07a782664815573c2e7a

	added some documentation.

	Sun Jul 31 16:11:13 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkradget.c: added some documentation.

	svn path=/trunk/; revision=3358

2005-07-30  Francisco Javier F. Serrador 	# ca0675b9a4c0e0ca31296590ce48d2b945db4385

	Updated Spanish translation.

	2005-07-30  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3357

2005-07-29  Tim Janik 	# 7507f8d9533de70f076920dfb7ec1b30eb06c046

	updated bsefextract todos

	svn path=/trunk/; revision=3356

2005-07-28  Tim Janik 	# 213dd78efda57e4ca023c1bd33ab1e7e085b6299

	fix spaces

	svn path=/trunk/; revision=3355

2005-07-28  Stefan Westerfeld 	# 10c8e189fafec175ae20345474840799439e55f5

	License reverted to LGPL since the code is not really "based on"

	Thu Jul 28 14:13:50 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: License reverted to LGPL since the code
		is not really "based on" Timidity++.

	svn path=/trunk/; revision=3354

2005-07-28  Tim Janik 	# 633224867e59acd754bd28c7a96cfb485afc73b2

	updates, link to rapicorn

	svn path=/trunk/; revision=3353

2005-07-28  Tim Janik 	# 322d94d18bdbb331713ee73acc72974421dc8736

	wave chunk lookups currently are done with a hardcoded velocity of 1.

	Wed Jun 22 23:12:00 2005  Tim Janik  <timj@gtk.org>

	        * standardguspatchenvelope.cc: wave chunk lookups currently are done
	        with a hardcoded velocity of 1.

	svn path=/trunk/; revision=3352

2005-07-28  Tim Janik 	# e62c84b499c77760c2ab2239778a688852299be6

	bse_icon_from_pixdata(): fixed overrun checks.

	Sat Jul 23 17:04:06 2005  Tim Janik  <timj@gtk.org>

	        * bseutils.c:
	        bse_icon_from_pixdata(): fixed overrun checks.

	Wed Jun 22 23:12:00 2005  Tim Janik  <timj@gtk.org>

	        * bseamplifier.cc: changed exponential volume curve from qcircle2 (which
	        aparently was false, compared to other exponential volume amplifiers) to
	        bse_approx_qcircle4().

	        * bse/bsewave.h, bse/bsewave.c: allow velocity dependent wave index
	        lookups, seperate osc_freq and velocity values used for lookups from
	        GslWaveChunk. adapted related code portions.

	        * gslwaveosc.c: wave chunk lookups currently are done with a hardcoded
	        velocity of 1.

	svn path=/trunk/; revision=3351

2005-07-26  Jordi Mallach 	# 25e8c5ae5d94e72a6fd2e131fb2f90ea1cf44fd8

	Updated Catalan translation by Gil Forcada.

	svn path=/trunk/; revision=3350

2005-07-16  Pawan Chitrakar 	# feaf0920871989e7517d43eef3ca918e9fb3e5af

	Nepali Translation Added

	svn path=/trunk/; revision=3349

2005-07-13  Francisco Javier F. Serrador 	# 81627bfd2dc3c5df294c719878db7a2792749af5

	Updated Spanish translation.

	2005-07-13  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3348

2005-07-10  Miloslav Trmac 	# 2da65ae1d7c0f4b5da7cee516a5e3d24e2eb4818

	Update Czech translation

	svn path=/trunk/; revision=3347

2005-07-08  Josep Puigdemont i Casamajó 	# 88bd130ce47e377b8ce9dd68cef43dbf1b40651b

	Updated Catalan translation.

	svn path=/trunk/; revision=3346

2005-07-08  Stefan Westerfeld 	# 16f062627026c4831ec06035b6224fd4afc38fa7

	updates

	svn path=/trunk/; revision=3345

2005-07-04  Hendrik Richter 	# 5cbdca8d5124440ea489d910688cea651bbfad30

	Fixed German translation by Jens Seidel <jensseidel@users.sf.net>.

	2005-07-04  Hendrik Richter  <hendi@gnome-de.org>

		* de.po: Fixed German translation by
		Jens Seidel <jensseidel@users.sf.net>.

	svn path=/trunk/; revision=3344

2005-07-03  Tim Janik 	# 633d7c73ff8302c03583c52eceb42eb940253ede

	translation updates from Petrecca Michele <petrecca@interfree.it>.

	Sun Jul  3 13:14:12 2005  Tim Janik  <timj@gtk.org>

	        * it.po: translation updates from
	        Petrecca Michele <petrecca@interfree.it>.

	svn path=/trunk/; revision=3343

2005-06-23  Adam Weinberger 	# c46846b09801cab700afeaa318d7c80cd8a79b83

	Updated Canadian English translation.

	2005-06-23  Adam Weinberger  <adamw@gnome.org>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3342

2005-06-22  Tim Janik 	# b380545e694075d3df3342a03c7da9ee86b63479

	translator updates.

	svn path=/trunk/; revision=3341

2005-06-22  Tim Janik 	# 8182508125b729ab08db2fcadc8b97ed0f1de6f4

	fix string typos, reported by Hendrik Richter <hendi@gnome-de.org>.

	svn path=/trunk/; revision=3340

2005-06-17  Hendrik Richter 	# 24465d3c5fab9e46f3a0f4805c362d4001e90beb

	Updated German translation.

	2005-06-17  Hendrik Richter  <hendi@gnome-de.org>

		* de.po: Updated German translation.

	svn path=/trunk/; revision=3339

2005-06-15  Stefan Westerfeld 	# d73acfb3bd869f702fee0ba6532bd33e0429a184

	License clarification: as I wrote the code by looking at timidity's code,

	Wed Jun 15 19:18:46 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: License clarification: as I wrote the
		code by looking at timidity's code, it is GPL (like timidity), not
		LGPL.

	svn path=/trunk/; revision=3338

2005-06-15  Stefan Westerfeld 	# 8720286d27706026b1986f0bbdff245f33504022

	Improvements in envelope rate handling, which make the envelope sound more

	Wed Jun 15 19:12:34 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: Improvements in envelope rate handling,
		which make the envelope sound more like timidity.
		If there is no envelope in the GUS patch, then pass sample data
		literally.

	svn path=/trunk/; revision=3337

2005-06-15  Tim Janik 	# fb6c0d7dbe29bf101c18d6a5e95b4888814e8b4b

	*** empty log message ***

	svn path=/trunk/; revision=3336

2005-06-14  Tim Janik 	# 66c9d2d7c1542496d80d3a7a8c130e0a0cc7b142

	minor fix

	svn path=/trunk/; revision=3335

2005-06-06  Stefan Westerfeld 	# cbf1cb10a63f791849136e25af1bb3669e17b31a

	Fix initialization bugs: added a constructor to initialize some members

	Mon Jun  6 17:54:22 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: Fix initialization bugs: added a
		constructor to initialize some members variables, and properly
		initialize others upon reset().
		Added support for the retrigger input signal (though currently this is
		not necessary, as the current midi code will never retrigger a voice
		within a block; only block boundary retrigger in combination with
		reset() is used).

	svn path=/trunk/; revision=3334

2005-06-04  Francisco Javier F. Serrador 	# 7387fe0324c255082032a52f9655c76c9bece198

	Updated Spanish translation.

	2005-06-04  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3333

2005-05-29  Miloslav Trmac 	# 432e1ee8dc9742af2c8caf54b0b385c80d1d78ea

	Update Czech translation

	svn path=/trunk/; revision=3332

2005-05-27  Tim Janik 	# 42c26ac318972ad31d380090f575ac19f15a81fe

	updates

	svn path=/trunk/; revision=3331

2005-05-26  Tim Janik 	# e72ab68ebb2ed235000b298d10dafb1c4b9f1c09

	re-add missing translation strings from scm files.

	Thu May 26 20:07:04 2005  Tim Janik  <timj@gtk.org>

	        * *.po: re-add missing translation strings from scm files.

	svn path=/trunk/; revision=3330

2005-05-26  Tim Janik 	# 36c0ae9b981dee90d3744b8cedf94cf28a3a8bfa

	release announcement

	svn path=/trunk/; revision=3329

2005-05-26  Francisco Javier F. Serrador 	# 94c72b760efd2d73ee6dcc70ecb3c6d5b77968ce

	Updated Spanish translation.

	2005-05-26  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3328

2005-05-26  Adam Weinberger 	# e338b8e95b17b53b794175a13a6c6d19b60e635d

	Updated Canadian English translation.

	2005-05-26  Adam Weinberger  <adamw@gnome.org>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3327

2005-05-25  Tim Janik 	# 19b2209e5a29ee800a0dbb9a30d9580b868d4ffe

	updates

	svn path=/trunk/; revision=3325

2005-05-25  Tim Janik 	# c59ef7f5f5d2598824dcab6622c7872db59f476d

	released beast 0.6.6.

	Wed May 25 23:28:22 2005  Tim Janik  <timj@gtk.org>

	        * released beast 0.6.6.

	svn path=/trunk/; revision=3324

2005-05-25  Tim Janik 	# a39cd4c90a2e6f5a6a613bb2154f4f34c78710a2

	released bse-portaudio 0.6.6.

	Wed May 25 23:30:43 2005  Tim Janik  <timj@gtk.org>

	        * released bse-portaudio 0.6.6.

	svn path=/trunk/; revision=3323

2005-05-25  Tim Janik 	# 1e5e2281b989129ce8d4a45a53a5a0f054e300cd

	release bse-alsa 0.6.6.

	Wed May 25 23:30:03 2005  Tim Janik  <timj@gtk.org>

	        * release bse-alsa 0.6.6.

	svn path=/trunk/; revision=3322

2005-05-25  Tim Janik 	# 842346b900115e249cdcb8ad069024da18c77228

	gcc-3.4 produces segfaulting code intentionally for funciton casts it

	Wed May 25 22:46:07 2005  Tim Janik  <timj@gtk.org>

	        * sfithreads.h: gcc-3.4 produces segfaulting code intentionally for
	        funciton casts it doesn't like (eventhough the *casting* programmer
	        should know better). so, cast all function pointers to (void*) before
	        casting them to the target type, which effectively makes gcc blind.

	svn path=/trunk/; revision=3321

2005-05-25  Tim Janik 	# de89263fc8113987f9494066482dadb2f5629d23

	updates

	svn path=/trunk/; revision=3320

2005-05-25  Tim Janik 	# 5c203cc66e6151e281fc9a8019ea55e11cd6f773

	version 0.6.6, interface age 0, binary age 0.

	Wed May 25 21:51:16 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: version 0.6.6, interface age 0, binary age 0.

	        * library/scripts/record-midi.scm: convert MIDI event timming to
	        song ticks when adding notes.

	svn path=/trunk/; revision=3319

2005-05-25  Tim Janik 	# 739fb02c51d3060c92b35ce515f59d3883a4fbfe

	added stamp_ticks to record SongTiming.

	Wed May 25 21:48:22 2005  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: added stamp_ticks to record SongTiming.

	        * bsesong.c: fill in stamp_ticks field of BseSongTiming struct.

	        * bsejanitor.c: added ::shutdown signal, similar to the old ::closed
	        signal, but signals the start of connection take down, so the connection
	        doesn't have to be closed.

	        * bseserver.proc: use BseJanitor::shutdown for script registration.

	svn path=/trunk/; revision=3318

2005-05-25  Tim Janik 	# ee0eed133aea2f92e5f6b7e05faaa779850614bc

	updates

	svn path=/trunk/; revision=3317

2005-05-25  Tim Janik 	# bcd5fe25df778b14696418198366a9817e10ab1a

	updated according to API changes sine 2002.

	Mon May 23 19:37:50 2005  Tim Janik  <timj@gtk.org>

	        * library/scripts/record-midi.scm: updated according to API changes
	        sine 2002.

	        * library/scripts/Makefile.am: install record-midi.scm.

	        * beast-gtk/bstusermessage.c: display janitor status messages.

	svn path=/trunk/; revision=3316

2005-05-25  Tim Janik 	# 8322a306d3335da70fb3754a822bec29cf3a5c61

	added MidiChannelEventType and MidiChannelEvent to export midi events.

	Mon May 23 19:37:50 2005  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: added MidiChannelEventType and MidiChannelEvent to export
	        midi events.

	        * bseproject.h, bseproject.c, bseproject.proc: allow fetching a projects
	        midi notifier.

	        * bsejanitor.[hc]: removed user-msg* properties and added status
	        message string property. removed ::close signal (which was unused and
	        stopped to provide proper notification).

	        * bsejanitor.proc: removed msg type from bse-script-set-status.

	        * bsemidireceiver.hh, bsemidireceiver.cc: removed notifier getter.
	        notify events in the correct order. properly wake up midi notifiers.

	        * bsemidinotifier.[hc]: emit notification about MIDI events, using a
	        MidiChannelEvent structure.

	        * bsemidievent.c: removed cruft.

	        * bseserver.c: setup midi notifier main loop source.

	        * bseglue.[hc]: removed rorecord and rosequence type registration
	        which were now unused.

	svn path=/trunk/; revision=3315

2005-05-25  Tim Janik 	# e88ecd7e58132af77d16712f8d7c599655312c7d

	add missing files

	svn path=/trunk/; revision=3314

2005-05-23  Adam Weinberger 	# cf003809ff7ffc52afd63bbf6dc492893abcad1c

	Updated Canadian English translation.

	2005-05-23  Adam Weinberger  <adamw@gnome.org>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3313

2005-05-23  Tim Janik 	# 4958fc20ab88125261f69849902998a7c2fbf6ca

	update cs.po which was missing scm strings.

	Mon May 23 02:37:17 2005  Tim Janik  <timj@gtk.org>

	        * cs.po: update cs.po which was missing scm strings.

	svn path=/trunk/; revision=3312

2005-05-22  Miloslav Trmac 	# 8024d8127021ccdac110b9ee5a02784ec62e3f72

	Update Czech translation

	svn path=/trunk/; revision=3311

2005-05-21  Tim Janik 	# 66392fb909ea95cac26ad8deb5c7fc6f0261003c

	silence server verbosity

	svn path=/trunk/; revision=3310

2005-05-21  Tim Janik 	# f458905d70cf5eb4655c8116166e25c22ba6781c

	don't center normal description text.

	Sat May 21 02:38:37 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c: don't center normal description text.

	        * library/scripts/modules2grid.scm:
	        * library/scripts/mixer-splitup-by-track.scm: message fixups.

	        * shell/bse-scm-glue.boot: really translate strings with the
	        functions _, U_ and Q_ (the context is stripped from the untranslated
	        string for the latter).

	        * shell/bsescminterp.h, shell/bsescminterp.c:
	        implemented bse_scm_gettext() and bse_scm_gettext_q().

	        * shell/bsesh.c: initialize translation domains, so translations
	        with bse_gettext() actually work.

	svn path=/trunk/; revision=3309

2005-05-21  Tim Janik 	# f249955b2eb0e8c7e19fe056a10b453b9648bdd4

	introduced bse_init_textdomain_only(), which is used internally and is

	Sat May 21 02:39:14 2005  Tim Janik  <timj@gtk.org>

	        * bsemain.[hc]: introduced bse_init_textdomain_only(), which is used
	        internally and is usefull for programs like bsesh.

	        * bsescripthelper.c: translate script blurb and script parameter names
	        which are not translated by the scripts themselves. the reason is that
	        scripts shouldn't translate any strings during procedure registration
	        phase (only markup for translation). this allowes us to generate
	        reliable keywords for parameter names and procedure categories from
	        the english names, and provide the translated version by deferred
	        translation.

	svn path=/trunk/; revision=3308

2005-05-21  Tim Janik 	# fc1eb6e5d8b30bdc207a61aee43560441be8ee0e

	call ../intltool-update, so we're really updating with the correct

	Sat May 21 02:45:50 2005  Tim Janik  <timj@gtk.org>

	        * po/update.sh: call ../intltool-update, so we're really updating
	        with the correct intltool-version (the patched one that ships with
	        beast and can parse gettext/scm-funcs).

	        * de.po: translation updates.

	svn path=/trunk/; revision=3307

2005-05-20  Tim Janik 	# 933b457bfe12d42af713b6c3b41169493f93d9e1

	merge with strings extracted from .scm files with gettext/scm-funcs.

	svn path=/trunk/; revision=3306

2005-05-20  Tim Janik 	# dea0606a164c3b5baf4299329400e79152e22db3

	added .scm scripts with type gettext/scm-funcs, so these currently need a

	Sat May 21 00:26:15 2005  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: added .scm scripts with type gettext/scm-funcs, so these
	        currently need a hacked intltool-extract that can handle gettext/scm-funcs.

	svn path=/trunk/; revision=3305

2005-05-20  Tim Janik 	# 0dde3bd011ae0f6bbce2fbf11ce9f0583d769423

	slight message fixup

	svn path=/trunk/; revision=3304

2005-05-20  Tim Janik 	# a618a97a92604363a7c987084868820033e9683b

	fixed save/discard/cancel btton order for close-dirty-project dialog. this

	Fri May 20 18:39:17 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_handle_delete_event):
	        fixed save/discard/cancel btton order for close-dirty-project dialog.
	        this matches mozilla and open-ofice and puts the most destructive
	        option in the middle (the spot "hardest" to navigate to).

	svn path=/trunk/; revision=3303

2005-05-20  Tim Janik 	# bc559ccec6a17ec00969e8e78dc034463fda38d9

	added discard-changes and save-changes choices to the close-dirty-project

	Fri May 20 18:32:13 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: added discard-changes and save-changes choices to
	        the close-dirty-project message dialog.
	        save or discard data accordingly.

	        * beast-gtk/bstusermessage.c, beast-gtk/bstusermessage.c:
	        allow choice widgets to be added to message dialogs popped up with
	        bst_message_bit_appoint(). return the id of the selected choice.

	svn path=/trunk/; revision=3302

2005-05-20  Tim Janik 	# 781dfc8c72188839f3c612c89a68cfedeba69431

	changed procedure dialog title.

	Fri May 20 17:17:21 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c: changed procedure dialog title.

	        * beast-gtk/bstbseutils.c:
	        * beast-gtk/bstapp.c: renamed automatic script arguments to "song",
	        "wave-repo", "synth-net" and "custom-synth".

	        * beast-gtk/bstbseutils.[hc]: added bst_procedure_get_title().

	svn path=/trunk/; revision=3301

2005-05-20  Tim Janik 	# 8de3370ff5bcb38f01c163a5d455b4f601a7df31

	remove debugging messages

	svn path=/trunk/; revision=3300

2005-05-20  Tim Janik 	# a12a13331cdaae92272619db52041c5009ab0359

	added translation markup, fixed error messages.

	Fri May 20 16:38:31 2005  Tim Janik  <timj@gtk.org>

	        * library/scripts/*.scm: added translation markup, fixed error messages.

	        * shell/bse-scm-glue.boot: define (N_) and (Q_) translation markup
	        functions. added (bse-exit-error) for convenience.

	        * beast-gtk/bstusermessage.c: fixed default config_check to actually
	        take effect. handle empty messages strings.

	        * beast-gtk/bstsnetrouter.c: auto fill sciprt parameter synth-net.

	svn path=/trunk/; revision=3299

2005-05-20  Tim Janik 	# 5a8253f8e48050c782cdbc04c84810c2d35b31bb

	removed bstdebugkeys.defs and build rule.

	Fri May 20 14:06:01 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: removed bstdebugkeys.defs and build rule.

	        * beast-gtk/bstapp.c: added menu items to popup demo dialogs for
	        --devel mode.
	        (app_action_check): don't invoke procedures on 0 project.

	        * beast-gtk/bstmain.c: use bst_message_list_types() to display
	        debugging keys.

	        * beast-gtk/bstusermessage.h:
	        * beast-gtk/bstusermessage.c: improved fatal error title. prefix
	        primary text with message type for errors. adapted primary vs.
	        secondary text display styles once more. allow configuration of
	        all info, diag and debugging message dialogs.
	        (bst_message_list_types): list all message types, sorted
	        by identifier name.

	        * beast-gtk/dialogs/radgets-beast.xml: append demo dialog menu items
	        to the /Demo menu.

	        * beast-gtk/bstutils.h, beast-gtk/bstutils.c:
	        removed _bst_log_debug_keys().

	        * beast-gtk/gxk/gxkaction.c: slight rename.

	        * shell/bse-scm-glue.boot: define (bse-exit-message) to conveniently
	        leave a message and exit at once.

	svn path=/trunk/; revision=3298

2005-05-20  Tim Janik 	# b403e169bb5219546210599c7a222c87ae09672a

	disable debugging message that log every communication bit. these are of

	Fri May 20 14:12:19 2005  Tim Janik  <timj@gtk.org>

	        * sficomport.c: disable debugging message that log every
	        communication bit. these are of not much use really and hide
	        the sensible debugging messages.

	        * sfilog.c: don't let the message type label default to ident if
	        NULL is specified. callers of sfi_msg_type_label() can handle NULLs.
	        key_list_change(): allow key seperation by ',' and ignore spaces.

	svn path=/trunk/; revision=3297

2005-05-20  Tim Janik 	# f692a231b4645e5b5d46698608e16e81e915d2dd

	when registering new debugging message types, clone the configuration of SFI_MSG_DEBUG, so per default output is disabled, but once enabled, it goes to stderr.

	svn path=/trunk/; revision=3296

2005-05-19  Tim Janik 	# 9ee71c1e7c52595e859042ea9590f329c03f5be9

	adapted to janitor API changes. allow translatable string markup as (_

	Thu May 19 20:10:15 2005  Tim Janik  <timj@gtk.org>

	        * shell/bse-scm-glue.boot: adapted to janitor API changes.
	        allow translatable string markup as (_ "string1" "string2").

	        * shell/bsescminterp.h, shell/bsescminterp.c:
	        implemented (bse-script-message) with support for SfiMsgBit-style
	        message construction, on top of (bse-script-send-message).
	        (bse_scm_script_register): fixed argument list.

	        * shell/Makefile.am: upper case log domain.

	        * beast-gtk/bstusermessage.c: extract message dialog title from
	        procedure category if a script is the origin. adapt to message
	        API changes.

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstmain.c:
	        * tests/perftest.cc:
	        * tests/cxxbinding.cc:
	        * beast-gtk/testgui.c:
	        * tools/bsewavetool.cc: adapt to sfilog.h API changes.

	svn path=/trunk/; revision=3295

2005-05-19  Tim Janik 	# 1742ead1af2f28ec84a9a08a8579ac6118563b87

	renamed UserMsgType to MsgType and synced message types with SFI message

	Thu May 19 23:07:12 2005  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: renamed UserMsgType to MsgType and synced message types
	        with SFI message types. renamed UserMsg to Message. added message type
	        identifier and label to Message.

	        * bsejanitor.proc: removed janitor arg from script internal methods.
	        renamed script internal methods to bse-script- procedures. changed
	        message handling to not require a round trip (for janitor handle) and
	        to support all fields of BseMessage.

	        * bseserver.h, bseserver.c: print out messages emitted as ::message
	        signal via sfi_msg_default_handler().

	        * *.h, *.c: adapted to new message and debugging API.

	svn path=/trunk/; revision=3294

2005-05-19  Tim Janik 	# 995e04f7787ab4a94a3393348622d01b7a18a7d0

	major (and hopefully final) revamp of the message/logging API. got rid of

	Thu May 19 17:53:48 2005  Tim Janik  <timj@gtk.org>

	        * sfilog.h, sfilog.c:
	        major (and hopefully final) revamp of the message/logging API.
	        got rid of log message keys. instead, added mechanism to create
	        new message types. added globally accessible message type bitmask
	        to quickly figure whether logging is neccessary. moved the API to
	        SfiMessage and sfi_msg_* namespace.

	        * sfithreads.h: added wrapper macros (and auxillary functions) to
	        access atomic integers and atomic pointers in a typesafe way.

	        * *.c: adapted to new debugging API.

	svn path=/trunk/; revision=3293

2005-05-19  Tim Janik 	# 81eac33427affc2937bf7bb986466f966a55fbb8

	adapt to new debugging API

	svn path=/trunk/; revision=3292

2005-05-19  Tim Janik 	# cfecfff2072a65d99e4e8f4c3920851fdded10ca

	sfilog.h fixups

	svn path=/trunk/; revision=3291

2005-05-19  Adam Weinberger 	# b2c64c1f8db84a03659cd8caa269e28b4ec072c2

	Updated Canadian English translation.

	2005-05-19  Adam Weinberger  <adamw@gnome.org>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3290

2005-05-18  Francisco Javier F. Serrador 	# c13293382587caf1c718616019112e370f2c6015

	Updated Spanish translation.

	2005-05-18  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3289

2005-05-16  Tim Janik 	# 93a2f676f4f1a11b6f510cf21e41e2a9373b06da

	fixed 0 janitor access

	svn path=/trunk/; revision=3288

2005-05-16  Tim Janik 	# e61e8b3a4e26a51aac9e713447e6992288b036f2

	try early reaping of child. removed unneccessary ::notify::connected

	Mon May 16 21:01:35 2005  Tim Janik  <timj@gtk.org>

	        * bsejanitor.c: try early reaping of child. removed unneccessary
	        ::notify::connected notification.

	        * bseglue.c: use g_warning() for procedure invocation errors so
	        this can be properly traced in a debugger.

	svn path=/trunk/; revision=3287

2005-05-16  Tim Janik 	# e2e813303dc3491d9898bc7818d83c3a3af650f5

	added sfi_com_port_test_reap_child().

	Mon May 16 21:01:01 2005  Tim Janik  <timj@gtk.org>

	        * sficomport.h, sficomport.c: added sfi_com_port_test_reap_child().

	svn path=/trunk/; revision=3286

2005-05-16  Tim Janik 	# 383d7282a62db1a82ace44ae4531676ecda56f51

	include script name and procedure name when constructing message hashkey.

	Mon May 16 20:10:47 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstusermessage.c: include script name and procedure name
	        when constructing message hashkey. added janitor to BseMessage, make
	        use of additional message information supplied by janitor.

	        * beast-gtk/bstprocedure.c: fixed dialog title.

	        * beast-gtk/Makefile.am: changed log-domain to "BST".

	svn path=/trunk/; revision=3285

2005-05-16  Tim Janik 	# 99b211d654a5c23f13c916e687975e213f12f859

	added janitor to UserMsg.

	Mon May 16 20:12:51 2005  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: added janitor to UserMsg.

	        * bsemain.c: add janitor to user messages.

	        * bseserver.h, bseserver.c: made bse_server_user_message() reflect
	        (newly added) UserMsg fields.

	        * bsejanitor.proc: added (bse-janitor-message) to allow scripts to send
	        real error, warning etc. messages.

	svn path=/trunk/; revision=3284

2005-05-16  Tim Janik 	# cd83a3c80f0797299a1e623a33836f17862f920d

	API cleanups. define BstMessage and BstMsgType which are used as canonical

	Mon May 16 17:24:28 2005  Tim Janik  <timj@gtk.org>

	        * bstusermessage.h, bstusermessage.c: API cleanups. define BstMessage
	        and BstMsgType which are used as canonical message representation
	        internally now.
	        display details through a GtkLabel which doesn't have the size-request
	        problems of a scroll text. added bst_message_dialog_elist() to pop up
	        message dialogs.

	svn path=/trunk/; revision=3283

2005-05-16  Tim Janik 	# 008bf8477b717bd3098730204450f1f86c63ffc9

	added exit-code and exit-reason properties. logic cleanups so the exit

	Mon May 16 17:27:49 2005  Tim Janik  <timj@gtk.org>

	        * bsejanitor.h, bsejanitor.c, bsejanitor.proc:
	        added exit-code and exit-reason properties. logic cleanups so the
	        exit state is available for read outs once connected becomes FALSE.
	        API change so script_name and proc_name are always set together.

	svn path=/trunk/; revision=3282

2005-05-15  Tim Janik 	# 6b7849460ae8c7e164df74039356f33d0de7a988

	comment out toyprof usage

	svn path=/trunk/; revision=3281

2005-05-15  Tim Janik 	# 4d628260519fd084011012b50d6dbe85f684f7fd

	link against bse and sfi

	svn path=/trunk/; revision=3280

2005-05-15  Tim Janik 	# 785a778981b9ce12b2b60059ceb7db348ab4e549

	pass --no-undefined to the linker if devel rules are enabled and we're

	Sun May 15 16:21:13 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: pass --no-undefined to the linker if devel rules are
	        enabled and we're building without toyprof (toyprof uses _r_debug).

	svn path=/trunk/; revision=3279

2005-05-15  Tim Janik 	# af64c06b3793ad62dfea5a8ff5aa9944eb1f778c

	added --enable-toyprof option, defaulting to no.

	Sun May 15 15:51:13 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: added --enable-toyprof option, defaulting to no.

	svn path=/trunk/; revision=3278

2005-05-15  Tim Janik 	# 53dde0de8ae7ffa8c63691f9b04dc81339db2eb6

	compile toyprof conditionally.

	Sun May 15 15:52:18 2005  Tim Janik  <timj@gtk.org>

	        * Makefile.am: compile toyprof conditionally.

	svn path=/trunk/; revision=3277

2005-05-15  Tim Janik 	# 7f8a2c202469edf0fca9a25e5f14d9aa1b3732a0

	fix missing files

	svn path=/trunk/; revision=3276

2005-05-14  Tim Janik 	# d6182ef6e6b799cad4dadfb463ea9c86635eb2da

	minor API adaptions.

	Sat May 14 21:03:47 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstusermessage.c:
	        * tools/bsewavetool.cc: minor API adaptions.

	svn path=/trunk/; revision=3275

2005-05-14  Tim Janik 	# ced50076a6a8bcd5cd8296eda09804d00b77d36c

	improved error messages.

	Sat May 14 20:52:56 2005  Tim Janik  <timj@gtk.org>

	        * bseserver.c: improved error messages.

	        * bsedevice.c, bsedevice.h:
	        bse_device_set_opened(): enter OPEN state, stores device name.
	        device_open_args(): store device opening argument list, assert
	        bse_device_set_opened() is used.
	        bse_device_close(): cleanup device anme and device opening arguments.

	        * bseproject.proc: renamed bse-project-dirty to bse-project-is-dirty
	        to circumvent name coliisions in the C++ binding.

	        * bse*device-*.c: use bse_device_set_opened().

	        * *.c: adaptions to sfilog.h API changes.

	svn path=/trunk/; revision=3274

2005-05-14  Tim Janik 	# f9a199448d29fdddf960e615f113d8e34162c660

	cleanups. API cleanups and consolidations. allow custom log bits. renamed

	Sat May 14 20:49:59 2005  Tim Janik  <timj@gtk.org>

	        * sfilog.h, sfilog.c:
	        cleanups. API cleanups and consolidations. allow custom log bits.
	        renamed message types from SFI_LOG_* to SFI_MSG_*.

	svn path=/trunk/; revision=3273

2005-05-14  Tim Janik 	# e8887b45c1d5e26a7b6a7911ab9b8f12ce89078b

	use bse_device_set_opened().

	Sat May 14 20:47:52 2005  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c:
	        * bsemididevice-alsa.c: use bse_device_set_opened().

	        * configure.in: version upgrade to 0.6.6, use PACKAGE_ as variable
	        prefix instead of PKG_ to circumvent autoconf errors.

	svn path=/trunk/; revision=3272

2005-05-14  Tim Janik 	# 9baf1542612770ea342f70d0a1d11971b48f29eb

	fixed memory leaks if device opening failed. fixed error case handling all

	Sat May 14 19:30:36 2005  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-portaudio.cc (bse_pcm_device_port_audio_open): fixed
	        memory leaks if device opening failed. fixed error case handling all
	        over the place, return proper BSE errors. allow "default" as device
	        name. use bse_device_set_opened().

	svn path=/trunk/; revision=3271

2005-05-14  Tim Janik 	# a353b2513aa97c566c140e01aa865ebb592d9a19

	version upgrade to 0.6.6. use PACKAGE_ as variable prefix instead of PKG_

	Sat May 14 18:07:39 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: version upgrade to 0.6.6. use PACKAGE_ as variable
	        prefix instead of PKG_ which aparently produces problems for autoconf.

	svn path=/trunk/; revision=3270

2005-05-14  Tim Janik 	# ddc75d0228ea2557d1ea43a642b447c2fbe29b85

	fix indentation

	svn path=/trunk/; revision=3269

2005-05-13  Tim Janik 	# a1e509e7978b057f01502bb333062f1319a7bcf5

	attribute basque translator and fix basque translation link

	svn path=/trunk/; revision=3268

2005-05-13  Adam Weinberger 	# 5c5aae1cbd1981642a16567c0988816662226fcc

	Updated Canadian English translation.

	2005-05-13  Adam Weinberger  <adamw@gnome.org>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3267

2005-05-13  Tim Janik 	# 143894a1c7fe0126cc924960aaf673c88fff4f19

	apprximate ~n by n in ChangeLog so our doc tools can process it.

	svn path=/trunk/; revision=3266

2005-05-13  Tim Janik 	# b2c35e5235367e41f37304b767b077d8c33d9e2f

	eu.po translation updates

	svn path=/trunk/; revision=3265

2005-05-13  Iñaki Larrañaga 	# 77649d7bd09cc2d09d37b2c181279adcfb7a19d2

	Added "eu" (Basque) to ALL_LINGUAS.

	Fri May 13 11:51:00 2005  Iñaki Larrañaga  <dooteo@euskalgnu.org>

	        * configure.in: Added "eu" (Basque) to ALL_LINGUAS.

	svn path=/trunk/; revision=3264

2005-05-13  Iñaki Larrañaga 	# 597d8fb9bd119f1a6f8c54edf4632c96e3baa164

	Added Basque translation.

	2005-05-13  Iñaki Larrañaga  <dooteo@euskalgnu.org>

	        * eu.po:  Added Basque translation.

	svn path=/trunk/; revision=3263

2005-05-12  Miloslav Trmac 	# ef40a2de9fbd3e4dc4ac6aae01d9f0d5c80e68c9

	Updated Czech translation.

	2005-05-12  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=3262

2005-05-11  Tim Janik 	# 445415bb7c9c672097f005a67520727e095b4609

	issue a warning when closing the window of a dirty project and prevent

	Thu May 12 00:11:44 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: issue a warning when closing the window
	        of a dirty project and prevent window closing.

	        * beast-gtk/bstusermessage.c, beast-gtk/bstusermessage.h:
	        handle rich log messages properly.

	        * beast-gtk/gxk/gxkdialog.c: set the default widget also
	        as focus widget if none was specified. otheriwse the default
	        widget setting may not properly take effect.

	        * beast-gtk/gxk/gxkutils.h, beast-gtk/gxk/gxkutils.c:
	        added gxk_label_set_attributes(), based on
	        gimp_label_set_attributes().

	        * tools/bsewavetool.cc: adapt log message handler.

	svn path=/trunk/; revision=3261

2005-05-11  Tim Janik 	# a0ca6a21a25805f25da9a2be5a48d65a0e6d3466

	fix directory build order

	svn path=/trunk/; revision=3260

2005-05-11  Tim Janik 	# 50114a967d914d04fcbb5759d71ef9a6f5fd1890

	support emission of user mesage signal without constructing a user message

	Thu May 12 00:13:05 2005  Tim Janik  <timj@gtk.org>

	        * bseserver.h, bseserver.c: support emission of user mesage signal
	        without constructing a user message via bse_server_send_user_message().
	        turned log messages about failure during PCM and MIDI device selection
	        into rich log message with primary, secondary text and details.

	        * bsecore.idl: adapted UserMsg record according to SfiLogMessage.

	        * bsemain.h, bsemain.c: adapted log handler.

	svn path=/trunk/; revision=3259

2005-05-11  Tim Janik 	# f1dee2b4e996981e62fe33d19c3e8bffa467fce8

	made log message much richer. messages now carry a title, a primary, a

	Thu May 12 00:07:51 2005  Tim Janik  <timj@gtk.org>

	        * sfilog.h, sfilog.c: made log message much richer.
	        messages now carry a title, a primary, a secondary message and
	        details messages. added sfi_log_msg() and a set of log message
	        formating macros SFI_MSG_*() to facilitate rich log messages.

	svn path=/trunk/; revision=3258

2005-05-11  Tim Janik 	# bf41769cd9490b2e8317038e53412867fa57beb1

	properly handle "Save" case (as opposed to "Save As"). when saving,

	Wed May 11 14:55:44 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.h, beast-gtk/bstfiledialog.c:
	        properly handle "Save" case (as opposed to "Save As").
	        when saving, project files may be overwritten. don't pop
	        up file selection dialog if the project already was saved.
	        preserve fully-include-waves/store-references for projects.

	        * beast-gtk/bstbseutils.h, beast-gtk/bstbseutils.c:
	        allow to preserve filename when loading projects.

	        * beast-gtk/bstmain.c:
	        * beast-gtk/bstapp.c: adapt to new file handling API.

	svn path=/trunk/; revision=3257

2005-05-11  Tim Janik 	# 2f28fe03a3c576dc595daf401bb1ab157e86c660

	added change-name() to alter a project name without affecting undo.

	Wed May 11 15:01:28 2005  Tim Janik  <timj@gtk.org>

	        * bseproject.proc: added change-name() to alter a project name without
	        affecting undo.

	svn path=/trunk/; revision=3256

2005-05-09  Tim Janik 	# 5e66297f314ce76b552588f99782996b3fc925f4

	updates

	svn path=/trunk/; revision=3255

2005-05-09  Tim Janik 	# 54314e369fb80d3d9f6368a7511d14363f1c7dca

	added bst_file_dialog_save_project_update() to save projects without

	Mon May  9 21:07:06 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.h, beast-gtk/bstfiledialog.c:
	        added bst_file_dialog_save_project_update() to save projects
	        without file-name input dialog (not yet working).
	        reset project dirty state in bst_file_dialog_save_project().

	        * beast-gtk/bstapp.c: use different file dialog fucntions for /Save
	        vs. /Save As. toggle /Save sensitivity depending on project dirty state.

	svn path=/trunk/; revision=3254

2005-05-09  Tim Janik 	# 747a7717cc9b1f48d61923358df59846ab6840e7

	properly implemented project dirty state, based on the project's undo

	Mon May  9 21:05:02 2005  Tim Janik  <timj@gtk.org>

	        * bseproject.h, bseproject.c: properly implemented project dirty
	        state, based on the project's undo stack.

	        * bseproject.proc: added procedures to query and reset project
	        dirty state.

	        * bseundostack.h, bseundostack.c: implemented dirt counter plus
	        counter modification methods.

	svn path=/trunk/; revision=3253

2005-05-09  Tim Janik 	# 1cb7129b75c9ccc88a14d9e1b706a67524b6e6c6

	updates

	svn path=/trunk/; revision=3252

2005-05-09  Tim Janik 	# 7017b068ba4c9539b08cd7630547ef2115b16cd0

	fixed stupid bug that caused every second sample to be lost when saving.

	Mon May  9 18:24:00 2005  Tim Janik  <timj@gtk.org>

	        * bsewave.c (bse_wave_get_index_for_modules): fixed stupid bug that
	        caused every second sample to be lost when saving.

	svn path=/trunk/; revision=3251

2005-05-07  Tim Janik 	# ba4f222ca9bcae9d810223928aaef2d81e4556de

	updates

	svn path=/trunk/; revision=3250

2005-05-05  Tim Janik 	# 91df7c4c3be12e5b89231a5f5d64edf8abad0220

	fix floats being saved via localized printf(), instead of

	Thu May  5 19:03:41 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_put_data_handle): fix floats being saved via
	        localized printf(), instead of locale-independent putf/putd methods.

	svn path=/trunk/; revision=3249

2005-05-02  Tim Janik 	# eefc44174898e51d5200a069d37f63e65bd84371

	updates

	svn path=/trunk/; revision=3248

2005-04-30  Francisco Javier F. Serrador 	# 12670cd827425f303d9dcadabdfa63630d901f98

	Updated Spanish translation.

	2005-04-30  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3247

2005-04-23  Tim Janik 	# fbc233f7f06c5c51dfdfb6418c53e8c7a6227b42

	added unused files

	svn path=/trunk/; revision=3246

2005-04-23  Tim Janik 	# 0698b5a8d1df6a205ae621e157907e75ed0ad1a1

	language translation updates from Petrecca Michele. fixed copyright header

	Sat Apr 23 13:16:48 2005  Tim Janik  <timj@gtk.org>

	        * it.po: language translation updates from Petrecca Michele.
	        fixed copyright header slightly.

	svn path=/trunk/; revision=3245

2005-04-19  Tim Janik 	# 5f8e4af14f76604aeb217ec74b12357011589bba

	updates

	svn path=/trunk/; revision=3244

2005-04-19  Tim Janik 	# e55451ff8d645dbca49527ca430086f8370b351e

	fixed gsl headers not being uninstalled.

	Tue Apr 19 16:30:51 2005  Tim Janik  <timj@gtk.org>

	        * Makefile.am, gslmakefile.inc: fixed gsl headers not being uninstalled.

	svn path=/trunk/; revision=3243

2005-04-19  Tim Janik 	# 0a7bd6982bf8985b0971e666a225606bbfc2981b

	more renames of C++ header files from .h to .hh.

	Tue Apr 19 16:19:29 2005  Tim Janik  <timj@gtk.org>

	        * more renames of C++ header files from .h to .hh.

	        * tools/bsewavetool.cc, tools/bwtwave.cc: include .hh headers.

	        * tools/bsewavetool.h, tools/bwtwave.h: removed.

	svn path=/trunk/; revision=3242

2005-04-19  Tim Janik 	# 3622a7a5ac609dd52c062deefcee428989cc23ff

	CVS copied from tools/bsewavetool.h.

	Tue Apr 19 16:16:53 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.hh: CVS copied from tools/bsewavetool.h.

	        * tools/bwtwave.hh: CVS copied from tools/bwtwave.h.

	svn path=/trunk/; revision=3241

2005-04-19  Tim Janik 	# 2fd5879a56307a514ed61ccfc4c32ece372baeda

	loader and wave file rename from gsl to bse.

	Tue Apr 19 16:13:37 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsefcompare.cc, tools/bsefextract.cc:
	        * tools/bsewavetool.cc, tools/bwtwave.cc:
	        loader and wave file rename from gsl to bse.

	svn path=/trunk/; revision=3240

2005-04-19  Tim Janik 	# f60c889bc92ae57bc62137e6d9714a28d1ead8b9

	prototype BseLoader structures.

	Tue Apr 19 15:44:46 2005  Tim Janik  <timj@gtk.org>

	        * bsedefs.h: prototype BseLoader structures.

	        * bseloader.h, bseloader*.c:
	        * tests/magictest.c, tests/mathtests.c: loader rename to Bse.

	        * bsepcmwriter.c, bseserver.proc, bseutils.c, bsewave.c:
	        * bsewaverepo.proc, gsldatautils.c, gsldatautils.h: renamed loader
	        and wave file from gsl to bse.

	        * gslloader.c, gslloader.h:
	        * gslloader-wav.c, gslloader-oggvorbis.c:
	        * gslloader-aiff.c, gslloader-bsewave.c, gslloader-mad.c: removed.

	        * gslmakefile.inc: removed gslloader files and local install hook.

	svn path=/trunk/; revision=3239

2005-04-19  Tim Janik 	# c1ffd9b0328f0e9d81362f6632b663abf07c0c05

	CVS copied from gslloader.h. CVS copied from gslloader.c. CVS copied from

	Tue Apr 19 14:39:39 2005  Tim Janik  <timj@gtk.org>

	        * bseloader.h: CVS copied from gslloader.h.
	        * bseloader.c: CVS copied from gslloader.c.
	        * bseloader-aiff.c: CVS copied from bseloader-aiff.c.
	        * bseloader-bsewave.c: CVS copied from gslloader-bsewave.c.
	        * bseloader-mad.c: CVS copied from gslloader-mad.c.
	        * bseloader-oggvorbis.c: CVS copied from gslloader-oggvorbis.c.
	        * bseloader-wav.c: CVS copied from gslloader-wav.c.

	svn path=/trunk/; revision=3238

2005-04-18  Tim Janik 	# 5d3e5925b244eada1c04ac1a741302cf25785fe2

	version 0.6.6-rc1.

	Mon Apr 18 23:22:44 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: version 0.6.6-rc1.

	svn path=/trunk/; revision=3237

2005-04-18  Tim Janik 	# 76a6d81a613012c19053cb2f5da0d97cbadd9057

	updates

	svn path=/trunk/; revision=3236

2005-04-15  Tim Janik 	# 32e6bbbc06e1a6d2e0a8f9505b44e5731ee0273b

	link to footnotes release announcement

	svn path=/trunk/; revision=3235

2005-04-15  Tim Janik 	# 94613075b099771fa196571a501f72fb231f4dc7

	updates

	svn path=/trunk/; revision=3234

2005-04-13  Tim Janik 	# 1aeccee3fc7a3dccee5e52b2a70429f061edcf14

	unify value lists in inline docs ---------------------------------------------------------------------- CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically CVS: CVS: Committing in . CVS: CVS: Modified Files: CVS: beast-gtk/bstutils.c beast-gtk/gxk/gxktexttools.c CVS: ----------------------------------------------------------------------

	svn path=/trunk/; revision=3233

2005-04-13  Tim Janik 	# c9d6357f126cd676e67ef04c3082fc1f052b5fba

	release announbcement

	svn path=/trunk/; revision=3232

2005-04-13  Tim Janik 	# 3e6077b0cea07122f1bde8b60192b37f7190dc9b

	released beast 0.6.5, binary 0, interface 0.

	Wed Apr 13 03:28:43 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: released beast 0.6.5, binary 0, interface 0.

	svn path=/trunk/; revision=3230

2005-04-13  Tim Janik 	# bc2d24a6bb8c66d57d4eb7b054e89a6114327af0

	synthesis article link updates

	svn path=/trunk/; revision=3229

2005-04-13  Tim Janik 	# 3144e8187595813ed503151ad4d50a1cc3257202

	added missing credtis

	svn path=/trunk/; revision=3228

2005-04-13  Tim Janik 	# f02d71b75db7b62cdd998dd901fb7162b008da2b

	new script to generate texi markup from Changelogs, based on

	Wed Apr 13 02:31:40 2005  Tim Janik  <timj@gtk.org>

	        * docs/generated/log2markup.pl: new script to generate texi markup
	        from Changelogs, based on docs/generated/scandocs.pl and
	        log2texi.sh from texitheque.

	        * docs/generated/Makefile.am: use log2markup.pl to generate texi
	        source from changelogs, since texitheque aborts when processing
	        the toplevel ChangeLog.

	svn path=/trunk/; revision=3227

2005-04-12  Tim Janik 	# 9ba1f5115f1b4e1a235a12921bd3773de26820c9

	language updates

	svn path=/trunk/; revision=3226

2005-04-12  Tim Janik 	# 08159bb810c51a24df4482dfdb5713e44de6bd7e

	print out BSE object ID when displaying proxy handles. this helped figure

	Wed Apr 13 00:30:23 2005  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.c (bse_scm_proxy_print): print out BSE object ID
	        when displaying proxy handles. this helped figure that equal? is the
	        correct predicate to compare proxies, rather than eq? or eqv?.

	svn path=/trunk/; revision=3225

2005-04-12  Tim Janik 	# d0a2c6edc370584c059ea385a2d3bae30be821dd

	updates

	svn path=/trunk/; revision=3224

2005-04-12  Tim Janik 	# 5c419026817235f620048835ef9f72b3858899d3

	removed non-shipped source files

	svn path=/trunk/; revision=3223

2005-04-12  Tim Janik 	# af88ff76a964a6579ec85f294a20026e92d946d2

	updates

	svn path=/trunk/; revision=3222

2005-04-12  Tim Janik 	# b4e4cf1905f0cee6d0aa9b73dbad96173c58936e

	remove deleted source files

	svn path=/trunk/; revision=3221

2005-04-12  Tim Janik 	# f7a2e8bd21d71c62eda409aa30cd18c6dad02f94

	code fixes, be more elaborate about the actual test.

	svn path=/trunk/; revision=3220

2005-04-12  Tim Janik 	# 94b4a2f2ccaa05a1e6891943326a23821a3a626f

	guard code against proll->part becoming 0 during window/part destruction.

	Tue Apr 12 19:50:22 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventrollctrl.c: guard code against proll->part becoming
	        0 during window/part destruction.
	        * beast-gtk/bstpianorollctrl.c: same here.

	        * beast-gtk/bstsnifferscope.c: fix potential 0 proxy access.

	svn path=/trunk/; revision=3219

2005-04-12  Tim Janik 	# aff0541991aae396665f253cfede06ea4b369b51

	import MIDI files via bst_project_import_midi_file().

	Tue Apr 12 18:31:29 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c: import MIDI files via
	        bst_project_import_midi_file().

	        * beast-gtk/bstbseutils.[hc]: provide bst_project_import_midi_file(),
	        which ensures properly setup songs (with mixer and no orphaned parts).

	svn path=/trunk/; revision=3218

2005-04-10  Tim Janik 	# 0942c7bd4599086e1d9434b2c4555779018367d4

	support $show-tabs for notebooks.

	Mon Apr 11 00:51:33 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-standard.xml: support $show-tabs
	        for notebooks.

	svn path=/trunk/; revision=3217

2005-04-10  Tim Janik 	# a35ea4eac58897dd09b0893a871a6b1fa3a1409b

	save syncronization state across restore. re-syncronize in restore_finish

	Sun Apr 10 23:23:27 2005  Tim Janik  <timj@gtk.org>

	        * bsebus.h, bsebux.c: save syncronization state across restore.
	        re-syncronize in restore_finish if required.

	        * bseobject.h, bseobject.c: introduced restore_start and resotore_finish
	        methods, and IN_RESTORE state.

	        * bsestorage.h, bsestorage.c: call restore_start before restoring
	        objects and call restore_finish after restoring.

	svn path=/trunk/; revision=3216

2005-04-10  Tim Janik 	# e9e1af81ec0a7477dcf862cd1cb167e8e7bd0df4

	fixed data pointer in sfi_ppool_foreach().

	Mon Apr 11 00:49:40 2005  Tim Janik  <timj@gtk.org>

	        * sfi/sfiustore.c: fixed data pointer in sfi_ppool_foreach().

	svn path=/trunk/; revision=3215

2005-04-01  Steven Michael Murphy 	# 1ca5d0aec6ab845be35e22347ee3871284e0ca56

	Added new Language, Kinyarwanda (rw), to this package

	svn path=/trunk/; revision=3214

2005-03-19  Francisco Javier F. Serrador 	# bdce2b033e27d59ca7871ae07689e5869cc33f76

	Updated Spanish translation by Jorge Gonzalez:

	2005-03-19  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge Gonzalez:

	svn path=/trunk/; revision=3213

2005-03-16  Adam Weinberger 	# a824fed55ce143f467345981fa3f6f4a86da2b02

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3212

2005-03-07  Tim Janik 	# f121422cd94de6a071ba245b7c7201a3c6b70c85

	remove obsolete files

	svn path=/trunk/; revision=3211

2005-03-07  Tim Janik 	# e5c28533fb144f4d0aa2d5fc51cfd4775f4df547

	removed outdated files.

	Mon Mar  7 09:25:01 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstinstrumentview.h:
	        * beast-gtk/bstinstrumentview.c: removed outdated files.

	svn path=/trunk/; revision=3210

2005-03-07  Tim Janik 	# 8c11076c9338ca31dff3a6bf7202403d520246b5

	changed references to former C++ .h headers to .hh.

	Mon Mar  7 08:47:58 2005  Tim Janik  <timj@gtk.org>

	        * *: changed references to former C++ .h headers to .hh.

	svn path=/trunk/; revision=3209

2005-03-07  Tim Janik 	# 4b2521c34a46361fed040378a05c32767a0b4d31

	removed spurious sfidl-hostc.hh duplicate.

	svn path=/trunk/; revision=3208

2005-03-07  Tim Janik 	# c5ac33f76bca267e43ea815a56020e8172a6656a

	renamed every occourance of *.gen-idl.h (C++ headers generated from idl

	Mon Mar  7 08:35:41 2005  Tim Janik  <timj@gtk.org>

	        * renamed every occourance of *.gen-idl.h (C++ headers generated from
	        idl files) to *.genidl.hh.

	svn path=/trunk/; revision=3207

2005-03-07  Tim Janik 	# 1666b1c128d4b02a65376f393011f98fe57e21bb

	removed obsolete .h C++ headers.

	Mon Mar  7 07:55:46 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

	        * adapted sources to compile against .hh C++ headers.

	svn path=/trunk/; revision=3206

2005-03-07  Tim Janik 	# c500b654f7c1d14027862c4f93f697c043465e9c

	removed obsolete .h C++ headers.

	Mon Mar  7 07:55:46 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

	        * adapted sources to compile against .hh C++ headers.

	svn path=/trunk/; revision=3205

2005-03-07  Tim Janik 	# 64df24589f13f6a6adce7215efd809e674f50dd8

	removed obsolete .h C++ headers.

	Mon Mar  7 07:55:46 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

	        * adapted sources to compile against .hh C++ headers.

	svn path=/trunk/; revision=3204

2005-03-07  Tim Janik 	# e829fef73e20a032360c4a33f70bda23f5380321

	removed obsolete .h C++ headers.

	Mon Mar  7 07:55:46 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

	        * adapted sources to compile against .hh C++ headers.

	svn path=/trunk/; revision=3203

2005-03-07  Tim Janik 	# b48b9ed22a874e67785ecf50503e074e53270132

	removed obsolete .h C++ headers.

	Mon Mar  7 07:32:03 2005  Tim Janik  <timj@gtk.org>

	        * removed obsolete .h C++ headers.

	        * adapted sources to compile against .hh C++ headers.

	svn path=/trunk/; revision=3202

2005-03-07  Tim Janik 	# 5e4d71cd12516fa2af86ebeeb588c8c9c19c2080

	added .hh variants for .h C++ headers.

	Mon Mar  7 07:33:06 2005  Tim Janik  <timj@gtk.org>

	        * *.hh: added .hh variants for .h C++ headers.

	svn path=/trunk/; revision=3201

2005-03-07  Tim Janik 	# b7eda5d5062ae4ed3f3bf3d1598be82e651a800f

	use `` instead of $() for command substitution whichi is more portable

	svn path=/trunk/; revision=3200

2005-03-06  Tim Janik 	# 5844629fd0ab6e0e1d0c6ec276c0ee4931f1031a

	use $(tput cols) to figure terminal width instead of ncurses, suggested by

	Sun Mar  6 23:30:36 2005  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: use $(tput cols) to figure terminal width instead of
	        ncurses, suggested by Thomas Dickey <dickey@saltmine.radix.net>.

	svn path=/trunk/; revision=3199

2005-03-01  Tim Janik 	# f958f8482721f264ca477db342b9bdc38c8bf67a

	disable gus patch envelope until it gets usable

	svn path=/trunk/; revision=3198

2005-03-01  Tim Janik 	# 7b11a8449e54a44baa2c5ea962762364c10c5e70

	spelling fixup

	svn path=/trunk/; revision=3197

2005-03-01  Tim Janik 	# 6cacf7c827d44d0576009b2c273ade446751664c

	fixed wrong division for CONTINUOUS_11 default value.

	Tue Mar  1 15:24:23 2005  Tim Janik  <timj@gtk.org>

	        * bsemidievent.c (bse_midi_signal_default): fixed wrong division for
	        CONTINUOUS_11 default value.

	svn path=/trunk/; revision=3196

2005-02-27  Tim Janik 	# 99df2c78cd1c17febba3b10101d0e8e46a0a28d5

	updates

	svn path=/trunk/; revision=3195

2005-02-23  Alexander Shopov 	# 9f4277f8388d79f95ff6956b2e0c29a1760e3e6c

	Updated Bulgarian translation by Iassen Pramatarov <turin@fsa-bg.org>

	2005-02-23  Alexander Shopov  <ash@contact.bg>

		* bg.po: Updated Bulgarian translation by
		Iassen Pramatarov <turin@fsa-bg.org>

	svn path=/trunk/; revision=3194

2005-02-21  Tim Janik 	# 98d540e7dd2579105d66f602a2eec091cd0c5572

	todos

	svn path=/trunk/; revision=3193

2005-02-18  Vincent van Adrighem 	# 57d3b6fbff6d624d14606d04f514742f6c1cb076

	Translation updated by Tino Meinen.

	2005-02-18  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=3192

2005-02-15  David Lodge 	# 5536f38974c3056d54b0a8bcf8816480e2d88ab5

	Update English (British) translation.

	2005-02-15  David Lodge  <dave@cirt.net>

		* en_GB.po: Update English (British) translation.

	svn path=/trunk/; revision=3191

2005-02-05  Tim Janik 	# b717cf3da9108cfb48fd3104767813c2a5d5d043

	permit creation of a single song only through the gui.

	Sat Feb  5 15:34:50 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: permit creation of a single song only through
	        the gui.

	        * beast-gtk/dialogs/radgets-standard.xml: define handle-box container.

	        * beast-gtk/dialogs/radgets-beast.xml:
	        * beast-gtk/bstapp.c: rearranged widgets in the main app shell.

	svn path=/trunk/; revision=3190

2005-02-05  Tim Janik 	# 4fe3704d1f87e16ab5df95e098d539c44a0cd99b

	disabled gus-patch specific xinfos, so gus patch files are currently

	Sat Feb  5 14:46:13 2005  Tim Janik  <timj@gtk.org>

	        * bseloader-guspatch.cc: disabled gus-patch specific xinfos, so gus
	        patch files are currently treated like ordinary samples.

	svn path=/trunk/; revision=3189

2005-01-31  Tim Janik 	# 7760788b5645c6456ea6fd847490fafde1586c15

	updates

	svn path=/trunk/; revision=3188

2005-01-31  Tim Janik 	# ba48df6f7f0d12acc9354ef3b0750bbc4c2091d4

	fix prototype placement

	svn path=/trunk/; revision=3187

2005-01-30  Tim Janik 	# a60e47e5eb3be60defc93f958f77b2abb54fae30

	minor fixup

	svn path=/trunk/; revision=3186

2005-01-29  Tim Janik 	# 90c453bc2b772b3c882a076d651e4dc1b04de380

	download docu updates

	svn path=/trunk/; revision=3185

2005-01-29  Tim Janik 	# 0f921b071f5f8b28dcd51b2c6fbddbe29a6b4815

	work around compiler/linker bugs on SuSE 9.2.

	Sat Jan 29 16:58:38 2005  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc: work around compiler/linker bugs on SuSE 9.2.

	svn path=/trunk/; revision=3184

2005-01-29  Tim Janik 	# fd425bc4bfea21ac7ef783635f34a7b602e2986b

	updates

	svn path=/trunk/; revision=3183

2005-01-29  Tim Janik 	# cee4b6d176bf22c566ce4a725976ed3474c227db

	updates

	svn path=/trunk/; revision=3182

2005-01-29  Tim Janik 	# c605fd4cc5dd91e72af892ebbf0622721e049771

	changed magic to match v1.0 and v1.1 directly.

	Sat Jan 29 01:00:37 2005  Tim Janik  <timj@gtk.org>

	        * bseloader-guspatch.cc (bse_init_loader_gus_patch): changed magic to
	        match v1.0 and v1.1 directly.

	svn path=/trunk/; revision=3181

2005-01-28  Tim Janik 	# 160a02ac62f4dd04fdce30f7a413fa04f529a2d8

	skip dialog popup if the editing entry has been removed meanwhile. works

	Sat Jan 29 00:03:32 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkcellrendererpopup.c (gxk_cell_renderer_idle_popup):
	        skip dialog popup if the editing entry has been removed meanwhile.
	        works around GtkTreeView button press handling bugs as described in:
	        http://mail.gnome.org/archives/gtk-devel-list/2005-January/msg00144.html

	svn path=/trunk/; revision=3180

2005-01-28  Miloslav Trmac 	# f6dd69822ec49cc8fb8806b274515f74918febeb

	Updated Czech translation.

	2005-01-28  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=3179

2005-01-26  Tim Janik 	# 7253b238c703389c9ead587531001f2a63b096c6

	up, up version to 0.6.5rc, binary 0, interface 0.

	Wed Jan 26 01:22:04 2005  Tim Janik  <timj@gtk.org>

	        * configure.in: up, up version to 0.6.5rc, binary 0, interface 0.

	svn path=/trunk/; revision=3178

2005-01-26  Tim Janik 	# b7497d6f3a17c92e28c613a1ded343fca85baca1

	distcheck fixes

	svn path=/trunk/; revision=3177

2005-01-25  Adam Weinberger 	# 85cd963add0b30a620fbac8e45a0a7e2b070b144

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3176

2005-01-24  Tim Janik 	# 4a68914181e99b372ca5c2481351fe18b42b0ce6

	don't store empty xinfos.

	Tue Jan 25 00:51:29 2005  Tim Janik  <timj@gtk.org>

	        * bsewave.c (bse_wave_store_private): don't store empty xinfos.

	svn path=/trunk/; revision=3175

2005-01-24  Tim Janik 	# 26f54669cd16a5b506192483912093784ab51358

	override active event grabs of modal windows when showing new message

	Tue Jan 25 00:38:48 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstusermessage.c (dialog_show_above_modals): override active
	        event grabs of modal windows when showing new message dialogs.

	        * beast-gtk/gxk/gxkutils.c (gxk_toplevel_delete): deliver delete events
	        asyncronously to the window despite active event grabs.

	svn path=/trunk/; revision=3174

2005-01-24  Tim Janik 	# cbdbfd11c52f38269d43554cd6170973d9f16fda

	turned ticks_to_pixels() and pixels_to_ticks() into conversions with

	Tue Jan 25 00:00:11 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianoroll.c:
	        turned ticks_to_pixels() and pixels_to_ticks() into conversions
	        with double precision.
	        bst_piano_roll_hsetup(): fixate start position when hzooming.
	        piano_roll_adjustment_changed(): compare floats within suitable
	        epsilon to avoid endless adjustment-changed reemissions.

	svn path=/trunk/; revision=3173

2005-01-24  Tim Janik 	# 32ff2fb26eb31a1f872c50f149299dde32c36e90

	updates

	svn path=/trunk/; revision=3172

2005-01-24  Tim Janik 	# fa5f72ca3791f81a8f067ba71cde917d0aaf8fc9

	more whitespace fixes

	svn path=/trunk/; revision=3171

2005-01-24  Tim Janik 	# 41c7fd124e9dfdce6e5d9d90c067e5b7f1572d15

	fixed error codes and mixed case function names.

	Mon Jan 24 22:59:12 2005  Tim Janik  <timj@gtk.org>

	        * bseloader-guspatch.cc (fread_dword): fixed error codes and mixed case
	        function names.

	svn path=/trunk/; revision=3170

2005-01-24  Tim Janik 	# e854657c7f8743eee3cd617dc91d93309dae25f7

	more whitespace fixes

	svn path=/trunk/; revision=3169

2005-01-24  Tim Janik 	# 9d4955156016693f93555d2d73d1b5854709f174

	fixed function linkage and missing newlines.

	Mon Jan 24 22:49:16 2005  Tim Janik  <timj@gtk.org>

	        * bseloader-guspatch.cc: fixed function linkage and missing newlines.

	svn path=/trunk/; revision=3168

2005-01-24  Tim Janik 	# 99afe22b8618095a4ad74274b23d76c7594f5b2a

	whitespace and copyright fixups

	svn path=/trunk/; revision=3167

2005-01-24  Tim Janik 	# 63147aa9d862dca067da8a88625bd12fbd68766d

	implemented bse_project_inject_midi_control() to submit extra midi events

	Mon Jan 24 22:38:21 2005  Tim Janik  <timj@gtk.org>

	        * bseproject.proc: implemented bse_project_inject_midi_control() to
	        submit extra midi events into a playing project.

	        * Makefile.am: added bseloader-guspatch.cc.

	        * bseloader-guspatch.cc:
	        * gslcommon.[hc]: initialize guspatch loader with
	        bse_init_loader_gus_patch().

	        * bsemididecoder.c:
	        * bsemidievent.c: zero initialize newly allocated midi events.

	        * bsetrack.c: wording fixup.

	svn path=/trunk/; revision=3166

2005-01-24  Tim Janik 	# 8bec5e989274d2334f8c691d0789d7de2eaafef1

	updates

	svn path=/trunk/; revision=3165

2005-01-24  Tim Janik 	# cb018166b63c48b0389e2e0339c2c2030587a970

	link updates

	svn path=/trunk/; revision=3164

2005-01-23  Stefan Westerfeld 	# 8b74c89bb4d4d760713567289ada38b12b805555

	New script that allows testing how an instrument (currently: only wave

	Sun Jan 23 22:04:43 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/scripts/Makefile.am:
		* tests/scripts/noteplaytest.scm: New script that allows testing how
		an instrument (currently: only wave instruments such as gus patches
		supported) sounds when played on a given midi note.

	svn path=/trunk/; revision=3163

2005-01-23  Tim Janik 	# ab9821273aeb7d2c7cfb9a91fd30be45dabef8e2

	updates

	svn path=/trunk/; revision=3162

2005-01-23  Tim Janik 	# 1373dd2ffbf6a2339e1ec595f14bffd49ceed6cd

	readability fixups

	svn path=/trunk/; revision=3161

2005-01-22  Stefan Westerfeld 	# a60ad0eacee29ecdbafc1811ce08ef99004a6644

	updates

	svn path=/trunk/; revision=3160

2005-01-21  Tim Janik 	# a7c12c3c5192fc762c5b75ead7b66fa091e0eccc

	updates

	svn path=/trunk/; revision=3159

2005-01-21  Adam Weinberger 	# f20acb93c1032d7333967836ec9301329a77b2b2

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3158

2005-01-21  Stefan Westerfeld 	# fa62f3b2a6754e1867e81f9ebe212a05499e3933

	merged my script section into the general SCRIPTS section

	svn path=/trunk/; revision=3157

2005-01-21  Tim Janik 	# 1ab5d010d70f4dc77f90dee9aa2e41ad885d7704

	updates

	svn path=/trunk/; revision=3156

2005-01-21  Tim Janik 	# 9264de57e20606b7f4170a5289a1f6b6d76d78a1

	updates

	svn path=/trunk/; revision=3155

2005-01-21  Tim Janik 	# 707ef59545c2b16fea1b8f1c05e0e16c257e4f05

	updates

	svn path=/trunk/; revision=3154

2005-01-21  Tim Janik 	# 7f076ff3dce534cd7ea6b78d875b8c3cf545636f

	updates

	svn path=/trunk/; revision=3153

2005-01-20  Tim Janik 	# d41541b901785d8f7d78d133c9fb00b1f1d39516

	added missing file

	svn path=/trunk/; revision=3152

2005-01-20  Tim Janik 	# 617eec8b987a0962770669b06b3d0c0af9c4c6e4

	updates

	svn path=/trunk/; revision=3151

2005-01-20  Tim Janik 	# 1b111509d11ecd8bad9dfc366be33508628f7d16

	added action factories to event and piano roll popup menus to create menu

	Fri Jan 21 00:33:42 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-beast.xml: added action factories to event
	        and piano roll popup menus to create menu items for selection actions.

	        * beast-gtk/bstpartdialog.[hc]: change cut/copy/clear sensitivity according
	        to selection changes. publish piano roll and event roll selection actions.

	        * beast-gtk/bsteventrollctrl.[hc]: implemented selection actions.

	        * beast-gtk/bsteventroll.c: fixed unnecessary redraws. keep max_ticks
	        field up to date. update controllers upon part changes.

	        * beast-gtk/bstpianorollctrl.[hc]: implemented selection actions.

	        * beast-gtk/bstpianoroll.c: update controllers upon part changes.

	        * beast-gtk/gxk/gxkaction.[hc]: added 64bit stamp to GxkActionCheck()
	        to cache check function results across multiple consequtive invocations
	        of GxkActionCheck() functions. exported gxk_action_inc_cache_stamp() to
	        allow user code to still call check functions themselves.

	        * beast-gtk/bstapp.c: adapted to action_stamp changes.

	        * beast-gtk/bstdefs.h: renamed BstCommonRollTool, adapted users.

	        * beast-gtk/bstutils.h: added placholder stock icons for select actions.

	svn path=/trunk/; revision=3150

2005-01-20  Tim Janik 	# 70820bd31f59a50dec80d950dc2d5c1a7d0b75a0

	added bse-part-select-controls().

	Fri Jan 21 00:48:43 2005  Tim Janik  <timj@gtk.org>

	        * bsepart.proc: added bse-part-select-controls().

	svn path=/trunk/; revision=3149

2005-01-20  Adam Weinberger 	# e2dc260e6ea2a991e0421f7bbc7571cbd74de418

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3148

2005-01-20  Miloslav Trmac 	# 18de3dd5001cfb176db1a401efc8bf285d51fd2d

	Updated Czech translation.

	2005-01-20  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=3147

2005-01-20  Francisco Javier F. Serrador 	# ff743bbe039dd9aa55a93c54d8ae27254b86d1a7

	Updated Spanish translation.

	2005-01-20  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3146

2005-01-20  Tim Janik 	# afb1701968d3eec68f4c29f8996b9067249dc7a9

	updates

	svn path=/trunk/; revision=3145

2005-01-20  Tim Janik 	# 70455d09e0c96d43a8789a8535dad67c08291b6f

	removed position arguemnt from wstore_data_handle_reader(), adsed data

	Thu Jan 20 17:52:14 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: removed position arguemnt
	        from wstore_data_handle_reader(), adsed data length counter.

	        * gsldatahandle-vorbis.c: removed position arguemnt
	        from vorbis1_handle_reader().

	        * gsldatautils.c: removed position arguemnt
	        from wstore_context_reader(), adsed data length counter.

	svn path=/trunk/; revision=3144

2005-01-20  Tim Janik 	# 3e91d729e4a0ea7d130739523ed13797d952e500

	removed position arguemtn from SfiStoreReadBin(). it's the responsibility

	Thu Jan 20 17:51:25 2005  Tim Janik  <timj@gtk.org>

	        * sfistore.[hc]: removed position arguemtn from SfiStoreReadBin().
	        it's the responsibility of the SfiStoreReadBin() implementation to
	        provide consequtive data blocks now.

	svn path=/trunk/; revision=3143

2005-01-20  Tim Janik 	# fb3aa9f6011168aacbf58ca7c17fcb0e6732a856

	parse dates without time specifications for yyyy-mm-dd, mm/dd/yyyy and

	Thu Jan 20 17:31:01 2005  Tim Janik  <timj@gtk.org>

	        * sfitime.c (sfi_time_from_string_err): parse dates without time
	        specifications for yyyy-mm-dd, mm/dd/yyyy and dd.mm.yyyy.

	svn path=/trunk/; revision=3142

2005-01-20  Tim Janik 	# b90944d65147218bf7bab3f26ddc8ca15754a438

	updates

	svn path=/trunk/; revision=3141

2005-01-20  Tim Janik 	# 8251118712993123c94f5856b245e653b19f665e

	use sfi_wstore_putf() to store floats.

	Thu Jan 20 17:16:26 2005  Tim Janik  <timj@gtk.org>

	        * tools/bwtwave.cc (store): use sfi_wstore_putf() to store floats.

	svn path=/trunk/; revision=3140

2005-01-20  Tim Janik 	# c41c0a8add4467bb4aff5b29b3c7a91557fd72f2

	use sfi_wstore_putf() and sfi_wstore_putd() internally.

	Thu Jan 20 17:12:24 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: use sfi_wstore_putf() and sfi_wstore_putd() internally.
	        bse_storage_put_data_handle(): don't use printf and %g to store floats,
	        but use bse_storage_putf() so floats are stored locale independant.

	svn path=/trunk/; revision=3139

2005-01-20  Tim Janik 	# 84f4cc8cf91bd328af93963d93845b9b91feabc3

	sfi_wstore_putf(): store floats locale independent. sfi_wstore_putd():

	Thu Jan 20 17:15:06 2005  Tim Janik  <timj@gtk.org>

	        * sfistore.[hc]:
	        sfi_wstore_putf(): store floats locale independent.
	        sfi_wstore_putd(): store doubles locale independent.
	        sfi_wstore_printf(): issue warnings if the format string contains
	        localised directives.

	svn path=/trunk/; revision=3138

2005-01-20  Tim Janik 	# b0a00e446b5bac00fb741ea79458005018d51978

	fix Demo hotkey

	svn path=/trunk/; revision=3137

2005-01-20  Tim Janik 	# 4f62ad81af5b8a343989c0e4b6a2e49863825282

	issue warnings if the format string contains localised directives.

	Thu Jan 20 15:18:53 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_printf): issue warnings if the format string
	        contains localised directives.

	svn path=/trunk/; revision=3136

2005-01-20  Tim Janik 	# 01e61207582b951dd2ca39bd363881b9c6f7c172

	detect localised printf format directives.

	Thu Jan 20 15:18:11 2005  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc] (g_printf_find_localised_directive): detect
	        localised printf format directives.

	svn path=/trunk/; revision=3135

2005-01-20  Tim Janik 	# 0b338d01a67e4597089130e9c80fd101f0825684

	properly pass on write errors.

	Thu Jan 20 05:21:23 2005  Tim Janik  <timj@gtk.org>

	        * tools/bwtwave.cc (store): properly pass on write errors.

	svn path=/trunk/; revision=3134

2005-01-20  Tim Janik 	# 614efce875f4fca7f0b50a2bc37ea54215ec7604

	return BSE_ERROR_NONE for an errno of 0.

	Thu Jan 20 05:10:27 2005  Tim Janik  <timj@gtk.org>

	        * gslcommon.c (gsl_error_from_errno): return BSE_ERROR_NONE for an
	        errno of 0.

	        * bseproject.c (bse_project_store_bse): pass on storage errors.

	        * bsestorage.c (bse_storage_flush_fd): pass on storage errors.

	svn path=/trunk/; revision=3133

2005-01-20  Tim Janik 	# a08edf2429c6f0089db357ea02abddb79a9b9dbd

	return negative errno in case of errors.

	Thu Jan 20 05:13:30 2005  Tim Janik  <timj@gtk.org>

	        * sfistore.c (sfi_wstore_flush_fd): return negative errno
	        in case of errors.

	svn path=/trunk/; revision=3132

2005-01-20  Tim Janik 	# 8980bd781a2f432cbb4eb9ba9a5a90f3897bca13

	updates

	svn path=/trunk/; revision=3131

2005-01-20  Tim Janik 	# a5141a420872024e47d8bdf48908e9176f248f3e

	generate proper warnings for non-writable properties.

	Thu Jan 20 04:21:53 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (restore_item_property): generate proper warnings
	        for non-writable properties.

	        * bsestandardosc.c (bse_standard_osc_class_init): disabled self
	        modulation mode which only produces huge amounts of aliasing.

	svn path=/trunk/; revision=3130

2005-01-20  Tim Janik 	# 53b802e21beff7d2a67d3ec720c452bbc804a044

	reworded menu entries.

	Thu Jan 20 04:03:00 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: reworded menu entries.

	        * beast-gtk/gxk/gxknotebook.c:
	        * beast-gtk/gxk/gxkassortment.[hc]: added selection blocking ability.
	        properly update selection of newly created menus and notebooks.

	        * beast-gtk/gxk/gxkmenubutton.[hc]: changed menu popup logic to support
	        conditionally pushed-in menus if screen size would otherwise be exceeded.

	        * beast-gtk/gxk/gxkutils.[hc]: changed API so we offer menu popup
	        functions with, without and with conditional push-in modes.

	svn path=/trunk/; revision=3129

2005-01-20  Tim Janik 	# cbf5abc375a209c35f5d5d5cedc5f488d8281423

	removed unused options field, code cleanups.

	Thu Jan 20 02:20:06 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkaction.[hc]: removed unused options field, code cleanups.

	svn path=/trunk/; revision=3128

2005-01-20  Tim Janik 	# fbd7b74ce7d5ed06933e1af7ebed212a7ba34d2a

	updates

	svn path=/trunk/; revision=3127

2005-01-20  Tim Janik 	# d1ce839baec83aaf8386c89b2ab2124c30d7c9c9

	move saturator into the distortion submenu.

	Thu Jan 20 01:34:00 2005  Tim Janik  <timj@gtk.org>

	        * standardsaturator.idl: move saturator into the distortion submenu.

	svn path=/trunk/; revision=3126

2005-01-20  Stefan Westerfeld 	# 27f05d706ad09a7d1d6c97fccaa71d3d04575d8f

	Make more data found in the GUS Patch headers available as xinfos.

	Thu Jan 20 01:28:59 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* bseloader-guspatch.cc: Make more data found in the GUS Patch headers
		available as xinfos.

	svn path=/trunk/; revision=3125

2005-01-20  Stefan Westerfeld 	# b9405f8a30ff2cba09c73f6aa575e1edc3154977

	Don't assume that in the attack phase, the envelope rate is always

	Thu Jan 20 01:21:24 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: Don't assume that in the attack phase,
		the envelope rate is always positive, and in the decay phase always
		negative. Instead, look at the offsets of adjacent envelope points to
		figure out the sign for rate. Fixes: problems with freepats fretless
		bass envelope and probably others.

	svn path=/trunk/; revision=3124

2005-01-20  Tim Janik 	# 28a1db8956259b15481d7b5ec8900626c2c8d3f1

	use gxk_widget_set_tooltip() all over the place.

	Thu Jan 20 01:15:10 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/*.c:
	        * beast-gtk/*.c: use gxk_widget_set_tooltip() all over the place.

	        * beast-gtk/bstparam-choice.c: force resetting of menu button tooltips
	        upon gxk_param_update() to ensure correct initial tooltip (important
	        if the tooltip is taken from menu items and overriden by gmask creation).

	svn path=/trunk/; revision=3123

2005-01-19  Tim Janik 	# a595e4839d74e0e4e5e8695d5c9129a142cdea6f

	changed BseWave magic to "#BseWave1".

	Thu Jan 20 00:30:50 2005  Tim Janik  <timj@gtk.org>

	        * bse/gslloader-bsewave.c: changed BseWave magic to "#BseWave1".

	svn path=/trunk/; revision=3122

2005-01-19  Tim Janik 	# a0ca3542d4c97ba17fe279b0527f8d9aef6857fd

	removed special character functions $(<), $(<=), $(>), $(>=), $(!=), $(=)

	Thu Jan 20 00:20:26 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkradget.c: removed special character functions
	        $(<), $(<=), $(>), $(>=), $(!=), $(=) and $(==). suitable replacement
	        functions for float comparisons are already in place.

	svn path=/trunk/; revision=3121

2005-01-19  Tim Janik 	# bab32b04ead586a33581a48beaa6ca6e90261f3a

	removed externally unused functions from public API. code cleanups.

	Thu Jan 20 00:07:47 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: removed externally unused functions from public
	        API. code cleanups.

	        * beast-gtk/gxk/gxkaction.[hc]: removed GxkActionFactory. added
	        gxk_window_add_action_client() and gxk_window_remove_action_client()
	        to receive notification about newly added action lists.

	        * beast-gtk/gxk/gxkglobals.[hc]: removed undue '_'-prefixing from symbols.

	        * beast-gtk/gxk/gxkradgetfactory.[hc]: derive from GObject and register with
	        gxk_window_add_action_client() and gxk_window_remove_action_client().
	        code cleanups.

	svn path=/trunk/; revision=3120

2005-01-19  Tim Janik 	# fc8dacb78b6d4b1631100992cfbf05ff448fe256

	added ::attached-hierarchy-changed signal to GtkWidgetClass. this signal

	Wed Jan 19 19:41:12 2005  Tim Janik  <timj@gtk.org>

		* beast-gtk/gxk/gxkutils.[hc]: added ::attached-hierarchy-changed signal
		to GtkWidgetClass. this signal is used to proxy the ::hierarchy-changed
		signal to out-of-branch widgets like an option menu's menu or a submenu.
		refer to the docs on gxk_widget_attached_hierarchy_changed().
		added gxk_menu_set_active() as a replacement for gtk_menu_set_active()
		which doesn't properly emit change notification.
		gxk_menu_attach*(): proxy ::attached-hierarchy-changed signals, this
		allowed a lot of internal code cleanups.

		* beast-gtk/gxk/gxkassortment.[hc]: new management and publishing object
		for administration of notebook pages and other dynamic selection lists.

		* beast-gtk/gxk/gxkmenubutton.[hc]: support assortment publishing.

		* beast-gtk/gxk/gxknotebook.[hc]: new replacement widget for GtkNotebook.
		GxkNotebook supports page updates through GxkAssortment.
		emits ::viewable-changed signal recursively upon page switches.

		* beast-gtk/bstapp.[hc]: publish a GxkAssortment to maintain
		project pages. added finalize handler. changed
		bst_app_reload_supers() to modify the project page assortment.

		* beast-gtk/gxk/gxkradget.[hc]: use GxkNotebook.
		added gxk_radget_data_dup_expand(), and an internal "gxk-adopt-hint"
		hook to allow widget packing through property slots (e.g. the
		"label-widget" property of GtkFrame).
		added new functions: $(strlt), $(strle), $(strgt), $(strge),
		$(strne) and $(streq) for string comparisons.

		* beast-gtk/gxk/gxkradgetfactory.c:
		connect to ::attached-hierarchy-changed on menus and recheck whether
		the factory is anchored.

		* beast-gtk/bstsupershell. [hc]: use GxkNotebook.
		removed notebook label hackery.

		* beast-gtk/bstparam-choice.c: use gxk_menu_set_active().

		* beast-gtk/bsttracksynthdialog.c:
		* beast-gtk/bstpreferences.c: use GxkNotebook.

		* beast-gtk/gxk/gxkaction.[hc]: minor fixes.

		* beast-gtk/dialogs/radgets-beast.xml: provide drop-down boy for
		project pages.

		* beast-gtk/dialogs/radgets-standard.xml: support more frame properties.
		support assortments on menu buttons and notebooks. use only GxkNotebook.

	svn path=/trunk/; revision=3119

2005-01-19  Vincent van Adrighem 	# c5a9cf45f05ad8feb538766fbaf34d256c3bf1d1

	Translation updated by Tino Meinen.

	2005-01-19  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=3118

2005-01-18  Alexander Shopov 	# 57ec2ea47a76ffecf8028f6d7de51ee957d5d23d

	Added Bulgarian translation

	2005-01-18  Alexander Shopov  <ash@contact.bg>

		* bg.po: Added Bulgarian translation

	svn path=/trunk/; revision=3117

2005-01-16  Miloslav Trmac 	# e74ea46114f57ea30f1a1e60a2c9621c6df84d70

	Updated Czech translation.

	2005-01-16  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=3116

2005-01-14  Stefan Westerfeld 	# b66559b539ccd0b49529e04cdb049a83a70eaadd

	updates

	svn path=/trunk/; revision=3115

2005-01-14  Tim Janik 	# e79002b2da640b63c3559668c1c90c7c5d28b9cb

	cleanups, added loop command skeleton.

	Fri Jan 14 13:30:41 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: cleanups, added loop command skeleton.

	svn path=/trunk/; revision=3114

2005-01-14  Tim Janik 	# d08eef4b55f59e138cee2744d9f2048ee761f6f2

	updates

	svn path=/trunk/; revision=3113

2005-01-14  Tim Janik 	# 594b060b45d80a9f7a10f9a7e2da9c1dabdb8d7e

	updates

	svn path=/trunk/; revision=3112

2005-01-14  Tim Janik 	# ff70b229a6515879b7f88ed4f919b9938373958c

	added parse_str_option() and parse_bool_option(), got rid of

	Fri Jan 14 13:04:20 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: added parse_str_option() and parse_bool_option(),
	        got rid of parse_arg_option(). adapted option parsers.

	svn path=/trunk/; revision=3111

2005-01-14  Tim Janik 	# 556b347336797c5ab0918dc62367e6eb0ca30458

	added chunk selection options to clip command.

	Fri Jan 14 12:30:06 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: added chunk selection options to clip command.

	        * tools/bwtwave.[hc]*: added Wave::match() to figure whether a specific
	        chunk would be lookedup from an array of osc-freqs.

	svn path=/trunk/; revision=3110

2005-01-14  Adam Weinberger 	# 142b04cc0fbc6095df7b1f13bf22001fda59ba0f

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3109

2005-01-13  Tim Janik 	# 68862adca3862cb0b39b099960c758f6f456ec44

	updates

	svn path=/trunk/; revision=3108

2005-01-13  Tim Janik 	# 495a030c3d8308c8c0b0e9a1983c7deac5642b8d

	added log handler for sfi_info() calls. added -q option to suppress

	Thu Jan 13 21:39:53 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: added log handler for sfi_info() calls.
	        added -q option to suppress verbose output. added -f to create
	        command. changed oggenc quality option to -Q. extended add-chunk
	        command and implemented add-raw-chunk command. added clip command.
	        add loop-type=unloopable to all chunks which are tail-clipped.

	        * tools/bsewavetool.h: cleanups.

	        * tools/bwtwave.[hc]*: allow data handle changes, cleanups.

	svn path=/trunk/; revision=3107

2005-01-13  Tim Janik 	# e562c5502793ca111f11c5434ab5a5b8f993d37f

	added gsl_data_make_fade_ramp() and gsl_data_clip_sample().

	Thu Jan 13 21:35:38 2005  Tim Janik  <timj@gtk.org>

	        * gsldatautils.[hc]: added gsl_data_make_fade_ramp() and
	        gsl_data_clip_sample().

	        * bseenums.[hc]: turn FILE_EMPTY into its own error code, added
	        BSE_ERROR_DATA_UNMATCHED.

	        * gsldatahandle.c (insert_handle_close): don't free xinfo pointer
	        which we merely copied (but didn't deep-duplicate) upon open.

	svn path=/trunk/; revision=3106

2005-01-12  Tim Janik 	# 246024afc60c96e8fecac67ac5ad1f578014ef7b

	turned colors into an enum, added POINTER and SELECT colors. added marker

	Wed Jan 12 02:04:19 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianoroll.[hc]: turned colors into an enum, added POINTER
	        and SELECT colors. added marker drawing, resizing and reallocation code.
	        connect to the song of the part, watch the song pointer and update
	        the part accordingly. use binary lookup in part links to calculate
	        accurate part pointer position.

	        * beast-gtk/gxk/gxkscrollcanvas.c: force marker reallocation upon
	        realization. clip markers to their assigned regions when redrawing
	        markers (by means of gdk_window_begin_paint_rect()) to spot marker
	        drawing bugs more easily.

	svn path=/trunk/; revision=3105

2005-01-12  Tim Janik 	# 0fbf4d7e6e340b620dd317ff8024d86648d91fe3

	added part link structure and sequence.

	Wed Jan 12 02:08:21 2005  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: added part link structure and sequence.

	        * bsepart.[hcp]*: added ::links-changed signal for asyncronous
	        notification of part link changes. added procedurte to list all
	        part links, sorted by tick stamps. fixed idle handler maintenance.

	        * bsetrack.c: properly notify parts about part link changes.
	        added bse_track_list_part().

	svn path=/trunk/; revision=3104

2005-01-10  Tim Janik 	# 80b1f352f776688ea6f12d440a6753af171a3ab6

	TODO updates

	svn path=/trunk/; revision=3103

2005-01-10  Vincent van Adrighem 	# 7cee125dfebb0aefa4080bc3a652e7ca942afeac

	Translation updated by Tino Meinen.

	2005-01-10  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=3102

2005-01-09  Stefan Westerfeld 	# 49a86dccf70d1a3ab7d11ff3eee716984f970fc3

	updates

	svn path=/trunk/; revision=3101

2005-01-09  Francisco Javier F. Serrador 	# b411ebd374d10d14226ee1ed2218e0d69fbc5d1b

	Updated Spanish translation.

	2005-01-09  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=3100

2005-01-08  Tim Janik 	# bf23e2daa3011858abb4a098861b39a73c34807e

	removed.

	Sat Jan  8 04:44:14 2005  Tim Janik  <timj@gtk.org>

	        * gslloader-pat.cc: removed.

	svn path=/trunk/; revision=3099

2005-01-08  Tim Janik 	# c829f10d25d869aaa97601e795d5ed11e10eb6cc

	CVS copied from gslloader-pat.cc.

	Sat Jan  8 04:43:00 2005  Tim Janik  <timj@gtk.org>

	        * bseloader-guspatch.cc: CVS copied from gslloader-pat.cc.

	svn path=/trunk/; revision=3098

2005-01-08  Tim Janik 	# 15f087d243c84d6f8563abfb0f887a446ce7de68

	minor fixes

	svn path=/trunk/; revision=3097

2005-01-08  Tim Janik 	# 27fcef5436437c0d38723bb9d68043aad0f0d041

	TODO updates

	svn path=/trunk/; revision=3096

2005-01-08  Tim Janik 	# 6554afc582b32284113c9ed5dd32618feef47d46

	introduced short blurbs to print long command line help with -h and a

	Sat Jan  8 03:53:01 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.h:
	        * tools/bsewavetool.cc: introduced short blurbs to print long
	        command line help with -h and a short version on errors.
	        added "xinfo" command which allows for changing xinfo strings.

	        * tools/bwtwave.h:
	        * tools/bwtwave.cc: support xinfo changes on the wave and the chunks.

	svn path=/trunk/; revision=3095

2005-01-07  Tim Janik 	# eaf0cdcb1d94946d3ba61f7a926da9dbc4a4478a

	cosmetic fixes

	svn path=/trunk/; revision=3094

2005-01-07  Tim Janik 	# abc483f148f6d99490043bd2f706e96511be586f

	more XInfo docs.

	Fri Jan  7 14:08:53 2005  Tim Janik  <timj@gtk.org>

	        * docs/architecture.texi: more XInfo docs.

	        * tools/bsewavetool.cc: fixed "store" blurb.
	        implemented "add-chunk" command.

	        * tools/bwtwave.[hc]: add xinfos to new chunks.
	        fixed sorting.

	svn path=/trunk/; revision=3093

2005-01-07  Stefan Westerfeld 	# 3d144bac57ecc40f3972500d20d6d8a48c1ecfdf

	Reimplemented data_offset storing in a way that is both: fairly readable

	Fri Jan  7 02:53:05 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Reimplemented data_offset storing in a way that is
		both: fairly readable in the code, and based on the new style
		loader_data array that replaces the loader_offset field.

	svn path=/trunk/; revision=3092

2005-01-07  Tim Janik 	# 58a6e4f3650cd4d24e2a62fa901837cb503fedf7

	updates

	svn path=/trunk/; revision=3091

2005-01-07  Tim Janik 	# c338bb314890e9633edb95847e1609b85cc4437a

	use gsl_vorbis_make_serialno() to generate deterministic serialnos.

	Fri Jan  7 02:05:35 2005  Tim Janik  <timj@gtk.org>

	        * tools/bwtwave.cc:
	        * tools/bsewavetool.cc: use gsl_vorbis_make_serialno() to generate
	        deterministic serialnos.

	svn path=/trunk/; revision=3090

2005-01-07  Tim Janik 	# 77a631f8dcac3270cd9155dd21fe90509f8dc430

	store Ogg/Vorbis data handles with increasing serialnos.

	Fri Jan  7 02:01:11 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: store Ogg/Vorbis data handles with increasing serialnos.

	        * gsldatahandle-vorbis.[hc]: enforce specification of a serialno when
	        creating a store handle with gsl_vorbis1_handle_new().
	        gsl_vorbis_make_serialno(): new function which generates unique
	        serialnos (per program runtime).

	        * gslvorbis-cutter.[hc]: allow overriding the output serialno (by
	        default the same as the input) with a specific serialno via
	        gsl_vorbis_cutter_force_serialno().
	        gsl_vorbis_cutter_unfilter_serialno(): removed.

	svn path=/trunk/; revision=3089

2005-01-07  Tim Janik 	# 33470e0111c839a072f8b50ee4938cbb20ba1e9a

	updates

	svn path=/trunk/; revision=3088

2005-01-07  Tim Janik 	# d38e53fd4cb290672101d372a61b4b9252665a3e

	print compression ratio for oggenc.

	Fri Jan  7 01:13:49 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: print compression ratio for oggenc.

	        * tools/bwtwave.cc: copy xinfos when changing dhandles.
	        don't store byte-order and mix-freq for pure Ogg/Vorbis waves.

	svn path=/trunk/; revision=3087

2005-01-07  Tim Janik 	# 9f147a19edfb76e0268d3eede2adff9f07a3ca7d

	fixed midi-note docs.

	Fri Jan  7 01:11:04 2005  Tim Janik  <timj@gtk.org>

	        * bsewave.header: fixed midi-note docs.

	        * gsldatahandle.c: removed midi-note xinfo handling, this doesn't
	        belong here.

	        * gslloader-bsewave.c: fixed osc-freq parsing. fallback to midi-note
	        frequency specification if osc-freq is not given.

	svn path=/trunk/; revision=3086

2005-01-06  Stefan Westerfeld 	# 77d48e7f6266a2b83f245a00a5057e7c35cb9c68

	Implemented chunk specific envelope code, inspired by timidity. Currently,

	Fri Jan  7 00:44:24 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: Implemented chunk specific envelope
		code, inspired by timidity. Currently, its not yet finished: some
		envelopes from the FreePats set are treated the way I think they are
		correct (Piano), some are not (FretlessBass).

	svn path=/trunk/; revision=3085

2005-01-06  Tim Janik 	# d2bf604efc114d4523675b69acd27773ab8d42d4

	updates

	svn path=/trunk/; revision=3084

2005-01-06  Tim Janik 	# 37fbc8776f7b6323f85044b72500eb946fb18b11

	added -k option for continue-on-error behaviour.

	Thu Jan  6 23:58:38 2005  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: added -k option for continue-on-error behaviour.

	svn path=/trunk/; revision=3083

2005-01-06  Tim Janik 	# f8f746bff8d743d08c5bb3cff103b6bbe7ca95be

	improved error message

	svn path=/trunk/; revision=3082

2005-01-06  Tim Janik 	# a4d1594e4e9bb03372e6238e3af9db3839941a6d

	removed unused QData.

	Thu Jan  6 23:44:54 2005  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc]: removed unused QData.

	svn path=/trunk/; revision=3081

2005-01-06  Tim Janik 	# 79f90212e702348f2daa1af6dc4bd6d335d52e67

	updates

	svn path=/trunk/; revision=3080

2005-01-06  Tim Janik 	# f525666ac01872957f0f74234a01440066809c47

	updates

	svn path=/trunk/; revision=3079

2005-01-06  Tim Janik 	# 962fd02abb2f087266127b54834b011ad20f0b78

	removed <= 0.6.4 compat code, since we haven't released .bsewave files of

	Thu Jan  6 23:28:03 2005  Tim Janik  <timj@gtk.org>

	        * gslloader-bsewave.c: removed <= 0.6.4 compat code, since we haven't
	        released .bsewave files of that kind yet.

	svn path=/trunk/; revision=3078

2005-01-06  Tim Janik 	# 264afb56e35f6aa465c738bcb40c53af2405997f

	fixed play-type docs

	svn path=/trunk/; revision=3077

2005-01-06  Tim Janik 	# bf8515715a8f5c73e9884c6a74c7daf2173ea0a5

	use "gus-patch" play-type.

	Thu Jan  6 23:03:36 2005  Tim Janik  <timj@gtk.org>

	        * bse/gslloader-pat.cc:
	        * bse/bsetrack.c: use "gus-patch" play-type.

	        * zintern/mono-wave.bse:
	        * zintern/gus-patch-mono.bse: removed.

	        * zintern/gus-patch.bse: removed "-mono" suffix from object.

	svn path=/trunk/; revision=3076

2005-01-06  Tim Janik 	# 820c9b9f606e46504c09275ca5cb01e34e149e91

	CVS copied from gus-patch-mono.bse.

	Thu Jan  6 23:02:30 2005  Tim Janik  <timj@gtk.org>

	        * zintern/gus-patch.bse: CVS copied from gus-patch-mono.bse.

	svn path=/trunk/; revision=3075

2005-01-06  Tim Janik 	# 8104418482048203a8a11c04d222098dbeb26433

	updates

	svn path=/trunk/; revision=3074

2005-01-06  Stefan Westerfeld 	# 0ad7638eddadaac6bc71a8e29acc965c1956107a

	Fix compilation: reintroduce data_offsets, as the loader_offset field is

	Thu Jan  6 22:27:53 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Fix compilation: reintroduce data_offsets, as the
		loader_offset field is no more. Changed xinfos of envelopes to
		single comma delimited lists of floats.

	svn path=/trunk/; revision=3073

2005-01-06  Tim Janik 	# eabc66762487f430ab4d7af33ab0c242766812bf

	keep inlined data handles opened, to protect against .bse file

	Thu Jan  6 19:51:36 2005  Tim Janik  <timj@gtk.org>

	        * bsewave.[hc]: keep inlined data handles opened, to protect against
	        .bse file overwriting.

	        * bsestorage.c (bse_storage_add_dblock): keep opened data handles
	        open to protect against overwriting.

	svn path=/trunk/; revision=3072

2005-01-06  Tim Janik 	# 82be3a17f4648e8d00298e6d42902c32700f3411

	disable debuggiong code

	svn path=/trunk/; revision=3071

2005-01-06  Tim Janik 	# d7d7218f83c193c6915e21408852cf84acf27b88

	more xinfo docs

	svn path=/trunk/; revision=3070

2005-01-06  Tim Janik 	# 948f3a3217afb62ee1878a6dd1b127e8f0cc0e04

	store wave xinfos. adapt to BSE changes. renamed wave_xinfos class field.

	Thu Jan  6 18:51:48 2005  Tim Janik  <timj@gtk.org>

	        * tools/bwtwave.cc (store): store wave xinfos. adapt to BSE changes.
	        renamed wave_xinfos class field.

	svn path=/trunk/; revision=3069

2005-01-06  Tim Janik 	# 599f1bf375d22dca4a129d49876e85191f16f7b9

	store/parse Ogg/Vorbis data handles as in compressed form, rather than

	Thu Jan  6 18:37:16 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: store/parse Ogg/Vorbis data handles as in compressed
	        form, rather than unpacked.

	        * bsewave.[hc]: removed wave chunk url structures which were unused
	        anyway. store waves in order, sorted by oscillator frequency. use
	        SfiRing to hold the list of wave chunks.

	        * gsldatahandle-vorbis.[hc]: allow peeking of mix_freq from
	        gsl_data_handle_new_ogg_vorbis_zoffset(). added convenience function
	        gsl_vorbis1_handle_put_wstore().

	        * gslloader-bsewave.c: use "vorbis-link" as keyword for inlined
	        Ogg/Vorbis streams. minor cleanups.

	svn path=/trunk/; revision=3068

2005-01-06  Tim Janik 	# d0cacf9a79bda7e87cca03e2d431d5379446ff15

	added sfi_rstore_parse_zbinary() to parse binary block offset+length

	Thu Jan  6 18:50:27 2005  Tim Janik  <timj@gtk.org>
	        * sfistore.[hc]: added sfi_rstore_parse_zbinary() to parse binary
	        block offset+length adresses zero mark relative.

	svn path=/trunk/; revision=3067

2005-01-06  Adam Weinberger 	# 8d5057ce9e06793d02708b098661c874d39ca858

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3066

2005-01-05  Tim Janik 	# 33bcc6632d51a89ac3880c41445102afe3266632

	added BSE_ERROR_WRONG_N_CHANNELS.

	Wed Jan  5 01:10:54 2005  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]: added BSE_ERROR_WRONG_N_CHANNELS.

	        * gslloader-bsewave.c: make sure that chunks carry the required number
	        of channels.

	        * gsldatahandle-vorbis.c: pass on number of channels for
	        gsl_data_handle_new_ogg_vorbis_zoffset() handles.

	        * bsewave.c: slight warning fixup.

	svn path=/trunk/; revision=3065

2005-01-04  Tim Janik 	# 4ffa9a1632f15b1107272e1d6671cf3a2d37c172

	throw proper error message after failing to load a wave file.

	Tue Jan  4 23:58:20 2005  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c:
	        * beast-gtk/bstfiledialog.c: throw proper error message after
	        failing to load a wave file.

	        * tools/bwtwave.cc (store): adapt to .bsewave format changes.
	        if possible, store mix-freq only once.

	        * tools/bsewavetool.cc: added xinfo handling.

	svn path=/trunk/; revision=3064

2005-01-04  Tim Janik 	# 9775267a5058b6e96ef875bc442878da581c95ff

	document format changes.

	Mon Jan  3 23:59:39 2005  Tim Janik  <timj@gtk.org>

	        * bsewave.header: document format changes.

	        * gslloader-bsewave.c: rewrote parsing code, cleaned up token list,
	        make use of xinfos. properly identify auto-detect and raw-sample files.

	        * bseutils.[hc]: added bse_xinfos_parse_assignment().

	        * gslloader.h: extended wave chunk data fields.

	Sun Jan  2 14:41:59 2005  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]:
	        bse_storage_put_xinfos(): save xinfo arrays.
	        bse_storage_parse_xinfos(): load xinfo arrays.

	        * bsewave.[hc]: cleanups, removed per-chunk locator logic. added
	        finalize, added bse_wave_clear(). save and parse xinfo strings.
	        bse_wave_load_wave_file(): clear wave before loading, set locator
	        after successfull loading.

	        * bsewaverepo.proc: use bse_wave_load_wave_file().

	svn path=/trunk/; revision=3063

2005-01-03  Stefan Westerfeld 	# 7b85537b421b5268cf014268690c9b3bf1f2203e

	Since "the double free with gslloader.c" is fixed in gslloader.c now, we

	Mon Jan 3 11:31:14 2005 Stefan Westerfeld <stefan@space.twc.de>

		* gslloader-pat.cc: Since "the double free with gslloader.c" is fixed
		in gslloader.c now, we don't need our mini workaround any longer.

	svn path=/trunk/; revision=3062

2005-01-02  Stefan Westerfeld 	# 97e9117aa17c5489aebfe0217d3e19b0ff92b57e

	Use Scheme identifier style for zintern names.

	Sun Jan  2 15:24:17 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/dialogs/Makefile.am: Use Scheme identifier style for
		zintern names.

	svn path=/trunk/; revision=3061

2005-01-02  Stefan Westerfeld 	# 640411c09071d96095cc4bfc200339fde6f0d1a2

	Retrieve envelope from chunk specific xinfos string.

	Sun Jan  2 15:30:19 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.idl:
		* standardguspatchenvelope.cc: Retrieve envelope from chunk specific
		xinfos string.

	svn path=/trunk/; revision=3060

2005-01-02  Stefan Westerfeld 	# a0bf9c37ef5e542dd440667104adaa9386a9bd08

	Use different playback networks for GUS Patches and normal waves,

	Sun Jan  2 15:26:55 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetrack.c: Use different playback networks for GUS Patches and
		normal waves, depending on play-type xinfo string.

		* bsewave.h: Add xinfos field (needs implementation).

		* gslloader-pat.cc: Set play-type to "gus-patch-mono".

	svn path=/trunk/; revision=3059

2005-01-02  Stefan Westerfeld 	# a968e32561090e1ff217e8608000074af2ace88a

	Use Scheme identifier style for zintern names.

	Sun Jan  2 15:23:35 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* zintern/Makefile.am:
		* zintern/zintern.c: Use Scheme identifier style for zintern names.

		* zintern/gus-patch-mono.bse: Add a network for GUS Patch playback.

	svn path=/trunk/; revision=3058

2005-01-02  Stefan Westerfeld 	# fb7870bafcc322d56d488a93e0a3a56d1cbd087f

	Use Scheme identifier style for zintern names.

	Sun Jan  2 15:24:17 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/dialogs/Makefile.am: Use Scheme identifier style for
		zintern names.

	svn path=/trunk/; revision=3057

2005-01-02  Miloslav Trmac 	# 9428e47c6c5fc65fb7cbe2a3fc4fea2999255e59

	Updated Czech translation.

	2005-01-02  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=3056

2005-01-02  Stefan Westerfeld 	# 8e91c9a902ae87edb591367d6767d552c42eee82

	updates

	svn path=/trunk/; revision=3055

2005-01-02  Stefan Westerfeld 	# b8d8e3e01bda51ed89e5f5bbdedcce8b86bb4684

	Started documenting xinfos for wave files.

	Sun Jan  2 13:28:50 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/architecture.texi: Started documenting xinfos for wave files.

	svn path=/trunk/; revision=3054

2005-01-02  Stefan Westerfeld 	# 0da49f0354da8a92b6edbd00900366d6928c9146

	Fixed code of the last change.

	Sun Jan  2 12:19:36 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.cc: Fixed code of the last change.

	svn path=/trunk/; revision=3053

2005-01-02  Stefan Westerfeld 	# 0f5afc55a37e1bcfc234d3804c499ee8cd517aee

	GUS Patches are only mono patches.

	Sun Jan  2 11:41:05 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: GUS Patches are only mono patches.

	svn path=/trunk/; revision=3052

2005-01-02  Stefan Westerfeld 	# 9a3f3bcf086d475e21cf581024667041fc1bf572

	Added standardguspatchenvelope.idl.

	Sat Jan  1 15:38:43 2005  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am:
		* Makefile.plugins: Added standardguspatchenvelope.idl.

		* standardguspatchenvelope.idl:
		* standardguspatchenvelope.cc: The GUS Patch format is a mono format,
		so we only need a mono input for envelope. Moved to the Misc category.

	svn path=/trunk/; revision=3051

2005-01-01  Tim Janik 	# 96f6e5a2c2d5a432e5a8b917d12cf9f8efa24837

	added flag to indicate whether internal xinfos should be copied.

	Sat Jan  1 21:59:43 2005  Tim Janik  <timj@gtk.org>

	        * bseutils.[hc] bse_xinfos_dup_consolidated(): added flag to indicate
	        whether internal xinfos should be copied.

	        * gsldatahandle-mad.c:
	        * gsldatahandle-vorbis.c:
	        * gsldatahandle.[hc]:
	        * gslloader-bsewave.c:
	        moved bit_depth, mix_freq and needs_cache (back) into the
	        GslDataHandleSetup structure, because they are an integral part of
	        all wave data storage formats. turned osc-freq into a custom xinfo
	        string, because it is not.

	svn path=/trunk/; revision=3050

2005-01-01  Tim Janik 	# 87deed623ff7dc0642f4a580e6255c95a6ae2156

	CVS copied from mono-wave.bse.

	Sat Jan  1 21:20:03 2005  Tim Janik  <timj@gtk.org>

	        * zintern/wave-mono.bse: CVS copied from mono-wave.bse.

	svn path=/trunk/; revision=3049

2005-01-01  Stefan Westerfeld 	# af59d66cefa9a5fcdd6d99b9e40200b32f875d54

	update

	svn path=/trunk/; revision=3048

2005-01-01  Stefan Westerfeld 	# 08617dbcc4c95325aa3d7ae456b0794c25443225

	updates

	svn path=/trunk/; revision=3047

2004-12-31  Tim Janik 	# 2b5f9b6e84258c4c0e11576f503406305025b306

	updates

	svn path=/trunk/; revision=3046

2004-12-31  Tim Janik 	# 2cd3d81ce33ac18022cacec613108e3314e96479

	removed bit_depth, osc_freq and mix_freq from GslDataHandleSetup, removed

	Fri Dec 31 16:39:21 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc]: removed bit_depth, osc_freq and mix_freq from
	        GslDataHandleSetup, removed gsl_data_handle_override(). these
	        values are accessible throuzgh accessors and stored in xinfos now.

	        * gslloader-bsewave.c: provide osc-freq via xinfo.

	        * gsldatahandle-vorbis.c:
	        * gsldatahandle-mad.c: set bit-depth, osc-freq and mix-freq via xinfos.

	svn path=/trunk/; revision=3045

2004-12-31  Stefan Westerfeld 	# 125c6a87df4c53ab8ab8ba46c58615cff17ab2cb

	updates

	svn path=/trunk/; revision=3044

2004-12-31  Satoru Satoh 	# b64d92a75dadd9163fd011c6c2ead359fb32b743

	Updated Japanese translation

	svn path=/trunk/; revision=3043

2004-12-31  Stefan Westerfeld 	# 423d197bb988368acaae191d91495185f9a43899

	Added casts to fix signedness compiler warnings.

	Fri Dec 31 14:15:08 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added casts to fix signedness compiler
		warnings.

	svn path=/trunk/; revision=3042

2004-12-31  Stefan Westerfeld 	# 10f1eb221d5492effc7976f2899c63319862f963

	Added preliminary implementation of the envelope for the GUS Patches. This

	Fri Dec 31 14:19:21 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* standardguspatchenvelope.idl:
		* standardguspatchenvelope.cc: Added preliminary implementation of the
		envelope for the GUS Patches. This version doesn't yet use the data
		from the wave chunks. However, it eliminates clicks at the start/end
		by adding a small ramp, and already has mostly the interface that the
		final version will have.

	svn path=/trunk/; revision=3041

2004-12-31  Tim Janik 	# aaff169ee049951d9e8ef752bd769db747fb0b36

	provide dhandle xinfos without creating an extra data handle.

	Fri Dec 31 13:44:16 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.c:
	        (gsl_wave_handle_new_zoffset):
	        (gsl_wave_handle_new): provide dhandle xinfos without creating
	        an extra data handle.

	svn path=/trunk/; revision=3040

2004-12-31  Tim Janik 	# c30f9e726797cfde3f35e3130617af3b23b72183

	duplicate xinfo array and remove empty/removal xinfos (i.e. "foo=" infos).

	Fri Dec 31 13:32:47 2004  Tim Janik  <timj@gtk.org>

	        * bseutils.c (bse_xinfos_dup_consolidated): duplicate xinfo array and
	        remove empty/removal xinfos (i.e. "foo=" infos).

	svn path=/trunk/; revision=3039

2004-12-31  Tim Janik 	# e3d2d0aeccb9911565475da3eb89402a6cf746f3

	fixed error handling. added oggenc command to encode bsewave files.

	Fri Dec 31 04:04:33 2004  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.[hc]*: fixed error handling.
	        added oggenc command to encode bsewave files.

	        * tools/bwtwave.[hc]*: allow exchanging the data handle with a
	        temporary wave file.

	        * beast-gtk/bstfiledialog.c (store_bse_file): altered temporary
	        file name for better readability.

	svn path=/trunk/; revision=3038

2004-12-31  Tim Janik 	# ffea6254163058249a663a3674e0a3d917612113

	cleanups. implemented GslVorbis1Handle which can be used to store the

	Fri Dec 31 01:40:33 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle-vorbis.c: cleanups. implemented GslVorbis1Handle which
	        can be used to store the compressed Ogg/Vorbis data of an Ogg/Vorbis
	        GslDataHandle. this uses GslVorbisCutter internally to properly rewrite
	        the Ogg stream.

	        * gslvorbis-cutter.[hc]: support non-cutting mode. support specification
	        of the logical bitstream to process by setting a serialno filter.

	        * tests/cutvorbis.c: added option handling for -s,-p-k,-S.

	        * gslloader-bsewave.c: allow loading of waves with an empty chunk list.

	        * gslloader.[hc]: support loading of waves with empty chunk list.

	        * gslcommon.c (gsl_error_from_errno): handle ENODATA.

	svn path=/trunk/; revision=3037

2004-12-31  Tim Janik 	# ef330dd5d72dfb05830df63942e3b0008ebf11bd

	properly initialize random numbers. support command implementations.

	Fri Dec 31 01:49:02 2004  Tim Janik  <timj@gtk.org>

	        * tools/bsewavetool.cc: properly initialize random numbers.
	        support command implementations. support arg parsing for
	        commands and command execution. support loading and creation
	        of empty bsewave files. support storing of bsewave files,
	        preserving Ogg/Vorbis compression.

	        * tools/bwtwave.cc: support overwriting of existing files.
	        store Ogg/Vorbis data handles as Ogg/Vorbis (i.e. don't unpack).

	svn path=/trunk/; revision=3036

2004-12-31  Tim Janik 	# 460ee199256dfca300685770b8b4450777f3a12c

	cleanups. implemented GslVorbis1Handle which can be used to store the

	Fri Dec 31 01:40:33 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle-vorbis.c: cleanups. implemented GslVorbis1Handle which
	        can be used to store the compressed Ogg/Vorbis data of an Ogg/Vorbis
	        GslDataHandle. this uses GslVorbisCutter internally to properly rewrite
	        the Ogg stream.

	        * gslvorbis-cutter.[hc]: support non-cutting mode. support specification
	        of the logical bitstream to process by setting a serialno filter.

	        * gslloader-bsewave.c: allow loading of waves with an empty chunk list.

	        * gslloader.[hc]: support loading of waves with empty chunk list.

	        * gslcommon.c (gsl_error_from_errno): handle ENODATA.

	svn path=/trunk/; revision=3035

2004-12-31  Tim Janik 	# 48890124cfd5a22dc2396ee84a05e819aea09b41

	fixed mode="e", which didn't proeprly call access() due to F_OK==0.

	Fri Dec 31 01:35:09 2004  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.c (errno_check_file): fixed mode="e", which
	        didn't proeprly call access() due to F_OK==0.

	svn path=/trunk/; revision=3034

2004-12-30  Tim Janik 	# 30698fb5239c89d50f85e850acd2053796127d31

	remove bogus struct modification.

	Thu Dec 30 17:06:29 2004  Tim Janik  <timj@gtk.org>

	        * gslloader.c (gsl_wave_dsc_free): remove bogus struct modification.

	svn path=/trunk/; revision=3033

2004-12-30  Tim Janik 	# 792cc6f74d88bb78e4a6397c37e1c33b6df4c130

	removed bogus g_strfreev().

	Thu Dec 30 04:05:50 2004  Tim Janik  <timj@gtk.org>

	        * gslloader.c (gsl_wave_dsc_free): removed bogus g_strfreev().

	svn path=/trunk/; revision=3032

2004-12-29  Stefan Westerfeld 	# e0dc8907218eded9549d473818b5f8f6afa43f56

	Code cleanups and better error handling.

	Wed Dec 29 22:24:51 2004 Stefan Westerfeld <stefan@space.twc.de>

		* gslloader.h:
		* gslloader-pat.cc: Code cleanups and better error handling.

	svn path=/trunk/; revision=3031

2004-12-29  Stefan Westerfeld 	# 43bbdc21ee723d805275da5ddea153f3ceee138e

	Code cleanups and better error handling.

	Wed Dec 29 22:24:51 2004 Stefan Westerfeld <stefan@space.twc.de>

		* gslloader.h:
		* gslloader-pat.cc: Code cleanups and better error handling.

	svn path=/trunk/; revision=3030

2004-12-29  Stefan Westerfeld 	# b839d1713f8fe73e7e69d269029fe8d71b7eef1a

	updates

	svn path=/trunk/; revision=3029

2004-12-29  Stefan Westerfeld 	# 0b09c243005caeccd53adfff7c6d42460853df03

	Updates

	svn path=/trunk/; revision=3028

2004-12-29  Stefan Westerfeld 	# 34057cb37b6e88d2c30fa8780e44282a238e2509

	Include "gslcommon.h" for gsl_byte_order_to_string. This fixes a segfault

	Wed Dec 29 12:52:01 2004 Stefan Westerfeld <stefan@space.twc.de>

		* bsestorage.c: Include "gslcommon.h" for gsl_byte_order_to_string.
		This fixes a segfault (and compile warning) on AMD64.

	svn path=/trunk/; revision=3027

2004-12-29  Stefan Westerfeld 	# 7de72fd1e7a0b109ea6b806ef7b174ad313b54b4

	Use the new xinfo API.

	Wed Dec 29 11:37:55 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Use the new xinfo API.

		* bseieee754.h: Fix compiler warnings in bse_ftoi/bse_dtoi on AMD64.

	svn path=/trunk/; revision=3026

2004-12-29  Tim Janik 	# f74ba6cf29e2e9499336ded4f98fb792289095e7

	updates

	svn path=/trunk/; revision=3025

2004-12-29  Tim Janik 	# 72e820d33b67990cc5c6c1e43181dff9232994c8

	tweaked caching algorithm, so 25% cache memory of low persistency data

	Wed Dec 29 04:06:07 2004  Tim Janik  <timj@gtk.org>

	        * gsldatacache.[hc]: tweaked caching algorithm, so 25% cache memory of
	        low persistency data handles is kept upon cache sweeps, this makes the
	        low persistency cache mode attractive enough for e.g. WAV files.
	        changed flags, there's a high_persistency flag now which is valid only
	        for opened data caches.

	        * gsldatahandle-vorbis.c:
	        * gsldatahandle-mad.c: set .needs-cache xinfo flag.

	        * gsldatahandle-mad.c:
	        * gsldatahandle-vorbis.c:
	        * gsldatahandle.h:
	        * gsldatahandle.c:
	        data handle cleanups and vtable consolidations. introduced
	        gsl_data_handle_get_source() which returns the source data handle if
	        availabele. the source data handle must have the exact same length and
	        values like the originating data handle to validly be handed out.
	        gsl_data_handle_needs_cache(): implemented in terms of returning
	        the .needs-cache xinfo flag.
	        gsl_wave_handle_new_zoffset():
	        gsl_wave_handle_new(): on __linux__, unset the .needs-cache xinfo
	        flag on wave handles to spare cache performance for OGGs and MP3s.

	        * bseutils.[hc]: moved *_xinfo_* accessor functions here.

	svn path=/trunk/; revision=3024

2004-12-29  Stefan Westerfeld 	# c0bd56c17ce590aeec6681c878b0c6e577aeb6a5

	typo

	svn path=/trunk/; revision=3023

2004-12-29  Stefan Westerfeld 	# 5f200a6fc658464fdff29fa5e62e1c7fbb0f9a74

	Added a script which assigns all tracks to new mixer busses.

	Wed Dec 29 03:45:52 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* library/scripts/Makefile.am:
		* library/scripts/mixer-splitup-by-track.scm: Added a script which
		assigns all tracks to new mixer busses.

	svn path=/trunk/; revision=3022

2004-12-29  Stefan Westerfeld 	# dd4f45d7c5b147711a33e94dedeb04b71981d64c

	Added a script which assigns all tracks to new mixer busses.

	Wed Dec 29 03:45:52 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* library/scripts/Makefile.am:
		* library/scripts/mixer-splitup-by-tracks.scm: Added a script which
		assigns all tracks to new mixer busses.

	svn path=/trunk/; revision=3021

2004-12-29  Stefan Westerfeld 	# b39b6bfb9d5b31973c101368b0a7488125d34514

	updates

	svn path=/trunk/; revision=3020

2004-12-29  Stefan Westerfeld 	# 863d30ccd65fe3261527f69fef4193ebb949a85b

	fix whitespaces in newest entry

	svn path=/trunk/; revision=3019

2004-12-28  Adam Weinberger 	# 9a1a792cdc6c809baebe0a63d64390ceae392519

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=3018

2004-12-27  Tim Janik 	# 27cbdbb1f19ebc674d30b816e3378d107d2f7831

	include fixes.

	Mon Dec 27 23:58:48 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.c:
	        * beast-gtk/bstqsampler.c: include fixes.

	        * beast-gtk/bststest.c: completely disabled.

	        * tools/bsewavetool.cc: new source file for bsewavetool. for now,
	        support loading and saving of bsewave files.

	        * tools/bsewavetool.h: cleanups, more adaptions to come.

	        * tools/bwtwave.h:
	        * tools/bwtwave.cc: new files, implementing the bsewave model
	        for bsewavetool.

	        * tools/Makefile.am: changed log domain, adapted bsewavetool build.

	        * tools/bsewavetool.c: removed.

	        * tools/*.c:
	        * *.c: BseErrorType enum fixups.

	svn path=/trunk/; revision=3017

2004-12-27  Tim Janik 	# e064f8c8154fd2638edd2479496184c93ec4a8ec

	added xinfos[] array to opened data handles. added

	Mon Dec 27 23:59:19 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc]: added xinfos[] array to opened data handles.
	        added gsl_data_handle_new_add_xinfos(),
	        gsl_data_handle_new_remove_xinfos() and
	        gsl_data_handle_new_clear_xinfos() to control the xinfos of a data
	        handle after loading.
	        added xinfos[] field to gsl_wave_handle_new_zoffset() and
	        gsl_wave_handle_new().

	        * gslloader-bsewave.c: support parsing of xinfos["key"] = "value"
	        statements.

	        * gslloader.[hc]: introduced xinfos for loader structures, provided
	        xinfos accessors. removed authors, license, blurb (comment) and
	        looping fields. this data is taken care of by xinfos now.

	        * gslloader-oggvorbis.c:
	        * gslloader-bsewave.c:
	        * gslloader-wav.c:
	        * gslloader-mad.c:
	        * gslloader-aiff.c: provide chunk->xinfos instead of accessing
	        chunk fields. support data-handles with xinfos.

	        * bseenums.[hc]: merged error enums with GslErrorType.

	        * gsldefs.h:
	        * gslcommon.[hc]: removed GslErrorType specific code.
	        include bseenums.h.

	        * bsemain.h: include fixes.

	        * tests/*.c:
	        * *.c: BseErrorType enum fixups.

	svn path=/trunk/; revision=3016

2004-12-27  Tim Janik 	# 166ff35cf77767f6f96e477fa7ab9d2f5a08d278

	call sfi_ring_uniq() from sfi_ring_uniq_free_deep() if no destroy

	Mon Dec 27 23:57:29 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: call sfi_ring_uniq() from sfi_ring_uniq_free_deep()
	        if no destroy functions is given.

	svn path=/trunk/; revision=3015

2004-12-27  Stefan Westerfeld 	# 347eb59d9f81c6371d3f088b8fc491afc4d75d41

	updates

	svn path=/trunk/; revision=3014

2004-12-27  Tim Janik 	# 5edc6a90f217a3ee6e678ed78ed808895ad1e751

	updates

	svn path=/trunk/; revision=3013

2004-12-27  Tim Janik 	# 709984d0c49fa470aaed85a0c51f37f6a56cbf0a

	added sfi_ring_uniq_free_deep() and sfi_ring_copy_deep_uniq(). made

	Mon Dec 27 03:42:17 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: added sfi_ring_uniq_free_deep() and
	        sfi_ring_copy_deep_uniq(). made sfi_ring_uniq() more efficient by
	        operating in place.

	        * testsfi.c: test sfi_ring_copy_uniq().

	svn path=/trunk/; revision=3012

2004-12-27  Tim Janik 	# 351c2b1c51781193aef8f04e6c3878457c1bdd29

	document guaranteed properties (stable-ness, set precedence for duplicate

	Mon Dec 27 01:27:56 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.c: document guaranteed properties (stable-ness,
	        set precedence for duplicate elements, etc.) for ring functions.

	svn path=/trunk/; revision=3011

2004-12-26  Tim Janik 	# ff2a21694f5faba39d9c8e9168126ddb6c2108c6

	fix off-by-one error in reverse token lookup.

	Mon Dec 27 00:12:44 2004  Tim Janik  <timj@gtk.org>

	        * gslloader-bsewave.c (gsl_wave_token): fix off-by-one error in reverse
	        token lookup.

	svn path=/trunk/; revision=3010

2004-12-26  Tim Janik 	# 7afd58546a4fd0ece372fc152bb013203ddceddf

	cosmetics, strip path from executable names if logging debugging info.

	Sun Dec 26 23:50:16 2004  Tim Janik  <timj@gtk.org>

	        * sfilog.c: cosmetics, strip path from executable names if logging
	        debugging info.

	svn path=/trunk/; revision=3009

2004-12-26  Tim Janik 	# d86715376ef351ae390a5fdadc346a221c818e19

	fix shadowed variable

	svn path=/trunk/; revision=3008

2004-12-26  Tim Janik 	# 56a4f304b9cb7dafcf81d28bb779bae715790213

	anounce php security advisory

	svn path=/trunk/; revision=3007

2004-12-26  Stefan Westerfeld 	# 06092cf94dfe5e6db5bfe0fcc4c7bc691e8dd721

	Fixes/Code cleanups: the deinitialization code (freeing, closing files and

	Sun Dec 26 19:23:05 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Fixes/Code cleanups: the deinitialization
		code (freeing, closing files and so on) should work now.

	svn path=/trunk/; revision=3006

2004-12-26  Stefan Westerfeld 	# 8bdf4ef50f5cc6dfa7886f69363196921890adb0

	updates

	svn path=/trunk/; revision=3005

2004-12-26  Stefan Westerfeld 	# 86579b3256d65850b8b28eab111d2910c2aa44a8

	updates

	svn path=/trunk/; revision=3004

2004-12-26  Stefan Westerfeld 	# 142dedd9efa29db04f4e050c6efae578b6003660

	Fix ping pong looping: the code now should behave correctly for backward

	Sun Dec 26 13:04:02 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslwaveosc-aux.c: Fix ping pong looping: the code now should behave
		correctly for backward playing (negative block dirstride).

	svn path=/trunk/; revision=3003

2004-12-26  Tim Janik 	# b26cb57436debf0d5b5cd1f7ec720797e4258ee6

	updates

	svn path=/trunk/; revision=3002

2004-12-26  Tim Janik 	# ae63605d45d8ae7aca0a477b383acd843c749365

	updates

	svn path=/trunk/; revision=3001

2004-12-26  Tim Janik 	# b3bf74a2b8cf62a568bc9d9bbd08e696bfa77aa6

	updates

	svn path=/trunk/; revision=3000

2004-12-25  Tim Janik 	# 29b41ffab407401a6cc17475f5e6ee0e68bbc313

	removed cruft. (bst_piano_roll_map): center vertical scrollbar.

	Sun Dec 26 00:36:54 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianoroll.[hc]: removed cruft.
	        (bst_piano_roll_map): center vertical scrollbar.

	svn path=/trunk/; revision=2999

2004-12-25  Stefan Westerfeld 	# 4a8643c97841c3e2b5009794d1ccf30597a31860

	updates

	svn path=/trunk/; revision=2998

2004-12-25  Stefan Westerfeld 	# dc065239504503047ed0e4f11a15ee9d186a4908

	Handle format field correclty (support 8bit and unsigned samples). Fix bug

	Sat Dec 25 17:14:15 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Handle format field correclty (support 8bit and
		unsigned samples). Fix bug in tuning.

	svn path=/trunk/; revision=2997

2004-12-24  Tim Janik 	# a8ada6b9bf0e7a62b763d7d50c62c71dacdb9bba

	new saturator module, supporting various saturation types.

	Fri Dec 24 22:58:11 2004  Tim Janik  <timj@gtk.org>

	        * standardsaturator.idl:
	        * standardsaturator.cc: new saturator module, supporting various
	        saturation types.

	        * Makefile.am: added standardsaturator.idl, added --macro to sfidl
	        invokation to simlpify type registrations in plugins.

	svn path=/trunk/; revision=2996

2004-12-24  Tim Janik 	# 7de9130341d41a31d0a008e1af15e55e9800ae72

	updates

	svn path=/trunk/; revision=2995

2004-12-24  Tim Janik 	# a6ca072f4bdf0339d309cdd4cc971595b53069a6

	updates to support saturation module icon.

	Fri Dec 24 22:46:56 2004  Tim Janik  <timj@gtk.org>

	        * icons/compressor.xcf: updates to support saturation module icon.

	        * saturate.png: saturation module icon.

	        * moog.png: moog filter module icon.

	svn path=/trunk/; revision=2994

2004-12-24  Tim Janik 	# 37e659bd9fd0b523690f641784f16171bc69f26f

	force project deactivation for choldren with automation properties,

	Fri Dec 24 22:39:48 2004  Tim Janik  <timj@gtk.org>

	        * bsecontainer.c (bse_container_remove_backedup): force project
	        deactivation for choldren with automation properties, because
	        automation properties can't be setup on prepared objects.

	        * bseproject.[hcp]*: export undo-stack deactivation function
	        bse_project_push_undo_silent_deactivate(), so other code portions
	        can force project deactivation for specific undo steps.

	        * bsecxxplugin.h: export *_choice_values() getter when declaring
	        enumeration types.

	        * bseplugin.c: provide choice value getter for exported enum types.
	        register enum transform functions for dynamic enum types (allowed
	        since glib-2.4).

	        * bseenginemaster.c: first discard the engine schedule, then
	        modify the master node list, so the old schedule doesn't point
	        at dangling nodes.

	        * bsemath.[hc]: added bse_float_gnuplot() to ease debugging.

	        * bseexports.h: added *_choice_values() getter function to
	        BseExportNodeEnum.

	        * bsemathsignal.[hc]: documentation updates.

	svn path=/trunk/; revision=2993

2004-12-24  Tim Janik 	# cbb22f14f6fbf86c2128e5345da5029b27aaf348

	there's no need to inline the choice value accessor for enum types in

	Fri Dec 24 22:48:19 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: there's no need to inline the choice
	        value accessor for enum types in generated code.

	        * sfiparams.[hc]: allow provision of a choice value array for
	        GEnum types by setting an accessor function with
	        sfi_enum_type_set_choice_value_getter().

	svn path=/trunk/; revision=2992

2004-12-24  Stefan Westerfeld 	# 95706d2cbdeb6ff0768e025ce2508c7cb942b07b

	Added initial implementation of a GSL loader for GUS patches (like those

	Fri Dec 24 15:26:58 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslloader-pat.cc: Added initial implementation of a GSL loader for
		GUS patches (like those usually used in timidity patch sets).

	svn path=/trunk/; revision=2991

2004-12-20  Tim Janik 	# 7ff5f8cb5b4d4f0172ca9396d01ec6eed5269e0e

	removed bse_approx_exp2() and bse_signal_exp2(). added bse_approx2_exp2()

	Mon Dec 20 19:51:07 2004  Tim Janik  <timj@gtk.org>

	        * bsemathsignal.h: removed bse_approx_exp2() and bse_signal_exp2().
	        added bse_approx2_exp2() .. bse_approx9_exp2() functions to approximate
	        2^x with varying precision and speed.
	        added bse_approx2_tanh() .. bse_approx9_tanh() functions to approximate
	        tanh(x) with varying precision and speed.
	        added bse_saturate_hard() and bse_saturate_branching() to implement
	        fast CLAMP()-ing.

	svn path=/trunk/; revision=2990

2004-12-20  Tim Janik 	# a073526677456550702e875b6a4a78634f562445

	call property_changed() in response to automated properties. changed

	Mon Dec 20 15:03:57 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: call property_changed() in response to automated
	        properties. changed property_changed() to return a bool which indicates
	        whether update_modules() needs to be called after property_changed().
	        adapted all usages.

	svn path=/trunk/; revision=2989

2004-12-19  Tim Janik 	# 8cfc469a47f26e1964a94c55ee11c526fc60f0fe

	adapted documentation to Frequency() changes.

	Sun Dec 19 13:47:01 2004  Tim Janik  <timj@gtk.org>

	        * docs/plugin-devel.texi: adapted documentation to Frequency() changes.

	svn path=/trunk/; revision=2988

2004-12-19  Tim Janik 	# 3b86fbc87dba7c7d24e24adb553a6e89e0d02a6e

	added minimum and maximum parameters to bse_param_spec_freq().

	Sun Dec 19 13:44:43 2004  Tim Janik  <timj@gtk.org>

	        * bseparam.[hc]: added minimum and maximum parameters to
	        bse_param_spec_freq().

	        * bsetype.h: turned Frequency() parameters into logarithmic properties.

	svn path=/trunk/; revision=2987

2004-12-19  Miloslav Trmac 	# e060c351a0fb1f24e2db667beef1e9f57ca3bcc3

	Updated Czech translation.

	2004-12-19  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2986

2004-12-19  Tim Janik 	# 35233f7f702e472e5271b120551ecdd3aefc8ff2

	updated libmad dependancy

	svn path=/trunk/; revision=2985

2004-12-19  Tim Janik 	# c8e5d2bcc6c751cb9d958fa56d37cdfaeaaad43c

	cosmetics

	svn path=/trunk/; revision=2984

2004-12-19  Adam Weinberger 	# ddedf08d73afaa2d486bd2d530fce7d0ad4c938d

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2983

2004-12-19  Tim Janik 	# 0d8b014d414479904f94ff4127d7ceca6244391b

	updates

	svn path=/trunk/; revision=2982

2004-12-19  Tim Janik 	# 6c101f9cfbaa70b2ce73dd1326507bc40ff93fc1

	added categories to info dialog.

	Sun Dec 19 02:21:33 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (csource_info_update): added categories
	        to info dialog.

	svn path=/trunk/; revision=2981

2004-12-19  Tim Janik 	# 423faf98f6e67e712962c6fbe2a8fe344a095140

	link to FFT-Scope image in news and add architecture to develeopment section

	svn path=/trunk/; revision=2980

2004-12-19  Tim Janik 	# 8a364054c2d6b9315eea68f5e290b793b62208e6

	relaxed parsing strictness for booleans, so we parse any int and float as

	Sun Dec 19 01:01:41 2004  Tim Janik  <timj@gtk.org>

	        * sfiserial.c (sfi_serialize_primitives): relaxed parsing strictness
	        for booleans, so we parse any int and float as boolean now.

	svn path=/trunk/; revision=2979

2004-12-19  Tim Janik 	# 0e1e1a323f8e19c913b48b279fe3b3e2f6b23f15

	comment fixup

	svn path=/trunk/; revision=2978

2004-12-18  Tim Janik 	# 2797b13f6d8bf4268af613d2db4f924ea84bb39e

	constant cleanups, removed _f and _d postfixes and superfluous casts.

	Sat Dec 18 23:58:04 2004  Tim Janik  <timj@gtk.org>

	        * bseconstvalues.h: constant cleanups, removed _f and _d postfixes and
	        superfluous casts.

	        * bseglobals.h: removed deprectaed constants. deprecated time ranges
	        which are badly choosen and ADSR specific.

	        * bsemathsignal.h: consolidation of signal<->frequency
	        conversion macros.

	        * bseutils.h: define bbuffer size.

	svn path=/trunk/; revision=2977

2004-12-18  Tim Janik 	# 4e0954e470f62e8a08e1a6fe1838af0d6a5cf502

	don't keep sample rate specific fields in the BSE object.

	Sun Dec 19 00:21:27 2004  Tim Janik  <timj@gtk.org>

	        * davsyndrum.c (dav_syn_drum_update_modules): don't keep sample rate
	        specific fields in the BSE object.

	svn path=/trunk/; revision=2976

2004-12-18  Stefan Westerfeld 	# ae2dce9d2b346436d3441ea4aeba4ec64e55f2c0

	Fix compiler warning: latency in frames is a guint.

	Sat Dec 18 23:02:07 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: Fix compiler warning: latency in frames
		is a guint.

	svn path=/trunk/; revision=2975

2004-12-18  Tim Janik 	# ffdf0f32be07a80c3867fb6eff9ab18184b692da

	rotate news and announce release

	svn path=/trunk/; revision=2974

2004-12-18  Tim Janik 	# 5e1c6d36083484bba29794ed2490dadd218c00be

	release 0.6.4, binary 0, interface 0.

	Sat Dec 18 00:12:31 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: release 0.6.4, binary 0, interface 0.

	svn path=/trunk/; revision=2972

2004-12-17  Tim Janik 	# 81cb73716a43a9597c6a4a97cc8ad1907d416748

	release 0.6.4, binary 0, interface 0. CFLAGS and CXXFLAGS fixups.

	Sat Dec 18 00:12:31 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: release 0.6.4, binary 0, interface 0.
	        CFLAGS and CXXFLAGS fixups.

	svn path=/trunk/; revision=2971

2004-12-17  Tim Janik 	# 2f8895afd747578e03271dad7490db4b25439aac

	comment fixup

	svn path=/trunk/; revision=2970

2004-12-17  Tim Janik 	# 27dd603678e10dae2ee69c5bb93b3094c89cac82

	released 0.6.4, interface 0, binary 0. CFLAGS and CXXFLAGS fixups.

	Sat Dec 18 00:09:49 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: released 0.6.4, interface 0, binary 0.
	        CFLAGS and CXXFLAGS fixups.

	svn path=/trunk/; revision=2969

2004-12-17  Tim Janik 	# 672afdf474bb7382c453dd7b889ea0dfd5d00d78

	use BSE_CFLAGS for portaudio check

	svn path=/trunk/; revision=2968

2004-12-17  Tim Janik 	# f2e52d20ee2e041d5e6c300a1f4c4adb22786f2f

	applied translation updates from Petrecca Michele.

	Sat Dec 18 00:07:55 2004  Tim Janik  <timj@gtk.org>

	        * it.po: applied translation updates from Petrecca Michele.

	svn path=/trunk/; revision=2967

2004-12-17  Tim Janik 	# 2abcd5cee182125814c16007e685ae0366af2385

	released 0.6.4.

	Sat Dec 18 00:02:29 2004  Tim Janik  <timj@gtk.org>

	        * released 0.6.4.

	svn path=/trunk/; revision=2966

2004-12-17  Tim Janik 	# 998ab54a69a717df5a97cf32e1de59595943638a

	released 0.6.4.

	Fri Dec 17 22:41:28 2004  Tim Janik  <timj@gtk.org>

	        * released 0.6.4.

	        * configure.in: version 0.6.4, interface 0, binary 0.
	        depend on BSE >= 0.6.4. CFLAGS and CXXFLAGS fixes.
	        wrote portaudio.h check.

	svn path=/trunk/; revision=2965

2004-12-17  Tim Janik 	# e9197120cbb1538e3768ce708b50a9f1ec5700ec

	fix typo

	svn path=/trunk/; revision=2964

2004-12-17  Tim Janik 	# 2e5aa53003d2a8a0db4924e88996cc92d944cf8e

	updates

	svn path=/trunk/; revision=2963

2004-12-17  Tim Janik 	# 7be049215560cf3e8dd955dd464b444e139f52cb

	added FFT scopes

	svn path=/trunk/; revision=2962

2004-12-17  Tim Janik 	# c2d505ae2f8d983a217f9696c7aeae79f481cb73

	use += to add to EXTRA_DIST

	svn path=/trunk/; revision=2961

2004-12-17  Tim Janik 	# 0f95abe047f00a680ec07bb6b8b681e1a2ad82e3

	use += for EXTRA_DIST

	svn path=/trunk/; revision=2960

2004-12-17  Tim Janik 	# 95016924e8eb3e82590ef93b7cbc55940cfc3049

	adedd missing files

	svn path=/trunk/; revision=2959

2004-12-17  Tim Janik 	# cab091b2225c0d629784cb104f495665145f6430

	added missing files

	svn path=/trunk/; revision=2958

2004-12-17  Tim Janik 	# ddf77e1bcfe2e042ee10905eb5d158cf739afb12

	mention scopes

	svn path=/trunk/; revision=2957

2004-12-17  Tim Janik 	# 03f5c6e2aaa5fbd7404ff1edb1f62e88b9df06df

	link updates

	svn path=/trunk/; revision=2956

2004-12-17  Tim Janik 	# b737153c486d8bae8d3aa35bbd25602f4d2d9234

	removed assert_derivation() and assert_ptr_derivation(). added template

	Fri Dec 17 21:19:25 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxutils.h: removed assert_derivation() and assert_ptr_derivation().
	        added template class EnforceDerivedFrom<>; with partial derivation to check
	        for type derivations and pointers tehreof. implemented assert_derived_from<>()
	        in terms of class EnforceDerivedFrom<>; so it can check for derivation of
	        types and pointers thereof (without needing a partial specialization of
	        a function template which C++ doesn't allow).

	        * bsestandardosc.c (bse_standard_osc_class_init): added missing descriptions.

	svn path=/trunk/; revision=2955

2004-12-17  Francisco Javier F. Serrador 	# 7903efa8f5302bd45dcc8f6751025c2aa5589777

	Updated Spanish translation by Jorge González

	2004-12-17  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge González

	svn path=/trunk/; revision=2954

2004-12-17  Tim Janik 	# 4a2820900e738de2c104cf8a02905a5c4b5e460a

	updates

	svn path=/trunk/; revision=2953

2004-12-17  Tim Janik 	# c60a32564e2b16a8e020e8baf9e0787764f3e906

	updates

	svn path=/trunk/; revision=2952

2004-12-17  Tim Janik 	# 4016e68b6c067073b3b382f8d0c69607e0acf36e

	more components

	svn path=/trunk/; revision=2951

2004-12-17  Tim Janik 	# f15aa77118b24a48ca36a382e339c93fbda053e0

	list BSE components

	svn path=/trunk/; revision=2950

2004-12-17  Tim Janik 	# 5dd62b454e4d46e63a8298fa4e1d9098d683ecc3

	new documents, containing only block diagrams at the moment.

	Fri Dec 17 15:56:43 2004  Tim Janik  <timj@gtk.org>

	        * docs/architecture.texi: new documents, containing only block diagrams
	        at the moment.

	        * docs/beast-components.dia:
	        * docs/beast-components.png: component block diagram.

	        * docs/beast-progs.dia:
	        * docs/beast-progs.png: prgram and library block diagram.

	svn path=/trunk/; revision=2949

2004-12-17  Tim Janik 	# 00f7d7d4948cfde33dd1338f00aef3175f5fcafb

	updates

	svn path=/trunk/; revision=2948

2004-12-17  Tim Janik 	# 03509f47845a0de5ebc01684ab2b322dbbffced3

	updates

	svn path=/trunk/; revision=2947

2004-12-16  Stefan Westerfeld 	# 72948872d0d497d6195a29db5e971e346e4d85b9

	Fix spelling.

	svn path=/trunk/; revision=2946

2004-12-16  Adam Weinberger 	# fbcd7738a8d04aa173eec89ce1feaaec7bde3344

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2945

2004-12-16  Tim Janik 	# bce7ae98a983d252aad1b9f1570cbc4ae775cb7d

	rewordeed the "Known Issues" section for clarity and to be worded on

	Thu Dec 16 16:28:56 2004  Tim Janik  <timj@gtk.org>

	        * README: rewordeed the "Known Issues" section for clarity and to
	        be worded on behalf of the project. requested feedback to the beast
	        mailing list.

	svn path=/trunk/; revision=2944

2004-12-16  Stefan Westerfeld 	# 14384f7d00942bc06e944c43e03fe71f552f2096

	Mention known issues with the driver.

	Thu Dec 16 14:45:36 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* README: Mention known issues with the driver.

	svn path=/trunk/; revision=2943

2004-12-16  Tim Janik 	# 39bab332764cf846dbb5e6dafc0b5aee609960bc

	updates

	svn path=/trunk/; revision=2942

2004-12-16  Tim Janik 	# 9226bb152a4570a4fabead21ff27188b8be0a934

	some fixes

	svn path=/trunk/; revision=2941

2004-12-16  Tim Janik 	# e18d6f845e3108fd02754e93a34dbb839a711df4

	updates

	svn path=/trunk/; revision=2940

2004-12-16  Tim Janik 	# 6c2281ce2a426864d13816cf79583dfee7bd9fa8

	updates

	svn path=/trunk/; revision=2939

2004-12-16  Tim Janik 	# 40403b1f5e879cc14a5a9d7169e5982c2f2f04f8

	free value buffer.

	Thu Dec 16 03:37:38 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.c (bst_scrollgraph_finalize): free value
	        buffer.

	svn path=/trunk/; revision=2938

2004-12-16  Tim Janik 	# 54d784e431009af1c4116a726b6d947543921079

	updates

	svn path=/trunk/; revision=2937

2004-12-16  Tim Janik 	# 405dce9a23e9aa128013e7384cbe84f0db8113fb

	sort demos by filename. support csynth and midisynth demos.

	Thu Dec 16 03:02:10 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: sort demos by filename. support csynth and
	        midisynth demos.

	        * library/demo/x2-midi-test.bse: external MIDI Keyboard test.

	        * library/demo/stereo-through.bse: input->output test.

	svn path=/trunk/; revision=2936

2004-12-16  Tim Janik 	# ed68438b65aab3f563e676388445771b73eb63fb

	cosmetics

	svn path=/trunk/; revision=2935

2004-12-16  Tim Janik 	# ed2379211a66d1bde5736ad88fec5dda5de7444c

	gsl_conv_from_double_clip(): gsl_conv_from_double():

	Thu Dec 16 02:11:26 2004  Tim Janik  <timj@gtk.org>

	        * gsldatautils.h:
	        gsl_conv_from_double_clip():
	        gsl_conv_from_double():
	        gsl_conv_from_float_clip():
	        gsl_conv_from_float(): use bse_dtoi() for double->int conversion to
	        get faster rounding and to avoid C++ warnings.

	svn path=/trunk/; revision=2934

2004-12-16  Tim Janik 	# 69db499042bf5cbec17191008723b5ce659dc335

	install user message dialog handler early enough to catch file loading

	Thu Dec 16 01:56:17 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): install user message dialog handler early
	        enough to catch file loading errors.
	        use sfi_error() to signal file loading errors, instead of just status
	        bar display.

	svn path=/trunk/; revision=2933

2004-12-16  Tim Janik 	# 7619ba42d9ec51dbe02b42062e9a091c32f57bfd

	fail to open directories, block devices or symbolic links.

	Thu Dec 16 01:57:36 2004  Tim Janik  <timj@gtk.org>

	        * sfistore.c (sfi_rstore_new_open): fail to open directories,
	        block devices or symbolic links.

	svn path=/trunk/; revision=2932

2004-12-16  Tim Janik 	# 4eab99ccdf5f8fcdda487aa24e82b886847bcaed

	removed BseSnooper from toolbar, added oscillator and ADSR modules

	Thu Dec 16 01:13:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_init): removed BseSnooper
	        from toolbar, added oscillator and ADSR modules instead.
	        keep the toolbar module order specified toolbar_types at the GUI.

	svn path=/trunk/; revision=2931

2004-12-15  Tim Janik 	# bd69c1361c3e5086b8c0ac6175b3783bc9488a12

	fixes

	svn path=/trunk/; revision=2930

2004-12-15  Tim Janik 	# be15f9ff0e1e74d4c4941991bce49ad12a4c1b97

	adapt to beast 0.6.4. this fixes song compat code adding extra

	Wed Dec 15 23:58:50 2004  Tim Janik  <timj@gtk.org>

	        * zintern/mono-wave.bse: adapt to beast 0.6.4. this fixes song compat
	        code adding extra track->master connections to tracks using wave files.

	svn path=/trunk/; revision=2929

2004-12-15  Tim Janik 	# 5bc02d251c227dda22b29876e198e9e1db88f4b8

	srcdir!=builddir  fix

	svn path=/trunk/; revision=2928

2004-12-15  Stefan Westerfeld 	# c5ad9a0d019fa3600700f8d1815906b5380ef286

	freeverb bug

	svn path=/trunk/; revision=2927

2004-12-15  Tim Janik 	# 049ab7dee010d08cea45428b22075cb1c5bf3124

	updates

	svn path=/trunk/; revision=2926

2004-12-13  Miloslav Trmac 	# df1fb93ec3e68d4cbd445f6785791dfb05d5781b

	Updated Czech translation.

	2004-12-13  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2925

2004-12-13  Francisco Javier F. Serrador 	# 3313c6d4cf22307a3551ce2cfcac7993268ed646

	Updated Spanish translation.

	2004-12-13  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=2924

2004-12-13  Tim Janik 	# 1e52a84f1f16955b2ef0cab56019e063b9aa0a3d

	updates

	svn path=/trunk/; revision=2923

2004-12-13  Stefan Westerfeld 	# fbe66b410aafbb9128ed372b39f1a5496ae3a97b

	updates

	svn path=/trunk/; revision=2922

2004-12-13  Stefan Westerfeld 	# 430a709a172a7408607a68a2dd6e1e21dd0afbd8

	Info strings should be lower case.

	Mon Dec 13 15:31:37 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocidl.cc bsecore.idl: Info strings should be lower case.

	svn path=/trunk/; revision=2921

2004-12-13  Stefan Westerfeld 	# 393bbdd02dd468f0f9fd3aa11984632b9136e0bc

	More TODO.

	svn path=/trunk/; revision=2920

2004-12-13  Stefan Westerfeld 	# 576699662362ca07ec3b33b528616be747516cfc

	more todo

	svn path=/trunk/; revision=2919

2004-12-13  Tim Janik 	# 2544f5168de025f21bbce3ff9278b3174a984cd3

	more dependancy fixes

	svn path=/trunk/; revision=2918

2004-12-13  Tim Janik 	# 4a08d05981396ac0297486456b10a4bf98bc92e7

	added missing dependancies

	svn path=/trunk/; revision=2917

2004-12-13  Tim Janik 	# c1bf4414e71cdc98129b587c65a2ea643f57b025

	dependency fixes. special case xmllint without ever causing rebuilds

	svn path=/trunk/; revision=2916

2004-12-13  Tim Janik 	# 0aa3f08ff7d63f93f55e83380876a8c21a2bc114

	shutup

	svn path=/trunk/; revision=2915

2004-12-13  Tim Janik 	# fbcaf5dbd0451593c9ce89283a0b6f44155064da

	version 0.6.4, binary 0, interface 0.

	Mon Dec 13 01:03:48 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: version 0.6.4, binary 0, interface 0.

	        * Makefile.am:
	        * configure.in: removed bsw/.

	        * bsw/*: removed.

	svn path=/trunk/; revision=2914

2004-12-12  Tim Janik 	# db1480db2ac932bbfd36658d2c1d92912835231b

	removed libbsw dependancy.

	Mon Dec 13 00:40:08 2004  Tim Janik  <timj@gtk.org>

	        * shell/Makefile.am: removed libbsw dependancy.

	        * shell/bsescminterp.c: hard code BseServer id.

	        * shell/bsescminterp.h: including bse/bse.h is good enough.

	svn path=/trunk/; revision=2913

2004-12-12  Tim Janik 	# 205df195811616a46b66e665975511c368d22d5d

	removed BSW dependancy. generate language ClientC binding for BSE.

	Mon Dec 13 00:31:18 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: removed BSW dependancy.
	        generate language ClientC binding for BSE.

	        * beast-gtk/bstbseutils.h:
	        * beast-gtk/bstbseutils.c: include/build BSE language binding
	        and provide binding utilities. moved bst_project_restore_from_file()
	        from bstutils.[hc] here.

	svn path=/trunk/; revision=2912

2004-12-12  Stefan Westerfeld 	# cc7ef7b859a1020e6ea40c956ebce7330f072623

	added scripts to write

	svn path=/trunk/; revision=2911

2004-12-12  Tim Janik 	# 86166236e317ddeffb6df4b22484350ce1756f1f

	updates

	svn path=/trunk/; revision=2910

2004-12-12  Tim Janik 	# 134b91a3f8b98b04ac225e387c0c40aa97bb9112

	removed gslwave.header and gslloader-gslwave.c, build from

	Sun Dec 12 19:47:32 2004  Tim Janik  <timj@gtk.org>

	        * removed gslwave.header and gslloader-gslwave.c, build from
	        gslloader-bsewave.c.

	svn path=/trunk/; revision=2909

2004-12-12  Tim Janik 	# 5d204ce483eaf01a535e2458a89fa772d1d2aa80

	CVS copied from gslwave.header.

	Sun Dec 12 19:38:22 2004  Tim Janik  <timj@gtk.org>

	        * bsewave.header: CVS copied from gslwave.header.

	        * gslloader-bsewave.c: CVS copied from gslloader-gslwave.c.

	svn path=/trunk/; revision=2908

2004-12-12  Tim Janik 	# e64c694580d79b99b61cbc3acf88730ca3a8b046

	updates

	svn path=/trunk/; revision=2907

2004-12-12  Tim Janik 	# d001e05e7625fa0e092a7bf0606804e9f26fa5ca

	general fixups to ensure probe/flow/boundary jobs are collected in order

	Sun Dec 12 18:55:36 2004  Tim Janik  <timj@gtk.org>

	        * bseenginemaster.c:
	        * bseengineutils.c:
	        general fixups to ensure probe/flow/boundary jobs are collected
	        in order and are given precedence over collecting transaction jobs.

	        * bseenginenode.h: turned probe jobs, acces jobs and boundary jobs into
	        a single union EngineTimedJob. this avoids breaking strict aliasing
	        rules which results in wrong code generation with gcc-3.3 and gcc-3.4.
	        adapted all structure usages.

	svn path=/trunk/; revision=2906

2004-12-12  Adam Weinberger 	# 76ad8f29d16bafd869fd977d72dfa1b9ffb44d6e

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2905

2004-12-12  Tim Janik 	# c76e493aea6185b8e9bf70a98f47cf8fe2198891

	added label to indicate unconnected output channels.

	Sun Dec 12 03:26:13 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: added label to indicate unconnected
	        output channels.

	        * beast-gtk/dialogs/radgets-beast.xml: removed event-box around
	        scrollgraph since it has its own outer window now.

	svn path=/trunk/; revision=2904

2004-12-12  Tim Janik 	# 497abe594ad1913007da795f65ae97bfe685361a

	make sure pending user trash jobs are collected before ordinary trash jobs

	Sun Dec 12 03:13:17 2004  Tim Janik  <timj@gtk.org>

	        * bseengineutils.c: make sure pending user trash jobs are collected
	        before ordinary trash jobs are collected.

	        * bsesource.[hcp]*: added bse_source_has_output().

	svn path=/trunk/; revision=2903

2004-12-11  Tim Janik 	# 19cc48110258cb47ca0c866e7cda117af8ee8d5b

	updates

	svn path=/trunk/; revision=2902

2004-12-11  Tim Janik 	# f6d1fccbac90fa76419d78b10e1845cd4bb15a03

	changed storage logic, so overwriting files happens by saving to a

	Sun Dec 12 00:42:24 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c: changed storage logic, so overwriting
	        files happens by saving to a temporary file and then renaming that.
	        this fixes embedded wave data getting lost when saving to existing
	        BSE files.

	svn path=/trunk/; revision=2901

2004-12-11  Tim Janik 	# 2aeef64b1951764db9d5768db7a9ae09c158b216

	parse velocity as int as well as float.

	Sat Dec 11 22:45:46 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.c (bse_part_restore_private): parse velocity as int as well as float.

	svn path=/trunk/; revision=2900

2004-12-11  Miloslav Trmac 	# a8786d37ea8576e0c8037ee3d7fb7ebba09e2b5c

	Updated Czech translation.

	2004-12-11  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2899

2004-12-11  Tim Janik 	# dab6e2b81ac64fc3b8220f7eb653471288f432c3

	updates

	svn path=/trunk/; revision=2898

2004-12-11  Tim Janik 	# d0c7b105e0ef3d585e12cc7cc24a29139478c902

	don't hide-on-delete the window, to stop probing for closed windows.

	Sat Dec 11 15:34:43 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.c: don't hide-on-delete the window, to stop
	        probing for closed windows.

	svn path=/trunk/; revision=2897

2004-12-11  Tim Janik 	# 563e36e0a933730fd2f1edfad3408b2b718b8209

	added block-size argument to probe callback.

	Sat Dec 11 15:35:16 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.[hc]: added block-size argument to probe callback.

	        * bseenginemaster.c: properly probe unscheduled nodes. optimized
	        probing by keeping a list of nodes with probe jobs.
	        altered probe job value counter maintenance.
	        clean up probe jobs upon discarding.

	        * bseengineutils.c: assert NULL probe jobs on discarded nodes.

	        * bseprobe.cc: properly handle probes from unscheduled nodes.

	svn path=/trunk/; revision=2896

2004-12-10  Tim Janik 	# 6f1e72ad4b035f98ee185f226f730667849d7b7c

	updates

	svn path=/trunk/; revision=2895

2004-12-10  Tim Janik 	# 0db3edd2353b6e91b78fe87a245061938fc0f195

	adapt to mix frequency changes. delete toplevel automatically when proxy

	Fri Dec 10 15:08:07 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: adapt to mix frequency changes.
	        delete toplevel automatically when proxy is released. set window title.
	        bst_scrollgraph_build_dialog(): build complete dialogs, adjust title.

	        * beast-gtk/dialogs/radgets-beast.xml: removed test widgets.

	        * bsesource.proc: docu fixes.

	        * docs/beast-index.texi: added signals to object doc headline.

	svn path=/trunk/; revision=2894

2004-12-10  Tim Janik 	# 1eb0f7ac0b400341224cbc4ab8dc459f4f122348

	fixed bugs, print out signals. print out all BSE objects.

	Fri Dec 10 15:24:35 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: fixed bugs, print out signals. print out
	        all BSE objects.

	        * bseprobe.idl, bseprobe.cc: deliver mix frequency with probes.

	svn path=/trunk/; revision=2893

2004-12-10  Tim Janik 	# 90de38f18422059a1fccf66b908aec0b26306cbd

	changed arrow outline color from blue to black.

	Fri Dec 10 12:18:41 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvaslink.c (bst_canvas_link_build_async): changed
	        arrow outline color from blue to black.

	svn path=/trunk/; revision=2892

2004-12-10  Tim Janik 	# bdd05f2b1c4ed75bcfca232bb8a91ae7228adc3f

	provide proper warning if scale/dial widget couldn't be created.

	Fri Dec 10 11:29:58 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c: provide proper warning if scale/dial widget
	        couldn't be created.

	        * beast-gtk/bstscrollgraph.c: options fixup.

	svn path=/trunk/; revision=2891

2004-12-10  Tim Janik 	# d1381d0a7dd21e6d7c942a66da4a8ec3bbbd8bf7

	added ::resize-values signal. fixed copying of old values. fixed fft-size

	Fri Dec 10 11:01:28 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: added ::resize-values signal.
	        fixed copying of old values. fixed fft-size check upon probe
	        notification. added ruler and alignment resizing logic.

	        * beast-gtk/dialogs/radgets-beast.xml: scrollgraph dialog adaptions.

	svn path=/trunk/; revision=2890

2004-12-08  Tim Janik 	# 982221fb21bc4845fcdeb3a662a6c44081acd253

	updates

	svn path=/trunk/; revision=2889

2004-12-08  Adam Weinberger 	# 5df8fa0eaa212e84331e3a96b767df85152d5e8f

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2888

2004-12-07  Tim Janik 	# ecd6aa5871d3385ab90cd7218e30d9780afa3ccf

	fix typo

	svn path=/trunk/; revision=2887

2004-12-07  Tim Janik 	# 86107072d0d11f0b4c5f67b2222337cd5f3ea7f9

	added missing files

	svn path=/trunk/; revision=2886

2004-12-06  Tim Janik 	# b2bfab737202606f684b252b01d9f29d6bdb3172

	added FFTSize choice.

	Mon Dec  6 23:40:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: added FFTSize choice.

	        * beast-gtk/bstutils.[hc]: added fft-size<->int conversion functions.

	        * bstscrollgraph.[hc]: made fft size configurable.

	        * beast-gtk/dialogs/radgets-beast.xml: added rulers to scrolgraph, use
	        GtkTable for layouting.

	        * beast-gtk/dialogs/radgets-standard.xml: added hruler and vruler.

	        * beast-gtk/gxk/gxkutils.c: confine popup-menus to screen boundaries.

	        * beast-gtk/gxk/gxkmenubutton.c: fixed push-in positioning.

	        * beast-gtk/gxk/gxkdialog.c: cleanups.

	        * beast-gtk/bstparam-choice.c: fixed empty tooltips.

	svn path=/trunk/; revision=2885

2004-12-06  Tim Janik 	# 451cc8b0a74704f41edec231608f969a02cd28e1

	block-size computation fixups. this fixes ffts beyond block boundaries.

	Mon Dec  6 23:46:11 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.cc: block-size computation fixups. this fixes ffts beyond
	        block boundaries.

	svn path=/trunk/; revision=2884

2004-12-06  Stefan Westerfeld 	# 6eb788927736c30f5ed62f59d71f35b61edfb16c

	Use BSE_DEFINE_EXPORTS, which now works thanks to a libbse fix. Do proper

	Mon Dec  6 22:47:48 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: Use BSE_DEFINE_EXPORTS, which now works
		thanks to a libbse fix. Do proper deinitialization of libportaudio
		in the finalize method.

	svn path=/trunk/; revision=2883

2004-12-06  Stefan Westerfeld 	# bf0dae733eacd4478b3c5c8333110d761f501d46

	To allow implementing C-style plugins in C++ sources, as required for the

	Mon Dec  6 22:47:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseplugin.h: To allow implementing C-style plugins in C++ sources,
		as required for the PortAudio driver, declare extern "C" linkage for
		the symbol defined by BSE_DEFINE_EXPORTS when compiled within a C++
		source. The extern "C" code was taken from bsecxxplugin.h.

	svn path=/trunk/; revision=2882

2004-12-06  Stefan Westerfeld 	# 65923423375a417ce4b9a93349dbd503c3fdf6fa

	Fix splitting of "Bse::FFTSize" to "Bse", "FFT" and "Size", using the rule

	Mon Dec  6 15:37:29 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.cc(splitName): Fix splitting of "Bse::FFTSize" to
		"Bse", "FFT" and "Size", using the rule that more than two upper case
		letters followed by a lower case letter indicate a word boundary.

		* testsfidl.cc: Added "Bse::FFTSize", "XWindows::WMHints" to test the
		new rule.

	svn path=/trunk/; revision=2881

2004-12-05  Vincent van Adrighem 	# 89e242ec6b12fb23bab8c32d049a45426b3b27ed

	Translation updated by Tino Meinen.

	2004-12-06  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2880

2004-12-03  Tim Janik 	# efed37331a1363dc08221215e92bc695054ac255

	more debugging improvements

	svn path=/trunk/; revision=2879

2004-12-03  Stefan Westerfeld 	# 8fe248715115c78121dbf07fb41d8276524f928f

	Parse #pragma lines into Pragma structures, which can then be retrieved by

	Fri Dec  3 21:24:34 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Parse #pragma lines into Pragma structures, which can
		then be retrieved by individual language bindings using
		parser.getPragmas ("SomeBinding"). This will ret

		* sfidl-clientc.*: Support new #pragma lines:
		  #pragma SFIDL ClientC::binding_specific_c_header "foo.h"
		  #pragma SFIDL ClientC::binding_specific_c_source "foo.c"
		They allow including custom C code into the generated output.

	svn path=/trunk/; revision=2878

2004-12-03  Tim Janik 	# 93129b7f69a95b3ba89691d3dbab3e1d0200f063

	don't override detailed errors.

	Fri Dec  3 21:31:26 2004  Tim Janik  <timj@gtk.org>

	        * bsewaverepo.proc: don't override detailed errors.

	        * gsldatahandle-mad.[hc]: provide GslErrorType errors instead of
	        strings. added gsl_data_handle_new_mad_err(), improved debugging.

	        * gslloader-mad.c: pass on errors.

	svn path=/trunk/; revision=2877

2004-12-03  Tim Janik 	# 89a7bee2c6f3d13d85dbc677bdf52e26443c4ff3

	docuemnt --

	svn path=/trunk/; revision=2876

2004-12-03  Tim Janik 	# 2707051a6248172d26d7dcc90f346ee28704ed23

	stop argument parsing at "--".

	Fri Dec  3 19:05:27 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_early_parse_args): stop argument
	        parsing at "--".

	        * launchers/suidmain.c (main): check for "--" arguments via a function
	        custom_check_arg_stopper() in unpriviledged code.

	        * launchers/beaststart.c (custom_check_arg_stopper): check for "--".

	        * launchers/bseshstart.c (custom_check_arg_stopper): check for "--",
	        "-s" and "-c", because guile stops argument parsing here also.

	svn path=/trunk/; revision=2875

2004-12-03  Tim Janik 	# 3934b4fc6939ca8e512cb08a5f79cdd4a2131d9e

	removed nice level printf from unpriviledged code.

	Fri Dec  3 18:49:28 2004  Tim Janik  <timj@gtk.org>

	        * launchers/suidmain.c (main): removed nice level printf from
	        unpriviledged code.

	        * shell/bsesh.c (shell_parse_args):
	        * beast-gtk/bstmain.c (bst_early_parse_args): simply ignore -N and
	        -n NICELEVEL options which are handled by the suid launchers.
	        added documentation for both options.

	svn path=/trunk/; revision=2874

2004-12-03  Tim Janik 	# 5764294671ddcc6f78fa3141d01d34fcfbf6081a

	renamed variable and moved to file scope in priviledged code. (main):

	Fri Dec  3 18:32:33 2004  Tim Janik  <timj@gtk.org>

		* launchers/suidmain.c:
		(adjust_priority): renamed variable and moved to file scope in
		priviledged code.
		(main): parse -n=<nicelevel> and -N options in unpriviledged code
		sections and drop nicelevel if appropriate.

	svn path=/trunk/; revision=2873

2004-12-03  Stefan Westerfeld 	# 5e5ba4d7ce489f0f510849a77e97151020dac737

	Don't leak memory.

	Fri Dec  3 16:59:29 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/scripts/waveloadtest.scm: Don't leak memory.

	svn path=/trunk/; revision=2872

2004-12-03  Stefan Westerfeld 	# 228e1014469a1771e7c7b9f1a3889e57c82f02cb

	Properly integrated tests/scripts directory.

	Fri Dec  3 16:56:36 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in:
		* tests/Makefile.am: Properly integrated tests/scripts directory.

	svn path=/trunk/; revision=2871

2004-12-03  Stefan Westerfeld 	# d78cb46303282bc85ffd0f83069ea02a95ec0ee6

	Flush at newline boundary.

	Fri Dec  3 16:55:13 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/scripts/waveloadtest.scm: Flush at newline boundary.

	svn path=/trunk/; revision=2870

2004-12-03  Stefan Westerfeld 	# 8eca7102ab0c1d678aeb6af7d7d3f9eb52086197

	cvsignore

	svn path=/trunk/; revision=2869

2004-12-03  Stefan Westerfeld 	# a887d15262259d5e9d7a6e54751e2d10349cb622

	Added a scheme script for checking whether files can be loaded by BSE.

	Fri Dec  3 16:42:24 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/scripts/Makefile.am:
		* tests/scripts/waveloadtest.scm: Added a scheme script for checking
		whether files can be loaded by BSE.

	svn path=/trunk/; revision=2868

2004-12-03  Tim Janik 	# a47f585f5179d0e7634acc701c55f798369d8a74

	implement in terms of sfi_choice_match_detailed().

	Fri Dec  3 15:51:48 2004  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.c (bse_scm_choice_match): implement in terms
	        of sfi_choice_match_detailed().

	        * shell/bse-scm-glue.boot: implement bse-test-error with
	        bse-choice-match?.

	svn path=/trunk/; revision=2867

2004-12-03  Tim Janik 	# 025f0291bcb83339d1c06334afbcd8e815e8b213

	always match on word boundary only.

	Fri Dec  3 15:50:31 2004  Tim Janik  <timj@gtk.org>

	        * sfitypes.c (sfi_choice_match_detailed): always match on word
	        boundary only.

	svn path=/trunk/; revision=2866

2004-12-03  Tim Janik 	# b57fc376f8d5950b6b2c60dc4b297dbf6b040f1f

	support vruler and hruler types.

	Fri Dec  3 13:45:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-standard.xml: support vruler and hruler types.

	        * beast-gtk/gxk/gxkradget.c: register GtkHRuler and GtkVRuler types.

	svn path=/trunk/; revision=2865

2004-11-30  Tim Janik 	# 8ee8759e9ec7616353d894d1f6501145b4d209c9

	upates

	svn path=/trunk/; revision=2864

2004-11-30  Tim Janik 	# e7f20c3a97fde5f1e018f57994495e90a38da0a6

	support adjustment of scrolling direction, value boost and spectrum

	Tue Nov 30 21:45:54 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: support adjustment of scrolling
	        direction, value boost and spectrum flipping. added parameter GUI
	        creation code. resizing fixes.

	        * beast-gtk/dialogs/radgets-beast.xml: scrollgraph GUI changes.

	        * beast-gtk/gxk/gxkparam.[hc]: support GObject property parameters.

	        * beast-gtk/bstutils.[hc]: added support for gmasks spanning multiple
	        gmask columns. added bst_object_class_install_property().

	        * beast-gtk/bstparam.[hc]: support param gmask creations in specific
	        columns. wrap provide size-grouped object param constructor.

	        * beast-gtk/bstsnetrouter.c: use new GUI creation code for scrollgraphs.

	svn path=/trunk/; revision=2863

2004-11-30  Stefan Westerfeld 	# 647a333616214fe26e23be5b5bda7bfbc4004c3d

	fix typo

	svn path=/trunk/; revision=2862

2004-11-30  Stefan Westerfeld 	# db5dcad73b6efeb8d3da24ccb76d1ad5401d9763

	Since the driver class is called PortAudio, adapted the function names

	Tue Nov 30 10:30:51 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: Since the driver class is called
		PortAudio, adapted the function names from portaudio_ to port_audio_*.
		Lowered the driver rating to _FALLBACK, to prefer the native BEAST
		drivers for OSS and ALSA. Minor cleanups.

		* configure.in: Minor cleanup.

	svn path=/trunk/; revision=2861

2004-11-29  Tim Janik 	# 8c95028bc9e1ccd92c4d599afed82ca80d609065

	fixed up package name

	svn path=/trunk/; revision=2860

2004-11-29  Tim Janik 	# 941034b3bfa02393eedbcf31a0ac58c07129b505

	versioning fixup

	svn path=/trunk/; revision=2859

2004-11-29  Tim Janik 	# d5f0dc141d4a78ab8a1f4c7f419cdad275105d08

	bus_probes_notify(): plugged memory leak.

	Mon Nov 29 20:55:07 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.c:
	        bus_probes_notify(): plugged memory leak.

	        * beast-gtk/bstscrollgraph.c: first start at size requisition.
	        altered default display. create an extra window to allow proper
	        scrolling behaviour. display frequencies in deci bell.
	        added frequency shading via GxkColorDots. removed weighting by
	        1/n which is done by BSE now. plugged mem leak.
	        fixed off-by-one error in reverse coord loookup.

	        * beast-gtk/gxk/gxkutils.[hc]: added GxkColorDots which implements
	        a linear color interpolator.

	svn path=/trunk/; revision=2858

2004-11-29  Tim Janik 	# 629034493f82d80a7a0d7888c0bc19de553c2a06

	append probe jobs upon insertion, so probe data isn't mixed up between

	Mon Nov 29 21:45:25 2004  Tim Janik  <timj@gtk.org>

	        * bseenginemaster.c: append probe jobs upon insertion, so probe data
	        isn't mixed up between multiple probe jobs, and probe jobs are
	        processed in order.

	        * bseprobe.cc: normalize fft by multiplying with 1/n.

	        * bseutils.[hc]: added bse_debug_dump_floats() to easily dump debugging
	        wave data to a file in /tmp/.

	svn path=/trunk/; revision=2857

2004-11-28  Stefan Westerfeld 	# 623d1312d4b611948266d3dda2cae734393c7bc4

	Added support "rw", "ro" and "wo" options for readwrite, readonly or

	Sun Nov 28 16:20:25 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: Added support "rw", "ro" and "wo" options
		for readwrite, readonly or writeonly open.

	svn path=/trunk/; revision=2856

2004-11-28  Stefan Westerfeld 	# f9562b588233b3faf6c452c35f72fd3136ce9e0f

	initial version of a PortAudioV19 driver based on PortAudios blocking API;

	Sun Nov 28 15:38:12 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-portaudio.cc: initial version of a PortAudioV19 driver
		based on PortAudios blocking API; works with the PortAudio ALSA
		driver, and somewhat with the PortAudio OSS driver (which appears to
		have bugs when it comes to configuring latency)

	svn path=/trunk/; revision=2855

2004-11-27  Miloslav Trmac 	# a153eb3d53469c323a087133e17548a0ffd0a1e1

	Updated Czech translation.

	2004-11-27  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2854

2004-11-27  Tim Janik 	# 19db3fec3aafa9f9adfd34ebf6d7008ac8cbd1cd

	* reflect renames in the code base

	Sat Nov 27 20:02:04 2004  Tim Janik  <timj@gtk.org>

	        * engine-mplan.txt: * reflect renames in the code base

	svn path=/trunk/; revision=2853

2004-11-27  Tim Janik 	# d670bcd462f119a615943f6ed38578b005049bb4

	truncate .wav files when opening. wrtie out the initial wav header with a

	Sat Nov 27 18:57:11 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmwriter.c (bse_pcm_writer_open): truncate .wav files when
	        opening. wrtie out the initial wav header with a very long data
	        block size, so abortion of the wav saving process (which needs
	        adaption of the data size later on) leaves a wav file with
	        non-0 data block length. (required for most programs to read
	        wav files).

	svn path=/trunk/; revision=2852

2004-11-27  Tim Janik 	# 689c0232b131f2f7d7242f29dc105c7def069daa

	updates

	svn path=/trunk/; revision=2851

2004-11-27  Tim Janik 	# 1c39f40d539c406b6c6111eaf08c40ada17c96ec

	request and display FFT data.

	Sat Nov 27 18:37:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: request and display FFT data.

	        * beast-gtk/bstsnifferscope.[hc]: support specification of block-sizes
	        for sample and fft data requests in bse_source_queue_probe_request().

	svn path=/trunk/; revision=2850

2004-11-27  Tim Janik 	# d20e33f2d9c4e0c1e56e9501d3aade863f67e005

	implemented blackman windowed fft probes. added support for varying probe

	Sat Nov 27 18:39:38 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.idl:
	        * bseprobe.cc: implemented blackman windowed fft probes.
	        added support for varying probe block sizes.
	        removed artifical delay at probe start.

	svn path=/trunk/; revision=2849

2004-11-26  Adam Weinberger 	# 982f7efe10b2e925acd998e991170c6fd3b8b7c1

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2848

2004-11-26  Tim Janik 	# a4b98bb2acf8a173381a93ecd6115b1de95e16d6

	request and draw probed sample data.

	Fri Nov 26 20:52:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: request and draw probed sample data.

	        * beast-gtk/bstsnetrouter.c: setup source and ochannel on scrollgraphs.

	svn path=/trunk/; revision=2847

2004-11-26  Tim Janik 	# f1d3520a2e4326dc5728f1beedce19e6569eeaed

	paint testpattern.

	Fri Nov 26 19:14:00 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: paint testpattern.

	svn path=/trunk/; revision=2846

2004-11-26  Tim Janik 	# a0fa0927c0b90e0aaad0dbd97ff8a136cb69169c

	new NO-WINDOW widget skeleton for display purposes.

	Fri Nov 26 16:45:32 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstscrollgraph.[hc]: new NO-WINDOW widget skeleton for
	        display purposes.

	        * beast-gtk/dialogs/radgets-beast.xml: define "scrollgraph" radget
	        type and "scrollgraph-dialog" to monitor output signals.

	        * beast-gtk/bstutils.c: define BstScrollgraph as radget type.

	        * beast-gtk/bstsnetrouter.c: popup scrollgraph-dialog to monitor
	        output signals.

	        * beast-gtk/gxk/gxkradget.c: warning cosmetics.

	svn path=/trunk/; revision=2845

2004-11-26  Tim Janik 	# dff22aea62e0de1c3f9a9b49d1c27334d91cf6da

	cleanups.

	Fri Nov 26 16:17:05 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstknob.[hc]: cleanups.

	svn path=/trunk/; revision=2844

2004-11-26  Tim Janik 	# 8af1a5b623660213e9b060b2095db33cf2ad612c

	added translator

	svn path=/trunk/; revision=2843

2004-11-26  Tim Janik 	# c7d2e4b419d1ac5986689decf93aff1e82d5df87

	updates

	svn path=/trunk/; revision=2842

2004-11-24  Tim Janik 	# 3de2e98a7b9ca4fbf455d92bde7ca5f6ba273451

	updates

	svn path=/trunk/; revision=2841

2004-11-23  Tim Janik 	# 8f65d2cb0bef308040fee0182509fa8dde982747

	g++-3.4 doesn't accept structure casts in constant expressions (e.g.

	Tue Nov 23 16:25:05 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h (g_static_assert): g++-3.4 doesn't accept structure casts
	        in constant expressions (e.g. G_STRUCT_OFFSET (GPollFD, fd) ==
	        G_STRUCT_OFFSET (struct pollfd, fd)), so implement static_assert() via
	        negative array sizes.

	svn path=/trunk/; revision=2840

2004-11-23  Tim Janik 	# 91e88ba306f1b50be6a8d4a2039a0be84f8269ce

	updates

	svn path=/trunk/; revision=2839

2004-11-21  David Lodge 	# eedf461e2d452e7a6f6e3fd29c78f7620c3b29ba

	Updated British translation.

	2004-11-21  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British translation.

	svn path=/trunk/; revision=2838

2004-11-20  Adam Weinberger 	# 2f7e64e88fcb338168e63633b97fa2bd675721c1

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2837

2004-11-20  Tim Janik 	# ee2bb19f763881c41c736185aaea3260d2fea0c1

	added footnotes announcement

	svn path=/trunk/; revision=2836

2004-11-20  Tim Janik 	# 7486db7e78c456e72c209d6b263b162de61d6026

	tooltip updates

	svn path=/trunk/; revision=2835

2004-11-20  Tim Janik 	# ca98919c74707a2b0384b0c9ef050af15b66be69

	use gxk_menu_attach_as_submenu() for proper submenu handling. allow

	Sat Nov 20 12:43:15 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmenus.c: use gxk_menu_attach_as_submenu() for proper
	        submenu handling. allow creation of empty menus.

	        * beast-gtk/bstmenus.h: allow icons for submenu items.

	        * beast-gtk/bstsnetrouter.c: implemented output signal submenu.

	        * beast-gtk/icons/signal.png:
	        * beast-gtk/icons/signal.xcf: new icons.

	svn path=/trunk/; revision=2834

2004-11-20  Tim Janik 	# 35c33d2ed6dbc192d51304b718d60ed81bb5c303

	improved readability

	svn path=/trunk/; revision=2833

2004-11-20  Tim Janik 	# 1045abc099949da63a21bc0fb3d40c9266f3efaf

	shorten probe-queue length to 3 subsequent requests, this should be

	Sat Nov 20 07:29:15 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.cc: shorten probe-queue length to 3 subsequent requests,
	        this should be sufficient to account for GUI scope request jitter
	        of approximately 1 block in size.

	svn path=/trunk/; revision=2832

2004-11-20  Tim Janik 	# 6c21a7528d961d3988756146f0887063797340c9

	shorten probe-queue length to 3 subsequent requests.

	Sat Nov 20 07:29:15 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.cc: shorten probe-queue length to 3 subsequent requests.

	svn path=/trunk/; revision=2831

2004-11-20  Tim Janik 	# fa4811bfdc1add1125f6d477cc20c714dd256944

	bse_source_queue_probe_request(): prioritize scope updates lower than

	Sat Nov 20 06:54:22 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.c:
	        bse_source_queue_probe_request(): prioritize scope updates lower than
	        gtk's redraw priority, to 1) allow timely updates, 2) prevent scope
	        updates running behind playposition under heavy load scenarios.

	svn path=/trunk/; revision=2830

2004-11-20  Tim Janik 	# 10f145fe0c2d76a52089d5dd4f542d24d0eccb1a

	announce release.

	Fri Nov 19 00:47:50 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce release.

	        * docs/site-oldnews.texi: rotation.

	svn path=/trunk/; revision=2829

2004-11-18  Adam Weinberger 	# d0efd70dad964ddceb4bb4ee6fc500338515864b

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2828

2004-11-18  Tim Janik 	# bea7cf31952a64eadbac7150e9eeb8c9705399b7

	update on new features.

	Thu Nov 18 18:07:21 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-about.texi: update on new features.

	svn path=/trunk/; revision=2827

2004-11-18  Tim Janik 	# 58c08649aed4316654373636a302cdfc602b73f8

	released beast 0.6.3, binary 0, interface 0.

	Thu Nov 18 14:05:26 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: released beast 0.6.3, binary 0, interface 0.

	Thu Nov 18 15:10:33 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: released bse-alsa 0.6.3, binary 0, interface 0.

	svn path=/trunk/; revision=2825

2004-11-18  Tim Janik 	# 03a581913a87399c5281910e6cf20abec91dcb8d

	link updates

	svn path=/trunk/; revision=2824

2004-11-18  Francisco Javier F. Serrador 	# df52f6501da57257957befbb29dd9884a8fa2edb

	Updated Spanish translation by Jorge

	2004-11-18  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge

	svn path=/trunk/; revision=2823

2004-11-18  Tim Janik 	# 581a4a3e574cc4ba266cfae84c405c32e4165646

	update

	svn path=/trunk/; revision=2822

2004-11-18  Tim Janik 	# 2aafa0dd450c8c8db284163ad71ec3d362765112

	fixed inverted trigger condition.

	Thu Nov 18 13:34:56 2004  Tim Janik  <timj@gtk.org>

	        * davbassfilter.cc: fixed inverted trigger condition.

	svn path=/trunk/; revision=2821

2004-11-17  Tim Janik 	# 57311d7b7c67c637356e2abeb277ed377944754f

	added config options to turn off scopes and meters.

	Wed Nov 17 01:20:56 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.c:
	        * beast-gtk/bstsnifferscope.c:
	        * beast-gtk/bstrecords.idl: added config options to turn off scopes and
	        meters.

	svn path=/trunk/; revision=2820

2004-11-17  Tim Janik 	# 5cea4edaacc63777a32a46889fb516bb8cb2cd06

	don't align block sizes to powers of 2, but simply to 4 to utilize CPU

	Wed Nov 17 01:19:53 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.c (bse_engine_constrain): don't align block sizes to
	        powers of 2, but simply to 4 to utilize CPU better.

	svn path=/trunk/; revision=2819

2004-11-16  Tim Janik 	# dc242e6a789ae3be021b468035a86c30ae043a85

	updates

	svn path=/trunk/; revision=2818

2004-11-16  Tim Janik 	# 7b40a111d215f0a4795d19bec1fc645cb814aa8a

	added busses to properly mix up the individual channels. format update to

	Tue Nov 16 14:59:40 2004  Tim Janik  <timj@gtk.org>

	        * library/demo/partymonster.bse: added busses to properly mix up the
	        individual channels. format update to 0.6.3.

	svn path=/trunk/; revision=2817

2004-11-16  Tim Janik 	# 95d5ff2202cc7b54fe308eb6773aa0c216146f52

	updates

	svn path=/trunk/; revision=2816

2004-11-15  Tim Janik 	# 5e5bb7cd4f504871ea6e18b35504bfb103493a08

	fixed up mktime() usage by temporarily unsetting $TZ, use timgm() if

	Mon Nov 15 20:10:06 2004  Tim Janik  <timj@gtk.org>

	        * sfitime.c (sfi_time_from_string_err): fixed up mktime() usage by
	        temporarily unsetting $TZ, use timgm() if available.

	svn path=/trunk/; revision=2815

2004-11-15  Tim Janik 	# 6f79b549efca3e273c82c77a0f9602b17a114b9c

	changelog fixup

	svn path=/trunk/; revision=2814

2004-11-15  Tim Janik 	# b4968e25ff61328ace9cd59182a11d38689bd7e5

	disable debugging spew

	svn path=/trunk/; revision=2813

2004-11-15  Tim Janik 	# b947730103eada1d2d421974db4ae743d7e1825d

	updates

	svn path=/trunk/; revision=2812

2004-11-15  Tim Janik 	# f28cf83ea074230249fe00309576c4b6d2a66917

	credit updates

	svn path=/trunk/; revision=2811

2004-11-15  Tim Janik 	# 3f69121ef584a506aada199202235512e6084998

	updates

	svn path=/trunk/; revision=2810

2004-11-15  Tim Janik 	# 4489848882a0f09fb16f11f81dea594b5950d823

	set a flag to indicate node ownership by the job.

	Mon Nov 15 18:11:10 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.c (bse_job_integrate): set a flag to indicate node ownership
	        by the job.

	        * bseengineutils.c (bse_engine_free_job): free job-owned nodes.

	        * bseenginemaster.c (master_process_job):
	        (ENGINE_JOB_INTEGRATE): take over node ownership from job.
	        (ENGINE_JOB_DISCARD): pass on node ownership to job.

	        * bseenginenode.h: use an anonymous union in BseJob, adapted users.

	svn path=/trunk/; revision=2809

2004-11-15  Tim Janik 	# 831232345161605fcadd66eda34920d191781ce7

	updates

	svn path=/trunk/; revision=2808

2004-11-15  4 	# d0f8a1a99dc6b947ebe41fd11e2dfed034f95286

	create extra path copies to account for callback-based path changes from

	Mon Nov 15 16:48:40 2004    <timj@birnet.org>

	        * beast-gtk/gxk/gxkutils.c (browse_selection_handler): create extra path
	        copies to account for callback-based path changes from
	        browse_selection_changed(). fixes invalid memory accesses.

	svn path=/trunk/; revision=2807

2004-11-15  Tim Janik 	# 9935dac4955ee1591353e70a68391add20e41323

	manage transaction trash list with a FIFO rather than a stack, so

	Mon Nov 15 15:18:01 2004  Tim Janik  <timj@gtk.org>

	        * bseengineutils.c: manage transaction trash list with a FIFO rather
	        than a stack, so execution order of user-callbacks and free handlers
	        is preserved.

	svn path=/trunk/; revision=2806

2004-11-14  Tim Janik 	# 21b2129248ccfa122718b76cdc983683f56a128d

	updates

	svn path=/trunk/; revision=2805

2004-11-14  Tim Janik 	# f0d1543bf1e19b285c64303845cc7d6f2fe37428

	improve responseness under load by handling glue layer events at the same

	Sun Nov 14 20:12:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: improve responseness under load by handling glue
	        layer events at the same priority as GUI events.

	svn path=/trunk/; revision=2804

2004-11-14  Tim Janik 	# 37ac7b770d89b1d8f8e8c825d40195f3d904c503

	aded item to whishlist

	svn path=/trunk/; revision=2803

2004-11-14  Tim Janik 	# d3765a26963159f1ef8b8d6202ec561b1d0d7aea

	documentation updates. bse_job_boundary_discard(): implemented jobs to

	Sun Nov 14 15:32:57 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.[hc]: documentation updates.
	        bse_job_boundary_discard(): implemented jobs to discard modules deferred.

	        * bsemidireceiver.cc: use bse_job_boundary_discard() to discard modules,
	        since extra jobs may be queued asyncronously from process()implementations.

	svn path=/trunk/; revision=2802

2004-11-14  Tim Janik 	# 38c115bc3fb391594e31781b7c4f7b0f3d042e79

	cosmetic changes

	svn path=/trunk/; revision=2801

2004-11-13  Tim Janik 	# 974883d8ddcbdc7378c3b2e16c5b6ae7381078c8

	updates

	svn path=/trunk/; revision=2800

2004-11-13  Tim Janik 	# dd5c51f1a8c7321445409a54d5f465b3bf7a29d1

	updates

	svn path=/trunk/; revision=2799

2004-11-13  Tim Janik 	# d466132615f85176a1f4ef3088f8119ce45bf6fd

	added compat for DavChorus and DavBassFilter.

	Sat Nov 13 20:12:23 2004  Tim Janik  <timj@gtk.org>

	        * bsecompat.c: added compat for DavChorus and DavBassFilter.

	svn path=/trunk/; revision=2798

2004-11-13  Tim Janik 	# da4e4f88712d95ea7fa273669f5d74ad3cffee91

	moved modules into Bse:: namespace.

	Sat Nov 13 20:13:03 2004  Tim Janik  <timj@gtk.org>

	        * davbassfilter.*:
	        * davchorus.*: moved modules into Bse:: namespace.

	svn path=/trunk/; revision=2797

2004-11-06  Francisco Javier F. Serrador 	# 1e5ca8ad1d443f1162a6107818b1eb4387a53021

	Updated Spanish translation by Jorge Gonzalez

	2004-11-06  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge Gonzalez

	svn path=/trunk/; revision=2796

2004-11-06  Tim Janik 	# 4347b235b254e420152f7a39764d9d1ef88ee04e

	updates

	svn path=/trunk/; revision=2795

2004-11-05  Tim Janik 	# bd5187d96ade3905b3496c0c413789e10a6589e0

	updates

	svn path=/trunk/; revision=2794

2004-11-05  Tim Janik 	# 7c62e11356760788b16acb505064fa69c71732b4

	updates

	svn path=/trunk/; revision=2793

2004-11-05  Tim Janik 	# 38009306a66897855e281e278c7074e12570fe53

	added gxk_param_add_grab_widget() for which pointer grabs cause undo

	Fri Nov  5 02:32:57 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkparam.[hc]: added gxk_param_add_grab_widget() for
	        which pointer grabs cause undo grouping. implemented grouping hooks
	        for parameter bindings. limited size-groups to 256.

	        * beast-gtk/gxk/gxkparam-scale.c:
	        * beast-gtk/gxk/gxkparam-spinner.c:
	        * beast-gtk/bstparam-scale.c:
	        * beast-gtk/bstparam-note-spinner.c: undo-group parameter changes
	        across pointer grabs.

	        * beast-gtk/bstparam.c: implemented undo grouping for proxy
	        parameter bindings.

	        * beast-gtk/bstcanvassource.c: undo-group source movement.

	        * beast-gtk/bstcanvaslink.c: cleanups.

	svn path=/trunk/; revision=2792

2004-11-04  Tim Janik 	# 68c6f9cded2004db7ad334c647b77d98b08ff011

	redraw the whole widget to work around spurious redraw problems.

	Thu Nov  4 16:23:51 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackroll.c (track_roll_idle_update_scopes): redraw the
	        whole widget to work around spurious redraw problems.

	svn path=/trunk/; revision=2791

2004-10-31  Miloslav Trmac 	# 149181f3260071e2b28055e0d89b4d2ed7e9ad00

	Updated Czech translation.

	2004-11-01  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2790

2004-10-31  Adam Weinberger 	# f0c81b14917aa10e7f818a23b519095bf125a8e9

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2789

2004-10-30  Tim Janik 	# 459e6175daedf2dd04b17507c727d6a878299ced

	moved po statistic links from gnome-2.10/ to gnome-HEAD/.

	Sat Oct 30 17:38:46 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-development.texi: moved po statistic links from gnome-2.10/
	        to gnome-HEAD/.

	svn path=/trunk/; revision=2788

2004-10-30  Tim Janik 	# a9795cbf5ec700ac4fbc9db359e3140b897dc307

	depend on gtk+-2.4.11, as earlier versions have severe resizing bugs

	Sat Oct 30 16:20:10 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: depend on gtk+-2.4.11, as earlier versions have severe
	        resizing bugs triggered by beast.

	        * beast-gtk/gxk/gxkutils.c (_gxk_init_utils): removed <=gtk+-2.4.10
	        resizing work-around, since it may triggerer endless loops under
	        certain circumstances.

	svn path=/trunk/; revision=2787

2004-10-30  Tim Janik 	# 8542f9989dd2fbb88e3fb26da5ca687b48492e16

	slight fixup

	svn path=/trunk/; revision=2786

2004-10-30  Tim Janik 	# f55199e0aa2ee0e5d84fe7fe6263a803f463f32e

	int/double varargs fix

	svn path=/trunk/; revision=2785

2004-10-30  Tim Janik 	# 23abf390f69bf7163202e23f9e61c497f4f877ef

	introduced :db-value:, :db-volume: and :db-range: property options,

	Sat Oct 30 13:22:23 2004  Tim Janik  <timj@gtk.org>

	        * docs/plugin-devel.texi: introduced :db-value:, :db-volume: and
	        :db-range: property options, removed :DB:, documented DBVolume().

	        * beast-gtk/bstbuseditor.c: adapt to BseBus property changes.

	        * beast-gtk/bstdbmeter.c: added decibel conversion for non db-value
	        properties.

	        * beast-gtk/gxk/gxkparam-scale.c:
	        * beast-gtk/bstparam-scale.c: use decibel adjustment if appropriate.

	        * beast-gtk/gxk/gxkparam-spinner.c: improved size requisition and
	        digit quantization handling. added explicit support for decibel
	        valued properties.

	        * beast-gtk/gxk/gxkparam.[hc]:
	        (GxkParamEditorSizes): renamed may_resize field, added request_fractions
	        bool value, adapted users.
	        gxk_param_get_decibel_adjustment(): provide decibel adjustment for some
	        properties.

	        * beast-gtk/gxk/gxklogadjustment.[hc]: implemented adapter adjustment,
	        which allows adjustment value conversion via callbacks.

	svn path=/trunk/; revision=2784

2004-10-30  Tim Janik 	# 3d128b09bc7e3a2bccc9420330574d153c384f72

	turned left and right volume properties into real-valued db-volume

	Sat Oct 30 13:40:13 2004  Tim Janik  <timj@gtk.org>

	        * bsebusmodule.idl:
	        * bsebusmodule.cc:
	        * bsebus.c: turned left and right volume properties into real-valued
	        db-volume properties.

	        * bseglobals.h:
	        * bsecore.idl: provide MINDB constant.
	        got rid of unused constants.

	        * bsesong.hc]: removed unused volume properties.

	        * bsetype.h: provide DBVolume pspec constructor.

	        * bseamplifier.idl:
	        * bseamplifier.cc: added db-volume property ::master_volume. turned
	        ::olevel into a compat property. documented last supporting version
	        for compat properties.

	svn path=/trunk/; revision=2783

2004-10-23  Francisco Javier F. Serrador 	# ac1b609a27486ddf3ac5414f5173f7f725ae064d

	Updated Spanish translation by Jorge Gonzalez

	2004-10-24  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge Gonzalez

	svn path=/trunk/; revision=2782

2004-10-20  Vincent van Adrighem 	# 7fd631754846adf09578bd5a52671000fb8d6f8d

	Translation updated by Tino Meinen.

	2004-10-20  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2781

2004-10-18  Miloslav Trmac 	# 557c5121968d4c8084ac539c15acc96fce29f7e0

	Updated Czech translation.

	2004-10-18  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2780

2004-10-17  Adam Weinberger 	# 29495241b45c46c6a07944082c18d7eaa0274754

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2779

2004-10-17  David Lodge 	# ed3984cc5114cf7118f40b7a0f0843fd04464c27

	Updated British English translation.

	2004-10-17  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British English translation.

	svn path=/trunk/; revision=2778

2004-10-16  Francisco Javier F. Serrador 	# 958428abb26ec388cee92e5073359c230ebeb1f9

	Updated Spanish translation by Jorge Gonzalez (Aloriel).

	2004-10-17  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Jorge Gonzalez (Aloriel).

	svn path=/trunk/; revision=2777

2004-10-16  Tim Janik 	# f710742cc3de69c354f11b77a8160c97511694e3

	minor rename

	svn path=/trunk/; revision=2776

2004-10-16  Tim Janik 	# 3c0540c2a4b481b184e20bedbe3e9a14dda354a7

	fix XMLLINT rule

	svn path=/trunk/; revision=2775

2004-10-16  Tim Janik 	# aca71af58f49f702cca221c4ecbe684a07c3ebdb

	update

	svn path=/trunk/; revision=2774

2004-10-16  Tim Janik 	# 54da194f8aaab6a5a01151b4420af3aa72ce4b39

	only make sure added tracks are auto-connected to the master bus.

	Sat Oct 16 11:15:18 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: only make sure added tracks are
	        auto-connected to the master bus.

	        * beast-gtk/bstutils.c: ensure loading songs always produces songs with
	        a master bus.

	svn path=/trunk/; revision=2773

2004-10-16  Tim Janik 	# 022554bdd3106e16caf04864443d5b4a1a831f27

	provide ensure-output() which connects to master bus.

	Sat Oct 16 11:17:21 2004  Tim Janik  <timj@gtk.org>

	        * bsetrack.proc: provide ensure-output() which connects to master bus.

	        * bsesong.[hc]:
	        provide bse_song_ensure_master().
	        bse_song_compat_finish(): auto-connect old tracks to master bus.

	        * bsesong.proc: removed ensure-output-busses() which is really just
	        internal compat code.

	        * bseproject.c:
	        bse_project_restore(): allow supers to perform compat actions after
	        restoring from file.

	        * bsesuper.[hc]: added compat_finish() class method.

	svn path=/trunk/; revision=2772

2004-10-16  Tim Janik 	# f9bfada729ff331332f68881af428031c49df123

	updates

	svn path=/trunk/; revision=2771

2004-10-16  Tim Janik 	# bb01a02828cc2dbae36ccba342d0edb9c0e3e3f4

	added bugs

	svn path=/trunk/; revision=2770

2004-10-16  Tim Janik 	# 1d260d294d3eff3a28d5b319cb7bdcda19115ba6

	make sure new songs have a master bus.

	Sat Oct 16 09:52:35 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: make sure new songs have a master bus.

	        * beast-gtk/bstbusmixer.c: auto-connect new busses to master.

	        * beast-gtk/bstutils.c: don't auto-connect tracks without output to
	        master bus. if tracks deliberately have no output, this state needs
	        to be preserved.

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstmenus.c:
	        * beast-gtk/bstpartdialog.c: changed redo accel to <control>Y.

	svn path=/trunk/; revision=2769

2004-10-16  Tim Janik 	# f0dc6e9a77d902a3cc785a075749ab86c13aa124

	added ensure-output() to ensure a master bus connection.

	Sat Oct 16 10:02:06 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.proc: added ensure-output() to ensure a master bus connection.

	        * bsesong.proc:
	        remove-bus(): fixed up loosing ::master-output property across undo.
	        get-master-bus(): don't create a master bus.
	        ensure-master-bus(): create a master bus if required.

	svn path=/trunk/; revision=2768

2004-10-16  Tim Janik 	# c7eba870271278bac99c86c78d44712bfa2c165e

	allow ::solo property editing on master.

	Sat Oct 16 08:34:40 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: allow ::solo property editing on master.

	        * bsesong.c: allow master as solo track which makes sense since tracks,
	        can be connected directly to master. don't mute master if another track
	        is the solo track.

	svn path=/trunk/; revision=2767

2004-10-16  Tim Janik 	# c6cb254320bae1e79bd1dac8f321ac3b8588b1c8

	synthesis link updates

	svn path=/trunk/; revision=2766

2004-10-15  Tim Janik 	# 3a5e523aa1a914944fba944645f994bfc755608c

	added missing files

	svn path=/trunk/; revision=2765

2004-10-15  Tim Janik 	# 5bb85e1485f32c05c7179a647c278ecbeac7e57c

	show "Parts" page of a song only for debugging mode (-:d). parts are now

	Sat Oct 16 00:57:06 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsupershell.c: show "Parts" page of a song only for
	        debugging mode (-:d). parts are now properly deleted from songs
	        once the last track link of a part gets removed. orphan parts
	        upon loading are adopted by an extra track.

	        * beast-gtk/bsttrackrollctrl.c: delete part if the last link to it
	        gets deleted. group with link deletion undo-wise.

	        * beast-gtk/bsttrackview.c: delete parts contained in a track if
	        the track contained the last link to those parts. group undo-wise.

	svn path=/trunk/; revision=2764

2004-10-15  Tim Janik 	# 9676a97376f8df0816457b72238b460c436fe838

	provide bse_project_clear_undo().

	Sat Oct 16 00:50:40 2004  Tim Janik  <timj@gtk.org>

	        * bseproject.[hc]: provide bse_project_clear_undo().

	        * bsesong.proc: clear undo after ensuring bus, track and part
	        connectivity, since we don't maintain proper undo state across
	        these operations. implemented ensure-track-links().
	        added find-any-track-for-part() which is faster than
	        find-track-for-part() and can be used for orphaned part checks.

	        * bsetrack.[hc]: provide bse_track_get_last_tick().

	        * bsetrack.proc: added list-parts-uniq().

	        * bseutils.[hc]: provide bse_item_seq_from_ring().

	        * bseprobe.cc:
	        * bsebus.c: adapt to sfi changes.

	svn path=/trunk/; revision=2763

2004-10-15  Tim Janik 	# ec70bcc4e02cd7ad902292aa692daf3e16f02171

	sfi_pointer_cmp(): renamed from sfi_compare_pointers(), changed users.

	Fri Oct 15 23:59:46 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]:
	        sfi_pointer_cmp(): renamed from sfi_compare_pointers(), changed users.
	        sfi_ring_uniq(): made this an ring modifying rather than copying
	        function. this plugs some leaks in current function usages.
	        sfi_ring_copy_uniq(): copy ring and remove duplicates.

	        * testsfi.c: adapt to sfi_ring_uniq() modifying inplace now.

	svn path=/trunk/; revision=2762

2004-10-15  Stefan Westerfeld 	# 3dc6d5ea97f21f0a74cace0f572d1dc666cec5ac

	For development builds, xmllint is required. Fail if its not found during

	Sat Oct 16 00:41:08 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in: For development builds, xmllint is required. Fail if
		its not found during configure.

	svn path=/trunk/; revision=2761

2004-10-15  Stefan Westerfeld 	# a4dde1c5889a2971cfbe8d58d89e1ab9af1db9b4

	Added --compact option.

	Fri Oct 15 17:20:30 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added --compact option.

		* tests/audio/featuretest.sh: Use --compact in output. This avoids
		cluttering the screen when comparing --spectrum features.
		Make output for failed tests more recognizable.

	svn path=/trunk/; revision=2760

2004-10-15  Adam Weinberger 	# 5dda218befadfa365d389beca1df67304dd1fbc7

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2759

2004-10-15  Stefan Westerfeld 	# 8bd1eb225326e2d1a3027a8b11876cc8db38ec4b

	Implemented seperate --cut-zeros-head and --cut-zeros-tail options.

	Fri Oct 15 16:21:04 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Implemented seperate --cut-zeros-head and
		--cut-zeros-tail options. Silence cutting looks whether the signal is
		silent on all channels now, rather than just taking into account the
		channel selected by the --channel option.

		* tests/audio/balance-right.reference: Adapted to new silence cutting
		algorithm.

	svn path=/trunk/; revision=2758

2004-10-15  Tim Janik 	# a063c321c9a8c72bc56969c29a6911cf31c52fb8

	perform time-sensitive spectrum tests for the balance test.

	Fri Oct 15 16:01:42 2004  Tim Janik  <timj@gtk.org>

	        * tests/audio/Makefile.am: perform time-sensitive spectrum tests for
	        the balance test.

	svn path=/trunk/; revision=2757

2004-10-15  Stefan Westerfeld 	# 209c39dce78e7c58f4bc9bbb821b4e353a37af44

	Added balance test (for a step-by-step description how to add your own

	Fri Oct 15 11:53:40 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/balance.bse:
		* tests/audio/Makefile.am: Added balance test (for a step-by-step
		description how to add your own test, see README). This test is a bit
		special, as we verify both channels. So it has one target for the left
		channel, and one target for the right channel.

		* tests/audio/balance-left.reference:
		* tests/audio/balance-right.reference: Test reference data.

	svn path=/trunk/; revision=2756

2004-10-15  Stefan Westerfeld 	# c008f3956d4356916e5fa3a6e669dbc237543333

	Updated README with a change necessary for srcdir != builddir:

	Fri Oct 15 11:51:29 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/README: Updated README with a change necessary for
		srcdir != builddir: featuretest.sh is now called using a Makefile.am
		variable.

	svn path=/trunk/; revision=2755

2004-10-15  Stefan Westerfeld 	# df3af4fd84069f3b1979dd1ad0788c9e3624ad7e

	Added $(srcdir) to beastconf.sh. Execute featuretest.sh from $(srcdir).

	Fri Oct 15 11:21:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am: Added $(srcdir) to beastconf.sh. Execute
		featuretest.sh from $(srcdir).

		* tests/audio/featuretest.sh: Take .reference, .scm and .bse files
		from $(srcdir), so building with srcdir != builddir should work fine
		now.

	svn path=/trunk/; revision=2754

2004-10-15  Tim Janik 	# e50e15d316d1a66ec78e1a69e56b643ffce3779b

	create a second wave oscillator to handle palyback of stereo samples

	Fri Oct 15 03:53:47 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstplayback.[hc]: create a second wave oscillator to handle
	        palyback of stereo samples correctly.

	svn path=/trunk/; revision=2753

2004-10-15  Tim Janik 	# b1ee13782f67d3e136985c0fa240532162ed9b5e

	fixed negative control events and fine tune parsing.

	Fri Oct 15 03:55:11 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.c: fixed negative control events and fine tune parsing.

	        * bsewaveosc.[hc], bsewaveosc.proc: introduced channel property
	        to control playback channel for multi-channel samples (stereo).
	        changed seek-API to support syncronous seeking of multiple wave
	        oscillators.

	        * gslwaveosc.c, gslwaveosc-aux.c: properly clamp the configured channel.

	svn path=/trunk/; revision=2752

2004-10-15  Tim Janik 	# 4ab8bed36b67ba2b2a1106f23ff619ca7b2b1976

	fixed bug

	svn path=/trunk/; revision=2751

2004-10-15  Tim Janik 	# f9bd1e658b04cb7b4efe25f0b648e1555fb8ba4a

	remove debugging rule

	svn path=/trunk/; revision=2750

2004-10-15  Tim Janik 	# 61b2431f00237ea05505bb31f31de56e87e0f6d5

	EXTRA_DIST fixups

	svn path=/trunk/; revision=2749

2004-10-14  Tim Janik 	# e1231c5535be33aa213b466592e75d4cb3a29656

	define BIN_VERSION to be used for version snippets in path names and

	Fri Oct 15 01:55:39 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: define BIN_VERSION to be used for version snippets in
	        path names and binaries. adapted depending sources.

	svn path=/trunk/; revision=2748

2004-10-14  Tim Janik 	# 75cdbdeeee4c7da46ae165fe54dc2935eb195586

	don't serialize auto-activate=#f property value.

	Fri Oct 15 01:27:52 2004  Tim Janik  <timj@gtk.org>

	        * bsesnet.c: don't serialize auto-activate=#f property value.

	        * bsesource.c: reduce serialization precision for pos-x/y to float.

	svn path=/trunk/; revision=2747

2004-10-14  Vincent van Adrighem 	# 4f04aea51e08d2c2f2fcb361a72e8359f4b52894

	Translation updated by Tino Meinen.

	2004-10-15  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2746

2004-10-14  Tim Janik 	# 287398f3e6c29c0ca8d385573f310e19668f5a18

	request polyphonic voice processing for the selected midi channel.

	Fri Oct 15 01:13:56 2004  Tim Janik  <timj@gtk.org>

	        * bsemidisynth.c: request polyphonic voice processing for the
	        selected midi channel.

	        * bseproject.c: stay in playback mode even if only snets and no song
	        need processing.

	svn path=/trunk/; revision=2745

2004-10-14  Tim Janik 	# 58a0698c42b9fd6cbe150c7ed256db7bf34a1de4

	cleanups.

	Fri Oct 15 00:55:08 2004  Tim Janik  <timj@gtk.org>

	        * tests/audio/Makefile.am: cleanups.

	        * tests/audio/featuretest.sh:
	        s/featuretest.status.sh/featuretest.status.sh/ according to a comment
	        from stefan.

	svn path=/trunk/; revision=2744

2004-10-13  David Lodge 	# e4945404dab412ac003ab271f6425a399ed7a3af

	Updated British English translation.

	2004-10-13  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British English translation.

	svn path=/trunk/; revision=2743

2004-10-13  Raphael Higino 	# c32e4f4c28c7b17d6083cccd12304801068887ef

	Updated pt_BR translation

	svn path=/trunk/; revision=2742

2004-10-13  Tim Janik 	# ba1a3955fb7065cf248cfb3b78a73315732c148c

	updates

	svn path=/trunk/; revision=2741

2004-10-13  Tim Janik 	# c91462237db6ccfcc124931798c967dcc9cba8c0

	wait until pcm module is discarded before destroying teh pcm writer.

	Wed Oct 13 21:28:37 2004  Tim Janik  <timj@gtk.org>

	        * bseserver.c (bse_server_close_devices): wait until pcm module is
	        discarded before destroying teh pcm writer.

	svn path=/trunk/; revision=2740

2004-10-13  Tim Janik 	# f143669cf422d66dc3b55980014832a9d5b19e0d

	don't forget to install bseieee754.h

	svn path=/trunk/; revision=2739

2004-10-13  Tim Janik 	# 52ddf2c0f3605b78282b2c5b6b5fa259fd317cbc

	added BSE file play script missing for latency test.

	Wed Oct 13 19:46:34 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/bseplay.scm: added BSE file play script missing
	        for latency test.

	svn path=/trunk/; revision=2738

2004-10-13  Tim Janik 	# 114829700d0a892196a18ba19c41bafdc3672638

	make test a toplevel target

	svn path=/trunk/; revision=2737

2004-10-13  Stefan Westerfeld 	# 086c8eb20e206fdef5231434e1bd6eb65cbee736

	Better naming: Call it average similarity, instead of overall similarity.

	svn path=/trunk/; revision=2736

2004-10-13  Stefan Westerfeld 	# 56d63a7af8d3537b17db6374de9727a250adc139

	More understandable english ;).

	svn path=/trunk/; revision=2735

2004-10-13  Stefan Westerfeld 	# 0ca43f0467796ecaf6d7fb450a49b1c03629bb69

	terminology: s/beast synthesis networks/BSE synthesis networks/

	svn path=/trunk/; revision=2734

2004-10-13  Stefan Westerfeld 	# ba7a87d63612f4ebf0ced2c3cfc44aaa063ed772

	Get rid of seperate .test files by moving the information which tests need

	Wed Oct 13 18:57:17 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/Makefile.am:
		* tests/audio/featuretest.sh: Get rid of seperate .test files by
		moving the information which tests need to be performed with which
		parameters into the Makefile.

		* tests/audio/bseadder.test.reference:
		* tests/audio/bseadder.test: Removed, obsoled.

		* tests/audio/bseadder.reference: Same reference data, different name.

		* tests/audio/README: Documentation updated.

		* tools/bsefcompare.cc: Pretty-printing: added spaces between
		similarities.

	svn path=/trunk/; revision=2733

2004-10-13  Tim Janik 	# 32fb477be0d3763947a7ef3c6f710369edfc26ce

	reworked hazard pointer guard API. sfi_guard_register(): provide an array

	Wed Oct 13 18:50:19 2004  Tim Janik  <timj@gtk.org>

	        * sfithreads.[hc]: reworked hazard pointer guard API.
	        sfi_guard_register(): provide an array of hazard pointers in
	        O(1) time if this thread previously deregistered an array
	        of sufficient size.
	        sfi_guard_protect(): renamed from sfi_guard_store(), require
	        array index to adress hazard pointer within guard.
	        sfi_guard_n_snap_values(): renamed.
	        sfi_guard_snap_values(): renamed, provide ordering guarantee.
	        sfi_guard_is_protected(): provide ordering guarantee.

	svn path=/trunk/; revision=2732

2004-10-12  Tim Janik 	# 5d2c90bca68f3344733d767c0a6cec86d4884deb

	fixed comment reading by using the comment parsing logic from

	Tue Oct 12 09:54:37 2004  Tim Janik  <timj@gtk.org>

	        * docs/generated/scandocs.pl: fixed comment reading by using the
	        comment parsing logic from glib-mkenums.pl.
	        fixed function declaration reader getting confused by certain
	        comments. added markup around URLs.

	svn path=/trunk/; revision=2731

2004-10-12  Tim Janik 	# 7244c4243466e0b6b92ed427e6563f5a167ea018

	implemented hazard pointers or thread guards. sfi_thread_handle_deleted():

	Tue Oct 12 10:58:21 2004  Tim Janik  <timj@gtk.org>

	        * sfithreads.[hc]: implemented hazard pointers or thread guards.
	        sfi_thread_handle_deleted(): clear thread data after the wakeup destroy
	        function has been called. deregister all thread guards.
	        sfi_guard_deregister():
	        sfi_guard_register(): register/deregister guards.
	        sfi_guard_store(): protect a pointer via a guard.
	        sfi_guard_get_n_values(): number of values for collection.
	        sfi_guard_collect(): collected protected pointers.
	        sfi_guard_is_protected(): check single pointer protection.

	svn path=/trunk/; revision=2730

2004-10-12  Tim Janik 	# e8537d61b4d62324d8a746854f8fea221e0fbfc9

	don't generate "/** ...*/" comments, as two-asterisc comments are used as

	Tue Oct 12 10:51:55 2004  Tim Janik  <timj@gtk.org>

	        * gsl-fftgen.pl:
	        * mkcalls.pl:
	        * mkcproc.pl:
	        * mktypes.pl:
	        don't generate "/** ...*/" comments, as two-asterisc comments are used
	        as documentation generator magic.

	svn path=/trunk/; revision=2729

2004-10-12  Adam Weinberger 	# 6f8a67ac81ce87cde79b5826862221ceaa9e43e8

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2728

2004-10-11  Miloslav Trmac 	# ab9ba07444b926d5dfac542b67f987408ed95e98

	Updated Czech translation.

	2004-10-11  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2727

2004-10-10  Tim Janik 	# f1679a6dc906e92ac05449b7af5e5eaa00fa6942

	translation link updates to gnome-10

	svn path=/trunk/; revision=2726

2004-10-10  Tim Janik 	# 5cb3c67cad0d43cb0789cb5ffa5df1dd622d05bc

	added missing files

	svn path=/trunk/; revision=2725

2004-10-09  Miloslav Trmac 	# a68db700bf67a208a26ba87359d8d8e420aa7dd9

	Updated Czech translation.

	2004-10-10  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2724

2004-10-08  Adam Weinberger 	# 513f34978f5000da5478ed5f860e4d51df80d4b4

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2723

2004-10-08  Tim Janik 	# 2821bb19f4e79b67fb0f44ed1f9ec83672df1afc

	cosmetics and link updates

	svn path=/trunk/; revision=2722

2004-10-08  Tim Janik 	# 6cdeb37466a53bb25655f8dc7c766b1d4a038973

	added candidate and wave repo label and tooltip handling. support cleanup

	Fri Oct  8 18:34:51 2004  Tim Janik  <timj@gtk.org>

	        * bsttracksynthdialog.[hc]: added candidate and wave repo label and
	        tooltip handling. support cleanup callback. disable object type column
	        for non devel modes.

	        * beast-gtk/bsttrackview.c: provide proper labels and tooltips when
	        popping up track synth selectiong. fixed pnet editability handling.

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstprocedure.c:
	        * beast-gtk/bstusermessage.c: disable GXK_DIALOG_WINDOW_GROUP, most
	        modal dialogs in beast depend on global modality.

	        * beast-gtk/bstitemseqdialog.[hc]: minor cleanups.

	svn path=/trunk/; revision=2721

2004-10-08  Tim Janik 	# fc1126ec9789be860ab79a384877befeed28541f

	fixed recently broken value count for bse_pcm_handle_read().

	Fri Oct  8 18:57:40 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmmodule.c (bse_pcm_imodule_process): fixed recently broken value
	        count for bse_pcm_handle_read().

	        * bsecore.idl: renamed PropertyCandidates.label from nick,
	        adapted users.

	svn path=/trunk/; revision=2720

2004-10-08  Tim Janik 	# debfbfc95a395ced0b53bf4d52888edf89eb3421

	added a note about the srcdir==builddir requirement when building from

	Fri Oct  8 14:30:33 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-download.texi: added a note about the srcdir==builddir
	        requirement when building from CVS.

	        * docs/site-links-related.texi: added freedesktop.org.

	svn path=/trunk/; revision=2719

2004-10-08  Tim Janik 	# 730c85e3bdc2e933cd6d664aa9cbc967e3641d39

	added bse_object_strdup_debug_handle() for threrad-safe debugging handle

	Fri Oct  8 14:21:06 2004  Tim Janik  <timj@gtk.org>

	        * bseobject.[hc]: added bse_object_strdup_debug_handle() for
	        threrad-safe debugging handle generation.

	        * bsesequencer.h:
	        * bsesequencer.cc: reduces track position debugging verbosity.
	        added underrun detection and underrun debugging messages.
	        made BSE_SEQUENCER_FUTURE_BLOCKS private.

	svn path=/trunk/; revision=2718

2004-10-08  Tim Janik 	# 60ba211bd888d3651ca21bddfc9d095d045f9a56

	check for a readable pcm device upon resetting the PCM input module.

	Fri Oct  8 13:37:40 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmmodule.c: check for a readable pcm device upon resetting the
	        PCM input module. handle partial read requests. properly zero initialize
	        newly allocated structures.

	        * bseserver.[hc]: implemented bse_server_require_pcm_input(), which
	        issues an appropriate warning if PCM recordingis reduced to a silent
	        input stream.

	svn path=/trunk/; revision=2717

2004-10-08  Tim Janik 	# 3c90d7dee3ae4b0a7ee08fc708f38f5fff03dbed

	updates

	svn path=/trunk/; revision=2716

2004-10-08  Tim Janik 	# 2fd6340943b21ea509ab86ef6dd58dd960e76645

	removed debugging output entirely

	svn path=/trunk/; revision=2715

2004-10-08  Tim Janik 	# 4bf08d85de9aff05d9d9fde28506b2e351c6c52a

	don't include <math.h>. files needing math functions should include

	Fri Oct  8 11:38:07 2004  Tim Janik  <timj@gtk.org>

	        * bsedefs.h: don't include <math.h>. files needing math functions
	        should include <bse/bsemath.h> instead.

	        * bsemath.[hc]: removed BSE_EPSILON_CMP().
	        moved contents from gslmath.h and gslmath.c here and changed namespace
	        to bse. adapted users.

	        * bseieee754.h: changed namespace to bse, adapted users.
	        use signbit() if available.

	        * bsemathsignal.[hc]: changed namespace to bse, adapted users.

	        * gslmath.h, gslmath.c, gslsignal.h, gslsignal.c, gslieee754.h: removed.

	        * gsl-fftconf.sh: include bsemath.h in generated source.

	        * tests/mathtests.c: disabled ellipsis and complex root finding tests.

	svn path=/trunk/; revision=2714

2004-10-08  Tim Janik 	# bc7335301c682001a19ce424c66900d154e6c816

	include bse/bsemath.h instead of math.h and use BSE_LN2.

	Fri Oct  8 11:25:30 2004  Tim Janik  <timj@gtk.org>

	        * artscompressor.cc: include bse/bsemath.h instead of math.h
	        and use BSE_LN2.

	        * bseiirfilter.c (bse_iir_filter_update_modules): disabled
	        debugging printout.

	Fri Oct  8 11:38:07 2004  Tim Janik  <timj@gtk.org>

	        * bsedefs.h: don't include <math.h>. files needing math functions
	        should include <bse/bsemath.h> instead.

	        * bsemath.[hc]: removed BSE_EPSILON_CMP().
	        moved contents from gslmath.h and gslmath.c here and changed namespace
	        to bse. adapted users.

	        * bseieee754.h: changed namespace to bse, adapted users.
	        use signbit() if available.

	        * bsemathsignal.[hc]: changed namespace to bse, adapted users.

	        * gslmath.h, gslmath.c, gslsignal.h, gslsignal.c, gslieee754.h: removed.

	        * gsl-fftconf.sh: include bsemath.h in generated source.

	        * tests/mathtests.c: disabled ellipsis and complex root finding tests.

	svn path=/trunk/; revision=2713

2004-10-08  Tim Janik 	# 638bb2bb76483bbd64cafcdc13c2f77e914b3428

	use g_valuetake_string() from glib-2.4

	svn path=/trunk/; revision=2712

2004-10-08  Tim Janik 	# f16e140a01577bc3cd1f61816ab1999d72dc01f0

	CVS copied from gslieee754.h.

	Fri Oct  8 10:01:37 2004  Tim Janik  <timj@gtk.org>

	        * bseieee754.h: CVS copied from gslieee754.h.

	svn path=/trunk/; revision=2711

2004-10-08  Tim Janik 	# 9c2b9a6c389bb6a8a69e77b9143cfe17b2080cc7

	CVS copied from gslsignal.h.

	Fri Oct  8 09:55:43 2004  Tim Janik  <timj@gtk.org>

	        * bsemathsignal.h: CVS copied from gslsignal.h.

	        * bsemathsignal.c: CVS copied from gslsignal.c.

	svn path=/trunk/; revision=2710

2004-10-08  Tim Janik 	# deb86161c19e71f84f24d28e363dfdcdd94d4fbe

	use g_static_assert().

	Fri Oct  8 06:52:09 2004  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc:
	        * gslloader-aiff.c:
	        * bseenginemaster.c: use g_static_assert().

	svn path=/trunk/; revision=2709

2004-10-08  Tim Janik 	# 1acdb5fb22e6ad4af55385656bbc4d67e4547abd

	removed g_strconcat_with_null() which used to work around a GLib-2.4 bug.

	Fri Oct  8 06:49:42 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: removed g_strconcat_with_null() which used to work
	        around a GLib-2.4 bug.
	        added g_static_assert() to perform compile time assertions.

	svn path=/trunk/; revision=2708

2004-10-07  Tim Janik 	# 0d56a18116933d8d514dc8b45cbdee8324c91127

	sync

	svn path=/trunk/; revision=2707

2004-10-07  Tim Janik 	# 61458965a98dd682c071582e4d11973abf9e1896

	updates

	svn path=/trunk/; revision=2706

2004-10-07  Tim Janik 	# 622e872cf315539023194101a1e39acc8f73e593

	flag split up, gxk_dialog_new() has the docs. force dialogs to actively

	Thu Oct  7 02:51:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkdialog.[hc]: flag split up, gxk_dialog_new() has the
	        docs. force dialogs to actively ignore Escape key presses to not be
	        closed. adapted users.

	        * beast-gtk/bstsplash.c: fixed up frame border upon resizing.
	        close dialog on Escape key presses.

	svn path=/trunk/; revision=2705

2004-10-06  Tim Janik 	# cb52798e5d0d7ea1419235bc3221b78aef8e7132

	applied translation updates from Petrecca Michele.

	Thu Oct  7 01:38:32 2004  Tim Janik  <timj@gtk.org>

	        * it.po: applied translation updates from Petrecca Michele.

	svn path=/trunk/; revision=2704

2004-10-06  Christian Neumair 	# 6faa1b4a977ea1193712aadbdf74d627bd5048eb

	Updated German translation by Moritz Mekelburger <moritz@unix-ag.org>.

	svn path=/trunk/; revision=2703

2004-10-05  Tim Janik 	# 8564ba7723025d24adfefe6ad7b41e3d5d447fa6

	removed unused #if

	svn path=/trunk/; revision=2702

2004-10-05  4 	# 9a93212836e44ab30d0fa6d1c8179fc164e40ee5

	work around gdk_widnow_is_viewable() bug in Gtk+-2.4.10 and earlier.

	Wed Oct  6 01:17:59 2004    <timj@birnet.org>

	        * beast-gtk/gxk/gxkutils.c (gxk_widget_ancestry_viewable): work around
	        gdk_widnow_is_viewable() bug in Gtk+-2.4.10 and earlier. removed
	        debugging code.

	svn path=/trunk/; revision=2701

2004-10-05  Tim Janik 	# 78451dd6819db5a046896108601df5247546b648

	fix @ vs. @@

	svn path=/trunk/; revision=2700

2004-10-05  Tim Janik 	# 3e6d2829618d32bfc148065250e6e66c8b34203c

	fix texitheque CVS root reported by stefan

	svn path=/trunk/; revision=2699

2004-10-05  David Lodge 	# 7080e9850b17fb298e2c3b96f82fb0102ac2d2ed

	Updated British English translation.

	2004-10-05  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British English translation.

	svn path=/trunk/; revision=2698

2004-10-05  Raphael Higino 	# 616a4ea7fbfa5f56960787885fc8a4979ef3b1af

	Updating pt_BR translation

	svn path=/trunk/; revision=2697

2004-10-05  Tim Janik 	# e354c466f286f614b5c288329bd181c2b288fa97

	Gtk+-2.4 update

	svn path=/trunk/; revision=2696

2004-10-05  Tim Janik 	# cfe1350a4d3de790a20f9817b61880ec26d127b2

	did code cleanups possible with Glib-2.4.

	Tue Oct  5 22:48:52 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h:
	        * sfivalues.c:
	        * sfidl-corec.cc:
	        * glib-extra.h: did code cleanups possible with Glib-2.4.

	svn path=/trunk/; revision=2695

2004-10-05  Tim Janik 	# 08a8453b131cd74e64797bcd38f3474b11aff050

	added support for paned pack properties introduced in Gtk+-2.4.

	Tue Oct  5 22:36:05 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-standard.xml: added support for paned
	        pack properties introduced in Gtk+-2.4.

	        * beast-gtk/dialogs/radgets-beast.xml: use Gtk+-2.4 paned
	        pack properties for piano-roll-box.

	        * beast-gtk/bstpartdialog.c (bst_part_dialog_init):
	        removed paned patchup code, needed for Gtk+-2.2.

	        * beast-gtk/gxk/gxkdialog.c: properly add GxkDialog to window group,
	        this used to be broken in Gtk+-2.2.1.
	        removed key press handling code for the Gtk+-2.2 case.

	        * beast-gtk/gxk/gxkcellrendererpopup.c: removed unused Gtk+-2.2
	        bug triggering code.

	svn path=/trunk/; revision=2694

2004-10-05  Tim Janik 	# f4d4d7e199ba233320efae526d9d7cd1592d491e

	dependency upgrade for pango and libgnomecanvas.

	Tue Oct  5 21:58:32 2004  Tim Janik  <timj@gtk.org>

	        * site-download.texi:
	        * configure.in:
	        * README: dependency upgrade for pango and libgnomecanvas.

	svn path=/trunk/; revision=2693

2004-10-05  Tim Janik 	# 8f9886da379a17e3c4d7cb664242866d6715fed9

	dependency upgrade from Gtk+-2.2 to Gtk+-2.4.

	Tue Oct  5 19:38:39 2004  Tim Janik  <timj@gtk.org>

	        * site-download.texi:
	        * configure.in:
	        * README: dependency upgrade from Gtk+-2.2 to Gtk+-2.4.

	svn path=/trunk/; revision=2692

2004-10-05  Tim Janik 	# adc0ba7c07ac485e67102f7e5202ad2a44ff008b

	version check fixup

	svn path=/trunk/; revision=2691

2004-10-05  Tim Janik 	# 0c4dc58493947528965378f716f045f7979272cb

	added hook:* arguments for radgets, so users can easily hook up custom

	Tue Oct  5 19:12:31 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkradget.[hc]: added hook:* arguments for radgets, so
	        users can easily hook up custom properties without implementing new
	        object types.

	        * beast-gtk/gxk/gxkutils.c (fixup_gtk24_size_allocate): workaround
	        gtk_widget_size_allocate() not honouring NEED_REQUEST.

	svn path=/trunk/; revision=2690

2004-10-05  Amanpreet Singh Alam 	# 466f5ffbf5be371f82901d5d70b035b46e416156

	add pa.po

	svn path=/trunk/; revision=2689

2004-10-05  Amanpreet Singh Alam 	# c25344765df52d457fd19537ed4ed563cbced8e9

	add Punjabi

	svn path=/trunk/; revision=2688

2004-10-05  Tim Janik 	# 2dbe3c6757014daf6cab9fbb3acfd951656c0acd

	handle empty $UPDATE_MIME_DATABASE

	svn path=/trunk/; revision=2687

2004-10-05  Tim Janik 	# b4314c32d6b2079913b723292c7f1df47ad817a2

	properly check for g++ dependency

	svn path=/trunk/; revision=2686

2004-10-05  Miloslav Trmac 	# 390b129178a8edaa0029263130a78d9e88d7d288

	Updated Czech translation.

	2004-10-05  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2685

2004-10-04  Tim Janik 	# 6e8446688d57604a13a76b7865e514d3d49b0baf

	added link to the it translation statistics.

	Mon Oct  4 23:27:29 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-development.texi: added link to the it translation statistics.

	        * configure.in: added it to ALL_LINGUAS.

	svn path=/trunk/; revision=2684

2004-10-04  Tim Janik 	# c6019feae7b8a3976eb438a037d55176b62a965f

	added initial italian translation by Petrecca Michele

	Mon Oct  4 23:30:29 2004  Tim Janik  <timj@gtk.org>

	        * it.po: added initial italian translation by
	        Petrecca Michele <petrecca@interfree.it>.

	svn path=/trunk/; revision=2683

2004-10-04  Adam Weinberger 	# 5c8ca6f7fd760bbb8c6d017922bb2ccb52c244a2

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2682

2004-10-04  Tim Janik 	# b0a41ccb0f3e43a9827f6efc8505eab55bf3250a

	more libALSA silencing, to prevent error messages in blocking mode with

	Mon Oct  4 09:42:31 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c: more libALSA silencing, to prevent error messages
	        in blocking mode with xrun-stop enabled.

	svn path=/trunk/; revision=2681

2004-10-04  Tim Janik 	# c11469232e84844888d1282009230fedb864fc61

	use snd_pcm_forward() and silence libALSA with

	Mon Oct  4 09:16:16 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c (alsa_device_write): use snd_pcm_forward() and
	        silence libALSA with snd_lib_error_set_handler().

	svn path=/trunk/; revision=2680

2004-10-04  Tim Janik 	# 7dcea6226ef736ecb6c2ecc828267e6b204c94d9

	silence alsalib during open() calls to avoid EBUSY error messages.

	Mon Oct  4 08:59:13 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c (bse_midi_device_alsa_open):
	        * bsepcmdevice-alsa.c (bse_pcm_device_alsa_open): silence alsalib during
	        open() calls to avoid EBUSY error messages.

	svn path=/trunk/; revision=2679

2004-10-04  Tim Janik 	# 7846bed75397d8966497a629b359f60441837109

	added bst_msg_absorb_config_update() to update versioning.

	Mon Oct  4 07:15:54 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmsgabsorb.[hc]: added bst_msg_absorb_config_update()
	        to update versioning.
	        bst_msg_absorb_config_adjust(): consider versioning changes.

	        * beast-gtk/bstusermessage.c: update version on filtered messages.

	svn path=/trunk/; revision=2678

2004-10-04  Tim Janik 	# 1e5a8892c0a8b379d18ed898ed74f99ccbd0eb3d

	spacing fixes.

	Mon Oct  4 04:51:01 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstusermessage.c: spacing fixes.

	        * beast-gtk/gxk/gxktexttools.c: don't patch up size requests when
	        unmapped for VFIXED or HFIXED.

	svn path=/trunk/; revision=2677

2004-10-04  Tim Janik 	# e20a37c757853194167c591bb9a446c510f81cc7

	provide MsgAbsorbString sequence.

	Mon Oct  4 03:50:32 2004  Tim Janik  <timj@gtk.org>

	        * bstrecords.idl: provide MsgAbsorbString sequence.

	        * beast-gtk/bstmsgabsorb.[hc]: implemented message filter logic with
	        rc-file and preferences dialog.

	        * beast-gtk/dialogs/radgets-beast.xml: define message-absorb-config-box.

	        * beast-gtk/bstusermessage.[hc]: adapt to new logging API. added
	        details and repitition counting to mesage dialogs. added support
	        for message filtering.

	        * beast-gtk/bstpreferences.[hc]: integrate bst_msg_absorb_config_box().

	        * beast-gtk/bstdefs.h: provide _DOMAIN, the gettext domain, alongside
	        _() and N_(). this is needed for calls to dngettext().

	        * beast-gtk/bstmain.c: setup logging handler for main thread.

	        * beast-gtk/bstkeybindings.c: keep refcounts on static pspecs.

	        * beast-gtk/gxk/gxkutils.[hc]: return the newly added GtkTreeViewColumn*
	        from tree view column convenience functions.
	        added gxk_expander_connect_to_widget() to hookup the neccessary code to
	        control widget visibility with a GtkExpander.

	        * beast-gtk/gxk/gxktexttools.[hc]: added GXK_SCROLL_TEXT_HFIXED and
	        GXK_SCROLL_TEXT_VFIXED flags to affect scrolling ability.

	svn path=/trunk/; revision=2676

2004-10-04  Tim Janik 	# 65755d6db111ccff1789a745e4b5d3633dd28468

	fixed version string parsing.

	Mon Oct  4 03:46:52 2004  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: fixed version string parsing.

	        * bsecore.idl: provide user-message types and record.

	        * bseserver.[hc]: extended user message notifications.

	        * bsemain.c:
	        * bsesequencer.cc:
	        * bseenginemaster.c: set log handler for the various threads.

	svn path=/trunk/; revision=2675

2004-10-04  Tim Janik 	# 8b38fc4510a96e583bd5015f4aab8e46ac12fb81

	fixed param-spec leaks.

	Mon Oct  4 03:44:03 2004  Tim Janik  <timj@gtk.org>

	        * sfiparams.c: fixed param-spec leaks.

	        * sfilog.[hc]: changed logging to use a handler per-thread.

	        * sfiprimitives.[hc]: added sfi_seq_validate().

	svn path=/trunk/; revision=2674

2004-10-03  Tim Janik 	# bec48fd39cfba74366867ae61c2c85a9bf17cb60

	fixed signed/unsigned comparison bug, reported by stefan.

	Sun Oct  3 19:02:46 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c (alsa_device_check_io): fixed signed/unsigned
	        comparison bug, reported by stefan.

	svn path=/trunk/; revision=2673

2004-10-03  Adam Weinberger 	# 877f83fcf6df4d141ad38e00d0b63c678583daec

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2672

2004-10-03  Tim Janik 	# 22be489a270f6c2cbee3fa41ec0d97ff622179b2

	added missing files

	svn path=/trunk/; revision=2671

2004-10-02  Tim Janik 	# 3ea34cfe4eff4877886cb8842190f8a0b60fa33d

	docu fixup

	svn path=/trunk/; revision=2670

2004-10-02  Tim Janik 	# 549366b2746f118e81b03a7e65406388a3600b05

	adaptions to logging API changes.

	Sat Oct  2 21:12:45 2004  Tim Janik  <timj@gtk.org>

	        * *.c, *.cc: adaptions to logging API changes.

	svn path=/trunk/; revision=2669

2004-10-02  Tim Janik 	# 56f03ff6f1c5a23defb18b4f7cf3e633edc1142d

	adapt to logging API changes.

	Sat Oct  2 21:12:13 2004  Tim Janik  <timj@gtk.org>

	        * *.c: adapt to logging API changes.

	svn path=/trunk/; revision=2668

2004-10-02  Tim Janik 	# 22051783c0062f6d0a0b0aa9dfff938af5812a25

	revamped logging API. sfi_warn() became sfi_warning(). sfi_error(),

	Sat Oct  2 21:01:44 2004  Tim Janik  <timj@gtk.org>

	        * sfilog.[hc]: revamped logging API. sfi_warn() became sfi_warning().
	        sfi_error(), sfi_warning(), sfi_info() and sfi_diag() do not take an
	        extra argument anymore. they are meant to indicate user visible errors,
	        warnings and informations, and if requested, diagnostics.
	        new variants exist for user configurable error, warning and information
	        messages: sfi_error_msg(), sfi_warning_msg(), sfi_info_msg(). these
	        take an extra configuration relevant (and translated) argument.
	        some more API cleanups wrg logging system configuration.

	        * sfithreads.[hc]: added sfi_thread_get_pid(), sfi_thread_get_name().

	svn path=/trunk/; revision=2667

2004-10-02  Tim Janik 	# 9b0a3b763f4a684fab1b5c1785d2a8d37d006c56

	open devices non-blocking so we don't hang on concurrent access.

	Sat Oct  2 04:54:22 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c (bse_midi_device_alsa_open): open devices
	        non-blocking so we don't hang on concurrent access.

	svn path=/trunk/; revision=2666

2004-09-30  Vincent van Adrighem 	# c922ed45a9c4b39ecfa297a065586d3bf8d4223c

	Translation updated by Tino Meinen.

	2004-09-30  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2665

2004-09-30  Tim Janik 	# 2b96644165364003b42dce65f40f0084ac51f31c

	order fixes, build text last, which is incredeibly slow.

	Thu Sep 30 03:32:28 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build_async): order
	        fixes, build text last, which is incredeibly slow.

	svn path=/trunk/; revision=2664

2004-09-30  Tim Janik 	# 6caedcab359857ab794f8e1256c608f00cf8bf17

	perform more granular updates.

	Thu Sep 30 03:22:23 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build_async): perform
	        more granular updates.

	        * beast-gtk/bstutils.c (bst_background_handlers_timeout): provide
	        status bar feedback about length GUI updates.

	svn path=/trunk/; revision=2663

2004-09-30  Tim Janik 	# 14305214ad3a91d0f6658487fe43dd379b5575d2

	construct canvas link/source contents from a background handler. take

	Thu Sep 30 02:54:19 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c:
	        * beast-gtk/bstcanvaslink.c: construct canvas link/source contents
	        from a  background handler. take special precaution to work yround
	        dangling canvas pointers.

	        * beast-gtk/bstutils.[hc]: added functions to add background handlers.

	        * beast-gtk/gxk/gxkcanvas.[hc]: new funciton
	        gnome_canvas_item_check_undisposed() to check whether a canvas item is
	        still usable. relies on external item->canvas protection through
	        extra ref-counts, because canvases don't clear up after themselves.

	svn path=/trunk/; revision=2662

2004-09-29  Tim Janik 	# ee5fd5586f184aab9ae1905768d4dde10291a45b

	removed unused bst_snet_router_rebuild()

	svn path=/trunk/; revision=2661

2004-09-29  Tim Janik 	# 27bb5cd0f7cb03bec390892b442de68ef0e48345

	updates

	svn path=/trunk/; revision=2660

2004-09-29  Tim Janik 	# d678e415440d3dcb155926ff28b075583107e6eb

	make wake-up pipe non-blocking. properly wake up sequencer thread, so it

	Wed Sep 29 21:01:28 2004  Tim Janik  <timj@gtk.org>

	        * bsesequencer.cc: make wake-up pipe non-blocking. properly wake up
	        sequencer thread, so it stops polling on removed io watch fds.

	svn path=/trunk/; revision=2659

2004-09-29  Tim Janik 	# 0422035998006fb6ac44e6716fb6dd1b4580f83d

	poll-fd fixups. removed debugging code.

	Wed Sep 29 20:22:53 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c: poll-fd fixups. removed debugging code.

	svn path=/trunk/; revision=2658

2004-09-29  Tim Janik 	# 30608886d6bcf35a1947a4ea6d6a6fb13913dcb1

	bsessequencer.h -> bsesequencer.h rename

	svn path=/trunk/; revision=2657

2004-09-29  Tim Janik 	# 0b6838ae5f8dbde577c53db7e0c680b82dbb5136

	bsessequencer.h -> bsesequencer.h rename

	svn path=/trunk/; revision=2656

2004-09-29  Tim Janik 	# f0e9131ea23ff70c929075c6386412ac99defbc6

	CVS copied from bsessequencer.h.

	Wed Sep 29 19:59:42 2004  Tim Janik  <timj@gtk.org>

	        * bsesequencer.h: CVS copied from bsessequencer.h.

	        * bsesequencer.cc: CVS moved from bsessequencer.cc.

	        * bsessequencer.h: removed.

	svn path=/trunk/; revision=2655

2004-09-29  Tim Janik 	# 2f1a4411a1bb9964e9284ae7d953c050bac698e0

	handle IO through sequencer io watch.

	Wed Sep 29 19:51:29 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c: handle IO through sequencer io watch.

	svn path=/trunk/; revision=2654

2004-09-29  Tim Janik 	# 61925038c215094aa46ab7e9aa3a876fe87665ee

	renamed symbols from ssequencer to sequencer, adapted users. added io

	Wed Sep 29 19:16:23 2004  Tim Janik  <timj@gtk.org>

	        * bsessequencer.cc: renamed symbols from ssequencer to sequencer,
	        adapted users. added io watch API:
	        bse_sequencer_add_io_watch(): install poll-fds and a handler.
	        bse_sequencer_remove_io_watch(): remove an io watch handler.

	        * bsemididevice-oss.c: ported to use BseSequencer io watch API.

	        * bsemididevice.h: added midi_decoder field to handle.

	svn path=/trunk/; revision=2653

2004-09-29  Tim Janik 	# 50cbde63458228780fdf698443d3fcb50af3f19b

	comment fixups

	svn path=/trunk/; revision=2652

2004-09-29  Tim Janik 	# 9afbd5dc1a0c6b89c800610d7f1b1d5560ac756d

	removed. ported from C to C++.

	Wed Sep 29 11:44:23 2004  Tim Janik  <timj@gtk.org>

	        * bsessequencer.c: removed.
	        * bsessequencer.cc: ported from C to C++.

	        * Makefile.am: build bsessequencer.cc instead of bsessequencer.c.

	svn path=/trunk/; revision=2651

2004-09-29  Tim Janik 	# f10290378bd321f575239818e3182a8f78ca422e

	CVS copied from bsessequencer.c.

	Wed Sep 29 11:37:44 2004  Tim Janik  <timj@gtk.org>

	        * bsessequencer.cc: CVS copied from bsessequencer.c.

	svn path=/trunk/; revision=2650

2004-09-28  Tim Janik 	# dc2b0fb532fbbad862d38e4347ce41adc3946ad0

	really print out milli seconds.

	Tue Sep 28 23:17:44 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/bselatencytest.cc: really print out milli seconds.

	svn path=/trunk/; revision=2649

2004-09-28  Tim Janik 	# 1376d4cbef4169908232f3b9c4171ce845bef13d

	support $ENVVAR expansion for midi file name, extended docs.

	Tue Sep 28 23:08:23 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/bselatencytest.idl:
	        * tests/latency/bselatencytest.cc: support $ENVVAR expansion for midi
	        file name, extended docs.

	        * tests/latency/Makefile.am: create a named pipe, stored in $FIFO, and
	        invoke bsesh with bseplay.scm and midi-latency.bse to test midi latency.

	        * tests/latency/midi-latency.bse: use $FIFO as midi file.

	        * shell/bsesh.c: adapt boot script loading if
	        --bse-override-script-path <script> is given.

	svn path=/trunk/; revision=2648

2004-09-28  Tim Janik 	# fcd3eb308e57c05187fdf3868d35676c19ea7906

	added --bse-override-plugin-globs <glob> and --bse-override-script-path

	Tue Sep 28 23:01:23 2004  Tim Janik  <timj@gtk.org>

	        * bsemain.[hc]: added --bse-override-plugin-globs <glob> and
	        --bse-override-script-path <path> options.

	        * bseplugin.c: allow plugin path overriding.

	        * bsescripthelper.c: allow script path overriding.

	svn path=/trunk/; revision=2647

2004-09-28  Tim Janik 	# e12773f7bc02e9413710b012e0de35373b2bf1a0

	added test file for BseLatencyTest.

	Tue Sep 28 21:49:25 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/midi-latency.bse: added test file for BseLatencyTest.

	svn path=/trunk/; revision=2646

2004-09-28  Tim Janik 	# c86650c2fbc900754e54d46fcc6ab12463917c98

	check pipe file type.

	Tue Sep 28 21:47:27 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/bselatencytest.cc: check pipe file type.

	svn path=/trunk/; revision=2645

2004-09-28  Tim Janik 	# f6827aa8792e545aa12ae24f1207448159247b64

	moved file tests to sfi: gsl_error_from_errno(): some errno

	Tue Sep 28 20:38:45 2004  Tim Janik  <timj@gtk.org>

	        * gslcommon.[hc]: moved file tests to sfi:
	        gsl_error_from_errno(): some errno reassignbements, for EBADF, ENOTDIR
	        and ENODEV, return fallback to indicate operation failure (rather than
	        "not found" or internal error). adapted users.
	        gsl_check_file_equals(): removed, use sfi_file_equals() instead.
	        gsl_file_check(): renamed from gsl_check_file(), use sfi_file_check()
	        internally.

	svn path=/trunk/; revision=2644

2004-09-28  Tim Janik 	# 2447d45fabb83830cde15ef6c39c5fbb7b0a044e

	added sfi_file_check() and sfi_file_equals() (based on functions from

	Tue Sep 28 21:45:12 2004  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.[hc]: added sfi_file_check() and sfi_file_equals()
	        (based on functions from bse/gslcommon.c). documented g_file_test_all().

	svn path=/trunk/; revision=2643

2004-09-28  Tim Janik 	# 8267f14b93fd953bc5a7f0593ea55e318642bf05

	fixed up device handling, so the module works out of the box.

	Tue Sep 28 18:51:00 2004  Tim Janik  <timj@gtk.org>

	        * tests/latency/bselatencytest.cc: fixed up device handling, so the
	        module works out of the box.

	svn path=/trunk/; revision=2642

2004-09-28  Tim Janik 	# e4c165e3e9921e0d05770b5675362f0e02bf1be4

	build tests/latency/Makefile.

	Tue Sep 28 18:25:54 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: build tests/latency/Makefile.

	        * tests/latency/Makefile.am: build bselatencytest plugin.

	svn path=/trunk/; revision=2641

2004-09-28  Tim Janik 	# b890be9e33bb8c4d0461779ee3406248635fd26a

	adapt io handler to BSE changes

	svn path=/trunk/; revision=2640

2004-09-28  Tim Janik 	# 2c0d7316666bb39d6e005e394af421e0d8e2482f

	added n_fds to BseIOWatch, adapted users.

	Tue Sep 28 18:26:23 2004  Tim Janik  <timj@gtk.org>

	        * bsedefs.h: added n_fds to BseIOWatch, adapted users.

	        * bseplugin.c bse_plugin_path_list_files(): allow *.o plugins besides *.so.

	svn path=/trunk/; revision=2639

2004-09-28  Tim Janik 	# 4f7730a8fdbcdab04de1efd4ddb3e040d43fb8b0

	comment fixups

	svn path=/trunk/; revision=2638

2004-09-28  Tim Janik 	# c5e34f69be2bc1deb6f106e5f6f862d43375b1df

	c++-mode

	svn path=/trunk/; revision=2637

2004-09-28  Tim Janik 	# 41c831abb1401a02c0857cd521b5a1abd2fe774d

	add c++-mode

	svn path=/trunk/; revision=2636

2004-09-28  Stefan Westerfeld 	# b62bfc446630edcbcbc0b9b1987ca6353876f565

	Use -p and -m options to select null driver. This allows feature tests to

	Tue Sep 28 10:55:32 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/audio/featuretest.sh: Use -p and -m options to select null
		driver. This allows feature tests to run independantly of audio, and
		at maximum speed.

	svn path=/trunk/; revision=2635

2004-09-28  Stefan Westerfeld 	# 2413205e665497a58ecc872d700c6b9dbf2f0c70

	Module which allows automated midi latency testing.

	Tue Sep 28 17:55:17 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/latency/bselatencytest.[ic]*: Module which allows automated
		midi latency testing.

	svn path=/trunk/; revision=2634

2004-09-28  Tim Janik 	# 547e9295642e4ee72177afa14461d206a5a701ab

	fixed up package name.

	Tue Sep 28 04:25:21 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: fixed up package name.

	        * README: describe installation path handling of this package.

	        * Makefile.am: fix include paths.

	svn path=/trunk/; revision=2633

2004-09-28  Miloslav Trmac 	# 353488155b7add8f8c9a828b8a31782f8383845e

	Updated Czech translation.

	2004-09-28  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2632

2004-09-28  Tim Janik 	# 16b7e6aa369dfebfe4f3146fef08801cfdd4433b

	updates

	svn path=/trunk/; revision=2631

2004-09-28  Tim Janik 	# 2d697c5f4d59aba4a5f8508cb71da3f1b101cd1f

	niceness todo

	svn path=/trunk/; revision=2630

2004-09-27  Tim Janik 	# cf722182d3a0c4e0f273382a2b37b3c614409b7c

	updates

	svn path=/trunk/; revision=2629

2004-09-27  Tim Janik 	# a40c8d2e3ee7eb936505a2635a74f10e8f63e616

	update

	svn path=/trunk/; revision=2628

2004-09-27  Tim Janik 	# 9a766d8bcec5d17d6f4574fc8cd982237bc8a60b

	preliminary implementation of read handler.

	Tue Sep 28 01:45:21 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.c: preliminary implementation of read handler.

	svn path=/trunk/; revision=2627

2004-09-27  Tim Janik 	# 6c751c4e2e31b5e1c0b5d031cd65d370f81cd853

	issue dummy reads instead of calling snd_pcm_forward() which produces

	Tue Sep 28 00:57:57 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c (alsa_device_write): issue dummy reads instead of
	        calling snd_pcm_forward() which produces annoying debugging messages.

	svn path=/trunk/; revision=2626

2004-09-27  Tim Janik 	# d0cd4eebe8e1905411c2e7322ea1ed0611e9a284

	updates

	svn path=/trunk/; revision=2625

2004-09-27  Tim Janik 	# b555af78452d81540384be18f4909ccca3f9bcc7

	object skeleton for a an ALSA MIDI driver.

	Tue Sep 28 00:38:31 2004  Tim Janik  <timj@gtk.org>

	        * bsemididevice-alsa.h:
	        * bsemididevice-alsa.c: object skeleton for a an ALSA MIDI driver.

	svn path=/trunk/; revision=2624

2004-09-27  Adam Weinberger 	# bdf31fcc78e2ac16a5a2c804fa9712a0a210c556

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2623

2004-09-27  Tim Janik 	# 64286fc8cf5f7c12e7205ce7c25a522e137154ea

	cosmetic fixes

	svn path=/trunk/; revision=2622

2004-09-27  Tim Janik 	# 91762992dd3d370915caf217511c3ac3593b6504

	bse_device_open(): if no arguments are specified, try opening the device

	Mon Sep 27 20:36:55 2004  Tim Janik  <timj@gtk.org>

	        * bsedevice.[hc]:
	        bse_device_open(): if no arguments are specified, try opening the device
	        with the arguments povided by its listed device entries.
	        made bse_device_split_args() non-public.

	        * bsemididevice.h: removed public midi_fd from handle, fixed users.

	svn path=/trunk/; revision=2621

2004-09-27  Tim Janik 	# a05512f72e4fd246263c7f98062d407b1fdd1657

	don't try to check busy state of NULL voices.

	Mon Sep 27 18:26:56 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.cc (bse_midi_receiver_voices_pending): don't try to
	        check busy state of NULL voices.

	M

	svn path=/trunk/; revision=2620

2004-09-27  Vincent van Adrighem 	# 79252a395bf8bd2a58d891738e3bd5a2728a76b8

	Translation updated by Tino Meinen.

	2004-09-27  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2619

2004-09-27  Tim Janik 	# d341bf522f71c94a8d5d0f71f3f07483c27fe540

	shut up

	svn path=/trunk/; revision=2618

2004-09-27  Tim Janik 	# 6993f7e21070d4909fd40edec2e9dc14d9fa7784

	cometics

	svn path=/trunk/; revision=2617

2004-09-27  Tim Janik 	# f5c2a18f2c3c58878c20752238f703f0972323e3

	added missing files

	svn path=/trunk/; revision=2616

2004-09-27  Tim Janik 	# 265b07a97e5283baf1e827b894485488bf256bd8

	implemented ALSA pcm driver plugin, that works down to 1ms latency.

	Mon Sep 27 09:48:16 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.[hc]: implemented ALSA pcm driver plugin,
	        that works down to 1ms latency.

	        * configure.in: plugin package setup, version 0.6.3-rc1.

	svn path=/trunk/; revision=2615

2004-09-27  Tim Janik 	# ff28a465a3216b99ab3bab16b9bdee2eca9807c7

	added ALSA project link

	svn path=/trunk/; revision=2614

2004-09-27  Tim Janik 	# cdc49f754b9cd9474257b9d780c794f3729c69c8

	collect debugging keys from C++ files and sort the list of debugging keys.

	Mon Sep 27 06:46:10 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am:
	        * beast-gtk/bstutils.c: collect debugging keys from C++ files
	        and sort the list of debugging keys.

	svn path=/trunk/; revision=2613

2004-09-27  Tim Janik 	# f90ede07d311027c4b930bfef07c9c0c8010f791

	removed queue_length field from handle, as it's OSS specific. turned

	Mon Sep 27 06:38:57 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice.[hc]: removed queue_length field from handle, as it's
	        OSS specific. turned req_queue_length field into req_latency_ms, i.e.
	        requested latency in milliseconds.

	        * bsemididevice-oss.c: added queue_length field to handle. adapt
	        to BsePcmDevice.req_latency_ms.

	svn path=/trunk/; revision=2612

2004-09-26  Tim Janik 	# 6258aff3193c10e2c11c370ad7a8294887fcda3c

	fixed hardcoded n_channels=2 and a number of buglets.

	Mon Sep 27 01:09:39 2004  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c: fixed hardcoded n_channels=2 and a number of buglets.

	svn path=/trunk/; revision=2611

2004-09-26  Adam Weinberger 	# 4cf6b02880498dfa6ce673fd03a1aa92871959fb

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2610

2004-09-26  Tim Janik 	# 31c47cb73954f1dc5d22b6c3314ee2283a331270

	updates

	svn path=/trunk/; revision=2609

2004-09-26  Tim Janik 	# 5a912e352268413119db9ef5375b65eb3410ef7c

	fixed logic that collapses multiple 'auto' drivers. don't skip auto-list

	Sun Sep 26 06:00:46 2004  Tim Janik  <timj@gtk.org>

	        * bsedevice.c: fixed logic that collapses multiple 'auto' drivers.
	        don't skip auto-list drivers after trying to open 'auto', users
	        may have provided special device arguments.

	        * bsepcmdevice-oss.c: API updates. added underrun detection and handling.
	        added hs - hard-sync option to initiate retriggers on underruns.
	        fixed read/write opening mode logic. moved poll timeout calculation
	        logic from bsepcmmodule.c here. simplified code by using number of
	        frames all over the place. take latency settings into account
	        and honour them if the device has been opened readable. ensure block
	        writing is always paired with a previous block read to stabelize
	        latency queue length.

	        * bsepcmdevice.[hc]: added req_block_length field for a tentative
	        block_length request and req_queue_length field to request queue
	        lengths according to the current latency settings.
	        bse_pcm_device_request(): allow latency and block-length requisitions.
	        bse_pcm_device_get_mix_freq(): mix frequency accessor.
	        bse_pcm_device_get_handle(): require block_length specification.
	        bse_pcm_handle_read():
	        bse_pcm_handle_write(): removed n_values argument, which is now always
	        handle->block_length, as setup from bse_pcm_device_get_handle().
	        bse_pcm_handle_status(): removed status() method alltogether.
	        bse_pcm_handle_check_io(): introduced check_io() which to some extend
	        merges logic from the former status() and bse_pcm_module_poll()
	        functions. check_io() returns whether a block may be read or
	        needs to be written and the timeout until arrival of such an event
	        if data may not immeditely be processed.
	        bse_pcm_handle_latency() added latency() method which is used to
	        return the current full amount of latency introduced by the device.
	        bse_pcm_handle_set_watermark(): removed watermarks, handled internally
	        by check_io() now.
	        bse_pcm_freq_mode_from_freq():
	        bse_pcm_freq_from_freq_mode(): removed frequency mode indirection.
	        bse_pcm_device_frequency_align(): new function to align mix frequencies
	        to common device values.

	        * bsepcmmodule.c: removed watermark based timeout calculation, the
	        pcm layer handles stuff now. work around non-readable device handles.

	        * bseserver.c: added latency and block_size to pcm device requests.
	        keep the first device error we encounterted. allow free-form mix
	        frequencies at first, fallback to aligned frequencies if no device
	        could be opened.

	        * bsessequencer.[hc]: allow queries about how bad the sequencer
	        is lagging behind his scheduled future stamp.

	        * bsepcmdevice-null.c: adapt to new BsePcmDevice API, sleep
	        cooperatively since we might run at nice level -20.

	        * bseengine.c: docu updates.

	svn path=/trunk/; revision=2608

2004-09-26  Tim Janik 	# e460992cc3ee7bdf59e359011587ce2a14361dfa

	added missing files

	svn path=/trunk/; revision=2607

2004-09-25  Miloslav Trmac 	# 80e3abf602400f7f77e5addc28f6f81ed9464188

	Updated Czech translation.

	2004-09-25  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2606

2004-09-25  Tim Janik 	# cdccbf144951f298e0c11c92fdc0551f1b1d9bce

	thought updates

	svn path=/trunk/; revision=2605

2004-09-24  Adam Weinberger 	# 8f16af674a238598495d4908051d3247f5e1f129

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2604

2004-09-24  Tim Janik 	# 01359273cd6852c67cc54e4c71ae06b148062b60

	fallback to write-only mode if opening in read-write mode failed.

	Fri Sep 24 10:41:18 2004  Tim Janik  <timj@gtk.org>

	        * bseserver.c (bse_server_open_pcm_device): fallback to write-only mode
	        if opening in read-write mode failed.

	svn path=/trunk/; revision=2603

2004-09-24  Tim Janik 	# 707b2ac074ef3a345d50ba9f1604614c3b89b3f0

	fix typo

	svn path=/trunk/; revision=2602

2004-09-24  Tim Janik 	# 27714f006237018be2a25aecd2df17c16707421a

	provide $bsedriverdir.

	Fri Sep 24 09:12:48 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: provide $bsedriverdir.

	        * data/Makefile.am: define BSE_PATH_DRIVERS.

	        * data/bse.pc.in: define various pkg-config variables to provide
	        the sfidl executable and various other paths.

	svn path=/trunk/; revision=2601

2004-09-24  Tim Janik 	# fa35d6a75c130290330729ea6381710371487829

	added groups to device entries. adjusted device list dump.

	Fri Sep 24 09:14:14 2004  Tim Janik  <timj@gtk.org>

	        * bsedevice.[hc]: added groups to device entries. adjusted device
	        list dump.

	        * bseenums.[hc]: adapted device errors, so they better correspond
	        to user defined configuration settings.

	        * bsemain.[hc]: load drivers from drivers dir before dumping device
	        list.

	        * bseplugin.[hc]: extended bse_plugin_path_list_files() to support
	        BSE_PATH_DRIVERS.

	        * bsepcmdevice-oss.c: don't list ENODEV devices.

	        * bsemididevice-oss.c: don't list ENODEV devices.

	svn path=/trunk/; revision=2600

2004-09-24  Adam Weinberger 	# 44c21037ee4afac0fb25b8f1e86fa0453914b877

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2599

2004-09-23  Miloslav Trmac 	# f33de3a3d69b2de55c125ce8737e308b18a708b5

	Updated Czech translation.

	2004-09-24  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2598

2004-09-23  Tim Janik 	# 88ec0f8075757224733a7eb47e155ec989043795

	slight fixup

	svn path=/trunk/; revision=2597

2004-09-23  Tim Janik 	# dcf7c337f4bb8d3b08ceb1784ebe6396e5857eb2

	fixed a theoretical bug ;)

	svn path=/trunk/; revision=2596

2004-09-23  Tim Janik 	# 30c174b7617593e665c4b4116d686cade88a44e4

	document new options.

	Thu Sep 23 18:11:25 2004  Tim Janik  <timj@gtk.org>

	        * docs/beast.1.texi:
	        * docs/bsesh.1.texi: document new options.

	svn path=/trunk/; revision=2595

2004-09-23  Tim Janik 	# ddc96371339239c6f10bdd56f1c0be442ef2be56

	added support for BSE device listing. implemented --help and --version.

	Thu Sep 23 15:54:04 2004  Tim Janik  <timj@gtk.org>

	        * shell/bsesh.c: added support for BSE device listing. implemented
	        --help and --version.

	svn path=/trunk/; revision=2594

2004-09-23  Tim Janik 	# 74d0a895882d8ed2bcf403917d7f00902531db6c

	added base class for BseMidiDevice and BsePcmDevice. move open() and

	Thu Sep 23 15:43:02 2004  Tim Janik  <timj@gtk.org>

	        * bsedevice.[hc]: added base class for BseMidiDevice and BsePcmDevice.
	        move open() and close() (former suspend()) methods here. implemented
	        automated device selection and listing.

	        * bsepcmdevice-null.[hc]: added null PCM device.

	        * gslcommon.[hc]:
	        gsl_check_file(): added char device, block device and pipe checks.
	        gsl_check_file_equals(): check whether two files point to the same inode.

	        * bse*device-*.[hc]: adaptions to new device API.

	        * bsemididevice.[hc]:
	        * bsepcmdevice.[hc]: adaptions to bsedevice.[hc].

	        * bsemain.c: implemented proper device listing.

	        * bseserver.c: adaptions to new device API.

	        * bsessequencer.[hc]: provide bse_sequencer_thread_lagging() for
	        null PCM device integration.

	svn path=/trunk/; revision=2593

2004-09-23  Tim Janik 	# a6cdf6291a33fc45c3e674c0b63f7f37f1eec3db

	added g_string_prefix_lines() which adds a prefix to every line (before

	Thu Sep 23 15:50:18 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_string_prefix_lines() which adds a prefix
	        to every line (before '\n') within a GString, usefull for indenting.

	svn path=/trunk/; revision=2592

2004-09-22  Sven Herzberg 	# 3c23d5ff2930b946523c09abcd924f5402f29a27

	fixed this: if one set the zoom size for a text object it was always set

	Wed Sep 22 23:27:23 2004  Sven Herzberg  <herzi@gnome-de.org>

	        * beast-gtk/gxk/gxkcanvas.c: fixed this: if one set the zoom size
		for a text object it was always set to display the 100% zoom font
		size, even if the zoom factor was not 100%

	svn path=/trunk/; revision=2591

2004-09-22  Tim Janik 	# 30a1994c1eae66bcc79172de6346dfdf5f287c5c

	fixup  arg initialization

	svn path=/trunk/; revision=2590

2004-09-22  Tim Janik 	# 09a510c44142d6e9b4f2c5658a7dfe6278442ec6

	added documentation for --bse-latency, --bse-mixing-freq,

	Wed Sep 22 14:26:12 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: added documentation for --bse-latency,
	        --bse-mixing-freq, --bse-control-freq, --bse-pcm-driver,
	        --bse-midi-driver, --bse-driver-list. handle -p and -m option
	        aliases. don't auto save BSE rc file if any of these PCM setup
	        options is given. don't auto save BEAST rc file is preferences
	        were saved during program's lifetime. exit after driver list dump
	        for --bse-driver-list.

	        * beast-gtk/bstpreferences.[hc]: added bst_preferences_saved()
	        to figure whether preferences got saved at some point.

	svn path=/trunk/; revision=2589

2004-09-22  Tim Janik 	# 3f8e1b398e2a45e3cd28cab83626f9a2b5f7eaaf

	added bse_gconfig_merge_args() to merge configuration with command line

	Wed Sep 22 14:28:11 2004  Tim Janik  <timj@gtk.org>

	        * bsegconfig.[hc]: added bse_gconfig_merge_args() to merge
	        configuration with command line arguments.

	        * bsemain.[hc]: provide BseMainArgs globally, setup from argv parsing.
	        parse --bse-latency, --bse-mixing-freq, --bse-control-freq,
	        --bse-driver-list, --bse-pcm-driver and --bse-midi-driver.

	        * bseserver.c: merge argv arguments into global config after
	        parsing rc file.

	svn path=/trunk/; revision=2588

2004-09-22  Tim Janik 	# f3f7d85f5ac5a9ba42e90aacbf2400086997bad9

	bse_track_context_create(): bse_track_context_dismiss(): enable poly

	Wed Sep 22 02:58:07 2004  Tim Janik  <timj@gtk.org>

	        * bsetrack.c:
	        bse_track_context_create():
	        bse_track_context_dismiss(): enable poly voices not only for snets, but
	        also for waves supplied by the user.

	svn path=/trunk/; revision=2587

2004-09-22  Tim Janik 	# 49eb4344321be67448c3f99bcb4c9bbe4597bc82

	rewrote and majorly simplified playback object maintenance. simply allow

	Wed Sep 22 02:13:59 2004  Tim Janik  <timj@gtk.org>

	        * bsessequencer.[hc]: rewrote and majorly simplified playback
	        object maintenance. simply allow removal and additions of
	        songs to the sequencer, adapted callers.

	        * bsesuper.[hc]: removed sequencer specific code and API,
	        adapted callers.

	        * bsesong.[hc]: adapted to new sequencer API.

	        * bseproject.[hc]: simplified and adapted to new sequencer API.

	svn path=/trunk/; revision=2586

2004-09-22  Stefan Westerfeld 	# af40655465dc75d9557575933d6037628c4b814b

	Added --cut-zeros option, which cuts zero samples at the head and tail of

	Wed Sep 22 01:59:31 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added --cut-zeros option, which cuts zero
		samples at the head and tail of the signal before computing the
		features.

		* tests/audio/featuretest.sh: Use --cut-zeros option, to make results
		more reproduceable.

		* tests/audio/bseadder.test.reference: Adapted test to --cut-zeros
		like features.

	svn path=/trunk/; revision=2585

2004-09-21  Stefan Westerfeld 	# 91d9162d4d81edeb1c8667e235878b215880f598

	bseadder.test.reference shouldn't contain data generated from a beast with a hacked oss driver I used for debugging purposes. Corrected this.

	svn path=/trunk/; revision=2584

2004-09-21  Stefan Westerfeld 	# 591b047163710c6006926635beca68a734b7f641

	Add tests/audio/Makefile.am

	Wed Sep 22 00:54:46 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in: Add tests/audio/Makefile.am

		* tests/audio/README: Description of the automated audio testing.

		* tests/audio/Makefile.am: You can say make test now.

		* tests/audio/featuretest.sh: The main shell script which evaluates
		the feature tests.

		* tests/audio/bsetowav.scm: A helper scheme script which converts bse
		files to wav files.

		* tests/audio/bseadder.test:
		* tests/audio/bseadder.test.reference:
		* tests/audio/bseadder.bse: A test for bseadder.

	svn path=/trunk/; revision=2583

2004-09-21  Tim Janik 	# b17ce3e85e705aee409d5c040388466665469d27

	updates

	svn path=/trunk/; revision=2582

2004-09-21  Tim Janik 	# 3c14cac0981928abdf7d6d2cfcb039dc40510456

	store and restore property automation setups.

	Tue Sep 21 23:59:09 2004  Tim Janik  <timj@gtk.org>

	        * bsestorage.c: store and restore property automation setups.

	svn path=/trunk/; revision=2581

2004-09-21  Tim Janik 	# cb820f7da0cc3d017ef08616750eb9aac9e3e0cc

	don't generate prototypes without implementations.

	Tue Sep 21 21:31:23 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corec.cc (namespace): don't generate prototypes without
	        implementations.

	svn path=/trunk/; revision=2580

2004-09-21  Miloslav Trmac 	# f526854381204f34414663a92d753b56d511c064

	Updated Czech translation.

	2004-09-21  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2579

2004-09-21  Vincent van Adrighem 	# aef1c6300092bc18806e61ed249cabe388cb6185

	Translation updated by Tino Meinen.

	2004-09-21  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2578

2004-09-21  Tim Janik 	# b86e8178f9d099db2be79eb36f92dc3645c9d24d

	updates

	svn path=/trunk/; revision=2577

2004-09-21  Tim Janik 	# f31e5b840cfba15a1a05c157fcdf01642f67b99c

	introduced explicit enabling of polyphonic voice handling. avoid warning

	Tue Sep 21 04:41:29 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]*: introduced explicit enabling of polyphonic
	        voice handling. avoid warning about unavailable voices for disconnected
	        tracks, or if polyphonic handling was not enabled.

	        * bsetrack.c: request polyphonic midi channel handling iff the track
	        provides a synth mesh and is prepared.

	        * bseproject.c: bse_project_start_playback(): ensure all modules are
	        properly intergrated into the engine before starting the sequencer.

	        * bsesource.c: guard objects with PREPARED flag until after reset()
	        invocation.

	        * bseengine.[hc]: added bse_module_is_scheduled() and bse_job_nop().

	        * bseengineutils.c:
	        * bseenginemaster.c: handle nop jobs properly.

	svn path=/trunk/; revision=2576

2004-09-21  Tim Janik 	# a2a9e3deea7bd525a6c2d73d2061fd0280c40f29

	adjusted volume levels of the various tracks to better faciltate the

	Tue Sep 21 03:11:53 2004  Tim Janik  <timj@gtk.org>

	        * library/demo/partymonster.bse: adjusted volume levels of the
	        various tracks to better faciltate the availably dynamic range.

	svn path=/trunk/; revision=2575

2004-09-21  Tim Janik 	# 2861bba01def6515ec9a26b43a22b70381c6bd00

	comment updates

	svn path=/trunk/; revision=2574

2004-09-21  Tim Janik 	# d340fb274588c820e722b6c4a17c3363cbc517ba

	don't throw invalid warnings. voice_input_module_access_U():

	Tue Sep 21 02:40:05 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.cc: don't throw invalid warnings.
	        voice_input_module_access_U():
	        change_voice_input_L(): mono voices may receive note-on while busy.

	svn path=/trunk/; revision=2573

2004-09-21  Tim Janik 	# ae4221ad3b245fb1fe69f22c45e261b03b312de5

	updates

	svn path=/trunk/; revision=2572

2004-09-21  Tim Janik 	# 84b0f0d2385673fca427a549350c6637c1f09526

	added documentation blurb on voice states and table entries, in relation

	Tue Sep 21 02:18:37 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.cc: added documentation blurb on voice states and
	        table entries, in relation to note-on, note-off and done=1 events.
	        added missing _U and _L locking marks to function names (except
	        midi receiver methods which are all implicitely _L).
	        voice_input_module_access_U():
	        voice_switch_module_reuse_U():
	        voice_input_enter_sustain_U():
	        voice_input_enter_idle_U(): added mssing locking guards.

	svn path=/trunk/; revision=2571

2004-09-20  Tim Janik 	# 8c5d49239a9598882decf27438b901861336cdb0

	BseFreeFunc fixup, ensured the free function is called from the user

	Tue Sep 21 01:03:30 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]*: BseFreeFunc fixup, ensured the free function
	        is called from the user thread (BSE core thread) without any locks
	        still held.

	svn path=/trunk/; revision=2570

2004-09-20  Tim Janik 	# 58d07cc3a7232fa1e4318151813d37f50924144c

	generate class definiiitions which may contain function bodies after all

	Mon Sep 20 21:52:23 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: generate class definiiitions which may contain
	        function bodies after all other types have been prototyped, declared
	        and defined.

	svn path=/trunk/; revision=2569

2004-09-20  Stefan Westerfeld 	# 10ab40686ff66418f298f12c9bdaa885aa6b87ef

	Keep output_db property fixed when auto_output is active. Implemented

	Mon Sep 20 15:54:10 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.cc: Keep output_db property fixed when auto_output is
		active. Implemented editable_property() method, to make the user aware
		of this.

	svn path=/trunk/; revision=2568

2004-09-19  Tim Janik 	# 7589f468093479f0cf7e81a990cd72684e17fc88

	updates

	svn path=/trunk/; revision=2567

2004-09-19  Tim Janik 	# fd1359594ce8e8b90de083c1a939645d827789ab

	undo_do_deactivate(): properly deactivate via bse_project_deactivate(),

	Mon Sep 20 01:38:14 2004  Tim Janik  <timj@gtk.org>

	        * bseproject.proc:
	        undo_do_deactivate(): properly deactivate via bse_project_deactivate(),
	        not just bse_project_stop_playback() which doesn't reset PREPARED state
	        anymore.
	        project_push_undo_silent_deactivate(): stop playback before undo *and*
	        redo execution.

	        * bsesource.proc: undo fixup for set-automation.

	svn path=/trunk/; revision=2566

2004-09-19  Tim Janik 	# 407ddb83ad55c215e3b75131e051f8c76d8a1868

	updated Trigger() property docu.

	Mon Sep 20 01:09:35 2004  Tim Janik  <timj@gtk.org>

	        * docs/plugin-devel.texi: updated Trigger() property docu.

	svn path=/trunk/; revision=2565

2004-09-19  Tim Janik 	# dafac94793f6acc09acecf80b68cc59af7d302ad

	completed infrastructure for automation.

	Mon Sep 20 00:44:12 2004  Tim Janik  <timj@gtk.org>

	        * completed infrastructure for automation.

	        * bseengine.[hc]: return tick_stamp of transaction execution from
	        bse_trans_commit().

	        * bseenginemaster.c: provide a boolean to _engine_pop_job(), indicating
	        whether the internal tick stamp returned by bse_trans_commit() may be
	        updated.

	        * bseengineutils.[hc]: implemented tick_stamp return handling for
	        bse_trans_commit().

	        * bsemidireceiver.[hc]*: removed minimum and maximum from
	        bse_midi_receiver_add_control_handler(). instead, return whether
	        user data is setup for this handler or not. at the moment, this
	        seems to be sufficient to implement automation.

	        * bsesource.[hc]: added property_updated() class function. fixed
	        automation property maintenance.

	        * Makefile.am: fixed dependencies, install bsecore.gen-idl.h.

	        * bsecxxmodule.cc: include bsecore.gen-idl.h through bsecxxplugin.h,
	        so bsecore.gen-idl.h is publically available.

	        * bsecore.idl: use bse_intern_path_user_data() instead of macros from
	        topconfig.h.

	        * bseutils.[hc]: provide bse_intern_path_user_data()
	        for bsecore.gen-idl.h.

	        * bsecxxbase.[hc]*: only flag writable properties as G_PARAM_CONSTRUCT.
	        added set_accessors() to setup per inheritance level property
	        handling functions. supplied trampoline templates to generate class
	        method calls.

	        * bsecxxmodule.[hc]*: update BSE properties through
	        BseSourceClass.property_updated() in free() handler of automation
	        property flow accessor. properly quantize automated bool property
	        values. fixed user_data setup of midi control handler.
	        record tick_stamp  of last module update.

	        * bsecxxplugin.h: removed function definition macros. instead, use
	        trampoline generation templates. include <bse/bsecore.gen-idl.h>
	        after defining all required macros, implement get_candidate()
	        trampoline template which depends on class PropertyCandidates,
	        supplied by bsecore.gen-idl.h.

	        * bsecxxutils.[hc]*: comment updates. removed function definition
	        macros which are replaced by trampoline templates.

	svn path=/trunk/; revision=2564

2004-09-19  Tim Janik 	# b28acd6d75a3328ab278cf3be619cf3b7a35158d

	implemented automation for cutoff_perc, reso_perc, env_mod and env_decay.

	Mon Sep 20 01:10:00 2004  Tim Janik  <timj@gtk.org>

	        * davbassfilter.[ic]*: implemented automation for cutoff_perc,
	        reso_perc, env_mod and env_decay.

	svn path=/trunk/; revision=2563

2004-09-19  Tim Janik 	# 5c179e0406213d20098b7b13bc40e678bb26c098

	added class_has_automation_properties(). implemented code geenration for

	Mon Sep 20 01:12:01 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: added class_has_automation_properties().
	        implemented code geenration for automated property handling.
	        call set_accessors() from class_init() and supply trampolines
	        for set_property(), get_property(), editable_property(),
	        get_candidates() and property_updated().
	        editable_property() and get_candidates() are virtual to allow
	        custom implementations in effects.

	svn path=/trunk/; revision=2562

2004-09-19  Adam Weinberger 	# 30ad5081f2a359ca31fc80798ce107ea7e98268e

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2561

2004-09-19  Tim Janik 	# c39d9bc8e09b9e52a10a34d94f7b778aba36d6f5

	added missing dependancies

	svn path=/trunk/; revision=2560

2004-09-19  Tim Janik 	# 991894bfa54c0e4fba58b9e89d4cf957e11cc1a6

	added missing dependancy

	svn path=/trunk/; revision=2559

2004-09-19  Raphael Higino 	# 41f2f52411fe115ab9e9ee1d7a30d2d6f363b5a0

	Updating pt_BR translation

	svn path=/trunk/; revision=2558

2004-09-19  Raphael Higino 	# d79d4e47167155e029eb8d4d208f415d5434d4d0

	Updating pt_BR translation

	svn path=/trunk/; revision=2557

2004-09-19  Tim Janik 	# 75227d830ebec4d54ae263fc144e3cfe0b5af139

	added missing files with i18n markup

	svn path=/trunk/; revision=2556

2004-09-18  Adam Weinberger 	# 258f004aac3f7b6a99c0740ab248828815bd3a16

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2555

2004-09-18  Raphael Higino 	# f118dd16e8936c127e79420a1d15e18795ae3ac5

	Updating pt_BR translation

	svn path=/trunk/; revision=2554

2004-09-18  Stefan Westerfeld 	# c04610a7044e288ffdbb1d335cbc8571b1433831

	Improved auto_output tooltip.

	Wed Sep 15 16:39:46 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.idl: Improved auto_output tooltip.

	svn path=/trunk/; revision=2553

2004-09-17  Stefan Westerfeld 	# c845896ab8e9d567deb66b7c03e264a680180c38

	Added --min-max-peak feature, which figures out the smallest and largest

	Wed Sep 15 17:02:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added --min-max-peak feature, which figures
		out the smallest and largest sample.
		Code refactoring and cleanup: each feature extraction algorithm is now
		in a seperate class derived from class Feature. To make C++-Coding
		convenient, there is a class Signal, which allows writing signal[5] in
		algorithms to get the fifth input-sample.
		While refactoring, fixed bugs in --start-time, --end-time and
		--avg-energy features, which ignored the --channel command line
		argument.

	svn path=/trunk/; revision=2552

2004-09-16  Tim Janik 	# 1837b47094db9f9b83bc5bd4d19722274e4cc11b

	install mime type definitions.

	Thu Sep 16 23:47:36 2004  Tim Janik  <timj@gtk.org>

	        * data/beast.xml.in: install mime type definitions.

	svn path=/trunk/; revision=2551

2004-09-16  Tim Janik 	# e5d80baef6fee5195f751f28714aa3d21c131e87

	added helper macros to implement libmad specific mime registration.

	Thu Sep 16 23:21:58 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: added helper macros to implement libmad specific
	        mime registration. provide UPDATE_MIME_DATABASE.

	        * data/Makefile.am: added missing CLEANFILES. install beast.xml
	        mime information file and invoke update-mime-database.

	        * data/beast.applications: removed from CVS, this is now generated
	        from data/beast.applications.in.

	        * data/beast.applications.in: provide libmad sensitive mime
	        handling information.

	        * data/bse.keys.in: minor fixups.

	svn path=/trunk/; revision=2550

2004-09-16  Tim Janik 	# 5adc15c03a64ea867adfea2ce423565ae7c3b93f

	adapt to recent changes.

	Thu Sep 16 16:03:46 2004  Tim Janik  <timj@gtk.org>

	        * tests/testplugin.cc: adapt to recent changes.

	svn path=/trunk/; revision=2549

2004-09-16  Tim Janik 	# b707d0a34b9aba10047af9179a70216f1d416152

	accessor->closure rename where appropriate. moved MidiControlJobData into

	Thu Sep 16 15:41:38 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxmodule.[hc]*: accessor->closure rename where appropriate.
	        moved MidiControlJobData into SynthesisModule.
	        renamed module_configurator() to make_module_config_closure().
	        use bse_midi_receiver_set_control_handler_data() to provide an
	        auto_update() function handle for midi_control_handler().
	        (SynthesisModule): provide an auto_update_accessor() template, to be
	        used as flow job function on engine modules to call auto_update().
	        specialised template so an auto_update() method is required only
	        for objects with the NeedAutoUpdateTag category.

	        * bsedefs.h: provide BSE_MODULE_GET_USER_DATA().
	        * bseengine.c: double check BSE_MODULE_GET_USER_DATA().

	        * bsemidireceiver.[hc]*: added extra user_data to midi control handler,
	        required by bsecxxmodule: bse_midi_receiver_set_control_handler_data().

	svn path=/trunk/; revision=2548

2004-09-16  Tim Janik 	# 78cd1dd55765cb77865da0bc1b958c58883ab19b

	provide a IDType typedef in the synthesis module property structures for

	Thu Sep 16 15:59:05 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: provide a IDType typedef in the synthesis module
	        property structures for the property type IDs use by the implementing
	        effect base object. provide an AutoUpdateCategory typedef in the
	        efefct base object which aliases Synthesis:Module::NeedAutoUpdateTag
	        for effects with :automate: properties.

	svn path=/trunk/; revision=2547

2004-09-15  Miloslav Trmac 	# 9d4f8e9b0d6ef5f633423dc8f5a55727e34d7e43

	Updated Czech translation.

	2004-09-16  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2546

2004-09-15  Tim Janik 	# 06f4930af619105c57a5e958e0f619369d2ade6e

	removed SFI_PARAM_ prefix from option constants.

	Wed Sep 15 22:48:41 2004  Tim Janik  <timj@gtk.org>

	        * *.idl: removed SFI_PARAM_ prefix from option constants.

	svn path=/trunk/; revision=2545

2004-09-15  Adam Weinberger 	# 4bc7342f1fd5131b0c86139453d517a56ba3b664

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2544

2004-09-15  Tim Janik 	# eb76c8d6511245bd1084cd16248c6f7f1a3d27bb

	fixup enum registration, according to recent BseExportNodeEnum changes.

	Wed Sep 15 22:06:03 2004  Tim Janik  <timj@gtk.org>

	        * bseiirfilter.c: fixup enum registration, according to recent
	        BseExportNodeEnum changes.

	svn path=/trunk/; revision=2543

2004-09-15  Stefan Westerfeld 	# 31b489e14de08dc13f064e671c93291dbee58a03

	Fixes: printWarning/printError should never be called with a "\n", as this

	Wed Sep 15 21:37:17 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Fixes: printWarning/printError should never be
		called with a "\n", as this is added implicitely. When a warning is
		printed, the output now says so ("warning: ...").

	svn path=/trunk/; revision=2542

2004-09-15  Stefan Westerfeld 	# 1eb6ce17ac2e0235fa6bce88d7386b7ea3559c1f

	Provide label, blurb and options of a pspec constructor in the Param

	Wed Sep 15 21:23:29 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.h sfidl-parser.cc: Provide label, blurb and options of
		a pspec constructor in the Param struct. Also try to unescape and
		evaluate options to options_literal, a ready-to-use concatenated
		version of the string without \" and similar constructs. Throw a
		warning if this evaluation fails.

	svn path=/trunk/; revision=2541

2004-09-15  Stefan Westerfeld 	# 3cb5f9cd48f104028ba6bcae9b91dd520814c077

	Added --avg-energy feature, which extracts the average signal energy in

	Wed Sep 15 17:02:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc: Added --avg-energy feature, which extracts the
		average signal energy in dB.

	svn path=/trunk/; revision=2540

2004-09-15  Stefan Westerfeld 	# df05eeea8e8dde8aa84f6789a3e61f86ddb575b9

	Adjusted the threshold [dB] range to [-100,0], which is what was

	Wed Sep 15 16:39:46 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.idl: Adjusted the threshold [dB] range to [-100,0],
		which is what was previously valid. This is due to compatibility;
		from a musicians point of view, thresholds below -30 dB or so probably
		don't make too much sense.
		Auto output is now a gui only property, since there are problems with
		the beast storage mechanism when it comes to properties which depend
		on each other.

		* artscompressor.cc: Added makeup gain correction factor (from jamin
		source), which should prevent over correction in automatic output
		amplification. Added a few CLAMPs to ensure that properties converted
		from old files will fit into our ranges.

	svn path=/trunk/; revision=2539

2004-09-15  Stefan Westerfeld 	# 6388c02f3a13b95a9fb37a8d408b9ccc089fc70d

	Implemented more sensible half-life time computation, which handles

	Wed Sep 15 14:40:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.cc: Implemented more sensible half-life time computation,
		which handles corner-cases (very small attack/release times) better.

	svn path=/trunk/; revision=2538

2004-09-15  Raphael Higino 	# 5274b4c2cd7b42d2a3443b0445893eded8edba23

	Updating pt_BR translation

	svn path=/trunk/; revision=2537

2004-09-14  Tim Janik 	# affb768e35ea6871bdd1ef48b3d5eb09afd97e48

	use BseMidiControlType for automation controls. changed abbreviation

	Tue Sep 14 19:05:02 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-automation.c: use BseMidiControlType for
	        automation controls. changed abbreviation format, runtime adapt
	        tooltips.

	svn path=/trunk/; revision=2536

2004-09-14  Tim Janik 	# 17c3f0022928b38fb7b31aa6e28bdb5feb3e1fa5

	switched automation API over to BseMidiControlType.

	Tue Sep 14 19:06:12 2004  Tim Janik  <timj@gtk.org>

	        * bsesource.proc:
	        * bsesource.[hc]: switched automation API over to BseMidiControlType.

	        * bsecore.idl: added i18n markup. added MidiControlType, which
	        duplicates the portions of MidiSignalType that are usable by automation.

	        * bsecxxplugin.h: provide enum value initialization funciton, instead
	        of initializing from static constructor (and calling i18n code prema-
	        turely).

	        * bseexports.h (BseExportNodeEnum): offer an enum value list
	        initialization  function instead of a pointer to already initialized
	        enums values.

	        * bseplugin.c: call enum value list initializer.

	svn path=/trunk/; revision=2535

2004-09-14  Tim Janik 	# fcc45f1f064932302f965f4222d3128307bfdf3c

	const fixups.

	Tue Sep 14 19:10:07 2004  Tim Janik  <timj@gtk.org>

	        * sfiparams.[hc]: const fixups.

	svn path=/trunk/; revision=2534

2004-09-14  Miloslav Trmac 	# 841e450b9260b40ec8cd7bde4c1811504599cd1b

	Updated Czech translation.

	2004-09-14  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2533

2004-09-14  Tim Janik 	# 7f0cc9b88beea7a3da029e6d72adb854fe04c88a

	preserve tooltip when insensitive

	svn path=/trunk/; revision=2532

2004-09-14  Tim Janik 	# 205f69e0c1d98f1d38bcd035bf04f61de409eff3

	new parameter type, to adjust automation settings of a property.

	Tue Sep 14 13:35:26 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-automation.c: new parameter type, to adjust
	        automation settings of a property.

	        * beast-gtk/bstparam.[hc]: introduce bst_param_new_value() which
	        wraps bst_param_new_value(), but also enables size grouping for
	        the parameter editors.
	        bst_param_create_gmask(): create automation editor for :automate:
	        properties.

	        * beast-gtk/gxk/gxkparam.[hc]: support temorary GUI readonly flag.

	        * beast-gtk/gxk/gxkutils.[hc]:
	        gxk_widget_proxy_requisition(): request extra vscrollbar space only if
	        horizontal downscaling is disabled. same for vertical dimension.
	        gxk_scrolled_window_create(): removed useless argument changed callers.

	svn path=/trunk/; revision=2531

2004-09-14  Tim Janik 	# d3c7da983ebea92f55eed508a958fdc12349f72e

	cleanup control handler if the last module is removed from the control

	Tue Sep 14 13:42:11 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.cc: cleanup control handler if the last module is
	        removed from the control handler module list.

	        * bsesource.c: count :automate: properties as :prepared: properties.

	        * bsesource.proc: provide bse_source_is_prepared(),
	        bse_source_set_automation(), bse_source_get_automation_channel() and
	        bse_source_get_automation_control().

	svn path=/trunk/; revision=2530

2004-09-14  Tim Janik 	# 27f29110eef24bb4c3078417ebae9439a1e7267d

	allow a MIDI channel to be specified together with automation properties.

	Tue Sep 14 09:24:27 2004  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: allow a MIDI channel to be specified together with
	        automation properties.

	        * bsecxxmodule.cc: support automation property specific MIDI channels.

	svn path=/trunk/; revision=2529

2004-09-14  Adam Weinberger 	# 0301ea38d1acab738ea3aa7384671c11f324b80f

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2528

2004-09-13  Tim Janik 	# adb12caa882edfde9d12440d902110aa8bb2c441

	partially reverted last change of introducing BseMidiControlData. instead,

	Tue Sep 14 01:40:18 2004  Tim Janik  <timj@gtk.org>

	        * bse/bsemidireceiver.[hc]*: partially reverted last change of
	        introducing BseMidiControlData. instead, implemented value
	        clamping before calling midi control handlers.

	        * bsecxxmodule.cc: removed value clamping logic, pass on minimum
	        and maximum to bse_midi_receiver_add_control_handler().

	svn path=/trunk/; revision=2527

2004-09-13  Tim Janik 	# 5da7a436feb5884bac159d2818134283618d511a

	more effect automation work, generate debugging message from module flow

	Tue Sep 14 01:13:26 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxmodule.idl:
	        * bsecxxmodule.cc: more effect automation work, generate debugging
	        message from module flow access function, properly constrain control
	        event values.

	        * bsemidireceiver.[hc]*: support midi control data structure per
	        control handler instead of just a module pointer.

	svn path=/trunk/; revision=2526

2004-09-13  Tim Janik 	# 0799cc33143bd913a6c9d8bc298b3d882e39bf9d

	s/web site/website/

	svn path=/trunk/; revision=2525

2004-09-13  Tim Janik 	# 81ce3041d3fb0486ae92c99a9d335986501b2ee5

	removed gxk_object_derive(), a suitable replacement is provided by

	Mon Sep 13 21:52:07 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.[hc]: removed gxk_object_derive(), a suitable
	        replacement is provided by G_DEFINE_TYPE(), fixed callers.

	svn path=/trunk/; revision=2524

2004-09-13  Tim Janik 	# 95fa27e603027e0b2a4170a925ec403a482b6d3b

	remove resolved items

	svn path=/trunk/; revision=2523

2004-09-13  Tim Janik 	# 4ac6d6f6ba34b9fe63979ca50bf3bed4d8e6faae

	added "Architecture Overview" TODO item

	svn path=/trunk/; revision=2522

2004-09-13  Tim Janik 	# ec56e1804e52531bc43bf3ebcb3bac3d2de2fbfb

	document list and link list updates.

	Mon Sep 13 21:24:40 2004  Tim Janik  <timj@gtk.org>

	        * docs/beast-index.texi: document list and link list updates.

	        * beast-gtk/bstapp.[hc]: help menu revamp, and other menu improvements.

	        * beast-gtk/dialogs/radgets-beast.xml: BstApp menu adaptions.

	        * beast-gtk/gxk/gxktexttools.c: open external web browser when links
	        are activated that use the protocols: http, https, ftp or mailto.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_show_url(), a function to
	        invoke an external web browser.

	svn path=/trunk/; revision=2521

2004-09-13  Tim Janik 	# d7e1491c062a6130e3bbb990da5690138cd88bc6

	added mime type for audio/x-bse and audio/x-bsewave, pointed out by Artem

	Mon Sep 13 14:10:21 2004  Tim Janik  <timj@gtk.org>

	        * data/beast.desktop.in: added mime type for audio/x-bse and
	        audio/x-bsewave, pointed out by Artem Popov.

	svn path=/trunk/; revision=2520

2004-09-13  Adam Weinberger 	# 104387a89c4a656557e294bd5755425bb6e6e3df

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2519

2004-09-13  Tim Janik 	# e2ac08d5f771a235c4f51feb36368267a89f808b

	provide a mechanism to register, unregister and notify handlers about midi

	Mon Sep 13 02:37:28 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.h:
	        * bsemidireceiver.cc: provide a mechanism to register, unregister and
	        notify handlers about midi control changes.

	        * bsesource.[hc]: collect :automate: properties, and maintain an
	        automate-property => midi-control-number association.

	        * bsecxxmodule.cc: first steps in implementing automation
	        infrastructure, currently only debugging messages are generated.
	        integrate_engine_module():
	        dismiss_engine_module(): queue job with accessor function to register
	        and unregister a midi receiver control handler for the module.

	        * bseitem.[hc]: added bse_item_get_snet().

	        * bseenums.[hc]: more errors.

	svn path=/trunk/; revision=2518

2004-09-12  Tim Janik 	# a7f4d0fd3771f770e31af607a82d287d36c57d9e

	cosmetics

	svn path=/trunk/; revision=2517

2004-09-12  Adam Weinberger 	# 16b0e956e6029e2569b3583501da8c357908ed0a

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2516

2004-09-12  Tim Janik 	# b1931e39fac99f1561fede4f6d13afc03c23445b

	changed layouts to use gxk_scrolled_window_create().

	Sun Sep 12 03:35:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparamview.c:
	        * beast-gtk/bstpreferences.c: changed layouts to use
	        gxk_scrolled_window_create().

	        * beast-gtk/bsttracksynthdialog.c:
	        * beast-gtk/bstitemseqdialog.c:
	        * beast-gtk/bstpartdialog.c:
	        * beast-gtk/bstfiledialog.c:
	        * beast-gtk/bstapp.c: adjusted dialog sizes, constrained to screen size.

	        * beast-gtk/bsteventroll.c: adjusted height requisition.

	        * beast-gtk/gxk/gxkdialog.[hc]: added gxk_dialog_set_sizes().

	        * beast-gtk/gxk/gxkutils.[hc]: removed gxk_notebook_add_page() in favour
	        of gxk_notebook_append(), fixed callers.
	        gxk_widget_proxy_requisition(): added x/y scale arguments.
	        gxk_scrolled_window_create(): new convenience function.
	        gxk_scrolled_window_unspare_space():
	        gxk_scrolled_window_spare_space(): save extra space allocated by gtk+.
	        gxk_signal_handler_exists(): figure whether a certain signal callback
	        is connected.
	        gxk_signal_handler_pending(): check for unblocked handlers only.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added GxkScrolledWindow which is
	        a GtkScrolledWindow with ::spare-space property to call
	        gxk_scrolled_window_spare_space() through the property interface,
	        and reduced scrollbar spacing in the class structure.

	        * beast-gtk/gxk/gxkradget.c: fixed up comparison logic in mf_floatcmp()
	        for argument lists > 2. added functions: min, max, sum, avg.

	        * beast-gtk/dialogs/radgets-beast.xml: fixed height/paned screwup of
	        PianoRoll-vpaned. added event boxes around children, to limit GUI
	        artefacts when shrinking.

	        * beast-gtk/dialogs/radgets-standard.xml: support ::window-placement
	        for scrolled-window. fixed function calls in paned properties.
	        put toolbars into scrolled windows, to handle too shrunk dialogs.

	svn path=/trunk/; revision=2515

2004-09-12  Tim Janik 	# 0c63172a20259440f1e263bb5a68dd814718ee0d

	added trigger input channel.

	Sun Sep 12 03:47:11 2004  Tim Janik  <timj@gtk.org>

	        * davbassfilter.idl:
	        * davbassfilter.cc: added trigger input channel.

	svn path=/trunk/; revision=2514

2004-09-11  Tim Janik 	# fe190a7a203903f062d8ce01b308c2cb2da8b2b9

	don't reset coefficients in reset(). slight renames, removed temporary

	Sat Sep 11 14:35:11 2004  Tim Janik  <timj@gtk.org>

	        * davbassfilter.cc: don't reset coefficients in reset().
	        slight renames, removed temporary from class, fixed envelope
	        counter in process() and removed useless code.

	svn path=/trunk/; revision=2513

2004-09-09  Vincent van Adrighem 	# 99f38bbfe8ee6d20402cf5dd54b784d0671ea2e0

	Translation updated by Tino Meinen.

	2004-09-09  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2512

2004-09-08  Tim Janik 	# 50eade361c5a308bacd6e37a4039e041b2e6bcf3

	removed unused tab-width config setting.

	Thu Sep  9 01:43:52 2004  Tim Janik  <timj@gtk.org>

	        * bstrecords.idl:
	        * bstgconfig.h: removed unused tab-width config setting.

	svn path=/trunk/; revision=2511

2004-09-08  Miloslav Trmac 	# 3a8fbe7b2758852797e755555acb763a8d71d2ea

	Updated Czech translation.

	2004-09-08  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2510

2004-09-08  Adam Weinberger 	# 0fc968b5b2ccfc8a6ed4d3ffdc825dd229f402bf

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2509

2004-09-08  Tim Janik 	# d83a0c0471fab755be1d553c357246f34b460d43

	added bse_compat_rewrite_ichannel_ident() and

	Wed Sep  8 21:50:10 2004  Tim Janik  <timj@gtk.org>

	        * bsecompat.[hc]: added bse_compat_rewrite_ichannel_ident() and
	        bse_compat_rewrite_ochannel_ident() with compat code for the
	        new BseArtsCompressor.
	        bse_compat_rewrite_type_name(): take a BseStorage argument. added
	        ArtsCompressor => BseArtsCompressor and
	        ArtsStereoCompressor => BseArtsCompressor rules for versions <= 0.6.2.

	        * bsesource.[hc]:
	        resolve_osource_input(): improved error messages, call input/
	        output channel compat code.

	        * bsestorage.[hc]: provide bse_storage_item_get_compat_type() to
	        figure the original module type to be restored, prior to compat
	        code type name rewriting.

	svn path=/trunk/; revision=2508

2004-09-08  David Lodge 	# e40e0aa8eb03c46b81ab09489a64e3283d32beed

	Updated British translation.

	2004-09-08  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British translation.

	svn path=/trunk/; revision=2507

2004-09-08  Stefan Westerfeld 	# 4f755ed98b23a2304776386fa259a126889d3b3a

	Fixed a few compiler warnings.

	Wed Sep  8 17:54:09 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/bsefextract.cc tools/bsefcompare.cc: Fixed a few compiler
		warnings.

	svn path=/trunk/; revision=2506

2004-09-08  Stefan Westerfeld 	# 8ed9a8678212ffb5c8175882cffb81b01bd4b74c

	Cleanup: new documentation, volume related properties are dB now,

	Wed Sep  8 17:00:04 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.idl artscompressor.cc: Cleanup: new documentation,
		volume related properties are dB now, compressor ratio is given as x:1
		and not as fraction (more intuitive), new property auto_output allows
		adjusting the output amplification automatically. Removed stereo
		version completely in favour of an implementation which handles both,
		mono and stereo, in one module. Moved into the Bse namespace.

	svn path=/trunk/; revision=2505

2004-09-08  Adam Weinberger 	# cdf1c2468568de8508974caa52100083c992dd48

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2504

2004-09-08  Tim Janik 	# 150d2de16afb26cdd7a07a2c77b85e6fc4375f95

	small GUI improvements

	svn path=/trunk/; revision=2503

2004-09-08  Tim Janik 	# 153e35a805bd980bda493ab3c8cd72b6c4f6c77c

	changed TEMPLATE_ERROR::invalid_type() and

	Wed Sep  8 16:52:32 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxutils.h: changed TEMPLATE_ERROR::invalid_type() and
	        TEMPLATE_ERROR::invalid_argument_type() to throw an error upon
	        instantiation and not parsing with g++-3.4.

	svn path=/trunk/; revision=2501

2004-09-08  Tim Janik 	# edd8687ba1f74569dc9346ee7f98999fb6fbea82

	added missing prototype

	svn path=/trunk/; revision=2500

2004-09-08  Tim Janik 	# 9af11b5ffdebcb9ea113a0084f7f2122d46517d0

	use g_intern_printf() to reformat i18n strings which contain

	Wed Sep  8 15:38:01 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: use g_intern_printf() to reformat i18n strings which
	        contain G_SEARCHPATH_SEPARATOR_S, so intltool can do the right thing
	        for translators.

	svn path=/trunk/; revision=2499

2004-09-08  Tim Janik 	# a9a760e3790bbbffaf137543f89aed5f536dd2f2

	added g_intern_printf() to return a static printf- formatted string for

	Wed Sep  8 15:36:41 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_intern_printf() to return a static printf-
	        formatted string for which a quark exists.

	svn path=/trunk/; revision=2498

2004-09-08  Tim Janik 	# 1949fe5cd9cf02abc868da2447cd577d48ed07fc

	added i18n markup

	svn path=/trunk/; revision=2497

2004-09-08  Tim Janik 	# c35898ba30e720fd0231398557119c5f0b3abbe3

	updates

	svn path=/trunk/; revision=2496

2004-09-08  Tim Janik 	# 9dc8accbe0e33369ae51a845c1486adafa37c960

	minor fixup

	svn path=/trunk/; revision=2495

2004-09-08  Tim Janik 	# 327a3e4473b46bd36d89dcbd20493a3316c2d82f

	distcheck fix

	svn path=/trunk/; revision=2494

2004-09-08  Tim Janik 	# f6da49931d8105bb98c14eee876f7295e5591e0b

	added esperanto (eo) to ALL_LINGUAS.

	Wed Sep  8 10:57:34 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: added esperanto (eo) to ALL_LINGUAS.

	svn path=/trunk/; revision=2493

2004-09-08  Tim Janik 	# d8d9c01d4f150d142e2fa0f33f9141332b059c69

	added esperanto translation by Artem Popov <tfwo@mail.ru>.

	Wed Sep  8 10:55:17 2004  Tim Janik  <timj@gtk.org>

	        * eo.po: added esperanto translation by Artem Popov <tfwo@mail.ru>.

	svn path=/trunk/; revision=2492

2004-09-08  Tim Janik 	# 8db4ff1d512a380857b5bdfb294fd4ce54d6804d

	tooltip updates.

	Wed Sep  8 09:02:59 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusmixer.c: tooltip updates.

	        * beast-gtk/bstsupershell.c: use gxk_notebook_change_tabulator() and
	        gxk_notebook_create_tabulator(). added icons to notebook tabs.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_notebook_create_tabulator()
	        and gxk_notebook_change_tabulator().

	        * beast-gtk/gxk/splinetest.c: more tests.

	        * beast-gtk/icons/bus-add.png:
	        * beast-gtk/icons/bus-add.xcf:
	        * beast-gtk/icons/bus.png:
	        * beast-gtk/icons/mesh.png:
	        * beast-gtk/icons/mesh.xcf: added new icons from Artem Popov.

	svn path=/trunk/; revision=2491

2004-09-07  Vincent van Adrighem 	# 356f6b1bc9c111604aa2e2fb6ae3b59cc16aa01a

	Translation updated by Tino Meinen.

	2004-09-08  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2490

2004-09-07  David Lodge 	# ebfd9490a8f4f0dca3b989ede67b90926786baa1

	Updated British English translation.

	2004-09-07  David Lodge <dave@cirt.net>

	        * en_GB.po: Updated British English translation.

	svn path=/trunk/; revision=2489

2004-09-07  Adam Weinberger 	# 89e652f8e7c01a8bd88677f3c9508aa6e9c4de46

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2488

2004-09-07  Raphael Higino 	# ee17cfe6842a64f01cdcd5bb1e9697672becaff2

	Updating pt_BR translation

	svn path=/trunk/; revision=2487

2004-09-07  Raphael Higino 	# c144096941a73c1c618b30dfb85db5b812ff8008

	Updating pt_BR translation

	svn path=/trunk/; revision=2486

2004-09-06  Tim Janik 	# 7d32be6ca105e1dac763c21859f3f46d1db8b2e4

	implemented bus selection indication, based on the current focus widget.

	Tue Sep  7 01:07:31 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusmixer.[hc]: implemented bus selection indication,
	        based on the current focus widget. allow deletion of the currently
	        selected bus.

	        * beast-gtk/bstbuseditor.c: grap focus on the corresponding volume
	        spinner if a volume scale is being clicked on.

	        * beast-gtk/dialogs/radgets-beast.xml: padding fixups. provide an event-
	        box with altered background color as canvas widget for bus-mixer.

	        * beast-gtk/gxk/gxkmenubutton.c: implement combo-box focus drawing
	        via a signal handler, got rid of using GxkFocusFrame.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: removed focus-frame, this can be
	        implemented through a simple signal handler.

	        * gxkcellrendererpopup.c: fixup frame colors after focus-out on toplevel.

	        * bstparam-searchpath.c: tooltip fixups.

	svn path=/trunk/; revision=2485

2004-09-06  Tim Janik 	# 5222122f99db47369057b344c6ccaf9d8c5e7dc6

	don't store defaults for solo, mute and sync properties.

	Tue Sep  7 01:19:24 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: don't store defaults for solo, mute and sync properties.

	        * bsesubsynth.c: throw out default values for unused proeprties.

	svn path=/trunk/; revision=2484

2004-09-06  David Lodge 	# 226b2386326d4471811232cd94cef1c5709db647

	Translation updated.

	2004-09-06  David Lodge <dave@cirt.net>

	        * en_GB.po: Translation updated.

	svn path=/trunk/; revision=2483

2004-09-06  Adam Weinberger 	# 543cd83315b8db53b19119d2943445b73ef06d12

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2482

2004-09-06  Miloslav Trmac 	# 32cf8a59cb2608b26fa472c55d2b133270772b3e

	Updated Czech translation.

	2004-09-06  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2481

2004-09-06  Tim Janik 	# 76871dc65718928aaca729d3e6394d21d20631c1

	icon updates.

	Mon Sep  6 18:42:02 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackrollctrl.c:
	        * beast-gtk/bstbusmixer.c:
	        * beast-gtk/bsttrackview.c: icon updates.

	        * beast-gtk/bstsupershell.c: provide icons in notebook tabs where available.

	        * beast-gtk/icons/mixer.png:
	        * beast-gtk/icons/mixer.xcf:
	        * beast-gtk/icons/part.xcf:
	        * beast-gtk/icons/tracker.png:
	        * beast-gtk/icons/tracker.xcf:
	        * beast-gtk/icons/tracks-add.png:
	        * beast-gtk/icons/tracks-add.xcf:
	        * beast-gtk/icons/tracks.png:
	        * beast-gtk/icons/tracks.xcf: added new icons from Artem Popov <tfwo@mail.ru>.

	        * beast-gtk/icons/part-link.png: added part-link mockup.
	        * beast-gtk/icons/part-copy.png: removed.

	svn path=/trunk/; revision=2480

2004-09-06  Tim Janik 	# 89aa571ba2c92845797a08f030b703a336c9db52

	added updates from Artem Popov <tfwo@mail.ru>.

	Mon Sep  6 17:05:08 2004  Tim Janik  <timj@gtk.org>

	        * ru.po: added updates from Artem Popov <tfwo@mail.ru>.

	svn path=/trunk/; revision=2479

2004-09-06  Adam Weinberger 	# 748cefca3f15b9885ebf4e91bc2fc0c94149fcb9

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2478

2004-09-06  Tim Janik 	# 9bdc29b9319838d5e0b5ca5a7d7e97294721abd2

	fixed pointer comparision function that caused an unsorted intermediate

	Mon Sep  6 12:35:27 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.c (sfi_ring_reorder): fixed pointer comparision
	        function that caused an unsorted intermediate structure.

	        * testsfi.c (test_sfi_ring): added one more sfi_ring_reorder() test.

	svn path=/trunk/; revision=2477

2004-09-06  Tim Janik 	# feeb1e551f5e41e1eedc92858b6adb1702fa65fa

	fixed up ::outputs editing by creating a parameter with item-sequence

	Mon Sep  6 08:57:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.c: fixed up ::outputs editing by creating
	        a parameter with item-sequence editor.

	        * beast-gtk/bstitemseqdialog.[hc]: added cleanup callback.

	        * beast-gtk/bsttrackview.c: added tree view column for track outputs.
	        removed auto-popup flag from pnet column.

	        * beast-gtk/dialogs/radgets-beast.xml: removed ::outputs mockup from
	        bus-editor, provide container for ::outputs parameter.
	        fixed volume sclae container alignment.

	        * beast-gtk/gxk/gxkcellrendererpopup.[hc]: changed text editing and
	        popup editing logic and API. draw button-alike frame around auto-popup
	        cells.

	        * beast-gtk/gxk/gxkutils.c: adapted to GxkCellRendererPopup changes.

	        * beast-gtk/gxk/gxkglobals.h: provide GxkFreeFunc().

	svn path=/trunk/; revision=2476

2004-09-06  Tim Janik 	# 9e10613d4c0450f24bf87f512aa0946b2cb9d5d8

	implemented ::outputs property. provided logic in functions that may be

	Mon Sep  6 09:13:05 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.[hc]: implemented ::outputs property. provided logic in
	        functions that may be shared with BseTrack. proxy notifies from
	        parent for master bus.

	        * bsetrack.[hc]: implemented ::outputs property based on functions
	        provided by bsebus.[hc].

	svn path=/trunk/; revision=2475

2004-09-05  Tim Janik 	# 4c4d03bbc95d5c5a39a45ae35a060787dd3bd070

	incorporated changes from Dirk Janik.

	Sun Sep  5 17:53:05 2004  Tim Janik  <timj@gtk.org>

	        * de.po: incorporated changes from Dirk Janik.

	svn path=/trunk/; revision=2474

2004-09-05  Miloslav Trmac 	# 0f3c9c7acb477f49e129dd0cfd27a712a35328da

	Updated Czech translation.

	2004-09-05  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2473

2004-09-05  Tim Janik 	# 8e28342fc9b479b770a2d51ddce82d68d50e495e

	updates

	svn path=/trunk/; revision=2472

2004-09-05  Tim Janik 	# ea7c65c0f9365a59a4b8305c6f12232b017d102e

	comment updates.

	Sun Sep  5 16:39:41 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: comment updates.

	        * beast-gtk/icons/ladspa.xcf: new icon submitted by
	        Artem Popov <tfwo@mail.ru>.

	        * beast-gtk/icons/ladspa.png: updated from new ladspa.xcf.

	svn path=/trunk/; revision=2471

2004-09-05  Tim Janik 	# fd4103642a99da35cc0e60c8292ed9f72ab3d184

	new icons submitted by Artem Popov <tfwo@mail.ru>.

	Sun Sep  5 16:36:09 2004  Tim Janik  <timj@gtk.org>

	        * icons/compressor.png:
	        * icons/compressor.xcf:
	        * icons/compressor2.png:
	        * icons/compressor2.xcf:
	        * icons/sample+hold.png:
	        * icons/sample+hold.xcf: new icons submitted by
	        Artem Popov <tfwo@mail.ru>.

	        * artscompressor.idl: use new compressor icons.

	        * bsecontribsampleandhold.idl: use new sample+hold icon.

	svn path=/trunk/; revision=2470

2004-09-05  Tim Janik 	# 57beeab6e82bcf9651939645945fdbc7d4d7e65b

	minor fixes

	svn path=/trunk/; revision=2469

2004-09-05  Tim Janik 	# 0259041615fa72721f333cbb621f1e73dcd8dfc0

	added $Id$

	svn path=/trunk/; revision=2468

2004-09-05  Adam Weinberger 	# 451f9f99f5cfb95c2fc529e8ade29f86f2ce6052

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2467

2004-09-04  Tim Janik 	# fc30dcd46da8cf044d7f092b939b11e8b3992218

	fixed typos

	svn path=/trunk/; revision=2466

2004-09-04  Tim Janik 	# c9382139468989f2af466ecc253881cb6f23c7ea

	translation updates

	svn path=/trunk/; revision=2465

2004-09-04  Tim Janik 	# 67f78721b935adfeae0c2dd481833e61031141e8

	added missing files

	svn path=/trunk/; revision=2464

2004-09-04  Tim Janik 	# dfd9476bbad59396a340877e76321c0f06e5fa88

	distcheck fixups

	svn path=/trunk/; revision=2463

2004-09-04  Tim Janik 	# 893e3e913b6f0b9346fd8fd7637b9b065cf1fe1d

	license clarification

	svn path=/trunk/; revision=2462

2004-09-04  Tim Janik 	# d9e09a7b1aaf109055d819675afa130e18491f1e

	wording fixes. started section on input and output channels. documented

	Sat Sep  4 04:56:07 2004  Tim Janik  <timj@gtk.org>

	        * docs/plugin-devel.texi: wording fixes. started section on input and
	        output channels. documented proeprty constructors. documented property
	        oprtions. documented class options. added class icon documentation.

	        * docs/sfidl-manual.texi: wording fixups. added some proeprty
	        constructor documentation.

	        * docs/generated/Makefile.am: build plugin-devel.html.

	        * docs/site-navigation.xml: link to plugin-devel.html.

	svn path=/trunk/; revision=2461

2004-09-04  Tim Janik 	# b1302abaf9524ef4cf7a06e0dea7ea4d340f432b

	option cleanups. provide NOTE_*() macros for Note() properties.

	Sat Sep  4 04:54:34 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: option cleanups. provide NOTE_*() macros for Note()
	        properties.

	        * bsetype.h: pspec constructor cleanups and adaptions.

	        * bseinfo.c: provide octave info.

	svn path=/trunk/; revision=2460

2004-09-04  Tim Janik 	# 61d91bda8ae3787f25eaa9acbf495162f395ec32

	removed misplaced pspec option comments.

	Sat Sep  4 04:59:57 2004  Tim Janik  <timj@gtk.org>

	        * sfiparams.h: removed misplaced pspec option comments.

	        * sfidl-corecxx.cc:
	        * sfidl-corec.cc: pspec constructor fixups.

	        * sfi/sfidl-parser.h:
	        * sfi/sfidl-parser.cc: implemented ConstIdent, a constant able to hold
	        an identifier.

	svn path=/trunk/; revision=2459

2004-09-03  Raphael Higino 	# cfa483c15fc381a66e245a39c06f3bd488674c74

	Updating pt_BR translations.

	svn path=/trunk/; revision=2458

2004-09-03  Adam Weinberger 	# 8275781df60935270f3bc4d0837583b467a26480

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2457

2004-09-03  Tim Janik 	# 274bede019ce749fbfb3979c58e0a2535a55d2e3

	more documentation, especially on properties.

	Fri Sep  3 20:12:37 2004  Tim Janik  <timj@gtk.org>

	        * plugin-devel.texi: more documentation, especially on properties.

	        * sfidl-manual.texi: many fixups, rewordings and much reformatting.

	        * docs/teximacros.texi: added markup macors.

	svn path=/trunk/; revision=2456

2004-09-03  Laurent Dhima 	# 947a45f80bf166804ad8ec73f647a9d76024ed69

	Updated Albanian translation.

	2004-09-03  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2455

2004-09-03  Stefan Westerfeld 	# ad359ff7b7f3cee01a19caeb32e50859e721345a

	Added bsefextract and bsefcompare.

	svn path=/trunk/; revision=2454

2004-09-03  Tim Janik 	# a6f51c0e0211b6342a71ba4b6c5d00d6ba9e92d7

	tooltip fixups.

	Fri Sep  3 15:46:52 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: tooltip fixups.

	        * beast-gtk/dialogs/radgets-beast.xml: stock-image fixups.

	        * beast-gtk/dialogs/radgets-standard.xml: properly support stock-label=
	        and stock-image= assignments besides stock=.

	svn path=/trunk/; revision=2453

2004-09-03  Tim Janik 	# fd50e1eb4fcc4d2b31179454200e64a17a877973

	mockup fixup

	svn path=/trunk/; revision=2452

2004-09-03  Tim Janik 	# 58e5d63e89727c9d7168c4d84617cf6d2dbc62c4

	added store/restore support for ::inputs. made ::inputs a GUI-only

	Fri Sep  3 14:30:34 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.[hc]: added store/restore support for ::inputs. made
	        ::inputs a GUI-only property.
	        bse_bus_connect(): check the input object against our candidate list.
	        bse_bus_connect_unchecked(): connect without checking against candidate
	        list.

	        * bsestorage.c: process item links in the order they were parsed in.

	svn path=/trunk/; revision=2451

2004-09-03  Miloslav Trmac 	# 330aa5213014b454a9ebcb31a45f92d8910b166b

	Updated Czech translation.

	2004-09-03  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2450

2004-09-03  Stefan Westerfeld 	# 174c00855eb3e223a535d9d009c8efca0a57327f

	Added bsefextract / bsefcompare.

	Fri Sep  3 10:39:15 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tools/Makefile.am: Added bsefextract / bsefcompare.

		* tools/bsefextract.cc: Tool to extract features from a wav/ogg/mp3
		file, such as the spectrum or the end time. The feature extraction
		process allows to compare sample files that are not byte-by-byte
		equivalent, but sound similar, such as a .wav file and its
		corresponding .ogg file.

		* tools/bsefcompare.cc: Tool to compare feature files generated by
		bsefextract.

	svn path=/trunk/; revision=2449

2004-09-03  Tim Janik 	# 0bd293bfb5c4bab467f066281c9f0155fe834e51

	updates

	svn path=/trunk/; revision=2448

2004-09-03  Tim Janik 	# 50269deafffe1967e1dfb494c03730ca076e60e1

	shutup

	svn path=/trunk/; revision=2447

2004-09-03  Tim Janik 	# 0ab63badd0a3276d64a8e2e8bf3c7956da3fc59e

	added tools/.

	Fri Sep  3 03:14:35 2004  Tim Janik  <timj@gtk.org>

	        * Makefile.am: added tools/.

	        * tools/bsewavetool.[hc]: tool to create bsewave file, supporting
	        features such as ogg/vorbis encoding, head/tail soft-clipping and an
	        automatic loop finder.

	        * tools/bseloopfuncs.[hc]: six different sample loop detectors.

	        * tools/sfiutils.[hc]: various program utilities for argument
	        parsing and file list handling.

	        * configure.in: generate tools/Makefile.am.

	svn path=/trunk/; revision=2446

2004-09-03  Tim Janik 	# a19df2aa18b0e6584dd815af57e9167e5c2016f9

	fixups

	svn path=/trunk/; revision=2445

2004-09-03  Tim Janik 	# cd4b67f3524f9dc595b7bc40a9c70491fa1aef06

	remove useless wave-repo. fixed synth name.

	Fri Sep  3 03:12:49 2004  Tim Janik  <timj@gtk.org>

	        * zintern/mono-wave.bse: remove useless wave-repo. fixed synth name.

	svn path=/trunk/; revision=2444

2004-09-02  Tim Janik 	# 5246362084a863aab4aa6b98089189001e385a09

	fix mixer value resets upon size_allocations.

	Thu Sep  2 21:51:35 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdbmeter.c: fix mixer value resets upon size_allocations.
	        bst_db_scale_hook_up_param(): save GxkParam handle.
	        db_scale_size_allocate(): guard GxkParam against allocation related
	        value changes. properly updated value after allocation.

	        * beast-gtk/gxk/gxkparam-entry.c: avoid unneccessary value updates.

	        * beast-gtk/bstparam-item-seq.c: bug fixes, removed ::inputs property
	        specific left-overs.

	svn path=/trunk/; revision=2443

2004-09-02  Tim Janik 	# bb67b5727cc562fd9fad477a8c3d2015a0892c2f

	derive from BSeContextMerger. this turns BseTrack into a BseSource,

	Thu Sep  2 22:50:43 2004  Tim Janik  <timj@gtk.org>

	        * bsetrack.[hc]: derive from BSeContextMerger. this turns BseTrack
	        into a BseSource, including preparation and reset. this gets rid of
	        a bunch of special cases and state related buglets.

	        * bsesubiport.[hc]:
	        * bsesuboport.[hc]: prepare for derived objects with varying
	        numbers of input and output channels. some cleanups.

	        * bsesubsynth.[hc]: dito. move premature releasing of port
	        names to finalize.

	        * bsesource.[hc]: added bse_source_class_inherit_channels().

	        * bsesong.c: adapt to BseTrack is_a BseSource now.

	        * bsesnet.c: cleanups. report i/o port leaks at finalization
	        time, as ports may be left at bse_snet_release_children() from
	        inetrnal children.

	        * bseinstrumentoutput.c:
	        * bseinstrumentinput.c: adaptions, cleanups.

	svn path=/trunk/; revision=2442

2004-09-02  Adam Weinberger 	# b553cca8b6b2d4f353b3917ff92bf85288b5ed61

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2441

2004-09-02  Tim Janik 	# badf1828555ccc4c0faac187af6f8158ff9e76dd

	spacing fixes

	svn path=/trunk/; revision=2440

2004-09-02  Tim Janik 	# 1ef53787fec62d77a4c9537b9897c7a4c1dfd7b6

	tooltip updates

	svn path=/trunk/; revision=2439

2004-09-02  Tim Janik 	# ad6f1cf771c51d14050bc7d3c3cbf938ecdfb59f

	added ::mute, ::sync and ::solo properties.

	Thu Sep  2 05:00:14 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.c: added ::mute, ::sync and ::solo properties.

	        * beast-gtk/bstparam.c: guard pointer access. check proxy property
	        editability based on bse_item_editable_property().

	        * beast-gtk/bsttrackview.c: check property editability on popups.

	        * beast-gtk/dialogs/radgets-beast.xml: made mockup-widgets insensitive.
	        clenups for mute/sync/solo widgets in busses.

	        * beast-gtk/gxk/gxkparam.c: properly support check_writable() callback
	        of parameter binding. don't return default editors which mismatch the
	        passed in editor names for editor creation or lookups.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_parent_find_descendant().

	        * beast-gtk/gxk/gxkparam-toggle.c: added toggle-+label variant which
	        guarantees to produce a toggle button with a label. use GxkSimpleLabel
	        with auto-cutting enabled otherwise.

	        * beast-gtk/gxk/gxkparam-spinner.c: make logarithmic spinners
	        really logarithmic.

	svn path=/trunk/; revision=2438

2004-09-02  Tim Janik 	# 9054fbf1a13ee1d466d8886674a51d4b6ad1d8d6

	added ::mute, ::solo and ::sync properties. implement

	Thu Sep  2 04:14:29 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.[hc]: added ::mute, ::solo and ::sync properties.
	        implement bse_bus_editable_property() to toggle ::solo
	        editability for master bus. moved song<->master connection
	        logic here.

	        * bsebusmodule.cc: special case left/right volume factors of
	        0 (BSE_MIN_VOLUME_dB) to set constant 0 outputs.

	        * bsesong.c: support solo busses.

	        * bseitem.proc: provide bse-item-editable-property() to figure
	        whether a property is currently editable.

	        * bsesource.c: support "unprepared" option by implementing
	        source_check_pspec_editable() to check for an objects prepared
	        state, and by notifying property changes when preparing and
	        resetting objects.

	        * bseitem.c: default initialize get_candidates() to NULL.

	        * bsemidisynth.c:
	        * bsesubsynth.c:
	        * bsetrack.c:
	        * bsesong.c: added missing "unprepared" option to properties.

	        * bseobject.[hc]: implemented bse_object_editable_property() to
	        figure via a chainable class handler (check_pspec_editable)
	        and a per-class handler (editable_property) whether a property
	        is currently editable.

	svn path=/trunk/; revision=2437

2004-09-02  Tim Janik 	# 4e535d0284ac0c755f7fb86b7ffeb06076d99c65

	#Thu Sep  2 03:29:39 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.c: g_option_find_value(): match +/- option modifiers only
	        at option boundaries, allow = after option name for value assignments.

	        * sfiparams.h: more preliminary pspec option documentation.

	svn path=/trunk/; revision=2436

2004-09-01  Adam Weinberger 	# 484f4a427e41576d988dccff26b936973fb88d01

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2435

2004-09-01  Stefan Westerfeld 	# 06f6738bc1ce614ae60ff9c65b7632ba33d500da

	Don't use UNLIKELY in headers (but G_UNLIKELY), as this breaks compilation

	Wed Sep  1 14:37:24 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* gslsignal.h: Don't use UNLIKELY in headers (but G_UNLIKELY), as this
		breaks compilation for external code, as LIKELY/UNLIKELY are
		convenience macros only defined when compiling bse itself.

	svn path=/trunk/; revision=2434

2004-09-01  Tim Janik 	# 8bf67950276db75dce6c8beafdcc2e11db32a14c

	take actual text size into account when centering within allocation, since

	Wed Sep  1 14:23:47 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxksimplelabel.c (get_layout_location): take actual text
	        size into account when centering within allocation, since it might be
	        smaller than the requisition (e.g. due to auto-cutting).

	        * beast-gtk/dialogs/radgets-beast.xml: don't horizontally expand the
	        inputs-box of a bus-editor.

	        * beast-gtk/bstparam-item-seq.c: use a GxkSimpleLabel to display connections.

	svn path=/trunk/; revision=2433

2004-09-01  Tim Janik 	# 9572d68d372795fd90468c0017ae6808c556121e

	proxy changes on input objects onto notify::inputs.

	Wed Sep  1 14:25:49 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: proxy changes on input objects onto notify::inputs.

	svn path=/trunk/; revision=2432

2004-09-01  Tim Janik 	# 189ccd1284618b1c5ac4384c170c3cc190715b5e

	spacing fixups

	svn path=/trunk/; revision=2431

2004-09-01  Tim Janik 	# 17bc3b2c99454f3bdcb92634dacc7192a3cd5f03

	use new sfi_ring_reorder() API.

	Wed Sep  1 01:44:46 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c (bse_bus_set_property): use new sfi_ring_reorder() API.

	svn path=/trunk/; revision=2430

2004-09-01  Tim Janik 	# b47b67c009cb7c40424fbf3920d7753253142f53

	sfi_ring_reorder(): changed this into a ring modifying function without

	Wed Sep  1 01:45:40 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]:
	        sfi_ring_reorder(): changed this into a ring modifying function without
	        the need of a custom cmp function.
	        properly handle duplicates in the unordered list.
	        ring_reorder_lookup(): fixed off-by-one error when adjusting offset,
	        got rid of calling compare function by using pointer comparisons.

	        * testsfi.c: more sfi_ring_reorder() tests.

	svn path=/trunk/; revision=2429

2004-08-31  Tim Janik 	# 2a95e02e6fd22a25736a7ed8d79057f494600707

	added ::inputs and ::uname property handling.

	Tue Aug 31 23:58:56 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.[hc]: added ::inputs and ::uname property
	        handling.

	        * beast-gtk/bstparam-item-seq.c: new parameter editor for BseitemSeq.

	        * beast-gtk/dialogs/radgets-beast.xml: removed mock-up widgets for
	        bus name and bus inputs from bus-editor.

	        * beast-gtk/bstparam.c: added item-list parameter editor.

	        * beast-gtk/gxk/gxkparam.[hc]: added gxk_param_editor_debug_score().

	svn path=/trunk/; revision=2428

2004-08-31  Tim Janik 	# 8d7034429867bd0e00bd3a3e582dd3066191b114

	filename fixups

	svn path=/trunk/; revision=2427

2004-08-31  Tim Janik 	# d2fd00355c5c89f4abf284c1a9324c45b8870a64

	added BseTrack and BseBus to the ::inputs candidate type partitions. added

	Tue Aug 31 23:55:52 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: added BseTrack and BseBus to the ::inputs candidate
	        type partitions. added missing ::inputs change notifications.

	        * bsecore.idl: added TypeSeq and type partitions to PropertyCandidates.

	        * bseitem.c: default initialize type partition structure.

	svn path=/trunk/; revision=2426

2004-08-31  Tim Janik 	# d9a857d90af6e67809300ac0869f3de278928b54

	load_file(): set wave name from filename directly.

	Tue Aug 31 12:09:38 2004  Tim Janik  <timj@gtk.org>

	        * bsewaverepo.proc:
	        load_file(): set wave name from filename directly.

	        * gsldatacache.c:
	        data_cache_new_node_L(): copy over overlapping data from adjacent node
	        instead of re-reading data from data-handle (which forces a slow
	        backward seek on the handle). based on a patch by stefan westerfeld.
	        gsl_data_cache_free_olders(): unlock properly, reported by stefan.

	svn path=/trunk/; revision=2425

2004-08-31  Tim Janik 	# 4be6dfbe5f03ecc987adc30be4661bd8daaa449f

	contributor updates

	svn path=/trunk/; revision=2424

2004-08-31  Tim Janik 	# 4ee84ee633bbc2b85cd5b0afae7f2ce041866d78

	contributor updates

	svn path=/trunk/; revision=2423

2004-08-31  Tim Janik 	# 4ad6aa8b0c5d12e7fedfe2b42111e13c07b35577

	include fix

	svn path=/trunk/; revision=2422

2004-08-31  Tim Janik 	# f0304bdfb299e4da26e7d37f4b80f4fba1ee3972

	cleanups.

	Tue Aug 31 09:37:02 2004  Tim Janik  <timj@gtk.org>

	        * bsesource.*:
	        * bsecxxmodule.*: cleanups.

	svn path=/trunk/; revision=2421

2004-08-31  Stefan Westerfeld 	# a6675904d5ee01b30fcba8fa34b4c7c21cb46ccd

	C++ified the noise module from bsenoise.[hc].

	Sun Jul 18 21:54:09 2004  Stefan Westerfeld  <stefan@space.twc.de>

	        * bsenoise.cc bsenoise.idl: C++ified the noise module from bsenoise.[hc].

	        * bsenoise.[hc]: Obsolete, removed.

	svn path=/trunk/; revision=2420

2004-08-31  Tim Janik 	# a0a5e424a7b6159e93e53d5a8089a89c20088f91

	applied slightly modified patch from stefan. applied const fixes to

	Tue Aug 31 08:50:26 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxeffect.*: applied slightly modified patch from stefan.
	        applied const fixes to various methods.

	Sun Jul 18 21:47:54 2004  Stefan Westerfeld  <stefan@space.twc.de>

	        * bsecxxeffect.*:
	        Added Effect::block_size(), so that effects (not their modules) can
	        obtain the block size. Provide prepare1/prepare2 and reset1/reset2
	        hooks for effects, so they can execute code before/after prepare/
	        reset.

	svn path=/trunk/; revision=2419

2004-08-31  Tim Janik 	# ef2e0c28e35a7dd04d2085a19f649f68b204540c

	added new plugin from Artem Popov. added license information and changed

	Tue Aug 31 08:11:50 2004  Tim Janik  <timj@gtk.org>

	        * bsecontribsampleandhold.idl:
	        * bsecontribsampleandhold.cc: added new plugin from Artem Popov.
	        added license information and changed namespace to Bse::Contrib.

	svn path=/trunk/; revision=2418

2004-08-31  Tim Janik 	# 7ef7a2cd40c47742bb20a34a9ab4882f20ec62b0

	disabled timed auto-activate csynth starts. simply commit the transaction

	Tue Aug 31 07:13:37 2004  Tim Janik  <timj@gtk.org>

	        * bseproject.c (bse_project_activate): disabled timed auto-activate
	        csynth starts. simply commit the transaction before the sequencer
	        is started.
	        this fixes lost notes at song start with mono-synths (BseMidiInput).

	svn path=/trunk/; revision=2417

2004-08-30  Tim Janik 	# 419726fdd9c25b1c7a7361fac257055b67626c2b

	updates

	svn path=/trunk/; revision=2416

2004-08-30  Miloslav Trmac 	# 33813846aff0697c50e21a677df72a7fec002453

	Updated Czech translation.

	2004-08-30  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2415

2004-08-30  Tim Janik 	# 3f278d78128314b10549f46b954457536fa14162

	new fixme

	svn path=/trunk/; revision=2414

2004-08-29  Tim Janik 	# 0273519950325cb558c65e73f5fc626caca0bd81

	added missing reset method, to restart envelope phase and reset

	Mon Aug 30 01:50:16 2004  Tim Janik  <timj@gtk.org>

	        * bsesimpleadsr.c (simple_adsr_reset): added missing reset method,
	        to restart envelope phase and reset trigger/gate history.

	svn path=/trunk/; revision=2413

2004-08-29  Tim Janik 	# 9c0076bdfbdd2ffee30dd40e85b8031695036ef0

	MidiChannel::adjust_note(): only queue voice-pressure, voice-sustain or

	Mon Aug 30 01:20:08 2004  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.cc:
	        MidiChannel::adjust_note(): only queue voice-pressure, voice-sustain or
	        voice-off changes on busy voice input modules.
	        check_voice_input_improvement(): perform rating according to the
	        queue_state which is maintained in the UserThread.
	        voice_switch_module_process(): use UserThread callbacks to clean up
	        disconnected state and to remove vinput modules from the frequency
	        reverse lookup table.
	        create_voice_input(): keep a pointer to the reverse lookup table per
	        vinput module, so removal frmo that table may occour from callbacks.
	        change_voice_input(): defer removal from table until the module's
	        internal state has been updated.

	        * bseengineschedule.c:
	        determine_suspension_state(): query keep-state (avoid-reset) from
	        recently updated nodes also. use determine_suspension_reset() to
	        determine whether a node wants its inputs to keep-state.
	        determine_suspension_reset(): for virtual nodes, needs_reset is
	        determined by looking at the virtual node's output node's needs_reset.

	        * bseengine.[hc]: added bse_engine_add_garbage().

	svn path=/trunk/; revision=2412

2004-08-29  Adam Weinberger 	# 4b5fb01dc6b1088968f9f007811b2cbb4d42147f

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2411

2004-08-29  Tim Janik 	# 993c9bcaec9abb6038f6f0872b618d4de400c5ea

	variable rename

	svn path=/trunk/; revision=2410

2004-08-29  Tim Janik 	# 9684450dd0b9da1c3c335d359f13f465a7280a27

	japanese updates from SATOH, Satoru <ss@gnome.gr.jp>

	svn path=/trunk/; revision=2409

2004-08-29  Tim Janik 	# 742fdf3d930c2a7e6f96d0609653699c2df2309f

	added missing change notification

	svn path=/trunk/; revision=2408

2004-08-29  Tim Janik 	# 53753296505949a26d9bfa5bd99fd178d1668e86

	made parent's BseSubSynth::snet a private property that's ignored by

	Sun Aug 29 12:49:36 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: made parent's BseSubSynth::snet a private property that's
	        ignored by storage and GUI.

	        * bsesong.c: save loop setup.

	svn path=/trunk/; revision=2407

2004-08-29  Tim Janik 	# d1dbbfa7acc1e2ce2c82fae2f822d5bfb9fe183a

	added missing files

	svn path=/trunk/; revision=2406

2004-08-29  Tim Janik 	# f30223cbe770bc4377fc7602c4aaf07fee06c373

	guard against NULL return values from bse_item_get_property_candidates().

	Sun Aug 29 04:18:43 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-proxy.c: guard against NULL return values from
	        bse_item_get_property_candidates().

	        * beast-gtk/dialogs/radgets-beast.xml: allow the pattern editor
	        to grab focus.

	svn path=/trunk/; revision=2405

2004-08-29  Tim Janik 	# c552fd163b4af22036a31b81aec382b3582979b4

	ensure the summation module gets build.

	Sun Aug 29 04:19:57 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c (bse_bus_get_stack): ensure the summation module gets build.

	svn path=/trunk/; revision=2404

2004-08-29  Tim Janik 	# b5244b4d39ac0a91a11fdf279b6cae961ad01a3e

	in case the comport got disconnected, don't free values not belonging to

	Sun Aug 29 04:14:19 2004  Tim Janik  <timj@gtk.org>

	        * sficomport.c (sfi_com_port_send_bulk): in case the comport got
	        disconnected, don't free values not belonging to the port.

	        * sfimemory.c: disabled block-allocator, use malloc/free instead. there's
	        no platform currently where we have performance problems with malloc/free.

	        * sfiserial.[hc]: added sfi_value_store_stderr() to allow easy debugging
	        of marshalled value contents.

	svn path=/trunk/; revision=2403

2004-08-28  Tim Janik 	# 3768f5b8bf214d0d6e587ac33b859e83da9bcb61

	fixups, fixups...

	svn path=/trunk/; revision=2402

2004-08-28  Tim Janik 	# b1899ab9300824cefab9a54370ea3c3bf8eaeec6

	don't create busses while prepared.

	Sat Aug 28 23:12:03 2004  Tim Janik  <timj@gtk.org>

	        * bsesong.proc: don't create busses while prepared.

	svn path=/trunk/; revision=2401

2004-08-28  Adam Weinberger 	# eaee133ea78f6afa4e8b73ed06c75821b7e04c6f

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2400

2004-08-28  Tim Janik 	# b2f71d40f316e6bce1ff09092460028a2c4895ab

	version 6.2.3rc1. added ja.po to ALL_LINGUAS.

	Sat Aug 28 21:56:44 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: version 6.2.3rc1.
	        added ja.po to ALL_LINGUAS.

	        * docs/site-development.texi: added link for japanese translation.

	svn path=/trunk/; revision=2399

2004-08-28  Tim Janik 	# 05938ab0ba7e4461c1cf9edb09c73d30bdad9e70

	added japanese translation from SATOH, Satoru <ss@gnome.gr.jp>.

	Sat Aug 28 22:12:12 2004  Tim Janik  <timj@gtk.org>

	        * ja.po: added japanese translation
	        from SATOH, Satoru <ss@gnome.gr.jp>.

	svn path=/trunk/; revision=2398

2004-08-28  Tim Janik 	# 8543b84db206ac44f9ee02b6f4791c0a8aed5bd7

	fixup internal reordering of input objects.

	Sat Aug 28 22:08:40 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: fixup internal reordering of input objects.

	        * bseundostack.c: caller adaption.

	svn path=/trunk/; revision=2397

2004-08-28  Tim Janik 	# 46eec45c029ec2a7f7a9c0ea5e2403ed5897cdbd

	const fixes for SfiRing. added sfi_ring_reorder() to "unsort" a ring.

	Sat Aug 28 22:14:30 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: const fixes for SfiRing.
	        added sfi_ring_reorder() to "unsort" a ring.

	        * sfifilecrawler.c: caller fixup.

	        * testsfi.c: ring reordering tests.

	svn path=/trunk/; revision=2396

2004-08-28  Tim Janik 	# 0a6e9242279bc5516f55383d0d465ba9b92e15b1

	popup an item sequence dialog if the "Inputs" button is pressed.

	Sat Aug 28 14:30:52 2004  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstbuseditor.c: popup an item sequence dialog if the
		"Inputs" button is pressed.

		* beast-gtk/bstitemseqdialog.[hc]: new widget, suitable to edit
		BseItemSeq* structures, allowes exchanging items with a list
		of candidates, and reordering the item list.

		* beast-gtk/bstparam-choice.c: patched up rating for the various
		choice editors. made the combo-box variant a focussable widget.

		* beast-gtk/bstparam-proxy.c: adapt to bse_item_get_property_candidates(),
		added support for candidate list tooltips.

		* beast-gtk/bsttracksynthdialog.c: sort the list of synthesizers.

		* beast-gtk/bsttrackview.c: adapt to bse_item_get_property_candidates().

		* beast-gtk/bsttreestores.[hc]: use an SfiRing internally to store
		a list of proxies. added a sortable flag to bst_item_seq_store_new().
		added bst_item_seq_store_add(), bst_item_seq_store_remove(),
		bst_item_seq_store_can_raise(), bst_item_seq_store_raise(),
		bst_item_seq_store_can_lower(), bst_item_seq_store_lower() and
		bst_item_seq_store_dup().

		* beast-gtk/dialogs/radgets-standard.xml:
		* beast-gtk/dialogs/radgets-beast.xml: can-focus vs. focus fixups.

		* beast-gtk/dialogs/radgets-beast.xml:
		give focus to snet-palette widgets. added item-seq-box.
		made the bus-mixer background drak as in bg[ACTIVE] (requested
		by stefan).

		* beast-gtk/dialogs/radgets-standard.xml: added support for
		prop:bg-as-active on widget-patcher. added support for GtkMisc
		properties to labels.

		* beast-gtk/gxk/gxkauxwidgets.[hc]: implemented bg-as-active property.

		* beast-gtk/gxk/gxkglobals.h:
		* beast-gtk/gxk/gxkdialog.c: spacing/padding fixups.

		* beast-gtk/gxk/gxkmenubutton.[hc]: finally fixed up focus handling,
		in all modes but combo-box, can-focus ability is handled by the button.

		* beast-gtk/gxk/gxkradget.[hc]: fixed up can-focus default, broken
		a long time ago. to preserve a widgets default setting of can-focus,
		call the newly implemented $(skip-property) func in case no setting
		is provided by the environment.

		* beast-gtk/gxk/gxksimplelabel.[hc]: change parent type of GxkSimpleLabel
		to GtkMisc and added support for x/y padding and x/y alignment.

		* beast-gtk/gxk/gxkutils.[hc]: added emission hook handler to GtkContainer
		::focus_child_set, which ensures that newly focused widgets stay within
		the visible area of a viewport in case it has such an ancestor.
		added gxk_widget_modify_bg_as_active().

	svn path=/trunk/; revision=2395

2004-08-28  Tim Janik 	# 624728cc519f6c9dface263d9e2116b255cd3ca1

	implemented ::inputs property handling.

	Sat Aug 28 14:54:39 2004  Tim Janik  <timj@gtk.org>

	        * bseutils.c (bse_item_seq_to_ring): implemented ::inputs property
	        handling.

	        * bsecore.idl: added PropertyCandidates structure.

	        * bseitem.[hc]: replaced bse_item_list_items() by
	        bse_item_get_candidates() which has additional support for an i18n
	        label and tooltip for the candidates.

	        * bseitem.proc: provide get-property-candidates() instead of list-items().

	        * bseutils.[hc]: added helper functions: bse_property_candidate_relabel(),
	        bse_item_seq_remove(), bse_item_seq_to_ring().

	        * bsesong.c:
	        * bsetrack.c:
	        * bsewaveosc.c:
	        * bsesubsynth.c:
	        * bsemidisynth.c: get_candidates() adaptions, cleanups.

	        * bsesong.c: i18n fixups.

	svn path=/trunk/; revision=2394

2004-08-28  Tim Janik 	# 7b41006abce6c7e39ede655d2964d7e2bd726f5f

	added SfiRing methods: sfi_ring_insert_before(), sfi_ring_insert(),

	Sat Aug 28 17:53:30 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: added SfiRing methods: sfi_ring_insert_before(),
	        sfi_ring_insert(), sfi_ring_position(), sfi_ring_index().

	Thu Aug 26 13:13:11 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corec.cc: use make_TYPE_MACRO() instead of makeGTypeName().
	        don't use typeArray() of CodeGeneratorCBase, that's simply type + "*".
	        roll out own pspec constructor function construct_pspec() which is
	        simpler than that of CodeGeneratorCBase. removed cruft.
	        changed base type to CodeGenerator, as there's nothing left we'd
	        use from CBase. (this also fixes SfiProxy uses instead BseItem in
	        the core binding).

	svn path=/trunk/; revision=2393

2004-08-28  Miloslav Trmac 	# b19be2abaad65ef03605d83541e03210c97a3e93

	Updated Czech translation.

	2004-08-28  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2392

2004-08-26  Adam Weinberger 	# 27cf1f77674f3b51da2b821ba793f776c89ee4a8

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2391

2004-08-25  Stefan Westerfeld 	# 7953bde34b1987f96ce4244bd2a41f73f8354c3d

	Fix memcpy in master_take_probes to copy the right amount of probe data

	Wed Aug 25 23:24:23 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseenginemaster.c: Fix memcpy in master_take_probes to copy the
		right amount of probe data (each sample is sizeof (gfloat) bytes).

	svn path=/trunk/; revision=2390

2004-08-25  Tim Janik 	# 35c5539813307902a7a284fefbbfce99144c8f2a

	extended dB range to +12.

	Wed Aug 25 18:11:38 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdbmeter.c: extended dB range to +12.

	        * beast-gtk/bstcanvassource.c: changed text color of internal
	        sources to blue.

	S

	svn path=/trunk/; revision=2389

2004-08-25  Tim Janik 	# 70931f970f59830510ecb335ad075c7dd7c61302

	added dB property type.

	Wed Aug 25 18:15:00 2004  Tim Janik  <timj@gtk.org>

	        * bsetype.h: added dB property type.

	        * bsebus.[hc]: construct effect stack csynth and add a volume
	        module into it. update the volume effect from volume properties.

	        * bsebusmodule.idl:
	        * bsebusmodule.cc: implement module functionality needed by busses.

	        * bsecontainer.c: fix base-name handling in
	        bse_container_new_child_bname() for objects with default names.

	        * bseproject.[hc: implement bse_project_create_intern_csynth().

	        * bsesong.c: trigger effect stack creation of busses after adding
	        them to songs.

	svn path=/trunk/; revision=2388

2004-08-25  Tim Janik 	# 43491dddfbb6aae1d3e9d9ab5f2811398e9a599a

	added pspec hint

	svn path=/trunk/; revision=2387

2004-08-24  Gustavo Maciel Dias Vieira 	# 8392135af16eb19a04c332a2a623fd6c45cfa66e

	Updated Brazilian Portuguese translation done by Raphael Higino

	2004-08-24  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * pt_BR.po: Updated Brazilian Portuguese translation done by
	        Raphael Higino <raphaelh@uai.com.br>.

	svn path=/trunk/; revision=2386

2004-08-23  Miloslav Trmac 	# 4e8a44c96f3624af4d136c4428d65a6788ac394c

	Updated Czech translation.

	2004-08-23  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2385

2004-08-22  Adam Weinberger 	# bb4e47ca85cefeb900f8b86e6b7a5cb527198bcd

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2384

2004-08-22  Tim Janik 	# 4671ff7a6ef7c5ab7ec2ef69a1bcc8c11b83f883

	made bus input channels private to avoid undo or disk storage of channel

	Sun Aug 22 19:26:23 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.[hc]: made bus input channels private to avoid undo or disk
	        storage of channel states. busses maintain connections on their own.
	        added ::master-output bool property to set whether a bus is the master
	        bus of a song.
	        added bse_bus_disconnect_outputs() and bse_bus_list_outputs().

	        * bseenums.[hc]: const-corrections. added i18n markup to error blurbs.
	        added BSE_ERROR_SOURCE_PRIVATE_ICHANNEL and bse_assert_ok().

	        * bsesong.[hc]: got rid of master_bus member. detect master-bus-ness
	        through signal connections. removed bse_song_get_master(), added
	        bse_song_find_master() and bse_song_connect_master().

	        * bsesong.proc: create master bus undoable.

	        * bsesource.[hc]: added bse_source_get_input(). cleaned up
	        bse_source_must_set_input(). added PRIVATE_INPUTS flag, skipped
	        channel storage/restoring for private inputs.

	svn path=/trunk/; revision=2383

2004-08-22  Tim Janik 	# 1b67fcc8ff392eb1be7eeca6b3fb3aad5ece443e

	hide the toplevel notebook while reordering its children. this greatly

	Sun Aug 22 13:46:53 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_reload_supers): hide the toplevel notebook
	        while reordering its children. this greatly reduces flicker and improves
	        reordering performance.

	        * beast-gtk/gxk/gxkradget.c (radget_widget_hierarchy_changed): make sure
	        a widget is added to a size group only once. at least Gtk+<=2.4.4 messes
	        up otherwise.

	svn path=/trunk/; revision=2382

2004-08-22  Tim Janik 	# 95535ca733e70e06740db0942c2f70c1fc8b1231

	docu fix

	svn path=/trunk/; revision=2381

2004-08-22  Tim Janik 	# 1e9f3a545e08cf113959cfeb0b7c78b568e4c5c6

	added missing files

	svn path=/trunk/; revision=2380

2004-08-22  Tim Janik 	# 35540cd7df64d2da5c35a5ddec916021c71571a2

	improved notebook page selection logic.

	Sun Aug 22 04:59:08 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: improved notebook page selection logic.

	        * beast-gtk/gxk/gxkutils.[hc]: export gxk_widget_ancestry_viewable()
	        to figure whether a widget is onscreen.

	svn path=/trunk/; revision=2379

2004-08-22  Tim Janik 	# 2ae731cb0b19e2c7e2db7d091edf0e98411fe236

	more tooltip fixups

	svn path=/trunk/; revision=2378

2004-08-22  Tim Janik 	# a79cf8158f349dcd9661527af5fc5c8905ae2b1a

	lots of tooltip additions. sort notebook tabs by object type.

	Sun Aug 22 03:37:36 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: lots of tooltip additions.
	        sort notebook tabs by object type.

	        * beast-gtk/bstbusmixer.c: keep a list of items we listen on, for
	        proper destruction.

	        * beast-gtk/bstsupershell.[hc]: create and update notebook tabs with
	        tooltips and images of songs and synths.

	        * beast-gtk/dialogs/radgets-standard.xml: wrap boxes don't have a
	        padding pack property.

	        * beast-gtk/gxk/gxkstock.[hc]: added icon size for tabulators.

	        * beast-gtk/gxk/gxkutils.[hc]: added convenience functions:
	        gxk_notebook_descendant_get_page(), gxk_notebook_descendant_get_tab()
	        and gtk_box_get_nth_child().

	        * beast-gtk/icons/*.{xcf|png}: added icons for song, wave-repo,
	        csynth and midi-synth.

	svn path=/trunk/; revision=2377

2004-08-21  Tim Janik 	# 2851c24e77c136e76eed9ff656dcdfa50429222a

	added lilypond web site to link list

	svn path=/trunk/; revision=2376

2004-08-21  Tim Janik 	# 7f39cbd9827b1aac33ed6ed45d8dbe38267842c3

	link updates

	svn path=/trunk/; revision=2375

2004-08-20  Miloslav Trmac 	# 7a1b12d57b9cd632d9fc6efa7107ee487499bbd2

	Updated Czech translation.

	2004-08-20  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2374

2004-08-20  Francisco Javier F. Serrador 	# fde4314cf687f88d7b66420d51ab63fce2e6df09

	Updated Spanish translation.

	2004-08-20  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=2373

2004-08-20  Laurent Dhima 	# 86b537db764189e61567de2f75352ac5bae6a611

	Updated Albanian translation.

	2004-08-20  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2372

2004-08-20  Tim Janik 	# 4b1fef2311dadf58015a65e79fc6de93cba64775

	drive db-beams by db probes from the bus. setup left/right volume scale,

	Fri Aug 20 18:13:41 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbuseditor.[hc]: drive db-beams by db probes from the bus.
	        setup left/right volume scale, add volume spinners.

	        * beast-gtk/bstdbmeter.[hc]: slight color adjustment. cleaned up
	        n-channels property and API of BstDBMeter. removed debugging timeout.
	        fixed dbsetup assignments in creation functions.
	        added bst_db_scale_hook_up_param() and scale adjustment handling.
	        added accessors: bst_db_meter_get_scale(), bst_db_meter_get_beam() and
	        bst_db_meter_get_labeling() to get individual channel objects.
	        (bst_db_beam_set_value): don't clamp exported db value.

	        * beast-gtk/dialogs/radgets-beast.xml: db-meter fixups. added
	        volume spinner area to bus-editor.

	        * beast-gtk/gxk/gxkparam.c: slight fixed up adjustment lookup in
	        gxk_param_get_adjustment_with_stepping() and
	        gxk_param_get_log_adjustment().

	        * beast-gtk/testgui.c: added timeout to change db-beams.
	        added more test cases to db-meter test.

	svn path=/trunk/; revision=2371

2004-08-20  Tim Janik 	# de4ee877de4efc8295a64b4d6dbb4654c850659a

	added left/right db-volume properties.

	Fri Aug 20 18:31:59 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.[hc]: added left/right db-volume properties.

	        * bseconstvalues.h: increased min/max db constants.

	        * bseenginemaster.c: fixed NULL-pointer check.

	        * bseglobals.[hc]: renamed bse_db_to_factor() and bse_db_from_factor().
	        fixed up calculated dB values (use a factor of 20 not 10 for peaks).
	        adapted callers.

	svn path=/trunk/; revision=2370

2004-08-20  Tim Janik 	# ee7ec39d1ab037c4d7bd5790981d0b4843eab45b

	don't try to free NULL pspecs.

	Fri Aug 20 18:35:57 2004  Tim Janik  <timj@gtk.org>

	        * sfigluecodec.c (decoder_proxy_get_pspec): don't try to free NULL pspecs.

	svn path=/trunk/; revision=2369

2004-08-20  Tim Janik 	# 2740b36d6a776d6bb84c09250bbd995fc4bd7185

	added bstdbmeter.[hc], build testgui.

	Fri Aug 20 11:38:22 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: added bstdbmeter.[hc], build testgui.

	        * beast-gtk/bstdbmeter.[hc]: new files, implementing:
	        BstDBSetup: a helper structure, containing the setup for a dB scale,
	        including coloring and spline approximated curvature.
	        BstDBLabeling: a new widget, able to draw dB numbers or dB scale dashes.
	        BstDBBeam: a new widget, able to display a led beam indicating dB values.
	        BstDBMeter: container widget to manage an arrangement of db-labeling,
	        db-beam and h/v-scale widgets, regarding borders, dbsetup, etc.

	        * beast-gtk/testgui.c: added db widget test.

	        * beast-gtk/dialogs/radgets-beast.xml: define db-labeling, db-beam,
	        db-meter. added db-meter to bus-editor.

	svn path=/trunk/; revision=2368

2004-08-19  Adam Weinberger 	# b0b92316f2b291ccfdd5d557ef193950f1052e61

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2367

2004-08-18  Miloslav Trmac 	# 138739857b55947d4a2ba80e0007fe702d0bfa3c

	Updated Czech translation.

	2004-08-18  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2366

2004-08-18  Laurent Dhima 	# 152819f946a3dc4ba4298905f20df90d2f5a4bd0

	Updated Albanian translation.

	2004-08-18  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2365

2004-08-18  Vincent van Adrighem 	# 218b3dcfc0e91041d99f97d27edd550aac1cb530

	Translation updated by Tino Meinen.

	2004-08-18  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2364

2004-08-17  Tim Janik 	# c89633c69a976fde0d0db07f5cb7772225c448b8

	added bus-description radget to mixer.

	Tue Aug 17 17:31:52 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusmixer.c: added bus-description radget to mixer.

	        * beast-gtk/dialogs/radgets-beast.xml: added bus-description definition.
	        bus-editor: UI beef-up.

	        * beast-gtk/dialogs/radgets-standard.xml: support normal-bg-as-base
	        property for widget-patcher. fixed up shadow-type and arrow-type of
	        arrow. added pack-type and padding properties to boxes.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: implemented normal_bg_as_base
	        property.

	        * beast-gtk/gxk/gxkutils.[hc]: code cleanups. implemented
	        gxk_widget_modify_normal_bg_as_base().

	        * beast-gtk/gxk/gxkradget.[hc]: implemented per-window size groups,
	        usable through the attributes: size:window-hgroup, size:window-vgroup
	        and size:window-hvgroup.

	svn path=/trunk/; revision=2363

2004-08-17  Tim Janik 	# f750223f40a1068dfbf701f85a25cfb7e472f37a

	prototyped ::inputs property. i18n fixups.

	Tue Aug 17 17:38:39 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c: prototyped ::inputs property. i18n fixups.

	        * bseitem.c: docu fixups.

	        * bsetrack.c: i18n fixups.

	svn path=/trunk/; revision=2362

2004-08-16  Francisco Javier F. Serrador 	# f2c7bbdebcff9c9e320bdf16a9403dc3fdb49aa4

	Updated Spanish translation

	2004-08-17  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation

	svn path=/trunk/; revision=2361

2004-08-16  Tim Janik 	# 0682ab987edc8d7e88be96520053b18082d46f6a

	implemented construct arg handling.

	Mon Aug 16 16:49:14 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkradget.[hc]:
	        implemented construct arg handling.

	        * beast-gtk/gxk/gxkradgetfactory.c:
	        * beast-gtk/gxk/gxkauxwidgets.c: adapted GxkRadgetType functions.

	svn path=/trunk/; revision=2360

2004-08-16  Tim Janik 	# 39fc66eb9b73a3fdd0dd2e0828b7cc0178c9c296

	build fixes, disable building testgui until bstdbmeter.[hc] is in CVS.

	svn path=/trunk/; revision=2359

2004-08-16  Tim Janik 	# 8a2525e14ba78806e503573feef5cad24fb90b3f

	*** empty log message ***

	svn path=/trunk/; revision=2358

2004-08-16  Tim Janik 	# d45268bd109aecfb68c697b9a7ad8951f6b16768

	alias id= to name= in radget definitions.

	Mon Aug 16 13:03:45 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkradget.c: alias id= to name= in radget definitions.

	        * beast-gtk/dialogs/radgets-beast.xml:
	        * beast-gtk/dialogs/radgets-standard.xml: s/name=/id=/.

	svn path=/trunk/; revision=2357

2004-08-16  Tim Janik 	# 73dda66f534e39f3ab217450b3d68d17a78cbc06

	new container to display mixer GUI for songs.

	Mon Aug 16 11:11:19 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusmixer.[hc]: new container to display mixer GUI
	        for songs.

	        * beast-gtk/bstbuseditor.[hc]: new widget prototype for busses of
	        the song mixer.

	        * beast-gtk/dialogs/radgets-beast.xml: got rid of redundant shadow-type
	        specifications for scrolled windows.
	        bus-editor: new widget definition, containing simple GUI mockup.
	        bus-mixer: new container definition for mixer GUI.

	        * beast-gtk/bstmain.c: provide application name.

	        * beast-gtk/bstsupershell.c: added "Mixer" notebook page to songs.

	        * beast-gtk/bstutils.c: register busmixer and buseditor as radget types.

	        * beast-gtk/testgui.c: added GUI test program.
	        used to test BstDbMeter in its first incarnation.

	svn path=/trunk/; revision=2356

2004-08-16  Tim Janik 	# 5c99a1d6b8a8af86c5c1d524b3cc8f9c3555ed92

	widget-patcher: support bg-as-base and base-as-bg properties. entry:

	Sun Aug 15 13:57:56 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-standard.xml:
	        widget-patcher: support bg-as-base and base-as-bg properties.
	        entry: support activates-default property.
	        frame: support shadow-type property.
	        viewport: support widget type, set the default shadow-type to none.
	        scrolled-window: set the default shadow-type to in.
	        gxk-scroll-text-toolbar: don't activate default widget upon
	        <Return> key press in location entry.

	svn path=/trunk/; revision=2355

2004-08-16  Tim Janik 	# aec8a7057a20a7be9b690352cdee7f1407bd62c8

	minor cleanups, more testing.

	Sun Aug 01 11:41:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/splinetest.c: minor cleanups, more testing.

	        * beast-gtk/gxk/gxkspline.[hc]: added gxk_spline_copy(), some fixups.

	        * beast-gtk/gxk/gxkradget.c: register GtkViewport as radget type.

	        * beast-gtk/gxk/gxkdialog.c: use g_get_application_name() as GUI
	        program name.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: support patching up widgets, so
	        that the base color looks like the background color or vice versa.

	svn path=/trunk/; revision=2354

2004-08-16  Tim Janik 	# af31d2e00c857d98d002d7ebc85d4876feeb6c26

	acdept any_signal as well as any-signal.

	Sun Aug 15 11:53:05 2004  Tim Janik  <timj@gtk.org>

	        * sfiglueproxy.c (sfi_glue_proxy_disconnect): acdept any_signal as
	        well as any-signal.

	svn path=/trunk/; revision=2353

2004-08-15  Duarte Loreto 	# e7ba659d2f95f966038cee4c8db765baf8feafbc

	Fixed typo on the Portuguese translation.

	2004-08-15  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Fixed typo on the Portuguese translation.

	svn path=/trunk/; revision=2352

2004-08-13  Duarte Loreto 	# f7d49f91719f6e44c058755e8ade1bdb7394161c

	Updated Portuguese translation.

	2004-08-13  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=2351

2004-08-12  Gustavo Maciel Dias Vieira 	# 9c9e1734607aa199cb4bcbf068341a30994a4bc8

	Updated Brazilian Portuguese translation done by Raphael Higino

	2004-08-12  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * pt_BR.po: Updated Brazilian Portuguese translation done by
	        Raphael Higino <raphaelh@uai.com.br>.

	svn path=/trunk/; revision=2350

2004-08-04  Adam Weinberger 	# ebc3e1d2f3996ed09974dec50931043083e9fa18

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2349

2004-08-03  Vincent van Adrighem 	# 5fa83f75cd71f5a5e1ca3f4825404f25fa123ace

	Translation updated by Tino Meinen.

	2004-08-03  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2348

2004-07-31  Tim Janik 	# 65305dbcad421c29746b2e0cacbc0761012b00a9

	allow swapping the x and y axis in output by specifying negative spline

	Sat Jul 31 10:24:27 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/splinetest.c: allow swapping the x and y axis in output
	        by specifying negative spline variants. added variant.

	        * beast-gtk/gxk/gxkspline.c (gxk_spline_new): fixed up spline allocation
	        size. made NAN checks for first and last point derivatives independant
	        to support one ended natural splines.

	svn path=/trunk/; revision=2347

2004-07-30  Tim Janik 	# 145a7a207fa01d3bbba003c5c706414a36d8af80

	docu fixups

	svn path=/trunk/; revision=2346

2004-07-30  Tim Janik 	# 3c58373ea0fe4a606443ad2f923de7dc896a4fbb

	natural and not-a-knot interpolating spline implementation with inverse

	Fri Jul 30 11:28:02 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkspline.h:
	        * beast-gtk/gxk/gxkspline.c: natural and not-a-knot interpolating spline
	        implementation with inverse lookup (abscissa finder).

	        * beast-gtk/gxk/splinetest.c: spline test porgram.

	svn path=/trunk/; revision=2345

2004-07-29  Laurent Dhima 	# b4b976276c8da51e9a036edf3839214a25948674

	Updated Albanian translation.

	2004-07-29  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2344

2004-07-28  Laurent Dhima 	# 605291a093a240274911fb97911f6843d2c15253

	Updated Albanian translation.

	2004-07-28  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2343

2004-07-26  Tim Janik 	# efb18e8f3c8d07d5e4a7297bc51d83e861d773b4

	updates2

	svn path=/trunk/; revision=2342

2004-07-26  Tim Janik 	# e2daa3656c9a5ef47a97da2dadbedcd2f51db0fa

	updates

	svn path=/trunk/; revision=2341

2004-07-25  Stefan Westerfeld 	# 4f583cb4618cfcdee4beed247b57496f66edac20

	Properly NULL initialize the module list in the constructor of struct

	Sun Jul 25 16:43:52 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidireceiver.cc: Properly NULL initialize the module list in the
		constructor of struct ControlValue.  This fixes the segfaults on AMD64
		that occur when playing the demosong (and probably others).

	svn path=/trunk/; revision=2340

2004-07-24  Tim Janik 	# b8e91eaa30789cbb2cced4c81c92d49549bf17c0

	fixed up drawing code to show time-scrolling peak values. overshoot values

	Sat Jul 24 19:53:33 2004  Tim Janik  <timj@gtk.org>

	        * bstsnifferscope.[hc]: fixed up drawing code to show time-scrolling
	        peak values. overshoot values are drawn in red.

	        * bsttrackroll.c: arrenged for more scope space, fixed left-panel layout.

	        * beast-gtk/gxk/gxkutils.[hc]: added convenience functions
	        gdk_draw_hline() and gdk_draw_vline().

	svn path=/trunk/; revision=2339

2004-07-24  Tim Janik 	# bd3fe603c6c6771f67f69552320af45ba811986a

	request all probe features. re-enabled and adapted scope drawing code.

	Sat Jul 24 08:20:32 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.c (scope_probes_notify): request all
	        probe features. re-enabled and adapted scope drawing code.

	        * library/scripts/modules2grid.scm (modules2grid):
	        * library/scripts/song-parts-operations.scm (song-parts-operation): use
	        (bse-container-list-children) since ...-list-items is gone now.

	svn path=/trunk/; revision=2338

2004-07-24  Tim Janik 	# 69ae421c3c1f0b8dc4c4a0f53daf0c133fc79223

	added signal energie to probed values. fixed up value colelction and

	Sat Jul 24 20:00:22 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.idl:
	        * bseprobe.cc: added signal energie to probed values. fixed up
	        value colelction and min/max for discarded modules.

	svn path=/trunk/; revision=2337

2004-07-24  Tim Janik 	# 8292c8727d5bacbd1686af4bf01eeb46b7262b08

	removed BseSniffer code.

	Sat Jul 24 11:40:50 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.idl:
	        * bsesniffer.cc: removed BseSniffer code.

	svn path=/trunk/; revision=2336

2004-07-24  Tim Janik 	# ccedf626f8198554a4d5981baff0b1222549b2a9

	request all probe features. re-enabled and adapted scope drawing code.

	Sat Jul 24 08:20:32 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.c (scope_probes_notify): request all
	        probe features. re-enabled and adapted scope drawing code.

	        * library/scripts/modules2grid.scm (modules2grid):
	        * library/scripts/song-parts-operations.scm (song-parts-operation): use
	        (bse-container-list-children) since ...-list-items is gone now.

	svn path=/trunk/; revision=2335

2004-07-24  Tim Janik 	# 04f59d06526574313af1ba7b0af9f2ded3cf9c05

	added n_delay and n_probes arguments to bse_job_probe_request(), so the

	Sat Jul 24 08:16:14 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.[hc]: added n_delay and n_probes arguments to
	        bse_job_probe_request(), so the user can request block sizes
	        and probe spacings.

	        * bseenginenode.h:
	        * bseenginemaster.c: implemented variable length probe blocks and
	        probe block spacings.

	        * bseprobe.cc: for now, request engine block size big probe
	        blocks, with a 3/4 spacing ratio. fixed request handling.

	svn path=/trunk/; revision=2334

2004-07-24  Tim Janik 	# dfd368a818dfcb1db4980654acd88961e4c75828

	more indentation fixes

	svn path=/trunk/; revision=2333

2004-07-24  Tim Janik 	# 8de8299dc5226f8f3a0f77bd77f618e81139f739

	fixed if_reject() and if_expect() usage.

	Sat Jul 24 05:33:58 2004  Tim Janik  <timj@gtk.org>

	        * *.[hc]*: fixed if_reject() and if_expect() usage.

	svn path=/trunk/; revision=2332

2004-07-24  Tim Janik 	# 3b75c17ad81a1665b90559452c8c2500b65e8738

	removed if_reject() and if_expect() variants. G_LIKELY() and G_UNLIKELY()

	Sat Jul 24 05:33:58 2004  Tim Janik  <timj@gtk.org>

	        * gsldefs.h: removed if_reject() and if_expect() variants.
	        G_LIKELY() and G_UNLIKELY() may be used instead. provide
	        LIKELY(), ISLIKELY() and UNLIKELY() for convenience.

	        * *.[hc]*: fixed if_reject() and if_expect() usage.

	svn path=/trunk/; revision=2331

2004-07-24  Tim Janik 	# 78f447c8dd708ece55ff667bb9000f8cbd4f274b

	indentation fixes

	svn path=/trunk/; revision=2330

2004-07-23  Tim Janik 	# 41366432fb6a8a5f9dfafa139c1b7de5f1253b4a

	globally renamed GSL Engine to BSE Engine.

	Fri Jul 23 20:05:53 2004  Tim Janik  <timj@gtk.org>

	        * *.h, *.c, *.cc: globally renamed GSL Engine to BSE Engine.

	svn path=/trunk/; revision=2329

2004-07-23  Tim Janik 	# c91d1e36efbd12ec981d49cddecfeb59952c1627

	globally renamed GSL Engine to BSE Engine.

	Fri Jul 23 20:05:53 2004  Tim Janik  <timj@gtk.org>

	        * *.h, *.c, *.cc: globally renamed GSL Engine to BSE Engine.

	svn path=/trunk/; revision=2328

2004-07-23  Tim Janik 	# 0099bf8d47dc9a68f8499292eac847f5da6a228a

	include bseengine.h.

	Fri Jul 23 19:06:46 2004  Tim Janik  <timj@gtk.org>

	        * *.c: include bseengine.h.

	svn path=/trunk/; revision=2327

2004-07-23  Tim Janik 	# 0d62e0695265b42197fb455aa5b5fcb09df4e2d8

	use bseengine*.[hc] instead of gsl*.[hc] files.

	Fri Jul 23 19:05:23 2004  Tim Janik  <timj@gtk.org>

	        * *.[hc]:
	        * Makefile.am: use bseengine*.[hc] instead of gsl*.[hc] files.

	        * gslengine.[hc]:
	        * gslopnode.h:
	        * gsloputil.[hc]:
	        * gslopmaster.[hc]:
	        * gslopschedule.[hc]: removed.

	svn path=/trunk/; revision=2326

2004-07-23  Tim Janik 	# 45f1e3c46c50848277b570eb4b0af6e322283157

	disable debugging prints

	svn path=/trunk/; revision=2325

2004-07-23  Tim Janik 	# 7fc9062b07783d3c52bddb755ca3941600d94c7b

	CVS copied from gslengine.[hc].

	Fri Jul 23 18:39:30 2004  Tim Janik  <timj@gtk.org>

	        * bseengine.h:
	        * bseengine.c: CVS copied from gslengine.[hc].

	        * bseenginenode.h: CVS copied from gslopnode.h

	        * bseenginemaster.h:
	        * bseenginemaster.c: CVS copied from gslmaster.[hc].

	        * bseengineschedule.h:
	        * bseengineschedule.c: CVS copied from gslopschedule.[hc].

	        * bseengineutils.c:
	        * bseengineutils.h: CVS copied from gsloputil.[hc].

	svn path=/trunk/; revision=2324

2004-07-23  Tim Janik 	# 483f841c10a0d8b3f873b86b4f2e141b0ca8ddfd

	link updates.

	Fri Jul 23 14:58:49 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: link updates.

	svn path=/trunk/; revision=2323

2004-07-20  Tim Janik 	# 1d2fcb620322adfb3ac51676c9ef05a342bb3d66

	document parameter ranges

	svn path=/trunk/; revision=2322

2004-07-20  Tim Janik 	# 5d5a2ef2a56f02fabb4b8c3bf999cfc61b8bb7b6

	fix color normalization

	svn path=/trunk/; revision=2321

2004-07-20  Tim Janik 	# c07f679d1c6feca8bf955983a3adc1fab0bfc9cb

	turned channel_ages into a C++ vector. fixed up handling of invalidated

	Tue Jul 20 06:33:25 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.idl:
	        * bseprobe.cc: turned channel_ages into a C++ vector. fixed up handling of
	        invalidated source handles due to asyncronous requests.

	svn path=/trunk/; revision=2320

2004-07-18  David Lodge 	# 82b066542df84375cea6507327f4af6fa4b303e3

	Updated British translation

	2004-07-18  David Lodge <dave@cirt.net>

		 * en_GB.po: Updated British translation

	svn path=/trunk/; revision=2319

2004-07-18  Tim Janik 	# 9b4240248980c6d7f9ffd226d334d95ea49bb8ca

	fix typo pointed out by Raphael Higino

	svn path=/trunk/; revision=2318

2004-07-17  Tim Janik 	# e58ee46943b18536c5c1fc0963efc89adce4a210

	fix C++ LessThanComparable implementation for sort().

	Sat Jul 17 19:03:33 2004  Tim Janik  <timj@gtk.org>

	        * bseprobe.cc: fix C++ LessThanComparable implementation for sort().

	svn path=/trunk/; revision=2317

2004-07-17  Tim Janik 	# 4f5a66ac383ad9fd2f4c7f76e700969788688042

	fix C++ LessThanComparable implementation for sort().

	Sat Jul 17 19:03:33 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.cc: fix C++ LessThanComparable implementation for sort().

	svn path=/trunk/; revision=2316

2004-07-17  Tim Janik 	# 5cc0f6194971b7f50cb903e34f3468a3adfc529e

	disabled drawing code. ported over to BseProbe API.

	Sat Jul 17 12:36:35 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.[hc]: disabled drawing code. ported
	        over to BseProbe API.

	        * beast-gtk/bsttrackroll.c: set the track-output sorce as scope target.

	svn path=/trunk/; revision=2315

2004-07-17  Tim Janik 	# 200dc9974d15b866b54763a53830ddff800e051c

	fixed track/bus argument type for bse_bus_connect() and

	Sat Jul 17 12:40:38 2004  Tim Janik  <timj@gtk.org>

	        * bse/bsebus.[hcp]*: fixed track/bus argument type for bse_bus_connect()
	        and bse_bus_disconnect().

	        * bse.idl: make bseprobe.idl public core API. bsehack.idl must be the
	        last file being included, so all idl types are defined once it's parsed.

	        * bseprobe.idl:
	        * bseprobe.cc: implemented auxillary BseSourceProbes logic for
	        BseSource. this manages generic signal probe handling for sources.
	        the code is integrated with BseSource via implementation of
	        bse_source_probes*() functions.

	        * bsesource.[hc]: introduce and call bse_source_probes*() from various
	        parts of the BseSource code.

	        * bsetrack.proc: provide get-output-source() instead of create-sniffer().

	        * gslopnode.h: record the number of output channels to be probed with
	        probe jobs, required to release job resources.

	        * gslengine.[hc]: add more docs. allocate probe blocks individually, so
	        user code can "steal" allocated blocks.

	        * gslopmaster.[hc]: fixed up sample block probing code to work on
	        virtual nodes (and return processed probe jobs from "unprocessed"
	        nodes). added minor optimization to output buffer pointer virtualisation
	        logic.

	        * gslopschedule.[ch]: added virtual nodes to debugging output of
	        schedules. properly connect even virtual node inputs, so the outputs can
	        be probed without walking virtual node input connections.

	        * gsloputil.c: properly free probe job blocks.

	svn path=/trunk/; revision=2314

2004-07-17  Tim Janik 	# aa39879e3f5791396fdd2742cd214faea679e1ac

	implement iterators for sequences and fblocks.

	Sat Jul 17 13:24:57 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: implement iterators for sequences and fblocks.

	        * sfiprimitives.[hc]: allow foreign memory regions for fblocks.

	svn path=/trunk/; revision=2313

2004-07-17  David Lodge 	# ea0e6ac94379404ff909908fad46477b129440f5

	Update British translations

	2004-07-17  David Lodge <dave@cirt.net>

		* en_GB.po: Update British translations

	svn path=/trunk/; revision=2312

2004-07-16  Gustavo Maciel Dias Vieira 	# b5ad5aef7f0e2d732bfb6b6faa6dc09c05fcefe1

	Updated Brazilian Portuguese translation done by Raphael Higino

	2004-07-16  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * pt_BR.po: Updated Brazilian Portuguese translation done by
	        Raphael Higino <raphaelh@uai.com.br>.

	svn path=/trunk/; revision=2311

2004-07-16  Gareth Owen 	# 433d3fe72c5db67f51e036f89b8b35602ab428dc

	Updated British English translation by David Lodge

	svn path=/trunk/; revision=2310

2004-07-15  Vincent van Adrighem 	# 4394e8e51abf654b6e5fd85af323414d8f5f028b

	Translation updated by Tino Meinen.

	2004-07-15  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2309

2004-07-14  Tim Janik 	# 5b6194d088262a89e53e44d526ccbf97f78f5168

	disabled any code that depended on reply jobs, this essentially breaks

	Thu Jul 15 01:15:01 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.cc:
	        * bsesniffer.idl: disabled any code that depended on reply jobs,
	        this essentially breaks sniffers.

	        * bsesource.[hc]: reordered code for brevity. added BseSourceProbes*
	        structure member (currently unused).

	        * gslopnode.h:
	        * gslengine.[hc]: removed reply jobs. added probe jobs. changed
	        all uses of GslReplyFunc as free func back to GslFreeFunc.

	        * gslopmaster.[hc]: nuked reply jobs. implemented probe job handling
	        which means returning an output block copy to the user thread after
	        each node calculation. execute module profiling code after all nodes
	        have been processed.

	        * gsloputil.[hc]: nuked reply jobs. handle probe jobs and ordinary
	        free functions. sort unscheduled nodes with probe jobs with nodes
	        which have flow jobs pending.

	svn path=/trunk/; revision=2308

2004-07-14  Miloslav Trmac 	# 431739ac4e6f8f20c5879aad11325cd0fc3ce8f6

	Updated Czech translation.

	2004-07-14  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2307

2004-07-14  Tim Janik 	# df110f3b50a5947f166d0cc8d86d39aebc898d90

	updates

	svn path=/trunk/; revision=2306

2004-07-14  Gustavo Maciel Dias Vieira 	# 84b759713d2e7049a575b890cf56f567bc7e37fb

	Updated Brazilian Portuguese translation done by Raphael Higino

	2004-07-14  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * pt_BR.po: Updated Brazilian Portuguese translation done by
	        Raphael Higino <raphaelh@uai.com.br>.

	svn path=/trunk/; revision=2305

2004-07-14  Tim Janik 	# 19c965da55f02b4dcae6c601f54a611fdcdb8189

	updates

	svn path=/trunk/; revision=2304

2004-07-14  Tim Janik 	# 18baf37cf1c320195be8c5475e25c9b464a3375f

	minor polish

	svn path=/trunk/; revision=2303

2004-07-14  Tim Janik 	# 164b0a8f2fcbe66ccc4cee7a38e94343ebf6789e

	use syscall (__NR_gettid) instead of _syscall0() which isn't present on

	Wed Jul 14 01:54:54 2004  Tim Janik  <timj@gtk.org>

	        * sfithreads.c: use syscall (__NR_gettid) instead of
	        _syscall0() which isn't present on ia64 linux. fixed
	        initial accounting values.

	svn path=/trunk/; revision=2302

2004-07-13  Tim Janik 	# 0b1dbbbc41d4e5d1fa8637ffcc13514fe58acbe4

	show thread-id if developer hints are enabled. don't show priority for

	Wed Jul 14 01:40:50 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprofiler.c: show thread-id if developer hints are
	        enabled. don't show priority for totals.

	svn path=/trunk/; revision=2301

2004-07-13  Tim Janik 	# cd0e34640c67a86fa14906e9fedfaee61d8b4caa

	added thread id to ThreadInfo.

	Wed Jul 14 01:43:05 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: added thread id to ThreadInfo.

	        * bsecore.cc (collect_thread_totals:.exec): pass on thread_id.

	svn path=/trunk/; revision=2300

2004-07-13  Tim Janik 	# 23107343f1935f73e7d2c1eb2127e97c4bc5c527

	fix according to rename

	svn path=/trunk/; revision=2299

2004-07-13  Tim Janik 	# 891daf8441a4c5f059a60321ce233485c2a03079

	s/SongBus/Bus/.

	Wed Jul 14 00:15:49 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusview.h:
	        * beast-gtk/bstbusview.c:
	        * beast-gtk/dialogs/radgets-beast.xml: s/SongBus/Bus/.

	        * beast-gtk/bstsongbusview.c:
	        * beast-gtk/bstsongbusview.h: removed in favour of bstbusview.*.

	svn path=/trunk/; revision=2298

2004-07-13  Tim Janik 	# 698cf8434b100ecf40d5485ce5040c396a608549

	removed in favour of bsebus.*.

	Wed Jul 14 00:14:29 2004  Tim Janik  <timj@gtk.org>

	        * bsesongbus.h:
	        * bsesongbus.c:
	        * bsesongbus.proc: removed in favour of bsebus.*.

	svn path=/trunk/; revision=2297

2004-07-13  Tim Janik 	# 26cd5380f8457f7b8ac72b30316614d58a0ac87d

	copied from bsesongbus.proc.

	Tue Jul 13 23:12:52 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.proc: copied from bsesongbus.proc.

	svn path=/trunk/; revision=2296

2004-07-13  Tim Janik 	# a25bd47069411e00eaf4dc25f6bffe6d65a38959

	CVS copied from beast-gtk/bstsongbusview.[hc].

	Tue Jul 13 22:59:21 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstbusview.c:
	        * beast-gtk/bstbusview.h: CVS copied from beast-gtk/bstsongbusview.[hc].

	svn path=/trunk/; revision=2295

2004-07-13  Tim Janik 	# f9827963d31eb4d96c8183c9ae624c3f99b01dfa

	CVS copied from bsesongbus.[hc]:

	Tue Jul 13 22:58:15 2004  Tim Janik  <timj@gtk.org>

	        * bsebus.c:
	        * bsebus.h: CVS copied from bsesongbus.[hc]:

	svn path=/trunk/; revision=2294

2004-07-13  Tim Janik 	# e8ab2cd2eaf573f3c6fef9f9e2289b4724f4311c

	raised the priority of the BSE context source, so handling BSE context

	Tue Jul 13 22:42:24 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): raised the priority of the BSE context
	        source, so handling BSE context events still occours prior to handling
	        of G_PRIORITY_HIGH events.

	        * beast-gtk/bstsnetrouter.[hc]: implemented link-update handling in an
	        idle handler. handling link-updates asyncronously handles cases where
	        BSE has multiple item-added signal events pending, while the core
	        is updating links and assumes all link ends to be known (which is not
	        the cases if a newly created module is still in the queue). with the
	        link-update handler running at G_PRIORITY_HIGH, it has lower priority
	        than processing of signal events.

	svn path=/trunk/; revision=2293

2004-07-13  Tim Janik 	# a067d5b8c54f88eb9d6bc4c8a4fce74b32c10686

	untabify

	svn path=/trunk/; revision=2292

2004-07-13  Tim Janik 	# 56081c6683edf538a772c594fffaf09e5868e5a3

	updates

	svn path=/trunk/; revision=2291

2004-07-13  Tim Janik 	# 11f2494a1bc7097a5356591b8838113e57612121

	refactored and rearranged code. turned the canvas link SList into a ring,

	Tue Jul 13 21:53:30 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.[hc]: refactored and rearranged
	        code. turned the canvas link SList into a ring, and simplified
	        code by using SfiRing functions.

	        * beast-gtk/bstsongbusview.c: s/SongBus/Bus/.

	        * beast-gtk/bsttrackview.c: make sure newly created tracks have
	        an output bus (master).

	        * bstutils.[hc]: introduced bst_project_restore_from_file() which does
	        some sanity fixups on top of bse_project_restore_from_file().
	        adapted callers.

	T

	svn path=/trunk/; revision=2290

2004-07-13  Tim Janik 	# 0f6b4e281304c8fc1adf85e891dd945e472e72a2

	renamed bse_container_list_items() to bse_container_list_children(), since

	Tue Jul 13 21:59:07 2004  Tim Janik  <timj@gtk.org>

	        * bsecontainer.proc:
	        * bsecontainer.[hc]: renamed bse_container_list_items() to
	        bse_container_list_children(), since there's a corresponding
	        BseItem method already. adapted callers.

	        * bsesong.proc:
	        * bsesong.[hc]: got rid of track merger object, as the master
	        bus takes care of merging track outputs now. s/SongBus/Bus/.
	        (bse_song_create_summation): funciton name fixup.
	        (ensure-output-busses): fixup procedure for GUIs.
	        (ensure-track-links): fixup procedure for GUIs, not currently
	        functional.

	        * bsesongbus.proc:
	        * bsesongbus.[hc]: s/SongBus/Bus/.
	        implemented proper connect/disconnect handling of busses and tracks.
	        can stand some optimization, so that 1:1 conenction don't use a
	        summation object (which means an extra block copy in engine modules).

	        * bsesource.[hc]: implemented bse_source_test_input_recursive() to
	        catch cycles before they are created.
	        (bse_source_set_input): catch cyclic connections and return BAD_LOOPBACK.

	        * bsetrack.[hc]: got rid of the merger arg in bse_track_add_modules().
	        (bse_track_get_output): provide ouput module.

	svn path=/trunk/; revision=2289

2004-07-12  Tim Janik 	# e9e116ce95b2ec3ee8ce0d369c773ff0ce9ba9ed

	website link updates

	svn path=/trunk/; revision=2288

2004-07-12  Miloslav Trmac 	# 1a435691655d5e28a400c160cbae3fec97b93ffe

	Updated Czech translation.

	2004-07-12  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2287

2004-07-12  Tim Janik 	# b019ac680b8fe1e263ea8ad09fcfefa3780faa75

	minor fixes

	svn path=/trunk/; revision=2286

2004-07-11  Tim Janik 	# 83824c84e279b27cf486443ee03e5266b64d6577

	added sfi_ring_from_list(), sfi_ring_from_list_and_free(),

	Sun Jul 11 23:57:10 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: added sfi_ring_from_list(),
	        sfi_ring_from_list_and_free(), sfi_ring_from_slist() and
	        sfi_ring_from_slist_and_free() ring constructors.

	svn path=/trunk/; revision=2285

2004-07-11  Tim Janik 	# e542b1618fa4c099282b5d2321830bbc666d8d2a

	adaptions to SfiRing API changes

	svn path=/trunk/; revision=2284

2004-07-11  Tim Janik 	# 3acac0cf801201ba677123a2e656e0a7023e1e8e

	added SfiCompareFunc(), sfi_compare_pointers() and a set of new ring

	Sun Jul 11 23:37:46 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]:
	        added SfiCompareFunc(), sfi_compare_pointers() and a set of
	        new ring methods:
	        sfi_ring_copy_rest(): copy a partial ring.
	        sfi_ring_uniq(): remove duplicate ring elements.
	        sfi_ring_union(): produce a union of two rings.
	        sfi_ring_intersection(): produce an intersection of two rings.
	        sfi_ring_difference(): produce a set-difference on rings.
	        sfi_ring_symmetric_difference(): produce a symmetric set-difference
	        on rings.
	        sfi_ring_includes(): test super/sub set relation.
	        sfi_ring_equals(): test ring equality.
	        sfi_ring_mismatch(): find mismatching ring elements.
	        sfi_ring_min_node():
	        sfi_ring_min():
	        sfi_ring_max_node():
	        sfi_ring_max(): find minimum/maximum in rings respectively.

	        * testsfi.c: added SfiRing implementation test.

	svn path=/trunk/; revision=2283

2004-07-11  Tim Janik 	# 8b73284b5e8c3a8084e578193cfca711465b1dc6

	support flat (direct) input object collection.

	Sun Jul 11 23:42:58 2004  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: support flat (direct) input object collection.

	        * bsesong.proc:
	        * bsesong.[hc]: added master-bus concept.

	svn path=/trunk/; revision=2282

2004-07-11  Miloslav Trmac 	# b35730ec8746f0855db84c208ef2fb085458c58e

	Updated Czech translation.

	2004-07-11  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2281

2004-07-10  Tim Janik 	# 7f9add5fc67f0d8fd96baa036605dda5148aeee4

	added missing files

	svn path=/trunk/; revision=2280

2004-07-10  Tim Janik 	# 077a555031aa5117780955e18e3f303aad6757a3

	updates

	svn path=/trunk/; revision=2279

2004-07-10  Tim Janik 	# 5e0b7e32bde1c83dc3b403b6597b811def49a830

	added bse_container_new_child_bname() which allowes to specify a base-name

	Sat Jul 10 20:01:47 2004  Tim Janik  <timj@gtk.org>

	        * bsecontainer.[hc]: added bse_container_new_child_bname() which allowes
	        to specify a base-name for the newly created child.
	        turned bse_container_new_child() into a macro.

	        * bsesong.[hc]: added convenience function bse_song_create_merger().

	        * bsetrack.c: provide base-names when creating snets, so the
	        generated snet name numbers match the track number.

	svn path=/trunk/; revision=2278

2004-07-10  Tim Janik 	# e04b52efc7df866da3ced36392873bedec7bc25a

	updates

	svn path=/trunk/; revision=2277

2004-07-10  Tim Janik 	# 95d45cb0501476bb21886d0aa1ff6c7e9e321983

	new routing effect to summ up multiple signals.

	Sat Jul 10 18:27:53 2004  Tim Janik  <timj@gtk.org>

	        * icons/summation.xcf:
	        * icons/summation.png:
	        * bsesummation.idl:
	        * bsesummation.cc: new routing effect to summ up multiple signals.

	svn path=/trunk/; revision=2276

2004-07-10  Tim Janik 	# f77f36ec1dea06f043087aabb43af442989cdfa8

	generate *Properties structure for synthesis modules regardless of whether

	Sat Jul 10 18:23:25 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: generate *Properties structure for synthesis modules
	        regardless of whether the object has properties or not (since the module
	        API depends on the structure's presence).
	        similar for the *PropertyID numeration.

	svn path=/trunk/; revision=2275

2004-07-10  Tim Janik 	# 0cda7385d6367cf363707d0fa493c986b56c9442

	updates

	svn path=/trunk/; revision=2274

2004-07-10  Tim Janik 	# 9d12cd8a1f807f60fcb0ee600157d129f4e92856

	don't iterate over song busses which are of BseSource types and thusly

	Sat Jul 10 17:19:07 2004  Tim Janik  <timj@gtk.org>

	        * bsesong.c (bse_song_forall_items): don't iterate over song busses
	        which are of BseSource types and thusly handled by chaining to the
	        parent class handler.

	svn path=/trunk/; revision=2273

2004-07-09  Miloslav Trmac 	# e1cb92ffcde0b025c72c7a871a972965cc54cfc1

	Updated Czech translation.

	2004-07-09  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2272

2004-07-09  Tim Janik 	# bb064105fcbdec25d7de11d2357ec0f46c3d94ad

	updates

	svn path=/trunk/; revision=2271

2004-07-08  Gustavo Noronha Silva 	# 82d86bfdc19116eae7f8a2aec6d4156d7d1b1c34

	translation update by "Raphael Higino" <raphaelh@uai.com.br>

		* pt_BR.po: translation update by
		  "Raphael Higino" <raphaelh@uai.com.br>

	svn path=/trunk/; revision=2270

2004-07-08  Tim Janik 	# 7d62aec408cfc92b5fafb90a7354257a71bb9cca

	link updates.

	Thu Jul  8 12:20:40 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-links-related.texi: link updates.

	svn path=/trunk/; revision=2269

2004-07-07  Tim Janik 	# adf28abb8e038883c7d2f7b5f481e6c48830215a

	news rotation, announced 0.6.2.

	Thu Jul  8 00:57:16 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-oldnews.texi:
	        * docs/site-news.texi: news rotation, announced 0.6.2.

	svn path=/trunk/; revision=2268

2004-07-07  Tim Janik 	# f58ee227b586cd7359f958d2ca6e763d3431b16a

	released beast 0.6.2, binary 0, interface 0.

	Wed Jul  7 19:50:20 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: released beast 0.6.2, binary 0, interface 0.

	svn path=/trunk/; revision=2266

2004-07-07  Tim Janik 	# e292a548b38ba6c2f18e7416220c7d2030df1321

	slight GUI rename

	svn path=/trunk/; revision=2265

2004-07-07  Tim Janik 	# 6b6de4a3db701492b0f0e14b886a9cc344e41d69

	mor ethread renames

	svn path=/trunk/; revision=2264

2004-07-07  Tim Janik 	# f85bd2c9e35324a46f0d9817f53d284cfc0fc326

	added an entry on distortion caused by clipping unattenuated signals.

	Wed Jul  7 19:29:24 2004  Tim Janik  <timj@gtk.org>

	        * docs/faq.texi: added an entry on distortion caused by clipping
	        unattenuated signals.

	svn path=/trunk/; revision=2263

2004-07-07  Tim Janik 	# 5000153360217190cd7f03d590c5a67323ce9505

	added g_predicate_idle_add() and *full() variant, to install an idle

	Wed Jul  7 13:49:30 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_predicate_idle_add() and *full() variant, to
	        install an idle handler with condition.

	svn path=/trunk/; revision=2262

2004-07-06  Miloslav Trmac 	# 51485c8437e8bf27755411f0241d760319637229

	Updated Czech translation.

	2004-07-06  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2261

2004-07-05  Laurent Dhima 	# e2987b4f245ff171057567ab633fd890a58c952a

	Updated Albanian translation.

	2004-07-05  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Updated Albanian translation.

	svn path=/trunk/; revision=2260

2004-07-05  Tim Janik 	# 63a428feabbd77fac4390380d5ba37bc4dbf2ff1

	added song-bus view to song-shell in debugging mode.

	Mon Jul  5 08:53:07 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsupershell.c: added song-bus view to song-shell in
	        debugging mode.

	        * beast-gtk/bstsongbusview.[hc]: new widget to view song busses.

	        * beast-gtk/bstutils.c: radget-register song busses.

	        * beast-gtk/dialogs/radgets-beast.xml: added song bus widget tree.

	svn path=/trunk/; revision=2259

2004-07-05  Tim Janik 	# 578369ad2169af3457d1cc951f6ac70cf208ad03

	added support for song busses.

	Mon Jul  5 08:55:53 2004  Tim Janik  <timj@gtk.org>

	        * bsesong.[hcp]: added support for song busses.

	        * bsesongbus.[hc]: new source, intended to be used for
	        mixing song tracks.

	svn path=/trunk/; revision=2258

2004-07-05  Tim Janik 	# a0ef40c8b5f3c182fb17d0d4856df85407d700f7

	updates

	svn path=/trunk/; revision=2257

2004-07-05  Tim Janik 	# 9d0e2fc805cc4c83855040ea147383df9aadeb1a

	updates

	svn path=/trunk/; revision=2256

2004-07-05  Tim Janik 	# 191134c9c9cd81e4f998433279a7c53456045938

	more translatable files

	svn path=/trunk/; revision=2255

2004-07-04  Tim Janik 	# c0a19912d4f0160d278021dfd1d4aa1eff0c7f43

	news update

	svn path=/trunk/; revision=2254

2004-07-04  Tim Janik 	# dc87090d7cc4a22c75067df5bca13277ef51b8a0

	with gcc-3.4, finding memebers of a dependant base in template definitions

	Sun Jul  4 08:09:48 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.h: with gcc-3.4, finding memebers of a dependant base
	        in template definitions will only work with qualified names, so use
	        this->end() instead of just end() as iterator from the base.

	svn path=/trunk/; revision=2253

2004-07-04  Tim Janik 	# eafae7f1291a8bfd1c3bc7068b4f116a3a851079

	don't pass -Wmissing-prototypes to g++-3.4.

	Sun Jul  4 02:43:43 2004  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: don't pass -Wmissing-prototypes to g++-3.4.

	        * beast-gtk/gxk/gxkutils.c (widget_print_ancestry): added inactive debugging code.

	svn path=/trunk/; revision=2252

2004-07-02  Miloslav Trmac 	# c1f3c293c4790f792c5e7305699d404031e62bd0

	Updated Czech translation.

	2004-07-02  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2251

2004-07-02  Tim Janik 	# 3ffcb43d347e6ea62a7f25a901f5c416bfabb202

	added $LIBZ to $GXK_LIBS, since sooner or later we need libgxk to

	Fri Jul  2 02:24:13 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: added $LIBZ to $GXK_LIBS, since sooner or later we need
	        libgxk to explicitely depend on libz anyways, and -lz was missing when
	        linking gxktest.

	svn path=/trunk/; revision=2250

2004-07-01  Tim Janik 	# cd844e0d6c74e22c62f03889d98d7d69ac0bf462

	updates

	svn path=/trunk/; revision=2249

2004-07-01  Tim Janik 	# 5eb788a8c21f0d650d146a71d5067a57f687c468

	fixed gross disharmonies, 0.6.2 version updates.

	Fri Jul  2 01:33:00 2004  Tim Janik  <timj@gtk.org>

	        * test/velocity-test.bse: fixed gross disharmonies,
	        0.6.2 version updates.

	svn path=/trunk/; revision=2248

2004-07-01  Tim Janik 	# 776ac0a4b10ec1707bf68409323be1f6f068741c

	guard last_trigger updates in ATTACK case.

	Fri Jul  2 01:30:05 2004  Tim Janik  <timj@gtk.org>

	        * bsesimpleadsr.c (simple_adsr_process): guard last_trigger updates in
	        ATTACK case.
	        bse_simple_adsr_update_modules(): run through the decay phase as usual,
	        even if attack time amounts to 0. calculate decay time attack-level
	        relative.

	svn path=/trunk/; revision=2247

2004-07-01  Tim Janik 	# 213780032cd6eb920c4e46ddd438ce5df6617cb3

	support notebook::homogeneous

	svn path=/trunk/; revision=2246

2004-07-01  Tim Janik 	# bc4062bafd26e0d00a6b9ce385cfff16fb1c03a8

	updates

	svn path=/trunk/; revision=2245

2004-07-01  Tim Janik 	# 5bffba71a190cbb6e4410ad3fda0eba53d573303

	work around widget_class->can_activate_accel not checking a widget's

	Thu Jul  1 23:00:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c: work around widget_class->can_activate_accel
	        not checking a widget's MAPPED state by providing our own default handler
	        gxk_widget_real_can_activate_accel() (non-kosher, should be removed as
	        soon as gtk is fixed).

	svn path=/trunk/; revision=2244

2004-07-01  Estêvão Samuel Procópio 	# e17cca5a13314e1e84ce3f5c6f89da565a7ad355

	Updating Brazilian Portuguese Translation Estêvão Samuel Procópio <tevaum@cvs.gnome.org>

	svn path=/trunk/; revision=2243

2004-07-01  Tim Janik 	# 12367399fedfbba650e539cc4c15588d85931fe1

	added pattern editor skin setup. added more shading to the lighter skins.

	Thu Jul  1 21:52:59 2004  Tim Janik  <timj@gtk.org>

	        * library/skins/*.skin: added pattern editor skin setup.
	        added more shading to the lighter skins.

	svn path=/trunk/; revision=2242

2004-07-01  Tim Janik 	# 464e6fef9aa62e0669134b5728563c8d34672643

	added RowShading choice enumeration. added pattern editor skin parameters

	Thu Jul  1 20:56:23 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: added RowShading choice enumeration.
	        added pattern editor skin parameters to SkinConfig record.

	        * beast-gtk/bstpartdialog.c: added row-shading parameter widgets.

	        * beast-gtk/bstpatterncolumns.[hc]: added GdkGCs to draw_cell() method
	        to support various skins.

	        * beast-gtk/bstpatternctrl.[hc]: added row-shading parameter which
	        controls row-shading of a pattern view via bst_pattern_view_set_shading().

	        * beast-gtk/bstpatternview.[hc]: added bst_pattern_view_set_shading() to
	        shade background color of certain rows. added skin support. provide
	        skin colors to draw_cell().

	svn path=/trunk/; revision=2241

2004-07-01  Tim Janik 	# 87d76ca062f9a840d0cd888749f12851b639bcf3

	fix prgname

	svn path=/trunk/; revision=2240

2004-07-01  Tim Janik 	# aae441f5d51fa9abcb54296b54ab0b20d1b39339

	email fixup

	svn path=/trunk/; revision=2239

2004-07-01  Tim Janik 	# b20fe107bf74f549259b50c902a57a2ac402d188

	announced 0.6.2-rc2, new rotation

	svn path=/trunk/; revision=2238

2004-07-01  Tim Janik 	# cc39467983e9c87b4877af556e04fa4c62b2768c

	beast version 0.6.2-rc2, age 0, binary 0.

	Wed Jun 30 19:06:34 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: beast version 0.6.2-rc2, age 0, binary 0.

	        * beast-gtk/bstmain.c (beast_show_about_box): translator updates.

	svn path=/trunk/; revision=2236

2004-06-30  Estêvão Samuel Procópio 	# 8b659a8831b92d47c537265d6741120ad6b68297

	Updating Brazilian Portuguese Translations...

	Estêvão Samuel Procópio <tevaum@cvs.gnome.org>

	svn path=/trunk/; revision=2235

2004-06-30  Tim Janik 	# 08feebc0e2271b4c9f2e7ddb151e52fa8402f15e

	fixed typos pointed out by Raphael Higino

	svn path=/trunk/; revision=2234

2004-06-30  Tim Janik 	# 3576b88e9003873e3e41d8010340381ab983ee82

	added bst_grow_bar_set_tooltips() and default tooltips.

	Wed Jun 30 18:23:37 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgrowbar.[hc]: added bst_grow_bar_set_tooltips() and
	        default tooltips.

	svn path=/trunk/; revision=2233

2004-06-30  Gareth Owen 	# 927bae264bab37e0b859b1e1aa679b8818183e18

	Updated en_GB translations from David Lodge <dave@cirt.net>

	svn path=/trunk/; revision=2232

2004-06-28  Tim Janik 	# e2642d19761ae2cf9f8c7268f9a1b57d5e245c78

	new widgets h/v grow bars, combining a scrollbar with grow/shrink buttons

	Tue Jun 29 00:47:07 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgrowbar.[hc]: new widgets h/v grow bars, combining a
	        scrollbar with grow/shrink buttons to alter the scrollable range.

	        * beast-gtk/bstpartdialog.c: got rid of resizer adjustments, use
	        grow bars instead. adapted to radget changes, removed zoom scales.

	        * beast-gtk/bstpianoroll.c: guard ticks_to_pixels() and pixels_to_ticks()
	        against overflow.
	        piano_roll_adjustment_changed():
	        piano_roll_update_adjustments(): fixed scrolling behaviour to work
	        properly within 1e+9 and show rubberband behaviour beyond that (plus
	        hard scroll area cut-off at 1.5 * 1e+9).

	        * beast-gtk/bsttrackroll.[hc]: guard ticks_to_pixels(), coord_to_tick()
	        and pixels_to_ticks_unscrolled() against overflow.
	        bst_track_roll_set_track_callback():
	        bst_track_roll_setup(): properly update track-dependant layout.
	        bst_track_roll_queue_row_change(): renamed, updated horizontal area
	        based on last-tick info from tracks.
	        bst_track_roll_hsetup(): fixed hzoom argument handling.
	        track_roll_adjustment_changed():
	        track_roll_update_adjustments(): implemented scrolling behaviour similar
	        to BstPianoRoll scroll area handling.

	        * beast-gtk/bstpatternview.c: guard tick_to_row(), row_to_ticks(),
	        pixels_to_row_unscrolled(), row_to_pixels_unscrolled(), coord_to_row()
	        and row_to_coords() against overflow.
	        pattern_view_adjustment_changed():
	        pattern_view_update_adjustments(): fixed scrolling behaviour similar
	        to BstPianoRoll scroll area handling.

	        * beast-gtk/bsteventroll.c: guard ticks_to_pixels() and
	        pixels_to_ticks() against overflow.
	        event_roll_update_adjustments(): update coment.

	        * beast-gtk/bsttrackview.c: adapt to growbar/radget changes.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_widget_request_hclient_height()
	        and gxk_widget_request_vclient_width() to let widget size requests
	        correspond to opposite dimensions in other widget size requests (request
	        width of one widget for another widgets height, and vice versa).

	        * beast-gtk/bstutils.c: define grow bars as radget types.

	        * beast-gtk/dialogs/radgets-beast.xml: turned scrollbars and scroll
	        area scale widgets of track roll, event/piano roll and pattern editor
	        into grow bars.

	svn path=/trunk/; revision=2231

2004-06-28  Tim Janik 	# 46ae8ce85fae43812963502fd0be9cd37417a2f5

	flag fixes.

	Tue Jun 29 01:51:29 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.c: flag fixes.

	        * bsetrack.proc: provide get-last-tick() to calc the last tick
	        in a track.

	svn path=/trunk/; revision=2230

2004-06-28  Tim Janik 	# a4a9d5c860fdc785c6fa16c1f93c6ed852642aa8

	added G_DEFINE_DATA_TYPE() and variants to have simple type creation

	Tue Jun 29 01:52:14 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: added G_DEFINE_DATA_TYPE() and variants to have
	        simple type creation macros for types that use class_data or
	        real_class in the init functions.

	        * sfiparams.h: added SFI_PARAM_GUI_READABLE.

	svn path=/trunk/; revision=2229

2004-06-28  Laurent Dhima 	# c01165c41951e90380464f0a82846c9a1d12ead2

	Translation updated.

	2004-06-28  Laurent Dhima  <laurenti@alblinux.net>

		* sq.po: Translation updated.

	svn path=/trunk/; revision=2228

2004-06-28  Miloslav Trmac 	# 194aa2e0dfdb011b56ea9d9fb90f416df2768195

	Updated Czech translation.

	2004-06-28  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2227

2004-06-27  Tim Janik 	# ec1964db3292a14d95603dac5e4bc772e7264d7f

	todo updates

	svn path=/trunk/; revision=2226

2004-06-27  Tim Janik 	# c6e427591848b2e087d61f23a0e66d6263af0822

	wording fixup

	svn path=/trunk/; revision=2225

2004-06-22  Tim Janik 	# 4ed449a17caae206a42c52a22c0c4a187f533b03

	updates

	svn path=/trunk/; revision=2224

2004-06-22  Tim Janik 	# e86e0517a0b6af63b133cca1867e6467365d8375

	final gadget -> ragdet changes.

	Tue Jun 22 14:30:21 2004  Tim Janik  <timj@gtk.org>

	        * po/*: final gadget -> ragdet changes.

	svn path=/trunk/; revision=2223

2004-06-22  Tim Janik 	# aebeae17daa171d4c731e5e7019045e32e2c3c42

	did s/gadget/radget/g; all over the source.

	Tue Jun 22 14:18:47 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/*.[hc]:
	        * beast-gtk/*.[hc]: did s/gadget/radget/g; all over the source.

	svn path=/trunk/; revision=2222

2004-06-22  Tim Janik 	# 71ed23c6e4d37c3903e38e3bc57ec0bb60b4ba2f

	adapt macro references to contents of beast-gtk/dialogs/beast-xml-zfiles.c

	Tue Jun 22 14:06:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c: adapt macro references to contents of
	        beast-gtk/dialogs/beast-xml-zfiles.c which use RADGET instead
	        of GADGET now.

	        * beast-gtk/dialogs/gadgets-beast.xml:
	        * beast-gtk/dialogs/gadgets-standard.xml:
	        * beast-gtk/dialogs/Makefile.am: include ragdet*xml files, deleted
	        gadget*xml files.

	        * beast-gtk/gxk/gxkgadget.h:
	        * beast-gtk/gxk/gxkgadget.c:
	        * beast-gtk/gxk/gxkgadgetfactory.h:
	        * beast-gtk/gxk/gxkgadgetfactory.c:
	        * beast-gtk/gxk/Makefile.am: use *radget* sources, deleted
	        *gadget* sources.

	        * beast-gtk/gxk/gxkauxwidgets.h:
	        * beast-gtk/gxk/gxkdialog.c:
	        * beast-gtk/gxk/gxkradget.c:
	        * beast-gtk/gxk/gxkradgetfactory.c:
	        * beast-gtk/gxk/gxkradgetfactory.h:
	        * beast-gtk/gxk/gxktexttools.c:
	        * beast-gtk/gxk/gxk.h: include *radget* sources instead of
	        *gadget* source files.

	svn path=/trunk/; revision=2221

2004-06-22  Tim Janik 	# 486b196b0142ff8efef4472c40de0a1e47a4d186

	CVS copied *gadget* files to *radget* files as the first step of a bigger

	Tue Jun 22 13:51:13 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/radgets-beast.xml:
	        * beast-gtk/dialogs/radgets-standard.xml:
	        * beast-gtk/gxk/gxkradget.c:
	        * beast-gtk/gxk/gxkradget.h:
	        * beast-gtk/gxk/gxkradgetfactory.c:
	        * beast-gtk/gxk/gxkradgetfactory.h: CVS copied *gadget* files to
	        *radget* files as the first step of a bigger rename.

	svn path=/trunk/; revision=2220

2004-06-21  Gustavo Noronha Silva 	# 2c5c2cc41707684cc2222a7384067987f2e2be2e

	translation update by "Raphael Higino" <raphaelh@uai.com.br>

		* pt_BR.po: translation update by
		  "Raphael Higino" <raphaelh@uai.com.br>

	svn path=/trunk/; revision=2219

2004-06-21  Jordi Mallach 	# 5c420cef2176fff3617d004e9cf68e5f42c78f78

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	2004-06-21  Jordi Mallach  <jordi@sindominio.net>

		* ca.po: Updated Catalan translation by
		Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=2218

2004-06-20  Gareth Owen 	# 09cdebcdb19a8cffcccd3659e1c1796909b08c21

	Updated British English translation

	svn path=/trunk/; revision=2217

2004-06-20  Tim Janik 	# 749be1dc6a458fd55f90df8473b71f30205e5f9c

	ship missing icons

	svn path=/trunk/; revision=2216

2004-06-20  Tim Janik 	# 45a0c570b4ea3619259583acdfd0ff0b0db86fa5

	fix built source dependancies

	svn path=/trunk/; revision=2215

2004-06-20  Miloslav Trmac 	# 4a9e3482e344911f40a86e5c9d7801beda9e6e6f

	Updated Czech translation.

	2004-06-20  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2214

2004-06-18  Vincent van Adrighem 	# 336dafcde937f979031f755ce61ab5784fb67579

	Translation updated by Tino Meinen.

	2004-06-18  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2213

2004-06-15  Tim Janik 	# f35ed0f7fc4ea5fc1b0b3623bf23bd7f96b31eee

	added missing files

	svn path=/trunk/; revision=2212

2004-06-14  Gustavo Maciel Dias Vieira 	# 582ca71e6caf1f4dd7aee315cc4ad3102bb75f7c

	Added pt_BR to ALL_LINGUAS.

	2004-06-14  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * configure.in: Added pt_BR to ALL_LINGUAS.

	        * docs/site-development.texi: Added pt_BR entry.

	svn path=/trunk/; revision=2211

2004-06-14  Gustavo Maciel Dias Vieira 	# 970c3236cbc95498ccc4c5e869b7a5d4c689a3cf

	Added Brazilian Portuguese translation done by Raphael Higino

	2004-06-14  Gustavo Maciel Dias Vieira  <gustavo@sagui.org>

	        * pt_BR.po: Added Brazilian Portuguese translation done by Raphael
	        Higino <raphaelh@uai.com.br>.

	svn path=/trunk/; revision=2210

2004-06-14  Miloslav Trmac 	# 85f0157a1c3250333c738b2522c346cb0cb598dd

	Updated Czech translation.

	2004-06-14  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2209

2004-06-14  Tim Janik 	# 350c2ae5d810ff76353fd9d85274ee76155dc5a4

	updates

	svn path=/trunk/; revision=2208

2004-06-14  Tim Janik 	# 109b7dca9d8f09b9edae10f3dc828e85e351ac55

	comment updates.

	Mon Jun 14 19:17:59 2004  Tim Janik  <timj@gtk.org>

	        * ru.po: comment updates.

	svn path=/trunk/; revision=2207

2004-06-14  Alexandre Prokoudine 	# d1ad5376a259daf23bdd5beffb2d00b203e706d3

	translation updates.

	Mon Jun 14 19:15:40 2004  Alexandre Prokoudine <techwriter@land.ru>

	        * ru.po: translation updates.

	svn path=/trunk/; revision=2206

2004-06-14  Alexandre Prokoudine 	# 0770f9f0924d51a5101cb44416abb2367a22225e

	translation updates.

	Mon Jun 14 17:58:35 2004  Alexandre Prokoudine <techwriter@land.ru>

	        * ru.po: translation updates.

	svn path=/trunk/; revision=2205

2004-06-14  Tim Janik 	# c13ba6ee23f68283863d41535cdff7c1e05e5590

	updates

	svn path=/trunk/; revision=2204

2004-06-12  Tim Janik 	# 51ec877e798c8a1b234e90f713b4a2ae7b82e449

	pack WAVE File entry into expandable areas.

	Sat Jun 12 19:44:01 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: pack WAVE File entry into expandable areas.

	        * beast-gtk/bstprofiler.c: update dialog upon initialization.

	        * beast-gtk/dialogs/gadgets-beast.xml: provide expandable area for
	        WAVE File entry.

	        * beast-gtk/gxk/gxkutils.c (gxk_idle_show_widget): raise the widget
	        if it's a window and already visible.

	svn path=/trunk/; revision=2203

2004-06-12  Tim Janik 	# 4cfdec9e5c9308d2c475a4e56623819005e8bb83

	provide wave_file property with a tooltip. hint towards filename.

	Sat Jun 12 19:46:42 2004  Tim Janik  <timj@gtk.org>

	        * bseserver.c (bse_server_class_init): provide wave_file property
	        with a tooltip. hint towards filename.

	svn path=/trunk/; revision=2202

2004-06-12  Tim Janik 	# 9d4dd4008d1b0189785af19bb075c0e35d6f4a51

	formatting fix

	svn path=/trunk/; revision=2201

2004-06-12  Tim Janik 	# a5dc9f31094ec8ffc0d0a5966538b54c44ddbd31

	majorly beefed up the dialog ;) show totals, priority and CPU number for

	Sat Jun 12 19:03:06 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprofiler.[hc]: majorly beefed up the dialog ;)
	        show totals, priority and CPU number for threads. use a tree view
	        to display thread info.

	        * beast-gtk/dialogs/gadgets-beast.xml: changed profiler dialog.

	        * beast-gtk/dialogs/gadgets-standard.xml: support $text for labels.

	        * adapted thread names.

	svn path=/trunk/; revision=2200

2004-06-12  Tim Janik 	# 51a9f50c9e0b671f6a9d17194f1f76179e64d562

	define back-shade widget.

	Sat Jun 12 16:23:51 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-standard.xml: define back-shade widget.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: implemented back-shade widget which
	        uses a slightly shaded background.

	        * beast-gtk/gxk/gxkgadget.c: export GxkBackShade.

	svn path=/trunk/; revision=2199

2004-06-12  Vincent van Adrighem 	# ddf4ffc93c79f855650eb50b487685de9a096f66

	Translation updated by Tino Meinen.

	2004-06-12  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2198

2004-06-11  Tim Janik 	# 9435c30f9847db0540db227cecadd88c0d7073c4

	sync to source

	svn path=/trunk/; revision=2197

2004-06-11  Tim Janik 	# ffc1cdc817bdad5024f115d50c80d8b8b89f1913

	link updates

	svn path=/trunk/; revision=2196

2004-06-11  Tim Janik 	# 64e6ebfad4cd777672e3c16d1606829842e7ed17

	fixes

	svn path=/trunk/; revision=2195

2004-06-11  Adam Weinberger 	# 372d24cd3563ed1c7a1bd52b3f6ed30bc59edd55

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2194

2004-06-11  Tim Janik 	# 7bd62377ceb0fce2d13267992f7aa11fa8af427f

	made dialog actions private. added profile view menu item. added

	Fri Jun 11 04:31:02 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: made dialog actions private.
	        added profile view menu item. added
	        bst_app_show_release_notes() to show release notes dialog.

	        * beast-gtk/bstmain.c: give GUI thread a name and adapt to
	        bstapp.h changes.

	        * beast-gtk/bstprofiler.[hc]: new dialog implementation, showing
	        CPU usage statistics.

	        * beast-gtk/dialogs/gadgets-beast.xml: added profiler dialog.

	svn path=/trunk/; revision=2193

2004-06-11  Tim Janik 	# cf9facc227e9efffc8804172f7f1efb694cf63e0

	added API to report CPU usage statistics.

	Fri Jun 11 04:35:46 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl:
	        * bsecore.cc: added API to report CPU usage statistics.

	        * bsessequencer.[hc]: export bse_ssequencer_thread handle.

	        * bsetype.h: fixed sfidl_pspec_Choice().

	        * gslengine.[hc]: renamed threads. provide gsl_engine_get_threads().

	        * gslopmaster.c: do thread accounting.

	svn path=/trunk/; revision=2192

2004-06-11  Tim Janik 	# 3a9bbc2bc2dbbef9e7aa27c852799f374bbdf759

	procedure generation fix.

	Fri Jun 11 04:40:08 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: procedure generation fix.

	        * sfithreads.[hc]: implemented thread naming and usage accounting.

	svn path=/trunk/; revision=2191

2004-06-10  Tim Janik 	# 53abaf46d1dbed064d763bd1b57574335f7573c8

	more pre-dist updates

	svn path=/trunk/; revision=2190

2004-06-10  Tim Janik 	# 533ded331643c8d08feee4253705a33727e79538

	set proper tooltips on menu items.

	Thu Jun 10 02:32:49 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-choice.c: set proper tooltips on menu items.

	        * beast-gtk/bstpatternctrl.c: handle 1/128, 1/128. and 1/128T notes.

	        * beast-gtk/bstrecords.idl: added 1/128, 1/128. and 1/128T note lengths.

	        * beast-gtk/gxk/gxkutils.[ch]: added convenience function
	        gxk_widget_set_tooltip().

	svn path=/trunk/; revision=2189

2004-06-10  Tim Janik 	# 7df10766e6f93c6eec7ee5c38868b1de34f9c14a

	changed property, provide a bool keep-menubar-image per menu item. since

	Thu Jun 10 01:58:03 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkauxwidgets.c: changed property, provide a bool
	        keep-menubar-image per menu item. since stupid Gtk+-2.4 decides to
	        change menu item image visibility behind the users back, we have
	        to get rid of images in menu items in menubars the hard way: remove
	        the widget unless keep-menubar-image is TRUE.

	        * beast-gtk/dialogs/gadgets-standard.xml: removed old setting.

	T

	svn path=/trunk/; revision=2188

2004-06-09  Tim Janik 	# 4273c8acaeb591188c67c702e9e2d2e4c05811d2

	enable tooltips on menu-items.

	Thu Jun 10 01:00:22 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-standard.xml: enable tooltips on menu-items.

	svn path=/trunk/; revision=2187

2004-06-09  Tim Janik 	# c2826e37c3901b48ac34b697d3d1b34ce92ae4f6

	pre-release updates

	svn path=/trunk/; revision=2186

2004-06-09  Tim Janik 	# 4936023b9865e178150d98baa0b4ad63925c6865

	fix full vs. whole note wording. add 1/32, 1/64, 1/128 note lengths and

	Wed Jun  9 18:36:53 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianorollctrl.c: fix full vs. whole note wording.
	        add 1/32, 1/64, 1/128 note lengths and quantization boundaries.

	        * beast-gtk/bsttrackrollctrl.c: fix full vs. whole note wording.
	        add 1/32, 1/64, 1/128 quantization boundaries.

	        * beast-gtk/icons/Makefile.am:
	        * beast-gtk/icons/note-32.png:
	        * beast-gtk/icons/note-64.png:
	        * beast-gtk/icons/note-128.png:
	        * beast-gtk/icons/qnote-32.png:
	        * beast-gtk/icons/qnote-64.png:
	        * beast-gtk/icons/qnote-128.png:
	        * beast-gtk/icons/notes.xcf:
	        added new stock icons.

	svn path=/trunk/; revision=2185

2004-06-09  Tim Janik 	# 7006251f8687f56f31a9b25b9c192aa0d661dae3

	updates

	svn path=/trunk/; revision=2184

2004-06-07  Tim Janik 	# 8cf8d7b950b83cf1f8358c287c397b88ec3d6c80

	modified wiki urls to be /wiki: relative.

	Mon Jun  7 19:21:37 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-about.texi:
	        * docs/site-contact.texi:
	        * docs/site-navigation.xml:
	        * docs/site-news.texi:
	        * docs/site-search.texi:
	        modified wiki urls to be /wiki: relative.

	svn path=/trunk/; revision=2183

2004-06-04  Tim Janik 	# 989b441a2d95244c444b81f7c5f983f325dd980e

	fix wiki link

	svn path=/trunk/; revision=2182

2004-05-31  Vincent van Adrighem 	# ba9f49e2b105f7548b59b4dcd4757ec7b64f20b1

	Translation updated by Tino Meinen.

	2004-05-31  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2181

2004-05-31  Tim Janik 	# 8b8f65c89277309bc901f6b21c939c5acc4c0ae8

	prefix $(bindir) with $(DESTDIR) to allow installations in chroot-ed

	Mon May 31 16:37:38 2004  Tim Janik  <timj@gtk.org>

	        * launchers/Makefile.am: prefix $(bindir) with $(DESTDIR) to allow
	        installations in chroot-ed environments (package building).
	        use install-exec-hook: to set suid permissions.
	        changes suggested by Sam Hocevar.

	svn path=/trunk/; revision=2180

2004-05-30  Sam Hocevar 	# cff65e64ae7081cdf610e55bdb3c27afe2de422c

	Imported Debian packaging files.

	  * Imported Debian packaging files.

	svn path=/trunk/; revision=2179

2004-05-29  Vincent van Adrighem 	# 1731a57717b5c412b63f3cd2a9a467bca0d856d1

	Translation updated by Tino Meinen.

	2004-05-29  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2178

2004-05-25  Gareth Owen 	# 6e04566195ff8b2bacc0a93f5c3eb0f448aa610a

	Updated British English translation

	svn path=/trunk/; revision=2177

2004-05-22  Alexander Winston 	# edf848342e9605d87c11a0c4a7cdf92d0a1da607

	Updated Canadian English translation.

	2004-05-22  Alexander Winston  <alexander.winston@comcast.net>

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2176

2004-05-21  Miloslav Trmac 	# a57188dcf39de78be723788ed56a07204ce698cd

	Updated Czech translation.

	2004-05-21  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2175

2004-05-20  Tim Janik 	# c4303d071edf358382b2a71b512112b04ca32d9c

	link fixes

	svn path=/trunk/; revision=2174

2004-05-20  Tim Janik 	# a64bca4a138b23a9150107c660da6526d708185f

	changed version to 0.6.2-rc1, iface 0, binary 0.

	Thu May 20 14:25:03 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: changed version to 0.6.2-rc1, iface 0, binary 0.

	svn path=/trunk/; revision=2173

2004-05-20  Tim Janik 	# 764a0e1f0f6fe90950b77a0ec68c6e1af1387fda

	added missing slashes

	svn path=/trunk/; revision=2172

2004-05-20  Tim Janik 	# 1bb9321a35f5035af0c975e73c5d88472a96bce9

	changed version to 0.6.2-rc1, iface 0, binary 0.

	Thu May 20 14:25:03 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: changed version to 0.6.2-rc1, iface 0, binary 0.

	svn path=/trunk/; revision=2171

2004-05-20  Tim Janik 	# 1fe3475c27d755bf185857f75d70ef4f9059bc86

	updates

	svn path=/trunk/; revision=2170

2004-05-20  Tim Janik 	# 1be622dce476f5483cb3a650f14112569f6996dd

	changed version to 0.6.2-rc1, iface 0, binary 0.

	Thu May 20 14:25:03 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: changed version to 0.6.2-rc1, iface 0, binary 0.

	svn path=/trunk/; revision=2169

2004-05-20  Tim Janik 	# faf5a01308654bda7f988ea69a1c371dbdeeb0a7

	save pixstream instead of pixdata parts.

	Thu May 20 14:09:39 2004  Tim Janik  <timj@gtk.org>

	        * icons/sub.c: save pixstream instead of pixdata parts.

	        * bseadder.c: construct icon from sub_pixstream instead of pixdata.

	svn path=/trunk/; revision=2168

2004-05-20  Tim Janik 	# 314566621120355e20635f8d1c01333c1e86d169

	got rid of BsePixdata.

	Thu May 20 13:36:35 2004  Tim Janik  <timj@gtk.org>

	        * bsedefs.h: got rid of BsePixdata.

	        * bseexports.h: provide means for export nodes to fill in
	        translatable strings through a callback.

	        * bseplugin.[hc]: register internationalized categories and invoke a
	        callback to retrieve type blurb/authors/license strings.

	        * mkcproc.pl:
	        * bseladspa.c:
	        * bsecxxutils.cc:
	        * bsescripthelper.c:
	        * bsecategories.[hc]: added internationalized category strings
	        to registration functions. got rid of BsePixData. fixed callers.
	        (bse_categories_register_stock_module): new function to register
	        internal modules and do the right thing wrg translation.

	        * bsecxxplugin.h: provide a callback function to fill in translatable
	        strings of export node structures, so gettext isn't invoked until
	        after bse has been initialized.

	        * bsesnooper.c:
	        * bsestandardosc.c:
	        * bsesubiport.c:
	        * bsesuboport.c:
	        * bsesubsynth.c:
	        * bseconstant.c:
	        * bsebiquadfilter.c:
	        * bseinstrumentinput.c:
	        * bseinstrumentoutput.c:
	        * bsemidicontroller.c:
	        * bsemidiinput.c:
	        * bsepcminput.c:
	        * bsepcmoutput.c:
	        * bsewaveosc.c:
	        register objects with bse_categories_register_stock_module() and
	        changed code to use generated pixstream files in icons/.

	        * bsemain.c: properly assert that the textdomain is setup (bse
	        was initialized) when translating a string.

	        * bseutils.[hc]: moved BsePixdata from public API to private helper.

	        * icons/Makefile.am: got rid of CVS hosted .c images and Makefile.icons.
	        generate C source image files from .png files directly.

	        * icons/*.c: removed all CVS hosted C sources.

	        * icons/*.png: added png files for all required C sources.

	svn path=/trunk/; revision=2167

2004-05-20  Tim Janik 	# def5441ebb04f05da4c549af5263bcbc3b68d967

	use sfi_category_concat() to fixup categories. support translated

	Thu May 20 14:11:01 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: use sfi_category_concat() to fixup categories.
	        support translated categories.

	        * sfitypes.[hc]: added helper function sfi_category_concat().

	svn path=/trunk/; revision=2166

2004-05-19  Gareth Owen 	# 11390cfd2ca1cad548a955b5a57bc0102df01cbf

	Updated British English translation

	svn path=/trunk/; revision=2165

2004-05-16  Duarte Loreto 	# 6b9c399060e445f354addc0f751674853223cc70

	Updated Portuguese translation.

	2004-05-16  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=2164

2004-05-09  Tim Janik 	# 4a262494debe53b471597671237baa9ec7060d74

	updates

	svn path=/trunk/; revision=2163

2004-05-08  Tim Janik 	# b63b9b110e88b3b19bda073488ae49ccbd34f9a7

	link list update.

	Sat May  8 10:19:01 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: link list update.

	svn path=/trunk/; revision=2162

2004-05-06  Vincent van Adrighem 	# 109cb2782bb73c82b36b6bfe32f2cafbe1f64623

	Translation updated by Tino Meinen.

	2004-05-06  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2161

2004-05-06  Miloslav Trmac 	# 238ac3d7a41976786fc97a404c123ffb8ec7e0bb

	Updated Czech translation.

	2004-05-06  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=2160

2004-05-06  Duarte Loreto 	# 63eb837cffc5d16de097faeb0f3bc011a670819b

	Updated and revised Portuguese translation.

	2004-05-06  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated and revised Portuguese translation.

	svn path=/trunk/; revision=2159

2004-05-05  Tim Janik 	# a198c83010797a27523cb6876da308673772f09d

	fixed parsing bug.

	Wed May  5 18:16:11 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_early_parse_args): fixed parsing bug.

	        * beast-gtk/bstusermessage.c (update_dialog): some dialog layout
	        tweaking for bigger error messages.

	svn path=/trunk/; revision=2158

2004-05-05  Tim Janik 	# 3625a4db1313f8605f48eaad466beaed2d897949

	fixed parsing bug.

	Wed May  5 18:17:31 2004  Tim Janik  <timj@gtk.org>

	        * bsemain.c (bse_async_parse_args): fixed parsing bug.

	        * gslcommon.c (gsl_error_from_errno): made ENODEV a
	        GSL_ERROR_NOT_FOUND error.
	        (gsl_error_select): new function to select the most descriptive
	        error in multi error scenarios.

	        * bsemididevice-oss.c (bse_midi_device_oss_open): debugging fixes.
	        use gsl_error_select() to select error messages from multiple
	        devices.

	svn path=/trunk/; revision=2157

2004-05-05  Tim Janik 	# 2724db41446faa2916eab338e633e2efd14f7ba7

	grep for new debugging statements sfi_debug() and sfi_debug_check().

	Wed May  5 15:19:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: grep for new debugging statements
	        sfi_debug() and sfi_debug_check().

	        * beast-gtk/bstmain.c: adapt to new debugging code.
	        install log message dialog handler.
	        support $BST_NO_DEBUG, $BEAST_NO_DEBUG and --no-debug.

	        * beast-gtk/bstusermessage.c: adapt to BSE message type
	        changes. provide log message handler for new debug system.

	        * beast-gtk/icons/diag.*: new diagnostics dialog icon.

	        * *.c: adapted log, error, warning and debugging messages.

	svn path=/trunk/; revision=2156

2004-05-05  Tim Janik 	# ec6a42b1352d30e4c7b5f805fcad762795b73095

	adapted log, error, warning and debugging messages.

	Wed May  5 15:27:08 2004  Tim Janik  <timj@gtk.org>

	        * *.c: adapted log, error, warning and debugging messages.

	        * bseenums.h: adapt message types to new logging system.

	        * bsemain.c: added support for $BSE_NO_DEBUG and --bse-no-debug.

	svn path=/trunk/; revision=2155

2004-05-05  Tim Janik 	# 9b472056119a075445d3123f204ce0d0df38804b

	rewrite of the logging/debugging system. debugging messages still need a

	Wed May  5 16:37:26 2004  Tim Janik  <timj@gtk.org>

	        * sfilog.[hc]: rewrite of the logging/debugging system.
	        debugging messages still need a key, diagnostics and
	        simple messages are as easy as printf() to sdterr and
	        everything else requires log context information for
	        message configuration.

	        * *.c: adapted log, error, warning and debugging messages.

	svn path=/trunk/; revision=2154

2004-05-03  Tim Janik 	# ae6c92f435af438fc5005e9608ce133ab32bf857

	set child_pid to 0 upon failure.

	Mon May  3 20:00:52 2004  Tim Janik  <timj@gtk.org>

	        * sficomwire.c (sfi_com_spawn_async): set child_pid to 0 upon failure.

	svn path=/trunk/; revision=2153

2004-05-02  Tim Janik 	# acf0c3e0a5ed77aa1675c48315403de4e015c4ca

	support --print-dir=prefix option.

	Sun May  2 19:59:39 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: support --print-dir=prefix option.

	        * data/Makefile.am: provide BST_PATH_PREFIX in config-paths.h.

	svn path=/trunk/; revision=2152

2004-05-02  Tim Janik 	# 9dc6c9bfd9363bb241d202525734111ab5f04370

	minor bug fix.

	Sun May  2 15:04:38 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdial.c: minor bug fix.

	svn path=/trunk/; revision=2151

2004-05-02  Tim Janik 	# 6dc08a571cd17c1fac9bab784754db99fde94736

	clean up debugging code, minor ops.

	Sun May  2 14:50:25 2004  Tim Janik  <timj@gtk.org>

	        * gslopmaster.c: clean up debugging code, minor ops.

	svn path=/trunk/; revision=2150

2004-04-30  Tim Janik 	# 0ed318a47f93bb37ce12de6f2194252f628440a7

	small glib-2.4.0 compat addition.

	Fri Apr 30 09:13:47 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: small glib-2.4.0 compat addition.

	svn path=/trunk/; revision=2149

2004-04-29  Tim Janik 	# d242bd247fc3ebff18cb008b06a87e10ae12008a

	intltool updates to ru.po

	svn path=/trunk/; revision=2148

2004-04-29  Tim Janik 	# a9d06ce3c76548a55ef2f2a5f7d3b93d3ae9732b

	translation updates from Alexandre Prokoudine.

	Thu Apr 29 21:36:47 2004  Tim Janik  <timj@gtk.org>

	        * ru.po: translation updates from Alexandre Prokoudine.

	svn path=/trunk/; revision=2147

2004-04-25  Tim Janik 	# 13a834cf6d4d3f98f29dc2da2072d8afe6708039

	minor preprocessor condition fix.

	Sun Apr 25 18:07:13 2004  Tim Janik  <timj@gtk.org>

	        * sfithreads.c (thread_get_tid): minor preprocessor condition fix.

	svn path=/trunk/; revision=2146

2004-04-23  Tim Janik 	# cb1b539f55b0bcb17d4b1e63d6f5aab4ab310a2f

	automated updates

	svn path=/trunk/; revision=2145

2004-04-23  Tim Janik 	# 87418207dc6dd06677d399e2f1860675b898335f

	translation updates from Alexandre Prokoudine <techwriter@land.ru>.

	Fri Apr 23 19:26:04 2004  Tim Janik  <timj@gtk.org>

	        * ru.po: translation updates from
	        Alexandre Prokoudine <techwriter@land.ru>.

	svn path=/trunk/; revision=2144

2004-04-23  Tim Janik 	# e54f761f55bcb62c6173a490efe546f6c83c5eda

	update to CVS strings

	svn path=/trunk/; revision=2143

2004-04-20  Tim Janik 	# d5840ddd9ef9272a14cc8786eddc6d457abf07b3

	updates

	svn path=/trunk/; revision=2142

2004-04-14  Yuri Syrota 	# 0a78ef2071e2fea2763c4f919295f499fa8b1736

	Added Ukrainian translation

	svn path=/trunk/; revision=2141

2004-04-14  Vincent van Adrighem 	# 12556809c46e774d6d5a5e2369c66ed2df0ab501

	Translation updated by Tino Meinen.

	2004-04-14  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2140

2004-04-13  Gareth Owen 	# e2a4918daa313e3cae23add198b92e072b2384fe

	Updated British English translation

	svn path=/trunk/; revision=2139

2004-04-12  Francisco Javier F. Serrador 	# c88824e0a67454e020d9195697bd3e81d899e8a1

	Updated Spanish translation.

	2004-04-12  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=2138

2004-04-12  Miloslav Trmac 	# 00743716f2f9dd4e5775a5ae51b8a0d1d70d2570

	Update Czech translation

	svn path=/trunk/; revision=2137

2004-04-11  Adam Weinberger 	# f1f505149007866040ca4cba15bf7e5c3e7d68c3

	Updated Canadian English translation.

		* en_CA.po: Updated Canadian English translation.

	svn path=/trunk/; revision=2136

2004-04-10  Francisco Javier F. Serrador 	# ed5ef3eba67a2975f057ab3da8cd7adbff55fd6a

	Updated Spanish translation.

	2004-04-10  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=2135

2004-04-09  Tim Janik 	# b06e05f689e1118118ea29eac995ffa74f6900ff

	allocate large structures on the heap, not the stack. based on a patch by

	Fri Apr  9 12:04:19 2004  Tim Janik  <timj@gtk.org>

	        * tests/testwavechunk.c (run_tests): allocate large structures on the
	        heap, not the stack. based on a patch by Rasmus Kaj <kaj@e.kth.se>.

	svn path=/trunk/; revision=2134

2004-04-09  Tim Janik 	# 734fa706c0ccb2feccc47fd5a699065ffbd69b83

	updates

	svn path=/trunk/; revision=2133

2004-04-09  Tim Janik 	# 5124f4fb43011483c6f9a432ef3cf660c129d290

	updates

	svn path=/trunk/; revision=2132

2004-04-09  Tim Janik 	# 7140e77e19260fd0baf65821d11f9f707fa8fe95

	work around beast relying on _gtk_window_activate_key() which isn't

	Fri Apr  9 11:48:27 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkdialog.c (call_gtk_window_activate_key): work around
	        beast relying on _gtk_window_activate_key() which isn't exported by
	        Gtk+-2.4 anymore.

	svn path=/trunk/; revision=2131

2004-04-09  Tim Janik 	# 98554776a828bf18b31ceefb40616dd4c04c9093

	link updates.

	Fri Apr  9 10:18:02 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: link updates.

	svn path=/trunk/; revision=2130

2004-04-09  Tim Janik 	# af7f903050cc1a368620a6f2014827b6ff323dc4

	added links for en_CA and en_GB. fixed link for sr@@Latn to point to sr

	Fri Apr  9 09:55:22 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-development.texi: added links for en_CA and en_GB.
	        fixed link for sr@@Latn to point to sr stats.

	svn path=/trunk/; revision=2129

2004-04-09  Tim Janik 	# 652f35a7c25bcfc59b60faae921937679f5c6280

	fix "milliseconds" wording

	svn path=/trunk/; revision=2128

2004-04-09  Tim Janik 	# d370ce513dbf260a1d9d362277437d44f738e837

	fix typo

	svn path=/trunk/; revision=2127

2004-04-09  Gareth Owen 	# 0d7143537b758bf70ce67d42d3bf8bfc76cb7c9d

	Updated British English translation

	svn path=/trunk/; revision=2126

2004-04-03  Adam Weinberger 	# 15a10f9aba7f6ab8609631d6bde1acef3a5c47b2

	Added en_CA to ALL_LINGUAS. Added Canadian English translation.

		* configure.in: Added en_CA to ALL_LINGUAS.
		* po/en_CA.po: Added Canadian English translation.

	svn path=/trunk/; revision=2125

2004-03-30  Tim Janik 	# 702d4d98379f26c9afb1ea19830425466b34d2f1

	updates

	svn path=/trunk/; revision=2124

2004-03-29  Tim Janik 	# 8abfc0392bf0c738c0f0e7f02fc11561cfc1fb09

	updates

	svn path=/trunk/; revision=2123

2004-03-27  Tim Janik 	# bdf21377a1b1c14d678174597cc507c64e82545d

	ideas about mesage handling/logging mechanism

	svn path=/trunk/; revision=2122

2004-03-27  Tim Janik 	# 34c05cee447ca40666a41b87e977298b717de415

	updates

	svn path=/trunk/; revision=2121

2004-03-27  Tim Janik 	# 0e2289fc60de7b217cba91e6bcc1430094649e22

	update SuSE version of RPMS.

	Sat Mar 27 03:34:23 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-download.texi: update SuSE version of RPMS.

	svn path=/trunk/; revision=2120

2004-03-22  Jordi Mallach 	# 1ae014c7d9994ce9165334a2f3884cb0640d16bb

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=2119

2004-03-20  Denis Lackovic 	# e8884564a1651b81f55f8cf22ffc065e9dc9dac6

	*** empty log message ***

	svn path=/trunk/; revision=2118

2004-03-19  Stefan Westerfeld 	# 12c6daec8e4f988e70c153a726f0dde2f84213b7

	Don't use optind any longer, since we also don't use getopt() any longer.

	Fri Mar 19 13:28:04 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl.cc: Don't use optind any longer, since we also don't use
		getopt() any longer. This fixes compilation on systems where optind
		is not declared in those header files sfidl.cc directly/indirectly
		includes.

	svn path=/trunk/; revision=2117

2004-03-17  Tim Janik 	# 3798fc7d057a2c6ad756c82eeaf968e57cbbf730

	updates

	svn path=/trunk/; revision=2116

2004-03-15  Vincent van Adrighem 	# 7205024a45d396d4e4064b85532d0f159236a4e0

	Translation updated by Tino Meinen.

	2004-03-15  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2115

2004-03-14  Tim Janik 	# fee9b008622e486e0ceeafdf1ef55f76f19b0134

	updates

	svn path=/trunk/; revision=2114

2004-03-14  Tim Janik 	# 3999747029c8907a3945d6bc782acedc4aa2b01b

	updates

	svn path=/trunk/; revision=2113

2004-03-10  Vincent van Adrighem 	# 3f0e557705f7e2f4efb94506762e3690abc21c56

	Translation updated by Tino Meinen.

	2004-03-10  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2112

2004-03-08  Tim Janik 	# 5815ec4da471cdc446b9d3e7705b6bfee418e5af

	updates

	svn path=/trunk/; revision=2111

2004-03-07  Vincent van Adrighem 	# d05314cd74e2b2341499cc3d3fa31e062f5af663

	Translation updated by Tino Meinen.

	2004-03-07  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=2110

2004-03-07  Miloslav Trmac 	# d293ae92b3ef34375816a9cfe46bfb8ce33f4ec3

	Update Czech translation

	svn path=/trunk/; revision=2109

2004-03-07  Tim Janik 	# 5e7facf8503127d13d68be5b60d694560df812bf

	updates

	svn path=/trunk/; revision=2108

2004-03-07  Tim Janik 	# 52c81e11346855a9935d49f80f0c497d1e8d5ada

	spelling fixes

	svn path=/trunk/; revision=2107

2004-03-07  Tim Janik 	# 2ce19698bbfa65a328ee44579063f9820152aabf

	website release announcement

	svn path=/trunk/; revision=2106

2004-03-06  Tim Janik 	# f059a87d1d1b6aeda9fd1babd3fd9b77845ecfa9

	updates

	svn path=/trunk/; revision=2105

2004-03-06  Tim Janik 	# 452e72c262a280a9f046b6f510762199d557393b

	release updates

	svn path=/trunk/; revision=2103

2004-03-06  Tim Janik 	# 9f791a14b0545628dd9ed186175bed09e735d25b

	ugly block_size workaround

	svn path=/trunk/; revision=2102

2004-03-06  Tim Janik 	# b564e0dd293966f50f619af821e17f6e396123e9

	released 0.6.1, binary age 0, interface age 0.

	Sat Mar  6 15:32:21 2004  Tim Janik  <timj@gtk.org>

	        * released 0.6.1, binary age 0, interface age 0.

	svn path=/trunk/; revision=2101

2004-03-06  Tim Janik 	# 2e3db649889c92a87a32cdcadef622af275e532f

	release updates

	svn path=/trunk/; revision=2100

2004-03-06  Tim Janik 	# 6dd888289a04fa289136d9ce312bc396f798afbb

	load fallback keytable if ~/.beast contains none.

	Sat Mar  6 13:50:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpreferences.c: load fallback keytable if ~/.beast
	        contains none.

	        * library/keys/keyrc.us: added US keymap.

	svn path=/trunk/; revision=2099

2004-03-06  Tim Janik 	# 886bacfa89982bcc3fc6521133819b50985639c5

	move piano roll toolbar onto the piano roll notebook page. provide

	Sat Mar  6 13:08:18 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: move piano roll toolbar onto the
	        piano roll notebook page. provide notebook page labels.

	svn path=/trunk/; revision=2098

2004-03-06  Tim Janik 	# 422a4a698166e1c35ab333556329111677b87d85

	updates

	svn path=/trunk/; revision=2097

2004-03-06  Tim Janik 	# 94b8afc14aef53fd9ff7d65499a671c046eb4ae0

	removed device monitor. added wave file control entry to playback

	Sat Mar  6 12:15:06 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: removed device monitor. added wave file control
	        entry to playback controls.

	        * beast-gtk/dialogs/gadgets-beast.xml: provide a non-expanding hbox for
	        project playback controls.

	        * beast-gtk/bstpatternctrl.c: added missing gxk_param_destroy() calls.

	svn path=/trunk/; revision=2096

2004-03-06  Tim Janik 	# 471c7deedf662e2746595558b81df713e71e59b9

	use gsl_engine_block_size() instead of outdated configuration option.

	Sat Mar  6 12:36:16 2004  Tim Janik  <timj@gtk.org>

	        * bsenoise.c: use gsl_engine_block_size() instead of outdated
	        configuration option.

	svn path=/trunk/; revision=2095

2004-03-06  Tim Janik 	# 360c6eb8998f3917e4aa592987dcec5844a6612b

	remove gconfig option synth_block_size, added synth_latency and

	Sat Mar  6 12:17:46 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: remove gconfig option synth_block_size, added
	        synth_latency and synth_control_freq.

	        * gslengine.[hc], gslopnode.h: removed sub-sample cruft. export just
	        GSL_CONTROL_CHECK(), gsl_engine_control_mask() and
	        gsl_engine_control_raster(), changed callers. added SYNC jobs.
	        removed configuration parameters from gsl_engine_init().
	        added gsl_engine_constrain() to calculate and constrain block and
	        control blocck sizes.
	        added gsl_engine_configure() to reconfigure engine configuration
	        parameters.
	        removed cruft from Stream structures. changed GSL_STREAM_MAX_VALUES
	        to 1024.

	        * gslopmaster.c: implement ENGINE_JOB_SYNC, needed to reconfigure
	        the engine.

	        * gsloputil.[hc]: prepare for gsl_engine_block_size() changes, allow
	        complete nukage of all const-value blocks.

	        * bseserver.[hc]: remove pcm-latency property. properly reconfigure
	        engine with gsl_engine_configure().

	        * bsepcmdevice.[hc]: added minimum watermark field to constrain
	        watermark in bse_pcm_handle_set_watermark() for devices with
	        fragment sizes, where too small watermarks can confuse the
	        fill/poll calculation code.

	        * bsepcmdevice-oss.c: request the smallest possible fragment size.
	        retrigger device operation after open, setup minimum playback
	        watermark.

	        * bsecxxmodule.h: adapt to gslengine.h API changes.

	svn path=/trunk/; revision=2094

2004-03-06  Tim Janik 	# 8975c1f0f7cad1ba4a12f2f66c2cebfacad4521c

	cleanups

	svn path=/trunk/; revision=2093

2004-03-05  Stefan Westerfeld 	# 0cb743a83cb72417f44fc022a13b86285e02a101

	update

	svn path=/trunk/; revision=2092

2004-03-05  Tim Janik 	# 166671db0cd669dbd2071280563234a4be8874c2

	distcheck fixes

	svn path=/trunk/; revision=2091

2004-03-05  Tim Janik 	# daec32fad487fb8ec221ad1c335302282528eb33

	added NoteLength choice enumeration.

	Fri Mar  5 19:08:45 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: added NoteLength choice enumeration.

	        * beast-gtk/bstpartdialog.c: added vraster combo box.

	        * beast-gtk/bstpatternctrl.[hc]: added vraster parameter to adjust
	        the vertical per-line ticks in the pattern editor display. implemented
	        event insertion.

	        * beast-gtk/bstpatternview.c: preserve vticks across range changes.

	        * beast-gtk/gxk/gxkutils.c (gxk_widget_set_latent_tooltip): ignore
	        empty tooltips.

	        * beast-gtk/gxk/gxkmenubutton.c (menu_button_key_press): support
	        cursor up/down in combobox mode. ignore empty tooltips.

	svn path=/trunk/; revision=2090

2004-03-04  Tim Janik 	# 2b9fe5590987ee54e0a5b924dc9815b930f072b5

	reset button prelight across popups but preserve relief.

	Thu Mar  4 14:49:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkmenubutton.c: reset button prelight across popups
	        but preserve relief.

	svn path=/trunk/; revision=2089

2004-03-04  Tim Janik 	# e69bd9c1cc13e50fb2b8f7978a5ac675ef62cb14

	reset button prelight across popups but preserve relief.

	Thu Mar  4 14:49:46 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkmenubutton.c: reset button prelight across popups
	        but preserve relief.

	svn path=/trunk/; revision=2088

2004-03-04  Tim Janik 	# 9115e86e6efdafc110b8ccff3a407352fc67fc3f

	save backing during popups. support multiple layouts/setups: tool mode

	Thu Mar  4 14:31:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkmenubutton.[hc]: save backing during popups.
	        support multiple layouts/setups: tool mode (retains old behaviour),
	        option mode (mimicking option menus), combo mode (mimicks combo
	        boxes) and popup mode (simply spawns a menu without capturing).

	        * beast-gtk/bstparam.c:
	        * beast-gtk/bstparam-choice.c: support menu button in tool, option
	        and combo modes.

	        * beast-gtk/bstpartdialog.c: use a combo box for direction selection.

	        * beast-gtk/dialogs/gadgets-standard.xml: adapt menu button properties,
	        menu buttons simply have a mode property now.

	        * beast-gtk/dialogs/gadgets-beast.xml: use a menu button in popup mode
	        to spawn the palette menu.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added a GxkFocusFrame, which is
	        simply an ordinary frame that draws a focus border instead of shadow
	        borders.

	        * beast-gtk/gxk/gxkglobals.c (gxk_nullify_in_object): fix object order ,
	        i.e. listen on *location::destroy.

	        * beast-gtk/gxk/gxkutils.c (gtk_widget_modify_bg_as_base): affect all
	        widget states.

	svn path=/trunk/; revision=2087

2004-03-03  Jordi Mallach 	# 9b1c22b45963ff3c0a2a3d79dc90e1bbbf95b0f8

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=2086

2004-03-03  Stefan Westerfeld 	# acf51a190103a14b4c9ead9cc43668e19a6efd74

	Some more pattern editor related TODOs.

	svn path=/trunk/; revision=2085

2004-03-03  Tim Janik 	# f5bc053e0c6d590ec81cece1264fa38f1e157e0f

	remove non menu button code.

	Wed Mar  3 10:23:48 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkmenubutton.[hc]: remove non menu button code.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: remove menu button code, changed
	        callers.

	        * beast-gtk/gxk/Makefile.am: build gxkmenubutton.

	svn path=/trunk/; revision=2084

2004-03-03  Tim Janik 	# 91b15f7370b47ff6bc8b22c5a2e4eff3c50865ed

	CVS copied from gxkauxwidgets.[hc].

	Wed Mar  3 10:14:16 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkmenubutton.h:
	        * beast-gtk/gxk/gxkmenubutton.c: CVS copied from gxkauxwidgets.[hc].

	svn path=/trunk/; revision=2083

2004-03-02  Tim Janik 	# 32c01059e78819fc71db174eea04e8fda065b9d0

	added vscale to pattern views.

	Tue Mar  2 22:49:22 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: added vscale to pattern views.

	        * beast-gtk/bstpartdialog.c: setup vertical resizer for pattern view.
	        constrain resizer proportions to 1:10 instead of 1:20.

	        * beast-gtk/bstpatternview.c: handle last-tick changes on the part.
	        properly implemented last_row as a result of vadjustment->upper.
	        improved intra-column focus handling by distance calculation.
	        constrain the vadjustment boundaries on ::adjustment-changed.

	svn path=/trunk/; revision=2082

2004-03-02  Tim Janik 	# 95ee1c765cd80e8b388b38d5f535e99f6bb70fff

	draw event values bold, similar to notes. choose a dark_gc for events only

	Tue Mar  2 16:36:37 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterncolumns.c: draw event values bold, similar
	        to notes. choose a dark_gc for events only if none is present,
	        this makes event values look like notes in font and color.

	        * beast-gtk/bstpatternview.c: draw tick positions non-bold.
	        auto-focus cells upon mouse clicks (drag start).

	svn path=/trunk/; revision=2081

2004-03-02  Tim Janik 	# 8fbc31eee82e74c339c671d10bced773cefa10fc

	shut up

	svn path=/trunk/; revision=2080

2004-03-02  Tim Janik 	# 2cd7c97dbe7583f11ef43c831596cc63465556f6

	updates

	svn path=/trunk/; revision=2079

2004-03-02  Tim Janik 	# 07f1865483c088ca3a99ebd207f75e2722712bab

	ensure enough octaves are present to insert a note.

	Tue Mar  2 12:59:38 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.c (bse_part_insert_note): ensure enough octaves are present
	        to insert a note.

	svn path=/trunk/; revision=2078

2004-03-02  Tim Janik 	# 5a204bb8237fa45364aa989717fa5b1a06287462

	implemented base_octave parameter.

	Tue Mar  2 12:47:45 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatternctrl.[hc]: implemented base_octave parameter.

	        * library/keys/keyrc.de: adjust note insertion numbers to be octave-0
	        relative.

	        * beast-gtk/bstpartdialog.c: display base octave.

	        * beast-gtk/bstpatterncolumns.c: change notes without resetting
	        velocity, fine_tune etc.

	        * beast-gtk/gxk/gxkparam.c: validate parameter values after updates
	        for simple value bindings.

	svn path=/trunk/; revision=2077

2004-03-02  Tim Janik 	# 81a289b3a950a0f5875b56d2d039445d46af2648

	updates

	svn path=/trunk/; revision=2076

2004-03-02  Tim Janik 	# 8261567820044c1d0ab66ba3c94033ea45776b49

	fixed choice serialization type in to_rec() impls.

	Tue Mar  2 11:09:48 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: fixed choice serialization type in to_rec() impls.

	svn path=/trunk/; revision=2075

2004-03-02  Tim Janik 	# 839fc75de9d9ddecd3463091a04fd9801ebe0c9c

	updates

	svn path=/trunk/; revision=2074

2004-03-02  Tim Janik 	# 43b075fb7bc03bc3cdc9dd1219579647563de566

	i18n fixes and blurb output fixes.

	Tue Mar  2 10:48:19 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: i18n fixes and blurb output fixes.

	        * bsecore.idl: provide just BLURB not HELP for records, work
	        around a texitheque bug.

	svn path=/trunk/; revision=2073

2004-03-02  Tim Janik 	# 213ebe594daae4c6544eccda3c760dffad210711

	lowercase info keys before entering (key,value) pairs into the info map,

	Tue Mar  2 10:33:55 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.cc (parseInfoOptional): lowercase info keys before
	        entering (key,value) pairs into the info map, since all read-outs
	        use lowercase keys.

	svn path=/trunk/; revision=2072

2004-03-02  Tim Janik 	# 0fff00ad77b5d7d20cd18738311377b7e9ae4164

	s/reallocate_children/reallocate_contents/g, changed callers.

	Tue Mar  2 10:20:54 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkscrollcanvas.c:
	        s/reallocate_children/reallocate_contents/g, changed callers.

	svn path=/trunk/; revision=2071

2004-03-02  Tim Janik 	# d3258c0de7ddff0eb1a29de8f6bbfe788a4fb78a

	changed callers of sfi_boxed_make_record(), sfi_boxed_get_record_info(),

	Tue Mar  2 10:23:55 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: changed callers of sfi_boxed_make_record(),
	        sfi_boxed_get_record_info(), sfi_info_string_find(),
	        sfi_boxed_make_sequence() and sfi_boxed_get_sequence_info()
	        which got removed.

	svn path=/trunk/; revision=2070

2004-03-02  Tim Janik 	# 2da8b8705ac53ca61d4ef70f79a0e1c9e09e6ab2

	removed sfi_boxed_make_record(), sfi_boxed_get_record_info(),

	Tue Mar  2 10:22:26 2004  Tim Janik  <timj@gtk.org>

	        * sfitypes.[hc]: removed sfi_boxed_make_record(),
	        sfi_boxed_get_record_info(), sfi_info_string_find(),
	        sfi_boxed_make_sequence() and sfi_boxed_get_sequence_info()
	        which are now unused. changed callers.

	svn path=/trunk/; revision=2069

2004-03-02  Tim Janik 	# d5b4feccf50e4816f4a864b68515e3beedd447f6

	adapt to BseItemSeq changes.

	Mon Mar  1 20:00:57 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-proxy.c:
	        * beast-gtk/bstparam.h:
	        * beast-gtk/bstsnetrouter.c:
	        * beast-gtk/bsttracksynthdialog.[hc]:
	        * bsttrackview.c:
	        * bsttreestores.c:
	        * beast-gtk/bstapp.c: adapt to BseItemSeq changes.

	        * bsw/Makefile.am: stop building mkapi which is broken and unused.

	        * tests/Makefile.am: added SFIDL dependancy for sfidl generated sources.

	svn path=/trunk/; revision=2068

2004-03-02  Tim Janik 	# 64c0d6f661756daf26c47550608312e0353052c4

	switched the native C binding for idl types to a C wrapper binding which

	Mon Mar  1 20:08:12 2004  Tim Janik  <timj@gtk.org>

	        * switched the native C binding for idl types to a C wrapper
	        binding which is based on a C++ binding for core idl types.

	        * bsecore.idl: turn ProxySeq into a ItemSeq for proper typing.

	        * bsecxxbase.idl:
	        * bseamplifier.idl: bring up to par with recent idl fixes.

	        * bsecore.cc: new file, needed to implement bsecore.idl contents
	        and the C wrapper bindings.

	        * bsecxxplugin.h: provide constants used in idl files. fixed namespace
	        issues in BSE_CXX_DECLARED_*_TYPE() macros by making them absolute.

	        * bsegconfig.c: retrieve record fields via bse_gconfig_get_fields() now.

	        * Makefile.am: added rules to generate bsegencore.cc. this implements
	        the C functions from bsegentypes.h on top of the C++ core binding.

	        * bsemain.[hc]: initialize C wrapper types.

	        * bsesong.c:
	        * bsetrack.c:
	        * bsesubsynth.c:
	        * bsemidisynth.c:
	        * bseproject.proc:
	        * bseitem.[hcp]*:
	        * bsewaveosc.c:
	        * bsecontainer.[hcp]*: adapt to BseItemSeq changes.

	        * bsetype.c: removed cruft.

	        * bserecords.idl: removed, replaced by bsecore.idl.

	svn path=/trunk/; revision=2067

2004-03-02  Tim Janik 	# 65fc80274e8ce83cdcbbd85656799d3a456f7ca8

	provide namespace to BSE_CXX_DECLARED_*_TYPE() macro generations. fix

	Mon Mar  1 23:33:56 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: provide namespace to BSE_CXX_DECLARED_*_TYPE()
	        macro generations. fix to_rec() and to_seq() method generations
	        by using SFI types instead of boxed types for the resulting record
	        fields. provide resizing constructor for egenrated sequences.
	        initialize GEnumValue values from actual enum value symbols.
	        assign implementation values as specified in the idl files to
	        enum value symbols, since this is a core binding.

	        * sfidl-corec.cc: turned the core-c binding into a C++ wrapper that
	        depends on the core-cxx binding. lots of cleanups and fixes.

	        * sficxx.h: added set_boxed() method to record handles.

	        * Makefile.am: generate a testidl binding with --host-c as
	        --core-c depends on a C++ binding.

	        * testsfi.c: disabled tests that depend on the old --core-c.

	svn path=/trunk/; revision=2066

2004-03-02  Tim Janik 	# 1b7d889017d36fa06bdae177910e555658096af7

	when building against gtk+-2.3.5, use gtk_window_activate_key() and

	Tue Mar  2 01:07:55 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkdialog.c:
	        (gxk_dialog_key_press_event): when building against gtk+-2.3.5, use
	        gtk_window_activate_key() and gtk_window_propagate_key_event() to
	        implement proper accelerator vs. focus widget handling.

	svn path=/trunk/; revision=2065

2004-03-01  Miloslav Trmac 	# 668541ced598a2da7572e184e1225a261e18e236

	Update Czech translation

	svn path=/trunk/; revision=2064

2004-02-29  Funda Wang 	# 6a280c0ae4ada0a14f875bb0d1c134e2d7759680

	Added zh_CN translation

	svn path=/trunk/; revision=2063

2004-02-27  Danilo Šegan 	# 85689ae50f35b9034d19b13f55893d3fff007fc6

	Updated Serbian translation.

	svn path=/trunk/; revision=2062

2004-02-27  Tim Janik 	# f32b0f482b78d48b6cdc30c56dd25e53728ee888

	added --macro option wich generates a macro to register all types

	Fri Feb 27 13:57:52 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: added --macro option wich generates a macro to
	        register all types contained in an idl file.

	svn path=/trunk/; revision=2061

2004-02-27  Tim Janik 	# cdeb9add2685bb0c7954d8847710d71dabe80429

	major reorganization of the code. split up generation into multiple

	Fri Feb 27 13:54:56 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corec.h:
	        * sfidl-corec.cc: major reorganization of the code. split up
	        generation into multiple digestible functions.
	        implement CoreC code generator in internal namespace and inline
	        methods.

	svn path=/trunk/; revision=2060

2004-02-27  Tim Janik 	# 71f739a6eb923356030ae595574b1281cb635065

	CVS copied from bserecords.idl.

	Fri Feb 27 11:23:01 2004  Tim Janik  <timj@gtk.org>

	        * bsecore.idl: CVS copied from bserecords.idl.

	svn path=/trunk/; revision=2059

2004-02-27  Tim Janik 	# 40d15815512b7fcc9cafa52d27026bfab7710aa4

	make pattern editors second class citizens untill they work

	svn path=/trunk/; revision=2058

2004-02-27  Tim Janik 	# d824516951f42c3bf880ca42bd04a83c46a72919

	new directory.

	Fri Feb 27 08:38:09 2004  Tim Janik  <timj@gtk.org>

	        * library/keys/: new directory.

	        * library/keys/keyrc.de: added german keyrc.

	        * beast-gtk/bstkeybindings.[hc]: implemented loading of stock
	        keyrc files.

	        * beast-gtk/bstmain.c: handle keys path.

	        * beast-gtk/bstfiledialog.[hc]: provide API to allow for arbitrary
	        file dialogs.

	        * configure.in: provide beastkeysdir, added library/keys/.

	svn path=/trunk/; revision=2057

2004-02-27  Tim Janik 	# 6d7f074b880e0bbe6481acb57e9661f43708a02f

	added missing sources

	svn path=/trunk/; revision=2056

2004-02-27  Tim Janik 	# 377acde1a245742859c3c68e9c51c43d8f50c350

	build beast and bsesh suid wrappers.

	Fri Feb 27 07:08:55 2004  Tim Janik  <timj@gtk.org>

	        * launchers/Makefile.am: build beast and bsesh suid wrappers.

	        * launchers/beaststart.c: build versioned beast executable name.
	        * launchers/bseshstart.c: build versioned bsesh executable name.

	        * launchers/suidmain.c: figure executable name via
	        custom_find_executable() function, after dropping privileges.
	        * launchers/suidmain.h: prototype custom_find_executable().

	        * bse/bseconfig.h.in:
	        * configure.in: fix BSE_VERSION vs. BST_VERSION.

	        * beast-gtk/suidmain.c: removed
	        * beast-gtk/Makefile.am: don't build beast suidwrapper here.

	        * shell/Makefile.am: don't build bsesh suidwrapper here.

	svn path=/trunk/; revision=2055

2004-02-27  Tim Janik 	# d3a8c2b9d650868015116fbcb5070c88a6726f8e

	CVS copied here from beast-gtk/.

	Fri Feb 27 06:48:41 2004  Tim Janik  <timj@gtk.org>

	        * launchers/suidmain.c: CVS copied here from beast-gtk/.

	svn path=/trunk/; revision=2054

2004-02-27  Tim Janik 	# b3e814381588ec99d4020641e21477a9dad6ede6

	added new directory to hold beast and bsesh launcher programs and suid

	Fri Feb 27 06:42:01 2004  Tim Janik  <timj@gtk.org>

	        * launchers/: added new directory to hold beast and bsesh
	        launcher programs and suid wrappers.

	svn path=/trunk/; revision=2053

2004-02-27  Tim Janik 	# f246392bd84f58e0c145d37fac516a40213f0db1

	up version to 0.6.1, interface 0, binary 0.

	Fri Feb 27 06:17:37 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.6.1, interface 0, binary 0.

	        * beast-gtk/bstcanvaslink.c:
	        * beast-gtk/bstcanvassource.c: adapt to BseSource changes.

	svn path=/trunk/; revision=2052

2004-02-27  Tim Janik 	# e2d21de7cfeb241ea992efffc3c51cb12afe0fbb

	fixed channel naming, identifiers and i18n.

	Fri Feb 27 06:22:31 2004  Tim Janik  <timj@gtk.org>

	        * artscompressor.cc:
	        * artscompressor.idl:
	        * bseadder.c:
	        * bseatandistort.c:
	        * bsefirfilter.c:
	        * bseiirfilter.c:
	        * bsemixer.c:
	        * bsemult.c:
	        * bsenoise.c:
	        * bsesequencer.c:
	        * bsesimpleadsr.c:
	        * davcanyondelay.c:
	        * davguitar.c:
	        * davorgan.c:
	        * davsyndrum.c:
	        * davxtalstrings.c: fixed channel naming, identifiers and i18n.

	svn path=/trunk/; revision=2051

2004-02-27  Tim Janik 	# abb89dab1fa13c798f98623334d31d8ff7f64597

	grand fix of channel names. channels have ident, label and blurb, where

	Fri Feb 27 06:19:32 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c:
	        * bsebiquadfilter.c:
	        * bseconstant.c:
	        * bsecontextmerger.c:
	        * bsecxxbase.cc:
	        * bsecxxbase.h:
	        * bsecxxmodule.h:
	        * bseinstrumentinput.c:
	        * bseinstrumentoutput.c:
	        * bseladspamodule.c:
	        * bsemidicontroller.c:
	        * bsemidiinput.c:
	        * bsemidivoice.c:
	        * bsepcminput.c:
	        * bsepcmoutput.c:
	        * bsesnooper.c:
	        * bsesource.c:
	        * bsesource.h:
	        * bsesource.proc:
	        * bsestandardosc.c:
	        * bsesubiport.c:
	        * bsesuboport.c:
	        * bsesubsynth.c:
	        * bsewaveosc.c: grand fix of channel names. channels have ident,
	        label and blurb, where label and blurb are subject to i18n. this fixes
	        the demo song not working in locales!=C due to channel identifiers
	        being translated. added missing i18n markups.

	svn path=/trunk/; revision=2050

2004-02-27  Tim Janik 	# 789d182f99b6e5c962f2f7f9b5d45f337c93f456

	fixed i18n and identifier issues with ichannel/jchannel/ochannel

	Fri Feb 27 06:23:36 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-corecxx.cc: fixed i18n and identifier issues with
	        ichannel/jchannel/ochannel registration.

	        * sfi/sfidl-parser.[hc]*: streams have ident, label and blurb, where
	        label and blurb are subject to i18n.

	svn path=/trunk/; revision=2049

2004-02-26  Tim Janik 	# ab883a005533134f879bcdfd1567f5d880e86c39

	fixed 64bit integer scanning.

	Thu Feb 26 20:35:51 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.c:
	        * bsewave.c:
	        * bsetrack.c:
	        * bseplugin.c:
	        * bsestorage.c:
	        * bseparasite.c:
	        * bsedatapocket.c:
	        * gslloader-gslwave.c: fixed 64bit integer scanning.

	        * bserecords.idl: added MAXINT, MININT, MAXNUM and MINNUM constants.

	svn path=/trunk/; revision=2048

2004-02-26  Tim Janik 	# 188f12ae04c34107678176810106760f11d06080

	removed legacy v_int parsing code from GScanner, use v_int64 solely now.

	Thu Feb 26 20:37:57 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: removed legacy v_int parsing code from GScanner,
	        use v_int64 solely now. renamed creation function to g_scanner_new64(),
	        to catch old glib scanner uses.

	        * testsfi.c:
	        * sfistore.c:
	        * sficomport.c: 64bit integer scanning fixes.

	        * sfidl-parser.[hc]*: 64bit parsing ans Constant handling fixes, allow '+'
	        as number sign besides '-'.

	svn path=/trunk/; revision=2047

2004-02-26  Vincent van Adrighem 	# 67814a35be90e593d4e44963dbd624f20c5a5244

	Translation updated by Kees van den Broek.

	2004-02-26  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Kees van den Broek.

	svn path=/trunk/; revision=2046

2004-02-26  Tim Janik 	# 685f07d5a10b24eefc205629287bc888152353a4

	polish spawned executable name

	svn path=/trunk/; revision=2045

2004-02-26  Tim Janik 	# 90fe6442993f90e2ef6b6defe4c55bff45f2a023

	shut up

	svn path=/trunk/; revision=2044

2004-02-25  Danilo Šegan 	# 474b939614a16cee4da73cb6d8294012e79fa6d9

	Updated Serbian translation.

	svn path=/trunk/; revision=2043

2004-02-25  Jordi Mallach 	# edc3ba8cf27a178657a8e10ab572b43c8b4bfa22

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=2042

2004-02-25  Tim Janik 	# 535c15a07f7179d47d99d8ef6a1a4bc1bb4fb704

	added suidwrapper program without dependancies, based on a patch by Stefan

	Wed Feb 25 14:34:51 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/suidmain.c: added suidwrapper program without dependancies,
	        based on a patch by Stefan Westerfeld. the wrapper renices itself to
	        -19, drops uid (privileges) and then invokes beast-$VERSION.

	        * beast-gtk/Makefile.am: build and install suidwrapper 'beast'.

	        * beast-gtk/bstmain.c: drop nice-level once BSE is setup.

	        * configure.in: new section AC_SUIDMAIN_REQUIREMENTS. check for all functions
	        required to implement renicing in the suidwrapper binary.

	        * shell/Makefile.am: build and install suidwrapper 'bsesh'.

	        * shell/bsesh.c: drop nice-level once BSE is setup.

	svn path=/trunk/; revision=2041

2004-02-25  Tim Janik 	# 96f4ff0e4a66714ecba8a1f3dd023d940ef468b8

	new function bse_main_getpid() which returns a thread id.

	Wed Feb 25 14:43:23 2004  Tim Janik  <timj@gtk.org>

	        * bsemain.[hc]: new function bse_main_getpid() which returns a thread id.

	        * bseserver.c: if possible, slightly drop priorities after engine
	        initilization, so the BSE thread doesn't get into the way of the sequencer
	        or synthesis threads.

	svn path=/trunk/; revision=2040

2004-02-25  Tim Janik 	# b6813dcdd741b32a4dcd75b201cec0898828f526

	drop nice-level after forking.

	Wed Feb 25 14:46:33 2004  Tim Janik  <timj@gtk.org>

	        * sficomwire.c (sfi_com_spawn_async): drop nice-level after forking.

	        * sfithreads.[hc]: added sfi_thread_self_pid() which returns the threads
	        thread id, regardless of multiple threads using the same pid.
	        (sfi_thread_run): added hack to filter out bogus "Priorities can only be
	        increased by root." warnings from glib around thread creation.

	svn path=/trunk/; revision=2039

2004-02-25  Miloslav Trmac 	# 85dae7b29151b88de5cbb515859bbde4dbf4bbbc

	Update Czech translation

	svn path=/trunk/; revision=2038

2004-02-25  Tim Janik 	# 5136ccef2032e550d724aaeb9dbfcea8b28ed137

	provide BSESH_BINARY and BEAST_BINARY automake variables to build

	Wed Feb 25 05:52:01 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: provide BSESH_BINARY and BEAST_BINARY automake variables
	        to build versioned binaries.

	        * beast-gtk/Makefile.am: hack around automake-1.4 deficencies and build
	        beast-$BST_VERSION via conditional build of @BEAST_BINARY@.

	        * shell/Makefile.am: hack around automake-1.4 deficencies and build
	        bsesh-$BSE_VERSION via conditional build of @BSESH_BINARY@.

	svn path=/trunk/; revision=2037

2004-02-25  Tim Janik 	# 2621471a6600943a93d16eda56685ab41983099f

	invoke bsesh with BSE version as $BSE_PATH_BINARIES/bsesh-$BSE_VERSION.

	Wed Feb 25 06:00:15 2004  Tim Janik  <timj@gtk.org>

	        * bsescripthelper.c: invoke bsesh with BSE version as
	        $BSE_PATH_BINARIES/bsesh-$BSE_VERSION.

	svn path=/trunk/; revision=2036

2004-02-25  Tim Janik 	# e8b7a55ed153880c18e13e659160bb51f1146d46

	made the toplevel-notebook tabs appear at the bottom.

	Wed Feb 25 04:49:55 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: made the toplevel-notebook tabs
	        appear at the bottom.

	svn path=/trunk/; revision=2035

2004-02-25  Tim Janik 	# ec0a41092a2a761c45e1b2df4e71c537408fcfba

	use G_DEFINE_TYPE() for menu button.

	Wed Feb 25 03:40:00 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkauxwidgets.c: use G_DEFINE_TYPE() for menu button.

	svn path=/trunk/; revision=2034

2004-02-25  Tim Janik 	# 8fac34886f186e7a54ee2af1abc7d8ad7de82f78

	fix note insertion (use bse-part-insert-note-auto).

	Wed Feb 25 03:40:31 2004  Tim Janik  <timj@gtk.org>

	        * bsemidifile.c (bse_midi_file_setup_song): fix note insertion
	        (use bse-part-insert-note-auto).

	svn path=/trunk/; revision=2033

2004-02-24  Miloslav Trmac 	# 665f475747b398625844b28482ff9f6c4c95d6fa

	Update Czech translation

	svn path=/trunk/; revision=2032

2004-02-24  Tim Janik 	# 6e519e240e8f5b99a52dbd6474646566081f30dc

	added focus-position to key event handlers. undo-group event removals.

	Tue Feb 24 07:51:04 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterncolumns.[hc]: added focus-position to key
	        event handlers. undo-group event removals. implemented control
	        cell editing.

	        * beast-gtk/bstpatterncolumns.[hc]: added hwrap parameter for focus cell
	        movement around edges. rewrote key lookup to honour piano vs. generic
	        key bindings and pattern-column specific collision groups. implemented
	        step-width handling via key bindings. rearranged key binding functions
	        and default bindings. simplified bindings by handling shift as movement
	        blocker automatically.

	        * beast-gtk/bstkeybindings.[hc]: provide SHORT/USHORT parameters
	        instead of OCTAVE parameter. added collision-group handling so
	        keys can be setup for multiple functions from different collision
	        groups. throw messages for unknown key functions.

	        * beast-gtk/bstpartdialog.c: added HWrap widget.

	svn path=/trunk/; revision=2031

2004-02-24  Stefan Westerfeld 	# 51baa45f6785b917f2fdb0daa2161de5916ae40b

	Updated sfidl manual page.

	Tue Feb 24 04:05:59 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/sfidl.1.texi: Updated sfidl manual page.

	svn path=/trunk/; revision=2030

2004-02-23  Stefan Westerfeld 	# 3f69be45d868fe9eda8af025d4a89accce0f651d

	Adapt to sfidl option changes.

	Mon Feb 23 23:39:27 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am: Adapt to sfidl option changes.

	svn path=/trunk/; revision=2029

2004-02-23  CET 2004  Stefan Westerfeld 	# 202a3f443d66a8a84aed74c0afdd068ccc7585de

	sfidl-cbase.*

	Mon Feb 23 23:34:28 CET 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cbase.*
		* sfidl-clientc.*:
		* sfidl-clientcxx.*:
		* sfidl-corec.*:
		* sfidl-corecxx.*:
		* sfidl-factory.*:
		* sfidl-generator.*:
		* sfidl-hostc.*:
		* sfidl-typelist.*:
		* testsfidl.cc:
		* sfidl-options.*: Don't parse language specific options in the Option
		class - let the code generators parse them themselves. Print help for
		bindings in the CodeGenerators with the new virtual
		CodeGenerator::help() function.

	svn path=/trunk/; revision=2028

2004-02-23  Tim Janik 	# 2d4d1e0eaf4d0a8243eae53616821b0e931107e9

	updates and priorizations

	svn path=/trunk/; revision=2027

2004-02-23  Stefan Westerfeld 	# 381043053778c64d11228cb121b31076313ed30e

	Report filename/line for missing include files.

	Mon Feb 23 19:38:35 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Report filename/line for missing include files.

	svn path=/trunk/; revision=2026

2004-02-23  Stefan Westerfeld 	# 2e44612ab01e974c9ef7601e34763fb627d94b20

	updates

	svn path=/trunk/; revision=2025

2004-02-23  Stefan Westerfeld 	# 34bb4e3260b462c8eb0f46b9ee7ecb681dc190a8

	Fixed bug - code generated will be generated for types defined directly in

	Mon Feb 23 17:48:46 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Fixed bug - code generated will be generated for
		types defined directly in stdin (using sfidl -).

		* testidl.idl: Added a choice definition containing all syntactically
		valid ways of defining a choice value.

		* testidl.c: Added _(x) macro: translates "example" to "example_tr".

	svn path=/trunk/; revision=2024

2004-02-23  Tim Janik 	# 8bbbd86dcc88f962d47826d5f19abb8897dc8cfe

	fix simple assigments to choice values.

	Mon Feb 23 17:30:15 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.cc (parseChoiceValue): fix simple assigments to
	        choice values.

	svn path=/trunk/; revision=2023

2004-02-23  Stefan Westerfeld 	# 6e60b2958e6f5bba7c43fd383bd46c63ff2872e2

	updates

	svn path=/trunk/; revision=2022

2004-02-23  Tim Janik 	# fa19cd16f9153916276dd499d011d2a233dccb54

	remove debugging snippet

	svn path=/trunk/; revision=2021

2004-02-23  Tim Janik 	# ed2ae9289f3b52b78723ae8be9d5609740b107a3

	improved default layout. reset pango layouts when relayouting the columns.

	Mon Feb 23 04:46:12 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatternview.[hc]: improved default layout. reset
	        pango layouts when relayouting the columns. support column-specific
	        amount of focus-positions. implemented intra-column focus position.

	        * beast-gtk/bstpartdialog.c: setup hzoom/hresizer scales for piano
	        roll. implemented hresizer to widen/shorten the range of reachable
	        tick positions.

	        * beast-gtk/bstpianoroll.c: properly constrain hadjustment setup once
	        it changes. handle last-tick changes in the model.

	        * beast-gtk/dialogs/gadgets-beast.xml: added hzoom and hresizer scales
	        to the GUI.

	        * beast-gtk/gxk/gxksimplelabel.c (label_cut_layout): translate ellipsis.

	        * beast-gtk/gxk/gxkscrollcanvas.c: support adjustment_changed handlers
	        in derived widgets. export function to reset pango layouts.

	        * beast-gtk/bsteventroll.c: leave step/page increment for hadjustment
	        alone. depend on pianbo roll setting it up correctly.

	        * beast-gtk/bstpatterncolumns.[hc]: implemented BstPatternColumnEvent,
	        a column to display event values in various formats. made layout
	        configuration dialog non-modal. added event value format facilities.
	        anhanced parser to support defaults.

	        * beast-gtk/gxk/gxkutils.c: fixed '_'-escaping
	        in gxk_factory_path_unescape_uline().

	svn path=/trunk/; revision=2020

2004-02-23  Tim Janik 	# 6176f8f1017994196f25027ceea70db76a84b44d

	use bse_gettext() to translate strings, so we can catch places triggering

	Mon Feb 23 05:13:34 2004  Tim Janik  <timj@gtk.org>

	        * bsedefs.h:
	        * bsemain.[hc]: use bse_gettext() to translate strings, so we can
	        catch places triggering translations prematurely (before
	        bindtextdomain() is called), e.g. due to static C++ constructors.

	        * bsepart.[hc]: support per-channel matches for note-specific events
	        in bse_part_list_controls().
	        * bsepart.proc: removed get-range-controls() which is a clone of
	        list-controls(). added get-channel-controls() to get note-specific
	        control events.

	svn path=/trunk/; revision=2019

2004-02-23  Stefan Westerfeld 	# a44f300fecce86e59fa45be00d4374063485388b

	updates

	svn path=/trunk/; revision=2018

2004-02-23  Stefan Westerfeld 	# 9171335577d6505d78c54b0c3a697f40d58b6605

	Removed bswcxxutils.h, as it is no longer required - sfi provides C++

	Mon Feb 23 02:44:57 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsw/Makefile.am:
		* bsw/bswcxxutils.h: Removed bswcxxutils.h, as it is no longer
		required - sfi provides C++ utility classes in sfi/sficxx.h.

	svn path=/trunk/; revision=2017

2004-02-23  Stefan Westerfeld 	# 6438488341b30f909e47ffcd51bd29cdb02831da

	Bugfix: It is now possible to use fully qualified constant names (such as

	Mon Feb 23 04:04:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Bugfix: It is now possible to use fully qualified
		constant names (such as Bse::STANDARD) within param specs.

	svn path=/trunk/; revision=2016

2004-02-23  Stefan Westerfeld 	# 1dc5a6c245f38754a1344d81b965cf8aa4f3c222

	updates

	svn path=/trunk/; revision=2015

2004-02-23  Stefan Westerfeld 	# 8a366bd7bbc2b030030b43bb924bda2c198e2db2

	Code cleanup of the --host-c binding. Moved common functionality from

	Mon Feb 23 01:27:25 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-clientc.* sfidl-hostc.* sfidl-cbase.*: Code cleanup of the
		--host-c binding. Moved common functionality from CodeGeneratorClientC
		and CodeGeneratorHostC to CodeGeneratorCBase.

		* sfidl-options.cc: Don't suggest the user to specify --interface or
		--implementation (these flags don't exist any longer).

	svn path=/trunk/; revision=2014

2004-02-22  Stefan Westerfeld 	# 5a152035df80543d43974ee27a87ad5c48c116cf

	Remove generateConstant, generateSignalStuff and generateProcedures

	Sun Feb 22 22:10:34 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-options.*: Remove generateConstant, generateSignalStuff and
		generateProcedures option. The first two were not really used, and
		each language binding knows whether to generate procedures or not (the
		client bindings do, the other bindings don't).

		* sfidl-clientc.*: Code cleanup: splitted the run() method in lots
		of smaller methods. Adapted to the changes in the Options class.

		* sfidl-corec.cc sfidl-hostc.cc: Adapted to the changes in the Options
		class. Started code cleanup.

		* sfidl-clientcxx.cc: Fixed bug - there shouldn't be info string based
		information in the binding generated for records/sequences.

		* sfidl-generator.*: Removed CodeGeneratorQt (and the --qt option),
		which didn't do anything useful until now, anyway.

	svn path=/trunk/; revision=2013

2004-02-22  Stefan Westerfeld 	# abcb7981c575fcb181908ffba02a2d330536bb23

	Use new sfidl options.

	Sun Feb 22 01:57:36 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsw/Makefile.am:
		* beast-gtk/Makefile.am:
		* tests/Makefile.am: Use new sfidl options.

	svn path=/trunk/; revision=2012

2004-02-22  Stefan Westerfeld 	# 4e38698087aac414fc2d32708c52521c923f89f7

	Use new sfidl options.

	Sun Feb 22 02:03:51 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: Use new sfidl options.

	svn path=/trunk/; revision=2011

2004-02-22  Stefan Westerfeld 	# 91831d7a708fae29619471c170c53a1422bba7b1

	Put seperate classes in seperate files. So this now should contain class

	Sun Feb 22 01:44:09 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: Put seperate classes in seperate files. So this
		now should contain class CodeGenerator, nothing more.

		* sfidl-cbase.* sfidl-cxxbase.*: Base classes for C / C++ language
		bindings (from sfidl-generator.cc).

		* sfidl-clientc.* sfidl-hostc.* sfidl-corec.*: Three new C language
		bindings (--client-c --host-c --core-c), all containing the code from
		sfidl-generator.cc

		* sfidl-corecxx.*: Rename from sfidl-module.*.

		* sfidl-clientcxx.*: Rename from sfidl-cxx.*. Moved some stuff from
		the CodeGeneratorCxxBase to CodeGeneratorClientCxx, since the core
		binding will not use it.

		* sfidl-module.* sfidl-cxx.*: Removed (contents are sfidl-corecxx.*
		and sfidl-clientcxx.* now).

		* sfidl-options.cc: Stripped --boxed --interface --implementation
		options: these are selected implicitely by selecting the language
		binding.

		* sfidl.cc: No longer default one language binding (CodeGeneratorC).

		* Makefile.am: Adapted to the new sfidl file structure, and the new
		options.

	svn path=/trunk/; revision=2010

2004-02-21  Tim Janik 	# 78e22e86131e0001365e241b042e790529f66011

	from sfidl-generator.*

	Sat Feb 21 23:28:58 2004  Tim Janik  <timj@gtk.org>

	        * cvs copied sfidl sources:

	        * sfidl-cbase.cc, sfidl-cbase.h:
	        * sfidl-hostc.cc, sfidl-hostc.h:
	        * sfidl-corec.cc, sfidl-corec.h:
	        * sfidl-clientc.cc, sfidl-clientc.h: from sfidl-generator.*

	        * sfidl-clientcxx.cc, sfidl-clientcxx.h: from sfidl-cxx.*

	        * sfidl-corecxx.cc, sfidl-corecxx.h: from sfidl-module.*

	        * sfidl-cxxbase.cc, sfidl-cxxbase.h: from sfidl-cxx.*

	svn path=/trunk/; revision=2009

2004-02-20  Stefan Westerfeld 	# bbdad2c1713b5c1ffdc55059400ebf38a2c0a080

	Support dorian, phrygian, lydian, mixolydian and locrian scales (besides

	Fri Feb 20 21:31:44 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* library/scripts/part-harmonic-transposer.scm: Support dorian,
		phrygian, lydian, mixolydian and locrian scales (besides major/minor).

	svn path=/trunk/; revision=2008

2004-02-20  Miloslav Trmac 	# 98dc997f6f57c393647c25c330193d2032f713f7

	Update Czech translation

	svn path=/trunk/; revision=2007

2004-02-20  Danilo Šegan 	# a10f78beb71f83480840563f868a683c468ae166

	Updated Serbian translation.

	svn path=/trunk/; revision=2006

2004-02-19  Tim Janik 	# ef0d4dde5a9afc0d8b16c3e940e4835630c3db0f

	added parameters for stepping direction and step width, these are honoured

	Thu Feb 19 03:40:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatternctrl.[hc]: added parameters for stepping direction
	        and step width, these are honoured by "next" cell movement.

	        * beast-gtk/bstrecords.idl: added Direction choices.

	        * beast-gtk/dialogs/gadgets-beast.xml: provide container for pattern
	        view controls.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: gxk_widget_get_latent_tooltip() got
	        moved. centered menu button child for the non-image case.

	        * beast-gtk/gxk/gxkparam-label.c: added support for pspec name labels
	        and tooltips.

	        * beast-gtk/gxk/gxkparam-spinner.c: shrink size byunused digits if
	        size group permits.

	        * beast-gtk/gxk/gxkparam.[hc]: added size groups, a mechanism to specify
	        different layout sizes for GxkParams. allow params to shrink unused
	        request space by defautl.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_vseparator_space_new().
	        moved gxk_widget_set_latent_tooltip() / gxk_widget_get_latent_tooltip()
	        here.

	        * beast-gtk/bstpartdialog.c: added GUI for pattern control pspecs.

	        * beast-gtk/bstparam-choice.c: adapt to choice changes. set latent
	        tooltip on menu items. give menu button higher rating than option menu.

	        * beast-gtk/bstparam.[hc]: open up an extra size group for property
	        parameters. set size group sizes from preferences. we used to do this
	        before as well, this just allows non-property parameters to have
	        their own sizes.
	        (bst_param_new_proxy):
	        (bst_param_new_rec): add proxy and record parameters to size group.

	svn path=/trunk/; revision=2005

2004-02-19  Tim Janik 	# 01fd9337cb37ef2ff5b6f79fc46b090bc5494246

	fixed sfidl option

	svn path=/trunk/; revision=2004

2004-02-19  Tim Janik 	# 3b62e3450b3e24942374ed4e9a5e95c809699b13

	allowed choice values to have translatable labels and blurbs, the

	Thu Feb 19 03:59:07 2004  Tim Janik  <timj@gtk.org>

	        * sfiparams.[hc]: allowed choice values to have translatable labels
	        and blurbs, the canonical identifier is named choice_ident now, adapted
	        callers.

	        * sfidl-generator.cc: provide choice values through a funciton,
	        not a static array, so we can translate the choice value label
	        and blurb. provide value conversion implementations.

	        * sfidl-module.cc: translate choice values.

	        * sfidl-parser.[hc]*: fix v_int64 access of scanner values.
	        made parseChoiceValue() accept translated labels and blurbs for choice
	        values. made choice value number assignment optional.

	        * sfidl-cxx.cc: fixed sizeof() vs. G_N_ELEMENTS().

	svn path=/trunk/; revision=2003

2004-02-19  Tim Janik 	# a5a794bcc43da869378c67e83f474875a42940b5

	added idl files.

	        * po/POTFILES.in: added idl files.

	svn path=/trunk/; revision=2002

2004-02-18  Miloslav Trmac 	# e3db4de395fa388f208870b31c51b1e059b565fb

	Update Czech translation

	svn path=/trunk/; revision=2001

2004-02-18  Tim Janik 	# e1e986e4166a7a89b58c8a73235c5417607eeede

	website updates

	svn path=/trunk/; revision=2000

2004-02-18  Tim Janik 	# 018312ff0a7b924f62162507ea6c0f7ada0f708e

	lower-case grabbed key events.

	Wed Feb 18 01:17:44 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstauxdialogs.c: lower-case grabbed key events.

	        * beast-gtk/bstkeybindings.[hc]: don't auto-advance the selected
	        function, this is usefull only to setup basic key bindings. cosmetic
	        fixups. support non-editable keybinding displays. lower-case key
	        value for lookups.

	        * beast-gtk/bstmain.c: moved rc-file parsing logic into
	        bst_preferences_load_rc_files().

	        * beast-gtk/bstpatterncolumns.[hc]: select monospace font for notes.
	        added key-event handling to notes.

	        * beast-gtk/bstpatternctrl.[hc]: invoke pattern view/pattern column
	        keypress handlers. split up key bindings into genric ones and piano
	        bindings. added more key binding functions. provide a good set of
	        default movement/etc bindings for the generic set.

	        * beast-gtk/bstpatternview.c: proeprly queue expose events in response
	        to model changes. destroy focus rectangle upon column changes.
	        change focus rectangle color due to widget focus changes. added
	        fucntions to query focus cell and to dispatch key events.

	        * beast-gtk/bstpianoroll.c:
	        * beast-gtk/bsteventroll.c: guard against unrealized windows when
	        queueing exposes.

	        * beast-gtk/gxk/gxkscrollcanvas.[hc]: redraw markers upon focus changes.

	        * beast-gtk/bstpreferences.[hc]: added generic key binding page,
	        non editable currently, since saving/loading generic key bindings
	        is currently disabled. moved rc-file parsing logic from bstmain.c
	        into bst_preferences_load_rc_files(). fixed copyright.

	        * beast-gtk/bstgconfig.[hc]: support rc-version setting on records.
	        fixed copyright.

	svn path=/trunk/; revision=1999

2004-02-18  Tim Janik 	# 1279a1cc310c4c4ead0505b0e4f3201b3d1c22bc

	fixed missing to_lower().

	Wed Feb 18 01:40:53 2004  Tim Janik  <timj@gtk.org>

	        * sfinote.c (is_note_letter): fixed missing to_lower().

	svn path=/trunk/; revision=1998

2004-02-18  Tim Janik 	# 9a69492fc93c5b5f00f6faaeab15f18b5f91f335

	in addition to parsing notes like Cis-1, support #C-1 and C#-1. also,

	Wed Feb 18 01:36:01 2004  Tim Janik  <timj@gtk.org>

	        * sfinote.c (sfi_note_from_string_err): in addition to parsing notes
	        like Cis-1, support #C-1 and C#-1. also, support H as alias for B.

	svn path=/trunk/; revision=1997

2004-02-18  Tim Janik 	# f6c6a781e512a0010ab21bb21311cda2cf1afee4

	in addition to parsing notes like Cis-1, support #C-1 and C#-1.

	Wed Feb 18 01:36:01 2004  Tim Janik  <timj@gtk.org>

	        * sfinote.c (sfi_note_from_string_err): in addition to parsing notes
	        like Cis-1, support #C-1 and C#-1.

	svn path=/trunk/; revision=1996

2004-02-17  Tim Janik 	# a6538ebc3810069786dec45198873fbd48cd488d

	updates

	svn path=/trunk/; revision=1995

2004-02-17  Tim Janik 	# a2b66679b4d52de5bd4f1329c5778fd0a51c92fb

	fire up layout configuration dialog when configure button is clicked.

	Tue Feb 17 01:40:21 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c: fire up layout configuration dialog when
	        configure button is clicked.

	        * beast-gtk/bstpatterncolumns.[hc]: made note column channel sensitive.
	        support spacing and dotted line mode for vbar columns. implemented
	        layout dialog, and column layout parser, as well as a column constructor.

	        * beast-gtk/bstpatternview.[hc]: adapt to column layout facilities,
	        added bst_pattern_view_set_layout().

	        * beast-gtk/dialogs/gadgets-beast.xml: added configure button to pattern
	        view dialog. added pattern-editor-layout-box to implement a layout
	        editor dialog.

	        * beast-gtk/dialogs/gadgets-standard.xml: changed GtkEntry defaults to
	        automatically activate the toplevel default widget upon GDK_Return.
	        adjusted hstock-button, got rid of unused button definitions.

	        * beast-gtk/gxk/gxkdialog.[hc]: added convenience function
	        gxk_dialog_new_gadget() to create a dialog with gadget child.

	        * beast-gtk/gxk/gxktexttools.[hc]: added convenience function
	        gxk_scroll_text_create_for() to create a scroll text with parent.

	svn path=/trunk/; revision=1994

2004-02-17  Tim Janik 	# 2aa1a2143c8c4b6c5ab62a9153f3b4cca6954f2f

	added missing files

	svn path=/trunk/; revision=1993

2004-02-17  Tim Janik 	# 632be2f104f34eb9a1a9cb056b5a2aa66362efd1

	added support for channel arguments, to limit effect of these functions to

	Tue Feb 17 01:48:50 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.[hc]:
	        (bse_part_list_notes):
	        (bse_part_select_notes):
	        (bse_part_select_notes_exclusive): added support for channel arguments,
	        to limit effect of these functions to a specific channel, unless
	        channel=~0 was passed. adapted callers.

	        * bserecords.idl: enrich PartNote by a channel field. adapted callers.

	svn path=/trunk/; revision=1992

2004-02-16  Stefan Westerfeld 	# 5c5ac9715422d8d2b75c794742a3f903d65ebd6a

	Install harmonic transposition script.

	Mon Feb 16 18:53:58 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* library/scripts/Makefile.am: Install harmonic transposition script.

		* library/scripts/part-harmonic-transposer.scm: Harmonic transposition
		script: allows to transpose notes, allowing to convert between major
		and minor scales.

	svn path=/trunk/; revision=1991

2004-02-16  Tim Janik 	# 01e1edc64f8e7b71dfccfc199607a31f3f1709ff

	disable debugging prints

	svn path=/trunk/; revision=1990

2004-02-16  Tim Janik 	# a87aa7fbdd473c8e9e18d3f2cecf06299563c238

	implemented key grabbing dialog.

	Mon Feb 16 12:00:17 2004  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstauxdialogs.[hc]: implemented key grabbing dialog.

		* beast-gtk/bstkeybindings.[hc]: implemented key binding rcfile and
		and configuration abilities.

		* beast-gtk/bstmain.c: parse ~/.beast/keyrc.

		* beast-gtk/bstpartdialog.c: display pattern view.

		* beast-gtk/bstpatternview.[hc]: new widget, implementing a pattern view
		for BsePart.

		* beast-gtk/bstpatterncolumns.[hc]: new file, implement pattern view
		column renderers, currently has column implementations for notes
		and vertical bars.

		* beast-gtk/bstpatternctrl.[hc]: new file, implementing pattern view
		control actions / key binding functions.

		* beast-gtk/bsttrackroll.c:
		* beast-gtk/bstpianoroll.c: adapt to GxkScrollCanvas changes.

		* beast-gtk/bstpreferences.[hc]: added preferences page for pattern view
		key bindings.

		* beast-gtk/bstrecords.idl: added structures used to save key bindings
		in rc files.

		* beast-gtk/dialogs/gadgets-beast.xml: adapt GUI to display pattern
		views.attach the event roll popup menu to the event roll (not piano
		roll). added pattern editor keybinding dialog.

		* beast-gtk/dialogs/gadgets-standard.xml: make notebooks scrollbale
		by default. do not give scrollbars focus by default, as focussed
		scrollbars are mostly useless with gtk+-2.0. added hstock-button.

		* beast-gtk/gxk/gxkaction.c: auto-update widget actions upon publishing
		and upon widget realization.

		* beast-gtk/gxk/gxkutils.[hc]:
		(gxk_tree_selection_force_browse): reenable automatic selection of tree
		rows for BROWSE selection modes.
		(gxk_menu_attach_as_submenu): propagate changes in submenu sensitivity
		up the menu hierarchy if parent submenus also have sensitivity handlers
		setup. fixes out-of-order submenu updates leading to incorrectly disabled
		submenus.
		(gxk_tree_view_select_index): added simple tree row selection function.

		* beast-gtk/gxk/gxkscrollcanvas.[hc]: support dynamic allocation of
		pango layouts pr widget instance (not per derived class). properly
		handle ::direction_changed signals. fixed small bug wrg marker
		realization. made adjustment value constrain code more robust.
		(gxk_scroll_canvas_setup_marker): properly redraw markers.
		(gxk_scroll_canvas_get_pango_layout): demand create pango layout
		if necessary.
		(gxk_scroll_canvas_peek_pango_layout): retrieve an existing pango
		layout.
		(gxk_scroll_canvas_scroll_to): scroll to an exact point.
		(gxk_scroll_canvas_make_visible): scroll the canvas into a position,
		so that the given rectangle is visible.

		* beast-gtk/icons/*.png: more stock images added.

	svn path=/trunk/; revision=1989

2004-02-16  Tim Janik 	# 24095f9aa377e5af0f12abeb3a4f887352226fec

	renamed from bse_part_list_notes_crossing(), added an argument

	Thu Feb 12 10:48:26 2004  Tim Janik  <timj@gtk.org>

	        * bsepart.[hc]:
	        (bse_part_list_notes): renamed from bse_part_list_notes_crossing(),
	        added an argument include_crossings. fixed possible dups of notes
	        starting exactly at tick for include_crossings.

	svn path=/trunk/; revision=1988

2004-02-16  Tim Janik 	# 85a53d10ab915403e16172ce22f7e07a29f9c967

	strip whitespaces from string before attempting to parse notes.

	Mon Feb 16 12:35:33 2004  Tim Janik  <timj@gtk.org>

	        * sfinote.c: strip whitespaces from string before attempting to parse
	        notes.

	        * sfiserial.c: avoide unnecessary newlines before sequences and records.

	svn path=/trunk/; revision=1987

2004-02-15  Tim Janik 	# d28574c98359efbce4c82f4e00cb97b88dbad1e5

	add /Part/ scripts as "part-scripts" actions to the piano roll dialog, so

	Sun Feb 15 16:14:17 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c: add /Part/ scripts as "part-scripts"
	        actions to the piano roll dialog, so users can execute per-part scripts.

	        * beast-gtk/dialogs/gadgets-beast.xml: add "Utilities" submenu
	        to the piano roll popup menu, listing "part-scripts" actions.

	        * beast-gtk/dialogs/gadgets-standard.xml: allow caller arguments
	        of per-branch=, per-list= and per-list= for gadget-factory and
	        menu-factory. defined menu-action-separator which is generated only
	        if a specific action-list is published.

	        * beast-gtk/gxk/gxkgadgetfactory.c: handle empty string arguments for
	        ::name, ::per-branch, ::per-list and ::per-action properties by assuming
	        NULL automatically. ignore publishing of empty action-lists.

	        * beast-gtk/gxk/gxkutils.c (gxk_menu_check_sensitive): ignore tear-off
	        menu items when checking submenus for activatable contents.

	svn path=/trunk/; revision=1986

2004-02-14  Tim Janik 	# cebe50065c9205653f33544a96aa4cc558122a67

	applied fix from Rasmus Kaj <kaj@e.kth.se> to find out the GMT offset on

	Sat Feb 14 08:53:03 2004  Tim Janik  <timj@gtk.org>

	        * sfitime.c (_sfi_init_time): applied fix from Rasmus Kaj <kaj@e.kth.se>
	        to find out the GMT offset on FreeBSD and linux. edited to preserve
	        portability history.

	svn path=/trunk/; revision=1985

2004-02-13  Tim Janik 	# 0b95272b6fb75eb94935978c389598dff7416eab

	link to footnotes announcement.

	svn path=/trunk/; revision=1984

2004-02-12  Danilo Šegan 	# fdec78c759c37a80c1c00585c960c0b1e683fded

	Updated Serbian translation.

	svn path=/trunk/; revision=1983

2004-02-11  Stefan Westerfeld 	# 74ef588b5a7ff443548e6c2f6d458db9d6961f29

	updates

	svn path=/trunk/; revision=1982

2004-02-11  Stefan Westerfeld 	# c1d0377d0ee56f4552fd34589de4b13f987ebdc3

	updates

	svn path=/trunk/; revision=1981

2004-02-11  Tim Janik 	# 2310d021ef257984c05224db35fd02696e14dcfd

	rotate news and announce release.

	Wed Feb 11 11:19:04 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-oldnews.texi:
	        * docs/site-news.texi: rotate news and announce release.

	svn path=/trunk/; revision=1980

2004-02-11  Tim Janik 	# 257c2b5c155ad6361407902d64f39096cb17aac0

	released 0.6.0, binary age 0, interface age 0.

	Wed Feb 11 09:29:29 2004  Tim Janik  <timj@gtk.org>

	        * released 0.6.0, binary age 0, interface age 0.

	svn path=/trunk/; revision=1978

2004-02-11  Tim Janik 	# ce4a3ccea695f9cc599258efbe3562ef7a48a83b

	removed intltool-modules/XML/Parser/Style/OrigTree.pm, intltool .030 doesn't come with it

	svn path=/trunk/; revision=1977

2004-02-11  Tim Janik 	# 87589cb3313728690d1bd50747cb5d6b8061578c

	improved rand() distribution of string selection algorithm to reduce

	Wed Feb 11 09:14:44 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsplash.c (splash_select_string): improved rand()
	        distribution of string selection algorithm to reduce probability
	        for sequential dups to (1/n)^2.

	svn path=/trunk/; revision=1976

2004-02-11  Tim Janik 	# 9b9d5c55b21a22019e100c05ff395ea4f5ac043c

	added bseevaluator.gen-idl.h dependancy

	svn path=/trunk/; revision=1975

2004-02-11  Tim Janik 	# fa71d0b3f61704b456430bf231c31284b4c04eba

	release updates

	svn path=/trunk/; revision=1974

2004-02-11  Tim Janik 	# 9182f4b8f8561f9ffcb0908b456f2d753078026d

	release updates

	svn path=/trunk/; revision=1973

2004-02-11  Tim Janik 	# 159c75f787362067307c05c993061403cf7426d5

	translator credit updates

	svn path=/trunk/; revision=1972

2004-02-11  Tim Janik 	# 90ab89b988e0a780cfe430bddf5ca698f35f10bb

	removed debugging code

	svn path=/trunk/; revision=1971

2004-02-11  Tim Janik 	# 033d9abf640ace5251787d0e0a3a0354cbe55038

	applied sfi_seq_append_empty() code simplification patch from Stefan

	Wed Feb 11 08:09:57 2004  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.c: applied sfi_seq_append_empty() code simplification
	        patch from Stefan Westerfeld.

	        * sfiglue.c: same here.

	svn path=/trunk/; revision=1970

2004-02-11  Tim Janik 	# 060dfbbbf3820c5698f787b8b1fef2f66e900fa5

	removed, tehres sfidl.1 now.

	Wed Feb 11 02:36:30 2004  Tim Janik  <timj@gtk.org>

	        * docs/bse-plugin-generator.1.texi: removed, tehres sfidl.1 now.

	        * docs/*.1.texi: updated links to point to sfidl.1.

	        * docs/sfidl.1.texi: updated documentation of command line options.

	        * docs/beast.1.texi: updates.

	        * docs/site-navigation.xml: link to sfidl-manual instead of sfild.1.

	svn path=/trunk/; revision=1969

2004-02-11  Tim Janik 	# a3ff25f62bf43c797aa538474cfbb009bea843f8

	removed these files, logic provided by GxkScrollCanvas now. adapted

	Wed Feb 11 02:04:29 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdragutils.[hc]:
	        * beast-gtk/bstmarker.[hc]: removed these files, logic provided by
	        GxkScrollCanvas now. adapted namespace in callers.

	        * beast-gtk/bstsnetrouter.c: provide Authors and License information
	        about modules in palette view.

	        * beast-gtk/bstdraggroup.c:
	        * beast-gtk/bstdragpattern.c: removed, code is unused for a long time.

	svn path=/trunk/; revision=1968

2004-02-11  Tim Janik 	# be89331cbde3b05356934aee05dfdc25bceb411f

	let base_level properly default to 0.

	Wed Feb 11 01:43:49 2004  Tim Janik  <timj@gtk.org>

	        * bseamplifier.idl: let base_level properly default to 0.

	        * bseprocedure.proc: implement accessors for authors and license
	        about types.

	svn path=/trunk/; revision=1967

2004-02-11  Tim Janik 	# a5371d1a100efd25d81e74b2a56bf377d1323483

	removed this file.

	Wed Feb 11 02:08:04 2004  Tim Janik  <timj@gtk.org>

	        * bse-plugin-generator.c: removed this file.

	        * Makefile.am: install sfidl instead of bse-plugin-generator.

	svn path=/trunk/; revision=1966

2004-02-10  Tim Janik 	# edd2de9b1f928bce7888919631f5a3e1eb16244c

	confine selection rectangle to 16bit coordinates to avoid drawing

	Tue Feb 10 10:22:00 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventroll.c: confine selection rectangle to 16bit
	        coordinates to avoid drawing artefacts.

	        * beast-gtk/bstpianoroll.c: overhaul of the keyboard drawing code.
	        fix black key section identification. confine selection rectangle
	        to 16bit coordinates to avoid drawing artefacts.
	        properly center text drawn in hpanel.

	        * beast-gtk/bsttrackroll.[hc]: ported BstTrackRoll to derive from
	        GxkScrollCanvas. lots of fixups, cleanups and changes.
	        use pango to draw part names. properly align text with GtkEntry
	        allocation for renames. moved marker logic into GxkScrollCanvas.

	        * beast-gtk/bsttrackrollctrl.c:
	        * beast-gtk/bsttrackview.c: adapted to BstTrackRoll API changes.

	        * beast-gtk/gxk/gxkscrollcanvas.[hc]: implemented markers. these
	        are free positionable drawing entities with backing store, on
	        any of the widget's windows, which can be moved without exposure
	        event generation. improved scrolling behaviour once more, due
	        to a fix in the expose region handling code, windows can now
	        scroll horizontally and vertically simultaneously. removed useless
	        left-overs.

	        * beast-gtk/gxk/gxkutils.[hc] (gxk_tree_view_get_row_area): added
	        content_area boolean switch to restrict row area to the region
	        actually used for cells in a GtkTreeView.

	svn path=/trunk/; revision=1965

2004-02-09  Tim Janik 	# 79cf9c5499b6f6aaee74aeddeb95cb94797a06e8

	merge skin reset code with background reset and style/color setup code.

	Mon Feb  9 05:15:52 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkscrollcanvas.[hc]: merge skin reset code with
	        background reset and style/color setup code.
	        added support for pango layout allocation and deallocation.

	        * beast-gtk/bstpianoroll.c: draw hpanel tact/note numbers with a
	        pango layout. widen expose area to avoid drawing artefacts. fixed
	        quarter note :1 being drawn on top of tact number. request height
	        for hpanel from text height.

	svn path=/trunk/; revision=1964

2004-02-08  Tim Janik 	# ff9616176ef7739d65d44f5696ab7d95f801468c

	ported to derive from GxkScrollCanvas. added skin support, similar to

	Mon Feb  9 00:23:14 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventroll.[hc]: ported to derive from GxkScrollCanvas.
	        added skin support, similar to piano roll.

	        * beast-gtk/bsteventrollctrl.c:
	        * beast-gtk/bstpartdialog.c: call GxkScrollCanvas functions where necessary.
	        enable h/v scrolling for canvas.

	        * beast-gtk/bstpianoroll.c: removed focus handlers.

	        * beast-gtk/bstrecords.idl: added control event roll fields to Skin record.

	        * beast-gtk/gxk/gxkscrollcanvas.c: profive default focus-in/focus-out
	        handlers. properly default initialize window cursors. export
	        gxk_scroll_canvas_get_layout(). size request all children. added
	        gxk_scroll_canvas_get_canvas_size(). added reallocate_children() method.
	        request expose events for widget->window, fixes redrawing bugs.
	        auto-unset parent-window on children from unrealize().
	        draw panel frames in scroll_canvas_draw_window().
	        added hscrollable and vscrollable variables to class to control
	        canvas scrolling behaviour.

	        * beast-gtk/gxk/gxktest.c: fixed up GxkScrollCanvas test code.

	        * library/skins/*.skin: adapt to event roll skinning ability.

	svn path=/trunk/; revision=1963

2004-02-08  Tim Janik 	# 6091068690e93a057c56c3b122dedd8a3c901d66

	small markup fix

	svn path=/trunk/; revision=1962

2004-02-08  Tim Janik 	# 7a8cce14b034f61baf9d5bb99e70fa6febed75b0

	improved About section.

	Sun Feb  8 05:53:14 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-about.texi: improved About section.

	        * docs/site-news.texi: provide feedback link.

	svn path=/trunk/; revision=1961

2004-02-08  Tim Janik 	# 4bf4d828a7c85376d6aeee01e99c67976b79a65d

	increased version to 0.6.0-rc1, binary 0, interface 0.

	Sun Feb  8 03:27:44 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: increased version to 0.6.0-rc1, binary 0, interface 0.

	        * beast-gtk/bsteventrollctrl.c: adapt to API changes in BsePart.
	        refuse to move single control events to ticks where tey'd overlap
	        with events of the same type.

	        * beast-gtk/bstpianorollctrl.c: adapt to BsePart API changes.

	svn path=/trunk/; revision=1960

2004-02-08  Tim Janik 	# 4b0e17f1430b29a6e513310228c7b5358a4546cd

	provide float and double versions of BSE_MAX_FINE_TUNE.

	Sun Feb  8 03:32:11 2004  Tim Janik  <timj@gtk.org>

	        * bseconstvalues.h: provide float and double versions of
	        BSE_MAX_FINE_TUNE.

	        * bsepart.[hc]:
	        comletely reimplemented the basic data structures. switched to binary
	        searchable arrays rather than implementing one from scratch.
	        keep control events in their own array.
	        create an array per channel, each channel array may only contain one
	        note per tick, so polyphonic notes require multiple channels.
	        keep a list of crossing siblings per note to avoid O(n_notes)
	        complexity to expand regions. added ::n_channels property.
	        coalesce multiple control events of the same type at the same tick.
	        changed serialization format to be more compact for storing multiple
	        notes and control events. kept compat code to parse old format.

	        * bsepart.proc: adapted to BsePart API changes. added a channel argument
	        to insert-note(), introduced insert-note-auto() which preserves the old
	        channel-agnostic behaviour of insert-note().

	        * bsessequencer.c: adapt to BsePart API changes.

	svn path=/trunk/; revision=1959

2004-02-08  Tim Janik 	# 5dad6a571257841e623a790a464d65fe408437a4

	only match partial choice names starting at word boundaries.

	Sun Feb  8 03:48:36 2004  Tim Janik  <timj@gtk.org>

	        * sfitypes.c (sfi_choice_match_detailed): only match partial choice
	        names starting at word boundaries.

	        * sfiustore.[hc]: added sfi_upool_list() function to list ids in a pool.

	        * sfivalues.[hc]:
	        (sfi_value_choice2enum):
	        (sfi_choice2enum): match choices against enum value names only, since
	        nicks are going to be used for the GUI and since the partial and
	        canonifying matching supported by sfi_choice_match_detailed() already
	        xceeds the flexibility provided by nicks by orders of magnitude.
	        (sfi_choice2enum_checked): introduced error-checking version of
	        sfi_choice2enum().
	        (sfi_enum2choice): provide choices in schme-canonified form (lower
	        case, delimited by '-').

	svn path=/trunk/; revision=1958

2004-02-06  Tim Janik 	# 6a1bb503a7c4866a37056f7e634c87b5969a7cb9

	new function, forcing updates on widgets which are regulated by action

	Fri Feb  6 20:53:09 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkaction.[hc] (gxk_action_list_force_regulate): new
	        function, forcing updates on widgets which are regulated by
	        action lists via gxk_action_list_regulate_widget().

	        * beast-gtk/gxk/gxkgadgetfactory.c: force post-activate (for
	        buttons, post-clicked) regulation of regulate= target widgets.

	        * beast-gtk/gxk/gxkdialog.c (gxk_dialog_key_press_event): only
	        give control/alt accelerators precedence over focus widget (ignoring
	        modifiers like num lock).

	        * beast-gtk/bstmain.c (main): reverted recent change, always save
	        rc-file.

	svn path=/trunk/; revision=1957

2004-02-06  Tim Janik 	# 78d71f2070df2172b35749b64e9d3a1ce62413e4

	support skinrc files in ~/.beast/skins/.

	Fri Feb  6 15:29:42 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstdefs.h:
	        * beast-gtk/bstmain.c: support skinrc files in ~/.beast/skins/.

	        * docs/site-news.texi: permanently announce irc channel and
	        mailing list on the front page.

	svn path=/trunk/; revision=1956

2004-02-06  Miloslav Trmac 	# bd159365dd4aedb5ddc6cea45ca4990b66de6861

	Updated Czech translation.

	2004-02-06  Miloslav Trmac  <mitr@volny.cz>

	        * cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1955

2004-02-04  Stefan Westerfeld 	# 1da784ad987b10d0a676558bc473750b2afa225c

	Speed optimization: Lookup the GQuark for the sfi log key in the init

	Wed Feb  4 22:37:56 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfilog.c: Speed optimization: Lookup the GQuark for the sfi log
		key in the init function instead of during each log message.

		* sfivalues.c: Speed optimization: Use sfi_categorize_type() to find
		out which type src_value has in sfi_value_copy_deep(), instead of
		multiple if statements.

	svn path=/trunk/; revision=1954

2004-02-04  Stefan Westerfeld 	# db6767d5f46471f72b4747ce5a10d89f7e70b731

	updates

	svn path=/trunk/; revision=1953

2004-02-04  Tim Janik 	# 4000360ba875f6227ebaebf29d20386f7d984a51

	updates

	svn path=/trunk/; revision=1952

2004-02-04  Tim Janik 	# 83f74d9eeed1eb9b21da22e41e679efa8971dd72

	distcheck fixes.

	Wed Feb  4 06:15:21 2004  Tim Janik  <timj@gtk.org>

	        * distcheck fixes.

	        * beast-gtk/Makefile.am: added dependancies for bsegentypes.[hc]
	        on sfidl. turned source file dependancies on generated files
	        into obejct file dependancies, so make can get it's VPATHs right.
	        don't ship build files anymore (since all tools should be
	        available at build time to generate them), generate build files
	        in the build directory. INCLUDE fixes.

	        * plugins/evaluator/Makefile.am:
	        * plugins/Makefile.am:
	        * bsw/Makefile.am:
	        * bse/Makefile.am: use sfidl instead of bse-plugin-generator, fix
	        idl includes.

	        * beast-gtk/bstmain.c: added new language translators to about box.

	        * docs/site-development.texi: updated translation links.

	        * NEWS: announce translations.

	svn path=/trunk/; revision=1951

2004-02-03  Tim Janik 	# 649862005172e9218f2995fff8105428648289ac

	applied fixes suggested by Sam Hocevar <sam@zoy.org>.

	Wed Feb  4 00:07:12 2004  Tim Janik  <timj@gtk.org>

	        * applied fixes suggested by Sam Hocevar <sam@zoy.org>.

	        * bse/Makefile.am: add libsfi.la to libbse.la ldadd,
	        since we use libtool-1.5 now.

	        * bsw/Makefile.am: add libbse.la to libbsw.la ldadd.

	svn path=/trunk/; revision=1950

2004-02-03  Tim Janik 	# 9582ff0d93edf102036b09667cf6f449bfc88c49

	minor improvement in passing gettimeofday entrophy into srand().

	Tue Feb  3 23:29:30 2004  Tim Janik  <timj@gtk.org>

	        * bsemain.c (bse_init_core): minor improvement in passing gettimeofday
	        entrophy into srand().

	        * bseprocedure.[hc]: implemented procedure class caching, which keeps
	        procedure classes alive for ca. 500ms after their last call. this gets
	        rid of a lot of unnecessary class (and paramspec) creations and
	        destructions.

	svn path=/trunk/; revision=1949

2004-02-02  Miloslav Trmac 	# 0294499813d9ff6b032d474a33a5deb2b0fb7012

	Updated Czech translation.

	2004-02-02  Miloslav Trmac  <mitr@volny.cz>

	        * cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1948

2004-02-02  Tim Janik 	# 529c17ad720889c6076a12fc2ad39f010cceb8cd

	added missing files

	svn path=/trunk/; revision=1947

2004-02-02  Tim Janik 	# d758f35185e17d7a24663c4f9189f8626010464b

	version update to 0.5.7rc1, binary 0, interface 0.

	Mon Feb  2 16:17:46 2004  Tim Janik  <timj@gtk.org>

	        * configure.in: version update to 0.5.7rc1, binary 0, interface 0.

	svn path=/trunk/; revision=1946

2004-02-02  Tim Janik 	# 17d684cb37f266b427ab591b6bc7aa8abe9bf17c

	fixed typo.

	Mon Feb  2 02:06:49 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: fixed typo.

	        * biogreen.skin:
	        * images/biogreen.jpg: added skin.

	svn path=/trunk/; revision=1945

2004-02-01  Tim Janik 	# 97590172ac64290ba0bfc6ddb4e21dedaea0c2f7

	set cache size to 0, this frees pixmaps as soon as they are unused.

	Mon Feb  2 00:30:19 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkimagecache.c: set cache size to 0, this frees
	        pixmaps as soon as they are unused.

	        * beast-gtk/gxk/gxkscrollcanvas.c: fixed list removal bug that
	        caused crashes on skin updates.

	        * library/skins/blueimpress.skin:
	        * library/skins/brownforms.skin:
	        * library/skins/silvervein.skin:
	        * library/skins/images/blueimpress.jpg:
	        * library/skins/images/brownforms.jpg:
	        * library/skins/images/silvervein.png: added new skins.

	svn path=/trunk/; revision=1944

2004-02-01  Tim Janik 	# ee36e5f51ef1acb5ff662e409c441caed1ce5c42

	provide action list for available skins.

	Sun Feb  1 18:38:15 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: provide action list for available skins.

	        * beast-gtk/dialogs/gadgets-beast.xml: put skin actions
	        under View/Skins.

	        * beast-gtk/bstrecords.idl: added some tooltips, support skin name.

	        * beast-gtk/bstmain.c: added --skinrc=... option to set skinrc file
	        name. added "demo" and "skins" directory print-out.

	        * beast-gtk/bstskinconfig.[hc]: support setting skin file names
	        via command line options, got rid of BEAST_SKINRC env hack.

	        * configure.in: added skins/ and skins/images/ directories,
	        define isntallation path for skins.

	        * beast-gtk/bstutils.[hc]: renamed and rewrote bst_file_scan_song_name()
	        into bst_file_scan_find_key() to be used with files other than songs.

	        * data/Makefile.am: generate BST_PATH_SKINS config setting.

	        * library/skins/: new directory for skins shipped with beast.
	        * library/skins/images: new directory holding images needed by skins.

	        * library/skins/white.skin: plain white skin, coming close to the
	        pianor roll look from 0.5.6.

	        * library/skins/images/moonpaper.png:
	        * library/skins/moonpaper.skin: added Moon Paper skin.

	svn path=/trunk/; revision=1943

2004-02-01  Denis Lackovic 	# d5274ec71fcebc2e7bf9637e828b34ec5ba95e46

	*** empty log message ***

	svn path=/trunk/; revision=1942

2004-02-01  Tim Janik 	# 0aec08dee768edb374ee4a37b4495962bf051ee0

	skin configuration handling, implemented skinrc with versioning. skinrc

	Sun Feb  1 15:46:45 2004  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstskinconfig.[hc]: skin configuration handling,
		implemented skinrc with versioning. skinrc filename can be
		overridden via BEAST_SKINRC environment variable.

		* beast-gtk/bstparam-color-spinner.c: provide input widget
		to edit colors.

		* beast-gtk/bstauxdialogs.[hc]: provide auxillary colorselection
		dialog. patched up GtkColorSelection to have activate-default
		behaviour for Return and KP_Enter.

		* beast-gtk/bstdefs.h: moved beast rcfile from ~/.beastrc to
		~/.beast/beastrc.

		* beast-gtk/bstfiledialog.[hc]: implement simple file selection case.

		* beast-gtk/bstgconfig.[hc]: started internal versioning for beastrc.
		(bst_rc_dump): ensure path-to-rc-file exists (~/.beast).

		* beast-gtk/bstmain.c: load skinrc, only save beastrc at program
		end if it was saved from a different beast version. save
		.bserc unconditionally.

		* beast-gtk/bstparam-searchpath.c: grab focus o nbutton clicks.
		implemented "filename" pspec option.

		* beast-gtk/bstpianoroll.[hc]: made h/v grid colors and background
		configurable through BstSkinConfig, based on GxkScrollCanvasClass
		skin support. draw h/v grid in multiple passes to have lines
		properly overlapping.

		* beast-gtk/bstpreferences.[hc]: added editing facilities for
		skin settings.

		* beast-gtk/bstrecords.idl: some cleanups.
		added SkinConfig - skin configuration record.

		* beast-gtk/gxk/gxkimagecache.[hc]: implement caching of
		pixmaps, rendered from image file names.

		* beast-gtk/gxk/gxkparam.[hc]: support explicit page-stepping
		specification for linear adjustments.

		* beast-gtk/gxk/gxkscrollcanvas.[hc]: implemented background
		rendering based on pixmaps. added skin-change support
		by means of rerendering background pixmap and recreating
		color GCs for all currently realized scroll-canvas widgets.
		optimized redrawing of L-shaped regions during scrolling.

		* beast-gtk/gxk/gxkutils.[hc]: added convenience functions
		to fill GdkColor structures.

		* beast-gtk/icons/colorselector.png:
		* beast-gtk/icons/browse-image.png:
		* beast-gtk/icons/browse-image.xcf: added stock images.

	svn path=/trunk/; revision=1941

2004-02-01  Tim Janik 	# b5cee7ccff1d177664ad7773c05dc345ea62bc83

	added sfi_make_dirname_path() to easily create all directories required by

	Sun Feb  1 16:10:42 2004  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.[hc]: added sfi_make_dirname_path() to easily
	        create all directories required by a filename.
	        added sfi_path_get_filename() to create absolte filenames,
	        properly expanding ~ and ~USER.

	        * sfiserial.c: serialize :hex ints by writing out hexadecimal numbers.

	svn path=/trunk/; revision=1940

2004-01-31  Stefan Westerfeld 	# 3ace44a9be18591725424c759b89bf027ec12db3

	Fixed bug in validation: instead of validating the procedure input values

	Sat Jan 31 23:37:22 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bseprocedure.c (call_proc): Fixed bug in validation: instead of
		validating the procedure input values before and after the procedure
		call, validate the procedure inputs values before, and procedure
		output values after executing a procedure.

	svn path=/trunk/; revision=1939

2004-01-31  Tim Janik 	# 5d8834eeaee668132a0c37e9928d86c44e25a232

	applied fix to not append trailing characters to the 6th comparison

	Sat Jan 31 23:06:39 2004  Tim Janik  <timj@gtk.org>

	        * autogen.sh (check_version): applied fix to not append trailing
	        characters to the 6th comparison number. reordered expressions
	        for readability improvements.

	svn path=/trunk/; revision=1938

2004-01-30  Tim Janik 	# c3491ea26b134b069ad3065cb1fcd189b1ef71c7

	refactored and generalized scrolling, h/v panel layout and drawing logic

	Fri Jan 30 23:56:11 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkscrollcanvas.[hc]: refactored and generalized
	        scrolling, h/v panel layout and drawing logic from bstpianoroll
	        into a new widget. GxkScrollCanvas supports panels on all four
	        sides of a canvas, and dragging in each window.

	        * beast-gtk/bstpartdialog.c: fixed callers.

	        * beast-gtk/bstpianoroll.[hc]: derive from GxkScrollCanvas,
	        adapted to use GxkScrollCanvas code, threw out every
	        functionality that GxkScrollCanvas now implements.

	        * beast-gtk/bstpianorollctrl.c: fixed callers.

	        * beast-gtk/bsteventroll.c: disable tick<->pixel transformation for
	        the hadjustment, so it always contains pixel values.

	        * beast-gtk/gxk/gxktest.c: added scroll_canvas_test().

	svn path=/trunk/; revision=1937

2004-01-29  Tim Janik 	# a14b2d4164d2d905b4d0f773bf6b253a639f4d8f

	fix link

	svn path=/trunk/; revision=1936

2004-01-29  Tim Janik 	# 97afdc914eea7e108fb0908ee86d2f5a846b3c45

	cvs copied from sfidl.texi.

	Thu Jan 29 03:36:24 2004  Tim Janik  <timj@gtk.org>

	        * docs/sfidl-manual.texi: cvs copied from sfidl.texi.

	        * docs/sfidl.texi: removed.

	svn path=/trunk/; revision=1935

2004-01-29  Stefan Westerfeld 	# e0247d68dd7da29982e29d959db0a27767021af2

	More work.

	svn path=/trunk/; revision=1934

2004-01-29  Stefan Westerfeld 	# 775593b29990b7f124fcda05b6468ed57638b0b1

	More work.

	svn path=/trunk/; revision=1933

2004-01-28  Tim Janik 	# bd87868d111d83709ee61377bc9637d5d9ae5da6

	updates

	svn path=/trunk/; revision=1932

2004-01-28  Tim Janik 	# 84f66bbe424ede9014bb528b0a6331c098c2945e

	added snet_font_size property, defaulting to 10 pixels (formerly 12).

	Wed Jan 28 16:42:10 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl: added snet_font_size property, defaulting
	        to 10 pixels (formerly 12).

	        * beast-gtk/bstcanvassource.c: fetch font size from preferences.

	svn path=/trunk/; revision=1931

2004-01-28  Tim Janik 	# 287e54911ae56de9d047b598021f072f118db247

	added afidl.1.texi.

	Wed Jan 28 15:41:15 2004  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: added afidl.1.texi.

	        * docs/generated/Makefile.am: build and install sfidl.1.

	        * docs/sfidl.1.texi: exchange bse-plugin-generator for sfidl
	        for the most parts.

	svn path=/trunk/; revision=1930

2004-01-28  Tim Janik 	# 33861ea9a704196cd7802be50b1564c0f4486b35

	remove --module option. select the core C++ language binding via

	Wed Jan 28 15:46:16 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: remove --module option. select the core
	        C++ language binding via --core-cxx or via --plugin.

	        * sfidl-cxx.cc: fixed option description.

	        * bse-plugin-generator.cc: adapt to --plugin option.

	svn path=/trunk/; revision=1929

2004-01-28  Tim Janik 	# 8717d171827bb9717a49957f3c4d20fc67dec948

	cvs copied from bse-plugin-generator.1.texi.

	Wed Jan 28 15:25:55 2004  Tim Janik  <timj@gtk.org>

	        * docs/sfidl.1.texi: cvs copied from bse-plugin-generator.1.texi.

	svn path=/trunk/; revision=1928

2004-01-28  Miloslav Trmac 	# 8d0f8b3bd8e27a8f870fdd85f64e501ea92d7a8f

	Fixed Czech translation

	svn path=/trunk/; revision=1927

2004-01-28  Tim Janik 	# dd4cc18a768930fa4baa4181775d563b539db85e

	don't swallow requests while inactive, send replies with 0-length fblocks

	Wed Jan 28 11:10:18 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.cc: don't swallow requests while inactive, send replies
	        with 0-length fblocks instead (fixes GUI loosing track of sniffer
	        data after stopping the synth).

	svn path=/trunk/; revision=1926

2004-01-27  Tim Janik 	# aac8f8cd2725eec3f5f59fa2fcedef79c3d6f88c

	update links.

	Tue Jan 27 17:50:42 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: update links.

	svn path=/trunk/; revision=1925

2004-01-27  Tim Janik 	# 9463ed525df64420899f4816b71f25abd7318ff3

	updates

	svn path=/trunk/; revision=1924

2004-01-27  Tim Janik 	# 921181f21fc4b20e13400914e0d4ac52792db943

	updates

	svn path=/trunk/; revision=1923

2004-01-27  Tim Janik 	# 00dcb7ba69fb5ce31369b3cdc9bd78bfa1f64770

	increased default number of voices to 16 (from 8).

	Tue Jan 27 16:41:45 2004  Tim Janik  <timj@gtk.org>

	        * bsetrack.c (bse_track_class_init): increased default number of voices
	        to 16 (from 8).

	svn path=/trunk/; revision=1922

2004-01-27  Tim Janik 	# c3ba72454cad2dd78bfdc6dfee72827936ae4148

	s/usefull/useful/

	svn path=/trunk/; revision=1921

2004-01-27  Tim Janik 	# e43ebc4959b149eb44d6ca0d5fc26147ad090f8a

	cleaned up some cruft.

	Tue Jan 27 16:31:13 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: cleaned up some cruft.

	svn path=/trunk/; revision=1920

2004-01-27  Tim Janik 	# 6b89bfa3fb292e6aecb5f953b5bd0eab0d612d4d

	adde sfidl to bstgentypes* dependancies

	svn path=/trunk/; revision=1919

2004-01-27  Tim Janik 	# 295c9ab09449cf6aba30385a403ec2880ac0ce54

	collect sniffer requests and submit them from an idle handler to minimize

	Tue Jan 27 16:02:06 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.[hc]: collect sniffer requests and submit
	        them from an idle handler to minimize task switches.

	svn path=/trunk/; revision=1918

2004-01-27  Tim Janik 	# 712e67fa3670148dd999b2ffd7b6b55decee5c35

	added instance_is_a(), value_get_gobject<>() and value_set_gobject().

	Tue Jan 27 16:03:01 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxbase.h: added instance_is_a(), value_get_gobject<>()
	        and value_set_gobject().

	        * bseexports.h:
	        * bsecxxplugin.h: adapted to sficxx.h changes, don't call
	        record/sequence functions from static constructor as the
	        type system may not yet be initialized.

	        * bsecxxutils.h: tweak InvalidArgument() exception.

	        * bsesniffer.cc: implement combined requests.

	        * bsetype.c: fixed transform function registration.

	svn path=/trunk/; revision=1917

2004-01-27  Tim Janik 	# 448ef88f1e62c2f761af327b8c7596ab511abd1b

	support sending value lists, added ability to receive lists of values to

	Tue Jan 27 16:07:27 2004  Tim Janik  <timj@gtk.org>

	        * sficomport.[hc]: support sending value lists, added ability to
	        receive lists of values to reduze context switches.

	        * sficxx.h: reimplement specialized versions of boxed_copy and
	        boxed_free, value_get_boxed and value_set_boxed functions for
	        record handles and sequences which special case SfiRec and
	        SfiSeq vs. boxed record and sequence types.

	        * sfidl-module.cc: provide NAMESPACE_IS_OBJECT() macros for generated
	        object types. implement value conversions between boxed and
	        Sfi types (sfirec/records, sfiseq/sequences, choice/enum, object/proxy).

	        * sfigluecodec.c: bulk send events if possible to reduce
	        context switches.

	        * sfivalues.[hc]: added sfi_value_get_enum_auto() and
	        sfi_value_set_enum_auto() to support the idl compiler.
	        made sfi_enum2choice() return a constant, non-duplicated string.

	svn path=/trunk/; revision=1916

2004-01-26  Stefan Westerfeld 	# cd15e3430828ba26e790303e560d3e6dfd65e732

	Reenabled C++ API code.

	Tue Jan 27 00:43:29 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am: Reenabled C++ API code.

	svn path=/trunk/; revision=1915

2004-01-26  Stefan Westerfeld 	# bd94066dd244938a95eaea0c6129d0a4cae205d6

	Resort classes in a way that derived classes always occur after their base

	Tue Jan 27 00:31:35 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Resort classes in a way that derived classes always
		occur after their base classes in the vector returned by getClasses().
		This allows bindings to rely on that assumption; in C++ for instance
		you need to specify base classes before the derived classes, whereas
		the IDL file syntax allows you to invert the order.

	svn path=/trunk/; revision=1914

2004-01-26  Stefan Westerfeld 	# ed58475ed35e96f1ea025156f01d537e21a8ebee

	CodeGenerator: Added setOption and getOptions methods, to allow code

	Mon Jan 26 19:55:42 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: CodeGenerator: Added setOption and getOptions
		methods, to allow code generators to come with their own options.

		* sfidl-options.cc sfidl.cc: Parse options provided by code generators
		in Options::parse. Get rid of a the Target enum, use factories only to
		choose which code generator to use.

		* sfidl-cxx.* sfidl-generator.* sfidl-typelist.*: Provide a factory
		for --cxx, --qt and --list-types. Changed CodeGenerator::run() to return
		boolean, to allow code generators to fail on inconsistent options.

		* sfidl-module.cc: Adapted to the new CodeGenerator::run().

		* sfidl-factory.cc: Fixed evil bug. Using global constructors ensures
		no ordering (depends on the linker, among other things). Thus we need
		to use a dynamically allocated list of factories, otherwise factories
		might try to add themselves to the factory list before the factory list
		exists.

		* Makefile.am: Added sfidl-typelist.cc.

		* testsfidl.cc: Test option parsing.

	svn path=/trunk/; revision=1913

2004-01-26  Tim Janik 	# bdee969887b22628c867f69b28c6879d50b30938

	disable C++ API code which breaks again, due to lack of object reference

	Mon Jan 26 02:45:21 2004  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: disable C++ API code which breaks again,
	        due to lack of object reference support.

	        * tests/testplugin.idl: added object properties of types
	        Bse::Effect, imlpemented in C++ in Bse and Bse::Item,
	        implemented in C in Bse.

	svn path=/trunk/; revision=1912

2004-01-26  Tim Janik 	# 4747fc9b7c5933e077fd92170b286a3a9c5b4724

	new idl file to define Bse::Effect.

	Mon Jan 26 02:36:07 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxmodule.idl: new idl file to define Bse::Effect.

	        * bsecxxbase.idl: new idl file to define Bse::CxxBase.

	        * bseeffectbalance.[hc]:
	        * bseeffectfinetune.[hc]:
	        * bseeffectnotevolume.[hc]:
	        * bseeffectpatternbreak.[hc]:
	        * bseeffectpatternjump.[hc]:
	        * bseeffectvolumedelta.[hc]:
	        * bseeffect.[hc]: remove all bseeffect* files, all the code within
	        was outdated and unused for several years.

	        * bse.idl: added bsecxxbase.idl and bsecxxmodule.idl.

	        * bsecxxbase.[hc]*: make gobject() const. implement value_get_object(),
	        value_set_object() and value_set_casted().

	        * bsecxxvalue.h: removed g_value_get_object<>() template.

	        * bsecxxmodule.[hc]: provide conventional BSE_TYPE_EFFECT and base class.

	        * bsesniffer.idl: removed parentation hacks by including
	        bsecxxmodule.idl, added Sniffer (object) field in record.

	svn path=/trunk/; revision=1911

2004-01-26  Tim Janik 	# 11ff45914544ce73a871ef94f4c1e7416186327e

	remove all bseeffect* files, all the code within was outdated and unused

	Mon Jan 26 02:36:07 2004  Tim Janik  <timj@gtk.org>

	        * bseeffectbalance.[hc]:
	        * bseeffectfinetune.[hc]:
	        * bseeffectnotevolume.[hc]:
	        * bseeffectpatternbreak.[hc]:
	        * bseeffectpatternjump.[hc]:
	        * bseeffectvolumedelta.[hc]:
	        * bseeffect.[hc]: remove all bseeffect* files, all the code within
	        was outdated and unused for several years.

	        * bse.idl: added bsecxxbase.idl and bsecxxmodule.idl.

	        * bsecxxbase.[hc]*: make gobject() const. implement value_get_object(),
	        value_set_object() and value_set_casted().

	        * bsecxxvalue.h: removed g_value_get_object<>() template.

	        * bsecxxmodule.[hc]: provide conventional BSE_TYPE_EFFECT and base class.

	        * bsesniffer.idl: removed parentation hacks by including
	        bsecxxmodule.idl, added Sniffer (object) field in record.

	svn path=/trunk/; revision=1910

2004-01-26  Tim Janik 	# 91f00715f5dcf0de71cd5109cc2da309a3131506

	allow string appends. (find_class): new class to get class structure from

	Mon Jan 26 02:42:32 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc:
	        (make_PrefixedTypeName): allow string appends.
	        (find_class): new class to get class structure from type name.
	        (is_cxx_class): new function, figure whether a class type is implemented
	        in C++ in Bse. (should make use of an extra commandline option once
	        possible).
	        (OBJECT): implemented ordinary object pointers, respecting C/C++
	        class implementations. this misses out cross-reference support though.

	svn path=/trunk/; revision=1909

2004-01-25  Stefan Westerfeld 	# 9a453ddc0340391d26ce5a5847eaf95c623d516f

	Add closing comment when closing namespaces.

	Sun Jan 25 21:13:16 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-namespace.cc: Add closing comment when closing namespaces.

		* sfidl-parser.cc: Support namespaces in namespaces. I needed this
		for testing the closing comments, but it might be a useful feature
		anyway...

	svn path=/trunk/; revision=1908

2004-01-25  Stefan Westerfeld 	# 4927a937474f4e97cf4c1d173b402b8304097881

	Less work.

	svn path=/trunk/; revision=1907

2004-01-25  Stefan Westerfeld 	# 35cce46e849771a48cd3a658d3de9a135d57bb6c

	Put fully qualified name into the ChoiceValue data structure while

	Sun Jan 25 19:42:31 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.cc sfidl-generator.cc sfidl-parser.cc: Put fully qualified
		name into the ChoiceValue data structure while parsing.

	svn path=/trunk/; revision=1906

2004-01-25  Tim Janik 	# 4deab73d3c22d38c838edd0386435d388586981b

	updates

	svn path=/trunk/; revision=1905

2004-01-25  Tim Janik 	# 0b875073c44c615009592d4ec6fdb87428c4cd84

	updates

	svn path=/trunk/; revision=1904

2004-01-25  Tim Janik 	# 24ae028d95d77adcd97b88d5c96c5c14b563fbe3

	enable record and sequence generation, still need to comment out object

	Sun Jan 25 08:36:28 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.idl: enable record and sequence generation, still
	        need to comment out object references though.

	svn path=/trunk/; revision=1903

2004-01-25  Tim Janik 	# 8fab441741d6cb19f93aded89841f2fae36b1e38

	removed lots of old ad-hoc string conversion fucntions. replaced with

	Sun Jan 25 08:38:36 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: removed lots of old ad-hoc string conversion
	        fucntions. replaced with varians of rename().
	        refactored class and enum generation into different functions.
	        generate class_init() in the implementation section, after all
	        types have been defined. use NamespaceHelper.printable_form()
	        which returns static strings that don't corrupt.
	        lots of symbol name generation fixes.
	        resolved namespace problems/hacks with NamespaceHelper.

	        * sfidl-module.h: removed unused code.

	        * sfidl-namespace.h, sfidl-namespace.cc:
	        added printable_form() to return a constant c-string from
	        printableForm().

	svn path=/trunk/; revision=1902

2004-01-25  Tim Janik 	# 4c1ddbe25b89354771ce3def8923a85dc33abfa4

	shutup

	svn path=/trunk/; revision=1901

2004-01-25  Tim Janik 	# 02dd2adc31ff246bb5e2e5fdeaed17506b9bbeec

	added more test cases.

	Sun Jan 25 05:49:59 2004  Tim Janik  <timj@gtk.org>

	        * tests/testplugin.idl: added more test cases.

	        * beast-gtk/bstutils.c: pspec constructor fixups.

	svn path=/trunk/; revision=1900

2004-01-25  Tim Janik 	# e5a47a1ffe8cc019ffeaf5433b5d2fb0aca402f1

	use new boxed registration functions.

	Sun Jan 25 05:28:23 2004  Tim Janik  <timj@gtk.org>

	        * bseplugin.c: use new boxed registration functions.

	        * bsetype.[hc]: GType doesn't really support dynamic boxed types, so
	        register boxed types from plugins statically and plug their
	        implementations internally. tidied up pspec constructors.

	svn path=/trunk/; revision=1899

2004-01-25  Tim Janik 	# 64e9661fd23cb51be4cdd12c9614ee8bf4ea9f31

	renamed value_set() and value_get() methods to value_set_TYPE() and

	Sun Jan 25 05:30:32 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: renamed value_set() and value_get() methods to
	        value_set_TYPE() and value_get_TYPE(), depending on what TYPE
	        they set/get. added set_boxed() method to Sequence. added
	        c_ptr() and set_boxed() to Sequence (basically, because
	        operator=() isn't inherited).
	        added cxx_value_set_boxed_sequence(), cxx_value_get_boxed_sequence()
	        cxx_value_set_boxed_record() and cxx_value_get_boxed_record().

	        * sfidl-cxx.cc: adapt to get_value/set_value renames, changed
	        generated implementation to operate on SfiRec and SfiSeq now.
	        the boxed variants are taken care of by sfidl-module.cc.

	        * sfidl-module.cc: fixed generic SfiRec pspec constructor.
	        adapt to value_set/value_get renames.

	        * sfiparams.[hc]: added sfi_pspec_rec_generic() for SfiRec
	        idl types.

	svn path=/trunk/; revision=1898

2004-01-25  Tim Janik 	# 09deb21c33de3da4149e6b3269a746245aaa2844

	convert to sfidl code generator factories. use "--module" factory.

	Sun Jan 25 04:41:23 2004  Tim Janik  <timj@gtk.org>

	        * bse-plugin-generator.cc: convert to sfidl code generator
	        factories. use "--module" factory.

	        * sfidl-module.h: removed (disabled) class definition.

	        * sfidl-module.cc: rewrote code generator into self-contained
	        language-binding object.

	        * sfiprimitives.[hc]: added sfi_seq_append_empty() and
	        sfi_rec_forced_get() to simplify code generation.

	svn path=/trunk/; revision=1897

2004-01-24  Tim Janik 	# 08910c31aa7315d89cf8dd635494e76617bc1cb2

	remove TypeName argument from BSE_CXX_DECLARE_RECORD() and

	Sat Jan 24 19:14:46 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxplugin.h: remove TypeName argument from BSE_CXX_DECLARE_RECORD()
	        and BSE_CXX_DECLARE_SEQUENCE(), get the type names via type_name().

	svn path=/trunk/; revision=1896

2004-01-24  Tim Janik 	# 11105eb8e62c16d8757906a435194547471e9ce7

	remove type_name argument from BSE_CXX_DECLARE_RECORD() and

	Sat Jan 24 19:13:40 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-cxx.cc (printRecSeqImpl): remove type_name argument from
	        BSE_CXX_DECLARE_RECORD() and BSE_CXX_DECLARE_SEQUENCE() which they don't
	        need since we provide type_name().

	svn path=/trunk/; revision=1895

2004-01-24  Tim Janik 	# 1a14b40be946b540bf5b90348de81c403a4e0997

	added type_name_ prefix to parent_class variables in files which use

	Sat Jan 24 18:24:06 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/*.c: added type_name_ prefix to parent_class variables in
	        files which use G_DEFINE_TYPE().

	svn path=/trunk/; revision=1894

2004-01-24  Tim Janik 	# 1733a692943fc9ca9a54e2589d1d065e5342d3ae

	copied over the newest incarnation of G_DEFINE_TYPE() from glib, which

	Sat Jan 24 18:25:21 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: copied over the newest incarnation of G_DEFINE_TYPE()
	        from glib, which type_name_ prefix parent_class variables.

	svn path=/trunk/; revision=1893

2004-01-24  Vincent van Adrighem 	# d27e4f9bd1086ef4b3efa8f3aafe58c9c9a62fb6

	Translation updated by Tino Meinen.

	2004-01-24  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=1892

2004-01-24  Tim Janik 	# 0bf9992d095e3e3a76007d0b5e4daa5e8b7bc71c

	specify the field array of boxed types directly in BseExportNodeBoxed.

	Sat Jan 24 07:04:59 2004  Tim Janik  <timj@gtk.org>

	        * bseexports.h: specify the field array of boxed types directly
	        in BseExportNodeBoxed.

	        * bsecxxplugin.h: adaptions due to bseexport.h changes.

	        * bsetype.c:
	        (bse_type_reinit_boxed):
	        (bse_type_uninit_boxed): register and unregister extra info about
	        boxed records and sequences with sfi.

	        * bseglue.c: adapt to sfi_boxed_type_get_rec_fields() and
	        sfi_boxed_type_get_seq_element().

	        * bseparam.c: likewise.

	svn path=/trunk/; revision=1891

2004-01-24  Tim Janik 	# 3a7ef4dedc213bcfb11718b0d83d94b8581846e0

	switch to a get_element() method for sequences, return SfiRecFields for

	Sat Jan 24 06:55:57 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-cxx.cc: switch to a get_element() method for sequences,
	        return SfiRecFields for get_fields() of records.

	        * sfiparams.[hc]: reimplemented boxed type helpers, based on an
	        element pspec for sequences and SfiRecFields for records.

	svn path=/trunk/; revision=1890

2004-01-24  Stefan Westerfeld 	# 7a79ce56efe03b260a1c883f444f17e7db60b881

	Make rename() prefix namespace_seperator for absolute namespaces only if

	Sat Jan 24 04:44:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: Make rename() prefix namespace_seperator for
		absolute namespaces only if the seperator is "::", as for C++, its
		useful, for the other supported languages, useless. Result: make check
		passes now, finally.

		* testsfidl.c: Changed the message from "Foo." to something more
		meaningful.

	svn path=/trunk/; revision=1889

2004-01-24  Stefan Westerfeld 	# 32e891884528120f5da3990ac95b108a1ec1076d

	Added a new mechanism, which allows bindings to register themselves in the

	Sat Jan 24 04:16:43 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl.cc sfidl-options.* sfidl-factory.* Makefile.am: Added a new
		mechanism, which allows bindings to register themselves in the option
		parser, using factories. This allows sfidl to know which bindings it
		supports, even though the binding will only need to setup its factory
		within its own C++ file.

		* sfidl-module.cc bse-plugin-generator.cc: Use this mechanism for the
		--module option.

	svn path=/trunk/; revision=1888

2004-01-24  Stefan Westerfeld 	# 4cc4bc89044bc12fd9e5c961eb24177d7c2116fb

	Added generic rename function, which can be used to reformat typenames.

	Sat Jan 24 03:08:44 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: Added generic rename function, which can be used
		to reformat typenames. Should be able to do everything that
		makeLowerName, makeMixedName, makeUpperName, makeGTypeName did, and
		more (at the cost of having a more complex API).

		* Makefile.am testsfidl.cc: Added test code.

	svn path=/trunk/; revision=1887

2004-01-24  Tim Janik 	# af6b78afaf23ec1dccf40c7225f7dce34f007ac1

	fixed get_fields() usage in pspec constructors, imlpemented get_fields()

	Sat Jan 24 01:50:55 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-cxx.cc: fixed get_fields() usage in pspec constructors,
	        imlpemented get_fields() for sequences.

	svn path=/trunk/; revision=1886

2004-01-24  Tim Janik 	# e2dadeabf1ee71a16230576cc9ce2b453a72ec28

	fix missing type registration macros.

	Sat Jan 24 01:12:44 2004  Tim Janik  <timj@gtk.org>

	        * tests/testplugin.cc: fix missing type registration macros.

	svn path=/trunk/; revision=1885

2004-01-24  Stefan Westerfeld 	# fb24fa701e18b2e4567ff32a94c7d0e52fad5d11

	Made the to_seq conversion function static, similar to to_rec.

	Sat Jan 24 01:01:43 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.cc sficxx.h: Made the to_seq conversion function static,
		similar to to_rec.

	svn path=/trunk/; revision=1884

2004-01-23  Tim Janik 	# cb7c4efce08a475cc96cce346b7055d519d927ee

	reenable test builds which compile again due to sfidl fixes.

	Fri Jan 23 22:39:49 2004  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: reenable test builds which compile again due to
	        sfidl fixes.

	svn path=/trunk/; revision=1883

2004-01-23  Tim Janik 	# 88a61b9a681b08072ad41624ba3f2e414de15e80

	added debugging output for --bse-debug=plugins.

	Fri Jan 23 22:38:57 2004  Tim Janik  <timj@gtk.org>

	        * bseplugin.c (bse_plugin_check_load): added debugging output for
	        --bse-debug=plugins.

	F

	svn path=/trunk/; revision=1882

2004-01-23  Stefan Westerfeld 	# aded8156c68e7c164020460ec4eb5b579ba9ed22

	CodeGeneratorCxxBase::printRecSeqImpl: generate get_fields method only

	Fri Jan 23 19:27:10 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.cc: CodeGeneratorCxxBase::printRecSeqImpl: generate
		get_fields method only when used for the server binding.
		Fixed bug in the property setter generation - record and sequence
		properties in the C++ client binding should be fine now.

	svn path=/trunk/; revision=1881

2004-01-23  Danilo Šegan 	# b3e89a8a64f2fdb03a443959abb4f9e09ffb084a

	Updated Serbian translation.

	svn path=/trunk/; revision=1880

2004-01-23  Tim Janik 	# 163c4c6e399df3fa4ab827a2ce73654c3d22fdba

	added class GNewable which supplies new/delete operators based on

	Fri Jan 23 02:59:28 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: added class GNewable which supplies new/delete operators
	        based on g_malloc()/g_free(). required, since our generated C++
	        classes mimick plain C records/sequences.

	        * sfidl-cxx.cc: derive Records from GNewable.

	svn path=/trunk/; revision=1879

2004-01-23  Tim Janik 	# 39ec3cbb9e21fd94585585cf75157103b584d983

	added more sfidl pspec constructors.

	Fri Jan 23 02:28:12 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c: added more sfidl pspec constructors.

	        * tests/Makefile.am: disabled C++ API generation which still
	        breaks, though most of the core C++ binding works now.

	        * tests/testplugin.idl: added more test code.

	svn path=/trunk/; revision=1878

2004-01-23  Tim Janik 	# c245e909a157ead1857b0d19610892eda9b44c0d

	complete record and sequence registration macros.

	Fri Jan 23 02:28:58 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxplugin.h: complete record and sequence registration macros.

	        * bseexports.h: boxed types supply SfiBoxedFields.

	        * bsetype.h: fixed sfidl pspec constructors.

	svn path=/trunk/; revision=1877

2004-01-23  Tim Janik 	# b8d1f2822ddf55441919eeaabab5e6de2938bd52

	added take() to Sequence, added steal() to Record and Sequence. added

	Fri Jan 23 02:30:27 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: added take() to Sequence, added steal() to Record
	        and Sequence. added templates used by code generator:
	        cxx_boxed_copy, cxx_boxed_free, cxx_boxed_to_rec,
	        cxx_boxed_from_rec, cxx_boxed_to_seq, cxx_boxed_from_seq,
	        cxx_value_get_record, cxx_value_set_record,
	        cxx_value_get_sequence and cxx_value_set_sequence.

	        * sfidl-cxx.[hc]*: copied lots of string helpers from sfidl-module.cc
	        here because we still have no single identifier/typename
	        manipulation function. added typed_pspec_constructor() and
	        untyped_pspec_constructor() to create pspec constructors with and
	        without presence of type system respectively.
	        added printChoicePrototype() and printChoiceImpl() to implement
	        choice generation. lots of fixups to printRecSeqForwardDecl(),
	        printRecSeqDecl() and printRecSeqImpl(). added missing record and
	        sequence methods, using the above templates.

	        * sfidl-module.[hc]*: use pspec constructor generation code from
	        sfidl-cxx.c, added choice generation. more property fixes.

	        * sfidl-namespace.cc: added fixme, this should generate comments
	        telling what namespace was just closed.

	        * sfiparams.[hc]: SfiBoxedFields field changes.

	        * testsfi.c:
	        * sfidl-generator.cc: pspec constructor fixups.

	svn path=/trunk/; revision=1876

2004-01-22  Tim Janik 	# 376e89b5cc5a6f36e37aa92ae808a09aeea4f027

	fix link

	svn path=/trunk/; revision=1875

2004-01-22  Tim Janik 	# cc5be444907fec8b2e03d7bfc82eda43736bd04b

	added search and wiki pages.

	Thu Jan 22 03:40:51 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-navigation.xml: added search and wiki pages.

	        * docs/site-news.texi: rotate news, announce wiki.

	        * docs/generated/Makefile.am: support php targets, using a perl
	        script hack to embedd php code in PHPX...XPHP in .texi files.

	        * docs/search.texi: new page to search the website.

	        * docs/wiki.texi: new page to embedd a beast wiki, based on ErfurtWiki.

	svn path=/trunk/; revision=1874

2004-01-21  Stefan Westerfeld 	# 8542c25c586636fd91c6b33da8ed55fc041f4800

	More work.

	svn path=/trunk/; revision=1873

2004-01-21  Stefan Westerfeld 	# a96a0dff09e6b9e8b6dc996a3f5d02a932f02a45

	Added FIXME for indicating where function computing fields in the server

	Wed Jan 21 03:36:21 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.cc: Added FIXME for indicating where function computing
		fields in the server binding should be added.

	svn path=/trunk/; revision=1872

2004-01-21  Stefan Westerfeld 	# 767a456b5c2ea39cdeca04a89a8cfcbff3b69dc4

	Added FIXME.

	svn path=/trunk/; revision=1871

2004-01-21  Tim Janik 	# cc88863a3f7dc105dacc4b37a2c6f22480814797

	implement BoxedRec pspec constructors.

	Wed Jan 21 03:34:54 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (sfidl_pspec_BoxedRec): implement BoxedRec pspec
	        constructors.

	svn path=/trunk/; revision=1870

2004-01-21  Tim Janik 	# 20b8b6fb872801f86eb6a6d09146be0715b45d7a

	implementation fixups.

	Wed Jan 21 03:35:59 2004  Tim Janik  <timj@gtk.org>

	        * bsecxxplugin.h (BSE_CXX_DECLARE_RECORD): implementation fixups.

	svn path=/trunk/; revision=1869

2004-01-21  Stefan Westerfeld 	# 29ff52355813a794577347b5f1798633cdd3855c

	Commented out TestRecord (doesn't compile right now).

	Wed Jan 21 03:26:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testplugin.*: Commented out TestRecord (doesn't compile right
		now).

	svn path=/trunk/; revision=1868

2004-01-21  Stefan Westerfeld 	# c96a6cf2af31be5862e78f5eca8d7d5e09e07058

	More work on records: really call type registration macros.

	Wed Jan 21 03:21:00 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-module.cc: More work on records: really call type
		registration macros.

		* sfidl-namespace.cc: Fixlet: no ; after namespaces.

	svn path=/trunk/; revision=1867

2004-01-20  Tim Janik 	# a6386fa5a5811dd2d2a878d4063156cc8fbb400a

	shut up

	svn path=/trunk/; revision=1866

2004-01-20  Stefan Westerfeld 	# 22bda6d2a8d4b882e3072b1f4dc301f565ccfcc7

	Added "using namespace Sfi;".

	Tue Jan 20 23:22:43 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/bstrecords.idl: Added "using namespace Sfi;".

		* tests/testplugin.idl: New testcase for records/sequences.

		* tests/cxxbinding.cc: Adapted to renames (due to record/sequence
		binding in C++).

		* tests/perftest.cc: From milliseconds to seconds.

	svn path=/trunk/; revision=1865

2004-01-20  Tim Janik 	# ead9acf13ac183dc0befae0f702a5d808a90f293

	fix shut up

	svn path=/trunk/; revision=1864

2004-01-20  Stefan Westerfeld 	# 8727e70451a09b4281c0f7f855398b78b2aa42b4

	Set generateBoxedTypes to true, as the generated code is supposed to be

	Tue Jan 20 23:23:28 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bse-plugin-generator.cc sfidl-options.cc: Set generateBoxedTypes
		to true, as the generated code is supposed to be running within the
		core.

		* sfidl-cxx.*: Moved the records/sequences into CodeGeneratorCxxBase
		to allow them to be accessed by the C++ core binding.

		* sfidl-module.cc sfidl-module.h: Start making records/sequences
		available to plugins. Not complete yet.

	svn path=/trunk/; revision=1863

2004-01-20  Stefan Westerfeld 	# 0c9d178bad34725cf5a99a17e8b9134fdb1d2659

	more TODO.

	svn path=/trunk/; revision=1862

2004-01-20  Tim Janik 	# 5b661eab2e4dd2c99414ca8f3ff892dd1da4486f

	devel changes

	svn path=/trunk/; revision=1861

2004-01-20  Tim Janik 	# ffda96c28de08a36fb327b992b154580c6cc4ebf

	remove leftover

	svn path=/trunk/; revision=1860

2004-01-20  Tim Janik 	# b537b9056fe95009ce43545eb00b6fe68554b8a3

	update

	svn path=/trunk/; revision=1859

2004-01-20  Tim Janik 	# 43f8d82d2a165bdb03827429ef7149e696c50dbb

	added BseExportNodeBoxed for records and sequences.

	Tue Jan 20 15:30:44 2004  Tim Janik  <timj@gtk.org>

	        * bseexports.h: added BseExportNodeBoxed for records and
	        sequences.

	        * bseparam.c:
	        * bseglue.c: honour sfi_boxed_type_get_fields().

	        * bseplugin.[hc]: implement un-initialization of types
	        upon unloading (needed by boxed). added BSE_EXPORT_NODE_RECORD
	        and BSE_EXPORT_NODE_SEQUENCE handling.

	        * bsetype.[hc]: implement dynamic boxed.

	        * bsecxxplugin.h: started implementing RECORD type registration.

	svn path=/trunk/; revision=1858

2004-01-20  Tim Janik 	# fcdd75817f936eecdb9095467bc51f6b3137b9b0

	added sfi_boxed_type_set_fields() and sfi_boxed_type_get_fields() since

	Tue Jan 20 15:35:46 2004  Tim Janik  <timj@gtk.org>

	        * sfiparams.[hc]: added sfi_boxed_type_set_fields() and
	        sfi_boxed_type_get_fields() since sfi_boxed_get_record_info()
	        and sfi_boxed_get_sequence_info() are scheduled for removal.

	        * sfivalues.c: fixed up sfi_value_dup_rec().

	svn path=/trunk/; revision=1857

2004-01-20  Tim Janik 	# ba4cd4ede0becc062eded6c1493ecebeba0fe64d

	minor update

	svn path=/trunk/; revision=1856

2004-01-20  Tim Janik 	# 5bf5a19274c7205f605ad462d88b8512f1d478c6

	adapt to C++ type changes.

	Tue Jan 20 05:47:04 2004  Tim Janik  <timj@gtk.org>

	        * bsesniffer.cc: adapt to C++ type changes.

	svn path=/trunk/; revision=1855

2004-01-20  Tim Janik 	# 060b0a2936d538a39eb49ac8df7bc7d17aa6bb9a

	simplified type speical casing by moving to C++ type wrappers from

	Tue Jan 20 05:49:22 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: simplified type speical casing by moving
	        to C++ type wrappers from sficxx.h.

	        * sfivalues.[hc]: implemented sfi_value_dup_rec().

	svn path=/trunk/; revision=1854

2004-01-20  Stefan Westerfeld 	# 25441b3ac9595cdcf3aed5ccfa603ba207452a4a

	Added "using namespace Sfi;".

	Tue Jan 20 05:09:07 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testplugin.idl: Added "using namespace Sfi;".

		* docs/sfidl.texi: Removed ";" after namespace decls.

	svn path=/trunk/; revision=1853

2004-01-20  Stefan Westerfeld 	# 371ce0fd038d4f7633c938f7396faa2a107bc666

	Use "using namespace Bse" in the correct places.

	Tue Jan 20 05:07:57 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.idl bsebalance.idl davbassfilter.idl davchorus.idl:
		Use "using namespace Bse" in the correct places.

	svn path=/trunk/; revision=1852

2004-01-20  Stefan Westerfeld 	# 29305cc266e8d56f69568be71ea5ac54e85730eb

	Add "using namespace Sfi;".

	Tue Jan 20 04:52:45 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl bseamplifier.idl: Add "using namespace Sfi;".

	svn path=/trunk/; revision=1851

2004-01-20  Stefan Westerfeld 	# dc7bc1484379fb8e66c2fa8d39b38a2d898610d0

	Make ; following the namespace declaration optional. Don't automatically

	Tue Jan 20 04:50:39 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Make ; following the namespace declaration
		optional. Don't automatically do a "using namespace Sfi;".

	svn path=/trunk/; revision=1850

2004-01-20  Stefan Westerfeld 	# 45b889f179038782b5fd00570d8e38beab3eb8d4

	No more bse/bsecxxsmart.h.

	Tue Jan 20 03:11:17 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am: No more bse/bsecxxsmart.h.

	svn path=/trunk/; revision=1849

2004-01-20  Stefan Westerfeld 	# 8a8960e8b976b047182574e72854ac5252b9c6fa

	Don't include bse/bsecxxsmart.h.

	Tue Jan 20 03:09:34 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-module.cc: Don't include bse/bsecxxsmart.h.

	svn path=/trunk/; revision=1848

2004-01-20  Stefan Westerfeld 	# fdbddcf4205f506239d7665ef0bda3cce844d8ad

	Removed obsolete code.

	Tue Jan 20 03:05:25 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h Makefile.am: Removed obsolete code.

		* tests/testsmart.cc tests/Makefile.am: Removed test for obsolete
		code.

	svn path=/trunk/; revision=1847

2004-01-20  Stefan Westerfeld 	# 84c444204a288812c95345549be0670de359504c

	Using Sfi::Sequence now (instead of Bse::Sequence).

	Tue Jan 20 02:50:56 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/cxxbinding.cc: Using Sfi::Sequence now (instead of
		Bse::Sequence).

	svn path=/trunk/; revision=1846

2004-01-20  Stefan Westerfeld 	# fc361b3047d8e07f88bfa0855dda71a88d5bcb7b

	Migrate to Sfi::Sequence (instead of Bse::Sequence).

	Tue Jan 20 02:49:23 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sficxx.h sfidl-cxx.cc: Migrate to Sfi::Sequence (instead of
		Bse::Sequence).

	svn path=/trunk/; revision=1845

2004-01-20  Stefan Westerfeld 	# 54a2f4fec99191dbf80c8e046a1a5281803ba234

	Use RecordHandle<...> instead of SmartPtr<...> for records.

	Tue Jan 20 02:16:31 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/cxxbinding.cc: Use RecordHandle<...> instead of SmartPtr<...>
		for records.

	svn path=/trunk/; revision=1844

2004-01-20  Stefan Westerfeld 	# 2d6e5d1d6358782227c66127764d02d615beb1b3

	The bool operator and is_null() should be const.

	Tue Jan 20 02:18:22 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sficxx.h: The bool operator and is_null() should be const.

		* sfidl-cxx.cc: Use RecordHandle<...> instead of SmartPtr<...>.

	svn path=/trunk/; revision=1843

2004-01-20  Tim Janik 	# 0e611a65700367e35fec98ae578dcde3ce348980

	implement bool operator, is_null() and operator[] for RecordHandle.

	Tue Jan 20 01:57:47 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: implement bool operator, is_null() and operator[]
	        for RecordHandle.

	svn path=/trunk/; revision=1842

2004-01-20  Tim Janik 	# 67c13f4c4126b805b2d75d9a9ee40b3347e269f3

	moved GValue get/set functions for strings into class String.

	Tue Jan 20 01:35:01 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: moved GValue get/set functions for strings into class String.
	        * sfidl-cxx.cc:
	        * sfidl-module.cc: changed usage cases.

	svn path=/trunk/; revision=1841

2004-01-20  Stefan Westerfeld 	# 80fd107037980e58549f32970626f4bbb0cc5fb4

	Fix includes (changes due to sficxx.h).

	Tue Jan 20 01:17:06 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am: Fix includes (changes due to sficxx.h).

		* docs/sfidl.texi: Small fixes.

		* bsw/bswcxxutils.h: String to/from GValue conversions are in sficxx.h
		now.

	svn path=/trunk/; revision=1840

2004-01-20  Stefan Westerfeld 	# 79200e6087705d4358e625455a54e62adf4a026a

	Adapted source to the fact that bse-plugin-generator now finally uses

	Tue Jan 20 01:01:32 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* evaluator/bseevaluator.cc: Adapted source to the fact that
		bse-plugin-generator now finally uses Sfi::String instead of a
		gchar* representations.

	svn path=/trunk/; revision=1839

2004-01-20  Stefan Westerfeld 	# 6e2ba49dd8aa79fd9087ef4296a5f962f5c4a958

	Remove redundant typedefs (now in sfi/sficxx.h).

	Tue Jan 20 00:58:49 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Remove redundant typedefs (now in sfi/sficxx.h).

	svn path=/trunk/; revision=1838

2004-01-20  Stefan Westerfeld 	# d55b9a8581d95105c828bc4fb2e119d21f4b780f

	Added sfi_value_(set|get)_cxxstring here.

	Tue Jan 20 00:50:57 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sficxx.h: Added sfi_value_(set|get)_cxxstring here.

	svn path=/trunk/; revision=1837

2004-01-19  Tim Janik 	# a0ca4033f581f948652d7098a724b908376891a0

	fix c++ includes

	svn path=/trunk/; revision=1836

2004-01-19  Tim Janik 	# 051773f17b77e207bbac0c94aec197e8ad77e54c

	added operator+() to strings.

	Tue Jan 20 00:46:39 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: added operator+() to strings.

	svn path=/trunk/; revision=1835

2004-01-19  Stefan Westerfeld 	# 7f0ad5100f552bf205d5f33d7b4868c96e72bfae

	Use Sfi::String instead of std::string.

	Tue Jan 20 00:39:48 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-module.cc sfidl-cxx.cc: Use Sfi::String instead of
		std::string.

	svn path=/trunk/; revision=1834

2004-01-19  Tim Janik 	# 5f09a464b321650f54e3eaaf291e95041374ca70

	add missing includes

	svn path=/trunk/; revision=1833

2004-01-19  Tim Janik 	# 2416c077756ede1ae141e5a6ffebe50885dc5d0c

	define Bool, Int, Num, Real, BBlock, FBlock and Rec type aliases. made

	Tue Jan 20 00:20:07 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: define Bool, Int, Num, Real, BBlock, FBlock and Rec
	        type aliases. made String NULL save (for cstring==NULL which can
	        happen due to C accessing cstring).
	        implemented class Sequence<> template.

	        * testcxx.cc: added sequence tests.

	svn path=/trunk/; revision=1832

2004-01-19  Tim Janik 	# dbd629f02b1460bb4a48165af67ebb1aecc185ca

	implement comparison operators for class String, added operator*() to

	Mon Jan 19 23:12:47 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: implement comparison operators for class String,
	        added operator*() to class RecordHandle<>.

	        * testcxx.cc: more string tests.

	Mon Jan 19 22:50:20 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: added RecordHandle<>(), which implements smart
	        by-value handling of record pointers.

	        * testcxx.cc: test RecordHandle<>().

	        * Makefile.am: added testcxx to make check.

	svn path=/trunk/; revision=1831

2004-01-19  Tim Janik 	# 52d940bd884b3f8cb05ffcdbf4c2338f9b83f4d2

	implement comparison operators for class String, added operator*() to

	Mon Jan 19 23:12:47 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: implement comparison operators for class String,
	        added operator*() to class RecordHandle<>.

	        * testcxx.cc: more string tests.

	svn path=/trunk/; revision=1830

2004-01-19  Tim Janik 	# 84ed534a98aebe3efcb1e5e0e56a7124132ceeb5

	added RecordHandle<>(), which implements smart by-value handling of record

	Mon Jan 19 22:50:20 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: added RecordHandle<>(), which implements smart
	        by-value handling of record pointers.

	        * testcxx.cc: test RecordHandle<>().

	        * Makefile.am: added testcxx to make check.

	svn path=/trunk/; revision=1829

2004-01-19  Tim Janik 	# 253b626717785f1b45a9013617624429c2bfefe7

	make dist fix

	svn path=/trunk/; revision=1828

2004-01-19  Tim Janik 	# b7f12d74c9ce414a3d497082a333b70c5b95e783

	first start at C++ header.

	Mon Jan 19 21:46:15 2004  Tim Janik  <timj@gtk.org>

	        * sficxx.h: first start at C++ header.

	svn path=/trunk/; revision=1827

2004-01-19  Stefan Westerfeld 	# 41ad5302e6ac092b0f74e88c1ea4aabcbcbef6ea

	Added a small program to test the performancs procedure invocations.

	Mon Jan 19 20:46:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am tests/perftest.cc: Added a small program to
		test the performancs procedure invocations.

	svn path=/trunk/; revision=1826

2004-01-19  Stefan Westerfeld 	# 9649c52b1a2a4ed15864540f06a8d01f29296031

	Exclude types which are from bse.idl (and not define from bsehack.idl)

	Mon Jan 19 20:31:28 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am bseprocidl.c: Exclude types which are from bse.idl (and
		not define from bsehack.idl) automatically, instead of maintaining a
		type list in bseprocidl (uses sfidl --list-types).

	svn path=/trunk/; revision=1825

2004-01-19  Stefan Westerfeld 	# 7f2ed967a204c13e2d5afd8c9840783972836325

	Moved the C/C++ style comments (about this being a generated file) from

	Mon Jan 19 20:19:11 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bse-plugin-generator.cc sfidl-cxx.cc sfidl-generator.cc
		sfidl-module.cc sfidl.cc: Moved the C/C++ style comments (about this
		being a generated file) from sfidl.cc to the code generators, as not
		all generators will produces C/C++ish output.

		* sfidl-options.cc sfidl-options.cc sfidl.cc sfidl-typelist.: Added
		--list-types option, which lists all types which were define within the
		.idl file.

		* sfidl-parser.cc: Support "-" as filename, for parsing from stdin.

	svn path=/trunk/; revision=1824

2004-01-19  Tim Janik 	# b24561a652f745d8b43e779aab066b0647253925

	updates

	svn path=/trunk/; revision=1823

2004-01-19  Tim Janik 	# 6fb394246dcc34d5f4fad03a897db2ef5dbcd445

	implemented rudimentary scope display drawing routine. added

	Mon Jan 19 18:50:14 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnifferscope.[hc] (sniffer_notify_pcm_data): implemented
	        rudimentary scope display drawing routine.
	        added bst_sniffer_scope_set_sniffer().

	        * beast-gtk/bsttrackroll.c: special case and setup sniffer scopes.

	        * bsw/Makefile.am: fix idl includes.
	        fix bswgenapi.c dependencies.

	svn path=/trunk/; revision=1822

2004-01-19  Tim Janik 	# 3ffbead84551233d0d6d46487c46d944b854b945

	generate bsehack.idl from procidl. made bse.idl the canonical

	Mon Jan 19 18:54:11 2004  Tim Janik  <timj@gtk.org>

	        * Makefile.am: generate bsehack.idl from procidl.
	        made bse.idl the canonical client-binding API idl file.

	        * bsecxxutils.h: provide assert_ptr_derivation().

	        * bsecxxvalue.h: use assert_ptr_derivation() in
	        g_value_get_object<>() to fix object offset.

	        * bsemidireceiver.cc: fix assertion.

	        * bseprocidl.cc: skip BseSniffer and BseSnifferType.

	        * bsesniffer.cc, bsesniffer.idl: recode process() to handle multiple
	        requests per block. queue requests before prepare(). added
	        sniffer_get_mix_freq().

	        * bsesong.proc:
	        * bsetrack.proc: moved sniffer creation from song to track.

	svn path=/trunk/; revision=1821

2004-01-19  Tim Janik 	# 24ef350eecf742465ba2ab34c14f31649de20007

	fix g_value_get_object<>() usage.

	Mon Jan 19 19:03:42 2004  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc (generate_procedures): fix g_value_get_object<>() usage.

	svn path=/trunk/; revision=1820

2004-01-19  Tim Janik 	# f956b87dee4715166848faeac314f657cf22ba2f

	add french translation.

	Mon Jan 19 15:32:21 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-development.texi: add french translation.

	svn path=/trunk/; revision=1819

2004-01-19  Tim Janik 	# a3122210ec6b4945a656c9ebf3b027edbaafefc8

	beautify float output. s/Name/Identifier/ for property/channel

	Mon Jan 19 15:31:20 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c: beautify float output. s/Name/Identifier/ for
	        property/channel identifiers. fixed plugin loading.

	svn path=/trunk/; revision=1818

2004-01-18  Francisco Javier F. Serrador 	# 45ab3aa84604be3aedeae81bbaa87d235196a985

	Updated Spanish translation.

	2004-01-18  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation.

	svn path=/trunk/; revision=1817

2004-01-18  Christophe Merlet 	# 5655c172e459a09300086d90f3d7575a8591c30e

	Added French translation.

	svn path=/trunk/; revision=1816

2004-01-17  Tim Janik 	# 7cbb5ad5bff45efb219b8f9de70efb7dd074471d

	treat scopes as ordinary GtkWidgets. cleanup/reset parent_window for

	Sat Jan 17 14:55:09 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackroll.[hc]: treat scopes as ordinary GtkWidgets.
	        cleanup/reset parent_window for children in realize/unrealize, this
	        fixes reparentation crashes. reenabled scopes.

	        * beast-gtk/bstsnifferscope.[hc]: remove BseTrack special casing.

	svn path=/trunk/; revision=1815

2004-01-17  Stefan Westerfeld 	# 3a3f1fbfcf62bf1b23a6735d16655d7e60d0488e

	Started sfidl documentation.

	Sat Jan 17 03:05:49 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/sfidl.texi: Started sfidl documentation.

		* docs/generated/Makefile.am: Build sfidl.markup and sfidl.html.

		* docs/Makefile.am: Include sfidl.texi.

	svn path=/trunk/; revision=1814

2004-01-16  Tim Janik 	# d26a09d5a197269acd8a254d43526ec93a316948

	build plugin-devel.markup and plugin-devel.html.

	Fri Jan 16 23:13:56 2004  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am: build plugin-devel.markup
	        and plugin-devel.html.

	        * docs/Makefile.am: install images in ${beastimagesdir}.

	        * docs/module-voices.png:
	        * docs/module-voices.dia: accompanying diagram for plugin-devel.texi.

	        * docs/plugin-devel.texi: started plugin development documentation.

	svn path=/trunk/; revision=1813

2004-01-16  Tim Janik 	# a055c70c1c198bc15fa7476269dc1f590e3d2229

	updates

	svn path=/trunk/; revision=1812

2004-01-16  Tim Janik 	# 6813468ce2f7286a3f61aed9e9a37ce4451f690a

	fix typo

	svn path=/trunk/; revision=1811

2004-01-16  Tim Janik 	# ba092f632cd6d2699242efc6776ca1e96ffa2ee9

	added support for alaw and ulaw sample formats. (wave_format_byte_width):

	Fri Jan 16 19:42:30 2004  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc]: added support for alaw and ulaw sample formats.
	        (wave_format_byte_width): the byte width needs not be deductable from
	        the bit-depth (i.e. is different for alaw/ulaw).
	        (wave_handle_read): removed conversion cases by means of using
	        gsl_conv_to_float() instead.

	        * gsldatautils.[hc]: implement alaw/ulaw decoding.

	        * gslloader-wav.c: added support for ALAW and ULAW encoded WAV files.

	        * gslloader-gslwave.c: started support for additional fields.

	        * gslwave.header: document newly supported fields.

	svn path=/trunk/; revision=1810

2004-01-16  Tim Janik 	# a47ad32947600b1c9c7001373d454ea778fc85d1

	fixed typo.

	Fri Jan 16 17:51:53 2004  Tim Janik  <timj@gtk.org>

	        * engine-mplan.txt: fixed typo.

	        * gslengine.c: fixed documentation.

	        * gslopmaster.c: make needs_reset unconditionally indicate whether a
	        module needs a reset() call. check whether a module flagged needs_reset
	        has a reset() function before calling it. defer forced resets until
	        shortly before process().

	        * gslopschedule.c: propagate needs_reset() down a branch similar to
	        suspension state. this fixes missing reset()s of voices where both
	        a suspend and resume job for a voice fell into the same block boundary.

	svn path=/trunk/; revision=1809

2004-01-16  Tim Janik 	# 6cd3eb916d0e8e5a6aa44f291295ba6445a21de3

	execute flow jobs scheduled at block boundary at the start of the new

	Fri Jan 16 04:32:05 2004  Tim Janik  <timj@gtk.org>

	        * gslopmaster.c (master_process_flow): execute flow jobs scheduled at
	        block boundary at the start of the new block, not at the end of the old
	        block (and with that, *after* corresponding accessor or boundary jobs).

	svn path=/trunk/; revision=1808

2004-01-15  Tim Janik 	# a1b19e48b16cb243ff8da6a8b98fcda46cfa3286

	fixed key-event return values.

	Thu Jan 15 23:48:01 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventroll.c:
	        * beast-gtk/bstpianoroll.c:
	        * beast-gtk/bsttrackroll.c: fixed key-event return values.

	svn path=/trunk/; revision=1807

2004-01-15  Tim Janik 	# c514767d5ec80baa5fa49e53a932a04aa9761c17

	in fill_block() step through the sample with a step width of 1 instead of

	Thu Jan 15 14:54:01 2004  Tim Janik  <timj@gtk.org>

	        * gslwavechunk.c: in fill_block() step through the sample with a step
	        width of 1 instead of n_channels, since n_channels wide stepping is
	        performed later on through dirstride values > 1. fixes "clicks" at
	        the start/end of unlooped stereo samples (and looped stereo samples).

	        * gslwaveosc.[hc]:
	        * gslwaveosc-aux.c: support channel selection offset in config struct.

	svn path=/trunk/; revision=1806

2004-01-14  Tim Janik 	# f89dfba50932a5fcfacd0866b3ace238902abff9

	link updates.

	Wed Jan 14 13:31:27 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-historic.texi: link updates.

	svn path=/trunk/; revision=1805

2004-01-13  Vincent van Adrighem 	# 4a5835c57c36a8437f49535c5020575d0061d6c0

	Translation updated by Kees van den Broek.

	2004-01-13  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Kees van den Broek.

	svn path=/trunk/; revision=1804

2004-01-13  Laurent Dhima 	# 1148f7cb939ab19ab4c6e8bae32b80b7a7085594

	*** empty log message ***

	svn path=/trunk/; revision=1803

2004-01-13  Laurent Dhima 	# cfac1431c4846bc141ad6c6c4a36579df6992a68

	Added "sq" to ALL_LINGUAS

	* configure.in: Added "sq" to ALL_LINGUAS

	svn path=/trunk/; revision=1802

2004-01-13  Laurent Dhima 	# e180753c9e400e99a607af45716ad42009931d1c

	Added Albanian translation

	* sq.po: Added Albanian translation

	svn path=/trunk/; revision=1801

2004-01-13  Laurent Dhima 	# cf1aa9d0d4b3abdf4288bbcef7db3742133086e8

	Added Albanian file

	svn path=/trunk/; revision=1800

2004-01-11  Duarte Loreto 	# 4885a22bf92a8c8a0ca716bb128a351bf5b86f2e

	Updated Portuguese translation.

	2004-01-11  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=1799

2004-01-11  Tim Janik 	# 5f3e9c302443b5d90e44f4536bc2027ea837e6cb

	disable scopes, they seem to be broken across reparentation of a parent.

	Sun Jan 11 06:17:51 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackroll.c: disable scopes, they seem to be broken
	        across reparentation of a parent.

	svn path=/trunk/; revision=1798

2004-01-11  Tim Janik 	# 2513a29e7f332a095d0144939f290d6e0c25069e

	properly setup return values, even for empty waves.

	Sun Jan 11 06:18:05 2004  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (parse_raw_data_handle): properly setup return values,
	        even for empty waves.

	        * bsewave.c (parse_wave_chunk): fixed error handling to not mess up
	        scanner state.

	svn path=/trunk/; revision=1797

2004-01-11  Tim Janik 	# f6932be9791ab7c65bbaa5b8d0da27dc0900a0ad

	adapt to gtype.h changes.

	Sun Jan 11 06:20:12 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: adapt to gtype.h changes.

	svn path=/trunk/; revision=1796

2004-01-11  Tim Janik 	# 06516ea0ff05feba5605fde9ad859b0d6c0f863f

	create BSE sound archive indices.

	Sun Jan 11 04:51:53 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-navigation.xml: create BSE sound archive indices.

	        * docs/site-news.texi: announce BSE Sound Archive.

	svn path=/trunk/; revision=1795

2004-01-11  Tim Janik 	# 27f0f70020879e95a1ff47c3d706f6eccf2201ef

	sync with last version from BSE Sound Archive

	svn path=/trunk/; revision=1794

2004-01-10  Tim Janik 	# 9bb9b68072bf9598fc8912120fa7b79914e3b596

	added simple mutex test.

	Sat Jan 10 10:27:40 2004  Tim Janik  <timj@gtk.org>

	        * testsfi.c (test_threads): added simple mutex test.

	        * sfidl-module.cc: rename header local pixstream template to
	        inlined_pixstream() to not have the same name as the related
	        calling class method (triggered by older gcc versions).

	svn path=/trunk/; revision=1793

2004-01-10  Tim Janik 	# e4df3bd353a1cf1173aa4df9b05296274aa4c8f8

	fix include.

	Sat Jan 10 10:09:29 2004  Tim Janik  <timj@gtk.org>

	        * evaluator/compiler.cc: fix include.

	svn path=/trunk/; revision=1792

2004-01-10  Tim Janik 	# 130c9984c4b1a20849d4053808791ea179e4a2db

	major cleanup. downgraded autoconf dependancy to 2.57. disentangled

	Sat Jan 10 10:00:19 2004  Tim Janik  <timj@gtk.org>

	        * autogen.sh: major cleanup. downgraded autoconf dependancy to 2.57.
	        disentangled versions from executable postfix.
	        added check_version(), a function to compare two version strings,
	        fixed all version checks to use check_version().
	        improved messages, don't pretend to use gettextize if instead
	        glib-gettextize is used and required (since it's a good deal
	        different from gettextize). added version checks for intltool
	        and libtool.

	svn path=/trunk/; revision=1791

2004-01-09  Tim Janik 	# 26bd058f916260e5eff759af4861110a79cef282

	added link for Mongolian translation.

	Fri Jan  9 15:41:53 2004  Tim Janik  <timj@gtk.org>

	        * docs/site-development.texi: added link for Mongolian translation.

	svn path=/trunk/; revision=1790

2004-01-09  Tim Janik 	# 3d01177dd031035d0b360a33662c7d9f1516a245

	use G_DEFINE_TYPE() to implement GType boilerplate.

	Fri Jan  9 15:41:53 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstcanvassource.c:
	        * beast-gtk/bsteventroll.c:
	        * beast-gtk/bstfiledialog.c:
	        * beast-gtk/bstitemview.c:
	        * beast-gtk/bstlogadjustment.c:
	        * beast-gtk/bstparamview.c:
	        * beast-gtk/bstpartdialog.c:
	        * beast-gtk/bstpartview.c:
	        * beast-gtk/bstpianoroll.c:
	        * beast-gtk/bstpreferences.c:
	        * beast-gtk/bstqsampler.c:
	        * beast-gtk/bstsequence.c:
	        * beast-gtk/bstsnetrouter.c:
	        * beast-gtk/bstsnifferscope.c:
	        * beast-gtk/bstsupershell.c:
	        * beast-gtk/bsttrackroll.c:
	        * beast-gtk/bsttracksynthdialog.c:
	        * beast-gtk/bsttrackview.c:
	        * beast-gtk/bstwaveview.c:
	        * beast-gtk/bstxframe.c: use G_DEFINE_TYPE() to implement
	        GType boilerplate.

	        * docs/site-development.texi: added link for Mongolian translation.

	svn path=/trunk/; revision=1789

2004-01-09  Tim Janik 	# 2cee234f9bc4ee308777343e8ae32e6dcd0d230f

	added G_DEFINE_TYPE() and variants, which are not provided by glib

	Fri Jan  9 15:03:22 2004  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: added G_DEFINE_TYPE() and variants, which are not
	        provided by glib versions prior to 2.4.

	svn path=/trunk/; revision=1788

2004-01-07  Sanlig Badral 	# 304af72960b0434a31cff94d119e51313da54c7d

	Added Mongolian translation.

	svn path=/trunk/; revision=1787

2004-01-06  Miloslav Trmac 	# 6d093f2e1e012ef0fba82c617e4451424da17658

	Updated Czech translation.

	2004-01-06  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1786

2004-01-06  Stefan Westerfeld 	# 378b72b7fbcecd24bf3df7ad095b5bf908750e8a

	Move predefined Sfi types (like Int, Real, Num) into the Sfi namespace and

	Tue Jan  6 01:36:31 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc sfidl-generator.cc: Move predefined Sfi types (like
		Int, Real, Num) into the Sfi namespace and add an implicit using
		namespace Sfi.

	svn path=/trunk/; revision=1785

2004-01-06  Stefan Westerfeld 	# cb25eab8af5b50d8410233d30757c26efa53986c

	Add typedefs for Sfi::Int, Sfi::Num and similar.

	Tue Jan  6 01:33:47 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Add typedefs for Sfi::Int, Sfi::Num and similar.

	svn path=/trunk/; revision=1784

2004-01-05  Stefan Westerfeld 	# b149a720b3cf6c13871b383776f9f4fdb0f35987

	Support for "using namespace Foo;" statements.

	Mon Jan  5 23:58:38 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Support for "using namespace Foo;" statements.

		* sfidl-namespace.*: Remove obsolete code (class ModuleHelper).

	svn path=/trunk/; revision=1783

2004-01-05  Danilo Šegan 	# dbad5d5db6dbddd34972cebf370188742b110415

	Updated Serbian translation.

	svn path=/trunk/; revision=1782

2004-01-05  Vincent van Adrighem 	# f0314c6009f4053c7b5d13dec7f07b0632d8f54d

	Translation updated by Tino Meinen.

	2004-01-05  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=1781

2004-01-05  Stefan Westerfeld 	# 8d03ab721f9b64802f6453ed3f204f81c01e9cc7

	Next part of createTypeCode breakup: MODEL_NEW, MODEL_COPY and MODEL_FREE

	Mon Jan  5 14:34:50 2004  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.* sfidl-module.* sfidl-generator.*: Next part of
		createTypeCode breakup: MODEL_NEW, MODEL_COPY and MODEL_FREE are
		replaced by funcNew, funcCopy and funcFree instead. These functions
		return a std::string again (which makes writing them easier), whereas
		there are new variants (cTypeArg, ... cFuncNew) returning a const
		gchar* to make using them easy.

	svn path=/trunk/; revision=1780

2004-01-05  Tim Janik 	# a94f480e11ca227ab4e14e865ad074f6baed3471

	removed rc parsing code for yellow tooltips.

	Sun Jan  4 19:47:38 2004  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): removed rc parsing code for yellow
	        tooltips.

	        * docs/generated/Makefile.am: added objdoc.* generation rules.

	svn path=/trunk/; revision=1779

2004-01-05  Tim Janik 	# de95fb53292301933340b2469e2d3f98dcd484cf

	added some test translations.

	Mon Jan  5 01:21:18 2004  Tim Janik  <timj@gtk.org>

	        * de.po: added some test translations.

	svn path=/trunk/; revision=1778

2004-01-05  Tim Janik 	# 067cec31da60aa87a4ae34319ba5898fe38da5a9

	added plugin documentation generation.

	Sun Jan  4 12:30:30 2004  Tim Janik  <timj@gtk.org>

	        * bseautodoc.c (show_plugindoc): added plugin documentation generation.

	        * bseamplifier.idl: refine tooltip.

	        * bsestandardosc.c: added i18n markup.

	svn path=/trunk/; revision=1777

2004-01-04  Christian Neumair 	# 86432e3fc849949409f637745bef18f0e640db6d

	Partitially updated German translation.

	svn path=/trunk/; revision=1776

2004-01-03  Francisco Javier F. Serrador 	# 569e93bf31fd7d6408fd11cda43ea80a803e5ea5

	Added Spanish translation.

	2004-01-03  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

	       	* es.po: Added Spanish translation.

	svn path=/trunk/; revision=1775

2004-01-02  Tim Janik 	# 1d8ba3e7c421bbbe539837c19665ca12ec15554b

	added bse_wave_set_description_bits() to set comment and similar

	Fri Jan  2 19:04:16 2004  Tim Janik  <timj@gtk.org>

	        * bsewave.[hc]: added bse_wave_set_description_bits() to set comment and
	        similar information from wave file descriptions.
	        (bse_wave_load_wave_file): call bse_wave_set_description_bits() if
	        requested.
	        * bsewave.proc: call bse_wave_set_description_bits() when loading waves.

	        * bsewaverepo.proc: call bse_wave_set_description_bits() when loading waves.

	        * gslloader.[hc]: added authors, license and comment fields to
	        wave descriptions.

	        * tests/magictest.c: added -t option to test load file info.

	        * gslcommon.[hc]: register AIFF file loader.

	        * gslloader-aiff.c: new file loader for AIFF files.

	svn path=/trunk/; revision=1774

2004-01-02  Tim Janik 	# 487de3fd9169f64e557de05b28ae3994be4af982

	more libtool file removal.

	Fri Jan  2 14:39:05 2004  Tim Janik  <timj@gtk.org>

	        * ltconfig: more libtool file removal.

	svn path=/trunk/; revision=1773

2004-01-01  Tim Janik 	# 841df3913da8aa95cd8e0732a4a1ab04e3e6fa1f

	update footnotes url

	svn path=/trunk/; revision=1772

2003-12-31  Tim Janik 	# 69e3758991d9cffcb95d4e6ee6045650ca8db457

	new widget, used internally by bsttrackroll.[hc] to display per-track

	Wed Dec 31 16:42:56 2003  Tim Janik  <timj@gtk.org>

	        * bstsnifferscope.[hc]: new widget, used internally by bsttrackroll.[hc]
	        to display per-track scopes.

	        * bsttrackroll.[hc]: make vpanel exactly as wide as hpanel is heigh.
	        create, delete and adjust per-track scope widgets on demand, this
	        uses an idle handler to update the required amount of widgets.
	        got rid of bst_track_roll_set_size_callbacks() and provided
	        bst_track_roll_setup() instead, so the track roll knows about its
	        tree and song directly now.

	        * bsttrackview.[hc]: adapt to BstTrackRoll changes.
	        removed extra tree => trackrool updates that the trackroll handles
	        itself now.

	svn path=/trunk/; revision=1771

2003-12-31  Vincent van Adrighem 	# 4a42e0d633c22ee0ed4095a2cf10909382561179

	Translation updated by Tino Meinen.

	2003-12-31  Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Translation updated by Tino Meinen.

	svn path=/trunk/; revision=1770

2003-12-31  Nedko Arnaudov 	# 9426be774567797e781e544afd78327460fa50a8

	Detect getpwnam_r and getpwnam functions availability.

	Wed Dec 31 01:15:19 2003  Nedko Arnaudov  <nedko@users.sourceforge.net>

	        * configure.in: Detect getpwnam_r and
	        getpwnam functions availability.

	Wed Dec 31 01:05:14 2003  Nedko Arnaudov  <nedko@users.sourceforge.net>

	        * configure.in (AC_BSE_SNDDEV_CHECK): Detect OSS emulation that is
	        not implemented in sys/soundcard.h but in soundcard.h

	svn path=/trunk/; revision=1769

2003-12-31  Nedko Arnaudov 	# 12561bdc498a8e5b227380aad02d102e73acf544

	Use configure detection of OSS emulation that is not implemented in

	Wed Dec 31 01:06:51 2003  Nedko Arnaudov  <nedko@users.sourceforge.net>

	        * bsemididevice-oss.c:
	        * bsepcmdevice-oss.c: Use configure detection of OSS emulation
	        that is not implemented in sys/soundcard.h but in soundcard.h

	svn path=/trunk/; revision=1768

2003-12-31  Nedko Arnaudov 	# 97a73b25dac11043e153ea25f85de0d6d3173277

	Use configure detection of getpwnam_r and getpwnam functions availability.

	Wed Dec 31 01:18:38 2003  Nedko Arnaudov  <nedko@users.sourceforge.net>

	        * sfifilecrawler.c (get_user_home): Use configure detection of
	        getpwnam_r and getpwnam functions availability.

	svn path=/trunk/; revision=1767

2003-12-30  Stefan Westerfeld 	# dfd30f24a8e3b8918e6fc0174f469f0389d175de

	Introduce new CodeGeneratorCxxBase class, which serves as base for

	Wed Dec 31 00:11:48 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.* sfidl-module.*: Introduce new CodeGeneratorCxxBase
		class, which serves as base for CodeGeneratorCxx and
		CodeGeneratorModule.

		* sfidl-cxx.* sfidl-module.* sfidl-generator.*: Started to break up
		createTypeCode into smaller virtual functions, one for each model.
		MODEL_ARG, MODEL_MEMBER, MODEL_RET and MODEL_ARRAY are gone now. The
		functions which replace them are called typeArg, typeField, typeRet
		and typeArray. They also return const gchar*, using
		CodeGeneratorCBase::makeCStr (which takes a std::string, and returns a
		g_intern_string).

		* sfidl-parser.cc: Silence compiler warning about includeImpl being
		unitialized (always will be initialized, but gcc doesn't see that).

	svn path=/trunk/; revision=1766

2003-12-30  Tim Janik 	# 0fcd6fb20f43f5b9eb0fd20b667cc749d7393201

	adapted gxk_nullify_in_object() callers and switched

	Tue Dec 30 23:41:03 2003  Tim Janik  <timj@gtk.org>

	        * *.c: adapted gxk_nullify_in_object() callers and switched
	        gxk_nullify_on_destroy() usages over.

	        * bstitemview.c: use gxk_tree_model_get_iter() instead of
	        gtk_tree_model_get_iter().

	        * beast-gtk/gxk/gxkglobals.[hc]: made gxk_nullify_in_object() take
	        only the hosting object and the object pointer location within the
	        hosting object as arguments. the pointer is assumed to be filled
	        out, pointing to a valid object. this is a much more natural argument
	        order, and a hrdly noticable restriction.
	        removed gxk_nullify_on_destroy() as gxk_nullify_in_object() can be
	        used instead (for all cases gxk_nullify_on_destroy() is used inside
	        beast at least).

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_tree_model_get_iter() to work
	        around a bug in sorted tree models.

	        * tests/cxxbinding.cc:
	        * tests/testplugin.cc: adapt to new procedure writing conventions.

	svn path=/trunk/; revision=1765

2003-12-30  Tim Janik 	# e4b4b89ed8d2ee80068d9be1773f3c3144d341c0

	use GslModule type, strip unnecessary casts, added block_size(),

	Tue Dec 30 23:48:17 2003  Tim Janik  <timj@gtk.org>

	        * bsecxxmodule.[hc]*: use GslModule type, strip unnecessary casts,
	        added block_size(), tick_stamp() and gslmodule() accessors.
	        added wrappers around BseSource accessor macros.

	        * bsecxxplugin.[hc]*: changed procedure registration macro to
	        BSE_CXX_REGISTER_PROCEDURE() and adapted it to put everything into the
	        Procedure namespace.

	        * bsecxxutils.[hc]*: provided convenience typedefs to ease procedure
	        writing in the Procedure namespace.

	        * bsemidireceiver.cc: removed casts.

	        * bsesniffer.[hc]*: implemented stereo sniffing routine, as well as
	        the corresponding procedures and signal + emission thereof.

	        * bsesong.proc: added bse-song-create-sniffer() to create a sniffer
	        for a specific track.

	        * bsesource.c: removed unnecessary casts.

	        * bsetrack.[hc]: added bse_track_connect_sniffer().

	        * gslopmaster.c:
	        * gslengine.[hc]: made gsl_job_flow_access() and gsl_job_boundary_access()
	        take a GslReplyFunc() as free function, made gsl_job_request_reply()
	        match their argument ordering. renamed gsl_externvar_block_size.
	        provided gsl_module_peek_reply().

	svn path=/trunk/; revision=1764

2003-12-30  Görkem Çetin 	# 9258f354134e33159a3f7f3a2f10136a0fe9a7e4

	CVS_SILENT

	svn path=/trunk/; revision=1763

2003-12-30  Francisco Javier F. Serrador 	# 0cfd03bca7667d81bb52fa7a61169aaed4462e72

	Updated Spanish translation by Yelitza Louze

	2003-12-30  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Yelitza Louze

	svn path=/trunk/; revision=1762

2003-12-29  Tim Janik 	# 7392a23416d3fe5f33febab0cb28521de1048125

	fix oversized pixel buffer size computation in memdup.

	Mon Dec 29 20:58:04 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (bst_action_list_add_cat): fix oversized pixel
	        buffer size computation in memdup.

	svn path=/trunk/; revision=1761

2003-12-29  Tim Janik 	# 2f89d8161c7a2b4effafa7cc73936fdabd785a17

	start at a module to report current sample data or statistics thereof.

	Mon Dec 29 21:00:23 2003  Tim Janik  <timj@gtk.org>

	        * bsesniffer.idl:
	        * bsesniffer.cc: start at a module to report current sample data
	        or statistics thereof. this needs to have its own procedures, signals,
	        and a context merging module.

	        * opnode.[hc]:
	        * gslopmaster.c:
	        * gslengine.[hc]: implemented ENGINE_JOB_REQUEST_REPLY and
	        gsl_job_request_reply() to support delayed round trip jobs.
	        unified destruction logic of reply jobs and timed jobs.
	        (gsl_module_process_reply): new function to send a reply job
	        back to the client.

	        * gslopmaster.c: claim ownership for a node in ENGINE_JOB_INTEGRATE.

	        * gsloputil.[hc]:
	        renamed _engine_mnl_reorder() to _engine_mnl_node_changed() since it
	        also collects trash reply jobs now.
	        (free_node): free unused reply jobs, fixed leaks of job data from
	        discarded transactions for ENGINE_JOB_INTEGRATE, ENGINE_JOB_FLOW_JOB
	        and ENGINE_JOB_BOUNDARY_JOB.
	        (gsl_engine_garbage_collect): call reply job handlers as early as
	        possible.

	        * bsecxxbase.[hc]: renamed add_param(). implemented add_signal().

	        * bseobject.[hc]: export bse_object_marshal_signal() to allow C++
	        object signals.

	        * bsecxxmodule.[hc]*: added lots of GslModule related hooks so
	        more advanced modules dealing with BseSource or engine internals can
	        still be written in C++.
	        moved BSE_CXX_DEFINE_CREATE_MODULE(), BSE_EFFECT_INTEGRATE_MODULE()
	        and BSE_CXX_DEFINE_MODULE_CONFIGURATOR() here from bsecxxplugin.h.

	        * bsemidireceiver.cc (voice_switch_module_free): fix free'd
	        memory access.

	        * bse/bsetype.h: support FBlock pspecs.

	        * bseprocidl.cc: guard against already-destroyed signals.

	svn path=/trunk/; revision=1760

2003-12-29  Tim Janik 	# b719254d628d9eaee160d352d32dec42a90bc176

	s/canonify_type/canonify_name/. made more functions return const char*,

	Mon Dec 29 21:16:07 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: s/canonify_type/canonify_name/. made more functions
	        return const char*, added TYPE_NAME(). implemented signal registration
	        and emission glue. declare classes and procedures early enough, so their
	        type ids may be used within the class definitions.

	svn path=/trunk/; revision=1759

2003-12-29  Tim Janik 	# 396f530387da04eacd69602696aa9367f0ba87c2

	add missing <unistd.h>, reported by Nedko Arnaudov for OpenBSD.

	Mon Dec 29 20:48:58 2003  Tim Janik  <timj@gtk.org>

	        * tests/cxxbinding.cc: add missing <unistd.h>, reported by Nedko
	        Arnaudov for OpenBSD.

	svn path=/trunk/; revision=1758

2003-12-29  Duarte Loreto 	# 23daef3dbd343ab319e044546d4ce31f3718b836

	Updated Portuguese translation.

	2003-12-29  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=1757

2003-12-29  Miloslav Trmac 	# bee7adeaa2ec3b118477775cfb953168a6897f58

	Updated Czech translation.

	2003-12-29  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1756

2003-12-29  Tim Janik 	# f30f1153e185bb03764402f828f7c2997e650707

	updated to version 0.5.6, refined module positions and names for

	Sun Dec 28 19:44:00 2003  Tim Janik  <timj@gtk.org>

	        * test/test-song.bse: updated to version 0.5.6, refined module
	        positions and names for screenshots.

	svn path=/trunk/; revision=1755

2003-12-29  Tim Janik 	# 51f395e6c94e3ea154b1e71f7fa81f23fac9f045

	nimor fix

	svn path=/trunk/; revision=1754

2003-12-29  Tim Janik 	# ec7e08f57b5ef338ded29d93fa07e88fe21b4520

	include intltool-modules/XML/Parser/Style/OrigTree.pm into distribution

	Mon Dec 29 18:05:14 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am: include intltool-modules/XML/Parser/Style/OrigTree.pm
	        into distribution tarballs.

	        * docs/site-news.texi: announce patch-beast-0.5.6-0.5.6+intltool.bz2
	        which fixes intltool issues with beast-0.5.6.tar.gz.

	svn path=/trunk/; revision=1753

2003-12-29  Tim Janik 	# 8efda89a1e4d39c7275cb4c7d1cb68558ede23db

	announce release, screenshot updates etc.

	Mon Dec 29 12:54:07 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce release, screenshot updates etc.

	        * autogen.sh: up autoconf dedendancy to 2.58 since earlier version
	        aren't working correctly on all platforms to build beast.

	svn path=/trunk/; revision=1752

2003-12-29  Danilo Šegan 	# ee6f15910598d37d5a8fa582d25bb0c06a5052bc

	Updated Serbian translation.

	svn path=/trunk/; revision=1751

2003-12-28  Tim Janik 	# 255d2001eda51d0099280442fcf466922080dab3

	don't enforce copies for intltool and gettext files.

	svn path=/trunk/; revision=1750

2003-12-28  Tim Janik 	# 08055bf0b3f71d7f8c31f6a1263c2cd401f7168f

	shutup

	svn path=/trunk/; revision=1749

2003-12-28  Tim Janik 	# 11d3a0ad307259e061e228f83247accf72f8b3a7

	run libtoolize automatically, so developers get their beast build with

	Sun Dec 28 18:39:22 2003  Tim Janik  <timj@gtk.org>

	        * autogen.sh: run libtoolize automatically, so developers
	        get their beast build with their system specific libtool.

	        * config.guess:
	        * config.sub:
	        * ltmain.sh: remove these files.

	svn path=/trunk/; revision=1748

2003-12-28  Tim Janik 	# 349cdf98f28a5b8b6867f358321d49275cb95316

	use grep >/dev/null instead of grep -q which is GNU specific

	svn path=/trunk/; revision=1747

2003-12-28  Tim Janik 	# 5388d568d61d0bc82148a43711270b7d3b80940a

	site updates

	svn path=/trunk/; revision=1746

2003-12-28  Tim Janik 	# e3c3ca175d6ebfd23e50efe695af7bb6964240f0

	released 0.5.6.

	Sun Dec 28 13:06:01 2003  Tim Janik  <timj@gtk.org>

	        * released 0.5.6.

	svn path=/trunk/; revision=1744

2003-12-28  Tim Janik 	# e54443579ee61bf0b8b11828ac28dad318dcdadb

	contributor updates

	svn path=/trunk/; revision=1743

2003-12-28  Tim Janik 	# 115580c55b8f573d2a458a28aa2355c1a8f3f193

	updates

	svn path=/trunk/; revision=1742

2003-12-28  Tim Janik 	# d671c80e908226701bc39492d7e42055d523b662

	minor cosmetics

	svn path=/trunk/; revision=1741

2003-12-28  Tim Janik 	# 40520c91e727309f9749bb5ff677124baf055176

	new files, containing a MIDI file parser (based on BseMidiDecoder) and a

	Thu Dec 25 07:25:51 2003  Tim Janik  <timj@gtk.org>

	        * bsemidifile.[hc]: new files, containing a MIDI file parser (based on
	        BseMidiDecoder) and a rudimentary MIDI file to BseSong converter.

	svn path=/trunk/; revision=1740

2003-12-28  Tim Janik 	# 92b4fe7491747b338bfe235defae5ca7d62c865f

	up version to 0.5.6, binary/interface age 0.

	Sun Dec 28 11:31:44 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.5.6, binary/interface age 0.

	svn path=/trunk/; revision=1739

2003-12-28  Tim Janik 	# 2a273d32bfb1a3690397904d44582e464a6a7c86

	don't popup the clue hunter via tab for non-editable entries. make popup

	Sun Dec 28 11:22:50 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcluehunter.[hc]: don't popup the clue hunter via tab for
	        non-editable entries. make popup arrow react to editability of the
	        entry (user configurable).

	        * beast-gtk/gxk/gxkparam-spinner.c:
	        * beast-gtk/bstparam-note-spinner.c:
	        * beast-gtk/bstparam-searchpath.c:
	        * beast-gtk/bstparam-proxy.c: added extra logic to the various GUI
	        elements to act according to param editability.

	        * beast-gtk/gxk/gxkparam.c:
	        (param_update_flags): auto-update sensitivity of all attached widgets.
	        (gxk_param_add_object): adjust sensitivity of newly added widgets.
	        (gxk_param_apply_value): refuse to alter object values for non-editable
	        or insensitive parameters.
	        (gxk_param_apply_default): use gxk_param_apply_value().
	        (gxk_param_entry_set_text): auto-adjust entry editability.

	svn path=/trunk/; revision=1738

2003-12-28  Tim Janik 	# 980804b6d4be22a9d3a0382368b1d53d23a91326

	disable non-functional rack editor and procedure browser.

	Sun Dec 28 10:28:08 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (app_action_check): disable non-functional
	        rack editor and procedure browser.

	svn path=/trunk/; revision=1737

2003-12-28  Tim Janik 	# 2cf6da53942d5e3eb7fee64937827d4ca996384b

	s/nominator/numerator/.

	Sun Dec 28 10:24:29 2003  Tim Janik  <timj@gtk.org>

	        * bserecords.idl:
	        * bsesong.[hc]:
	        * gslfilter.c: s/nominator/numerator/.

	svn path=/trunk/; revision=1736

2003-12-28  Tim Janik 	# dcf121dab2812a86a4b91d1a1cffb63fd5243912

	exploiting a bug on linux wrg symbol exports, give precedence to

	Sun Dec 28 07:04:42 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkdialog.c (gxk_dialog_key_press_event): exploiting a
	        bug on linux wrg symbol exports, give precedence to unmodified
	        accelerators by using _gtk_window_activate_key(), this needs to be fixed
	        to become portable again, once gtk exposes _gtk_window_activate_key().

	svn path=/trunk/; revision=1735

2003-12-28  Tim Janik 	# 27df4b684e30520070770b2b6036f334e8f9d435

	added midi-import action.

	Fri Dec 26 22:34:16 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: added midi-import action.

	        * beast-gtk/bstfiledialog.[hc]: added midi-import file dialog.

	svn path=/trunk/; revision=1734

2003-12-28  Tim Janik 	# 2ca057a2c24a690f66fdfbfb21bbf22928eaa481

	comment fixups. added SMF meta event types. renamed event tick_stamp field

	Thu Dec 25 07:25:51 2003  Tim Janik  <timj@gtk.org>

	        * bsemidievent.[hc]: comment fixups. added SMF meta event types.
	        renamed event tick_stamp field to delta_time. added global macros
	        to check for channel-voice, system-common and system-realtime
	        messages.
	        (bse_midi_signal_default): adjusted #7 (volume) default and added
	        defaults for #10 (Panorama) and #11 (Expression).
	        (boxed_copy_midi_event): fix bogus allocation and copying.
	        (bse_midi_free_event): properly free the new event types.

	        * bsemididecoder.[hc]: lots of fixes, added SMF delta time and meta
	        event parsing. turned the decoder into a proper state machine.

	        * bsessequencer.c:
	        * bsemidireceiver.cc: cosmetic fixups, adapt to renames.

	        * bseproject.proc: added import-midi-file() procedure.

	        * bsemidievent.h:
	        * bserecords.idl: fixed midi signal type names, added some.

	svn path=/trunk/; revision=1733

2003-12-28  Tim Janik 	# 0b2398272c5d5cd33b73aeb84a447fefcbbb8707

	protect parameter from change notification during GUI updates. (fixes

	Sun Dec 28 05:07:08 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkparam.c: protect parameter from change notification
	        during GUI updates. (fixes option menus changing object properties
	        seemingly randomly).

	svn path=/trunk/; revision=1732

2003-12-27  Miloslav Trmac 	# a259e92d7dda082cc3c23d60f8d7f01702a99336

	Updated Czech translation.

	2003-12-27  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1731

2003-12-24  Duarte Loreto 	# e07af88b68e25372619718ca79cb0e1f23a58bae

	Updated Portuguese translation.

	2003-12-23  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=1730

2003-12-23  Tim Janik 	# b5e9734d7d4af1b104fe0a9fc9bb1037d87e1fe0

	fix idl generation rules

	svn path=/trunk/; revision=1729

2003-12-23  Tim Janik 	# 0ff65fcf7c19b8e145556c342af17510e72c1c2a

	make distcheck fixes

	svn path=/trunk/; revision=1728

2003-12-23  Francisco Javier F. Serrador 	# 574b0e24b4e6c1181ef2014c8c65b177b241f9f5

	Updated spanish tranlation. Merged Spanish translation from Ismael with

	2003-12-23  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated spanish tranlation. Merged Spanish translation
			 from Ismael with compendia.

	svn path=/trunk/; revision=1727

2003-12-23  Tim Janik 	# 3cb9d2b09efb939ea3ed5af5b8218c3186e257c5

	updates

	svn path=/trunk/; revision=1726

2003-12-23  Tim Janik 	# 26d8a9261e65da3c323d366c13b03471414a06fd

	fixed minor GUI quirks.

	Tue Dec 23 06:06:54 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c: fixed minor GUI quirks.

	svn path=/trunk/; revision=1725

2003-12-23  Tim Janik 	# a3cd0769559aebc35064a42ac1b66662a93d2450

	use proc->help instead of proc->blurb (which is gone now).

	Tue Dec 23 05:22:09 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c: use proc->help instead of proc->blurb (which
	        is gone now).

	        * library/scripts/record-midi.scm:
	        * library/scripts/modules2grid.scm:
	        * library/scripts/progressor-example.scm:
	        * library/scripts/song-parts-operations.scm: introduced options field
	        and switched category position to unify field order with plugins.

	        * tests/Makefile.am: build plugin as lib_LTLIBRARIES, so it can actually
	        be loaded (is a proper .so file).

	        * tests/cxxbinding.cc: added a bunch of cleanups. added plugin procedure
	        test. actually error out if things fail.

	        * tests/testplugin.cc: implemented test_exception() procedure.

	        * tests/testplugin.idl: declare test_exception() procedure, added
	        test enum.

	svn path=/trunk/; revision=1724

2003-12-23  Tim Janik 	# c4540c400040262f60a10be2ef0be9933e10a9f9

	adapted to field order changes in BSE_REGISTER_OBJECT().

	Tue Dec 23 05:46:26 2003  Tim Janik  <timj@gtk.org>

	        * plugins/*.c: adapted to field order changes in BSE_REGISTER_OBJECT().

	svn path=/trunk/; revision=1723

2003-12-23  Tim Janik 	# 585dae236d89927823cd6f78b4caeabad8a0aa11

	disabled .la loading, expect readily loadable .so files instead.

	Tue Dec 23 05:24:53 2003  Tim Janik  <timj@gtk.org>

	        * bseplugin.[hc] (bse_plugin_check_load): disabled .la loading, expect
	        readily loadable .so files instead.
	        (bse_plugin_path_list_files): allow plugin path to contain executable
	        files (instead of directories).

	        * bseprocedure.[hc]: removed blurb, name, authors, help and license
	        fields from procedures as these informations are kept on types now.
	        provide BSE_PROCEDURE_NAME() for easy name access.

	        * bsescripthelper.[hc]: introduced "options" field for scripts.

	        * mkcproc.pl:
	        * bseplugin.[hc]:
	        * bsescripthelper.[hc]:
	        * bseexports.h: unified type info field order, keep blurb etc. only
	        via bse_type_*() accessors.

	        * mkcproc.pl: support OPTIONS.

	        * *.proc: BLURB => HELP fixes.

	        * bseautodoc.c: don't generate @refBlurb{} andymore since procedures
	        only have "help" now.

	        * bsequery.c: added -:f option for fatal warnings.

	        * bseparasite.proc: removed i18n markup, which is not supported for C
	        procedures (procedures need to be ported to C++ long-term).

	        * *.c: fixes about accessing authors/license/blurb through bsetype.h,
	        removed code to keep type info on procedures.

	svn path=/trunk/; revision=1722

2003-12-23  Tim Janik 	# c13f1b4f567656527e69da7174a516f0cf2126b1

	turn checks in createTypeCode() into assertions to avoid wiritng broken

	Tue Dec 23 05:05:06 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-generator.cc: turn checks in createTypeCode() into assertions
	        to avoid wiritng broken files.

	        * sfidl-module.[hc]*: return C strings from TypeName(), TypeRef() and
	        TypeField() (renamed from TypeMember()). adaptions to non-std::string
	        returns. reverted using TypeMember() instead of TypeRef() for property
	        and parameter types (changed by stefan) as this broke enum type usages.
	        added Info root_category; hack for procedures, since categories from
	        idl files are always translated.

	        * sfiglue.[hc], sfigluecodec.[hc]: removed blurb from procedure
	        description.

	svn path=/trunk/; revision=1721

2003-12-22  Tim Janik 	# 467eb60a1c2549097fa75622fa0bef82c872f803

	don't show unstable plugins without --devel.

	Mon Dec 22 23:59:03 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: don't show unstable plugins without
	        --devel.

	        * beast-gtk/bstmain.c: changed --devel description somewhat.

	        * beast-gtk/bstutils.[hc]: added bst_action_list_from_cats_pred(),
	        a variant to bst_action_list_from_cats() which allowes for a custom
	        predicate to filter cetgories.

	svn path=/trunk/; revision=1720

2003-12-22  Tim Janik 	# ab63e29e6ec97196ac92caca78150fa06e3adc8c

	declare this plugin "unstable" through type options.

	Mon Dec 22 23:58:47 2003  Tim Janik  <timj@gtk.org>

	        * evaluator/bseevaluator.idl: declare this plugin "unstable" through
	        type options.

	svn path=/trunk/; revision=1719

2003-12-22  Tim Janik 	# 853a0f6d234b53d70c60786640cf1a639c485e3a

	initialize options field in export nodes.

	Mon Dec 22 23:59:28 2003  Tim Janik  <timj@gtk.org>

	        * bsecxxplugin.h: initialize options field in export nodes.

	        * bseplugin.c: register type options from plugins.

	        * bseplugin.h: let C plugins default to NULL options.

	        * mkcproc.pl: let C procedures default to NULL options.

	        * bseprocedure.proc: provide bse-type-options().

	        * bsetype.[hc]: allow for storing per-type options.

	svn path=/trunk/; revision=1718

2003-12-22  Tim Janik 	# 3290c370b1f041a7c4a930b44395956e059b2906

	support per-type options for procedures and objects.

	Mon Dec 22 23:56:45 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: support per-type options for procedures and objects.

	svn path=/trunk/; revision=1717

2003-12-22  Tim Janik 	# 0d408b556d039278f3e67578053612a3e8c6f64f

	s/GxkGadgetOpt/GxkGadgetArgs/.

	Mon Dec 22 19:52:16 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkgadget.[hc]:
	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: s/GxkGadgetOpt/GxkGadgetArgs/.

	svn path=/trunk/; revision=1716

2003-12-22  Danilo Šegan 	# 523710d690c56d552749b61dd3e1237b32f0d614

	Updated Serbian translation.

	svn path=/trunk/; revision=1715

2003-12-21  Tim Janik 	# 2dcb3ec1dfb9dab931cfe53a768f67f958b9ecce

	updates

	svn path=/trunk/; revision=1714

2003-12-21  Tim Janik 	# 4d802c7ead2fcabd0769b2d89619356901f9a246

	added missing tooltips.

	Mon Dec 22 00:49:05 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveview.c: added missing tooltips.

	        * tests/Makefile.am: create the testplugin via noinst_LTLIBRARIES,
	        to not clutter a public installation directory.

	svn path=/trunk/; revision=1713

2003-12-21  Tim Janik 	# 2d6797a582fc0baf0d66d722e959c91eddb03dfb

	another major overhaul of variable scoping in xml files. all variables in

	Sun Dec 21 19:30:56 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkgadget.[hc]: another major overhaul of variable
	        scoping in xml files. all variables in an <xdef:... ...=... > line
	        are named call-arguments to the parent type.
	        all variables in <widget ...=... /> lines are (named) call-arguments to
	        widget. call-arguments to parent types are properly bound to inheritance
	        depth, and due to the different scopes and named argument support,
	        variables may reference equally named variable values, e.g.
	        label="$label" (where $label is simply assumed empty for endless
	        recursion).
	        added comparison macro-functions, <, >, <=, >=, == and !=, as well
	        as two-letter variants. added $(first-occupied) macro-function which
	        returns the first non-empty argument from its argument list.
	        (gxk_gadget_data_copy_call_options): for factories, flatten and expand
	        all call arguments to parent types into a single option list.
	        (gxk_gadget_define_widget_type): allow call arguments for most GtkWidget
	        properties.
	        (mf_null_collapse): fixed segfault possibility.
	        (node_define): restricted prop: arguments to xdef: lines.

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: adapt to gxkgadget.[hc] scoping
	        changes by passing on call-arguments to the action widgets.

	        * beast-gtk/dialogs/gadgets-beast.xml: removed prop: arguments from
	        non-xdef: lines. used new GtkWidget arguments. other small fixes.

	        * beast-gtk/dialogs/gadgets-standard.xml: extended many widget
	        types to take extra arguments. improved/fixed things by using new
	        scoping and macro-functions.

	        * beast-gtk/gxk/gxkdialog.[hc]: explicitely maintain a child pointer
	        and allow the passed in child to already have parents.

	        * beast-gtk/bstcanvassource.c: fix inner GtkFrame border being
	        overwritten (apears to be a GtkFrame bug).

	svn path=/trunk/; revision=1712

2003-12-21  Tim Janik 	# 1aa3d2fb5281e0cd3eccca43483cd1e75d5217bf

	*** empty log message ***

	svn path=/trunk/; revision=1711

2003-12-21  Stefan Westerfeld 	# 7650db2371ba9128e28d24c8f8836343910b3425

	foo.

	svn path=/trunk/; revision=1710

2003-12-21  Stefan Westerfeld 	# 2a3f6722ddc4998a27383fef82df3f7321cfa2b0

	Removed iterator usage (no more iterators in Bse::Sequence).

	Sun Dec 21 22:10:05 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/cxxbinding.cc: Removed iterator usage (no more iterators in
		Bse::Sequence).

	svn path=/trunk/; revision=1709

2003-12-21  Stefan Westerfeld 	# 2a4cff45020817f9414e7ff0f5a8099800fc893e

	Cleaned up the Bse::Sequence template. No more iterators. They were not

	Sun Dec 21 20:41:46 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h tests/testsmart.cc: Cleaned up the Bse::Sequence
		template. No more iterators. They were not working anyway.

	svn path=/trunk/; revision=1708

2003-12-21  Stefan Westerfeld 	# c11f409d492481cd1bca1fa3350bac31fecd5d39

	Use Bse::Sequence as sequence template for all sequences (not only for the

	Sun Dec 21 20:40:15 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.cc: Use Bse::Sequence as sequence template for all
		sequences (not only for the record based sequences).

	svn path=/trunk/; revision=1707

2003-12-21  Stefan Westerfeld 	# 6ebb441ab24c32d4bd5e29440bf215994e989c8f

	Support for #include-impl "foo.idl", which works like #include, but also

	Sun Dec 21 20:19:31 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Support for #include-impl "foo.idl", which works
		like #include, but also generates code for files which are
		implincluded.

	svn path=/trunk/; revision=1706

2003-12-21  Tim Janik 	# bbdf5c304b6b9707bff0ad4f5edbaabdb80c4c22

	cosmetics

	svn path=/trunk/; revision=1705

2003-12-21  Stefan Westerfeld 	# 0313259d38fbddd60b6cc04cfb4824134b343ee6

	Added syntax=cpp in vim mode lines.

	svn path=/trunk/; revision=1704

2003-12-21  Stefan Westerfeld 	# fe629488a8ccfd80392e522b3f17faf233ca3519

	Removed support for generic PSpec type.

	Sun Dec 21 04:23:03 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.cc sfidl-module.cc testidl.idl: Removed support for
		generic PSpec type.

		* sfidl-parser.*: Removed support for generic PSpec type. Fixed
		#include "/some/absolute/path.idl".

	svn path=/trunk/; revision=1703

2003-12-20  Stefan Westerfeld 	# 6231551396636756fc85f3a954fc1f821fb2aa0d

	Provide a plugin for testing the language binding(s).

	Sat Dec 20 21:24:55 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/testplugin.idl tests/testplugin.cc: Provide a plugin for
		testing the language binding(s).

		* tests/cxxbinding.cc: Load testplugin.

		* tests/Makefile.am: Build testplugin.

	svn path=/trunk/; revision=1702

2003-12-20  Stefan Westerfeld 	# a6428a7b7e10349a209957f798a27f06d86efba6

	Added a note about Makefile.plugins causing trouble.

	svn path=/trunk/; revision=1701

2003-12-20  Stefan Westerfeld 	# 26a9c9ebe12ffe7a6cb71dfb743dd6a89b850b89

	Added size_type typedef and size() function to our Sequence template (like

	Sat Dec 20 20:47:25 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added size_type typedef and size() function to our
		Sequence template (like in std::vector).

		* bseprocidl.cc: Support for properties (although without grouping).
		Reenable (most) signals.

	svn path=/trunk/; revision=1700

2003-12-20  Stefan Westerfeld 	# 4f57836ee09978a650804d213aaa9d8cbf9e4b05

	Support properties. Generate proper implamantations for _to_rec and

	Sat Dec 20 20:56:29 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.*: Support properties. Generate proper implamantations for
		_to_rec and _to_seq for records/sequences.

	svn path=/trunk/; revision=1699

2003-12-20  Tim Janik 	# 07ad97bcf57611aacd0e4127a142b0846192bb85

	allow variables referencing themselves, i.e. label="foo-$label". this

	Sat Dec 20 19:49:02 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkgadget.c: allow variables referencing themselves,
	        i.e. label="foo-$label". this actually makes sense, since we have
	        multiple variables lists in an environment to lookup values.
	        (env_expand_option_value): record a successfull variable lookup onto
	        a recursion stack while expanding its value.
	        (env_find_quark): don't return variable values that are listed
	        in the recursion stack.

	svn path=/trunk/; revision=1698

2003-12-20  Tim Janik 	# 396c06d91fb02ca5a99c00de2ff263c0c7c09c25

	speed up comparisons by turning all internally stored option names into

	Fri Dec 19 19:41:30 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkgadget.c (gxk_gadget_options_get): speed up
	        comparisons by turning all internally stored option names into quarks.

	svn path=/trunk/; revision=1697

2003-12-20  Tim Janik 	# f70c2a7c104bc71c3dbfe67a11cc07f864438cc2

	fix conflict remains

	svn path=/trunk/; revision=1696

2003-12-20  Francisco Javier F. Serrador 	# 026ef89815b7fc63d35c4ba0b80b5b9f90e70490

	Updated Spanish translation by Ismael Rubio Rojas

	2003-12-20  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Ismael Rubio Rojas

	svn path=/trunk/; revision=1695

2003-12-19  Francisco Javier F. Serrador 	# 6b24150a19e30cf166228e8cd42f7a99cd342371

	Updated Spanish translation by Ismael A. Rubio Rojas

	2003-12-19  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Ismael A. Rubio Rojas

	svn path=/trunk/; revision=1694

2003-12-19  Danilo Šegan 	# 7fef54e8a14d841626fc970a68b643e6a05d1f4f

	Updated Serbian translation.

	svn path=/trunk/; revision=1693

2003-12-19  Tim Janik 	# c3ac5173e324124db8c6f303b022c7435f45c1f0

	updates

	svn path=/trunk/; revision=1692

2003-12-18  Vincent van Adrighem 	# 3d8b98f0ef1a52b510174cb1b490a96904f566b6

	Dutch translation updated by Tino Meinen.

	2003-12-18   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Tino Meinen.

	svn path=/trunk/; revision=1691

2003-12-18  Miloslav Trmac 	# 72dee0df24862aa510403facaaa499038867be86

	Updated Czech translation.

	2003-12-18  Miloslav Trmac  <mitr@volny.cz>

		* cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1690

2003-12-18  Tim Janik 	# e40e3925aba9e478e95bd426705f3a1e06dda1f3

	use g_intern_strconcat() in generated static member functions to construct

	Thu Dec 18 00:56:55 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: use g_intern_strconcat() in generated static member
	        functions to construct translated plugin categories, so plugins don't
	        leak across reloads.

	        * glib-extra.[hc]: added g_intern_strconcat() which is a convenience
	        wrapper around g_strconcat() and g_intern_string().
	        removed g_strref() and g_strunref() because that'd be yet another
	        string allocation case that has to be paid attention to.

	svn path=/trunk/; revision=1689

2003-12-17  Tim Janik 	# d40f2bc8896ba32125b1782d938f82d4526ef396

	removed hacks around degenerated structures (instead of NULL pointers).

	Thu Dec 18 00:25:41 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: removed hacks around degenerated
	        structures (instead of NULL pointers).

	        * beast-gtk/bstutils.c: likewise.

	svn path=/trunk/; revision=1688

2003-12-17  Tim Janik 	# 60659dfc38e5053eef30a0ad6ce56d3a9479520c

	set the icon to NULL instead of creating a degenerated one. removed

	Wed Dec 17 23:54:22 2003  Tim Janik  <timj@gtk.org>

	        * bsecategories.c (bse_category_from_id): set the icon to NULL instead
	        of creating a degenerated one. removed degenerated dummy-icon hacks.

	svn path=/trunk/; revision=1687

2003-12-17  Tim Janik 	# 71c3a43489696eed94847c30c831b09b8ccde0fe

	allow NULL rec/seq on _copy_shallow(). this also removes

	Wed Dec 17 23:58:05 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-generator.cc: allow NULL rec/seq on _copy_shallow().
	        this also removes _copy_shallow_internal(), indentation fixes.
	        added FIXMEs that still need to be taken care off.

	        * sfiglue.c (sfi_glue_vcall_rec): do't create empty record
	        instead of NULL returns.

	svn path=/trunk/; revision=1686

2003-12-17  Tim Janik 	# 09bdb004212a0c9079366f2b785f211bf0567434

	renamed SFI_PARAM_DEFAULT to SFI_PARAM_STANDARD.

	Wed Dec 17 23:49:49 2003  Tim Janik  <timj@gtk.org>

	        * *.[hci]*: renamed SFI_PARAM_DEFAULT to SFI_PARAM_STANDARD.

	svn path=/trunk/; revision=1685

2003-12-17  Tim Janik 	# 3b8c9cefc3795d621521d03bda8e51d293cf9168

	work around label logic not dealing with text==NULL, and

	Wed Dec 17 19:39:48 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxksimplelabel.c: work around label logic not dealing
	        with text==NULL, and pango_layout_set_text() not figuring text length
	        for length=-1, text=NULL.

	svn path=/trunk/; revision=1684

2003-12-17  Tim Janik 	# 6272e001a6d57d3bc2ee84a35cc595da1ab6a22e

	make messages warnings in debugging mode.

	Wed Dec 17 19:55:58 2003  Tim Janik  <timj@gtk.org>

	        * bseglue.c (bglue_exec_proc): make messages warnings in debugging mode.

	svn path=/trunk/; revision=1683

2003-12-17  Tim Janik 	# 142b7d357de4fee70375be5ce032be3924396c7a

	show experimental router only for --devel. fixed MidiSynth GUI generation.

	Wed Dec 17 19:12:57 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsupershell.c: show experimental router only for --devel.
	        fixed MidiSynth GUI generation.

	svn path=/trunk/; revision=1682

2003-12-17  Tim Janik 	# 430ef629fc19d8ec0694bd41765b64a00aa3db02

	added plugins/davbassfilter.idl

	svn path=/trunk/; revision=1681

2003-12-17  Tim Janik 	# 308faeac06d0fd3396b59f45ae3ca10d1d9c86b5

	added DavBassFilter icon.

	Wed Dec 17 19:23:56 2003  Tim Janik  <timj@gtk.org>

	        * icons/davbassfilter.png: added DavBassFilter icon.

	        * davbassfilter.idl:
	        * davbassfilter.cc: ported DavBassFilter.

	        * davbassfilter.[hc]: removed old DavBassFilter code.

	svn path=/trunk/; revision=1680

2003-12-17  Tim Janik 	# 477992238baf2272858a75a3ceb6b172051b0762

	CVS copy of davbassfilter.c.

	Wed Dec 17 19:19:08 2003  Tim Janik  <timj@gtk.org>

	        * davbassfilter.cc: CVS copy of davbassfilter.c.

	svn path=/trunk/; revision=1679

2003-12-17  Tim Janik 	# 41b0619a6bdac856b7d7a500d50a66a2f411c304

	allow options argument for Trigger pspecs.

	Wed Dec 17 19:14:11 2003  Tim Janik  <timj@gtk.org>

	        * bse/bsetype.h: allow options argument for Trigger pspecs.

	svn path=/trunk/; revision=1678

2003-12-17  Tim Janik 	# a8f31fbdf86e9c9854fc0388177a680895b36a5e

	fixed lookup bug. continue string searches after wrong substring matches.

	Wed Dec 17 19:15:30 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.c (g_option_find_value): fixed lookup bug.
	        continue string searches after wrong substring matches.

	svn path=/trunk/; revision=1677

2003-12-16  Tim Janik 	# c4903f30f7c83e5ddf22bc6479deab297e7d933e

	updates

	svn path=/trunk/; revision=1676

2003-12-16  Stefan Westerfeld 	# 796621ddda8541bd70beddad1e3f0e7732c3ef4f

	update TODO

	svn path=/trunk/; revision=1675

2003-12-16  Tim Janik 	# a00b70fcdc94f17c0c6c6857e41c679e24621f83

	updates

	svn path=/trunk/; revision=1674

2003-12-16  Tim Janik 	# 2dc5c9f37ef24ba7842e6086105d2e8b2dd44e5a

	updates

	svn path=/trunk/; revision=1673

2003-12-16  Miloslav Trmac 	# f820d03fd058c090ab436c0512ba539ccb69cd92

	Added cs to ALL_LINGUAS.

	2003-12-16  Miloslav Trmac  <mitr@volny.cz>

	        * configure.in: Added cs to ALL_LINGUAS.

	        * docs/site-development.texi: Added link to Czech translation status
	        page.

	svn path=/trunk/; revision=1672

2003-12-16  Miloslav Trmac 	# b33364b2ab8aaa14f34091e8523c136b57546830

	Updated Czech translation.

	2003-12-16  Miloslav Trmac  <mitr@volny.cz>

	        * cs.po: Updated Czech translation.

	svn path=/trunk/; revision=1671

2003-12-16  Tim Janik 	# fcdeb19ca94e56a9c58310afdceae8c51904608b

	show authors/license fields.

	Tue Dec 16 12:00:55 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c: show authors/license fields.

	        * beast-gtk/dialogs/gadgets-beast.xml: added missing piano-clear-undo
	        actions to piano-roll popup menus.

	        * beast-gtk/bstpartdialog.c: register missing piano-clear-undo actions.

	svn path=/trunk/; revision=1670

2003-12-16  Tim Janik 	# 9f4adf8059cfc265d38ce3276e5bef46f4c3611b

	assign authors and license fields in BseExportNode.

	Tue Dec 16 11:59:43 2003  Tim Janik  <timj@gtk.org>

	        * bsecxxplugin.h: assign authors and license fields in BseExportNode.

	        * bseexports.h: added authors and license fields.

	        * bseitem.proc: provide get-type-authors() and get-type-license()
	        procedures on items.

	        * bseplugin.[hc]: register plugin authors and license with types.

	        * bsetype.[hc]: provide bse_type_{add|get}_{blurb|authors|license}().
	        _blurb variants got renamed, changed callers.

	svn path=/trunk/; revision=1669

2003-12-16  Tim Janik 	# 47c17a7ac39e49c4d7225d10967b25eafa76af8f

	provide static accessors in generated Base objects for authors and license

	Tue Dec 16 11:52:25 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: provide static accessors in generated Base objects
	        for authors and license info strings.

	        * sfivalues.[hc]: renamed sfi_value_rec_take_ref() to
	        sfi_value_new_take_rec() and sfi_value_seq_take_ref() to
	        sfi_value_new_take_seq(). adapted callers.

	svn path=/trunk/; revision=1668

2003-12-16  Tim Janik 	# 254365e1b144ae4de9dfc4d741310a2bee978a8c

	ue Dec 16 02:20:42 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: support opening new views for a project.

	svn path=/trunk/; revision=1667

2003-12-16  Tim Janik 	# bcda16982706326b8640e8790ea74d7ad6765478

	make playback properties skip-undo.

	Tue Dec 16 02:16:25 2003  Tim Janik  <timj@gtk.org>

	        * bsesong.c (bse_song_class_init): make playback properties skip-undo.

	        * bseitem.c:
	        * bseproject.c:
	        * bsesource.c:
	        * bsestorage.[hc]: removed BSE_STORAGE_SKIP_DEFAULTS flag and macro,
	        since skipping default values is now indicated by the :skip-default:
	        property option.

	svn path=/trunk/; revision=1666

2003-12-15  Tim Janik 	# 457ab0bd1f66ae4e2105e82afcec7f153007e37a

	added -I$(srcdir) -I. to get e.g. includes of built files to work

	svn path=/trunk/; revision=1665

2003-12-15  Tim Janik 	# c479f968b0334c086f8a5f336c857c9c035e3f86

	added symbols.h token.h instruction.h compiler.h cpu.h

	svn path=/trunk/; revision=1664

2003-12-15  Tim Janik 	# e0b6bef8c2f8b705edf9e4504f67157e8db803b7

	added bswcxxutils.h

	svn path=/trunk/; revision=1663

2003-12-15  Tim Janik 	# 68f03272e5dd520deb9f6258717ac43370997cd6

	added missing gxkparam-*.c files

	svn path=/trunk/; revision=1662

2003-12-15  Tim Janik 	# 24cb59ff74a874f1d1407167930c4a1ea1d07ca6

	prevent value changes during editor widget creation.

	Mon Dec 15 23:21:56 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkparam.c (gxk_param_create_editor): prevent
	        value changes during editor widget creation.

	svn path=/trunk/; revision=1661

2003-12-15  Tim Janik 	# 5491b860b27a3b68d936e0cbda58abf83ae8efba

	flagged :skip-default: properties.

	Mon Dec 15 22:56:22 2003  Tim Janik  <timj@gtk.org>

	        * bseadder.c:
	        * bsesequencer.c:
	        * davsyndrum.c: flagged :skip-default: properties.

	        * davsyndrum.c:
	        * davxtalstrings.c: fixed up trigger property flags.

	svn path=/trunk/; revision=1660

2003-12-15  Tim Janik 	# 98a0b6a36a21642cfaf97636a3076f82d0d11aaf

	flagged :skip-default: properties.

	Mon Dec 15 22:42:37 2003  Tim Janik  <timj@gtk.org>

	        * bsemidicontroller.c:
	        * bsepcminput.c:
	        * bsepcmoutput.c:
	        * bsesong.c:
	        * bsesource.c:
	        * bsestandardosc.c:
	        * bsemidiinput.c:
	        * bsesubiport.c:
	        * bsesuboport.c:
	        * bsesubsynth.c:
	        * bsesuper.c:
	        * bsetrack.c:
	        * bsemidisynth.c:
	        * bseobject.c: flagged :skip-default: properties.

	        * bseparam.c: make object properties skip-default automatically.

	        * bseitem.c: skip undo recording for :skip-undo: properties.

	        * bserecords.idl: provide SKIP_DEFAULT and SKIP_UNDO constants.

	        * bsestorage.c: don't serialize defaulting :skip-default: properties.

	        * bsetype.h: skip undo/redo for :trigger: properties.

	svn path=/trunk/; revision=1659

2003-12-15  Tim Janik 	# 5ed3655db4a61a4feec2900f35c9de2addd201c2

	document :skip-default: and :skip-undo: property options.

	Mon Dec 15 22:45:23 2003  Tim Janik  <timj@gtk.org>

	        * sfiparams.h: document :skip-default: and :skip-undo: property options.

	svn path=/trunk/; revision=1658

2003-12-15  Tim Janik 	# 40c0ea44e2b77f9186d01f60ed1a177c43c9e1d4

	removed old unused cruft. fixed up idl generation rules, include idl files

	Mon Dec 15 22:06:15 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am: removed old unused cruft. fixed up idl generation
	        rules, include idl files in dist tarballs.

	        * plugins/evaluator/Makefile.am: fixups, removed cruft. build
	        bseevaluator.so (properly namespace prefixed).

	svn path=/trunk/; revision=1657

2003-12-15  Tim Janik 	# 4db6f2bf7bbefbbf3de52efc7b233dce20c189de

	removed old unused cruft. fixed up idl generation rules, include idl files

	Mon Dec 15 22:06:15 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am: removed old unused cruft. fixed up idl generation
	        rules, include idl files in dist tarballs.

	        * plugins/evaluator/Makefile.am: fixups, removed cruft. build
	        bseevaluator.so (properly namespace prefixed).

	svn path=/trunk/; revision=1656

2003-12-15  Tim Janik 	# 2023df935d87ad0a3ad1744c5e84fb1d75a6ef24

	distcheck fixes

	svn path=/trunk/; revision=1655

2003-12-15  Tim Janik 	# 04e6243300b579de5dfaddc1370691e2f12e897d

	remove 64bit fields from BseUndoStep data union and added long/ulong

	Mon Dec 15 21:16:49 2003  Tim Janik  <timj@gtk.org>

	        * bseundostack.h: remove 64bit fields from BseUndoStep data union and
	        added long/ulong fields to reduce memory usage on 32bit systems.

	        * bseitem.c:
	        * bsecontainer.c: use v_long/v_ulong data fields in BseUndoStep.

	svn path=/trunk/; revision=1654

2003-12-15  Tim Janik 	# 386beee20e7a2c7b7a0a1e1baa7ea6fa5ba84013

	add note to translators about docs/site-development.texi.

	Mon Dec 15 18:51:05 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: add note to translators about docs/site-development.texi.

	        * docs/site-development.texi: added links to translation status pages.

	svn path=/trunk/; revision=1653

2003-12-15  Danilo Å egan 	# 8bda21213a8ad8e8a05a579738355e8cc90a72a1

	Updated Serbian translation.

	2003-12-15  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1652

2003-12-15  Tim Janik 	# fe06004e788cd93fac946a481101e5b0b8d6b175

	updates

	svn path=/trunk/; revision=1651

2003-12-15  Tim Janik 	# f71dec6b257c615927c1d4bfe9f287f32d527ccd

	added idl files.

	Mon Dec 15 16:12:36 2003  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: added idl files.

	        * *.po: dist update.

	svn path=/trunk/; revision=1650

2003-12-15  Tim Janik 	# 8fcbf8d44c7fe658bca6fe5d44d2d3bd5a1232cb

	removed bogus skip files

	svn path=/trunk/; revision=1649

2003-12-15  Tim Janik 	# f5cf4e7a8ceb09acbda8c8062e6b0f732267ce48

	stripped "/Module" prefix from categories as this is auto-prepended by the

	Mon Dec 15 16:00:48 2003  Tim Janik  <timj@gtk.org>

	        * bseamplifier.idl: stripped "/Module" prefix from categories as this
	        is auto-prepended by the idl compiler now and shouldn't be translated.
	        completed i18n markup of info strings, streams and parameter groups.

	svn path=/trunk/; revision=1648

2003-12-15  Tim Janik 	# bf1252718bce087cd40c69d1489ce3f16081327b

	added idl files.

	Mon Dec 15 16:12:36 2003  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: added idl files.

	        * *.po: dist update.

	svn path=/trunk/; revision=1647

2003-12-15  Tim Janik 	# 93de97f305b47c19e583e42232a036bfe1414c9c

	stripped "/Module" prefix from categories as this is auto-prepended by the

	Mon Dec 15 16:00:09 2003  Tim Janik  <timj@gtk.org>

	        * evaluator/bseevaluator.idl:
	        * artscompressor.idl:
	        * bsebalance.idl:
	        * davchorus.idl: stripped "/Module" prefix from categories as this
	        is auto-prepended by the idl compiler now and shouldn't be translated.
	        completed i18n markup of info strings, streams and parameter groups.

	svn path=/trunk/; revision=1646

2003-12-15  Tim Janik 	# 0dcd168b56adb9a1b8498a064e0a70b119e1cadd

	auto-prepend "/Modules/" to plugin categories, as this part of the

	Mon Dec 15 15:30:57 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: auto-prepend "/Modules/" to plugin categories, as
	        this part of the category string should not be translated, and
	        is redundant in idl files.

	svn path=/trunk/; revision=1645

2003-12-15  Tim Janik 	# 6ba7088c2fb03955924bbb53a2f76ca95e15feee

	merged po/ with po-bse/. remove the po-bse/ directory.

	Mon Dec 15 15:03:58 2003  Tim Janik  <timj@gtk.org>

	        * merged po/ with po-bse/. remove the po-bse/ directory.

	svn path=/trunk/; revision=1644

2003-12-15  Tim Janik 	# 946f94da9ac08b7d1cce89f65b8aae9e45325d6e

	added files from po-bse/.

	Mon Dec 15 15:05:15 2003  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: added files from po-bse/.

	        * *.po: merged with .po file from po-bse/.

	svn path=/trunk/; revision=1643

2003-12-15  Tim Janik 	# 5bdf2698fbef464783e4b1ea88956e21fbe0fb30

	link updates

	svn path=/trunk/; revision=1642

2003-12-15  Tim Janik 	# 7dffea7402e25ee4f786d5e3b5bccab3398b9378

	minor fix

	svn path=/trunk/; revision=1641

2003-12-14  Francisco F. Serrador 	# 0954d0b3c1843199c5e20326031877a36e56d8a4

	*po/es.po: Updated Spanish translation *po-bse/es.po: Added Spanish

	2004-12-14  Francisco F. Serrador  <serrador@cvs.gnome.org>

		*po/es.po: Updated Spanish translation
		*po-bse/es.po: Added Spanish translation

	svn path=/trunk/; revision=1640

2003-12-13  Francisco J Fernandez 	# f2a26d91ea27479793bcea37b413a76cc5043d78

	Changelog: Fix UTF-8 format

	2003-12-13  Francisco J Fernandez  <serrador@cvs.gnome.org>

		Changelog: Fix UTF-8 format

	svn path=/trunk/; revision=1639

2003-12-13  Francisco Javier F. Serrador 	# 5265c969a9c9e9a9baa81480ecd29120fae2379e

	Updated Spanish translation by Ismael Andres Rubio Rojas

	2003-12-13  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

		* es.po: Updated Spanish translation by Ismael Andres Rubio Rojas

	svn path=/trunk/; revision=1638

2003-12-13  Stefan Westerfeld 	# 2cb24fd8796aee3d38d41020d437aa530cfba3fc

	TODO updates.

	svn path=/trunk/; revision=1637

2003-12-13  Stefan Westerfeld 	# 85d19b6185f5ed5a7f5ea81a089d011bda80a5bf

	Added missing const to sfi_value_get_cxxstring.

	Sat Dec 13 19:18:30 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsw/bswcxxutils.h: Added missing const to sfi_value_get_cxxstring.

	svn path=/trunk/; revision=1636

2003-12-13  Stefan Westerfeld 	# 99986205b2b8a0eeed6bedab9ce44c8ff9e554d4

	Support parsing for i18n'd strings in property groups, stream and info

	Sat Dec 13 19:09:47 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.*: Support parsing for i18n'd strings in property
		groups, stream and info declarations.

		* sfidl-generator.* sfidl-module.*: Write out i18n'd strings when
		required by the IDL file.

		* testidl.idl: The syntax 'property "X-Group" Real y;' for groups is
		no longer supported.

	svn path=/trunk/; revision=1635

2003-12-12  Duarte Loreto 	# 29ec24d7aa5d7bf8f26e377759beef112fe5a032

	Updated Portuguese translation.

	2003-12-11  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Updated Portuguese translation.

	svn path=/trunk/; revision=1634

2003-12-11  Danilo Å egan 	# a2e676faaf0e321ee06bc3f99d52e7563c2a105f

	Updated Serbian translation.

	2003-12-11  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1633

2003-12-10  Tim Janik 	# 2433bfedb59043880fd07bf013547ff8881a2e8f

	don't create labels from $label for xdef:button if ignore-label is set.

	Thu Dec 11 00:25:39 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-standard.xml: don't create labels
	        from $label for xdef:button if ignore-label is set.
	        set ignore-label for xdef:labeled-tool-area and xdef:label-image-button,
	        since they create their own labels from $label.

	svn path=/trunk/; revision=1632

2003-12-10  Tim Janik 	# 6f41267c5e642f753a8ba208464d4ee93ebf3205

	updates

	svn path=/trunk/; revision=1631

2003-12-10  Tim Janik 	# b1c19c8702d457ffd6cdace684a74515b8a4616c

	update

	svn path=/trunk/; revision=1630

2003-12-10  Tim Janik 	# 9142dd96c994143e333fc308b9da58d9d9673007

	update to libtool 1.5.0a + debian patches.

	Wed Dec 10 19:27:33 2003  Tim Janik  <timj@gtk.org>

	        * ltmain.sh: update to libtool 1.5.0a + debian patches.

	        * beast-gtk/bstutils.[hc]: emove atail and ahead slots from gmask.
	        removed BST_GMASK_FILL, bst_gmask_quick() simply uses BST_GMASK_INTERLEAVE.

	        * beast-gtk/gxk/gxkauxwidgets.c: added second arrow to menu button.

	        * beast-gtk/bstwaveeditor.c: change default zoom level to 0.5.

	        * beast-gtk/bstfreeradiobutton.[hc]: removed, there's a freely
	        togglable radio button in Gxk.

	svn path=/trunk/; revision=1629

2003-12-10  Tim Janik 	# 512d81428db227c173b8838353f85821dab00076

	started i18n markup.

	Wed Dec 10 16:30:16 2003  Tim Janik  <timj@gtk.org>

	        * davchorus.idl:
	        * bsebalance.idl:
	        * artscompressor.idl: started i18n markup.

	svn path=/trunk/; revision=1628

2003-12-10  Tim Janik 	# 103e1571af3123fc9781f76cd7aace2346c42f8e

	define GXK_COMPILATION when compiling GXK.

	Wed Dec 10 08:34:10 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/gxk/Makefile.am: define GXK_COMPILATION when compiling GXK.

		* beast-gtk/gxk/gxkglobals.h: provide i18n macros for GXK_COMPILATION.

		* beast-gtk/gxk/gxkparam.[hc]: relicensed LGPL.
		reused parts of the BstParam implementation to implement GxkParam.
		GxkParam is a compound consisting of a pspec, a value and a binding
		(to the target affected by the value).
		imlpemented simple in-param GValue binding.
		implemented seperate GxkParamEditor interface which allowes creation
		of editing widgets for GxkParams.
		added functions to implement logic shared by many editor
		implementations (e.g. GtkAdjustment creation).

		* beast-gtk/gxk/gxksimplelabel.c: changed use-underline
		default to FALSE.

		* beast-gtk/gxk/gxkutils.[hc]: added gxk_option_menu_set_menu(), a
		replacement for gtk_option_menu_set_menu() to allow accelerators in
		menus. added g_option_check() wrappers to support options on
		widgets: gxk_widget_add_option(), gxk_widget_check_option() and
		gxk_widget_get_options().
		(menu_position_func): fixed up push_in logic for gxk_menu_popup().
		(gxk_widget_add_font_requisition): new function, adding up to a widgets
		requisition the size required by a certain amount of characters and
		digits.

		* beast-gtk/gxk/gxkparam-spinner.c:
		* beast-gtk/gxk/gxkparam-toggle.c:
		* beast-gtk/gxk/gxkparam-scale.c:
		* beast-gtk/gxk/gxkparam-label.c:
		* beast-gtk/gxk/gxkparam-entry.c: relicensed LGPL. removed cruft and
		cleaned up code, ported to GxkParam.

		* beast-gtk/gxk/gxkparam-toggle.c: determine toggle/check/radio
		appearance from pspec options.

		* beast-gtk/gxk/gxkparam-spinner.c: added type dependant size
		requisition.

		* beast-gtk/gxk/gxkparam-label.c: support pspec name as well as string
		parameter display.

		* beast-gtk/gxk/gxkauxwidgets.[hc]: implemented free-radio-button,
		added ::push-in property to menu-buttons (similar to the push-in
		behaviour option-menus always exhibit).

		* beast-gtk/gxk/gxkgadget.c: adde dmore widget types.

		* beast-gtk/bstutils.[hc]: added spacing to auxillary gmask widgets.
		made config settings globally available through means of BST_GCONFIG().

		* beast-gtk/bstrecords.idl: added size_group_input_fields config field.

		* beast-gtk/bstrackitem.[hc]:
		* beast-gtk/bstprocedure.[hc]:
		* beast-gtk/bstpreferences.[hc]:
		* beast-gtk/bstpartdialog.[hc]:
		* beast-gtk/bstparamview.[hc]: ported from BstParam to GxkParam.

		* beast-gtk/bstparam.[hc]: removed BstParam implementation. made code
		dependant on and supplementing GxkParam.

		* beast-gtk/bstparam-choice.c: adapted to GxkParam, provide alternating
		implementations, one for option menus, one for menu buttons.

		* beast-gtk/bstparam-time.c: adapted to GxkParam, code cleanups,
		removed note specific handling, added more sophisticated size
		requisition for time entries.

		* beast-gtk/bstparam-searchpath.c: reduced implementation to simple
		searchpath additions to a normal entry.

		* beast-gtk/bstparam-scale.c: adapted to GxkParam, code cleanups,
		majorly simplyfied iumlpementation.

		* beast-gtk/bstparam-note-spinner.c: adapted to GxkParam, code cleanups.
		switched to using GtkSpinButton.

		* beast-gtk/bstparam-note-sequence.c:
		* beast-gtk/bstparam-proxy.c: adapted to GxkParam, code cleanups.

		* beast-gtk/bstparam-entry.c:
		* beast-gtk/bstparam-label.c:
		* beast-gtk/bstparam-spinner.c:
		* beast-gtk/bstparam-strnum.c:
		* beast-gtk/bstparam-toggle.c: removed these files. GxkParam
		provides suitable alternatives.

		* beast-gtk/bstcluehunter.[hc]: removed ::align-width propety and
		added ::align-widget with which a widget can be specified that the
		cluehunter popup window is to be aligned to. applied a couple fixups
		to the popup window sizing and positioning logic.
		use gxk_grab_pointer_and_keyboard() for grabs.

		* beast-gtk/bstdefs.h: cleanups.

		* beast-gtk/bstgconfig.[hc]: implemented helper for config
		structure accesses.

		* beast-gtk/bstxframe.cfixed default visibility.

		* beast-gtk/bstsequence.c: be visible by default.

	svn path=/trunk/; revision=1627

2003-12-10  Tim Janik 	# 8faad29f7734f26907afb68d9abae3a0723a1a86

	support parsing upper and lower case notes. for string conversions,

	Wed Dec 10 09:20:33 2003  Tim Janik  <timj@gtk.org>

	        * sfinote.c: support parsing upper and lower case notes.
	        for string conversions, switched to uppercase note names.

	svn path=/trunk/; revision=1626

2003-12-08  Tim Janik 	# 955410cf08ad88cee9909d0775addbb410a0135b

	error handling fixup.

	Mon Dec  8 16:38:32 2003  Tim Janik  <timj@gtk.org>

	        * sfinote.c (sfi_note_from_string_err): error handling fixup.

	svn path=/trunk/; revision=1625

2003-12-08  Tim Janik 	# a9fc4a91ba35888d04d659226b3682d468359840

	fixup

	svn path=/trunk/; revision=1624

2003-12-08  Tim Janik 	# 36e62a5b4916cce0041e94e8fdc9e037f5117034

	CVS-copied from bstparam-strnum.c.

	Mon Dec  8 13:40:16 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-note.c: CVS-copied from bstparam-strnum.c.

	        * beast-gtk/bstparam-time.c: CVS-copied from bstparam-strnum.c.

	        * beast-gtk/bstparam-searchpath.c: CVS-copied from bstparam-entry.c.

	svn path=/trunk/; revision=1623

2003-12-08  Tim Janik 	# 7b640db1a3c43511b9bbbf0192f219186cd24d97

	minor temporary hack

	svn path=/trunk/; revision=1622

2003-12-08  Tim Janik 	# b14a013d7b36dbfaa15ee79b709608ed6ba2e52b

	added (moved from sfi) g_param_spec_set_options(),

	Sat Dec  6 02:36:49 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added (moved from sfi)
	        g_param_spec_set_options(), g_param_spec_check_option(),
	        g_param_spec_add_option(), g_param_spec_provides_options(),
	        g_param_spec_get_options(), g_param_spec_set_istepping(),
	        g_param_spec_get_istepping(), g_param_spec_set_fstepping(),
	        g_param_spec_get_fstepping(), g_param_spec_set_log_scale()
	        and g_param_spec_get_log_scale() to support user defined
	        options, and to handle stepping and logarithmic scaling
	        generically for the various integer and floarting types.

	        * sfiparams.[hc]: removed paramspec functions which glib-extra.h
	        provides now. added sfi_pspec_get_choice_hash() as an approximative
	        substitute for SfiChoice type signatures.

	svn path=/trunk/; revision=1621

2003-12-07  Danilo Å egan 	# 44eea4b0ef95700330c46df64670a3745108a339

	Updated Serbian translation.

	2003-12-07  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

		* POTFILES.in: Added missing files.

	svn path=/trunk/; revision=1620

2003-12-05  Vincent van Adrighem 	# de633123926a290176a17a5219371f6dd93dc98b

	Dutch translation updated by Tino Meinen.

	2003-12-05   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Tino Meinen.

	svn path=/trunk/; revision=1619

2003-12-05  Tim Janik 	# b70e477c54a37d2666b5dd0c738ed3d3fca67be7

	namespace rename and cosmetic changes.

	Fri Dec  5 11:50:46 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxklogadjustment.[hc]: namespace rename and
	        cosmetic changes.

	svn path=/trunk/; revision=1618

2003-12-05  Tim Janik 	# 50eacb1211ec3f0e661b49e428e17ff6f736afd4

	CVS copied here from beast-gtk/.

	Fri Dec  5 11:40:22 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxklogadjustment.[hc]: CVS copied here from beast-gtk/.

	svn path=/trunk/; revision=1617

2003-12-05  Tim Janik 	# f6cf9e2e3906d476fe1dac6376d122702cbc7c9e

	*** empty log message ***

	svn path=/trunk/; revision=1616

2003-12-05  Tim Janik 	# da60c8375b2334a5e36821c4ca8336396e982b7e

	CVS copied here from beast-gtk/.

	Fri Dec  5 01:41:00 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/gxk/gxkparam-choice.c:
		* beast-gtk/gxk/gxkparam-entry.c:
		* beast-gtk/gxk/gxkparam-label.c:
		* beast-gtk/gxk/gxkparam-proxy.c:
		* beast-gtk/gxk/gxkparam-scale.c:
		* beast-gtk/gxk/gxkparam-spinner.c:
		* beast-gtk/gxk/gxkparam-strnum.c:
		* beast-gtk/gxk/gxkparam-toggle.c:
		* beast-gtk/gxk/gxkparam.c:
		* beast-gtk/gxk/gxkparam.h: CVS copied here from beast-gtk/.

	svn path=/trunk/; revision=1615

2003-12-04  Tim Janik 	# 28779623be84642b283445f0a3331f706268b9c4

	started new SynthNet view, based on a user customizable rack view and

	Fri Dec  5 00:28:12 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrackview.[hc]: started new SynthNet view, based on a
	        user customizable rack view and record parasites.

	        * beast-gtk/bstrackeditor.[hc]: disabled code depending on BstRackItem.

	        * beast-gtk/bstracktable.[hc]: disabled code depending on BstRackItem.

	        * beast-gtk/bstrackitem.[hc]: derive from GxkRackItem. removed
	        controller handling code.

	        * beast-gtk/bstsupershell.c: added rack-view notebook page to SynthNets.

	        * beast-gtk/dialogs/gadgets-beast.xml: added rack-view GUI description.

	        * beast-gtk/dialogs/gadgets-standard.xml: support rack-table and
	        rack-item. fixed up some button properties.

	        * beast-gtk/gxk/gxkgadget.c: support rack table and item types.

	        * beast-gtk/gxk/gxkrackeditor.c: fixed up return value for button
	        presses. removed auto cover/uncover upon editing edit mode.

	svn path=/trunk/; revision=1614

2003-12-04  Tim Janik 	# be9e1484ed7630dfd3300a3949d7779b11628de1

	don't error out on SfiRec arguments.

	Tue Dec  2 23:28:37 2003  Tim Janik  <timj@gtk.org>

	        * bse/bseprocidl.cc: don't error out on SfiRec arguments.

	        * bseitem.[hc]: renamed bse_item_uncross() to bse_item_uncross_links().

	        * bseparasite.[hc]: implemented new undo-able parasite interface,
	        which supports SfiRec as parasite data and uses a file-path alike
	        nameing scheme for the parasites. storage not yet implemented.

	        * bseparasite.proc: added procedures to list, set, add and get new
	        parasite records.

	svn path=/trunk/; revision=1613

2003-12-04  Tim Janik 	# e0a91c3713ca6589950af1021773bc5a5a7cf995

	disabled code depending on BstRackItem.

	Fri Dec  5 00:28:12 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrackeditor.[hc]: disabled code depending on BstRackItem.

	        * beast-gtk/bstracktable.[hc]: disabled code depending on BstRackItem.

	        * beast-gtk/bstrackitem.[hc]: derive from GxkRackItem. removed
	        controller handling code.

	        * beast-gtk/bstsupershell.c: added rack-view notebook page to SynthNets.

	        * beast-gtk/dialogs/gadgets-beast.xml: added rack-view GUI description.

	        * beast-gtk/dialogs/gadgets-standard.xml: support rack-table and
	        rack-item. fixed up some button properties.

	        * beast-gtk/gxk/gxkgadget.c: support rack table and item types.

	        * beast-gtk/gxk/gxkrackeditor.c: fixed up return value for button
	        presses. removed auto cover/uncover upon editing edit mode.

	svn path=/trunk/; revision=1612

2003-12-04  Tim Janik 	# 93e86bfd952eb24fc486834465edd5ada2c2025d

	don't error out on SfiRec arguments.

	Tue Dec  2 23:28:37 2003  Tim Janik  <timj@gtk.org>

	        * bse/bseprocidl.cc: don't error out on SfiRec arguments.

	        * bseitem.[hc]: renamed bse_item_uncross() to bse_item_uncross_links().

	        * bseparasite.[hc]: implemented new undo-able parasite interface,
	        which supports SfiRec as parasite data and uses a file-path alike
	        nameing scheme for the parasites. storage not yet implemented.

	svn path=/trunk/; revision=1611

2003-12-04  Tim Janik 	# 51242b47b48f90033761beaf30341e4cbb824568

	handle NULL for intern_string variants.

	Fri Dec  5 00:35:24 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.c: handle NULL for intern_string variants.

	        * sfiprimitives.[hc]: added sfi_ring_append_uniq().

	svn path=/trunk/; revision=1610

2003-12-04  Vincent van Adrighem 	# a2cae94c748980bb08f01b9db45cff09ffc971c3

	Dutch translation updated by Vincent van Adrighem.

	2003-12-04   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Vincent van Adrighem.

	svn path=/trunk/; revision=1609

2003-12-04  Vincent van Adrighem 	# 1a8e87bc8569b299948c0ec24815ef17e155f27e

	Dutch translation updated by Vincent van Adrighem.

	2003-12-04   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Vincent van Adrighem.

	svn path=/trunk/; revision=1608

2003-12-02  Tim Janik 	# 4b403c4af177f86b2877208eb50a925a9bba89fc

	added g_bsearch_array_remove_node() which is a simple convenience function

	Tue Dec  2 23:32:12 2003  Tim Janik  <timj@gtk.org>

	        * gbsearcharray.h: added g_bsearch_array_remove_node() which is a simple
	        convenience function for g_bsearch_array_remove() and
	        g_bsearch_array_get_index().

	        * glib-extra.[hc]: added G_STRFUNC, g_strref() and g_strunref(). the
	        latter two keep reference counts on duplicated strings to avoid gross
	        memory duplication for often referenced strings.

	svn path=/trunk/; revision=1607

2003-12-02  Tim Janik 	# 0024c38602d012429d9d59cab01aa3a077bc530b

	link updates

	svn path=/trunk/; revision=1606

2003-12-02  Tim Janik 	# c3698ab3bcd1d6d6a770d382209e86666d935ba3

	gnits

	svn path=/trunk/; revision=1605

2003-12-01  Stefan Westerfeld 	# 42b86db207a103b7afca6f621fad9fc74025c3c7

	Priorities.

	svn path=/trunk/; revision=1604

2003-11-30  Tim Janik 	# 2c994de3ec0af13a55a4358efd95469458ed57ee

	set a lower boundary of 8 pixels to cell size requests.

	Sun Nov 30 12:51:05 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkracktable.[hc]:
	        (gxk_rack_table_style_set): set a lower boundary of 8 pixels to cell size
	        requests.
	        (gxk_rack_table_attach): new function to allow direct placement of
	        non rack-items.
	        (gxk_rack_table_cover_up): new function to add covers to empty regions.
	        (gxk_rack_table_uncover): remove covers from empty regions.

	        * beast-gtk/gxk/gxkrackcovers.c: changed license to LGPL.
	        adapted code to GxkRackTable API, added comments.

	        * beast-gtk/gxk/gxkrackeditor.[hc]: added gxk_rack_table_destroy_editor()
	        for proper shutdown.

	svn path=/trunk/; revision=1603

2003-11-30  Tim Janik 	# 15ecc183afe7392136d50ad323ae003255020987

	CVS copied here.

	Sun Nov 30 16:15:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkrackcovers.c: CVS copied here.

	svn path=/trunk/; revision=1602

2003-11-30  Tim Janik 	# e4a17c34fde6631ba447b08e54331964d9ea64d4

	shrink resize anchors to 3/4 of the cell size. moved remaining editing

	Sun Nov 30 02:44:27 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkrackeditor.[hc]: shrink resize anchors to 3/4 of the
	        cell size. moved remaining editing fields from GxkRackTable into
	        GxkRackEditor.
	        (rack_table_update_rframe): remove corner checks.
	        (gxk_rack_table_handle_button_press): merged resizing and movement
	        logic. do movement without extra dnd window. added simple logic
	        for corner detection.
	        (rack_table_editor_drag_corner): added movement logic, added boundary
	        checks. added logic for incremental boundary approximation.
	        (gxk_rack_table_handle_motion_notify): merged resizing and movement.
	        (rack_table_abort_drag): get rid of drag_window. redraw drag area to
	        cleanup highlighting left overs.
	        (gxk_rack_table_handle_button_release): merge resize and movement.
	        (gxk_rack_table_set_edit_mode): get rid of drag_window.
	        (gxk_rack_table_check_area): added boolean to check frame areas. added
	        exempt widget.

	        * beast-gtk/gxk/gxkrackitem.[hc]:
	        (gxk_rack_item_add):
	        (gxk_rack_item_remove): override container methods to update
	        empty_frame flag.
	        (update_frame): honour empty_frame.
	        (gxk_rack_item_size_allocate): override GtkFrame size_allocate to
	        fix up label widget allocation and to center frame within cells.

	        * beast-gtk/gxk/gxkracktable.[hc]: fixup default requisition,
	        removed remaining editing fields.
	        (gxk_rack_table_translate): renamed this function.
	        (gxk_rack_table_find_child): find child within widget coordinates,
	        based on cell coordinates.
	        (gxk_rack_table_get_child_area): query cell coordinates.

	        * beast-gtk/gxk/gxksimplelabel.c: make this visible by default.

	svn path=/trunk/; revision=1601

2003-11-29  Stefan Westerfeld 	# 3ecf77c929bf88ebf6ef5e2dafb0b818c0a9f0b7

	Added bsw/bswcxxutils.h, which contains stuff the generated code uses. Use

	Sat Nov 29 17:19:22 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsw/bswcxxutils.h tests/Makefile.am: Added bsw/bswcxxutils.h, which
		contains stuff the generated code uses. Use bsw/bswcxxutils.h again.
		This makes NULL strings work.

	svn path=/trunk/; revision=1600

2003-11-29  Tim Janik 	# dfc7fe37faac75690a925ac0fb05fd873f1d2d1d

	shutup

	svn path=/trunk/; revision=1599

2003-11-29  Tim Janik 	# c39f29a7df12c3dd7c1846d44e037bc4f6329148

	new files containing editing functionality of GxkRackTable. started

	Sat Nov 29 06:13:27 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkrackeditor.[hc]: new files containing editing
	        functionality of GxkRackTable. started implementing rack item
	        resizing. switched to using gxk_grab_pointer_and_keyboard() for
	        pointer grabs. moved editing fields out of GxkRackTable into
	        a seperate GxkRackEditor structure.

	        * beast-gtk/gxk/gxkrackitem.[hc]: added gxk_rack_item_set_area()
	        which updates the attachment coordinates of a GxkRackItem. made
	        coordinates original gints in the GxkRackItem structure.

	        * beast-gtk/gxk/gxkracktable.[ch]: removed non-editing parts.
	        hooked up GxkRackEditor functions. switched to using GBitMatrix
	        for the child map. switched to lazy child-map updates.
	        exposed a couple static functions. changed add-child logic
	        to properly honour child requisition if possible.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_grab_pointer_and_keyboard()
	        and gxk_ungrab_pointer_and_keyboard().

	svn path=/trunk/; revision=1598

2003-11-29  Tim Janik 	# 4e2a5f4973c9a828d321b8241b02cb5fc815b6cf

	revert last change which broke compilation again.

	Sat Nov 29 06:59:18 2003  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: revert last change which broke compilation again.

	svn path=/trunk/; revision=1597

2003-11-29  Tim Janik 	# 31eb91416d63c94ec720e226ae78ac8e008c2f82

	implemented GBitMatrix, a couple inline functions to allow quick

	Sat Nov 29 06:22:36 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: implemented GBitMatrix, a couple inline functions to
	        allow quick operations on a two dimensional bit array.

	svn path=/trunk/; revision=1596

2003-11-29  Stefan Westerfeld 	# d7433f773a5a82c2a46fc6849579e1cbbce5fd90

	Use bsw/bswcxxutils.h again. This makes NULL strings work.

	Sat Nov 29 03:05:05 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/Makefile.am: Use bsw/bswcxxutils.h again. This makes NULL
		strings work.

		* tests/empty.ogg tests/cxxbinding.cc: Added a test ogg file.

	svn path=/trunk/; revision=1595

2003-11-29  Stefan Westerfeld 	# 24c4eb7df444d27fbab5efe2901f6224944155a0

	TODO updates.

	svn path=/trunk/; revision=1594

2003-11-29  Stefan Westerfeld 	# 1fd9f8320b4702f65d2ad0e9c512a492cf61e485

	Don't mention SFI in the license.

	Fri Nov 28 00:55:55 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* tests/cxxbinding.cc: Don't mention SFI in the license.

	svn path=/trunk/; revision=1593

2003-11-28  Tim Janik 	# 250d77e091072f69ec21344adfa86da9b2c103fe

	preserve type safety in convenience functions for c++.

	Fri Nov 28 03:37:16 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: preserve type safety in convenience functions for c++.

	svn path=/trunk/; revision=1592

2003-11-28  Tim Janik 	# 222fffa59f9e995bdaf36916fa6c977ce562ad07

	nullify notebook on destruction, so we don't operate on an invalid widget.

	Fri Nov 28 03:27:55 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: nullify notebook on destruction, so we don't operate
	        on an invalid widget.

	        * beast-gtk/gxk/gxkaction.[hc]: new function gxk_widget_peek_action_widgets()
	        to modify action widgets after creation.

	        * beast-gtk/gxk/gxkglobals.[hc]: new function gxk_nullify_in_object() which
	        disconnects a nullification handler if either object is destroyed.

	        * beast-gtk/gxk/gxkracktable.[hc]:
	        drag window bug fixes.
	        added code to create and adjust child resizing handle.
	        added test code for resizing handle.
	        added gxk_rack_table_find_xy_child() to find children by coordinates.
	        added leave handler to clear resize handle.

	        * beast-gtk/gxk/gxktest.c: added GxkRackTable test.

	svn path=/trunk/; revision=1591

2003-11-28  Tim Janik 	# 6cc6a4cb81b3c1ec495d78bac60c4879d1a009fd

	reenabled closure test, use BSE_TYPE_AMPLIFIER as test object which is

	Fri Nov 28 03:34:15 2003  Tim Janik  <timj@gtk.org>

	        * tests/testcxx.cc: reenabled closure test, use BSE_TYPE_AMPLIFIER as
	        test object which is implemented in c++.

	svn path=/trunk/; revision=1590

2003-11-28  Tim Janik 	# 1d089e3fa6ed168d9c46c8c497dc7ca4dd272139

	rewrote cxxapi generation rules. added hacks to work around missing

	Fri Nov 28 03:13:09 2003  Tim Janik  <timj@gtk.org>

	        * tests/Makefile.am: rewrote cxxapi generation rules.
	        added hacks to work around missing std::string and sfi_value_get_cxxstring().

	        * tests/cxxbinding.cc: include bsecxxapi.h.

	svn path=/trunk/; revision=1589

2003-11-28  Tim Janik 	# 5ce354b7599fe7bf782cd6270a484a3b6abf2b98

	remove bogus generated includes.

	Fri Nov 28 02:57:56 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-cxx.cc: remove bogus generated includes.

	svn path=/trunk/; revision=1588

2003-11-28  Tim Janik 	# 0fac68692abe64a1354708108643afc39860ff02

	build fixups

	svn path=/trunk/; revision=1587

2003-11-27  Stefan Westerfeld 	# c8f7aa4841cf15baf285e7fd62771b7561d808ce

	Added tests directory.

	Fri Nov 28 00:55:55 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in Makefile.am: Added tests directory.

		* tests/Makefile.am tests/cxxbinding.cc: A test for the C++ binding.

	svn path=/trunk/; revision=1586

2003-11-27  Stefan Westerfeld 	# 0bf820594562ff1e155a73ab678fc4b0b4187f43

	Oops.

	svn path=/trunk/; revision=1585

2003-11-27  Stefan Westerfeld 	# a18713f00c39818b1d8252af3efd74e0ce784769

	Added resize() for sequences.

	Fri Nov 28 00:53:37 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added resize() for sequences.

	svn path=/trunk/; revision=1584

2003-11-27  Stefan Westerfeld 	# bebacd7d5677d0fa190860e0ee9ef1e2364fb0df

	Records, sequences, choices, classes are covered now. So its reasonably

	Fri Nov 28 00:49:15 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.*: Records, sequences, choices, classes are covered now.
		So its reasonably usable binding (which can handle bse/bse.idl).

		* sfidl-generator.*: New createTypeCode model: MODEL_VCALL_CARG.
		Comments. Seperated choice conversion into a seperate function.

	svn path=/trunk/; revision=1583

2003-11-27  Stefan Westerfeld 	# e5ca22e3ee17d56a1a8884bfc342effa621736e6

	New files: initial check-in of the C++ language binding.

	Thu Nov 27 00:55:40 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-cxx.*: New files: initial check-in of the C++ language binding.

		* Makefile.am: Added sfidl-cxx.*.

		* sfidl-generator.*: Moved more functionality to the base class, so
		that the C++ language binding can use it. Qt binding available again.

		* sfidl-options.* sfidl.cc: The target is now an enum. New --mixed and
		--lower options to specify the style of the identifiers used in the
		binding.

	svn path=/trunk/; revision=1582

2003-11-26  Stefan Westerfeld 	# c834a8525188a03c6cdce9cc3c53b9d8e50ee0a8

	Proxy is gone.

	Wed Nov 26 22:14:44 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl: Proxy is gone.

	svn path=/trunk/; revision=1581

2003-11-26  Stefan Westerfeld 	# af758c935e73ae7f16e6adb230ed8dce89b50b3b

	Moved common functionality of all C / C++ language bindings into new

	Wed Nov 26 22:07:49 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: Moved common functionality of all C / C++
		language bindings into new parent class CodeGeneratorCBase. "Proxy" no
		longer accepted as type.

		* sfidl-parser.*: Added Parser::typeOf method returning an enum (moved
		from sfidl-module.cc).

		* sfidl-module.*: Cleanup ugly stuff by inheriting CodeGeneratorCBase
		and using Parser::typeOf method.

	svn path=/trunk/; revision=1580

2003-11-26  Stefan Westerfeld 	# db6b0729b6903e4857e5516993db924eb3974c0c

	ignore

	svn path=/trunk/; revision=1579

2003-11-26  Stefan Westerfeld 	# 89f917083e57c7a0b0d4f584040533b5c28c8b54

	Added (template) classes for SmartPtr, RefCountable, Sequence, ... used

	Wed Nov 26 13:40:11 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsecxxsmart.h: Added (template) classes for SmartPtr, RefCountable,
		Sequence, ... used for records.

		* tests/testsmart.cc: Test for the smartpointer stuff.

		* Makefile.am tests/Makefile.am: Corresponding Makefile entries.

	svn path=/trunk/; revision=1578

2003-11-26  Stefan Westerfeld 	# 47dda66a01f4c1eb18589da3873f95bfdc402d75

	Cleanups.

	Wed Nov 26 13:37:17 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.*: Cleanups.

		* sfidl-module.cc: More work on the language binding for records (use
		SmartPtr now).

	svn path=/trunk/; revision=1577

2003-11-24  Vincent van Adrighem 	# 4ddf9fef9c761c8c1452b332af0d2cbfa5cf6dbc

	Dutch translation updated by Vincent van Adrighem.

	2003-11-24   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Vincent van Adrighem.

	svn path=/trunk/; revision=1576

2003-11-24  Vincent van Adrighem 	# a0762d462565dfab88efc89687bac90f53c0154f

	Updated Dutch translation.

	2003-11-24  Vincent van Adrighem  <adrighem@gnome.org>

	    * nl.po: Updated Dutch translation.

	svn path=/trunk/; revision=1575

2003-11-22  Danilo Å egan 	# 054394d7c0e9170e7e1f2f61aa48cc892c08a1ba

	Updated Serbian translation.

	2003-11-22  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1574

2003-11-22  Tim Janik 	# bd49c0fb30bc2c1dddfddd2ceb7bf8ccbd821abe

	new files, containing a GxkRackItem, a special child of GxkRackTable.

	Sat Nov 22 16:27:24 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkrackitem.[hc]: new files, containing a GxkRackItem,
	        a special child of GxkRackTable. based in parts on BstRackItem.
	        changed license to LGPL.

	        * beast-gtk/gxk/gxkracktable.[hc]: s/bst/gxk/ rename. renamed rtable
	        variables to self. license LGPL.

	svn path=/trunk/; revision=1573

2003-11-22  Tim Janik 	# 4fada814ac086f61fe95cecdd9dd8c4f15fc0298

	CVS-copied here from beast-gtk/bstracktable.[hc].

	Sat Nov 22 16:18:12 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkracktable.[hc]: CVS-copied here
	        from beast-gtk/bstracktable.[hc].

	svn path=/trunk/; revision=1572

2003-11-22  Christian Neumair 	# f4d694825615d94de097762b9e9ee1505c9460b9

	Fixed German translation. Thanks to Tim.

	svn path=/trunk/; revision=1571

2003-11-22  Christian Neumair 	# c888b1a37f99a54916232077c31e31c0cd104881

	Updated German translation.

	svn path=/trunk/; revision=1570

2003-11-22  Tim Janik 	# a0230adfc3737940036819f58f2c9e822bce10f7

	wording fixup

	svn path=/trunk/; revision=1569

2003-11-22  Danilo Šegan 	# 08c2c7008d10891eb221deac8402b2c026ce791e

	Correct date for my ChangeLog entry

	svn path=/trunk/; revision=1568

2003-11-22  Danilo Å egan 	# c0a0dbec878e5971eeae615ffc9b603547054f40

	Updated Serbian translation.

	2003-11-23  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

		* POTFILES.in: Added beast-gtk/gxk/gxksimplelabel.c.

	svn path=/trunk/; revision=1567

2003-11-21  Tim Janik 	# cc49045665600dc93b82bdef9444654b63b1db74

	removed i18n markup from contributor names. turned non-ascii chars (utf-8)

	Fri Nov 21 16:46:19 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (beast_show_about_box): removed i18n markup from
	        contributor names. turned non-ascii chars (utf-8) into hexadecimal
	        escapes (\x00). left a comment on how to enter utf-8 encoded author
	        names.

	svn path=/trunk/; revision=1566

2003-11-21  Tim Janik 	# bc907942dc03e3a5ce035b67029ef1c37b18d4d1

	removed UTF-8 encoding setting.

	Fri Nov 21 16:54:24 2003  Tim Janik  <timj@gtk.org>

	        * POTFILES.in: removed UTF-8 encoding setting.

	svn path=/trunk/; revision=1565

2003-11-21  Tim Janik 	# 73f86037312eaf089d4a0f8c3d73f0e9130233da

	provide category leaf as action tooltip, usefull for icon-only palettes.

	Fri Nov 21 04:01:56 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (bst_action_list_add_cat): provide category leaf as
	        action tooltip, usefull for icon-only palettes.

	svn path=/trunk/; revision=1564

2003-11-21  Tim Janik 	# c84002413e007378f0ca9e275c1312931fc48fb3

	adapt to the palette now using a GxkSimpleLabel instead of a GtkLabel.

	Fri Nov 21 03:48:58 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: adapt to the palette now using a GxkSimpleLabel
	        instead of a GtkLabel.

	        * beast-gtk/dialogs/gadgets-beast.xml: switched from hand-written frames and
	        hboxes to using <toolbar/>, switched labels to ulabels where apropriate.

	        * beast-gtk/dialogs/gadgets-standard.xml: define toolbar stencil. added an
	        event box to toolbars so contents get properly clipped.
	        defined <ulabel/> to auto-use-underline, turned <label/> to not
	        auto-use-underline.

	svn path=/trunk/; revision=1563

2003-11-21  Tim Janik 	# adcb5c927d41b213e045173ab839e90b08f7e8ce

	use GxkSimpleLabel for <label/>, configured to use underlines and

	Fri Nov 21 01:48:34 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-standard.xml: use GxkSimpleLabel for <label/>,
	        configured to use underlines and auto-cut.

	        * beast-gtk/gxk/gxksimplelabel.[hc]: new widget, deduced from GtkLabel
	        code. Changes relative to GtkLabel:
	        - lots of code got stripped (basically for selecting text and handling events)
	        - simple-label derives from GtkWidget instead of GtkMisc
	        - mnemonic activation works on activatable parents even if group cycling
	        - setting ::pattern properly unsets ::use-underline
	        - if ::auto-cut is TRUE, overfull text is cut-off

	        * po-bse/POTFILES.in: removed encoding: UTF-8, which breaks the Makefiel due to
	        intl-tools only handling po/ correctly ;(

	svn path=/trunk/; revision=1562

2003-11-21  Danilo Å egan 	# 873553e89c421f163e1667a1565e95f8ec325eee

	Updated Serbian translation.

	2003-11-21  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1561

2003-11-20  Tim Janik 	# b6283f60ff3b25903ddf41c0ad00fe465a045033

	added encoding: UTF-8.

	Thu Nov 20 17:13:49 2003  Tim Janik  <timj@gtk.org>

	        * po/POTFILES.in:
	        * po-bse/POTFILES.in: added encoding: UTF-8.

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]:
	        use translations only to alter $action-name, not to identify menu branches.
	        added ::key-label property to GxkFactoryBranch so the untranslated version
	        of a branch is available for menu branch identification.

	        * beast-gtk/gxk/gxkgadget.[hc]: added translation domain argument
	        to parsing functions. also, for each translated variable
	        label="translated" still provide _label="untranslated" variants,
	        so the xml definitions can explicitely refer to the untranslated
	        strings via $_label.

	        * beast-gtk/bstutils.c: provide translation domain when parsing gadget
	        files. don't provide a category key different from its translation in
	        menu depth for action-lists.

	        * beast-gtk/dialogs/gadgets-beast.xml: namespace fixups for xmllint.

	        * beast-gtk/dialogs/gadgets-standard.xml: namespace fixups for xmllint.
	        provide untranslated ::key-label for factory-branches.

	        * beast-gtk/gxk/gxkaction.[hc]: added key argument to _translated
	        convenience functions. don't auto-prefix untranslated keys, so it
	        really is the untranslated version of name.

	        * beast-gtk/gxk/gxkutils.c (gxk_factory_path_get_leaf): guard against
	        NULL strings.

	svn path=/trunk/; revision=1560

2003-11-20  Tim Janik 	# 98eaa90f4555ff32f5db193009310fa5ef48a73d

	NEWS/contributors update

	svn path=/trunk/; revision=1559

2003-11-20  Jordi Mallach 	# bccc5cbab5b65205bd7cbc7c34598730ff48ddf4

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=1558

2003-11-19  Duarte Loreto 	# 0b34d68f70ac0944280012295fd67facffb42c87

	Wen Nov 19 00:45:00 2003  Duarte Loreto <happyguy_pt@hotmail.com>

		* configure.in: Added Portuguese (pt) to ALL_LINGUAS.

	svn path=/trunk/; revision=1557

2003-11-19  Duarte Loreto 	# 62d43ea0a95151e8160b1af803a746790ef8b82c

	Added Portuguese translation.

	2003-11-19  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Added Portuguese translation.

	svn path=/trunk/; revision=1556

2003-11-18  Tim Janik 	# 280c546a16c38eccc5d9a71556028e501a4f96fd

	added i18n markup to authors strings

	svn path=/trunk/; revision=1555

2003-11-18  Danilo Å egan 	# cf720df07c86c4a8a6a9d5ba2ada3838d06ba3bd

	Updated Serbian translation.

	2003-11-18  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1554

2003-11-18  Tim Janik 	# d9d1dbd3e2188e57509b364676895c6dbf5d7ca6

	removed dups, added Ville PÃ¤tsi to about list

	svn path=/trunk/; revision=1553

2003-11-18  Tim Janik 	# 9017ea228624ced0b4cd97259b683790764c6b64

	fixed unfound actions in the palette popup menu by conditionalizing

	Tue Nov 18 22:57:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: fixed unfound actions
	        in the palette popup menu by conditionalizing $action-root.

	svn path=/trunk/; revision=1552

2003-11-18  Tim Janik 	# 21aad35e76a27b56392c97bfee08717a78d920f9

	up version to 0.5.6-rc1.

	Tue Nov 18 22:38:29 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.5.6-rc1.

	        * beast-gtk/bstapp.c: show beast about box.

	        * beast-gtk/bstmain.c: implement about box with contributor names
	        based on the splash screen.

	        * beast-gtk/bstsplash.[hc]: added about-box feats.

	svn path=/trunk/; revision=1551

2003-11-18  Tim Janik 	# d2daf32b1b7a478d2d63b8e47529c05734b29f24

	minor fixup

	svn path=/trunk/; revision=1550

2003-11-18  Tim Janik 	# b9956fb7015b997dd754404923e77b4b1050bc50

	renamed gsl-mplan to engine-mplan.

	Tue Nov 18 19:46:13 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am:
	        * beast-gtk/bstapp.c (app_action_exec): renamed gsl-mplan to
	        engine-mplan.

	svn path=/trunk/; revision=1549

2003-11-18  Tim Janik 	# fc7427f669ac7e2eefa5f350dc79d4cd196eb94b

	renamed (from gsl-mplan.txt).

	Tue Nov 18 20:03:38 2003  Tim Janik  <timj@gtk.org>

	        * engine-mplan.txt: renamed (from gsl-mplan.txt).

	svn path=/trunk/; revision=1548

2003-11-18  Tim Janik 	# 189ddf85057807e4ea7278e36396792fe9759ee8

	fix ref-count leak.

	Tue Nov 18 18:38:37 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxktexttools.c (text_buffer_tagdef): fix ref-count leak.

	svn path=/trunk/; revision=1547

2003-11-18  Tim Janik 	# 77cc6882f70e7f7cc6f152ba3bbb43ccbf3aa98d

	fix root type handling.

	Tue Nov 18 18:51:53 2003  Tim Janik  <timj@gtk.org>

	        * bsequery.c (main): fix root type handling.

	        * bseobject.proc: removed.

	svn path=/trunk/; revision=1546

2003-11-18  Tim Janik 	# ce009ebcf9d214318adafef2cd4065a1239c3dd4

	i18n file list updates

	svn path=/trunk/; revision=1545

2003-11-18  Duarte Loreto 	# e83101c4ad7b46147b85310f4f3344c5d7fcbf62

	Added Portuguese translation.

	2003-11-18  Duarte Loreto <happyguy_pt@hotmail.com>

		* pt.po: Added Portuguese translation.

	svn path=/trunk/; revision=1544

2003-11-17  Tim Janik 	# a8783132d6f20469fa38d1aecbf7117bdedc4b38

	menu cosmetics

	svn path=/trunk/; revision=1543

2003-11-17  Tim Janik 	# 8dacffba69ae75efe9b21ec6bc2e26f3540287c5

	shutup

	svn path=/trunk/; revision=1542

2003-11-17  Tim Janik 	# 14b6e2bd787315338e2aa0a5b4a531f15ea3d392

	removed BST_SIZE_*, there are GXK_ICON_SIZE_* sizes, fixed callers. fixed

	Mon Nov 17 23:18:34 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: removed BST_SIZE_*, there are GXK_ICON_SIZE_*
	        sizes, fixed callers. fixed signature of bst_action_list_from_cats() and
	        bst_action_list_add_cat(), changed callers.

	        * beast-gtk/dialogs/gadgets-standard.xml: use folder icon for submenus.

	        * beast-gtk/gxk/gxkauxwidgets.[hd]: added ::menubar-image boolean toggle
	        to auto-hide the menu item image as child of a menubar.

	        * beast-gtk/gxk/gxkgadget.[hc]: added special guards to
	        gxk_gadget_sensitize() to not make submenus items with empty menu
	        sensitive.

	        * beast-gtk/gxk/gxkstock.[hc]: made menu item images 24x24 pixels.
	        properly renamed sizes to GXK_ICON_SIZE_*.

	        * beast-gtk/icons/binote.png: higher resolution mockup.

	        * beast-gtk/icons/folder.png: added folder icon from Tuomas Kuosmanen
	        <tigert@gimp.org>.

	        * beast-gtk/bsteventrollctrl.[hc]:
	        * beast-gtk/bstpianorollctrl.[hc]: s/_atools/_rtools/.

	        * beast-gtk/bstdefs.h: cleanups.

	svn path=/trunk/; revision=1541

2003-11-17  Tim Janik 	# e15331817994e818e3cbf1a96d3695f8543b996c

	re-added zoom spinner.

	Mon Nov 17 18:05:54 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: re-added zoom spinner.

	svn path=/trunk/; revision=1540

2003-11-17  Tim Janik 	# 9d95eb10deab05b1746d6801e428c9d8d3dbb5bc

	changed category.

	Mon Nov 17 18:03:09 2003  Tim Janik  <timj@gtk.org>

	        * evaluator/bseevaluator.idl: changed category.

	svn path=/trunk/; revision=1539

2003-11-17  Tim Janik 	# 93db97e7e085585720d7ae4e875dcd14708c49a4

	\\-escape slashes in menu item names.

	Mon Nov 17 17:24:13 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackrollctrl.c:
	        * beast-gtk/bstpianorollctrl.c: \\-escape slashes in menu item names.

	        * beast-gtk/gxk/gxkgadgetfactory.c: unescape action-names via
	        g_strcompress() which also handles "\\/".

	svn path=/trunk/; revision=1538

2003-11-17  Tim Janik 	# 6f4a3b580019d494aae418780f209468247d9d10

	removed action-root="" resetting from snet-router popup menu. the

	Mon Nov 17 16:44:38 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: removed action-root="" resetting
	        from snet-router popup menu. the factories *do* limit actions to the
	        right scope. (fixes duplicate menu items in the router popup.)

	        * beast-gtk/bstmessages.c:
	        * beast-gtk/bstcatalog.[hc]: deleted, code was switched back to keep
	        action labels, accelerators, tooltips and blurb in .c files (or xml
	        GUI descriptions).

	        * beast-gtk/gxk/gxktexttools.c: fix segfaults wrg missing toolbar.

	svn path=/trunk/; revision=1537

2003-11-17  Tim Janik 	# 94cfac9074e76ed0601f95f71f55d24ccbe5e035

	more toolbar widget definitions, defined toolbar for gxk-scroll-text.

	Mon Nov 17 16:33:17 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-standard.xml: more toolbar widget
	        definitions, defined toolbar for gxk-scroll-text.

	        * beast-gtk/gxk/gxktoolbar.[hc]: deleted, code isn't used anymore,
	        replacements are xml GUI stencils and GxkMenuButton.

	        * beast-gtk/gxk/gxktexttools.[hc]: switched to xml stencil toolbar.

	        * beast-gtk/bstutils.[hc]: lots of cleanups, removed cruft. moved
	        bst_action_list_add_cat() and bst_action_list_from_cats() here from
	        bstmenus.[hc].

	        * beast-gtk/bstradiotools.[hc]: deleted, radio-tools aren't
	        used anymore, GxkActionGroup is a suitable replacement.

	        * beast-gtk/bstmenus.[hc]: removed all non-BstChoice menu/factory
	        cruft, workaround and helper code as it's not anymore needed, due
	        to GxkActionList.

	svn path=/trunk/; revision=1536

2003-11-17  Tim Janik 	# 1bb04c801e85af2c8fa28b4f86ff250140b7ab99

	added stock image to /Utils submenu of snet-popup.

	Mon Nov 17 01:16:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: added stock image to /Utils
	        submenu of snet-popup.

	        * beast-gtk/dialogs/gadgets-standard.xml: removed explicit property
	        settings from factory-branch, the call-variables are pass on now.

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: removed proeprties except
	        uline-label from GxkFactoryBranch. copy call-options for
	        GxkFactoryBranch at adopt() time and pass them on to branch creation.

	        * beast-gtk/gxk/gxkgadgetfactory.c (factory_branch_adopt):

	svn path=/trunk/; revision=1535

2003-11-16  Tim Janik 	# c15384eb71c89d348764b94be37ed413299bda35

	added gxk_factory_path_unescape_uline() to parse away under lines in menu

	Mon Nov 17 00:40:11 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_factory_path_unescape_uline()
	        to parse away under lines in menu paths.

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: added GxkFactoryBranch which can
	        be used to cause a gadget factory to create branch nodes in advance.
	        don't warn for windows with NULL name, but path on an accel-path of NULL
	        instead (possibly resulting in locked accelerators).

	        * beast-gtk/bstsnetrouter.[hc]: republish all actions on the palette
	        window. lock accelerators in the palette window.

	        * beast-gtk/gxk/gxkaction.[hc]: added gxk_widget_republish_actions().

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added ::hide-insensitive property
	        to widget patcher to cause a widget to be hidden while it is
	        insensitive (usefull for menu items which are insensitive because
	        they have empty submenus).

	        * beast-gtk/dialogs/gadgets-beast.xml: sort out snet-popup into its
	        own definition.

	        * beast-gtk/dialogs/gadgets-standard.xml: small changes wrg left menu
	        item justification, and widget-patcher. defined factory-branch.

	svn path=/trunk/; revision=1534

2003-11-16  Tim Janik 	# b77a70da6b75e7765da9ffb016089698691c3112

	added g_strconcat_with_null() and defined g_strconcat() to

	Mon Nov 17 00:49:34 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_strconcat_with_null() and defined
	        g_strconcat() to g_strconcat_with_null() which also accepts
	        its first argument to be NULL.

	svn path=/trunk/; revision=1533

2003-11-16  Stefan Westerfeld 	# f7615c45db73d64fe9ca002d99931d485442c464

	Support for parenthesis, and sin(x). New Instruction::SIN instruction.

	Sun Nov 16 22:40:58 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* evaluator/compiler.*: Support for parenthesis, and sin(x).
		* evaluator/instruction.*: New Instruction::SIN instruction.
		* evaluator/token.h: Parenthesis.

		* evaluator/*: Put implementation in the Bse::EvaluatorUtils
		namespace.

		* evaluator/evaluateexpr.cc: Error handling.

	svn path=/trunk/; revision=1532

2003-11-16  Tim Janik 	# 3a70a0c60548e29565472273a61f0b60eaf391a2

	added T_() as a short hand for text translations.

	Sun Nov 16 21:49:39 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdefs.h: added T_() as a short hand for text translations.

	        * beast-gtk/bstsnetrouter.[hc]: moved to gadget GUI generation. publish
	        categories and tools as actions. use GxkActionGroup rather than
	        BstRadioTools.

	        * beast-gtk/dialogs/gadgets-beast.xml: defined snet-view and snet-palette.

	        * beast-gtk/dialogs/gadgets-standard.xml: added more standard widgets,
	        arrow, wrap boxes, simplyfied factory usage. extended widget patcher
	        facilities. added tool factory definitions.

	        * beast-gtk/gxk/gxkaction.[hc]: fix action-list copies. lock groups
	        when regulating widgets. added publishing convenience variants.
	        implemented gxk_action_toggle_new(), a special group that allows
	        only two values.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added window-geometry
	        support to widget-patcher. added support for regular (non-selection)
	        menus to menu-button.

	        * beast-gtk/gxk/gxkgadget.[hc]: allow NULL areas for gxk_gadget_find_area().

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: added branching support for
	        menu paths via ::per-branch property.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_factory_path_get_leaf(),
	        gxk_idle_showraise() and suport functions for window-geometry.

	        * beast-gtk/gxk/glewidgets.c: ::wrapped property bug-fix.

	svn path=/trunk/; revision=1531

2003-11-16  Stefan Westerfeld 	# ad75347c988f90975a20b864a9c26c92a4c59144

	Fixed small buglet.

	svn path=/trunk/; revision=1530

2003-11-16  Stefan Westerfeld 	# 78cc0f29f26a84ac29af47c4c1ea2317501c5da9

	Added evaluator as subdirectory.

	Sun Nov 16 18:13:26 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* Makefile.am: Added evaluator as subdirectory.

	svn path=/trunk/; revision=1529

2003-11-16  Stefan Westerfeld 	# 4c4b466c569b0935a49dd567001dd6bd58a090bc

	Added BseEvaluator, a module based on a small, interpreted programming

	Sun Nov 16 18:03:48 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* evaluator/*: Added BseEvaluator, a module based on a small,
		interpreted programming language which can compute expressions
		like "output = input * 0.5 + 1".

	svn path=/trunk/; revision=1528

2003-11-16  Stefan Westerfeld 	# d8230c626a508a00e6de62e0d35f775a0accdebb

	Added plugins/evaluator/Makefile.am.

	Sun Nov 16 18:03:48 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in: Added plugins/evaluator/Makefile.am.

	svn path=/trunk/; revision=1527

2003-11-16  Stefan Westerfeld 	# 70e01c56aa4d9781eb4846268db7a7e8a87ef75f

	Escape user defined strings (like the blurb) from the idl file. First step

	Sun Nov 16 17:56:50 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-module.cc: Escape user defined strings (like the blurb) from
		the idl file. First step for support for records/sequences.

	svn path=/trunk/; revision=1526

2003-11-16  Christian Neumair 	# ec01896879fc83307db900380f12c252a384004e

	Updated German translation.

	svn path=/trunk/; revision=1525

2003-11-16  Christian Neumair 	# b34462077a5cf5c0c31c8bf14f5f8eb8ba49920f

	Added/removed some new/nonexisting files. Updated German translation.

	2003-11-16  Christian Neumair  <chris@gnome-de.org>

		* POTFILES.skip: Added/removed some new/nonexisting files.
		* de.po: Updated German translation.

	svn path=/trunk/; revision=1524

2003-11-16  Christian Neumair 	# f45c3010820d8a05126e48755c6f138286b3c15e

	Added xgettext no-c-format keyword to a string.

	svn path=/trunk/; revision=1523

2003-11-16  Tim Janik 	# e8aecffb7578715861828c1d2e0d1acbfb137637

	moved here from ../.

	Sun Nov 16 08:03:55 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gle-pull.sh:
	        * beast-gtk/gxk/glewidgets.[hc]: moved here from ../.

	        * beast-gtk/gxk/gxkgadget.c: define h/v wrap box types.

	svn path=/trunk/; revision=1522

2003-11-16  Abel Cheung 	# acd12a24baa5509c6cd281c060a6edacab6335a4

	Add missing file and remove non-existant ones.

	2003-11-16  Abel Cheung  <maddog@linux.org.hk>

		* POTFILES.in: Add missing file and remove non-existant ones.

	svn path=/trunk/; revision=1521

2003-11-15  Tim Janik 	# 15c594f58fe590d725c28476d0ce812a476f7f5a

	switched to GxkActionGroup and explicit GxkActionList creation.

	Sat Nov 15 09:54:17 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackrollctrl.[hc]: switched to GxkActionGroup and explicit
	        GxkActionList creation.
	        (bst_track_roll_controller_set_quantization): removed unused function.

	        * beast-gtk/bsttrackview.[hc]: removed manual toolbar setup code, switched
	        gadgets.

	        * beast-gtk/dialogs/gadgets-beast.xml: added track-view toolbar widgets.

	        * beast-gtk/dialogs/gadgets-standard.xml: comment fixes.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: attach menu-button via
	        gxk_menu_attach_as_popup_with_func() insteaf of gtk_menu_attach_to_widget(),
	        so the menu can fetch an accel group from the toplevel and support
	        accels for menu-button popups.

	        * beast-gtk/gxk/gxkutils.[hc]: provide gxk_menu_attach_as_popup_with_func(),
	        a variant of gxk_menu_attach_as_popup() which preserves the detach function
	        for gtk_menu_attach_to_widget().

	svn path=/trunk/; revision=1520

2003-11-15  Tim Janik 	# 792104d84663b1be57640cb28e69eb9a3ee090cf

	introduced title-style property for the menu item to call

	Sat Nov 15 07:20:23 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: introduced title-style property
	        for the menu item to call gxk_widget_modify_as_title() on it.

	        * beast-gtk/dialogs/gadgets-standard.xml: moved menu widgets into one
	        place, added menu-title.

	        * beast-gtk/dialogs/gadgets-beast.xml: added menu-title items to popup
	        menus. fixed item-view buttons to have a relief again.

	svn path=/trunk/; revision=1519

2003-11-14  Tim Janik 	# dcebd7996f7b530be9c89768a81e312828b27f16

	removed last bits of manually coded toolbar. removed final radio tools

	Fri Nov 14 23:05:35 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.[hc]: removed last bits of manually coded
	        toolbar. removed final radio tools traces. added hzoom and vzoom
	        spinners to toolbar areas in the piano-roll-box gadget.

	        * beast-gtk/dialogs/gadgets-beast.xml: added tool-* stencils to
	        produce toolbar-alike widgets. provided room for hzoom and
	        vzoom tools.

	        * beast-gtk/dialogs/gadgets-standard.xml: defined entry. defined
	        separator. defined muted-button. moved button factories here.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added ::mute_events and
	        ::lower_windows properties to GxkWidgetPatcher to filter-out
	        any action-events from a widget and to have its windows lowered
	        beyxond child windows (usefull for input-only windows).

	        * beast-gtk/gxk/gxkgadget.[hc]: switched to keep default-area
	        information only in string form. that way, widgets created from
	        stencils can still search for default-areas within widget trees.
	        adapted default-area search to allow level-order searching,
	        i.e. parents not appearing in the widget path.
	        added gxk_gadget_find_area() which in addition to gxk_gadget_find()
	        also resolves default-area settings on the child if present.
	        switched gxk_gadget_add() to use gxk_gadget_find_area().
	        (gxk_gadget_define_widget_type): support width= and height=
	        variables for widgets.

	svn path=/trunk/; revision=1518

2003-11-14  Tim Janik 	# 76f19c82c869e7d1961a8b429945f4e31bff276b

	added tooltip-visible and height-from-width properties to widget patcher.

	Fri Nov 14 18:42:25 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: added tooltip-visible and
	        height-from-width properties to widget patcher. export
	        gxk_widget_get_latent_tooltip() for arbitrary widgets.
	        added GxkMenuButton which is much like GtkOptionMenu but
	        doesn't push-in, properly grabs focus, shows images of
	        image menu items, allowes updates triggered from outside,
	        supports stock-sizes for icons, properly max-sizes over
	        all menu item possibilities (to avoid resizes) and shows
	        tooltips.

	        * beast-gtk/gxk/gxkaction.[hc]: use gxk_widget_regulate() and
	        gxk_widget_regulate_uses_active(), remove special casing.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_widget_regulate_uses_active(),
	        moved gxk_widget_regulate() here.

	        * beast-gtk/gxk/gxkgadget.[hc]: register GxkMenuButton,
	        GtkHSeparator and GtkVSeparator, adapted menu_adopt() and
	        implemented logic macro functions: not, or, nor, exor, and, nand.

	        * beast-gtk/dialogs/gadgets-beast.xml: adjusted factory button sizes.
	        added quantization and note length menu-buttons, added toolbar
	        spaces/separators.

	        * beast-gtk/dialogs/gadgets-standard.xml: added h/v separators.
	        added option-menu and menu-button (an option menu with constant
	        size for image menu items). added relief= to buttons.
	        added toolbar-space. support latent-tooltip= on tooltip.
	        added latent tooltips to menu-items (so they don't show the
	        tooltips, but the tips are shown by e.g. menu-button).

	svn path=/trunk/; revision=1517

2003-11-14  Tim Janik 	# 33831adf6b7f7b20d8d77eeac165abd4585a6a76

	fix typo

	svn path=/trunk/; revision=1516

2003-11-14  Tim Janik 	# 19efcf043a4768e1e4b5738b9c5cdf46838520ed

	fix canvas-clicked signal.

	Fri Nov 14 11:20:03 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventroll.[hc]: fix canvas-clicked signal.

	        * beast-gtk/bsteventrollctrl.[hc]: use GxkActionGroup instead of
	        radio-tools.

	        * beast-gtk/bstpartdialog.c: added popup menu to event-roll.

	        * beast-gtk/dialogs/gadgets-beast.xml: fixed toolbar spacing.
	        added event-roll menu.

	svn path=/trunk/; revision=1515

2003-11-14  Tim Janik 	# fcec5ea934650e331b59c6163e0d7b4a676207bb

	added missing dashes to gadget stencils.

	Fri Nov 14 10:53:54 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml:
	        * beast-gtk/dialogs/gadgets-standard.xml: added missing dashes to
	        gadget stencils.

	svn path=/trunk/; revision=1514

2003-11-14  Tim Janik 	# 22f6a4b51920ed69758a2d37e81305d6b2a65174

	allocate an insertion slot from container upon adoption. producing

	Fri Nov 14 10:42:56 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: allocate an insertion slot from
	        container upon adoption. producing creating children, reorder those into
	        the insertion slot.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_container_get_insertion_slot()
	        which remembers the current child insertion position.
	        added gxk_container_slot_reorder_child() which reorders a newly added
	        child into an insertion slot. implemented for GtkBox and GtkMenu as they
	        offer child reordering functions.

	svn path=/trunk/; revision=1513

2003-11-14  Tim Janik 	# 485d083d9527a13f4afc49c87bc4dfbea0511093

	adjust action-root for factories which take their actions from the

	Fri Nov 14 09:47:13 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/gadgets-beast.xml: adjust action-root for factories
	        which take their actions from the toplevel.

	        * beast-gtk/dialogs/gadgets-standard.xml: support action-root variable
	        for gadget factories.

	        * beast-gtk/gxk/gxkaction.[hc]: fixed up ActionSet alive keeping and
	        action-factory updates. made action-factory updates asyncronous.

	        * beast-gtk/gxk/gxkgadget.[hc]: provide access to the toplevel
	        gadget being created through gxk_gadget_data_get_scope_gadget().

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: limit the actions matched
	        successfully by a toplevel widget below witch the actions have to
	        be published (action-root). let the action-root default to the
	        scope-gadget (instead of the toplevel GtkWindow).

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_widget_has_ancestor().

	        * beast-gtk/bstsupershell.[hc]: removed lots of virtualization.
	        added notebook page construction functions for song, snet and wave-repo.

	        * beast-gtk/bstsongshell.[hc]:
	        * beast-gtk/bstsnetshell.[hc]:
	        * beast-gtk/bstwavereposhell.[hc]: removed these files, bstsupershell.c
	        constructs the neccessary notebook pages now.

	        * beast-gtk/bstapp.[hc]: removed super-shell special casing.

	svn path=/trunk/; revision=1512

2003-11-14  Tim Janik 	# 734bbbb439a507820e7d6b4c747fa0b2fa2d9879

	added gxk_menu_check_sensitive(), renamed gxk_menu_attach_as_submenu(),

	Fri Nov 14 04:34:04 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_menu_check_sensitive(),
	        renamed gxk_menu_attach_as_submenu(), added gxk_menu_attach_as_popup()
	        and moved gxk_widget_find_level_ordered() here from code in gxkgadget.c.

	        * beast-gtk/bstpartdialog.[hc]: publish piano-roll-ctrl actions,
	        had to disable radio-tools based toolbar widgets.
	        reenabled button3 popup menu based on a gadget menu.

	        * beast-gtk/bstpianorollctrl.[hc]: provide note and quantization
	        actions. use action-groups for note lengths and quantization.
	        use bse_part_get_timing() for quantization, support tact quantization.

	        * beast-gtk/dialogs/Makefile.am: run the .xml gadget files through
	        xmllint before conversion.

	        * beast-gtk/dialogs/gadgets-beast.xml: adjusted button factories,
	        now that we have proper (definition-based) variable scoping.
	        minor GUI adjustments. added button3 popup menu for piano-roll.

	        * beast-gtk/dialogs/gadgets-standard.xml: null-collapse image
	        stock-size. added popup-menu, minor fixes.

	        * beast-gtk/gxk/gxkauxwidgets.[hc]: changed menu item label property
	        name to uline-label. adaptions to changes in the GxkGadget type
	        registration API.

	        * beast-gtk/gxk/gxkgadget.[hc]: support variable inheritance in
	        gadget definitions. implemented definition-as-scope validity for
	        variables (achieved by keeping a back-pointer to the xdef-node
	        from nodes). commented precedence bahaviour for value lookups.
	        fixups to menu adoption. added $(println) function.
	        extended type registration API. streamlined gadget creation API.

	        * beast-gtk/gxk/gxkgadgetfactory.[hc]: construct arguments to be
	        passed on to factory children at adoption time.

	svn path=/trunk/; revision=1511

2003-11-14  Danilo Å egan 	# 34decf37a6de762d1f8ea1bd4c11d8fbabc90a8d

	Updated Serbian translation.

	2003-11-14  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

		* POTFILES.in: Added missing files.

	svn path=/trunk/; revision=1510

2003-11-12  Tim Janik 	# dc3107cdde00d443f0f1bba1082ece5e8e805fdd

	overall switch to Gxk gadget and action based GUIs. this removed lots of

	Wed Nov 12 04:26:22 2003  Tim Janik  <timj@gtk.org>

		* overall switch to Gxk gadget and action based GUIs.
		this removed lots of hand-crafted GUI code, menu/item factory code
		and extra mechanisms (e.g. for action activation or menu item
		sensitivity adjustments).

		* beast-gtk/dialogs/gadgets-beast.xml: more beast dialog specifications.
		introduced factories for menu items and toolbar buttons.

		* beast-gtk/dialogs/gadgets-standard.xml: more standard widget
		refinements. added Gxk builtin types (e.g. gadget-factory).

		* beast-gtk/gxk/gxkaction.[hc]: new mechanism to publish GUI actions,
		like operations on menu items or tool selections (radio actions) or
		simple operational buttons through an identifier within a widget tree.
		GxkActionList contains action descriptions, GxkActionGroup holds
		state for radio-group selections and GxkActionFactory implements the
		hooks to facilitate the actions registered for a widget tree.

		* beast-gtk/gxk/gxkgadgetfactory.[hc]: object implementation, derived
		from GxkActionFactory to construct gadgets for actions registered
		in a widget tree.

		* beast-gtk/gxk/gxkauxwidgets.[hc]: implemented small auxillary widgets
		(objects), mostly to patch around property deficencies in Gtk+.

		* beast-gtk/gxk/gxkgadget.[hc]: support gadget factory and
		gxkauxwidgets.h. reimplemented option handling. removed stale code.
		lots of fixes, reordering, made type registration somewhat more
		sophistiated. gadgets maybe GObjects now. added special support
		for gadgets generated inside gadgets.

		* beast-gtk/gxk/gxkstock.c: register aliases for basic stock sizes
		(to be used in gadget definition files).

		* beast-gtk/gxk/gxkutils.[hc]: added gxk_window_get_menu_accel_group(),
		gxk_submenu_attach_to_item() and gxk_widget_get_attach_toplevel().

		* beast-gtk/bstutils.[hc]: register custom Bst widgets as gxk gadget
		types. added bst_stock_register_icon().

		* beast-gtk/bstmenus.[hc]: added convenience functions to enter
		BseCategory entries into a GxkActionList.

		* beast-gtk/bstwavereposhell.[hc]:
		* beast-gtk/bstsongshell.[hc]:
		* beast-gtk/bstsupershell.[hc]: removed BstActivatable implementation.

		* beast-gtk/bstpartdialog.[hc]: removed BstActivatable implementation.
		switched to creating GUI from Gxk gadgets. switched to publishing
		GxkStockAction entries which temporarily breaks button3 popup menu.

		* beast-gtk/bstpianorollctrl.[hc]: test implementation of using
		GxkActionList and GxkActionGroup for tool selection and to
		publish (provide) actions for widgets. (temporarily breaks event-roll
		controller).

		* beast-gtk/bsttrackview.[hc]:
		* beast-gtk/bstwaveview.[hc]:
		* beast-gtk/bstpartview.[hc]: removed BstActivatable implementation.
		switched to publishing GxkStockAction entries. generate GUI from Gxk
		gadgets.

		* beast-gtk/bstitemview.[hc]: removed BstActivatable implementation.
		removed BstItemViewOp implementation, since derived objects switched
		to publishing GxkStockAction entries.

		* beast-gtk/bstapp.[hc]: removed BstActivatable implementation.
		switched from using BstMenuConfigEntry to publishing GxkStockAction
		entries per widget. switched to creating GUI from Gxk gadgets.

		* beast-gtk/bstactivatable.[hc]: removed.

	svn path=/trunk/; revision=1509

2003-11-12  Tim Janik 	# e62e0ae6150c20ee293522f6bd3b07ee56085398

	provide G_HASH_POINTER(). renamed *quark_intern* functions to:

	Wed Nov 12 04:21:32 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: provide G_HASH_POINTER().
	        renamed *quark_intern* functions to:
	        g_intern_string() and g_intern_static_string().

	svn path=/trunk/; revision=1508

2003-11-12  Tim Janik 	# c7081276b7787439ad66ee360b93ad9da528e473

	NEWS updates

	svn path=/trunk/; revision=1507

2003-11-09  Kostas Papadimas 	# 1298cdda1b04b62144977e4b0fde464347caf02a

	Added the Greek translation

	svn path=/trunk/; revision=1506

2003-11-07  Tim Janik 	# 1fa31cf13d5e3d1bb1216c034cb523eb3eb1dbc5

	renamed GxkStockAction to GxkStockItem, to sync up with Gtk+ naming and

	Fri Nov  7 23:31:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkstock.[hc]: renamed GxkStockAction to
	        GxkStockItem, to sync up with Gtk+ naming and make room
	        for Gxk*Action variants. renamed functions accordingly:
	        gxk_stock_item(), gxk_stock_register_item() and
	        gxk_stock_register_items().

	svn path=/trunk/; revision=1505

2003-11-07  Tim Janik 	# 72c024b8742d5e6b5413bd962a8bcbcbdf169d31

	NEWS updates

	svn path=/trunk/; revision=1504

2003-11-03  Jordi Mallach 	# 01c5d2fbb670a5038e5748697da3062069b4d989

	Added "ca" (Catalan) to ALL_LINGUAS.

	svn path=/trunk/; revision=1503

2003-11-03  Jordi Mallach 	# 8c8a8aed107af6b6d3b3fdfb7c2dfc42e15fa253

	Added Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=1502

2003-11-03  Jordi Mallach 	# 5ba2007cdff071c9e2ae23fb5eb82ac647e95acb

	Updated Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=1501

2003-11-02  Tim Janik 	# 93e7d9ba52c3351b5592d533819c9aec530478a5

	fix printf()-args.

	Sun Nov  2 20:09:45 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-generator.cc: fix printf()-args.

	svn path=/trunk/; revision=1500

2003-11-02  Tim Janik 	# ab8c600cb34b769b1ec6e7ef6129994a6b02d41f

	TODO updates

	svn path=/trunk/; revision=1499

2003-11-02  Tim Janik 	# 9e7c09dfa708b70d1f2244a0c1d6c9673fa1e9bc

	added note about C++ compilation problems.

	Sun Nov  2 15:01:42 2003  Tim Janik  <timj@gtk.org>

	        * docs/faq.texi: added note about C++ compilation problems.

	        * docs/site-news.texi: link to beast 0.5.5 announcement.

	        * changed reminding bits from .gslwave to .bsewave.

	svn path=/trunk/; revision=1498

2003-11-02  Danilo Å egan 	# 1a2fc015f94024df24aa1a0aa9c307b1a2c2c3c4

	Updated Serbian translation.

	2003-11-02  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1497

2003-11-02  Tim Janik 	# 231db71a13ef60bc9a88fcf6ea4aae576aed427a

	help string and XKBgeom.h detection fixes, suggested by Sam Hocevar

	Sun Nov  2 04:13:54 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: help string and XKBgeom.h detection fixes, suggested by
	        Sam Hocevar <sam@zoy.org>.

	        * ltmain.sh: update to libtool 1.5.0a.

	        * beast-gtk/bstapp.c: minor /Tools menu fix.

	        * beast-gtk/gxk/gxkgadget.c: minor type fix.

	svn path=/trunk/; revision=1496

2003-11-02  Christian Rose 	# 49ae81fa1a84cc6b4fbb20014adff8bacd8c83e2

	Added a missing file. Updated Swedish translation.

	2003-11-02  Christian Rose  <menthos@menthos.com>

		* POTFILES.in: Added a missing file.
		* sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=1495

2003-11-01  Danilo Å egan 	# 491de7b9df8ff795b08ea57ee896f8dd40690fb5

	Updated Serbian translation.

	2003-11-01  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1494

2003-11-01  Tim Janik 	# 79b04837de15b7df0258373b732611eae0600ad3

	added new directory to keep dialog (gadget) definition files. here,

	Thu Oct 30 22:08:48 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/dialogs/Makefile.am: added new directory to keep
	        dialog (gadget) definition files. here, beast-xml-zfiles.c
	        is generated, containing compressed .xml files.

	        * beast-gtk/dialogs/gadgets-standard.xml: standard gtk-wrapper
	        gadgets and composite containers.

	        * beast-gtk/dialogs/gadgets-beast.xml: beast specific dialogs.

	        * beast-gtk/bsttrackview.c: simplified code by switing to
	        gadget based GUI and adapting to item-view changes.

	        * beast-gtk/bstwaveview.c:
	        * beast-gtk/bstpartview.c: switched to gadget based GUI.

	        * beast-gtk/bstutils.[hc]: uncompress and parse gadget files.

	        * beast-gtk/bstitemview.[hc]: switched to gadget based GUI,
	        greatly simplified the code, provided explicit feature
	        constructors for derived objects.

	        * beast-gtk/bstmain.c: initialize (parse) gadgets.

	        * beast-gtk/gxk/gxkgadget.[hc]: small "GUI Factory", creates
	        widget trees from templates read from xml files vi GMarkup.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_zfile_uncompress() which
	        is a utiliy zlib-uncompress() wrapper.

	        * beast-gtk/bstpartview.c:
	        * beast-gtk/bsttrackview.c:
	        * beast-gtk/bstparamview.c: make widgets visible by default.

	        * *.c: deleted redundant code to show widgets.

	        * configure.in: added beast-gtk/dialogs/Makefile.am.

	        * beast-gtk/Makefile.am: disabled bststest building.

	        * beast-gtk/bstapp.[hc]: switched to gadget based GUI.

	svn path=/trunk/; revision=1492

2003-11-01  Tim Janik 	# 474f4274525323d2045b14dc778e28b016474520

	added g_option_concat() and g_option_get().

	Sat Nov  1 03:39:38 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_option_concat() and g_option_get().

	svn path=/trunk/; revision=1490

2003-10-28  Jordi Mallach 	# abc18d0ccad2c6e12f9ea9abaa11d58844611ccf

	Added Catalan translation by Xavier Conde Rueda <xaviconde@eresmas.com>.

	svn path=/trunk/; revision=1489

2003-10-28  Tim Janik 	# 064ce9a8174b9ddb3c6ff720501383aa19aded98

	TODO updates

	svn path=/trunk/; revision=1488

2003-10-27  Tim Janik 	# c8826418a7c8542b40a4de4e7328d8588748d794

	updates.

	Tue Oct 28 00:34:38 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: updates.

	        * docs/site-news.texi: announce 0.5.5 and LinuxUser article, rotate news.

	        * docs/site-historic.texi: link to LinuxUser article.

	svn path=/trunk/; revision=1487

2003-10-27  Tim Janik 	# 4d79d799192e399880c352d8a72e235835ab7418

	throw out 0.5.5, interface 0, binary 0.

	Mon Oct 27 22:43:10 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: throw out 0.5.5, interface 0, binary 0.

	svn path=/trunk/; revision=1485

2003-10-27  Tim Janik 	# 680ce609ded6f2043a402ca8399094715ca59273

	new effect.

	Mon Oct 27 22:39:57 2003  Tim Janik  <timj@gtk.org>

	        * library/effects/atan-canyon.bse: new effect.

	        * library/instruments/synth-lead.bse: add license information.

	svn path=/trunk/; revision=1484

2003-10-27  Tim Janik 	# 3375b75c09835aeb560c7b4015562f354f9077c9

	new instrument.

	Mon Oct 27 22:24:27 2003  Tim Janik  <timj@gtk.org>

	        * library/instruments/synth-lead.bse: new instrument.

	svn path=/trunk/; revision=1483

2003-10-27  Tim Janik 	# 269167eccb7208f7cbeee9c973a06651a694f7eb

	from 0.5.5 on, let the amplifier default to multiply (and-ing) the two

	Mon Oct 27 22:12:48 2003  Tim Janik  <timj@gtk.org>

	        * bseamplifier.[ic]*: from 0.5.5 on, let the amplifier default to
	        multiply (and-ing) the two control inputs.

	svn path=/trunk/; revision=1482

2003-10-27  Tim Janik 	# 42b53e39b7a84f0888284618492035109acb01fb

	TODO updates

	svn path=/trunk/; revision=1481

2003-10-27  Tim Janik 	# 5acf1060256bfb7cda7efd9596ac39641e891a12

	disable non-working script entries.

	Mon Oct 27 20:59:24 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c (popup_entries): disable non-working script entries.

	        * configure.in (ALL_LINGUAS): added russian translation.
	        added note for translators about needing po files in po/ and po-bse/,
	        suggested by Hasbullah Bin Pit.

	svn path=/trunk/; revision=1480

2003-10-27  Tim Janik 	# 499ff6abaa84de2cb76a48376fdb60f56e53c7fe

	added russian translation from Alexandre Prokoudine <avp@altlinux.ru>.

	Mon Oct 27 20:46:50 2003  Tim Janik  <timj@gtk.org>

	        * ru.po: added russian translation from Alexandre Prokoudine <avp@altlinux.ru>.

	svn path=/trunk/; revision=1479

2003-10-27  Tim Janik 	# 6b08ba04688faae5881fa67e1ab50c51dee28381

	added russian translation from Alexandre Prokoudine <avp@altlinux.ru>.

	Mon Oct 27 20:46:25 2003  Tim Janik  <timj@gtk.org>

	        * ru.po: added russian translation from Alexandre Prokoudine <avp@altlinux.ru>.

	svn path=/trunk/; revision=1478

2003-10-27  Tim Janik 	# 58126a860f292a30dbd860fa2514cdc8da5072ee

	ensure custom effects and instrument paths exist if the instrument or

	Mon Oct 27 19:55:27 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c: ensure custom effects and instrument paths
	        exist if the instrument or effects file selections are used.

	svn path=/trunk/; revision=1477

2003-10-27  Tim Janik 	# d4f2ece0213a2244ed7dc8c91b72c5c5ecd9f800

	added sfi_make_dirpath() to create directories possibly containing ~,

	Mon Oct 27 19:56:12 2003  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.[hc]: added sfi_make_dirpath() to create directories
	        possibly containing ~, ~user or non-existant parent directories.

	svn path=/trunk/; revision=1476

2003-10-27  Danilo Å egan 	# fe087a98f32ec087ba94e14c7683a0e7840da032

	Updated Serbian translation.

	2003-10-27  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1475

2003-10-27  Tim Janik 	# 380f930ad21f98c6642f428ea34361340e7aa387

	NEWS updates

	svn path=/trunk/; revision=1474

2003-10-27  Tim Janik 	# 0762f353cb134a65a4b470d2ca8d3829055f56b9

	TODO updates

	svn path=/trunk/; revision=1473

2003-10-27  Christian Rose 	# b8097f23f19d5fc8a0f7cc54017fd250169b640c

	Added this. Updated Swedish translation.

	2003-10-27  Christian Rose  <menthos@menthos.com>

		* POTFILES.skip: Added this.
		* sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=1472

2003-10-27  Christian Rose 	# 7781ee78922539770a0155b7b6ba6e064261c362

	Added one more entry and a comment. Added this. Updated Swedish

	2003-10-27  Christian Rose  <menthos@menthos.com>

		* POTFILES.in: Added one more entry and a comment.
		* POTFILES.skip: Added this.
		* sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=1471

2003-10-27  Tim Janik 	# a6b2a7c84483a227385112cd4ffeb9234697ea27

	distcheck updates

	svn path=/trunk/; revision=1470

2003-10-27  Tim Janik 	# fc706e24897fc0cb0fd49abfffc3b9c2e0f212a7

	distcheck fixes

	svn path=/trunk/; revision=1469

2003-10-26  Tim Janik 	# 79b6cb76279ada9634eccc6aa68dc75676781141

	TODO updates

	svn path=/trunk/; revision=1468

2003-10-26  Tim Janik 	# b52639de5b844eeb3ae04b041b29dbaad587fa99

	added application/ogg.

	Mon Oct 27 00:39:10 2003  Tim Janik  <timj@gtk.org>

	        * gslloader-oggvorbis.c: added application/ogg.

	svn path=/trunk/; revision=1467

2003-10-26  Danilo Å egan 	# cc343c862fb5efa36223f1cd71d8d5feb2c4d1cf

	Updated Serbian translation.

	2003-10-27  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1466

2003-10-26  Tim Janik 	# 7a34197e87b210124c8d081baaef822159071d49

	moved config-paths.h to data/.

	Mon Oct 27 00:25:00 2003  Tim Janik  <timj@gtk.org>

	        * moved config-paths.h to data/.

	        * data/: added rules to install .desktop, .applications, .mime
	        and .keys files as well as corresponding images.

	svn path=/trunk/; revision=1465

2003-10-26  Metin Amiroff 	# 4469836f74e7591129a4c89f97a94a031d3a391b

	Fixed encoding error.

	2003-10-26  Metin Amiroff  <metin@karegen.com>

		* az.po: Fixed encoding error.

	svn path=/trunk/; revision=1464

2003-10-26  Metin Amiroff 	# ba71f8601cae1ac68853e1bf7a5b3f4f582e49aa

	Updated Azerbaijani translation.

	2003-10-26  Metin Amiroff  <metin@karegen.com>

		* az.po: Updated Azerbaijani translation.

	svn path=/trunk/; revision=1463

2003-10-26  Tim Janik 	# 04e6f4d21be5a97748a7d89e7f04f92a9fa170c4

	fix typo

	svn path=/trunk/; revision=1462

2003-10-26  Tim Janik 	# 4f1e9968829a14b27fab9d69d32bbaa52213e128

	generate files in data/. increased version to 0.5.5-rc4. removed

	Sun Oct 26 18:13:16 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: generate files in data/.
	        increased version to 0.5.5-rc4.
	        removed beast-gtk/images/ files, generate sfi.pc
	        and bse.pc in data/ and not toplevel.

	        * Makefile.am: added data/ subdir.

	        * beast-gtk/Makefile.am: removed images/ from subdirs.

	        * beast-gtk/bstmain.c: include beast-images.h from data/.

	        * data/Makefile.am: added sfi.pc and bse.pc.

	        * sfi.pc.in:
	        * bse.pc.in:
	        * beast-gtk/images/: removed.

	svn path=/trunk/; revision=1461

2003-10-26  Tim Janik 	# 88403746e0e193307432e332c77cf627ade3a6b2

	cvs copied here from ../. cvs copied here from ../.

	Sun Oct 26 17:57:43 2003  Tim Janik  <timj@gtk.org>

	        * data/bse.pc.in: cvs copied here from ../.
	        * data/sfi.pc.in: cvs copied here from ../.

	svn path=/trunk/; revision=1460

2003-10-26  Tim Janik 	# 4bcf545770a1427923678004f6dbf53b9a9c05b7

	restrict .cvsignore

	svn path=/trunk/; revision=1459

2003-10-26  Tim Janik 	# 93bfd346ce34343e3c8e178d98570ef9933acefd

	cvs copied these files from beast-gtk/images.

	Sun Oct 26 17:45:52 2003  Tim Janik  <timj@gtk.org>

	        * data/.cvsignore:
	        * data/Makefile.am:
	        * data/beast-logo.png:
	        * data/beast-mime.png:
	        * data/beast-splash.png:
	        * data/beast.png:
	        * data/beast16.png:
	        * data/bse-mime.png: cvs copied these files from beast-gtk/images.

	svn path=/trunk/; revision=1458

2003-10-26  Tim Janik 	# 95aabbdb36260e7798090d692d3e46880d7f32e5

	added to keep beast building.

	Sun Oct 26 17:31:46 2003  Tim Janik  <timj@gtk.org>

	        * az.po: added to keep beast building.

	svn path=/trunk/; revision=1457

2003-10-26  Metin Amiroff 	# 47332ee6fa0f983d95efb85b297f7bdb7e77d718

	Added az to ALL_LINGUAS.

	2003-10-26  Metin Amiroff  <metin@karegen.com>

		* configure.in: Added az to ALL_LINGUAS.

	svn path=/trunk/; revision=1456

2003-10-26  Metin Amiroff 	# b9e676980e54f584f319c67862a546433a2ebafb

	Added Azerbaijani translation.

	2003-10-26  Metin Amiroff  <metin@karegen.com>

		* az.po: Added Azerbaijani translation.

	svn path=/trunk/; revision=1455

2003-10-26  Tim Janik 	# e6b09f4a26397ebf436606b7e1bf693f22dce661

	added enum for track-roll/piano-roll/event-roll utilities.

	Sat Oct 25 19:28:46 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdefs.h: added enum for track-roll/piano-roll/event-roll
	        utilities.

	        * beast-gtk/bsttrackrollctrl.[hc]: account for for utility enum removal.

	        * beast-gtk/bstradiotools.c: ignore toggle-button toggles that don't
	        activate a toggle button, regardless of whether they are triggered
	        by the GUI or accelerators. (fixes pressing accelerator for a
	        radio-tools button twice to unselect the button).

	        * beast-gtk/bstpianoroll.[hc]:
	        * beast-gtk/bsteventroll.[hc]: remove quantization code.

	        * beast-gtk/bsteventrollctrl.[hc]: added quantization code. construct
	        with radio-tools object to select quantization and behaviour.
	        determine button/tool associations.

	        * beast-gtk/bstpianorollctrl.[hc]: added quantization code. added
	        radio-tools construction code for note-length, utility selection and
	        quantization selection. determine button/tool associations.

	        * beast-gtk/bstpartdialog.[hc]: construct event roll controller with
	        radio-tools from piano roll as they share utility and quantization.
	        remove radio-tools construction code.

	        * beast-gtk/bstmessages.c: added tool descriptions for piano-roll and
	        event-roll.

	        * bsw/Makefile.am: change c-symbol function prefix to beast_.

	svn path=/trunk/; revision=1454

2003-10-26  Stefan Westerfeld 	# 550c3a042a96f426678fbc66358cc106b0b41a70

	Using // within a string now works (no longer treated as C++ comment start

	Sun Oct 26 09:38:12 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bserecords.idl: Using // within a string now works (no longer
		treated as C++ comment start by sfidl).

	svn path=/trunk/; revision=1453

2003-10-26  Stefan Westerfeld 	# 61a58e4e049d8af531d6187ed72079b2326d7a05

	Take notice of strings within preprocessor and ignore comments within

	Sun Oct 26 09:33:46 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: Take notice of strings within preprocessor and
		ignore comments within them.

		* testidl.idl: Added test code for new string handling code.

	svn path=/trunk/; revision=1452

2003-10-26  Danilo Å egan 	# b2cd9be9aca8f4ed23093493cf2898268ea080ec

	Updated Serbian translation.

	2003-10-26  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1451

2003-10-25  Tim Janik 	# 6d5601892b47aa144148d8a108c2c0c75965e00e

	new stock menu icon.

	Sat Oct 25 17:34:31 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/cons/binote.png: new stock menu icon.

	        * beast-gtk/bstapp.c: list and load demo songs.

	svn path=/trunk/; revision=1450

2003-10-25  Tim Janik 	# 4589e492237bf319310f1a550693c5d6862687af

	introduce copyright compat property.

	Sat Oct 25 17:30:21 2003  Tim Janik  <timj@gtk.org>

	        * bsesuper.c: introduce copyright compat property.

	svn path=/trunk/; revision=1449

2003-10-25  Tim Janik 	# c3c31f6a3b6a4b7ff866545b61995bef5d848c85

	implement sfi_rstore_quick_scan() to scan lisp syntax for a specific

	Sat Oct 25 17:28:02 2003  Tim Janik  <timj@gtk.org>

	        * sfistore.[hc]: implement sfi_rstore_quick_scan() to scan lisp syntax
	        for a specific statement.

	svn path=/trunk/; revision=1448

2003-10-25  Stefan Westerfeld 	# 014bf57f4f82c1c0f1f6dcae3f4d07ab2504c8cc

	done.

	svn path=/trunk/; revision=1447

2003-10-25  Stefan Westerfeld 	# aeaa79fc25834cf5d81aeecdcffed29b6141fc0c

	Licensed under the Green OpenMusic License

	Sat Oct 25 17:14:45 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* library/demo/partymonster.bse: Licensed under the Green OpenMusic
		License (http://openmusic.linuxtag.org).

		* library/scripts/song-parts-operations.scm: Licensed GPL.

	svn path=/trunk/; revision=1446

2003-10-25  Tim Janik 	# e71d00551142f3e70308ac76a0acdc23b1a1bc39

	*** empty log message ***

	svn path=/trunk/; revision=1445

2003-10-25  Tim Janik 	# f82fccb558c71b96fe5db828ec8df58f6ebe61be

	*** empty log message ***

	svn path=/trunk/; revision=1444

2003-10-25  Tim Janik 	# cd6031d183f32b81c8ceff5fc220a036e4880e45

	*** empty log message ***

	svn path=/trunk/; revision=1443

2003-10-25  Tim Janik 	# de92fa7e814d371509aeab021029bef202083dbe

	fix typo

	svn path=/trunk/; revision=1442

2003-10-25  Tim Janik 	# 7067b2cf8349b2ba9083a1d88b44ffe9e8c6c4b7

	added warning about rack editor instabilities.

	Sat Oct 25 02:16:35 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrackeditor.c (bst_rack_editor_init): added warning
	        about rack editor instabilities.

	svn path=/trunk/; revision=1441

2003-10-25  Tim Janik 	# 65d0663c5ad12eefad500b1d362c8ca98c5e7779

	nuked frequency fine-tune setting which was rather pointless.

	Sat Oct 25 02:05:14 2003  Tim Janik  <timj@gtk.org>

	        * bsebiquadfilter.[hc]: nuked frequency fine-tune setting which was
	        rather pointless.

	        * bseamplifier.idl: fix compat balance ranges.

	svn path=/trunk/; revision=1440

2003-10-24  Tim Janik 	# 49a80f90da04a147e2da3e27813ceaa51077ba72

	TODO updates

	svn path=/trunk/; revision=1439

2003-10-24  Tim Janik 	# 1d341f84cbf9df242ab7bb3a5b45ea0b3e9bd0e4

	TODO updates

	svn path=/trunk/; revision=1438

2003-10-24  Tim Janik 	# 7080fd66fe9e0b5f4ca062b3e6b1a7460505ed4e

	removed.

	Sat Oct 25 01:58:24 2003  Tim Janik  <timj@gtk.org>

	        * library/scripts/test.scm: removed.

	svn path=/trunk/; revision=1437

2003-10-24  Tim Janik 	# 37c5d90e4366d8a34ce0645a7e398c98c128bb31

	changed "copyright" field of procedures, scripts and objects into a

	Sat Oct 25 01:49:50 2003  Tim Janik  <timj@gtk.org>

	        * *.*: changed "copyright" field of procedures, scripts and objects
	        into a "license" field which better reflects what we're asking for.

	svn path=/trunk/; revision=1436

2003-10-24  Tim Janik 	# 5305a97ac88e6d6301795179441cd6b954a41982

	fix menu item

	svn path=/trunk/; revision=1435

2003-10-24  Tim Janik 	# 46cc3dd853ff3d7947689bc46da5ab75d1c49057

	todo updates

	svn path=/trunk/; revision=1434

2003-10-24  Tim Janik 	# c74fb5164f256c15a887eb6b972ca265d59446cf

	some cleanups, added range checks. (bst_log_adjustment_setup): turn

	Fri Oct 24 22:29:02 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstlogadjustment.[hc]: some cleanups, added range checks.
	        (bst_log_adjustment_setup): turn n_steps into a double.
	        emit ::changed and ::value-changed after updating ranges.

	svn path=/trunk/; revision=1433

2003-10-24  Tim Janik 	# 692344176517251e5c5df545f2483c7f77d52a91

	whitespaces

	svn path=/trunk/; revision=1432

2003-10-24  Tim Janik 	# ada7e2151b966169018b1f61d5aedd81c22543ec

	todo updates

	svn path=/trunk/; revision=1431

2003-10-24  Tim Janik 	# b82e8a8fb598cfa42657a111474386e0b5af7510

	fix indentation and copyright notice.

	Fri Oct 24 21:26:22 2003  Tim Janik  <timj@gtk.org>

	        * artscompressor.cc:
	        * artscompressor.idl: fix indentation and copyright notice.

	svn path=/trunk/; revision=1430

2003-10-24  Tim Janik 	# 775161ac56eeb0ce5a8db2349813ea86874e54c3

	todo updates

	svn path=/trunk/; revision=1429

2003-10-23  Miloslav Trmac 	# 299f0c2e01baf3820bfca36bc90d1e8e95fa0a40

	Add Czech translation

	svn path=/trunk/; revision=1428

2003-10-22  Stefan Westerfeld 	# 7ece1a9bc924ee0ba965e3573577437b5c07af00

	Fixed bug in triggering code inside inner loop.

	Wed Oct 22 19:47:58 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* davxtalstrings.c: Fixed bug in triggering code inside inner loop.

	svn path=/trunk/; revision=1427

2003-10-22  Vincent van Adrighem 	# 837ff272438c00f2522081b161650665dd18f021

	Dutch translation updated by Vincent van Adrighem.

	2003-10-22   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation updated by Vincent van Adrighem.

	svn path=/trunk/; revision=1426

2003-10-22  Vincent van Adrighem 	# 79ebffd2d13b12a7f770d4f4fffa58d9a4b6b541

	Dutch translation updated.

	2003-10-22  Vincent van Adrighem  <adrighem@gnome.org>

	    * nl.po: Dutch translation updated.

	svn path=/trunk/; revision=1425

2003-10-20  Tim Janik 	# c7f9a0fe4589f9dc64afd00bccfb340cab865b2d

	NEWS updates

	svn path=/trunk/; revision=1424

2003-10-20  Tim Janik 	# 4cc8ffd8f0cdfcc60cc3b9e5bd2a16f8d168ff74

	add empty file to keep beast compiling.

	Mon Oct 20 18:24:26 2003  Tim Janik  <timj@gtk.org>

	        * nl.po: add empty file to keep beast compiling.

	svn path=/trunk/; revision=1423

2003-10-19  Vincent van Adrighem 	# ec0143164b9a6327d3a5e975f39a1b87bd31fb88

	Dutch translation added.

	2003-10-19   Vincent van Adrighem  <adrighem@gnome.org>

		* configure.in: Dutch translation added.

	svn path=/trunk/; revision=1422

2003-10-19  Vincent van Adrighem 	# d63bf78f1bd3d56140a452fe26e0bff5771b0627

	Dutch translation added by Vincent van Adrighem.

	2003-10-19   Vincent van Adrighem  <adrighem@gnome.org>

		* nl.po: Dutch translation added by Vincent van Adrighem.

	svn path=/trunk/; revision=1421

2003-10-19  Tim Janik 	# 35ab20d0a99afbcc43de42668d4f0f62b8b5f80f

	news updates

	svn path=/trunk/; revision=1420

2003-10-19  Christian Neumair 	# 886be404735509d2a8c1541ba59983fb59b08ebd

	Added German translation.

	svn path=/trunk/; revision=1419

2003-10-19  Christian Neumair 	# c65355127b588a8a9c3b6cef8e3facdc1eb23df8

	Added German translation.

	svn path=/trunk/; revision=1418

2003-10-18  Danilo Å egan 	# fed7716a3812aabb8c1c4d3c1e3dc93f232bfd09

	Updated Serbian translation.

	2003-10-18  Danilo Å egan  <dsegan@gmx.net>

		* sr.po, sr@Latn.po: Updated Serbian translation.

	svn path=/trunk/; revision=1417

2003-10-18  Christian Rose 	# 0242aee61583a72b2d4bf24d0157a5348fd5ab20

	Updated Swedish translation.

	2003-10-18  Christian Rose  <menthos@menthos.com>

		* sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=1416

2003-10-18  Stefan Westerfeld 	# ec972c04b2c6e7f161802ce8ec6c73946ddca664

	monster update

	svn path=/trunk/; revision=1415

2003-10-18  Stefan Westerfeld 	# 30560c4a70737a6ed58e671c7af65eece7b56f79

	updated news

	svn path=/trunk/; revision=1414

2003-10-18  Stefan Westerfeld 	# 0999ad47802891b4f763a2f10b3d88ddb6e912aa

	updates

	svn path=/trunk/; revision=1413

2003-10-18  Tim Janik 	# 43e3b511a19493f85e2fd2b477f561ec776432ca

	fix menu item images not being visible.

	Sat Oct 18 05:23:23 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmenus.c (bst_menu_config_create_items): fix menu item
	        images not being visible.

	svn path=/trunk/; revision=1412

2003-10-18  Tim Janik 	# 87c548862a76270a4df34543ddc86ce23b250dd1

	hook up effect and instrument saving in /Synthesiser menu.

	Sat Oct 18 05:09:24 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_activate): hook up effect and instrument
	        saving in /Synthesiser menu.

	        * beast-gtk/bstfiledialog.[hc]: setup radio buttons after set_mode().
	        prime file selection singletons with appropriate default directories.
	        implement effect and instrument saving.

	svn path=/trunk/; revision=1411

2003-10-18  Tim Janik 	# 6dcaf60a5d2c7656adf78b96a254d833129b4639

	keep track of items stored so far, and of items referenced so far.

	Sat Oct 18 05:06:27 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]: keep track of items stored so far, and of items
	        referenced so far.

	        * bseproject.[hcp]*: implemented dependency storing.
	        (bse_project_store_bse): if the item to store is not the project,
	        store all out-of-branch objects it referes to.

	svn path=/trunk/; revision=1410

2003-10-18  Tim Janik 	# 15b1bae90413054e6debddfb3bc1edc0da1bdef9

	added pointer pool.

	Sat Oct 18 04:59:35 2003  Tim Janik  <timj@gtk.org>

	        * sfiustore.[hc]: added pointer pool.

	svn path=/trunk/; revision=1409

2003-10-18  Stefan Westerfeld 	# 53d8848957ec4e019d632e8d0f2e1468d2eef597

	More work on song: use compression.

	Sat Oct 18 04:59:23 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* library/demo/partymonster.bse: More work on song: use compression.

	svn path=/trunk/; revision=1408

2003-10-18  Stefan Westerfeld 	# 32ebf48906dfaaf3ba71c20cfece6eab11414b49

	Ported compressor from aRts. Stereo compression is also supported, and

	Sat Oct 18 04:48:34 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* artscompressor.idl artscompressor.cc: Ported compressor from aRts.
		Stereo compression is also supported, and works slightly differently
		than in aRts because it uses only one volume for both channels, and
		like this doesn't mess up balance.

		* Makefile.am Makefile.plugins: Added compressor to the Makefiles.

	svn path=/trunk/; revision=1407

2003-10-18  Stefan Westerfeld 	# 92c9e5ce5209a87e801a7594b49b0cf5333ae7df

	Added "scale" hint to Freq param spec. Added LogScale param spec.

	Sat Oct 18 04:45:29 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetype.h: Added "scale" hint to Freq param spec. Added LogScale
		param spec.

	svn path=/trunk/; revision=1406

2003-10-17  Tim Janik 	# 7b599e45da633ec1dd6c8c143845194efb62170b

	TODO updates

	svn path=/trunk/; revision=1405

2003-10-17  Stefan Westerfeld 	# 0a801cd7ac60bedb3c7da248c94ab3144cf6371e

	Added the "Party Monster" demo song.

	Sat Oct 18 01:01:14 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* library/demo/Makefile.am library/demo/partymonster.bse: Added the
		"Party Monster" demo song.

	svn path=/trunk/; revision=1404

2003-10-17  Stefan Westerfeld 	# 1f5f924759375449406c5524543c88d1a655cd75

	gui stuff

	svn path=/trunk/; revision=1403

2003-10-17  Tim Janik 	# 94c066529aaf9982c8799cfcbf4ad910456e05e9

	fix demo menu item

	svn path=/trunk/; revision=1402

2003-10-17  Tim Janik 	# ce771a94018d9d2c14cbb5becc1aba8e8c208961

	updates

	svn path=/trunk/; revision=1401

2003-10-17  Stefan Westerfeld 	# 065e42599852c5d4e238208b6fe21affa85cdbb1

	Defined bse-param-song.

	Fri Oct 17 22:25:00 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* shell/bse-scm-glue.boot: Defined bse-param-song.

		* library/scripts/song-parts-operations.scm: Added scripts for cropping
		or duplicating parts within the loop range.

	svn path=/trunk/; revision=1400

2003-10-17  Tim Janik 	# 095b757065db199b50ec77a4fba649476c118ff9

	add /Synthesizers submenu, support loading of effects and instruments.

	Fri Oct 17 22:19:18 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: add /Synthesizers submenu, support
	        loading of effects and instruments.

	        * beast-gtk/bstfiledialog.[hc]: add effect and instrument
	        library loading dialogs. use seperate dialogs for project,
	        wave, effects and instruments.

	        * beast-gtk/bsttreestores.[hc]: reworked bst_file_store_*()
	        implementation and API to support multiple file stores.

	svn path=/trunk/; revision=1399

2003-10-17  Tim Janik 	# a426776364da518acbeebbc683e02ed0a8108230

	export demo path and custom directories for effects and instruments.

	Fri Oct 17 22:05:10 2003  Tim Janik  <timj@gtk.org>

	        * bseserver.proc: export demo path and custom directories for
	        effects and instruments.

	        * bsetrack.proc: docu fix.

	svn path=/trunk/; revision=1398

2003-10-17  Tim Janik 	# fc93a20741ea4d51001b7e752aaea55db1c7187c

	updates from make dist

	svn path=/trunk/; revision=1397

2003-10-17  Tim Janik 	# b4221c3dd3fa96642fdb4c5689dd66d605f68729

	include _DATA files in tarballs.

	Fri Oct 17 21:35:43 2003  Tim Janik  <timj@gtk.org>

	        * library/*/Makefile.am: include _DATA files in tarballs.

	        * library/scripts/modules2grid.scm:
	        * library/scripts/progressor-example.scm:
	        * library/scripts/record-midi.scm:
	        * library/scripts/test.scm: moved scripts here from shell/.

	svn path=/trunk/; revision=1396

2003-10-17  Tim Janik 	# c5a16b2822f7aaefa00b13e1d292defdea8220f1

	remove dold script references, install boot script

	svn path=/trunk/; revision=1395

2003-10-17  Tim Janik 	# ce657b2166177866c12e8d57da75bb75ce5e1615

	install scheme scripts

	svn path=/trunk/; revision=1394

2003-10-17  Tim Janik 	# 6e87cef32e31a3126f2c321078c18eb59f4aa373

	shutup

	svn path=/trunk/; revision=1393

2003-10-17  Tim Janik 	# bc528bd66bf2539aab2ac20f252578d609940c0b

	added simplistic test instrument with MIDI input.

	Fri Oct 17 21:07:55 2003  Tim Janik  <timj@gtk.org>

	        * library/instruments/test-string.bse: added simplistic test instrument
	        with MIDI input.

	        * configure.in: generate Makefiles for library/*, define bsedemodir.

	        * library/demo/:
	        * library/effects/:
	        * library/instruments/:
	        * library/scripts/: new directories to contain stock data
	        to be installed.

	svn path=/trunk/; revision=1392

2003-10-17  Tim Janik 	# b309d1cdad3777ecc7eaefb560c02e90b6218008

	allow button2 moves for vselect (like we do for select already).

	Fri Oct 17 18:20:41 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c (part_dialog_update_tool): allow button2
	        moves for vselect (like we do for select already).

	        * beast-gtk/bstpartdialog.c (popup_entries): more i18n markup.

	svn path=/trunk/; revision=1391

2003-10-17  Stefan Westerfeld 	# 06eeb5a526e619682e40d6de3d4f754f98f74a4d

	copy part

	svn path=/trunk/; revision=1390

2003-10-17  Stefan Westerfeld 	# 429c7ae2362c32a05fc77523f412c50d10108c7e

	Added my section of things that need to be done in the GUI.

	svn path=/trunk/; revision=1389

2003-10-17  Tim Janik 	# 242eb509ea4f56c463e479e005ac14c7f432ec09

	*** empty log message ***

	svn path=/trunk/; revision=1388

2003-10-16  Alper Ersoy 	# 3831b30a93384b1b897e61596a5e8220d269ec1c

	use normal width serif fonts for var element.

	Wed Oct 15 21:12:56 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/css/default.css: use normal width serif fonts for var
	        element.

	svn path=/trunk/; revision=1387

2003-10-16  Christian Rose 	# 53e21eb7bea2339cf355e4a6f0310d5b04853691

	Moved the last added files... ...to this file.

	2003-10-16  Christian Rose  <menthos@menthos.com>

		* POTFILES.in: Moved the last added files...
		* POTFILES.skip: ...to this file.

	svn path=/trunk/; revision=1386

2003-10-16  Tim Janik 	# 1693fe1af60e9f927abd0e8c8cb3c315df096c6c

	updated NEWS, fixed CHangeLog encoding

	svn path=/trunk/; revision=1385

2003-10-16  Christian Rose 	# 803ea8996d567dc09825d5a7b7fa2d6bf5bc07a4

	Added missing files and comment. Added. Updated Swedish translation.

	2003-10-16  Christian Rose  <menthos@menthos.com>

		* POTFILES.in: Added missing files and comment.
		* POTFILES.skip: Added.
		* sv.po: Updated Swedish translation.

	svn path=/trunk/; revision=1384

2003-10-15  Danilo Å egan 	# 345812ecfcd5b6dd7613f6923d8232f6bd3b4f06

	Added "sr" and "sr@Latn" to ALL_LINGUAS.

	2003-10-15  Danilo Å egan  <dsegan@gmx.net>

		* configure.in: Added "sr" and "sr@Latn" to ALL_LINGUAS.

		* po/sr.po, po/sr@Latn.po: Added Serbian translation.

	svn path=/trunk/; revision=1383

2003-10-15  Danilo Å egan 	# aa21b820590060363ad399a0686eef669a4c5705

	Added Serbian translation.

	2003-10-15  Danilo Å egan  <dsegan@gmx.net>

		* po-bse/sr.po, po-bse/sr@Latn.po: Added Serbian translation.

	svn path=/trunk/; revision=1382

2003-10-15  Tim Janik 	# e4902ef17c0322eb835266b6640595098f18452d

	NEWS updates

	svn path=/trunk/; revision=1381

2003-10-15  Christian Rose 	# 21a0e91a53de50db866d6c39e3857f7c2e65c729

	Added more entries. Added Swedish translation.

	2003-10-15  Christian Rose  <menthos@menthos.com>

		* .cvsignore: Added more entries.
		* sv.po: Added Swedish translation.

	svn path=/trunk/; revision=1380

2003-10-15  Christian Rose 	# 46378c4201230e9a84bd55537b7ddcda57281c7a

	Added more entries.

	2003-10-15  Christian Rose  <menthos@menthos.com>

		* .cvsignore: Added more entries.

	svn path=/trunk/; revision=1379

2003-10-15  Christian Rose 	# 823c4c5f974798e869bbaca2646d537f22a77e3e

	Added "sv" to ALL_LINGUAS. Added Swedish translation.

	2003-10-15  Christian Rose  <menthos@menthos.com>

		* configure.in: Added "sv" to ALL_LINGUAS.
		* po/sv.po: Added Swedish translation.

	svn path=/trunk/; revision=1378

2003-10-15  Tim Janik 	# f5d9504aa4fc3632bce44f858dc26362828280a2

	todo updates

	svn path=/trunk/; revision=1377

2003-10-15  Tim Janik 	# b0cebe5644738b1b17b54e48af3b0c761846053d

	throw out candidate 0.5.5-rc3.

	Wed Oct 15 04:58:31 2003  Tim Janik  <timj@gtk.org>

	        * throw out candidate 0.5.5-rc3.

	        * beast-gtk/bstmenus.c (bst_menu_config_create_items): fix random stock
	        accelerators.

	svn path=/trunk/; revision=1376

2003-10-15  Tim Janik 	# 54262482d8b04e42632f8ff0a5821e330afba577

	translate BstItemViewOp strings.

	Wed Oct 15 02:41:24 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.c (bst_item_view_init): translate BstItemViewOp
	        strings.

	        * po-helper.sh.in:
	        * po-helper.sh:
	        * configure.in: make configure create po-helper.sh from po-helper.sh.in
	        to define BST_GETTEXT_DOMAIN and BSE_GETTEXT_DOMAIN which are required
	        by the update scripts in the po*/ directories. add po-helper.sh.in
	        _and_ po-helper.sh to CVS, so translation efforts don't require a
	        beast package build.

	        * beast-gtk/bstapp.c:
	        * beast-gtk/bstcanvaslink.c:
	        * beast-gtk/bstcanvassource.c:
	        * beast-gtk/bsteventrollctrl.c:
	        * beast-gtk/bstfiledialog.c:
	        * beast-gtk/bstinstrumentview.c:
	        * beast-gtk/bstitemview.c:
	        * beast-gtk/bstparam-entry.c:
	        * beast-gtk/bstparam-toggle.c:
	        * beast-gtk/bstpartview.c:
	        * beast-gtk/bstpianorollctrl.c:
	        * beast-gtk/bstplayback.c:
	        * beast-gtk/bstprocedure.c:
	        * beast-gtk/bstprojectctrl.c:
	        * beast-gtk/bstrackitem.c:
	        * beast-gtk/bstsampleeditor.c:
	        * beast-gtk/bstsnetrouter.c:
	        * beast-gtk/bstsplash.c:
	        * beast-gtk/bsttrackrollctrl.c:
	        * beast-gtk/bsttrackview.c:
	        * beast-gtk/bstusermessage.c:
	        * beast-gtk/bstwaveeditor.c:
	        * beast-gtk/bstwavereposhell.c: label fixes and i18n markup.

	svn path=/trunk/; revision=1375

2003-10-15  Tim Janik 	# 56e8102d6f78c6103c59d1cbf078f0843b644f3b

	figure versioned gettext domain (GETTEXT_PACKAGE) from ../po-helper.sh.

	Wed Oct 15 02:35:15 2003  Tim Janik  <timj@gtk.org>

	        * update.sh: figure versioned gettext domain (GETTEXT_PACKAGE)
	        from ../po-helper.sh.

	        * POTFILES.in: added more i18n makred up files.

	svn path=/trunk/; revision=1374

2003-10-15  Tim Janik 	# 6aed1c544c7f2cd2996f554119ac67df1fff43f5

	figure versioned gettext domain (GETTEXT_PACKAGE) from ../po-helper.sh.

	Wed Oct 15 02:36:02 2003  Tim Janik  <timj@gtk.org>

	        * update.sh: figure versioned gettext domain (GETTEXT_PACKAGE)
	        from ../po-helper.sh.

	svn path=/trunk/; revision=1373

2003-10-14  Tim Janik 	# cf6f4267e6f6cacf67cda6583767ad9c1b91f830

	include *.png icons

	svn path=/trunk/; revision=1372

2003-10-14  Tim Janik 	# 36b6abd332ba93080ab4caeb481cca75f43df6a3

	up version to 0.5.5-rc3

	svn path=/trunk/; revision=1371

2003-10-14  Tim Janik 	# 2d64d848890419811052c0d75e493c3f6c6d6d63

	properly install idl files

	svn path=/trunk/; revision=1370

2003-10-14  Tim Janik 	# c0ccfdecbf9662172c5c4b5e76ae912907696545

	initial setup.

	Tue Oct 14 21:55:38 2003  Tim Janik  <timj@gtk.org>

	        * initial setup.

	svn path=/trunk/; revision=1369

2003-10-14  Tim Janik 	# 5884725db8c8745fe97b248a82f979e5ae5475e9

	more 0.5.4-compatibility handling, audio-gain used to default to 50%.

	Tue Oct 14 21:51:23 2003  Tim Janik  <timj@gtk.org>

	        * bseamplifier.cc: more 0.5.4-compatibility handling, audio-gain used to
	        default to 50%.

	svn path=/trunk/; revision=1368

2003-10-14  Tim Janik 	# 306e9f528e5f05e1789c78b7e5ebb937dbe090de

	removed first c++ example module, there's plenty of other example code now

	Tue Oct 14 21:16:44 2003  Tim Janik  <timj@gtk.org>

	        * examplepeakfilter.[hc]*: removed first c++ example module, there's
	        plenty of other example code now (bsebalance.[ic]*, bseamplifier.[ic]*).

	        * bsehelloworld.proc: removed first example procedures, there're plenty
	        of others available, examples in scheme even.

	svn path=/trunk/; revision=1367

2003-10-13  Tim Janik 	# ab6d2b9a83215c98d2b578c53a2568fe10b09b9d

	use bse_undo_stack_push_add_on() to push the undo step to deactivate a

	Mon Oct 13 16:09:38 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.proc: use bse_undo_stack_push_add_on() to push the undo step
	        to deactivate a project after playback started.

	        * bseundostack.[hc]: added bse_undo_stack_push_add_on() which merges its
	        undo step to the last pushed step if there is any.

	svn path=/trunk/; revision=1366

2003-10-13  Tim Janik 	# 6d1ad216f646b9fbb1d3c738fb824656537bb588

	return BstCatalogTool by value, so we can perform gettext() translations

	Mon Oct 13 12:18:11 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcatalog.[hc]: return BstCatalogTool by value, so we
	        can perform gettext() translations beforehand.

	        * beast-gtk/bstmessages.c: renamed message catalog. added i18n
	        markup.

	svn path=/trunk/; revision=1365

2003-10-13  Tim Janik 	# 08ec35350083107c744c4aaba06b4b539bee44a2

	added convenience functions g_quark_intern() and g_quark_intern_static()

	Mon Oct 13 12:29:48 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added convenience functions g_quark_intern()
	        and g_quark_intern_static() which return the constant quark
	        string stored in glib for a given string.

	svn path=/trunk/; revision=1364

2003-10-13  Tim Janik 	# 81f7d4867816fdf83c1c2410b2eb281c63bd7642

	todo updates

	svn path=/trunk/; revision=1363

2003-10-13  Tim Janik 	# 6f04b019fff2010f77598e428c385b5ed4df18bd

	fix BST_ARCH_NAME with newer autoconf.

	Sun Oct 12 16:37:29 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: fix BST_ARCH_NAME with newer autoconf.

	        * Makefile.am:
	        * configure.in: major install/search paths cleanup.
	        provide standard search paths for effects and instruments,
	        and account for beast/bse data sitting in a users home.

	        * beast-gtk/bstmain.c: use BSE procedures to retrieve
	        search/install path locations.
	        renamed --print-path to --print-dir, as this options prints
	        out single directories only. adapted the set of paths
	        printed here.

	        * docs/beast.1.texi: reflect --print-dir.

	        * beast-gtk/bstparam-entry.c (param_entry_change_value): use
	        G_SEARCHPATH_SEPARATOR_S to split/join paths and horizontally
	        expand entries with path names.

	        * beast-gtk/bsttreestores.c: adapt to path/file-crawler changes.

	svn path=/trunk/; revision=1362

2003-10-13  Tim Janik 	# 2cd11e4ea3779c3440cdda2488d31c63d6b2a95e

	removed old search path mathing code. sfi_file_crawler_list_files() does a

	Sun Oct 12 16:37:29 2003  Tim Janik  <timj@gtk.org>

	        * bseutils.[hc]: removed old search path mathing code.
	        sfi_file_crawler_list_files() does a better job on this.

	        * bseladspa.[hc]:
	        * bseplugin.[hc]:
	        * bsescripthelper.[hc]: provide bse_*_path_list_files() functions
	        which take care of extended path specifications and use SfiFileCrawler
	        to properly expand ~/ etc.

	        * bsemain.c:
	        * bseserver.proc: use new bse_*_path_list_files() functions.

	        * bserecords.idl: indentation fixes.
	        added 6 "Search Paths" properties to BseGConfig, to allow users to
	        configure sample/script/plugin/etc. paths directly.

	        * bseserver.proc: added procedures to query file paths from bse
	        and bse/mp3-handler versions.

	        * gsldatahandle-mad.[hc]: export MAD version string.

	svn path=/trunk/; revision=1361

2003-10-13  Tim Janik 	# e2e81ea58950674bd21fe74c51fce05db876581c

	added g_path_concat() to concatenate paths without extra searchpath

	Sun Oct 12 16:37:29 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: added g_path_concat() to concatenate
	        paths without extra searchpath seperators.

	        * sfifilecrawler.[hc]: fixed home directory parsing (~user/)
	        not working.
	        added file_pattern to sfi_file_crawler_add_search_path().
	        added sfi_file_crawler_add_tests()
	        to filter matches by additional file tests.
	        added sfi_file_crawler_list_files() wich blocks until all files
	        are found and tested for a given search path.
	        quickly imlpemented g_file_test_all() as g_file_test() just has
	        too sick semantics to be usable.

	svn path=/trunk/; revision=1360

2003-10-12  Tim Janik 	# 67f32212f2bc7914d5bd1c7677e28dcc78f65890

	i18n-markup menu entries. create the item factory via

	Sun Oct 12 15:49:22 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: i18n-markup menu entries. create the item
	        factory via bst_item_factory_new().

	        * beast-gtk/bstmain.c: use versioned i18n domain, and bind gettext
	        charset to UTF-8.

	        * beast-gtk/bstutils.[hc]: for a start, implemented simple version of a
	        translating item factory. this isn't good enough though, the translating
	        text domain and whether translation is required, needs to be transported
	        with the menu entries.

	svn path=/trunk/; revision=1359

2003-10-12  Tim Janik 	# dc5003bd19a1302946e2bd75c8f9a490069e75c4

	use BSE_GETTEXT_DOMAIN instead of unversioned "bse" and bind gettext

	Sun Oct 12 14:17:19 2003  Tim Janik  <timj@gtk.org>

	        * bsedefs.h:
	        * bsemain.c: use BSE_GETTEXT_DOMAIN instead of unversioned "bse" and
	        bind gettext charset to UTF-8.

	        * bseconfig.h.in: provide BSE_GETTEXT_DOMAIN.

	        * bsedefs.h: include bseconfig.h globally.

	svn path=/trunk/; revision=1358

2003-10-11  Tim Janik 	# 74afb6b14d5412d1f965b85cf084ea1758865e49

	fixes according to pspec hints->options change.

	Sun Oct 12 01:14:21 2003  Tim Janik  <timj@gtk.org>

	        * fixes according to pspec hints->options change.

	svn path=/trunk/; revision=1357

2003-10-11  Tim Janik 	# 7b63b9e85aff6533aadcaa50cb1ac4ba2774f391

	fixes according to pspec hints->options change.

	Sun Oct 12 01:12:15 2003  Tim Janik  <timj@gtk.org>

	        * fixes according to pspec hints->options change.

	        * bserecords.idl: fixed indentation.

	svn path=/trunk/; revision=1356

2003-10-11  Tim Janik 	# f6b8d8e83778f4495e323ef70897e15723fc79d6

	implemented g_option_check() which checks for an option string in a colon

	Sun Oct 12 00:52:58 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: implemented g_option_check() which checks
	        for an option string in a colon seperated options list.

	        * sfidl-options.cc: disable Constants code generation, this just
	        produces potential conflicts and should be resolved upon idl file
	        parsing anyways.

	        * sfidl-parser.cc: fix constnats loosing precision due to %f.
	        allow param hints to contain constants.

	        * sfiparams.[hc]: renamed hints to options in public API.
	        use g_option_check() to check for options.
	        reduced SFI_PARAM_* macros, users are supposed to use the strings
	        instead, shortened option names.

	svn path=/trunk/; revision=1355

2003-10-11  Tim Janik 	# a13d2246f29b8c02577bb704ab23262d800ecdd9

	NEWS update

	svn path=/trunk/; revision=1354

2003-10-11  Tim Janik 	# 9fabfa8a798cfa6f4651819f5c40bd532d75c719

	apllied patch from Christian Neumair <chris@gnome-de.org> to translate bse

	Sat Oct 11 21:56:33 2003  Tim Janik  <timj@gtk.org>

	        * apllied patch from Christian Neumair <chris@gnome-de.org>
	        to translate bse and beast.
	        made lots of modifications on top of the patch to get bse
	        translations to work, integrate things more smoothly with beast
	        and started sample translation de.

	        * po-bse/: new directory holding bse translations.

	        * po-bse/de.po:
	        * po/de.po: german message catalogs.

	        * po/update.sh:
	        * po-bse/update.sh: helper scripts to update language specifc
	        message catalogs (e.g. update.sh de).

	        * po-bse/Makefile.in.in: makefile copy to hardcode GETTEXT_PACKAGE=bse.

	        * Makefile.am: provide BST_PATH_LOCALE in make-paths.h.

	        * configure.in: moved i18n stuff into its own fucntion.
	        replicated AM_GLIB_DEFINE_LOCALEDIR() which doesn't AC_SUBST() its
	        result.
	        christian's patch adds AC_CONFIG_COMMANDS() to generate po-bse/Makefile.

	        * beast-gtk/bstdefs.h:
	        * bse/bsedefs.h: provide _() and N_().

	        * beast-gtk/bstmain.c: bind "beast" textdomain to BST_PATH_LOCALE and
	        handle additional path argument.

	svn path=/trunk/; revision=1353

2003-10-11  Tim Janik 	# e80b8eaad7d530f1521ca5ebd301142a03948880

	bind gettext domain "bse" to BST_PATH_LOCALE.

	Sat Oct 11 22:10:18 2003  Tim Janik  <timj@gtk.org>

	        * bsemain.c: bind gettext domain "bse" to BST_PATH_LOCALE.

	svn path=/trunk/; revision=1352

2003-10-11  Tim Janik 	# 8d2de90175f6b86a01c222c106be439487ad8f9c

	new file for small auxillary dialog implementations, contains string list

	Sat Oct 11 17:54:01 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstauxdialogs.[hc]: new file for small auxillary dialog
	        implementations, contains string list popup so far.

	        * beast-gtk/bstfiledialog.[hc]: keep the last valid selection in
	        self->selected. added select_dir() popup variant, added notification
	        ability for valid selections.

	        * beast-gtk/bstparam-entry.c: provide remove/add directory popup
	        dialogs for entris containing search paths.

	        * beast-gtk/bstparam.c (bst_param_rack_widget): action widgets may
	        have a parent already, so return the toplevel container of an action
	        widget.

	        * beast-gtk/bstutils.[hc]: added stock ids, helper functions to create
	        stock buttons, and utility functions for h/v box packing.

	svn path=/trunk/; revision=1351

2003-10-10  Tim Janik 	# 6853b76dff70d84ca2dd4cec23d6c9428a00c657

	replaced virtual in/out/subsynth icons.

	Fri Oct 10 16:47:53 2003  Tim Janik  <timj@gtk.org>

	        * icons/inport.c:
	        * icons/outport.c:
	        * icons/subsynth.c:
	        * icons/virtual.xcf: replaced virtual in/out/subsynth icons.

	        * icons/inport.xcf:
	        * icons/outport.xcf:
	        * icons/inoutport.c:
	        * icons/icons/inoutport.xcf: removed.

	svn path=/trunk/; revision=1350

2003-10-10  Tim Janik 	# 1d27ba7a55578b3298fbacdf65c25d0ca6122679

	fallback to ladspa icon instead of noicon icon if the module is a ladspa

	Fri Oct 10 15:50:55 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c:
	        * beast-gtk/bstcanvassource.c: fallback to ladspa icon instead
	        of noicon icon if the module is a ladspa plugin (and has no icon).

	        * beast-gtk/icons/ladspa.png: variant of noicon.png.

	        * beast-gtk/bstmenus.[hc]: allow adding single categories to a menu
	        configuration.

	svn path=/trunk/; revision=1349

2003-10-10  Tim Janik 	# a9ddae0cdf3ee90ad112cb109d1d98b6506f516a

	nuke palette icon selection special casing. simply add all modules which

	Fri Oct 10 14:53:46 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: nuke palette icon selection special casing.
	        simply add all modules which have an icon to the palette.

	        * beast-gtk/bstmenus.c: fixed bugs in icon handling logic, which
	        prevented icons from being displayed.

	svn path=/trunk/; revision=1348

2003-10-10  Tim Janik 	# 9335781c6b00304d5f908d0c4faadcde0bf0c4fe

	up version to 0.5.5-rc2.

	Fri Oct 10 13:19:03 2003  Tim Janik  <timj@gtk.org>

	        * configure.in (BST_RELEASE_CANDIDATE): up version to 0.5.5-rc2.

	TODO updates

	svn path=/trunk/; revision=1347

2003-10-10  Tim Janik 	# 52037868a60bbed0b3298772c2bc9b7676161012

	TODO updates

	svn path=/trunk/; revision=1346

2003-10-10  Tim Janik 	# c4793d7bd52535844c71f6988e1205203c4eb2bf

	handle icon file paths idl-file location relative.

	Fri Oct 10 12:35:34 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: handle icon file paths idl-file location relative.

	        * sfidl-parser.[hc]*: provide the source file name for all parsed
	        entities.
	        (parse): setup scanner->input_name with absolute input file name.

	svn path=/trunk/; revision=1345

2003-10-10  Tim Janik 	# ca35a49bd509dcc4428e51e39a0337edbe163f8c

	add -I builddir to include path

	svn path=/trunk/; revision=1344

2003-10-10  Tim Janik 	# 9c57c26688259b528100a4b07fa2ff62d51ce5be

	distcheck build fixes

	svn path=/trunk/; revision=1343

2003-10-10  Tim Janik 	# ab522c57384fd1d087b3709bc5c8ea5649d46911

	NEWS updates

	svn path=/trunk/; revision=1342

2003-10-10  Tim Janik 	# aea05f709e9049fb9940db79fb5979b3c371bbc1

	minor fix

	svn path=/trunk/; revision=1341

2003-10-09  Tim Janik 	# 94b3d17f4a502e9a698b3172e980659650b61467

	TODO updates

	svn path=/trunk/; revision=1340

2003-10-09  Tim Janik 	# 6f8af35974906828088df882e381bb868e53dec2

	*sigh* workaround bse/bse.idl include.

	Fri Oct 10 00:53:56 2003  Tim Janik  <timj@gtk.org>

	        * bseamplifier.idl (Bse): *sigh* workaround bse/bse.idl include.

	svn path=/trunk/; revision=1339

2003-10-09  Tim Janik 	# 056123f2a5032b2a4d81c2cfce39e6bb0e927adc

	*sigh* prevent BseAmplifier from being generated.

	Fri Oct 10 00:22:03 2003  Tim Janik  <timj@gtk.org>

	        * bseprocidl.cc (printInterface): *sigh* prevent BseAmplifier from
	        being generated.

	svn path=/trunk/; revision=1338

2003-10-09  Tim Janik 	# d0c2fbcb8dd29d21786fdaff1a11f50185f998d3

	added rules to build C++ modules from idl files.

	Thu Oct  9 23:28:10 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am: added rules to build C++ modules from idl files.

	        * bsecxxbase.[hc]*: wrap BseItem.compat_setup().

	        * bsecxxmodule.[hc]*: allow setting the output buffer of a module.

	        * bsecxxplugin.[hc]*: support in core "plugins", i.e. builtins.

	        * bseitem.[hc]: added a method bse_item_compat_setup() to patch up
	        object state during parsing according to an old *.bse version.

	        * bseplugin.[hc]: provide export identity node for builtin types
	        and initialize them.

	        * bsestorage.[hc]: compat_setup() items after creation.

	        * bseamplifier.cc, bseamplifier.idl: ported bseamplifier.[hc] to
	        idl based C++ code. changed property setup to match BseBalance
	        where appropriate. optimized inner loop, used C++ templates and
	        bseincluder.h to generate processing loop special cases.
	        added compat code to ensure compatibility with <=0.5.4 stored
	        BseAmplifier setups.

	        * bseamplifier.[hc]: removed.

	        * bseincluder.h: generate switch()-able function calls with
	        a constant integer argument (usefull for C++ templates) in
	        the range 0..4096.

	        * bse/icons/ampctrl.c: removed.
	        * bse/icons/ampctrl.png: added.

	svn path=/trunk/; revision=1337

2003-10-09  Alper Ersoy 	# f7d4220ac6afac5b26b56bd4000005c1aa28b059

	improved markup for better nroff outputs. fixed a couple of typos.

	Thu Oct  9 23:24:55 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/beast.1.texi:
	        * docs/bsesh.1.texi:
	        * docs/bse-plugin-generator.1.texi: improved markup for better nroff
	        outputs. fixed a couple of typos.

	        * docs/teximacros.texi: removed now unnecessary work-around macros.

	        * docs/generated/Makefile.am:
	        * docs/generated/scandocs.pl: dropped --package option from
	        scandocs.pl in favor of using texiutils.texi for versions.

	        * TODO: removed fixed items.

	svn path=/trunk/; revision=1336

2003-10-09  Tim Janik 	# 1747d3b7f713a65cf7c2644cfa6d9eb26adb11be

	reflect freedesktop.org CVS move.

	Thu Oct  9 16:08:58 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-download.texi: reflect freedesktop.org CVS move.

	svn path=/trunk/; revision=1335

2003-10-08  Christian Neumair 	# ba6ba611851cc4eb7d50e62b5ac5afab8bc517a1

	Added basic i18n support, updated some .cvsignore files.

	svn path=/trunk/; revision=1334

2003-10-08  Tim Janik 	# 26ae2f496f85abab8668953761ca6a5c3018e48a

	colorized icon.

	Tue Oct  7 15:05:22 2003  Tim Janik  <timj@gtk.org>

	        * icons/balance.*: colorized icon.

	        * davsyndrum.c (dmod_process):
	        * davxtalstrings.c (xmod_process): fix trigger edge detection,
	        reported by stefan westerfeld.

	svn path=/trunk/; revision=1333

2003-10-06  Tim Janik 	# 47a28604238bbf739f6c0f88115c3355cfaba328

	tweaked part editing tools.

	Mon Oct  6 10:40:17 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackrollctrl.[hc]: tweaked part editing tools.

	        * beast-gtk/bstpianoroll.c (bst_piano_roll_draw_canvas): changed note
	        borders so consequtive notes can be distinguished.
	        (piano_roll_release_proxy): popdown toplevel when proxy is released.

	        * docs/quickstart.texi: reflect changes.

	svn path=/trunk/; revision=1332

2003-10-06  Tim Janik 	# 949f795d682b7ac7d2b78ef46a3b208e3adbde90

	make missing signal handlers a debugging message, rather than a warning.

	Mon Oct  6 10:36:24 2003  Tim Janik  <timj@gtk.org>

	        * sfiglueproxy.c (sfi_glue_proxy_disconnect): make missing signal
	        handlers a debugging message, rather than a warning.

	svn path=/trunk/; revision=1331

2003-10-06  Tim Janik 	# 83ea508a074cf7821e6d97cdb8e0a88c99c18325

	updates

	svn path=/trunk/; revision=1330

2003-10-06  Tim Janik 	# 6151cef15701f3d8bb447b3eb55e1254d245b39e

	revamped category conventions to better reflect module, script and

	Mon Oct  6 02:58:14 2003  Tim Janik  <timj@gtk.org>

	        * docs/bse-categories.txt: revamped category conventions to better
	        reflect module, script and procedure types we now have. described
	        automatic arguments upon procedure invocation.

	        * beast-gtk/bstapp.c: major menu cleanup. offer csynth/snet/song
	        utility procedures.

	        * beast-gtk/bstmenus.[hc] (bst_menu_config_from_cats): allow fallback
	        stock icon and partial path substitution.

	        * beast-gtk/bstprocedure.c: ignore unnamed preset args.

	        * beast-gtk/bstsnetrouter.c: improved utility handling in popup menu.

	        * beast-gtk/bstutils.h: add more stock aliases. a bunch of the icons
	        used are just workarounds for missing icons.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_item_factory_sensitize().

	svn path=/trunk/; revision=1329

2003-10-06  Tim Janik 	# 46fa003cbf0cececb2f453124141e43a8421a96b

	category fixes

	svn path=/trunk/; revision=1328

2003-10-06  Tim Janik 	# cda1c8f2a2e59903d1df0449a9b7614b76943241

	namespace fixes

	svn path=/trunk/; revision=1327

2003-10-06  Tim Janik 	# ab667718bdbbae52d9297e1b35016985814a3315

	provide type_name() method for effects and procedures which returns a

	Mon Oct  6 03:00:01 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: provide type_name() method for effects and
	        procedures which returns a fully namespace prefixed type name.

	svn path=/trunk/; revision=1326

2003-10-06  Tim Janik 	# 24269a660e6a62f0a1095325f320b5dc240fdd8d

	adapt to new documented toplevel category set. check category fundamental

	Mon Oct  6 02:55:49 2003  Tim Janik  <timj@gtk.org>

	        * bsecategories.c: adapt to new documented toplevel category set.
	        check category fundamental types.

	        * bse/bsecxxplugin.h: remove namespace prefix from effect and procedure
	        registration macros.

	        * bse/bseitem.c: make seqid a non-gui property.

	svn path=/trunk/; revision=1325

2003-10-05  Tim Janik 	# 984ef8a462af7d93bdcca7cea421e9c01213211f

	adapt to changes in beast.

	Sun Oct  5 10:34:54 2003  Tim Janik  <timj@gtk.org>

	        * docs/quickstart.texi: adapt to changes in beast.

	svn path=/trunk/; revision=1324

2003-10-05  Tim Janik 	# 43207e67b233d737f63ec4b9e67e4f2495309987

	fix property defaults.

	Sun Oct  5 10:51:06 2003  Tim Janik  <timj@gtk.org>

	        * bseamplifier.c: fix property defaults.

	svn path=/trunk/; revision=1323

2003-10-05  Tim Janik 	# af8da4682b52549ee550dacd491ff9ebe8c1ad13

	NEWS fixes

	svn path=/trunk/; revision=1322

2003-10-05  Tim Janik 	# 7e2a978d6e3b50f70e90adb1421b8ffaa5f5ceaa

	add /Modules/Spatial/ to palette.

	Sun Oct  5 08:49:22 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: add /Modules/Spatial/ to palette.

	svn path=/trunk/; revision=1321

2003-10-05  Tim Janik 	# f6d19294896e45765fc0fae8d5e275dd98130aa5

	new stereo balance/panorama position module.

	Sun Oct  5 08:12:51 2003  Tim Janik  <timj@gtk.org>

	        * icons/balance.xcf:
	        * icons/balance.png:
	        * bsebalance.idl:
	        * bsebalance.cc: new stereo balance/panorama position module.

	svn path=/trunk/; revision=1320

2003-10-05  Tim Janik 	# 14a3b8a0f9da8b8a362e74061da4928e77d1283c

	new pspec creator.

	Sun Oct  5 08:18:12 2003  Tim Janik  <timj@gtk.org>

	        * bsetype.h (sfidl_pspec_Frequency): new pspec creator.

	svn path=/trunk/; revision=1319

2003-10-05  Tim Janik 	# cd4e99d46c2b9f619a10fbc1a7fd7f8b51dc1855

	reordered sections, fixed freedesktop.org link.

	Sun Oct  5 06:06:38 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-download.texi: reordered sections,
	        fixed freedesktop.org link.

	svn path=/trunk/; revision=1318

2003-10-05  Tim Janik 	# d4d1a8288a323cce7240812afffe7bb19ed0d54e

	updates

	svn path=/trunk/; revision=1317

2003-10-05  Tim Janik 	# edb2b24bb06c0389fa591132c7a0847d82842ec1

	changed generated code to contain a virtual property_changed() function

	Sun Oct  5 07:02:00 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: changed generated code to contain a virtual
	        property_changed() function per inheritance level.
	        special cased Trigger() properties, we reset their value to false
	        after update_modules().

	svn path=/trunk/; revision=1316

2003-10-05  Tim Janik 	# 7e0293d1132a70e5d5e08573228a9793efc86b45

	added balance property utility functions.

	Sun Oct  5 07:00:40 2003  Tim Janik  <timj@gtk.org>

	        * bseutils.[hc]: added balance property utility functions.

	        * bsetype.h: added balance pspec creator.

	svn path=/trunk/; revision=1315

2003-10-04  Tim Janik 	# 3edb8b5bea81b671dd4468edddbe764c99f71b6b

	updates

	svn path=/trunk/; revision=1314

2003-10-04  Tim Janik 	# 2624b4a161b84b6834e8610d1ab9b3da9e03db76

	enter renamed object type names.

	Sat Oct  4 04:13:00 2003  Tim Janik  <timj@gtk.org>

	        * bsecompat.c (bse_compat_rewrite_type_name): enter renamed
	        object type names.

	        * bseinstrumentinput.[hc]: implement BseInstrumentInput.
	        * bsesubkeyboard.[hc]: removed.

	        * bseinstrumentoutput.[hc]: implement BseInstrumentOutput.
	        * bsesubinstrument.[hc]: removed.

	        * bsemidiinput.[hc]: implement BseMidiInput.
	        * bsemonokeyboard.[hc]: removed.

	        * bsemidicontroller.[hc]: implement BseMidiController.
	        * bsemidiicontroller.[hc]: removed.

	        * bsecontainer.c (bse_container_add_item): when creating
	        automatic names for modules, strip "Bse" namespace.

	svn path=/trunk/; revision=1313

2003-10-04  Tim Janik 	# 96f2f5c328910420be9da44ae2aa190aca72c155

	BseMonoKeyboard -> BseMidiInput BseMidiIController -> BseMidiController

	Sat Oct  4 03:00:03 2003  Tim Janik  <timj@gtk.org>

	        * copied files in CVS repository for object renames:
	        BseMonoKeyboard    -> BseMidiInput
	        BseMidiIController -> BseMidiController
	        BseSubKeyboard     -> BseInstrumentInput
	        BseSubInstrument   -> BseInstrumentOutput

	        * bsemidiinput.[hc]: copy of bsemonokeyboard.[hc].
	        * bsemidicontroller.[hc]: copy of bsemidiicontroller.[hc].
	        * bseinstrumentinput.[hc]: copy of bsesubkeyboard.[hc].
	        * bseinstrumentoutput.[hc]: copy of bsesubinstrument.[hc].

	svn path=/trunk/; revision=1312

2003-10-03  Alper Ersoy 	# ca25bd9cfed6bd100d3475c7532cb1dca0dc2ae5

	removed fixed items.

	Fri Oct  3 19:55:53 2003  Alper Ersoy  <dirt@gtk.org>

	        * TODO: removed fixed items.

	svn path=/trunk/; revision=1311

2003-10-03  Tim Janik 	# b5394c3895f46ae00de13bdb4d38d32ca2104f76

	updates

	svn path=/trunk/; revision=1310

2003-10-03  Tim Janik 	# a6aa0a22035d7538f0a06c22a6ba9ef33f958ba4

	updates

	svn path=/trunk/; revision=1309

2003-10-03  Tim Janik 	# ea59a438fba94e54d91569380b70e441ca2f4b1f

	insert manual page links

	svn path=/trunk/; revision=1308

2003-10-03  Tim Janik 	# df8b367d5d9b5224b66718bd8bc42701f00ea51f

	minor fix

	svn path=/trunk/; revision=1307

2003-10-03  Tim Janik 	# 752ead8b6534a7a7af9b7393a166a737caa8ddff

	build fixes

	svn path=/trunk/; revision=1306

2003-10-03  Tim Janik 	# 53e8faa70790268d0ecb5f9b7df80d5c679fdf55

	fix

	svn path=/trunk/; revision=1305

2003-10-03  Tim Janik 	# 8f672357e218eccc8744cf54eee3be6504dfa7ed

	generate texiutils.texi instead of version.texi, and include

	Fri Oct  3 13:53:29 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/*: generate texiutils.texi instead of version.texi,
	        and include ../teximacros.texi.

	        * docs/teximacros.texi: supply project specific macros.

	        * shell/bse-scm-glue.boot: implement (bse-shell-auto-play) which
	        is used if .bse files are given as comand-line args.

	        * docs/bsesh.1.texi:
	        * docs/beast.1.texi: added manual pages to beast.

	svn path=/trunk/; revision=1304

2003-10-03  Tim Janik 	# d17d6e03d5b70e91916c928a90796785465fbdf5

	added sfi_rstore_new_open().

	Fri Oct  3 13:52:57 2003  Tim Janik  <timj@gtk.org>

	        * sfistore.[hc]: added sfi_rstore_new_open().

	svn path=/trunk/; revision=1303

2003-10-03  Tim Janik 	# bd9a964103cf7809e20816c5619274ce837711bd

	stop and deactivate playing projects before attempting to dispose.

	Fri Oct  3 13:34:53 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.c (bse_project_dispose): stop and deactivate playing
	        projects before attempting to dispose.

	svn path=/trunk/; revision=1302

2003-10-03  Tim Janik 	# f76ad940c2b88da7131a28ab89c1f0503f23aaf4

	new icons based on icons from Gtk+-2.2.

	Fri Oct  3 08:53:20 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/icons/properties.xcf:
	        * beast-gtk/icons/properties.png:
	        * beast-gtk/icons/properties-reset.png: new icons based on
	        icons from Gtk+-2.2.

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): offer
	        property reset menu item for modules.

	        * beast-gtk/bstcanvassource.[hc]: renamed some functions. added
	        function to reset properties.

	        * beast-gtk/bstparamview.c (bst_param_view_apply_defaults): apply
	        defaults to all bparams.

	        * beast-gtk/bstparam.c (bst_param_apply_default): apply pspec default.

	        * beast-gtk/bstsplash.c (bst_splash_unrealize): show progress debugging
	        messages only for BST_DBG_EXT.

	        * beast-gtk/bstapp.c: show "Clear Undo" item only for --devel.

	        * beast-gtk/bstmain.c: renamed --hints option to --devel.
	        enable --devel automatically for -:d.

	svn path=/trunk/; revision=1301

2003-10-03  Tim Janik 	# f0af839f8437757f9dc91336db5e0f1f41ccf843

	SOS link updates

	svn path=/trunk/; revision=1300

2003-10-03  Alper Ersoy 	# f6fb20ca7c91d20c2dfcd7862980a05cefef02a9

	new directory, to hold cgi scripts for beast website.

	Thu Oct  2 23:45:03 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/cgi-bin: new directory, to hold cgi scripts for
	        beast website.

	        * docs/generated/cgi-bin/file-browse.cgi:
	        * docs/generated/cgi-bin/file-upload.cgi: simple invocator scripts for
	        Texitheque CGI modules.

	        * docs/generated/Makefile.am: updated site rules to also handle new
	        cgi scripts.

	svn path=/trunk/; revision=1299

2003-10-02  Tim Janik 	# 9831b33ecad4ada726c000e6584f32fc96824941

	updates

	svn path=/trunk/; revision=1298

2003-09-26  Tim Janik 	# 183785fe3be153b99f739562b6e92c23986130bb

	modified alpers last patch to not use template files.

	Fri Sep 26 22:51:09 2003  Tim Janik  <timj@gtk.org>

	        * modified alpers last patch to not use template files.

	        * docs/site-navigation.xml: added contrib area items.

	        * docs/site-browse-bse-files.html: browse site contributions.

	        * docs/site-upload-bse-files.texi: offer file upload facility.

	Mon Sep 22 23:30:49 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/Makefile.am: added rule for CGI templates, and added
	        file-upload and fbrowse templates to html targets list. added --css
	        option for texitheque's html targets.

	        * docs/site-fbrowse.tmpl.texi:
	        * docs/site-file-upload.tmpl.texi: template files for cgi scripts.

	svn path=/trunk/; revision=1297

2003-09-26  Alper Ersoy 	# 36ce976f4202bbe2b5b1cc164110dc60185b9d4c

	get bst version from version.texi. improved/fixed options list layout.

	Fri Sep 26 06:45:03 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/bse-plugin-generator.1.texi: get bst version from version.texi.
	        improved/fixed options list layout.

	        * docs/generated/Makefile.am: create version.texi that keeps version
	        strings. texi files can use these strings to get versions from a
	        central source.

	svn path=/trunk/; revision=1296

2003-09-21  Stefan Westerfeld 	# 5fe1dc19704073141ec62188e884dfb53095c908

	updated.

	svn path=/trunk/; revision=1295

2003-09-21  Stefan Westerfeld 	# b4624230446d8fc3705c73ff30599d5377b3ebe5

	Updates.

	svn path=/trunk/; revision=1294

2003-09-21  Stefan Westerfeld 	# 26fdb8ead4fbd74f67fea7971671330c32ef05af

	Added the new options.

	Sun Sep 21 16:06:23 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* docs/bse-plugin-generator.1.texi: Added the new options.

	svn path=/trunk/; revision=1293

2003-09-21  Tim Janik 	# c28499ccbe9c3bef745e6de1f48f1182ef7c7a84

	fix header from idl generation wrg standard includes

	svn path=/trunk/; revision=1292

2003-09-21  Tim Janik 	# 0b7125c4a22c59c7e8fbb22893b30a6a286ee898

	added support for C++ plugins with header generation from idl files via

	Sun Sep 21 15:18:00 2003  Tim Janik  <timj@gtk.org>

	        * listplugins.sh:
	        * Makefile.am: added support for C++ plugins with header
	        generation from idl files via bse-plugin-generator.

	        * davchorus.cc:
	        * davchorus.idl: ported DavChorus to C++.

	        * davchorus.[hc]: removed unported C implementation.

	svn path=/trunk/; revision=1291

2003-09-21  Alper Ersoy 	# 2bf4fc32ee6bdfa3026a15cb98168f82bae788fb

	changed file browsing styles to match the new texitheque modules.

	Tue Sep 16 16:48:54 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/css/default.css: changed file browsing styles to
	        match the new texitheque modules.

	svn path=/trunk/; revision=1290

2003-09-21  Tim Janik 	# de79aa421891120200a37f9a3e51b13b2b1bdc65

	include bse.idl.

	Sun Sep 21 04:42:33 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am (libbseinclude_HEADERS): include bse.idl.

	svn path=/trunk/; revision=1289

2003-09-21  Stefan Westerfeld 	# 85174681c617ebfd0de5ddea9fa6b0bbec5085be

	Updates.

	svn path=/trunk/; revision=1288

2003-09-21  Stefan Westerfeld 	# 0cb5e8e75b2d4879348d094a38b7351edef7d1d2

	Renamed pdef to idl.

	Sun Sep 21 04:23:18 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bse-plugin-generator.cc: Renamed pdef to idl.

		* sfidl-parser.cc: Fixed #include handling (typo).

	svn path=/trunk/; revision=1287

2003-09-21  Stefan Westerfeld 	# b353ec618470da3c4d53c0bca9ac6c4f8531f93a

	Removed a space.

	svn path=/trunk/; revision=1286

2003-09-21  Stefan Westerfeld 	# 200c4993713def9df0ad8d1effb89c2b6d2ebe71

	Define SFIDL_PATH_STDINC in make-paths.h.

	Sun Sep 21 03:50:13 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in Makefile.am: Define SFIDL_PATH_STDINC in make-paths.h.

	svn path=/trunk/; revision=1285

2003-09-21  Stefan Westerfeld 	# 30b3de94dceeec9f880a4e3b7e22dcd15d0ec46b

	Duplicated include related options here.

	Sun Sep 21 02:29:42 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bse-plugin-generator.cc: Duplicated include related options
		here.

		* sfidl-options.* sfidl.cc: New options: --print-include-path,
		--version, --nostdinc. Use SFIDL_PATH_STDINC from topconfig.h.

		* sfidl-parser.cc: Include file relative includes are now only
		handled for #include "foo.idl". #include <foo.idl> uses the include
		path only.

	svn path=/trunk/; revision=1284

2003-09-21  Tim Janik 	# 4861bb9aa131c97ff7e8ba17bcaad8251a9169d9

	*** empty log message ***

	svn path=/trunk/; revision=1283

2003-09-21  Tim Janik 	# 939c15c9a52fbcbc2024f6558ecd96d055823806

	get section 1 manual pages to install and build properly.

	Sun Sep 21 02:34:26 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am: get section 1 manual pages to
	        install and build properly.

	        * docs/bse-plugin-generator.1.texi: started manual page for
	        the bse plugin generator.

	svn path=/trunk/; revision=1282

2003-09-21  Tim Janik 	# 5312c3fa0528d494df87f6f462e8536ab84e5e9c

	manual page fixmes

	svn path=/trunk/; revision=1281

2003-09-20  Tim Janik 	# 715348163d7095523a03f0c6a57d8508933f161b

	*** empty log message ***

	svn path=/trunk/; revision=1280

2003-09-20  Stefan Westerfeld 	# a06cf3667e7390b117e3dc97090a179f0f37ce91

	Use sequentialValue where appropriate.

	Sat Sep 20 22:16:40 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.cc sfidl-module.cc: Use sequentialValue where
		appropriate.

		* sfidl-parser.*: Compute two values for each ChoiceValue: one
		containing the assigned value for the server side C/C++ language
		binding and one containing a sequential number for the client side
		C/C++ language binding.

	svn path=/trunk/; revision=1279

2003-09-20  Tim Janik 	# 6eb2ce095a1daf621d2e97024fe6f1d5d69435af

	fixe

	svn path=/trunk/; revision=1278

2003-09-12  Tim Janik 	# f576244e677828673a024237bb28b8c4c020e1b5

	fix comment

	svn path=/trunk/; revision=1277

2003-09-09  Tim Janik 	# 36d9abf1e71cc94effbcc53b2666a74912fd6758

	updates

	svn path=/trunk/; revision=1276

2003-09-09  Tim Janik 	# 0468db4c52274f77280b7aee6442854184e8d855

	implemented binary-search templates.

	Tue Sep  9 05:22:07 2003  Tim Janik  <timj@gtk.org>

	        * bsecxxutils.h: implemented binary-search templates.

	        * bsemidireceiver.cc: more C++-ification, properly namespaced
	        stuff. uses stl types in a couple places now.
	        keep currently playing voice input modules in a map, handle
	        duplicate note-ons. squashed remaining stability bugs.

	svn path=/trunk/; revision=1275

2003-09-08  Tim Janik 	# 5e15dcade2687c611764e107b7d3da178b8898cf

	made reamining structures private (moved to .cc file). renamed voice-input

	Mon Sep  8 14:59:42 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]: made reamining structures private (moved
	        to .cc file). renamed voice-input and voice-switch modules and
	        their API to make the code more consistent and readable.

	svn path=/trunk/; revision=1274

2003-09-08  Tim Janik 	# ec3369c75c9e8cce57f253c00218e90a4e18071e

	catch division by zero with causes a SIGFPE on alpha, reported by Marius

	Mon Sep  8 14:23:50 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build_channels): catch
	        division by zero with causes a SIGFPE on alpha, reported by
	        Marius Hillenbrand.

	svn path=/trunk/; revision=1273

2003-09-08  Tim Janik 	# 3bc233e3d2c22dca243422146a5115fa0d2a6bb1

	fix test

	svn path=/trunk/; revision=1272

2003-09-08  Tim Janik 	# 97df8b9fafae753cbe9b4e22c3962fda50fe88ca

	make icon sizes configurable.

	Mon Sep  8 05:29:43 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c: make icon sizes configurable.

	svn path=/trunk/; revision=1271

2003-09-08  Tim Janik 	# 9e0b59ef0e45ab815f3ec3665952f7d7b60aa629

	fix typo

	svn path=/trunk/; revision=1270

2003-09-08  Tim Janik 	# 3e45c0d8adb2d4dfc0914cfa39a8276a97af0bb3

	add -fmessage-length= compiler option for g++ if ncurses is present.

	Mon Sep  8 02:02:10 2003  Tim Janik  <timj@gtk.org>

	        * acbeast.m4 (ac_vm): add -fmessage-length= compiler option for
	        g++ if ncurses is present.

	svn path=/trunk/; revision=1269

2003-09-07  Stefan Westerfeld 	# 2111b8261680d33660c5bb56cb0778784c911a03

	cvs copy of bsemidireceiver.c.

	Mon Sep  8 00:11:45 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsemidireceiver.cc: cvs copy of bsemidireceiver.c.

		* bsemidireceiver.c: removed.

		* bsemidireceiver.*: adapted to compile with a C++ compiler.
		made _BseMidiReceiver private.

	svn path=/trunk/; revision=1268

2003-09-07  Stefan Westerfeld 	# 024d08b92d04ac5a77acc952f0d15f755405de91

	inserted casts for C++.

	Mon Sep  8 00:31:10 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* gbsearcharray.h: inserted casts for C++.

	svn path=/trunk/; revision=1267

2003-09-07  Tim Janik 	# 11f17b855cc0344ec2d4abd2a37ec65ab43266e9

	fix pointer==enum typo.

	Sun Sep  7 19:35:04 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.c (check_mono_synth_improvement):
	        fix pointer==enum typo.

	svn path=/trunk/; revision=1266

2003-09-07  Stefan Westerfeld 	# 9dfa0d65444396713d3ea679ea2ad704e60b7b89

	reintroduce const for datastructures containing maps - to be able to

	Sun Sep  7 17:36:43 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-generator.* sfidl-module.cc sfidl-parser.*: reintroduce const
		for datastructures containing maps - to be able to access their
		contents, added a new template class called Map<Key,Value> with a
		const get(Key) function.

	svn path=/trunk/; revision=1265

2003-09-07  Tim Janik 	# 6735efd382ce32b961fb6a4e5e88c1f3fbf77479

	fix switch module activation by using boundary jobs to check connection

	Sun Sep  7 15:45:26 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.c (activate_switch_module): fix switch module
	        activation by using boundary jobs to check connection state.

	        * gslopmaster.c (master_update_node_state): really fix all cases where
	        reset() could be called after a flow job for an active tick by merging
	        reset invocation into the flow job handling function.

	        * gslopnode.h:
	        * gslopengine.[hc]: added gsl_job_boundary_access().

	        * gslopmaster.c: implemented boundary job handling.

	        * gslopnode.h:
	        * gsloputils.[hc]:
	        * gslopmaster.[hc]:
	        * gslopschedule.[hc]:
	        * gslopengine.[hc]: cleaned up flow job implementation,
	        there're no resume flow jobs anymore and we need jobs
	        with time stamps at other places. so the underlying structure
	        is a TimedJob now.

	svn path=/trunk/; revision=1264

2003-09-07  Tim Janik 	# 69b58e3b48e7a21fb1a79bfed81086956004aa27

	updates

	svn path=/trunk/; revision=1263

2003-09-07  Tim Janik 	# 6ee8117aae4d5a88c50848ec3841585fdb978845

	updates

	svn path=/trunk/; revision=1262

2003-09-07  Tim Janik 	# df4ef14a0e402c094160b215fc1a88e92a402957

	allow sub voices per switchable voice. major code cleanup. merge voice

	Sat Sep  6 20:18:00 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]: allow sub voices per switchable voice.
	        major code cleanup. merge voice module and mono synth module.
	        introduces designated structure for midi channels.

	        * bsemidivoice.[hc]: adapt to new midi receiver API.
	        let the switch module handle voice creation on the midi receiver.

	        * bsemonokeyboard.c: adapt to ne midi receiver API.

	        * bsesnet.h: add voice_id to midi context.

	        * gslengine.[hc]: added gsl_module_has_source(), changed
	        suspend/resume job creators to gsl_job_suspend_now() and
	        gsl_job_resume_at().

	        * gslopmaster.c: propagate activation time sptamps for suspend
	        and resume jobs. ensure that module->counter is updated
	        before invoking any callbacks. fix reset() methods to be executed
	        before flow jobs for a specific tick stamp. enfore initial reset()
	        after node integration.

	        * gslopnode.h: adapt nodes and jobs to allow suspend/activation
	        tick stamps instead of just flags.

	        * gslopschedule.c: calculate and propagate activation stamps instead
	        of suspend flags. fixed suspend calculation for cycles.

	        * gsl-mplan.txt: explain introduction of activation stamps used to
	        implement suspend state for nodes.

	svn path=/trunk/; revision=1261

2003-09-04  Tim Janik 	# 3d23d6245bbf470f1412d28da9a29bd4ee8e4185

	introduce BseMidiContext structure which holds the midi_receiver,

	Thu Sep  4 18:55:56 2003  Tim Janik  <timj@gtk.org>

	        * bsesnet.[hc]: introduce BseMidiContext structure which holds
	        the midi_receiver, midi_channel, etc. for a (synthesis) context.
	        changed context creation, branch cloning and midi-retrival API
	        to use BseMidiContext.

	        * bsemidivoice.[hc]: give the voice input a voice switch handle,
	        rather than the other way around. allocate midi voice from voice
	        switch code, and for midi channel of voice switch module. got
	        rid of midi_receiver references by means of BseMidiContext usage.

	        * bsesubsynth.[hc]: forgo midi-receiver reference, use BseMidiContext.
	        allow midi-channel overriding for sub snets.

	        * bsetrack.[hc]: fix code according to voice input/switch changes.
	        use BseMidiContext, fix midi-channel updates.

	        * bsesong.c:
	        * bseproject.c:
	        * bsemonokeyboard.c:
	        * bsemidiicontroller.c: BseMidiContext related fixes.

	        * bsemidisynth.c: adapt to new midi voice input/switch code.
	        fix midi channel handling. BseMidiContext related fixes.

	        * bsemidireceiver.c: assert midi_channel and voice_id to be >= 1.

	        * bsemidievent.c: assert midi_channel to be >= 1.

	svn path=/trunk/; revision=1260

2003-09-04  Tim Janik 	# 6b09dcba50acc386bb5f119711c4e968e7705141

	cosmetics

	svn path=/trunk/; revision=1259

2003-09-04  Tim Janik 	# c03ffc47dfd46afd19818d73bd38529182e5144c

	allow display of non-readable properties.

	Thu Sep  4 14:28:12 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparamview.c:
	        * beast-gtk/bstpreferences.c: allow display of non-readable properties.

	        * beast-gtk/bstmain.c: changed a couple of the -: debugging flags.

	svn path=/trunk/; revision=1258

2003-09-04  Tim Janik 	# 12a49b976693e8206df2f399b9f4d636b850bcd9

	fix hinting for trigger property.

	Thu Sep  4 15:13:55 2003  Tim Janik  <timj@gtk.org>

	        * davxtalstrings.c: fix hinting for trigger property.

	        * icons/eguitar.png, icons/eguitar.xcf: new icon.

	svn path=/trunk/; revision=1257

2003-09-04  Tim Janik 	# 85a55f968dd5f78dbf67938bea7f09fa969ba56b

	newly added files. these take over note utility fucntions from

	Thu Sep  4 14:34:36 2003  Tim Janik  <timj@gtk.org>

	        * bsenote.[hc]: newly added files. these take over note utility
	        fucntions from bseutils.[hc] and at some point probably also note
	        specific functions from sfi. implemented frequency array, based
	        on the GDArray code.

	        * bsewave.[hc]: use BseFreqArray to match frequencies now, since
	        GDArray is gone.

	        * bsetype.h: added pspec constructors for Trigger and Perc.
	        removed Frequency constructor, there's one for Freq.

	        * bsecxxplugin.h: support static data i ninitialization of generated classes.

	        * bseutils.h:
	        * bseutils.c:
	        * bsecompat.h: removed note specific stuff.

	svn path=/trunk/; revision=1256

2003-09-04  Tim Janik 	# 8b98823a48423b0f31b2661ff15ac272f6ef86e4

	introduce static data for the generated classes. added

	Thu Sep  4 14:58:14 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: introduce static data for the generated classes.
	        added set_property_changed() method to Base class to allow hooking
	        into property setting.

	        * glib-extra.[hc]: removed double array implementation which
	        was mostly unused.

	svn path=/trunk/; revision=1255

2003-09-02  Tim Janik 	# 51af1ecd462a112064e7fe869e8f32e226542d91

	updates

	svn path=/trunk/; revision=1254

2003-09-02  Tim Janik 	# 8ff07d0943cb96549363e8b0cb8e52a2f3905e42

	updates

	svn path=/trunk/; revision=1253

2003-09-02  Tim Janik 	# 4a2b6b60221c7a879c751e262edd702e94775cab

	provide public conversion function for GObject to CxxBase.

	Wed Sep  3 00:59:09 2003  Tim Janik  <timj@gtk.org>

	        * bsecxxbase.[hc]*: provide public conversion function for GObject
	        to CxxBase.

	        * bsecxxmodule.[hc]*: renamed Module to SynthesisModule so plugins
	        can simply define "Module" objects. don't register abstract BseEffect
	        with categories.

	        * bsecxxplugin.[hc]*: unify type registration for classes, enums and
	        procedures in plugins.

	        * bsecxxutils.[hc]*: fix category registration. get rid of C++ classes
	        having to prototye a get_type() function.

	        * bsecxxvalue.h: provide g_value_get_object<>() template to retrieve
	        specific Cxx classes from values.

	        * bseexports.h: mostly cosmetic patchups on the new export structure.

	        * bsemain.c (bse_init_intern): allow automated core plugin registration.

	        * bseparam.[hc]: remove all enum hackery.

	        * bseplugin.c: fixed plugin loading error handling.

	        * bseprocedure.[hc]: reference value types prior to use to properly
	        support plugin types in procedures.

	        * bseprocidl.cc: fixed up type special casing. however this still lacks
	        fundamental supprot for records and sequences, so signal generation
	        needs to be disabled at the moment.

	        * bsequery.c: fixed plugin registration.

	        * bsetype.[hc]: provide enum pspecs creators.

	        * mkcproc.pl: fixed recently introduced bug that swallowed procedure infos.

	svn path=/trunk/; revision=1252

2003-09-02  Tim Janik 	# 3b771f0359747f442cd850e40d976c4850aa5e7f

	reworked generated plugin code to allow derivation from the generated

	Wed Sep  3 00:56:42 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: reworked generated plugin code to allow
	        derivation from the generated object and to integrate with
	        the new BSE export mechanisms. also, procedure implementations
	        in plugins are now supported.

	svn path=/trunk/; revision=1251

2003-09-02  Tim Janik 	# 921f223bddb5f398f0d56a9ae846e0bd1ce11997

	new icon.

	Wed Sep  3 01:19:33 2003  Tim Janik  <timj@gtk.org>

	        * icons/chorus.xcf:
	        * icons/chorus.png: new icon.

	svn path=/trunk/; revision=1250

2003-09-02  Tim Janik 	# f96b465391bdba27a3877751e02bdbd3e536f0ba

	update beast HOWTO url.

	Tue Sep  2 23:05:35 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-download.texi: update beast HOWTO url.

	svn path=/trunk/; revision=1249

2003-08-29  Tim Janik 	# 97934ce320465085323b9a81e0ccb4985804a117

	shutup

	svn path=/trunk/; revision=1248

2003-08-29  Tim Janik 	# 43f4799c88da83817194e906c8336aaccf5c0f19

	cvs rename.

	Fri Aug 29 18:17:49 2003  Tim Janik  <timj@gtk.org>

	        * bse-plugin-generator.cc: cvs rename.

	svn path=/trunk/; revision=1247

2003-08-27  Tim Janik 	# 8df79b3fa30e7c8111ad023b2e5464e62c0bd085

	put notice about online demo against software patents on the site

	svn path=/trunk/; revision=1246

2003-08-26  Tim Janik 	# 020ad1b15c5e034529805d0afb66c67dc2206984

	fixed buglet.

	Tue Aug 26 08:57:54 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.[hc]*: fixed buglet.

	        * bse-module-generator.[hc]*: new parser/code-generator front-end
	        that just uses the Module code generator and parses .mdef files
	        (module definition files).

	        * sfidl-generator.[hc]*: renamed from sfild.* (per cvs-copy).
	        stripped to contain only code-generator code.

	        * sfidl.h: removed.
	        * sfidl.cc: stripped to contain only main().

	svn path=/trunk/; revision=1245

2003-08-25  Tim Janik 	# 359fd0ce95c05344814058d3d633089d4c252461

	updates

	svn path=/trunk/; revision=1244

2003-08-25  Tim Janik 	# 979879da5ca649d5914e5967be666ad3ffe9020a

	for type registration, module symbols may be bound lazy.

	Mon Aug 25 20:01:58 2003  Tim Janik  <timj@gtk.org>

	        * bseladspa.c (bse_ladspa_plugin_check_load):
	        * bseplugin.c (bse_plugin_check_load): for type registration, module
	        symbols may be bound lazy.

	svn path=/trunk/; revision=1243

2003-08-25  Tim Janik 	# 765c134f83c35828be82fbe67cd47e1fd923a489

	adapted to new bseplugin.h macros. enum generation doesn't work anymore.

	Mon Aug 25 19:27:04 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am:
	        * listplugins.sh: adapted to new bseplugin.h macros.
	        enum generation doesn't work anymore.

	        * bseiirfilter.[hc]: hand-coded enum exports, this is the only
	        C plugin left that uses enum values.

	        * *.[hc]:
	        * freeverb/bsefreeverb.[hc]: ported all plugins to the new
	        export macros.

	        * icons/Makefile.icons:
	        * icons/*.png: added png files for the images used.

	        * icons/*.c: regenerated C sources from *.png files with:
	        gdk-pixbuf-csource --name=VariableName foo.png > foo.c

	svn path=/trunk/; revision=1242

2003-08-25  Tim Janik 	# 86eba19df13fa585795dfcc2ba8dd65aa4709f57

	removed. get rid of mkbuiltinlist.pl, use mkcproc.pl instead.

	Mon Aug 25 19:04:24 2003  Tim Janik  <timj@gtk.org>

	        * mkbuiltinlist.pl: removed.
	        * Makefile.am: get rid of mkbuiltinlist.pl, use mkcproc.pl instead.

	        * Makefile.am:
	        * mkcproc.pl: generate procedure file type init functions.

	        * bsecategories.[hc]:
	        (bse_categories_register): feature a pixdata stream argument as icon.

	        * bsecxxbase.[hc]*: added add() variant to CxxBaseClass to add already
	        grouped pspecs  to a class.

	        * bsecxxutils.[hc]: streamlined type creation macros, so they can be
	        resued by bsecxxplugin.[hc].

	        * bseexports.h: complete revamp of the symbols and structures exported
	        by plugins. there's only a single structure BseExportIdentity now, which
	        links to variants of BseExportNode to hold exported type data.

	        * bseobject.[hc]: added bse_object_class_add_grouped_property().

	        * bseplugin.[hc]: simplified builtin type registration, we use a
	        single init function for each procedure file now.
	        greatly simplified symbol lookup in modules and type registration,
	        according to the new structures in bseexports.h.
	        removed the majority of magic type builtin-registration and export
	        macros. plugin-alike registration for builtin types is not anymore
	        supported, and for plugins, exports boild down to 2 macros.

	        * bseprocedure.[hc]: adaptions to the new bseexports.h.

	        * bseutils.[hc]: since BSE doesn't link against gdkpixbuf, added a
	        small function bse_icon_from_pixstream() that extracts a BsePixdata
	        structure from a pixstream as generated by gdk-pixbuf-csource.
	        supports only 8bit RGBA images (possibly RLE encoded).

	svn path=/trunk/; revision=1241

2003-08-25  Tim Janik 	# 988d916fe2149480b6af58497055c1064c4195a3

	generate only a single object header file from .mdef (module definition

	Mon Aug 25 19:34:05 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.cc: generate only a single object header file
	        from .mdef (module definition file) files.
	        based on the export macros from bsecxxplugin.h, the generated header
	        contains a complete class implementation as requested in the .mdef
	        file, except for the actual *Module object. users need to only
	        implement the *Module object and add two export macros to their
	        *.cc file.
	        generate inlined icon pixstreams via gdk-pixbuf-csource for
	        Info icon="file.png"; statements.

	        * sfidl*.[hc]*: got rid of a couple "const" qualifiers in order
	        to be able to use map<string,string> infos; as non-const.

	svn path=/trunk/; revision=1240

2003-08-25  Tim Janik 	# b325cbb2e3064d63b7b2ebeebccc347796f4927d

	upgrade autoconf dependancy to 2.50.

	Mon Aug 25 16:11:36 2003  Tim Janik  <timj@gtk.org>

	        * autogen.sh: upgrade autoconf dependancy to 2.50.

	        * acbeast.m4: add AC_DIVERT_BEFORE_HELP() taken from gtk+,
	        to define stuff in configure.in available for help generation.

	        * configure.in: port over to autoconf2.57, use configure.h
	        as new generated configuartion file.

	        * Makefile.am:
	        * topconfig.h: provide package-wide configuration results.

	        * */*.c: include "topconfig.h" now.

	svn path=/trunk/; revision=1239

2003-08-23  Tim Janik 	# 42909b888d6106bcc4c8560aa096d7fddc9f30fd

	remove cruft

	svn path=/trunk/; revision=1238

2003-08-23  Tim Janik 	# d859e0d6439d98fb4e53a21a18d9ca8734a289ac

	remove cruft

	svn path=/trunk/; revision=1237

2003-08-22  Tim Janik 	# e0d1c37e019806968a51c7bb5d28c122a9cf64ac

	fixup idl file generation

	svn path=/trunk/; revision=1236

2003-08-22  Tim Janik 	# d03ab4c48db9de5af210c7724ac57f49d5e1a813

	applied patch from stefan which allowes choice values as number (or

	Fri Aug 22 19:47:55 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.cc (parseChoiceValue): applied patch from stefan which
	        allowes choice values as number (or Neutral), string, or a pair of both.

	svn path=/trunk/; revision=1235

2003-08-22  Tim Janik 	# 47ab1ef2f67c9d7306bc5e03bcf9dbd16dc23bc0

	remove '@' from assignments

	svn path=/trunk/; revision=1234

2003-08-22  Tim Janik 	# 689d17c8be4ee9ce9aee2ac4805cf24ae2d5e612

	renamed *.sfidl to *.idl.

	Fri Aug 22 08:06:29 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstrecords.idl:
	        * bsw/Makefile.am:
	        * beast-gtk/Makefile.am: renamed *.sfidl to *.idl.

	svn path=/trunk/; revision=1233

2003-08-22  Tim Janik 	# 0c258eaa22e8dcc84831ef48140cda6b6436667a

	renamed *.sfidl to *.idl.

	Fri Aug 22 08:06:29 2003  Tim Janik  <timj@gtk.org>

	        * bse.idl:
	        * bserecords.idl:
	        * Makefile.am: renamed *.sfidl to *.idl.

	svn path=/trunk/; revision=1232

2003-08-22  Tim Janik 	# 092fa3eb0fb6e3a3807c10302d13b483d94b82c0

	renamed *.sfidl to *.idl.

	Fri Aug 22 08:06:29 2003  Tim Janik  <timj@gtk.org>

	        * testidl.idl:
	        * Makefile.am: renamed *.sfidl to *.idl.

	svn path=/trunk/; revision=1231

2003-08-22  Tim Janik 	# aa2b7dd4b4404199043ff27d2d32e0f7146fb08b

	move everything into an anonymous namespace to avoid unwanted symbol

	Fri Aug 22 07:48:14 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.cc: move everything into an anonymous namespace to
	        avoid unwanted symbol exports.
	        declare extra tokens as enum values, move token strings next to
	        the enum definition as ordering is important here.
	        provide operator== for enum comparisons.
	        make the @ in '@=' statements in idl files optional.
	        prototyped $GROUP=""; syntax for property group assignments,
	        this code is disabled however because the syntax looks somewhat
	        odd. removed code for oddball 'group: "Foo";' statements which
	        interferes with the way 'private:' or 'public:' are used in C++.
	        introduced new syntax for property grouping, supported in records
	        _and_ classes, which simply block groups the property definitions:
	        'group "Property Group" { ... };'. also allow a property group
	        name after the 'property' keyword for singly property definitions
	        in classes. however this syntax should probably go, as it differs
	        from property declarations as used in records.
	        fixed some indentation problems.

	        * testidl.sfidl: adapt and test syntax changes.

	svn path=/trunk/; revision=1230

2003-08-22  Tim Janik 	# 812fadc77dc883f640d87cda610563e7df05e45d

	enable -O2 optimizations for c++ code.

	Fri Aug 22 04:22:56 2003  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: enable -O2 optimizations for c++ code.

	svn path=/trunk/; revision=1229

2003-08-22  Tim Janik 	# 099ed712c519144a1e7f9a9e5da3c6534f6dde8e

	implementation of a peak filter, and example effect implemented in C++.

	Fri Aug 22 05:01:14 2003  Tim Janik  <timj@gtk.org>

	        * examplepeakfilter.[hc]*: implementation of a peak filter, and example
	        effect implemented in C++.

	        * bsecxxmodule.[hc]*: implement Module, the C++ base class for engine
	        modules. implement Bse::Effect, mostly a wrapper around BseSource
	        functionality to allow effect implementations in C++.

	        * bsecxxvalue.[hc]*: C++ GValue wrapper.

	        * bsegenclosures.h: generated closure templates to allow signal
	        connections in C++ code with many different signatures.

	        * bsecxxclosure.[hc]*: implement base signal handler closure,
	        and generation code for bsegenclosures.h.

	        * bsecxxarg.[hc]*: implement function argument templates to be
	        used by signal handler closures.

	        * tests/testcxx.cc: new test program to perform cxx tests.

	        * bsecxxbase.[hc]*: implement signal connections with type checking.
	        implemented class functions to add i/o channels.

	        * bsecxxutils.[hc]*: put out a message upon uncaught exceptions.
	        added template and exception utilities. allow for better
	        parameterization upon type registration.

	        * bsesource.[hc]: allow GslClass caching in BseSourceClass.

	        * bseexample.[hc]*: removed bad test code, there's a better example
	        module now.

	        * *.cc: use an anonymous namespace for local (static)
	        functions/variables.

	        * gslengine.[hc]: implement force-reset jobs to allow forcing
	        reset of a module.

	        * gslopmaster.[hc]: implement forced resetting of modules.

	svn path=/trunk/; revision=1228

2003-08-19  Tim Janik 	# 96c391758fb6344b6d405d0ff2c93a55b3d55d82

	sync with gbsearcharray.h in newer glib (2.3.0). new flag name

	Tue Aug 19 04:21:32 2003  Tim Janik  <timj@gtk.org>

	        * gbsearcharray.h: sync with gbsearcharray.h in newer glib (2.3.0).
	        new flag name G_BSEARCH_ARRAY_AUTO_SHRINK to shrink arrays upon
	        removal.
	        (g_bsearch_array_insert): do nothing if the node is already there.
	        (g_bsearch_array_replace): replace node or fallback to insert.

	svn path=/trunk/; revision=1227

2003-08-09  Stefan Westerfeld 	# 4cfaf4cf23fa974d358b5d12d5b977afae2f913b

	fix parsing type names from different namespaces (such as Foo::Bar). don't

	Sat Aug  9 20:06:57 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-namespace.cc sfidl-parser.*: fix parsing type names from
		different namespaces (such as Foo::Bar).
		don't generate code after printing parse errors.

		* sfidl.h: remove using namespace std; from header

	svn path=/trunk/; revision=1226

2003-08-09  Stefan Westerfeld 	# 04118cdcaa1d3b62ce5e6398918028b3f32eb998

	support string concatenation in {I|J|O}Stream parsing.

	Sat Aug  9 17:29:45 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: support string concatenation in {I|J|O}Stream
		parsing.

	svn path=/trunk/; revision=1225

2003-07-31  Tim Janik 	# 7bed5a5d868b99b9269b82c5104c0109f079e4d9

	added BSE gruntwork to get C++ plugins going.

	Thu Jul 31 18:08:28 2003  Tim Janik  <timj@gtk.org>

	        * added BSE gruntwork to get C++ plugins going.

	        * bsemain.c: initialize Cxx stuff.

	        * bse/bseexample.[hc]*: two C++ example classes.

	        * bse/bsecxxbase.[hc]*: base class for C++ objects.

	        * bse/bsecxxutils.[hc]*: BSE C++ utilities, type registration etc.

	svn path=/trunk/; revision=1224

2003-07-31  Tim Janik 	# c6cd107ae4c0e2cf267aff298ed1aba240994c83

	added cxxdummy.cc files over the place to force C++ linkage of

	Thu Jul 31 18:15:03 2003  Tim Janik  <timj@gtk.org>

	        * added cxxdummy.cc files over the place to force C++ linkage
	        of executables.

	svn path=/trunk/; revision=1223

2003-07-31  Tim Janik 	# 9e303d3a4bc8690f1cb9d2ef795484c1ffc66724

	conditionalize generated code into source and header file stuff.

	Thu Jul 31 18:09:23 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-module.[hc]*: conditionalize generated code into
	        source and header file stuff.

	svn path=/trunk/; revision=1222

2003-07-30  Tim Janik 	# 4c9bb2cd1ad369dba71e273ea935b7c378457b31

	add --module code generation option.

	Wed Jul 30 05:17:56 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-options.[hc]*: add --module code generation option.

	        * sfidl-parser.[hc]*: implement {I|J|O}Stream parsing.

	        * sfidl.[hc]*: export   C code generator since it implements
	        functionality needed by the other code generators (needs to be fixed).

	        * sfidl-module.[hc]*: implement plugin module code generator.

	        * sfitypes.h: introduce SfiString.

	svn path=/trunk/; revision=1221

2003-07-30  Tim Janik 	# 09d27163d6b458e1889beb79533ec56c4a4eecc8

	updates

	svn path=/trunk/; revision=1220

2003-07-30  Tim Janik 	# f51433cb1bdbb239a5d081f22684e9c2343fcf59

	fix constantness.

	Wed Jul 30 05:08:54 2003  Tim Janik  <timj@gtk.org>

	        * bseexports.h (struct _BseExportEnum): fix constantness.

	        * bsetype.[hc]: export sfidl_pspec constructors, so
	        plugins may use them.

	        * gslloader-gslwave.c: fix symbols.

	svn path=/trunk/; revision=1219

2003-07-29  Tim Janik 	# d62db599092731c05c28df7e8139accdb19c3045

	added support for segment display in the canvas.

	Tue Jul 29 14:00:37 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsteventroll.[hc]: added support for segment
	        display in the canvas.

	        * beast-gtk/bsteventrollctrl.[hc]: implement alignment
	        tool to align events to a given segment.

	        * beast-gtk/bstpartdialog.c: add button and menu item
	        to select event-alignment tool.

	        * beast-gtk/gxk/gxkutils.c: disabled
	        gxk_tree_selection_force_browse() for now, since it aparently
	        triggers a segfaulting bug in the Gtk+-2.2.2 treeview.

	svn path=/trunk/; revision=1218

2003-07-29  Tim Janik 	# c6fbd32ac0049adf92b3b17839611d1f787ab6ed

	added get-range-controls() to list events wthint a tick-duration range.

	Tue Jul 29 13:59:34 2003  Tim Janik  <timj@gtk.org>

	        * bsepart.proc: added get-range-controls() to list events
	        wthint a tick-duration range.

	        * gsldatahandle-mad.c: fix setup.* fields being 0 during
	        open().

	svn path=/trunk/; revision=1217

2003-07-28  Tim Janik 	# e0ce0b99e955593db3ca23cee2bf71a410bb0048

	rewrote OSS pcm and midi device checks for clarity, renamed OSS pcm/midi

	Mon Jul 28 12:56:40 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: rewrote OSS pcm and midi device checks for
	        clarity, renamed OSS pcm/midi device options.
	        applied changes by Ben Collver <collver1@comcast.net>, to
	        check for NetBSD sound devices.

	svn path=/trunk/; revision=1216

2003-07-28  Tim Janik 	# 79d9bfe75446e82e9b677fe76057f9e8d8ec82de

	enable warning options for C++ code. fixed CXXFLAGS setup which was

	Mon Jul 28 05:25:03 2003  Tim Janik  <timj@gtk.org>

	        * acbeast.m4 (ac_vm): enable warning options for C++ code.
	        fixed CXXFLAGS setup which was wrongly using CFLAGS.

	svn path=/trunk/; revision=1215

2003-07-28  Tim Janik 	# 1a1bcd9fbad3e0e85e2189a89e4894170178e24a

	fix evaluation of config macro TOYPROF_PENTIUM, reported by Sam Hocevar

	Mon Jul 28 05:21:01 2003  Tim Janik  <timj@gtk.org>

	        * toyprof.c: fix evaluation of config macro TOYPROF_PENTIUM, reported
	        by Sam Hocevar <sam@zoy.org>.

	svn path=/trunk/; revision=1214

2003-07-28  Tim Janik 	# 56f9d38e0d6f8ed49011c0234425a8319ce1adbf

	updates

	svn path=/trunk/; revision=1213

2003-07-28  Tim Janik 	# aa5baee513e04870118cced0e78046851f123209

	add test textget handler.

	Mon Jul 28 04:07:08 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/tsmview.c: add test textget handler.

	        * beast-gtk/gxk/gxktexttools.[hc]: add textget functionality.
	        the ability to place widgets created by special handlers from
	        tags in tsm files.

	svn path=/trunk/; revision=1212

2003-07-27  Tim Janik 	# e4809bbea858428b34c67e123b63d5fc4d860b8e

	fix midi channel handling.

	Sun Jul 27 02:11:21 2003  Tim Janik  <timj@gtk.org>

	        * bsemidiicontroller.[hc]: fix midi channel handling.

	        * bsemonokeyboard.[hc]: new module. monophonic midi keyboard input
	        module with selectable midi channel.

	        * bsemidireceiver.[hc]: implemented monophonic synth (keyboard) module.

	        * bseproject.c: fix default midi channel.

	svn path=/trunk/; revision=1211

2003-07-27  Tim Janik 	# c49a36483397c7c1b416a68511b38d34b00e38a3

	resurrected canyon-delay plugin, adjusted user visible comments.

	Sun Jul 27 04:31:23 2003  Tim Janik  <timj@gtk.org>

	        * davcanyondelay.[hc]: resurrected canyon-delay plugin,
	        adjusted user visible comments.

	svn path=/trunk/; revision=1210

2003-07-27  Tim Janik 	# a590fd5b4dbb58ceb2bead78f619a9dabc3fdf44

	resurrected canyon-delay plugin, adjusted user visible comments.

	Sun Jul 27 04:31:23 2003  Tim Janik  <timj@gtk.org>

	        * davcanyondelay.[hc]: resurrected canyon-delay plugin,
	        adjusted user visible comments.

	svn path=/trunk/; revision=1209

2003-07-27  Tim Janik 	# ad4e81e62412386d924fd05f7fccbfb7ad896ecb

	incremented version to 0.5.5-rc1, binary age 0, interface age 0.

	Sun Jul 27 02:39:05 2003  Tim Janik  <timj@gtk.org>

	        * incremented version to 0.5.5-rc1, binary age 0, interface age 0.

	svn path=/trunk/; revision=1208

2003-07-27  Tim Janik 	# 28fdc3676f3c8a04751925de42ed6ee0ce9328cd

	fix midi channel handling.

	Sun Jul 27 02:11:21 2003  Tim Janik  <timj@gtk.org>

	        * bsemidiicontroller.[hc]: fix midi channel handling.

	        * bsemonokeyboard.[hc]: new module. monophonic midi keyboard input
	        module with selectable midi channel.

	        * bsemidireceiver.[hc]: implemented monophonic synth (keyboard) module.

	        * bseproject.c: fix default midi channel.

	svn path=/trunk/; revision=1207

2003-07-26  Tim Janik 	# c6f10d2a4132a5302d4f4b949d55d6c977ec2e8a

	added midi channel to track roll.

	Sat Jul 26 04:42:09 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: added midi channel to track roll.

	svn path=/trunk/; revision=1206

2003-07-26  Tim Janik 	# 1ba53a7fbd3a1565f712002020f684e7a51a2698

	count midi channels starting from 1 for decoded events.

	Sat Jul 26 04:33:03 2003  Tim Janik  <timj@gtk.org>

	        * bsemididecoder.c (bse_midi_decoder_construct_event): count
	        midi channels starting from 1 for decoded events.

	        * bsetrack.[hc]: added midi-channel property to allow custom
	        midi channel assignments.

	svn path=/trunk/; revision=1205

2003-07-26  Tim Janik 	# fd6d3d690d67d463f2d9d77f56d93a1183e6ba2d

	push data into a midi decoder.

	Fri Jul 25 01:05:22 2003  Tim Janik  <timj@gtk.org>

	        * bsemididevice-oss.c: push data into a midi decoder.

	        * bsemididevice.c: provide default midi decoder (not midi receiver)
	        for midi devices.

	        * bsemididecoder.[hc]: new files. moved midi event decoding from
	        bsemidireceiver.[hc] to here. uses bse_midi_receiver_farm_process_events()
	        and bse_midi_receiver_farm_distribute_event() to have the events handled
	        by all interested midi receivers.

	        * bsemidievent.[hc]: added functions to copy and allocate midi events.

	        * bsemidireceiver.[hc]: removed midi event decoding functionality.
	        added midi-receiver-farm functions. a global midi event input queue.

	        * bseproject.c: add project default decoder to midi receiver farm.

	        * bseserver.c: removed default server midi receiver.

	svn path=/trunk/; revision=1204

2003-07-25  Stefan Westerfeld 	# dfceee6a9baa6484d8a5ddfd86f624ee096a5940

	adapted prototyping to work in cases where the full definition of a

	Fri Jul 25 17:17:52 2003  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl-parser.*: adapted prototyping to work in cases where the full
		definition of a choice/class/record/sequence is not contained in the
		idl file at all

	svn path=/trunk/; revision=1203

2003-07-23  Tim Janik 	# e10f9afbc94e932242ce74991c8ec8f00fc8757a

	remove MIDI_MAX_CHANNEL assertions, up this to 99.

	Thu Jul 24 01:28:33 2003  Tim Janik  <timj@gtk.org>

	        * bsemidievent.[hc]: remove MIDI_MAX_CHANNEL assertions, up this to 99.

	        * bsemidireceiver.[hc]: remove MIDI_MAX_CHANNEL assertions.
	        add voice module ref counting.
	        (bse_midi_receiver_voices_pending): check poending voices for a specific
	        midi-channel.

	        * bsemidivoice.c: don't export private functions.

	        * bseproject.[hc]: provide a single midi-receiver for the whole project.

	        * bsetrack.[hc]: don't provide own midi receiver, use the one from our
	        song instead. added midi-channel property per track, per default, an
	        internal midi-channel > MIDI_MAX_CHANNEL is used.

	        * bsesong.[hcp]*: fetch midi-receiver from project once parent changes.
	        provide tracks with midi receiver when creating voices. honour
	        midi-channels of tracks.

	        * bsessequencer.c: operate on the song's midi receiver, honour
	        midi-channels of tracks.

	svn path=/trunk/; revision=1202

2003-07-23  Tim Janik 	# ec9fba9b3c603fc8f898ef54ef32867f4af1b215

	reset pfd.events to 0 once the fd becomes -1.

	Wed Jul 23 02:05:24 2003  Tim Janik  <timj@gtk.org>

	        * sficomport.c: reset pfd.events to 0 once the fd becomes -1.

	svn path=/trunk/; revision=1201

2003-07-23  Stefan Westerfeld 	# 0ba5fc652671e6a57ec3db6124d55c5c5d6ce690

	cleanup of class names. support prototyping for choices, records and

	Wed Jul 23 19:19:36 2003  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl*.cc sfidl*.h: cleanup of class names.
		support prototyping for choices, records and sequences, like
		choice ChoiceDefinedLater;

	svn path=/trunk/; revision=1200

2003-07-22  Tim Janik 	# f8088b26bb5411a9e0c2f0559b39af38e76d593d

	announce release.

	Tue Jul 22 14:02:03 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce release.

	svn path=/trunk/; revision=1199

2003-07-22  Tim Janik 	# e00db35689c3a5714a511aa15051b40e4e145de7

	release beast-0.5.4.tar.gz.

	Mon Jul 21 14:47:40 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: release beast-0.5.4.tar.gz.

	svn path=/trunk/; revision=1197

2003-07-18  Tim Janik 	# 9f3281f3b02c875002426d31e8e1580739a32282

	throw out beast-0.5.4-rc1.tar.gz.

	Sat Jul 19 01:50:45 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: throw out beast-0.5.4-rc1.tar.gz.

	svn path=/trunk/; revision=1195

2003-07-18  Tim Janik 	# 2f275f2c9103b8f1067cd21e3dfa083f6d9d520d

	added drum module test.

	Fri Jul 18 19:17:54 2003  Tim Janik  <timj@gtk.org>

	        * test/drum-test.bse: added drum module test.

	svn path=/trunk/; revision=1194

2003-07-18  Tim Janik 	# 3f2d6cc38420dd78e915e4d1b801aa0410bb5a6e

	up version number to 0.5.4, interface 0, binary 0.

	Fri Jul 18 18:45:44 2003  Tim Janik  <timj@gtk.org>

	        * configure.in (BST_RELEASE_CANDIDATE): up version number to 0.5.4,
	        interface 0, binary 0.

	        * beast-gtk/bstparam-toggle.c: support SFI_PARAM_HINT_TRIGGER
	        with centered toggle button.

	        * beast-gtk/bstutils.[hc]: allow centered action widget in gmasks.

	svn path=/trunk/; revision=1193

2003-07-18  Tim Janik 	# 69e6630e6ef15f24cf84f30fac63d7ec3d5e406c

	minor define

	svn path=/trunk/; revision=1192

2003-07-18  Tim Janik 	# 9473f17a3d0f0a45060f24bfe5e40977fdfa0d49

	resurrected David A. Bartold's SynDrum plugin. optimized for speed,

	Fri Jul 18 18:14:57 2003  Tim Janik  <timj@gtk.org>

	        * davsyndrum.[hc]: resurrected David A. Bartold's SynDrum plugin.
	        optimized for speed, adjusted various settings and added more
	        input channels.

	svn path=/trunk/; revision=1191

2003-07-18  Tim Janik 	# 84de005b33ba914cf1d6dafa8ffb346244abcb5a

	fix locking.

	Fri Jul 18 07:09:01 2003  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.c (gsl_data_handle_override): fix locking.

	svn path=/trunk/; revision=1190

2003-07-18  Tim Janik 	# 4dfa81e4e478199be3de41985cd1e14ae63a4e37

	override osc_freq of external data handles.

	Fri Jul 18 06:41:08 2003  Tim Janik  <timj@gtk.org>

	        * gslloader-gslwave.c: override osc_freq of external data handles.

	        * gsldatahandle.[hc]:
	        (gsl_data_handle_override): new function to allow overriding of
	        setup parameters for closed data handles.
	        (gsl_data_handle_open): support overriding of bit_depth, mix_freq
	        and osc_freq.
	        (gsl_data_handle_close): zero out ->setup.

	svn path=/trunk/; revision=1189

2003-07-18  Tim Janik 	# 5145f90e1315d556508404fd0ebd60b47bc2f381

	added test for velocity sequencing functionality.

	Fri Jul 18 05:42:06 2003  Tim Janik  <timj@gtk.org>

	        * test/velocity-test.bse: added test for velocity sequencing functionality.

	svn path=/trunk/; revision=1188

2003-07-18  Tim Janik 	# 215743cbba3f07ec0813006dcaee7456e843cd75

	announce suse rpms.

	Fri Jul 18 05:03:21 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi:
	        * docs/site-download.texi: announce suse rpms.

	svn path=/trunk/; revision=1187

2003-07-18  Tim Janik 	# 4aa4fa796112469e3f01121638da3fd37031c0ea

	added param implementation that operates on BstParam.value only.

	Thu Jul 17 03:41:55 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.[hc]: added param implementation that operates
	        on BstParam.value only.

	        * beast-gtk/bstpartdialog.[hc]: intergrated event roll widget into the
	        dialog.

	        * beast-gtk/bstpianoroll.[hc]: fixed up allocation buglet, made
	        number of colors a constant. changed color of horizontal lines.
	        adapt to BsePart renames. added bst_piano_roll_get_vpanel_width().

	        * beast-gtk/bstpianorollctrl.[hc]: sync clipboard with event roll clipboard.
	        fixed buglets, added undo grouping. adapted to BsePart renames.

	        * beast-gtk/bstprocedure.[hc]: added bst_procedure_ref_pspec() to
	        retrieve and reference the pspec of a procedure parameter.

	        * beast-gtk/bsteventroll.[hc]: new widget, similar to the piano roll,
	        for viewing non-note midi events of a BsePart.

	        * beast-gtk/bsteventrollctrl.[hc]: controller/editing functionality
	        for BstEventRoll.

	        * docs/overview-de.texi: added post-conference fixups.

	        * shell/bsescminterp.c: const fixups.

	svn path=/trunk/; revision=1186

2003-07-18  Tim Janik 	# 344f9f009ced5663dd5803ffb8d897dacc4616d1

	added bse_midi_event_signal() to create non-note events. disabled enum

	Thu Jul 17 03:50:23 2003  Tim Janik  <timj@gtk.org>

	        * bsemidievent.[hc]: added bse_midi_event_signal() to create
	        non-note events. disabled enum BseMidiSignalType typedef which
	        is in idl file now. added internal MIDI event type
	        BSE_MIDI_X_CONTINUOUS_CHANGE to better facilitate continuous controls.

	        * bsemidireceiver.[hc]: buglet fixups.
	        support BSE_MIDI_X_CONTINUOUS_CHANGE events.

	        * bsepart.[hc]: major API cleanup. added functions for control events.
	        added support to save and load control events.

	        * bsepart.proc: API cleanup. added procedures for control events.

	        * bseprocidl.cc: hacked around BSE_TYPE_MIDI_SIGNAL_TYPE definition
	        in idl file. improved overall code readability.

	        * bserecords.sfidl: added control event definition, sependant sequence
	        and MidiSignalType choice definition.

	        * bsessequencer.c: fixup of velocity handling. added support for
	        control events.

	        * bsestorage.[hc]: added small helper bse_storage_check_parse_negate().

	        * bsetype.c: support default Choice pspecs.

	        * bseutils.[hc]: added convenience functions bse_part_control() and
	        bse_part_control_seq_take_append().

	Wed Jul 16 18:05:09 2003  Tim Janik  <timj@gtk.org>

	        * bsepart.c (bse_part_restore_private): fix parsing bug wrg negative
	        fine-tune values.

	Tue Jul 15 03:34:24 2003  Tim Janik  <timj@gtk.org>

	        * bsepart.[hcp]*: removed bse_part_find_note_at() which caused us to
	        fail to find long overlapped notes. bse_part_list_notes_crossing() does
	        find all required notes without bugs.

	svn path=/trunk/; revision=1185

2003-07-18  Tim Janik 	# 7b7855da44650d2ddfb778752b5e2cda5da2110d

	make unknown symbols an error.

	Thu Jul 17 04:00:12 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-namespace.cc: make unknown symbols an error.

	svn path=/trunk/; revision=1184

2003-07-14  Tim Janik 	# 6c176a3b5dbb5ef573fc031b13002cbc1b88ab86

	add shadow around piano roll widget which it doesn't draw itself anymore.

	Mon Jul 14 20:13:05 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c (bst_part_dialog_init): add shadow around
	        piano roll widget which it doesn't draw itself anymore.

	        * beast-gtk/bstpianoroll.c: some drawing code cleanups. fixed hpanel/
	        vpanel drawing. removed outer shadow.

	svn path=/trunk/; revision=1183

2003-07-14  Tim Janik 	# 0d7c57a4529a7952eae097307f5d8974bcf803c9

	guard against systems not having ERESTART.

	Mon Jul 14 16:59:25 2003  Tim Janik  <timj@gtk.org>

	        * sficomport.c: guard against systems not having ERESTART.

	svn path=/trunk/; revision=1182

2003-07-14  Tim Janik 	# 3bd488e91c242b02e4883db51e158d724c78741c

	added third argument to ioctl(), since on NetBSD (when soundcard.h is

	Mon Jul 14 14:37:19 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_close): added third argument
	        to ioctl(), since on NetBSD (when soundcard.h is included) it's a
	        3-argument macro, reported by collver1@comcast.net.

	svn path=/trunk/; revision=1181

2003-07-14  Tim Janik 	# fe8d609bdc14543eebd0c4fc5f37b5e53940bf65

	properly destroy all parameters.

	Mon Jul 14 16:39:48 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparamview.c: properly destroy all parameters.

	        * beast-gtk/gxk/gxktexttools.c: free g_get_current_dir() result.

	svn path=/trunk/; revision=1180

2003-07-14  Tim Janik 	# 3bf7ab7103291a18a36ab76cb067f326e59b8106

	added third argument to ioctl() since, on NetBSD it's a 3-argument-macro,

	Mon Jul 14 14:37:19 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_close): added third argument to
	        ioctl() since, on NetBSD it's a 3-argument-macro, reported by
	        collver1@comcast.net.

	svn path=/trunk/; revision=1179

2003-07-14  Tim Janik 	# 2c32276374a127317ba210252686a1b1a200b495

	added sfi_seq_from_cstrv(), a variant of sfi_seq_from_strv() for const

	Mon Jul 14 16:43:20 2003  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: added sfi_seq_from_cstrv(), a variant of
	        sfi_seq_from_strv() for const gchar**.

	        * sfiglue.[hc]: changed gchar** returns to const gchar** returns
	        where apropriate.

	        * sfigluecodec.c: fixed sequence reference count leak.

	        * sfithreads.c: sched_yield() is not available on NetBSD, reported
	        by collver1@comcast.net.

	        * toyprof-mem.c:
	        * toyprof.c: fix pointless gcc warnings.

	        * toyprof.h: special case toyprof code for GLIBC >= 2.2, since we
	        use _r_debug.

	svn path=/trunk/; revision=1178

2003-07-11  Tim Janik 	# 38b1ff09aa72d7483f75b755df383d435e3fe8df

	link updates

	svn path=/trunk/; revision=1177

2003-07-11  Tim Janik 	# 37791454eada6e2eb52950f765e38b27ffe8f8c8

	announce german paper and irc channel.

	Fri Jul 11 03:09:42 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce german paper and irc channel.

	        * docs/site-navigation.xml:
	        * docs/overview-de.texi: added german paper accompanying a talk
	        for LinuxTag 2003.

	svn path=/trunk/; revision=1176

2003-07-10  Tim Janik 	# ddc3e1f42d60507e41b27086302245c9c22c11d6

	announce linuxtag presence of tim and stefan.

	Thu Jul 10 22:28:41 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce linuxtag presence of tim and stefan.

	svn path=/trunk/; revision=1175

2003-07-08  Tim Janik 	# b65bfc0a3596b262a28ce797aa355436b9f9d2d1

	added slot for postprocessing synthesizer. default to 16 voices.

	Tue Jul  8 02:31:30 2003  Tim Janik  <timj@gtk.org>

	        * bsemidisynth.[hc]: added slot for postprocessing synthesizer.
	        default to 16 voices.

	svn path=/trunk/; revision=1174

2003-07-07  Tim Janik 	# 9eee03448e078f834fca656d4ea0c556a05cd0d6

	fixup tool menu item sensitivity.

	Mon Jul  7 22:07:43 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c: fixup tool menu item sensitivity.

	        * docs/quickstart.texi: update Custom Synthesizer text.

	svn path=/trunk/; revision=1173

2003-07-07  Tim Janik 	# 2de93e743cb6e836c56365b6f01c8dbcb3dd3969

	remove debugging code.

	Mon Jul  7 16:42:05 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (wstore_data_handle_reader): remove debugging code.

	svn path=/trunk/; revision=1172

2003-07-05  Tim Janik 	# 0b3ada4ef43af6852f2a7f91fc89455144a6fd54

	properly clean proxy field if the current proxy is 0.

	Sat Jul  5 02:47:44 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam-proxy.c (param_proxy_change_value): properly clean
	        proxy field if the current proxy is 0.

	        * beast-gtk/bsttrackview.c: support per-track setting of
	        postprocessing synthesis network.

	svn path=/trunk/; revision=1171

2003-07-05  Tim Janik 	# dfd7e3b4e3d8baf789025b687815b344439f9ded

	added pnet property to set postprocessing synthesis network per song.

	Sat Jul  5 02:49:20 2003  Tim Janik  <timj@gtk.org>

	        * bsesong.[hc]: added pnet property to set postprocessing synthesis
	        network per song. added sub synth (null-shortcut) after track merger
	        to hold pnet.

	        * bsetrack.[hc]: added pnet property and sub synth to support post
	        processing synthesis networks like above.

	        * bsesubsynth.[hc]: added bse_sub_synth_set_null_shortcut(). this
	        enables automatic signal-through connections if no snet is set.

	svn path=/trunk/; revision=1170

2003-07-04  Tim Janik 	# 5039b6e56fade29b66864218511eb710b6e3c642

	ignore non-BseSource children.

	Sat Jul  5 01:03:13 2003  Tim Janik  <timj@gtk.org>

	        * shell/modules2grid.scm: ignore non-BseSource children.

	        * beast-gtk/bstparam-proxy.c (param_proxy_change_value): check for
	        pop->prefix to be != NULL before calling strlen on it.

	svn path=/trunk/; revision=1169

2003-06-25  Tim Janik 	# 56f030ccd5b1accaf3f6a541a15caf3578cb81f8

	provide footnotes link

	svn path=/trunk/; revision=1168

2003-06-24  Tim Janik 	# ddf8161c10d2d13310ea698a8384ec58d736f454

	rotate news, announce release.

	Wed Jun 25 01:22:54 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: rotate news, announce release.

	svn path=/trunk/; revision=1167

2003-06-24  Tim Janik 	# 178b0a42e883c1f22275013de7aea2981fdb8ec9

	release 0.5.3, interface and binary age 0.

	Wed Jun 25 00:18:25 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: release 0.5.3, interface and binary age 0.

	        * beast-gtk/bstmain.c: LADSPA plugin loading now needs to be
	        reenabled with -:l if it was disabled due to -:n.

	svn path=/trunk/; revision=1165

2003-06-24  Tim Janik 	# a659dcfacdfac81e3641e5160973f1d21ece7b58

	free rc_style when done.

	Tue Jun 24 23:28:16 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c (style_modify_fg_as_sensitive): free rc_style
	        when done.

	svn path=/trunk/; revision=1164

2003-06-24  Tim Janik 	# 92b065d82dd4db8b3129f85399eab8729338bc23

	fixed memleak in if() branch.

	Tue Jun 24 23:25:54 2003  Tim Janik  <timj@gtk.org>

	        * bseserver.proc (register_scripts): fixed memleak in if() branch.

	        * bsecategories.c (bse_category_from_id): free category fields before
	        overwriting them.

	svn path=/trunk/; revision=1163

2003-06-24  Tim Janik 	# fcdf62017a302a5411f6682939e94eec184d6e4f

	allocate structures with g_new0() in shallow_copy(), so we don't

	Tue Jun 24 23:22:58 2003  Tim Janik  <timj@gtk.org>

	        * sfidl.cc: allocate structures with g_new0() in shallow_copy(),
	        so we don't oeverwrite fields with already initialized contents
	        and leak substructures.
	        also free the array holding element pointers when freeing sequencs.

	        * sficomport.c (sfi_com_port_destroy): don't forget to destroy port->scanner.

	svn path=/trunk/; revision=1162

2003-06-23  Tim Janik 	# 5194b5228cbf18907d50850f4ef14d1124d92b11

	return an error code!=0 (currently 102) if the connection failed.

	Mon Jun 23 20:43:59 2003  Tim Janik  <timj@gtk.org>

	        * shell/bsesh.c: return an error code!=0 (currently 102) if the
	        connection failed.

	svn path=/trunk/; revision=1161

2003-06-23  Tim Janik 	# f3c8320d83f263ef4643f3e3d6d69d92bcbb4eba

	cleaned up connection shutdown logic. spew connection aborts to stderr.

	Mon Jun 23 20:33:33 2003  Tim Janik  <timj@gtk.org>

	        * bsejanitor.proc:
	        * bsejanitor.[hc]: cleaned up connection shutdown logic. spew connection
	        aborts to stderr. reap remote child (with small delay after killing if
	        necessary).

	svn path=/trunk/; revision=1160

2003-06-23  Tim Janik 	# a91266701d42e3f4a1523b218603833e461a1a02

	added sfi_com_port_reap_child() and fields holding the exit states of the

	Mon Jun 23 20:38:13 2003  Tim Janik  <timj@gtk.org>

	        * sficomport.[hc]: added sfi_com_port_reap_child() and fields holding
	        the exit states of the reaped child, implemented child reaping and
	        SIGKILL fallback.
	        fixed write buffer allocation and write buffer queueing.
	        implemented >blocking< in receive routine which was simply missing
	        since never triggered on fast machines. IO_BOTTLE_NECK can be defined
	        to a small value now to trigger the code on fast machines.

	        * sficomwire.c (sfi_com_spawn_async): don't auto-reap children, if
	        we need auto-reaping again, we can add a function variant.

	svn path=/trunk/; revision=1159

2003-06-23  Tim Janik 	# 8d08509e20d731542383d342ee79b6895977f96a

	fix uninitialized variable access.

	Mon Jun 23 05:18:53 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c (gxk_tree_view_get_row_area): fix
	        uninitialized variable access.

	svn path=/trunk/; revision=1158

2003-06-22  Tim Janik 	# fc3a0320da89aa81b7543bfc04ade1929fb6d296

	added footnotes article

	svn path=/trunk/; revision=1157

2003-06-21  Tim Janik 	# 05b2a77f453bb499b8aacdf21eb6b0b93dbbf6cc

	cosmetics

	svn path=/trunk/; revision=1156

2003-06-21  Tim Janik 	# cf2c720c71b2e44df6c28c79fd59cc5e487ede70

	announce release.

	Sat Jun 21 21:43:37 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce release.

	svn path=/trunk/; revision=1155

2003-06-21  Tim Janik 	# 26aeeeddfb1dbe1ad51fe7455d4af7e4becce7ff

	release 0.5.2, binary & interface ages 0.

	Sat Jun 21 19:28:53 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: release 0.5.2, binary & interface ages 0.

	svn path=/trunk/; revision=1153

2003-06-20  Alper Ersoy 	# fef3dd08f315ac1e6bf4d0d53fe4ed0e398e4c05

	fixed toc links underlining.

	Fri Jun 20 07:03:08 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/css/default.css: fixed toc links underlining.

	svn path=/trunk/; revision=1152

2003-06-19  Tim Janik 	# e9d47adf108c7a71af0390275de0fb625fe23fdb

	fix looking for mad.pc to detect libmad which works only for the debian

	Fri Jun 20 00:29:55 2003  Tim Janik  <timj@gtk.org>

	        * fix looking for mad.pc to detect libmad which works only
	        for the debian package.

	svn path=/trunk/; revision=1151

2003-06-19  Tim Janik 	# 9f96e6ea4c87976f8985bab027db5a1eb22201a9

	fix BSE not compiling without libmad, reported by Daniel MacDonald

	Fri Jun 20 00:00:31 2003  Tim Janik  <timj@gtk.org>

	        * gsldatahandle-mad.c: fix BSE not compiling without libmad,
	        reported by Daniel MacDonald <danboid@yahoo.co.uk>.

	svn path=/trunk/; revision=1150

2003-06-19  Tim Janik 	# eff447081337afe26318de923ee9afafbaadd7dd

	up to v0.5.2-rc2.

	Thu Jun 19 23:21:07 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: up to v0.5.2-rc2.

	        * acbeast.m4: support -ftracer for gcc-3.3.

	        * test/freak-noise.bse:
	        * test/midi-test.bse:
	        * test/osc-test.bse:
	        * test/simple-echo.bse:
	        * test/simple-loop.bse:
	        * test/test-song.bse:
	        * test/wave-midi.bse: upgrade to 0.5.2 BSE format.

	svn path=/trunk/; revision=1149

2003-06-19  Tim Janik 	# c9c2759f7842414611b14b2781019b5c67a2f74a

	get rid of debugging junk.

	Thu Jun 19 23:21:39 2003  Tim Janik  <timj@gtk.org>

	        * bsecategories.proc: get rid of debugging junk.

	        * bsemidiicontroller.c:
	        * bsepcminput.c:
	        * bsepcmoutput.c:
	        * bsesubinstrument.c:
	        * bsesubiport.c:
	        * bsesubkeyboard.c:
	        * bsesuboport.c:
	        * bsesubsynth.c: fix GType ids still being stored in 32bit integers,
	        which breaks on alpha where type ids are 64bit.
	        tracked down by Sam Hocevar <sam@zoy.org>.

	svn path=/trunk/; revision=1148

2003-06-17  Tim Janik 	# 8261d08d020b537a7375a1c01130d55091293e63

	updates

	svn path=/trunk/; revision=1147

2003-06-17  Tim Janik 	# f40643ece69e9b4f4396082d47aa7d6a080fcb57

	turn assertion into warning, so we don't take down the whole application

	Tue Jun 17 14:40:26 2003  Tim Janik  <timj@gtk.org>

	        * bseserver.c (engine_init): turn assertion into warning, so we don't
	        take down the whole application upon mix frequency changes.

	svn path=/trunk/; revision=1146

2003-06-17  Tim Janik 	# 0379673e377aed87f624f6e9fe136543672af293

	simplyfied code, fixed comments.

	Tue Jun 17 14:30:54 2003  Tim Janik  <timj@gtk.org>

	        * shell/progressor-example.scm: simplyfied code, fixed comments.

	        * beast-gtk/bstusermessage.c (user_message): fix callback argument which
	        is of type SfiChoice, not an enum type.

	svn path=/trunk/; revision=1145

2003-06-17  Tim Janik 	# 0f4212037704b5f8adf61c95621823c7ef3bd7fb

	add snet scripts to modules menu.

	Tue Jun 17 04:32:34 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (popup_entries): add snet scripts to
	        modules menu.

	        * shell/modules2grid.scm: new script to align modules within a
	        synthesis network.

	svn path=/trunk/; revision=1144

2003-06-17  Tim Janik 	# 7b60968e0b627eff4eb803191c5b778b5482b752

	removed unneccessary value copying. (bse_categories_match): match

	Tue Jun 17 04:33:46 2003  Tim Janik  <timj@gtk.org>

	        * bsecategories.[hc]:
	        (categories_match): removed unneccessary value copying.
	        (bse_categories_match): match categories via predicate.

	        * bsecategories.proc: added bse-categories-match-method() to list
	        procedure categories by object.

	svn path=/trunk/; revision=1143

2003-06-16  Tim Janik 	# 7c7a66424318d046dc2bcd81cf906a979fa7bcf3

	updates

	svn path=/trunk/; revision=1142

2003-06-16  Tim Janik 	# d5ae651e12a9faca98e3be6da5654a28449c939e

	don't show internal supers.

	Mon Jun 16 20:37:38 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_reload_supers): don't show internal
	        supers.

	        * docs/site-download.texi: comment on needing texitheque when building
	        from CVS.

	svn path=/trunk/; revision=1141

2003-06-16  Tim Janik 	# afac72e19e3ae81871b752400447edf69dd67c18

	use bse_snet_intern_child() to mark internal children, since we also need

	Mon Jun 16 20:55:48 2003  Tim Janik  <timj@gtk.org>

	        * bsemidisynth.c:
	        * bsesong.c: use bse_snet_intern_child() to mark internal children,
	        since we also need to keep them alive across dispose.

	        * bsesnet.c: added bse_snet_intern_child() to mark a child internal
	        and to protected from automatic removal at dispose time.

	        * bsemidisynth.c:
	        * bsesubsynth.c: use cross-refs to keep track of snets.

	        * bsemidisynth.c (bse_midi_synth_list_proxies):
	        * bsesubsynth.c (bse_sub_synth_list_proxies):
	        * bsetrack.c (bse_track_list_proxies): collect synthesis networks (and
	        change ::snet property types) of type BseCSynth, not BseSNet (which is
	        abstract and includes songs and midi synths).

	        * bseitem.c (bse_item_gather_proxies): don't gather internal items.

	        * bseitem.c: renamed BSE_ITEM_AGGREGATE() to BSE_ITEM_INTERNAL().
	        added bse_item_set_internal() to set whether an item is internal
	        and made this flag affect whole branches.
	        added bse_item_needs_storage() and ->needs_storage(), so items can
	        refuse to get stored without flagging themselves as "aggregate".
	        don't store undo for internal items. changed callers.

	        * bseitem.proc: added bse-item-internal() to check whether an
	        item is internal.

	        * bseproject.c: made bse_project_create_intern_synth() flag the
	        newly created synth as internal.

	        * bseeditablesample.c: don't flag editable samples as aggregate.

	        * bsesnooper.c: don't flag as aggregate, just refuse storage via
	        implementing ->needs_storage().

	        * bsewave.c: don't flag as aggregate. just refuse storage for
	        empty waves by implementing ->needs_storage().

	        * bsedatapocket.c: don't flag as aggregate, implement ->needs_storage()
	        instead.

	svn path=/trunk/; revision=1140

2003-06-14  Tim Janik 	# 4c20625db536940728ce4213933445e97d514dd9

	fix compilation breakage

	svn path=/trunk/; revision=1139

2003-06-14  Tim Janik 	# a1dff5343dcb72dceeb17dda8c6179b8ea4230fe

	compilation fixup

	svn path=/trunk/; revision=1138

2003-06-13  Tim Janik 	# 636900562779e7ddd937b099f2d26e8293cc36f4

	listen to undo/ redo stack changes on the corresponding project.

	Fri Jun 13 20:11:08 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c (bst_part_dialog_set_proxy): listen to undo/
	        redo stack changes on the corresponding project.

	        * beast-gtk/bstpartdialog.c:
	        (bst_part_dialog_update_activatable): update menu items when actions
	        change their activatable state.

	Thu Jun 12 22:18:00 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c: provide dummy binding for params that lost
	        bindings (e.g. because of proxy destruction).

	svn path=/trunk/; revision=1137

2003-06-13  Tim Janik 	# 3e51e9b120614cd08e2a4ba49538ddbf4b5ee563

	use bse_item_exec(), not bse_item_exec_void() to keep the return value

	Fri Jun 13 20:01:58 2003  Tim Janik  <timj@gtk.org>

	        * bseitem.proc: use bse_item_exec(), not bse_item_exec_void() to keep
	        the return value after procedure execution.

	svn path=/trunk/; revision=1136

2003-06-13  Tim Janik 	# c6cac737293f5b3c7a72c16c49faf8c7c7daf0e7

	remove GCC option -frename-registers which is automatically selected by

	Fri Jun 13 19:37:08 2003  Tim Janik  <timj@gtk.org>

	        * acbeast.m4 (ac_vm): remove GCC option -frename-registers which is
	        automatically selected by 3.3 and not supported by earlier gcc
	        versions.

	svn path=/trunk/; revision=1135

2003-06-12  Tim Janik 	# 83ad6a2a3a3878126567c715eca344df2cee5c7a

	added undo/redo/clear-undo menu items, implement activatable interface.

	Tue Jun 10 22:08:18 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.c: added undo/redo/clear-undo menu items,
	        implement activatable interface.

	svn path=/trunk/; revision=1134

2003-06-12  Tim Janik 	# bfa6583abe8e4a531c633ba9f2151f3407c40341

	renamed bse_item_exec_void_proc() to bse_item_exec_void().

	Tue Jun 10 22:08:18 2003  Tim Janik  <timj@gtk.org>

	        * bseitem.c: renamed bse_item_exec_void_proc() to bse_item_exec_void().

	        * bseitem.proc: added undo, redo, clear-undo, undo-depth and redo-depth
	        procedures.

	svn path=/trunk/; revision=1133

2003-06-10  Tim Janik 	# e209b015c0fd0c01ca34a230b0fd35b3cf59d7e5

	update

	svn path=/trunk/; revision=1132

2003-06-09  Tim Janik 	# 810f48d460d15884487cdcbbeba441efce1ad496

	undo group selection operations and moves/resizes.

	Mon Jun  9 18:07:50 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianorollctrl.c: undo group selection operations and
	        moves/resizes.

	svn path=/trunk/; revision=1131

2003-06-09  Tim Janik 	# 407fed0f72d0200ee4312cd5de7eb94de5d6127f

	allocate part ids in LIFO scheme to provide correct ids for undo state

	Mon Jun  9 18:08:27 2003  Tim Janik  <timj@gtk.org>

	        * bsepart.[hcp]*: allocate part ids in LIFO scheme to provide correct
	        ids for undo state rollbacks. added bse_part_query_note() and implemented
	        undo for modifying procedures.

	svn path=/trunk/; revision=1130

2003-06-09  Tim Janik 	# 0d57fc36ca6363bf87da3770604c0edddab354ce

	BseWave undo fixup, we now support full undo on waves by keeping

	Mon Jun  9 03:50:49 2003  Tim Janik  <timj@gtk.org>

	        * BseWave undo fixup, we now support full undo on waves by keeping
	        referenced data handles in memory.

	        * bseitem.c:
	        (bse_item_backup_to_undo): backup to BSE_STORAGE_DBLOCK_CONTAINED storage,
	        so it may later be turned readable.
	        (bse_item_push_undo_storage): turn the undo storage readable instead of
	        just handing on text, this keeps data handles intact.
	        (undo_restore_item): restore item from BseStorage instead of just text.

	        * bsestorage.[hc]: added DBLOCK storage mode which keeps data handle
	        references in memory.
	        added bse_storage_turn_readable() to read out a previously written to
	        storage (requires DBLOCK mdoe).
	        reorganized data handle parsing code somewhat, got rid of half-baked
	        bse_storage_mem_flush().

	svn path=/trunk/; revision=1129

2003-06-08  Tim Janik 	# 66935b0bba3b7fdd9735425d6418c0f347af73dc

	error cosmetics.

	Sun Jun  8 19:56:27 2003  Tim Janik  <timj@gtk.org>

	        * bseitem.c:
	        * bseproject.c:
	        * bsestorage.[hc]: error cosmetics.

	svn path=/trunk/; revision=1128

2003-06-08  Tim Janik 	# d9f770b76caf7bf946057efa186bf2ac1df49e40

	error cosmetics.

	Sun Jun  8 19:56:11 2003  Tim Janik  <timj@gtk.org>

	        * sfistore.[hc]: error cosmetics.

	svn path=/trunk/; revision=1127

2003-06-08  Tim Janik 	# 3bfd200c07d1b1a6b42c46ae7d28258df7e49b23

	reimplementation on top of SfiRStore and SfiWStore. added compat code for

	Sun Jun  8 17:27:15 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]: reimplementation on top of SfiRStore and SfiWStore.
	        added compat code for <=0.5.1 binary data handling, removed lots of cruft.

	        * bsebindata.[hc]: removed entirely.

	        * bseenums.[hc]: removed BseEndianType.

	        * gsldatahandle.[hc]: added osc_freq and mix_freq as fixed members to
	        data handles. changed constructors and callers accordingly.
	        cosmetic fixups to wave format strings.

	        * *.[hc]: made mix_freq, osc_freq ordering in argument lists consistent.

	        * gslloader.[hc]:
	        * gslloader-mad.c:
	        * gslloader-wav.c:
	        * gslloader-gslwave.c:
	        * gslloader-oggvorbis.c:
	        * gsldatahandle-vorbis.[hc]:
	        * gsldatahandle-mad.[hc]: provide osc_freq and mix_freq in datahandles.

	        * bse/gslcommon.c: cosmetic fixups to endianess strings.

	        * bsewave.[hc]: changed storage format, since bse_storage_parse_data_handle()
	        now stores mix_freq, osc_freq etc. all automatically.
	        left compat code in place to parse <=0.5.1 files.

	        * bsesong.proc: fix NULL termination in call to bse_container_new_child().

	        * bseproject.c: adapt to BseStorage changes. removed cruft.

	        * bsedefs.h: removed BseTokenType, there's SfiTokenType. adapt
	        BseTryStatement() to SfiStoreParser() signature.

	        * *.c: fixup code due to removal of BseTokenType and other BseStorage
	        changes.

	svn path=/trunk/; revision=1126

2003-06-08  Tim Janik 	# be147a90524392ae3d662df48604d56b77e8584d

	fixup superfluous newlines.

	Sun Jun  8 17:59:56 2003  Tim Janik  <timj@gtk.org>

	        * sfiserial.c: fixup superfluous newlines.

	        * sfistore.[hc]:
	        (sfi_rstore_new):
	        (sfi_rstore_parse_param):
	        (sfi_rstore_ensure_bin_offset):
	        (sfi_rstore_get_bin_offset):
	        (sfi_rstore_parse_binary): fixed up binary appendix position handling.
	        (sfi_rstore_parse_until): marged parse_all() and parse_rest() into this.
	        (sfi_rstore_input_fd): fixup file name.
	        (sfi_wstore_peek_text): implemented.
	        (sfi_wstore_printf):
	        (sfi_wstore_puts): update needs-break state.
	        (sfi_wstore_destroy): destroy bin data readers.

	svn path=/trunk/; revision=1125

2003-06-04  Tim Janik 	# 5596f5a1df0aa1e8fdaa276529d44a0341c60a4c

	lengthen playback time for test notes.

	Wed Jun  4 21:58:05 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianorollctrl.c (controller_piano_drag): lengthen
	        playback time for test notes.

	svn path=/trunk/; revision=1124

2003-06-04  Tim Janik 	# 7a42f282eb91ea611ee9eb6894ae2fb1682ea452

	simplify code by using BseStorage methods.

	Wed Jun  4 21:54:51 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.c:
	        * bseitem.c: simplify code by using BseStorage methods.

	        * bseprocedure.[hc]: cleaned up dead/unused code.

	        * bsestorage.[hc]: code cleanups. removed unused mechanisms.

	        * bsewave.c: adapt to bse_storage_parse_rest() changes.

	svn path=/trunk/; revision=1123

2003-06-01  Tim Janik 	# c53c9f0d451fb9e42040b54809cbac461dc4ebdd

	updates

	svn path=/trunk/; revision=1122

2003-05-31  Tim Janik 	# e1d7487194baf6304f45b8cf3861987ed5424992

	fix idle handler prio.

	Sat May 31 02:11:31 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstactivatable.c: fix idle handler prio.

	        * beast-gtk/bstapp.[hc]: added "Clear Undo" menu item, actually use BSE
	        functions for undo/redo items.

	        * beast-gtk/bstcanvassource.[ch]: update GUI in response to ::pos-x and
	        ::pos-y proeprty changes. set positions via undo-sensitive
	        bse_source_set_pos().

	        * beast-gtk/bstitemview.[hc]: added bst_item_view_refresh() to update
	        a tree view row.

	        * beast-gtk/bstsnetrouter.[hc]: bst_snet_router_event() undo-group
	        creation of a new module and setting it's position, so the module
	        doesn't jump around on the user upon undo.

	        * beast-gtk/bsttrackrollctrl.c: group undo for creation+insertion
	        of a part and part movement.

	        * beast-gtk/bsttrackview.c: properly update tree rows in response to
	        property changes. undo-group creation and name assignment of new tracks.

	        * beast-gtk/bsttreestores.[hc]: work around change notification arriving
	        after item removal. provide an interface to explicitely request updates.

	        * bstmenus.c: doh, fixup menu popup destroy function.

	        * beast-gtk/*.c: adapt to BseContainer signal changes and BseProject
	        procedure changes.

	svn path=/trunk/; revision=1121

2003-05-31  Tim Janik 	# f3e49c874d759b2b135ee3c2098b786b12981b02

	BseDataPocket and BsePart. restoring BseWave from undo only works

	Fri May 30 18:55:52 2003  Tim Janik  <timj@gtk.org>

		* implemented undo for BSE. We've got unlimited undo/redo for most
		functions now, undo is still missing out for: BseDataPocket and
		BsePart. restoring BseWave from undo only works partially.

		* bsewaverepo.proc: made load-file() and remove-wave() undo aware.

		* bseproject.proc: made create-song(), create-midi-synth(), play(),
		create-csynth(), remove-snet(), activate() and start-playback() undo
		aware. renamed ensure-wave-repo() to get-wave-repo(). added undo(),
		redo(), undo-depth(), redo-depth() and clear-undo().
		made restore-from-file() clear undo stack, because we can't maintain
		undo across merging.

		* bsesnet.proc: made create-source() and remove-source() undo aware.

		* bsesong.proc: made create-part(), remove-part(), create-track() and
		remove-track() undo aware.

		* bsesource.proc: made set-input-by-id(), unset-input-by-id(),
		set-input(), unset-input(), clear-inputs() and clear-outputs() undo
		aware. added undo-aware set-pos() to set ::pos-x and ::pos-y.

		* bsetrack.proc: changed procedures to use part link IDs.
		made insert-part(), remove-tick() and remove-link() undo aware.

		* bseitem.proc: added group-undo() and ungroup-undo() procedures for
		BSE clients to request undo grouping as well. internally we don#t open
		up actual undo groups for this, that could mess up internal state.
		instead, if group-undo() was called, everytime we're closing an undo
		group internally, we merge it with a previously queued undo group.

		* bsewaveosc.[hc]: fixed up cross links and signal reemissions.

		* bsetype.[hc]: added BSE_TYPE_PACKED_POINTER which is an undo
		implementation specific string type.

		* bsestorage.[hc]: restoring items generally does not queue undo/redo
		steps. added function to save an object entirely to memory.

		* bsetrack.[hc]: added IDs to part links.

		* bsesource.[hc]: added bse_source_backup_ichannels_to_undo(),
		bse_source_backup_ochannels_to_undo() and
		bse_source_input_backup_to_undo() which save i/o channels to undo
		without queueing subsequent redo though. added bse_source_check_input().

		* bseundostack.[hc]: new files, implementing a simple undo stack.

		* bsecontainer.[hc]: added undo aware functions to create/remove
		and uncross items. renamed ::item-removed to ::item-remove.

		* bseglue.[hc]:
		(bglue_proxy_set_property): set properties undo-aware.

		* bseobject.[hc]: changed ::uname setter. basically, we have a new uname
		convention now, unames may not contain ':' and the first character (if
		any) must be >=\007.
		fixed up reemission of property notify signals.

		* bseprocedure.[hc]: added bse_procedure_collect_input_args() which
		just collects procedurer call args from the stack.

		* bseproject.[hc]: added undo/redo stacks and ::dirty property.
		::dirty doesn't work like expected currently, but provides reliable
		change notification for undo changes.

		* bseitem.[hc]: added bse_item_get_toplevel(), and facilities
		to queue procedure calls to undo/redo stack. added bse_item_undo_open()
		and bse_item_undo_close() which are used to group any undoable
		operation. added ->get_undo() method to retrieve the current
		undo stack. fixed up bse_item_get_project() to work on projects
		as well. cleaned up procedure code.
		added undo aware property setters, the current implementation
		ignores resetting a property to a value it already has (for a limited
		property set at least), which saves the user lots of undo operations.

		* *.c: changed g_object_set() to undo aware bse_item_set() where
		appropriate and marked the intentionaly unchanged rest with /* no undo */

	svn path=/trunk/; revision=1120

2003-05-27  Tim Janik 	# 0ef4b577240b96dc3628ed958024fe46f5939c68

	updates

	svn path=/trunk/; revision=1119

2003-05-27  Tim Janik 	# 5c1308e23bfc213b7095b2bd2d28920a070f3f3c

	updates

	svn path=/trunk/; revision=1118

2003-05-27  Tim Janik 	# d6567968ff8c5ae37db2ffb073d2685138e0a3ce

	applied patch from Sam Hocevar <sam@zoy.org> which fixes wrong error

	Tue May 27 03:33:52 2003  Tim Janik  <timj@gtk.org>

	        * bseladspa.c: applied patch from Sam Hocevar <sam@zoy.org> which
	        fixes wrong error messages and crashes on some of the cmt.so
	        plugins.
	        added cosmetic fixups, refined debugging messages, minor optimizations.

	        * bseladspa.[hc]: put code under LGPL.

	svn path=/trunk/; revision=1117

2003-05-27  Tim Janik 	# 59c3322948a255002a5cc7ceab56954d09509468

	updates

	svn path=/trunk/; revision=1116

2003-05-27  Tim Janik 	# c78d72b8e36f24d923b39f6561a62b4beaab0b86

	gather proxies with bse_item_gather_proxies_typed(), now that BseSNet is

	Tue May 27 02:57:00 2003  Tim Janik  <timj@gtk.org>

	        * bsetrack.c (bse_track_list_proxies):
	        * bsesubsynth.c (bse_sub_synth_list_proxies):
	        * bsewaveosc.c (bse_wave_osc_list_proxies):
	        * bsemidisynth.c (bse_midi_synth_list_proxies):
	        gather proxies with bse_item_gather_proxies_typed(), now
	        that BseSNet is abstract and the type checks don't need
	        to resort to BSE_TYPE_SNET== hacks anymore.

	        * bseitem.c (bse_item_gather_proxies_typed): don't gather
	        ancestors of the originating item (unless allow_ancestor
	        is passed as TRUE).

	svn path=/trunk/; revision=1115

2003-05-27  Tim Janik 	# b025ca261b8ac76759f623b04c7caf627d75173d

	don't remove snets if the project isn't prepared

	svn path=/trunk/; revision=1114

2003-05-27  Tim Janik 	# e1b68ab795e85ccec1d2824a2963e755438ab50f

	support removal of snets.

	Tue May 27 02:23:01 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: support removal of snets.

	svn path=/trunk/; revision=1113

2003-05-27  Tim Janik 	# be0b643354f9d83f3196106d80b428957ab36a69

	added bse-project-remove-snet.

	Tue May 27 02:22:37 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.proc: added bse-project-remove-snet.

	svn path=/trunk/; revision=1112

2003-05-27  Tim Janik 	# 367e710b9f687b58ba5efdcd5b5985a42af26f20

	added this file to tell gcc to link in C++ mode so C++ modules can be

	Tue May 27 02:02:41 2003  Tim Janik  <timj@gtk.org>

	        * shell/cxxdummy.cc: added this file to tell gcc to link in C++ mode
	        so C++ modules can be loaded dynamically.

	svn path=/trunk/; revision=1111

2003-05-26  Tim Janik 	# e2d65c9e941668a12bdeec3e9ba03b9367461c62

	added bse-server-register-blocking to allow for blocking plugin and script

	Mon May 26 13:56:16 2003  Tim Janik  <timj@gtk.org>

	        * shell/bse-scm-glue.boot: added bse-server-register-blocking to allow
	        for blocking plugin and script registration in scripts.

	        * shell/bsescminterp.[hc]: upgrade to guile-1.6. fixed up signal connect
	        implementation, added bse-signal-disconnect.

	        * NEWS:
	        * README:
	        * configure.in:
	        * docs/site-download.texi: depend on guile-1.6.

	        * acbeast.m4: added MC_ASSERT_NONEMPTY() to verify a program has been
	        found.

	        * beast-gtk/bstapp.c: update menu state upon playback status changes.

	svn path=/trunk/; revision=1110

2003-05-26  Tim Janik 	# 94f100278133b05db869801db16325dfd8cee7d1

	warning cosmetics.

	Tue May 27 01:36:56 2003  Tim Janik  <timj@gtk.org>

	        * bseglue.c (bglue_proxy_set_property): warning cosmetics.

	        * bseproject.proc: added bse-project-is-active.

	svn path=/trunk/; revision=1109

2003-05-26  Tim Janik 	# 1e9307562b5bd3288994b76458336cc0a3646457

	update version to 0.5.2-rc1 already, to properly reflect file format

	Mon May 26 02:40:39 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: update version to 0.5.2-rc1 already, to properly
	        reflect file format changes upon saving.

	svn path=/trunk/; revision=1108

2003-05-26  Tim Janik 	# 7a318c65a58d79ed3d4fc51e7a6912184d072731

	updates

	svn path=/trunk/; revision=1107

2003-05-26  Tim Janik 	# be9b8eae41f69a1f6aa68076a2868fd5f095b558

	nuke operate/can_operate cruft, implement activatable interface and

	Mon May 26 01:52:10 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: nuke operate/can_operate cruft, implement
	        activatable interface and majorly cleanup activation logic.

	        * beast-gtk/bstpartview.[hc]:
	        * beast-gtk/bstsongshell.[hc]:
	        * beast-gtk/bsttrackview.[hc]:
	        * beast-gtk/bstwaveview.[hc]:
	        * beast-gtk/bstwavereposhell.[hc]:
	        * beast-gtk/bstitemview.[hc]: switch over to a proper implementation
	        of BstActivatable.

	        * beast-gtk/bstdefs.h: remove BST_OP_ enumeration. only assign ID
	        regions for the different activatable widgets now.

	        * beast-gtk/bstsupershell.[hc]: provide dummy implementation of
	        BstActivatable so super shells can generically be activated.

	        * beast-gtk/bstactivatable.[hc]: new interface, meant to be implemented
	        by widgets that can perform enumerated actions.

	        * bstsnetshell.c: removed cruft.

	        * beast-gtk/bstmenus.c: fixup setting callback_action for GtkItemFactory
	        items, so gtk_item_factory_get_widget_by_action() works again.

	svn path=/trunk/; revision=1106

2003-05-25  Tim Janik 	# 70713283e0f6bb14532e004c3e28fc3ba846ce89

	allow abstract types as well

	svn path=/trunk/; revision=1105

2003-05-25  Tim Janik 	# cf823285d2ebb278b53339062a568504ff90d3e1

	update menu entries to say "Custom Synth" and create a BseCSynth since

	Sun May 25 15:01:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: update menu entries to say "Custom Synth"
	        and create a BseCSynth since BseSNet became abstract.

	        * beast-gtk/bstplayback.c: BseCSynth fixups.

	svn path=/trunk/; revision=1104

2003-05-25  Tim Janik 	# b001888f4900b1c5a18ea7495e4b3a821b3cfcbe

	update menu entries to say "Custom Synth" and create a BseCSynth since

	Sun May 25 15:01:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.[hc]: update menu entries to say "Custom Synth"
	        and create a BseCSynth since BseSNet became abstract.

	        * beast-gtk/bstplayback.c: BseCSynth fixups.

	svn path=/trunk/; revision=1103

2003-05-25  Tim Janik 	# 730df0ec23c1da23de9e0e03b1806530e9556067

	added bse_compat_rewrite_type_name() to handle types from different BSE

	Sun May 25 15:04:37 2003  Tim Janik  <timj@gtk.org>

	        * bsecompat.[hc]: added bse_compat_rewrite_type_name() to handle
	        types from different BSE file versions.
	        handle BseSNet->BseCSynth for 0.5.2.

	        * bsecontainer.c: inhibit restauration of abstract child types.

	        * bsemididevice.[hc]:
	        * bsecontainer.[hc]:
	        * bsepcmdevice.[hc]:
	        * bseobject.[hc]:
	        * bsesource.[hc]:
	        * bsesuper.[hc]:
	        * bseitem.[hc]: flagged types appropriately as abstract.

	        * bsesnet.[hc]: turned BseSNet into an abstract type.

	        * bsecsynth.[hc]: new type, deriving from BseSNet to implement
	        custom (user) synth functionality.

	        * bseproject.proc: provide csynth instead of snet procedures now.

	        * bsequery.c: indicate abstract types.

	        * bsetype.[hc]: added bse_type_register_abstract().

	        * bsestorage.[hc]: implemented bse-version handling.

	svn path=/trunk/; revision=1102

2003-05-25  Tim Janik 	# 7c62060e50293d48b231edd00299100181608e21

	shut up

	svn path=/trunk/; revision=1101

2003-05-23  Tim Janik 	# c14ff2b8acafa690a22d05f42eff49f6853a477d

	url/uref fix

	svn path=/trunk/; revision=1100

2003-05-23  Tim Janik 	# 1518f2e9eac5f321288488764665c7d402205535

	SOS link update.

	Fri May 23 20:18:29 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: SOS link update.

	        * docs/faq.texi: added anchors, added MIDI howto entry.

	        * beast-gtk/bstapp.c: cleanups.

	        * beast-gtk/bstsupershell.c: virtualize parent notebook label name,
	        cleanups.

	        * beast-gtk/bstwavereposhell.c: set parent notebook label to "Waves".

	svn path=/trunk/; revision=1099

2003-05-20  Tim Janik 	# 2495bcf734b0f0ef3dba63598a0e0a4566672414

	update

	svn path=/trunk/; revision=1098

2003-05-20  Tim Janik 	# a2e8905ac222f251656b9508b255768cf5c7bf4d

	moved here from bsemagictest.c.

	Tue May 20 18:39:03 2003  Tim Janik  <timj@gtk.org>

	        * tests/magictest.c: moved here from bsemagictest.c.

	        * tests/mathtests.c: moved here from gsltests.c.

	        * tests/testfft.c: moved here from gslffttest.c.

	        * tests/testwavechunk.c: moved here from gslwchunk.c.

	        * tests/Makefile.am: added testwavechunk testfft to TESTS so
	        make check runs these automatically.

	        * removed: bsemagictest.c, gsltests.c, gslffttest.c and gslwchunk.c.

	svn path=/trunk/; revision=1097

2003-05-20  Tim Janik 	# 5d3364a159e1e3985a82043d216a993eae2c8de0

	added test program for ogg/vorbis file cutting.

	Tue May 20 17:46:12 2003  Tim Janik  <timj@gtk.org>

	        * tests/cutvorbis.c: added test program for ogg/vorbis file cutting.

	        * tests/: new directory to accumulate BSE related test programs.

	svn path=/trunk/; revision=1096

2003-05-20  Tim Janik 	# b5fc85089c796854399d48fe9c53afe4fa1f277b

	code and configure adoptions to gcc-3.3 and g++-3.3. removed

	Tue May 20 13:04:30 2003  Tim Janik  <timj@gtk.org>

	        * code and configure adoptions to gcc-3.3 and g++-3.3.
	        removed -fno-strict-aliasing, -ffor-scope, -fstrength-reduce,
	        -fexpensive-optimizations, -frerun-cse-after-loop, -frerun-loop-opt.
	        added -frename-registers, short of specifying -O3.

	svn path=/trunk/; revision=1095

2003-05-20  Tim Janik 	# 83ddf8b1a4b8de4094422be36253b631284ecf35

	port code to gcc-3.3.

	Tue May 20 15:08:01 2003  Tim Janik  <timj@gtk.org>

	        * port code to gcc-3.3.

	        * gsldefs.h: provide gcc specific prefetch macros and rename _EXPECT()
	        and _REJECT() macros to _EXPECT1() and _EXPECT0() respectively. removed
	        parenthesis around macro arguments to catch inline assignments.

	        * gslcommon.[hc]: allow precision specification with progress functions.

	svn path=/trunk/; revision=1094

2003-05-20  Tim Janik 	# f3c805ee969f303a99b9a9bdd6fbf8fc9ef976a4

	adapted code to compile with gcc-3.3 and g++-3.3.

	Tue May 20 15:11:19 2003  Tim Janik  <timj@gtk.org>

	        * adapted code to compile with gcc-3.3 and g++-3.3.

	svn path=/trunk/; revision=1093

2003-05-18  Tim Janik 	# 96dd54a27721d137a0e213aa697d70e031cb0d49

	libtool 1.4.3 updates.

	Sun May 18 05:29:13 2003  Tim Janik  <timj@gtk.org>

	        * config.guess, config.sub: libtool 1.4.3 updates.

	svn path=/trunk/; revision=1092

2003-05-18  Tim Janik 	# c9c001bb4c183a384f27f9cb62185037de64f173

	added bse-rec-get, bse-rec-set, bse-rec-new and bse-rec-print to allow

	Sun May 18 05:16:26 2003  Tim Janik  <timj@gtk.org>

	        * shell/bsescminterp.[hc]: added bse-rec-get, bse-rec-set,
	        bse-rec-new and bse-rec-print to allow scheme code to properly
	        deal with our record types.

	svn path=/trunk/; revision=1091

2003-05-18  Tim Janik 	# fe0bc89ba8e3b8e71c79025f7d3280d957b8f875

	added bse-string-extract-number() to deal with command line argumens and

	Sun May 18 04:55:45 2003  Tim Janik  <timj@gtk.org>

	        * bseprocedure.proc: added bse-string-extract-number() to deal with
	        command line argumens and midi notes.

	        * gslcommon.[hc]: added simple progress api for comand line apps.

	        * gsldatahandle-vorbis.[hc]: changed API, now a data handle relates
	        to a logical ogg/vorbis stream specified by either the logical stream
	        number or a zero-offset relative file section.

	        * gsldatautils.h: reduced peek buffer size from 8192 to 2048 for
	        better cache utilization.

	        * gslloader-gslwave.c: support inlined (binary appendix) raw sample data
	        via "rawlink" key word, and added support for inlined ogg/vorbis sample
	        data via "ogglink". adjust binary appendix syntax parsing.

	        * gslwave.header: minor description fixes, describe ogglink and rawlink.

	        * gslvorbis-enc.[hc]: Ogg/Vorbis encoder API front end.

	        * gslvorbis-cutter.[hc]: Ogg/Vorbis stream cutting implementation
	        currently supports tail cutting at sample, packet and page boundaries.

	svn path=/trunk/; revision=1090

2003-05-18  Tim Janik 	# 2b5833818865f0c3ede4681a842b31d26cdc72de

	re-commit as *text* file

	svn path=/trunk/; revision=1089

2003-05-18  Tim Janik 	# 8c9d65da0a29b51cc23986ace4948947146a4fae

	attempt binary -> text conversion (stupid CVS)

	svn path=/trunk/; revision=1088

2003-05-18  Tim Janik 	# 854bc0f0d47f630de68d3856c3c074abe6c6f24a

	syntax fixup for inlined binary data: "binary-appendix".

	Sun May 18 05:05:58 2003  Tim Janik  <timj@gtk.org>

	        * sfistore.c: syntax fixup for inlined binary data: "binary-appendix".

	svn path=/trunk/; revision=1087

2003-05-11  Tim Janik 	# f47eabe60e73c6e22b78330761af868742d1a29e

	take away focus from unmapped children (gtk bug workaround).

	Sun May 11 20:07:05 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkdialog.c (gxk_dialog_show): take away focus from
	        unmapped children (gtk bug workaround).

	        * beast-gtk/bsttracksynthdialog.c (bst_track_synth_dialog_init):
	        * beast-gtk/bstfiledialog.c (bst_file_dialog_init):
	        set GXK_DIALOG_PRESERVE_STATE flag.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_idle_unrealize_widget().

	        * beast-gtk/gxk/gxkdialog.[hc]: set window manager role from type name.
	        added GXK_DIALOG_PRESERVE_STATE to keep size across hiding windows.

	svn path=/trunk/; revision=1086

2003-05-11  Tim Janik 	# 37ab4c1732e3db88b284c9cbfa3cf5e73dccf3c0

	updates

	svn path=/trunk/; revision=1085

2003-05-11  Tim Janik 	# d2502460ab210d440e26bb39ef3a505682201eff

	fix directory errors

	svn path=/trunk/; revision=1084

2003-05-11  Tim Janik 	# fc94a7c51e465a9242d76e84adf6fe38c6e3a700

	added GSL_ERROR_IS_DIR and BSE_ERROR_FILE_IS_DIR errors. return

	Sun May 11 18:45:40 2003  Tim Janik  <timj@gtk.org>

	        * gsldefs.h:
	        * bseenums.[hc]:
	        * gslcommon.[hc]: added GSL_ERROR_IS_DIR and BSE_ERROR_FILE_IS_DIR
	        errors. return GSL_ERROR_IS_DIR for EISDIR from gsl_error_from_errno().
	        special case GSL_ERROR_IS_DIR in gsl_check_file().

	svn path=/trunk/; revision=1083

2003-05-11  Tim Janik 	# f2bfe0dfe8485d02b083165032ab9c9edf80488d

	added stubs for bse-item-get.

	Sun May 11 15:54:44 2003  Tim Janik  <timj@gtk.org>

	        * shell/bse-scm-glue.boot: added stubs for bse-item-get.

	        * beast-gtk/bstparamview.c (bst_param_view_rebuild): show non-writable
	        fields only for --hints.

	        * shell/bsescminterp.c: simplify smob handling.
	        (bse_scm_glue_get_prop):
	        (bse_scm_glue_set_prop):
	        (bse_scm_signal_connect): fix proxy type assertions.

	svn path=/trunk/; revision=1082

2003-05-11  Tim Janik 	# 7de9e3eaa19d0fd7a81d8cacd5f0c43907d66a08

	removed ::seqid-changed signal, added readable property ::seqid that also

	Sun May 11 14:22:12 2003  Tim Janik  <timj@gtk.org>

	        * bseitem.c: removed ::seqid-changed signal, added readable property
	        ::seqid that also emits change notification.

	svn path=/trunk/; revision=1081

2003-05-11  Tim Janik 	# 7368fab8a2c80821634dfc1e8c5a7c2cd8377bb6

	fix NULL/void returns.

	Sun May 11 15:35:47 2003  Tim Janik  <timj@gtk.org>

	        * sfigluecodec.c (encoder_process_message): fix NULL/void returns.

	svn path=/trunk/; revision=1080

2003-05-11  Tim Janik 	# 1a21b0fdc94397ecb5bde262d293487ea409249d

	supply @NOTDVLBUILD@ Makefile substitution and IF_NOTDVLBUILD automake

	Sun May 11 04:36:05 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: supply @NOTDVLBUILD@ Makefile substitution and
	        IF_NOTDVLBUILD automake conditional.

	        * beast-gtk/Makefile.am: fixup dependancies (automake manages to
	        forget about previous values if += is used).

	        * beast-gtk/bsttrackview.c: auto popup synth selection dialog
	        for Synth cell renderer editing.

	        * beast-gtk/gxk/gxkcellrendererpopup.[hc]: added auto-popup proeprty
	        to automatically popup custom dialog when edits start.

	        * beast-gtk/gxk/gxkutils.c: support auto popups.

	svn path=/trunk/; revision=1079

2003-05-11  Alper Ersoy 	# 248beb830f2fc2817ef0a608d200c0e3155b56f2

	added rule that copies texi files from parent directory. adjusted

	Sat May 10 21:33:25 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/Makefile.am: added rule that copies texi files from
	        parent directory. adjusted prerequisites from html and site rules.
	        added a missing backslash in html rule.

	svn path=/trunk/; revision=1078

2003-05-10  Tim Janik 	# 5a041cf87a3d5293be08e4e4fb33ffee879bdca4

	disable texitheque checks if --enable-devel-rules is set to "no" (non

	Sat May 10 18:08:18 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: disable texitheque checks if --enable-devel-rules
	        is set to "no" (non autogen.sh builds).

	svn path=/trunk/; revision=1077

2003-05-10  Tim Janik 	# 452436e5e69523489cf26b472e614f002b9a2770

	%.h): enable rule unconditionally since it relies only on glib-mkenums

	Sat May 10 18:13:37 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am (%.enums: %.h): enable rule unconditionally since
	        it relies only on glib-mkenums which should always be available.

	svn path=/trunk/; revision=1076

2003-05-10  Tim Janik 	# db91f223b87603bd8564789645d359a0e231d84d

	use new file selection code. (bst_update_can_operate):

	Sat May 10 15:50:04 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstapp.c: use new file selection code.
		(bst_update_can_operate):
		(bst_update_can_operate_unqueue): support can_operate updates
		on just BstItemView objects.

		* beast-gtk/bstfiledialog.[hc]: reimplementation of the file selection
		code. we now use a GxkDialog as toplevel, reuse GtkFileSelection
		widgets by reparenting them. Added a seperate BST_SAMPLE_PATH
		browser for fast loading of samples, and special cased the various
		loading/saving applications beast has.

		* beast-gtk/bstitemview.[hc]: use new child-list-wrapper code to
		maintain container children in a tree store. moved item_type field
		from instance to class and changed derived widgets. wrap item store
		into a sortable model, adapt code which relied on model specifics.

		* beast-gtk/bsttrackview.[hc]: fixups due to BstItemView changes, added
		popup dialog for synth selection cell. adapted code to using a sortable
		model view BstItemView.

		* beast-gtk/*.c: fix code duplicating signal disconnections
		using the "any_signal" keyword, since "any_signal" will disconnect
		all existing connections.

		* beast-gtk/*.[hc]: renamed BST_DVL_EXT to BST_DBG_EXT as
		"debug-extensions" is a more apropriate name since it enables unusual
		and harmfull behaviour that's only usefull for debugging purposes.

		* beast-gtk/bstutils.c: allow title setting without proxy for
		bst_window_sync_title_to_proxy().

		* beast-gtk/bstwaveview.[hc]: support new wave seleciton dialog,
		loading of samples from BST_SAMPLE_PATH and changing of editability.

		* beast-gtk/bsttracksynthdialog.[hc]: new dialog, offering an item
		list from a BseProxySeq, and loaded waves. these are the items
		selectable as synth input for a BseTrack.

		* beast-gtk/bsttreestores.[hc]: implementations of GtkTreeStores for
		proxy lists, proxy children and file crawler results.

		* beast-gtk/bstwavedialog.[hc]: files removed, purpose has been taken
		over by BstFileDialog.

		* beast-gtk/gxk/gxkcellrendererpopup.[hc]: allow for programmatic
		popdown.

		* beast-gtk/gxk/gxkutils.[hc]: added convenience function to add a
		simple page to a notebook, added gxk_tree_view_set_editable() which
		can unset the editable flag of any cell renderers within the tree.
		added gxk_file_selection_split() which allowes for reparentation of
		the widget groups from a GtkFileSelection dialog.
		use gxk_file_selection_split() to implement gxk_file_selection_heal().

	svn path=/trunk/; revision=1075

2003-05-10  Tim Janik 	# 742987fa389c3d1cc5245326a7c2830691384559

	don't override previously set prgnames.

	Tue May  6 04:17:19 2003  Tim Janik  <timj@gtk.org>

	        * bsemain.c (bse_init_intern):
	        (bse_init_async): don't override previously set prgnames.

	        * bserecords.sfidl: added SampleFileInfo record.

	        * bsewaverepo.proc: provide bse-sample-file-info() to retrive
	        info about a sample file prior to loading.

	svn path=/trunk/; revision=1074

2003-05-10  Tim Janik 	# 83d217ba808fa3232c31342422c06e4d544ce369

	added SfiFileCrawler, a new mechanism to construct a file list for a given

	Tue May  6 04:17:19 2003  Tim Janik  <timj@gtk.org>

	        * sfifilecrawler.[hc]: added SfiFileCrawler, a new mechanism to
	        construct a file list for a given search path incrementally.

	svn path=/trunk/; revision=1073

2003-05-09  Tim Janik 	# 09c9f7aee676292a371d28e97f0b9d4b131d8ddd

	clean sedfix cruft

	svn path=/trunk/; revision=1072

2003-05-09  Tim Janik 	# ad8ec3a9e958bd52d1466d47e96f42dc7ac2f337

	don't use undefined variables

	svn path=/trunk/; revision=1071

2003-05-09  Alper Ersoy 	# fc3f69da0e910a685b93f208d6aac7c258fc9511

	removed checks for documentation generation tools and added a test for

	Thu May  8 13:21:10 2003  Alper Ersoy  <dirt@gtk.org>

	        * configure.in: removed checks for documentation generation
	        tools and added a test for texitheque.

	        * docs/Makefile.am: removed utils from $SUBDIRS, and
	        teximacros.texi from $texi_docs.

	        * docs/generated/Makefile.am: replaced most of the document
	        generation functionality with texitheque.  removed navigation.xsl from
	        site rules.

	        * beast-gtk/Makefile.am: substituted scankeys with texitheque
	        and removed all occurrences of scankeys.

	        * beast-gtk/scankeys.c:
	        * docs/teximacros.texi:
	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl:
	        * docs/generated/markup.dtd:
	        * docs/generated/log2texi.sh:
	        * docs/generated/navigation.xsl:
	        * docs/generated/reference-filter.pl:
	        * docs/generated/reference-index.xsl:
	        * docs/generated/texinfo.dtd:
	        * docs/utils/*: removed due to being deprecated by texitheque.

	svn path=/trunk/; revision=1070

2003-05-06  Tim Janik 	# 1f86c230fd5c817b8a09047aac088d9ca5370097

	minor doc fixes

	svn path=/trunk/; revision=1069

2003-05-06  Tim Janik 	# 47e600bab8f167bb5da16733842ab45b03968a0e

	added property to toggle display of the popup button, fixed popup/popdown

	Tue May  6 15:43:12 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/gxk/gxkcellrendererpopup.[hc]: added property
		to toggle display of the popup button, fixed popup/popdown
		logic in popup button clicked handler.

		* beast-gtk/gxk/gxkdialog.[hc]: added gxk_dialog_set_focus()
		and gxk_dialog_set_default() which control the widgets that
		are getting the focus and default upon every new popup.
		prepared for later usage of window groups via
		gtk_window_group_add_window() which unfortunately seems to
		be broken at least in gtk+-2.2.1.

		* beast-gtk/bststest.c:
		* beast-gtk/bstprocbrowser.c:
		* beast-gtk/bsttrackview.c:
		* beast-gtk/bstwaveeditor.c:
		* beast-gtk/bstitemview.c: adapt tree column creations.

		* bstutils.[hc]: removed gtk_widget_viewable*() API.
		fixed resetting behaviour of bst_window_sync_title_to_proxy().

		* beast-gtk/gxk/gxklistwrapper.c: provide dummy versions
		of iface->iter_children() and iface->iter_parent(), as
		sort models demand these funcitons exist.

		* beast-gtk/gxk/gxkutils.[hc]: moved the
		::viewable-changed signal with assorted functions
		gxk_widget_viewable_changed() and gxk_widget_viewable()
		from bstutils.[hc] to here.
		added gxk_convert_latin1_to_utf8() and gxk_filename_to_utf8()
		which don't produce annoying warnings like the GLib variants.
		added a @column_flags argument to gxk_tree_view_add_column(),
		gxk_tree_view_add_text_column(), gxk_tree_view_add_popup_column()
		and gxk_tree_view_add_toggle_column(). simplified tree column
		creation code, work around GtkCellRendererText focus problems
		by using GxkCellRendererPopup which gets it right.
		work aorund gtk_tree_view_set_cursor() producing an assertion
		if used with an empty sort model.
		(gxk_cell_editable_is_focus_handler): added a call to
		gtk_cell_editable_remove_widget() after the editing is done,
		so related GUI elements are properly taken down.
		(gxk_file_selection_heal): return the newly created main vbox,
		added life cycle management which allowes reparentation of the
		file selection contents, minor cosmetic fixups.

		* beast-gtk/*.c: changed gxk_tree_view_add*() callers.

	svn path=/trunk/; revision=1068

2003-05-05  Tim Janik 	# d585cad789cbfc9da9a30f6756dff9c6049507f5

	fix proxy snet usage counting.

	Mon May  5 04:02:49 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_set_snet): fix proxy snet
	        usage counting.

	svn path=/trunk/; revision=1067

2003-05-05  Tim Janik 	# 0d8611e2100aa60e603aed5d4ed70a335c4328ce

	canonify signal names before attempting matches, fixes remaining "spurious

	Mon May  5 03:52:24 2003  Tim Janik  <timj@gtk.org>

	        * bseglue.c (bglue_proxy_request_notify): canonify signal names before
	        attempting matches, fixes remaining "spurious signal" warnings. minor
	        optimizations.

	svn path=/trunk/; revision=1066

2003-05-05  Tim Janik 	# 9899152f3b298d3e47a577d57b7f71a3820e0f8f

	added sfi_ring_test_length(l) to figure whether a ring has >=l elements in

	Mon May  5 03:16:51 2003  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: added sfi_ring_test_length(l) to figure whether
	        a ring has >=l elements in at most O(l) time.
	        (sfi_ring_free_deep): adapted to g_[s]list_free_deep().

	        * sfiustore.[hc]: added SfiUPool which is simply an SfiUStore
	        without a value per key, i.e. a simple id hash set. currently
	        wastefully implemented, should be optimized at some point.

	        * glib-extra.[hc]: added g_list_free_deep() and g_slist_free_deep().

	        * sfiglueproxy.[hc]: export sfi_glue_proxy_get_signal_quark() to fetch
	        a quark from a cononified signal name.
	        removed _sfi_glue_proxy_request_notify() which is implemented in
	        sfiglue.c now.
	        (delete_signal):
	        (fetch_signal): use _sfi_glue_proxy_request_notify() instead of
	        accessing the vtable directly.
	        (_sfi_glue_signal_find_closures):
	        (sfi_glue_signal_disconnect):
	        (sfi_glue_proxy_weak_unref): don't demand create a local proxy struct.
	        (sfi_glue_proxy_cancel_matched_event): filter signal events from
	        disconnected signals and flag them for cancellation.
	        (_sfi_glue_proxy_dispatch_event): handle cancelled signal events by
	        just acknowledging the notification id.

	        * sfiglue.[hc]: moved _sfi_glue_proxy_request_notify() here from
	        sfiglueproxy.c. for disconnecitons, we now filter out the local event
	        queue after calling remote.

	svn path=/trunk/; revision=1065

2003-04-30  Tim Janik 	# c5fe2828547a73b08dc45989ef389f6492cc36c4

	correct comments

	svn path=/trunk/; revision=1064

2003-04-29  Tim Janik 	# 14b89888cd49eb0e74f164727e703c5307d1d522

	updates

	svn path=/trunk/; revision=1063

2003-04-29  Tim Janik 	# 9033a5ae90cbd15ade93cb6dd858d8f402712bb7

	updates, dedicated to alpers TODO maintenance

	svn path=/trunk/; revision=1062

2003-04-28  Tim Janik 	# d06137cfb7d0a654fa3accadcf1b5224164e00e0

	fixup popdown connection which needs to be on the label.

	Tue Apr 29 01:31:41 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkcellrendererpopup.c:
	        (gxk_cell_renderer_popup_start_editing): fixup popdown connection which
	        needs to be on the label.

	svn path=/trunk/; revision=1061

2003-04-28  Tim Janik 	# d0091110943ebcd7a3330514f7c71e0e46f44749

	added handling and setup of a popup_callback. renamed

	Mon Apr 28 22:13:19 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.[hc]:
	        (gxk_tree_view_add_popup_column): added handling and setup of
	        a popup_callback.
	        renamed gxk_cell_editable_focus_out_handler() to
	        gxk_cell_editable_is_focus_handler(), this function now handles
	        focussing on notify::is-focus signal emissions.

	        * beast-gtk/bsttrackview.c (track_view_synth_popup): handle popup
	        of patch selection dialog.

	        * beast-gtk/bsttrackroll.c (bst_track_roll_start_edit): handle
	        editing aborts by catching notify::is-focus signals.

	        * beast-gtk/bstitemview.c (bst_item_view_get_type): GType updates.

	        * beast-gtk/gxk/gxkcellrendererpopup.[hc]: added popup signal. make
	        popup button insensitive if no popup handler is present.
	        (gxk_cell_renderer_popup_start_editing): don't chain to parent, but
	        create the entry ourselves and handle editing aborts with
	        gxk_cell_editable_is_focus_handler() on notify::is-focus.
	        (gxk_cell_renderer_popup_dialog): new function to let the cell
	        renderer popup and manage user supplied dialogs during edits.

	svn path=/trunk/; revision=1060

2003-04-28  Tim Janik 	# 4a4ac556c35c4aa24abbe3b9d7c7d60cef7397d8

	added exp() timing loops.

	Mon Apr 28 22:15:52 2003  Tim Janik  <timj@gtk.org>

	        * gsltests.c (main): added exp() timing loops.

	        * gslcommon.c (gsl_init): properly initialize random numbers by
	        calling srand() with usec fractions.

	svn path=/trunk/; revision=1059

2003-04-28  Tim Janik 	# 8bad8dbba640d37601c5c432e45c0e940c0fe304

	updates

	svn path=/trunk/; revision=1058

2003-04-28  Tim Janik 	# 49e3b3ca792e2c768c844191e14f9c9c956a30a3

	updates

	svn path=/trunk/; revision=1057

2003-04-28  Tim Janik 	# 01205b82b745085d2a9549ee88856614dcaae0ba

	support waves besides synth networks in the "Synth" column. use

	Mon Apr 28 04:27:47 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: support waves besides synth networks in
	        the "Synth" column. use bst_proxy_seq_list_match() to find the matching
	        proxy.

	        * beast-gtk/bstparam-proxy.c (param_proxy_change_value): support case
	        insensitive matches.

	        * beast-gtk/bstparam.h:
	        * beast-gtk/bstparam-proxy.c: added bst_proxy_seq_list_match() which
	        makes case (in-)sensitive exact/tail matches of uname paths available
	        to other code portions.

	svn path=/trunk/; revision=1056

2003-04-28  Tim Janik 	# b42509175334437c2fe10237e405836c497ce291

	updates to be used by BseTrack.

	Mon Apr 28 05:02:28 2003  Tim Janik  <timj@gtk.org>

	        * zintern/mono-wave.bse: updates to be used by BseTrack.

	        * bsetrack.[hc]: support BseWave property concurrently to the
	        "snet" property. "wave" tracks are played through an internal
	        standard mono synth.

	        * bseproject.[hc]: added bse_project_create_intern_synth() to merge
	        an internal standard synth into the project.

	        * bsestandardsynths.[hc]: renamed bse_standard_synth_lookup()
	        to bse_standard_synth_inflate().

	        * bsestorage.c (restore_container_child): check container's child
	        filter before restoring a child.

	        * bsecontainer.[hc]: added check_restore() methods to prevent
	        certain children from being restored.

	svn path=/trunk/; revision=1055

2003-04-28  Tim Janik 	# e8cc1d651f3f2dd4fdce140ac46c5e52cf4b12c8

	support BseWave property concurrently to the "snet" property. "wave"

	Mon Apr 28 05:02:28 2003  Tim Janik  <timj@gtk.org>

	        * bsetrack.[hc]: support BseWave property concurrently to the
	        "snet" property. "wave" tracks are played through an internal
	        standard mono synth.

	        * bseproject.[hc]: added bse_project_create_intern_synth() to merge
	        an internal standard synth into the project.

	        * bsestandardsynths.[hc]: renamed bse_standard_synth_lookup()
	        to bse_standard_synth_inflate().

	        * bsestorage.c (restore_container_child): check container's child
	        filter before restoring a child.

	        * bsecontainer.[hc]: added check_restore() methods to prevent
	        certain children from being restored.

	svn path=/trunk/; revision=1054

2003-04-27  Tim Janik 	# bc58cc565e29b59e26927f966ff28e43b67305be

	added gsl_osc_wave_form_name(), improved debugging messages.

	Sun Apr 27 22:23:08 2003  Tim Janik  <timj@gtk.org>

	        * gslosctable.[hc]: added gsl_osc_wave_form_name(), improved debugging
	        messages.

	        * gsldatautils.[hc] (gsl_wave_file_dump_data): new function to write data
	        portion of a WAVE file from a float block.

	svn path=/trunk/; revision=1053

2003-04-27  Tim Janik 	# b40b19e24c07ae57cac8d196d6bd5302a72f35d5

	updates

	svn path=/trunk/; revision=1052

2003-04-27  Tim Janik 	# f5056c266a4175c09c1081475c8259a921e40eac

	fix include

	svn path=/trunk/; revision=1051

2003-04-27  Tim Janik 	# cf187f8e70eeae16926ef4f07acc06425d336ff7

	updates

	svn path=/trunk/; revision=1050

2003-04-27  Tim Janik 	# 38b344d04a2e4b055daed8c94dc1a902c2f1bd0b

	split up debugging messages into "oss" and "latency" keys.

	Sun Apr 27 02:52:31 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c: split up debugging messages into "oss" and
	        "latency" keys.

	        * bsepcmdevice.[hc]: added bse_pcm_device_request() to request
	        specific sampling rates and number of channels.

	        * bseserver.c: make the mixing frequency preference setting
	        actually take effect on the PCM device.

	svn path=/trunk/; revision=1049

2003-04-26  Alper Ersoy 	# ada68c4b5fc3160b6342d6aa1e6cba887cb57fa2

	removed obsolete items

	Fri Apr 25 20:49:54 2003  Alper Ersoy  <dirt@gtk.org>

	        * TODO: removed obsolete items

	        * docs/teximacros.texi: added workaround for @documentlanguage which
	        was getting omitted in makeinfo's xml output. cleaned up workaround
	        comments a bit.

	        * docs/generated/Makefile.am: added banner_prefix and site_icon
	        parameters to the html rule.

	        * docs/generated/html.xsl: added site_icon and banner_prefix
	        parameters. added document language info to the html tag.
	        changed link style to default stylesheet to make it available to
	        older browsers as well. added "text" attribute to body tag as
	        recommended by Watchfire Bobby Accessibility Checker on
	        http://bobby.watchfire.com/. made top banner layout friendlier to
	        older browsers.

	        * docs/generated/navigation.xsl: use unordered list for menu
	        items as complicated css rules for span tags caused
	        some certain browsers to cough.

	        * docs/generated/css/default.css: moved problematic CSS2
	        properties (ie. background-color: inherit, and navigation rules)
	        to docs/generated/css/compliant.css. exchanged banner properties
	        with a much smaller set. added "error" properties to be used by
	        sample-upload cgi script.

	        * docs/generated/css/compliant.css: css file containing rules
	        from docs/generated/css/default.css that cause problems for
	        older, less compliant browsers. due to the way this file is
	        included, these rules are hidden from those browsers.

	        * docs/generated/css/images/beast-bg.png:
	        * docs/generated/css/images/beast-left.png:
	        * docs/generated/css/images/beast-right.png:
	        * docs/generated/css/images/beast-small.png: logo parts with
	        fixed brightness to take over docs/generated/css/images/banner-*.png.

	        * docs/generated/css/images/banner-dots.png:
	        * docs/generated/css/images/banner-left.png:
	        * docs/generated/css/images/banner-right.png:
	        * docs/generated/css/images/banner-small.png: removed.

	svn path=/trunk/; revision=1048

2003-04-25  Tim Janik 	# 82e0412c4b0222376049ceb69d71c0b2e55e7006

	updated to a version supplied by Alper.

	Fri Apr 25 18:35:09 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/images/beast16.png: updated to a version supplied by Alper.

	svn path=/trunk/; revision=1047

2003-04-22  Tim Janik 	# 05958c9ea58f3602ee7b4f9c28c402da845dd091

	fix typo

	svn path=/trunk/; revision=1046

2003-04-21  Tim Janik 	# e4b375f18c0627d078229a061ee758ccc2d2d5cc

	insert an anchor #gnome-canvas-idle-id-crash.

	Mon Apr 21 03:55:45 2003  Tim Janik  <timj@gtk.org>

	        * docs/faq.texi: insert an anchor #gnome-canvas-idle-id-crash.

	        * docs/site-news.texi: link to faq#gnome-canvas-idle-id-crash.

	svn path=/trunk/; revision=1045

2003-04-21  Tim Janik 	# d7603ee06232a103a8449df18de3aa2a678a81ee

	revert accidentally committed debugging code

	svn path=/trunk/; revision=1044

2003-04-21  Tim Janik 	# d63e3e548e59731dbc07ed20550a9bd7fb51352f

	correct TODO according to alper's comments

	svn path=/trunk/; revision=1043

2003-04-21  Tim Janik 	# db643934a0c41c37ab18ac724b04241934ae3ab0

	added novemeber 2002 synth secrets link.

	Mon Apr 21 00:19:32 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: added novemeber 2002 synth
	        secrets link.

	        * docs/faq.texi: adress canvas->idle_id!=0 assertion.

	        * docs/site-news.texi: point to the new FAQ entry as a lot of people
	        seem to run into this.

	svn path=/trunk/; revision=1042

2003-04-21  Tim Janik 	# cd86a5a23439e667bc41897edab05f96a4401816

	use SFI_MIN_TIME and SFI_MAX_TIME constants.

	Mon Apr 21 03:02:01 2003  Tim Janik  <timj@gtk.org>

	        * sfiparams.c: use SFI_MIN_TIME and SFI_MAX_TIME constants.

	        * sfitime.c:
	        (_sfi_init_time): use tzset() to initialize timezone.
	        (sfi_time_system): no need for paranoid error checking.
	        (sfi_time_to_string): properly convert from/to UTC times.
	        (sfi_time_from_string): converts from/to UTC, work around
	        mktime() insisting on localtime argument and fix daylight
	        saving bug.

	        * sfitime.h, sfitypes.h: urg, fix SfiTime to be signed 64bit,
	        adjust MIN/MAX constants to UTC.

	svn path=/trunk/; revision=1041

2003-04-20  Tim Janik 	# 2173f1e6002265541d5bd5a900757adf072d3143

	make <1990 time check more verbose.

	Sun Apr 20 21:46:20 2003  Tim Janik  <timj@gtk.org>

	        * sfitime.c (sfi_time_from_string_err): make <1990 time check more verbose.

	svn path=/trunk/; revision=1040

2003-04-20  Tim Janik 	# 51976423020bd40e2f1c02ce577122928c4f5dc8

	announce patch-beast-0.5.0-0.5.1.fixed.gz.

	Sun Apr 20 21:10:12 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce patch-beast-0.5.0-0.5.1.fixed.gz.

	Sun Apr 20 12:11:58 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/css/default.css: added entries used by sitefiles.pl.

	svn path=/trunk/; revision=1039

2003-04-20  Tim Janik 	# 28e1d0c1a72c87bfbcc7357f5b1833ec4f173cb8

	new object dumping PCM output to a WAV file.

	Fri Apr 18 19:48:59 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmwriter.[hc]: new object dumping PCM output to a WAV file.

	        * bsepcmmodule.c: route PCM data into a BsePcmWriter if given.

	        * bseserver.[hc]: added WAV file name property and support for
	        BsePcmWriter.

	        * gslloader-wav.c: fixed WAV header file length check.

	        * gsldatautils.[hc]:
	        (gsl_wave_file_dump_header): new function to write out RIFF/WAVE
	        headers, fixing up the file_length logic which was broken in
	        gsl_data_handle_dump_wav().
	        (gsl_wave_file_patch_length): new function to change the data length
	        information in a RIFF/WAVE file after the header was written (changes
	        file position pointer).
	        (gsl_data_handle_dump): return normal errno.
	        (gsl_data_handle_dump_wav): return normal errno, use
	        gsl_wave_file_dump_header() to write the wav header.

	        * bseproject.c (bse_project_store_bse): use bse_error_from_errno() to
	        translate errno to BseErrorType.

	svn path=/trunk/; revision=1038

2003-04-20  Tim Janik 	# f53a0bcdd0e4f164dcce4b0a898064d9289d8d0e

	dont generate test output

	svn path=/trunk/; revision=1037

2003-04-19  Tim Janik 	# 9ecb756a2752f1428304327c5e22b804cb3a121f

	todo updates

	svn path=/trunk/; revision=1036

2003-04-19  Tim Janik 	# 1a0bdd1ebcf7ae6f5f41ca1d479e797fd6ff3dd6

	fix missing newlines at end of files.

	Wed Apr 16 19:25:45 2003  Tim Janik  <timj@gtk.org>

	        * freeverb/allpass.hpp:
	        * freeverb/allpass.cpp:
	        * freeverb/revmodel.hpp: fix missing newlines at end of files.

	svn path=/trunk/; revision=1035

2003-04-19  Tim Janik 	# 46a0301b4bffb5f80434b2fd174cac09ba5c6495

	new object dumping PCM output to a WAV file.

	Fri Apr 18 19:48:59 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmwriter.[hc]: new object dumping PCM output to a WAV file.

	        * bsepcmmodule.c: route PCM data into a BsePcmWriter if given.

	        * bseserver.[hc]: added WAV file name property and support for
	        BsePcmWriter.

	        * gslloader-wav.c: fixed WAV header file length check.

	        * gsldatautils.[hc]:
	        (gsl_wave_file_dump_header): new function to write out RIFF/WAVE
	        headers, fixing up the file_length logic which was broken in
	        gsl_data_handle_dump_wav().
	        (gsl_wave_file_patch_length): new function to change the data length
	        information in a RIFF/WAVE file after the header was written (changes
	        file position pointer).
	        (gsl_data_handle_dump): return normal errno.
	        (gsl_data_handle_dump_wav): return normal errno, use
	        gsl_wave_file_dump_header() to write the wav header.

	        * bseproject.c (bse_project_store_bse): use bse_error_from_errno() to
	        translate errno to BseErrorType.

	svn path=/trunk/; revision=1034

2003-04-19  Tim Janik 	# 03979805c768cd7cba9f6225f93b11a8d85fc500

	added link to www.gnomedesktop.org announcements to the last three

	Fri Apr 18 18:40:41 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-oldnews.texi:
	        * docs/site-news.texi: added link to www.gnomedesktop.org announcements
	        to the last three releases.

	        * configure.in: s/==/=/ for test invocations as == is a non-POSIX
	        extension, reported by Sam Hocevar <sam@zoy.org>.

	svn path=/trunk/; revision=1033

2003-04-17  Tim Janik 	# aaa4dd61514bf09729959237fb8ca631b3e97f0b

	refine debugging messages

	svn path=/trunk/; revision=1032

2003-04-16  Tim Janik 	# ad2d74d734882724453ed2f46c441ed3ade98d62

	deamnd automake-1.4 and autoconf-1.3. support version concatenation for

	Wed Apr 16 19:43:36 2003  Tim Janik  <timj@gtk.org>

	        * autogen.sh: deamnd automake-1.4 and autoconf-1.3. support version
	        concatenation for these tools out of the box if supplied by the host
	        system. return proper exit codes in case of error.

	        * shell/bsesh.c (BOILERPLATE_SCM): fix "pasting does not give a valid
	        preprocessing token" warning.

	        * beast-gtk/bstmain.c: fix include.

	        * beast-gtk/bstsnetrouter.c (palette_ebox_button): fix cast.

	svn path=/trunk/; revision=1031

2003-04-16  Tim Janik 	# c3847c16c0975b82594e46545b9fe63d649e2fa5

	fix usage of g_basename().

	Wed Apr 16 19:24:12 2003  Tim Janik  <timj@gtk.org>

	        * bsewaverepo.proc (load_file): fix usage of g_basename().

	        * bseobject.c (bse_object_type_register): added missing cast.
	        * bseprocedure.c (bse_procedure_type_register): same here.

	svn path=/trunk/; revision=1030

2003-04-16  Tim Janik 	# 09480c66911dcd589b32fc64b8fdd9b1e118895a

	:run): include <string.h> in generated code, since we use memset().

	Wed Apr 16 19:29:48 2003  Tim Janik  <timj@gtk.org>

	        * sfidl.cc (CodeGeneratorC::run): include <string.h> in generated code,
	        since we use memset().

	        * glib-extra.c (intern_ascii_strtoull): cure warnings due to glib 2.2
	        implementing g_ascii_strtoull().

	svn path=/trunk/; revision=1029

2003-04-16  Tim Janik 	# daa64107c4fae4cadf2d9bf969723d3db1017e0e

	fix missing newlines at end of files.

	Wed Apr 16 19:25:45 2003  Tim Janik  <timj@gtk.org>

	        * freeverb/allpass.hpp:
	        * freeverb/allpass.cpp:
	        * freeverb/revmodel.hpp: fix missing newlines at end of files.

	svn path=/trunk/; revision=1028

2003-04-15  Tim Janik 	# bcef182e7b149b75ab6875ac26c84101ce12bd40

	shut up

	svn path=/trunk/; revision=1027

2003-04-14  Tim Janik 	# 603c0279b3f4c70a51a908ef72895ea8d1b38ecd

	16x16 icon

	svn path=/trunk/; revision=1026

2003-04-14  Tim Janik 	# e585fbc81d3f1ee6f62ba9a09f3b5cde9312ce33

	announce v0.5.1.

	Mon Apr 14 02:17:03 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce v0.5.1.

	        * docs/site-download.texi: update dependancy list (ogg/vorbis and
	        gtk versiosns) and comment on LADSPA support.

	svn path=/trunk/; revision=1025

2003-04-13  Tim Janik 	# 833f8ad88d0255f3fe3e42aba95e712e457faa7f

	released beast-0.5.1.tar.gz.

	Mon Apr 14 00:11:43 2003  Tim Janik  <timj@gtk.org>

	        * released beast-0.5.1.tar.gz.

	svn path=/trunk/; revision=1023

2003-04-13  Tim Janik 	# ff00583271f85737cf2425012f5a0610f4c64cfe

	fix debugging messages

	svn path=/trunk/; revision=1022

2003-04-13  Tim Janik 	# f1bf77f88cc420ad0f5e5e04425dba4d7c0cd7a2

	added a c++ object file so the main program is able to load dynamic c++

	Sun Apr 13 22:56:09 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstxxutils.{h|cc}: added a c++ object file so the main
	        program is able to load dynamic c++ plugins (required by gcc 3.2).

	        * docs/faq.texi: fixed mime logo reference, adjusted hardware
	        recommendation.

	        * TODO, README: miscellaneous release specific updates.

	svn path=/trunk/; revision=1021

2003-04-13  Tim Janik 	# ae3e724071f456a830c0d60a216e9e68d0362c84

	fallback to check /dev/dsp[0-3] if /dev/dsp couldn't be opened.

	Sun Apr 13 23:48:07 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_open): fallback to check
	        /dev/dsp[0-3] if /dev/dsp couldn't be opened.

	svn path=/trunk/; revision=1020

2003-04-13  Tim Janik 	# dae55b95d3e67eb90c2bf396f963ab86b2dfd8ce

	allow any kind of widget being passed in. process updates at

	Tue Apr  8 03:08:49 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_update_can_operate): allow any kind of
	        widget being passed in. process updates at G_PRIORITY_DEFAULT,
	        to coalesce across resizes and redraws.

	        * beast-gtk/bstitemview.c: queue operation state updates when we
	        got state change notifications from BSE.

	svn path=/trunk/; revision=1019

2003-04-13  Tim Janik 	# 23b09f92e9db1fd52f71606371391e012a7adecb

	fallback to check /dev/midi[0-3] if /dev/midi couldn't be opened.

	Fri Apr 11 14:10:07 2003  Tim Janik  <timj@gtk.org>

	        * bsemididevice-oss.c (bse_midi_device_oss_open): fallback to check
	        /dev/midi[0-3] if /dev/midi couldn't be opened.

	svn path=/trunk/; revision=1018

2003-04-06  Tim Janik 	# 871ad9a0d32fb1b72ebe535e42bc493ec39eee65

	add current vertical scroll position to history list and restore it upon

	Sun Apr  6 20:04:29 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxktexttools.c: add current vertical scroll position
	        to history list and restore it upon forward/backward moves.

	svn path=/trunk/; revision=1017

2003-04-06  Tim Janik 	# 8c1480c2999ea897652d12b7ebd917a1d19f840f

	update to libtool 1.4.3.

	Sun Apr  6 15:57:24 2003  Tim Janik  <timj@gtk.org>

	        * update to libtool 1.4.3.

	        * docs/quickstart.texi (Parts And Tracks): adapt this to the new
	        track roll display.

	        * beast-gtk/bstpianorollctrl.c (controller_piano_drag): shut up debug
	        messages.

	        * beast-gtk/bstrecords.sfidl: fix preference pspec groups.

	        * beast-gtk/gxk/gxktexttools.c: cosmetic fixes to history stack code.

	Sun Apr  6 00:55:08 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/scandocs.pl: escape commas in macro parameters.

	svn path=/trunk/; revision=1016

2003-04-06  Tim Janik 	# c4e56aefccaa88458f52330d0361fa681f79e75e

	add tool selection menu popup facility to the palette.

	Sun Apr  6 15:10:42 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_toggle_palette): add tool
	        selection menu popup facility to the palette.

	        * beast-gtk/bstradiotools.c (bst_radio_tools_build_palette): added tool
	        name label.

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_tools): constrain
	        the categories that are added to the palette.

	svn path=/trunk/; revision=1015

2003-04-06  Tim Janik 	# 74b81a0512b9b28c7914ebe58946730e4e300d04

	added i/o channel identifier to public API. fixed up

	Sun Apr  6 13:56:09 2003  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: added i/o channel identifier to public API.
	        fixed up bse_source_class_add_jchannel_ident() and
	        bse_source_class_add_ichannel_ident().

	        * bseladspamodule.c (bse_ladspa_module_class_init_from_info):
	        actually *use* the port identifier as identifier for i/o channels.

	        * bseladspa.c (bse_ladspa_info_port_2str): complete flag list.

	svn path=/trunk/; revision=1014

2003-04-05  Tim Janik 	# b588c4962d93df508539b2d0692f8bbe5eff8b2f

	version update to 0.5.1.

	Fri Apr  4 19:22:58 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: version update to 0.5.1.

	        * Makefile.am: install sfi.pc and bse.pc files.

	        * configure.in: merged AC_GSL_REQUIREMENTS and AC_BSE_REQUIREMENTS
	        macros. use pkg-config to detect libmad. require ogg/vorbis >= 1.0.0rc4
	        now. sort out library requirements to create sfi.pc and bse.pc.

	svn path=/trunk/; revision=1013

2003-04-05  Tim Janik 	# 2211d51a6e2092dc09731c43fdb1a40d5cfe082b

	adjust property construction to better hinting and pre-/post-process audio

	Sat Apr  5 17:48:45 2003  Tim Janik  <timj@gtk.org>

	        * bseladspamodule.c: adjust property construction to better hinting
	        and pre-/post-process audio signals that have the rate_relative hint
	        set.

	        * bseladspa.c (bse_ladspa_info_add_port): use the ladspa port index to
	        construct a unique port identifier instead of the port name, according
	        to a recommendation from Steve Harris <S.W.Harris@ecs.soton.ac.uk>.

	        * bseladspa.[hc] (bse_ladspa_info_add_port): provide a sample rate
	        relative hint and set frequency hint if we have good indications for
	        a frequency control input port.

	Fri Apr  4 19:25:52 2003  Tim Janik  <timj@gtk.org>

	        * bseparasite.c (bse_parasite_restore): removed pre-0.5.0 compat
	        parsing code.

	        * gsldatahandle-vorbis.c: require ogg/vorbis >= 1.0.0rc4 now.

	        * bseutils.c: documentation fixes.

	svn path=/trunk/; revision=1012

2003-04-04  Tim Janik 	# f28844506ddb14cc23f0b493fc8c0112184622b7

	provide the beast prefix specific ladspa directory as BSE_PATH_LADSPA.

	Fri Apr  4 09:55:42 2003  Tim Janik  <timj@gtk.org>

	        * bstmain.c:
	        * configure.in:
	        * Makefile.am: provide the beast prefix specific ladspa directory
	        as BSE_PATH_LADSPA.

	Thu Apr  3 11:03:08 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_icon_set): fixed ref-counting
	        bug.

	svn path=/trunk/; revision=1011

2003-04-04  Tim Janik 	# 4dc028405aa57039527a43573a90ae15ceee50c6

	added LADSPA API Version 1.1 header file.

	Fri Apr  4 10:25:00 2003  Tim Janik  <timj@gtk.org>

	        * ladspa.h: added LADSPA API Version 1.1 header file.

	        * bseladspa.[hc]: implemented BseLadspaInfo assembler and
	        GTypePlugin to load LADSPA plugins.

	        * bseladspamodule.[hc]: implemented BseLadspaModule base type
	        and derived methods used by BseLadspaModule_* implementations.
	        a working LADSPA module is then derived from BseLadspaModule
	        using these methods and equipped with BseLadspaInfo.

	        * bseserver.proc (register-plugins): register ladspa plugins after
	        registering BSE plugins.

	        * gslopmaster.c (master_process_job): when integrating nodes,
	        flag suspension_update, so the scheduler updates their suspension
	        state. also, flag them initially as outputs_suspended, in order to
	        trigger reset() method activation prior to the first process()
	        call.

	svn path=/trunk/; revision=1010

2003-04-01  Tim Janik 	# 16cc37de5846748d0a5803852737c221ed898402

	removed BST_TOOLTIPS, changed code to make use of GXK_TOOLTIPS.

	Tue Apr  1 06:45:33 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdefs.h: removed BST_TOOLTIPS, changed code to make
	        use of GXK_TOOLTIPS.

	        * beast-gtk/bstutils.[hc]: removed outdated Gtk+ workarounds
	        and helper code. moved some things into gxkutils.[hc].
	        fixed up BstGMask type usages. documented bst_gmask_*() functions.

	        * beast-gtk/gxk/gxkutils.[hc]: don't redefine gtk functions.
	        document gxk_item_factory_get_item() and gxk_item_factory_get_widget().
	        moved and renamed gxk_widget_proxy_requisition(),
	        gtk_notebook_current_widget() and gxk_file_selection_heal() from
	        bstutils.[hc] to here.

	        * beast-gtk/*.c: miscellaneous adaptions according to the above changes.

	svn path=/trunk/; revision=1009

2003-03-31  Tim Janik 	# 8d3ff7eb085396ccf00d40d0cf6cdf56f62a8f17

	updates

	svn path=/trunk/; revision=1008

2003-03-31  Tim Janik 	# 131885feca1ff13de5e9a2b59e4b7b1fe0d39e1d

	removed black text border. set text sizes via

	Mon Mar 31 12:05:07 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c: removed black text border. set text
	        sizes via gnome_canvas_text_set_zoom_size() so the text is zoomed
	        together with the rest of the canvas.

	        * beast-gtk/gxk/gxkcanvas.[hc]: added gnome_canvas_set_zoom() and
	        gnome_canvas_text_set_zoom_size() to support zoomable text items.

	        * beast-gtk/gxk/gxkutils.[hc]: added g_object_{get|set}_double().

	        * beast-gtk/bstsnetrouter.c (idle_zoom): use gnome_canvas_set_zoom() to
	        alter zoom factor. shut up debug messages.

	        * beast-gtk/bstmenus.c (bst_menu_config_create_items): use
	        BST_PIXDATA_EMPTY1x1 as menu item image instead of pixdata
	        with invalid magic.

	        * beast-gtk/bstutils.h: provide a serialized pixdata empty 1x1
	        pixel image macro: BST_PIXDATA_EMPTY1x1.

	svn path=/trunk/; revision=1007

2003-03-29  Tim Janik 	# d0da8ce99b77ec39d160d7a52afbc39de019b5ae

	cosmetics

	svn path=/trunk/; revision=1006

2003-03-19  Tim Janik 	# 0d9f124e4376f2af9cab439483f465de200dcabf

	minor tweakage

	svn path=/trunk/; revision=1005

2003-03-19  Tim Janik 	# d822faf9d3dd6d2075bc7c70ada1da4674387390

	announce new mailing list and change old adresses. updated link sections.

	Wed Mar 19 17:56:09 2003  Tim Janik  <timj@gtk.org>

	        * README:
	        * docs/*.texi: announce new mailing list and change old adresses.
	        updated link sections.

	svn path=/trunk/; revision=1004

2003-03-17  Tim Janik 	# 0185d3f5eb4b5b0514759b276d3815c714718bd3

	updates

	svn path=/trunk/; revision=1003

2003-03-17  Tim Janik 	# b1c4864d42c2c2d28e11800553c3ed334e7a82c9

	use the new toyprof leak logger API.

	Mon Mar 17 07:05:04 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): use the new toyprof leak logger API.

	        * beast-gtk/bstapp.c (bst_app_operate): remove toyprofiling hook.

	svn path=/trunk/; revision=1002

2003-03-17  Tim Janik 	# 5c9b8256fb75b65baee41f7d307563aa817b13a4

	derive from BseItem, so device can later be valid BseServer children and

	Mon Mar 17 07:06:43 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice.[hc]: derive from BseItem, so device can later be valid
	        BseServer children and be exported through the middleware.

	        * gslwaveosc.c: turn debugging prints into DEBUG() calls.

	svn path=/trunk/; revision=1001

2003-03-17  Tim Janik 	# c8de0d3b07135a4f070410038a6b197211edccfd

	unref the fetched event sequence since sfi_glue_context_fetch_event()

	Mon Mar 17 07:08:35 2003  Tim Janik  <timj@gtk.org>

	        * sfigluecodec.c (sfi_glue_decoder_dispatch): unref the fetched
	        event sequence since sfi_glue_context_fetch_event() passes on
	        ownership to us.

	        * toyprof-mem.[hc]: implement a signal triggered leak checker,
	        nuked the old statistic code.

	svn path=/trunk/; revision=1000

2003-03-16  Tim Janik 	# 240eb33c9472ec6100fca2ef96fb09bc1b997d47

	announced release.

	Thu Mar 13 22:38:28 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announced release.

	svn path=/trunk/; revision=999

2003-03-13  Tim Janik 	# ff03acd850cd738e32a7106b5c33034d0244a0da

	up version to 0.5.0, released beast-0.5.0.tar.gz.

	Thu Mar 13 21:42:45 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.5.0, released beast-0.5.0.tar.gz.

	        * TODO, README, docs/release-notes.texi: release updates.

	        * beast-gtk/bstapp.c (bst_app_operate): popup release-notes dialog
	        as ordinary navigatable text window.

	        * beast-gtk/bstapp.c (bst_app_update_can_operate): in lack of a working
	        gtk_item_factory_get_widget_by_action() ($*=%!!!) hardcode disabling
	        of /File/Save, /Edit/Undo and /Edit/Redo.

	        * beast-gtk/gxk/gxktexttools.c (gxk_scroll_text_create): disable "Find"
	        button until its functionality is implemented.

	svn path=/trunk/; revision=997

2003-03-13  Tim Janik 	# 8755d9a8d4bf82758d06e6f1ca2bcfa42da7587a

	ship gslmakefile.inc with tarballs

	svn path=/trunk/; revision=996

2003-03-13  Tim Janik 	# d41771202e288e7a8110b480af571f5585422cfe

	install gsl headers under bse/.

	Thu Mar 13 21:30:14 2003  Tim Janik  <timj@gtk.org>

	        * Makefile.am (gslincludedir): install gsl headers under bse/.

	svn path=/trunk/; revision=995

2003-03-13  Tim Janik 	# ad956587ff041de6db8c761e45467777bb83c046

	if opening in read-write mode fails, try falling back to write-only mode.

	Thu Mar 13 21:13:33 2003  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_open): if opening in read-write
	        mode fails, try falling back to write-only mode.

	        * gslcommon.c (gsl_error_from_errno): return fallback error for EINVAL.

	svn path=/trunk/; revision=994

2003-03-13  Tim Janik 	# 1ca9f4c2f8cdb39aa56a3b01ffb3261270c94831

	set sequencer flag on midi synths.

	Thu Mar 13 19:42:30 2003  Tim Janik  <timj@gtk.org>

	        * bsemidisynth.c (bse_midi_synth_init): set sequencer flag on midi
	        synths.

	        * bsesong.[hc]:
	        * bsesuper.[hc]: move sequencer_pending_SL field from song to super.

	        * bsessequencer.[hc]: handle sequencing of supers (there's nothing
	        to do for non-song supers, but we need to allow having them in the
	        sequencer loop).

	svn path=/trunk/; revision=993

2003-03-13  Tim Janik 	# 2cf0a0eb4944d987250ce25fb08eb531623bb2f7

	storage format fixups.

	Thu Mar 13 18:04:21 2003  Tim Janik  <timj@gtk.org>

	        * test/*.bse: storage format fixups.

	svn path=/trunk/; revision=992

2003-03-13  Tim Janik 	# 0438d246a706da20558a3570dc6e15b01ad89499

	urgs, remove project from auto-stop list, rather than adding to it.

	Thu Mar 13 18:39:10 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.c (bse_project_finalize): urgs, remove project from
	        auto-stop list, rather than adding to it.

	        * bseparasite.c: fixed newly introduced parasite parsing bugs.

	svn path=/trunk/; revision=991

2003-03-13  Tim Janik 	# 0ef612d559e03f1f688a37c9405000ba0576c937

	silence

	svn path=/trunk/; revision=990

2003-03-13  Tim Janik 	# 35c51f6aa56c7f737f835923d2b7b83057a5f57e

	fixup

	svn path=/trunk/; revision=989

2003-03-13  Tim Janik 	# 58b99e49adf1efccef98a5ca5534bbb14610f669

	applied patch from Junichi Uekawa <dancer@debian.org> which provides

	Thu Mar 13 15:54:28 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: applied patch from Junichi Uekawa <dancer@debian.org>
	        which provides --enable-devdsp and --enable-devmidi options to force
	        driver builds for these devices, bypassing auto-detection.

	        * beast-gtk/bsttrackview.c (bst_track_view_create_tree): fix synthesizer
	        column.

	        * beast-gtk/gxk/gxktexttools.[hc] (gxk_scroll_text_create): adjust
	        default values and possible flag sets.

	        * beast-gtk/*.c: fixed callers of gxk_scroll_text_create().

	svn path=/trunk/; revision=988

2003-03-13  Tim Janik 	# 5f2f06b98375039bd453fecb3383191c9a203363

	add SFI_PARAM_FLOAT for Real properties which are stored in floats 'cause

	Thu Mar 13 10:47:21 2003  Tim Janik  <timj@gtk.org>

	        * bsemixer.c (bse_mixer_class_init):
	        * bsesimpleadsr.c (bse_simple_adsr_init):
	        * bsesequencer.c (bse_sequencer_class_init):
	        * bseatandistort.c (bse_atan_distort_class_init):
	        * bseiirfilter.c (bse_iir_filter_class_init): add SFI_PARAM_FLOAT for
	        Real properties which are stored in floats 'cause they don't need
	        full double precision.

	svn path=/trunk/; revision=987

2003-03-13  Tim Janik 	# e16e762c001f141ad8a255ec179064ee0a8752c0

	added bse_storage_putf(), bse_storage_putd() and bse_storage_putr() to

	Thu Mar 13 13:51:49 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]: added bse_storage_putf(), bse_storage_putd() and
	        bse_storage_putr() to store floats, doubles and Reals in a locale
	        independent fashion.

	        * *.c: fixed storage code by using bse_storage_put{f|d|r}() to store
	        float numbers.

	        * bsestorage.c (bse_storage_prepare_write): fix bse version storage.

	        * bsestandardosc.c (bse_standard_osc_class_init): add SFI_PARAM_FLOAT
	        for Real properties which are stored in floats 'cause they don't need
	        full double precision.

	        * bseamplifier.c (bse_amplifier_class_init): remove bogus pspec flags.

	svn path=/trunk/; revision=986

2003-03-13  Tim Janik 	# 3df73dc84d17227784c915acaff1a137cc873df0

	use %.17g to print doubles, so we don't print out virtual digit precision

	Thu Mar 13 12:35:50 2003  Tim Janik  <timj@gtk.org>

	        * sfidl-parser.cc (parseParamDefHints): use %.17g to print doubles,
	        so we don't print out virtual digit precision artefacts.

	        * sfiserial.c (sfi_serialize_primitives): use %.17g to print doubles,
	        and use %.7g if SFI_PARAM_FLOAT was given. let g_ascii_formatd() handle
	        the actual printout to fix locale dependencies.

	svn path=/trunk/; revision=985

2003-03-11  Tim Janik 	# 11c13ca939196fe90bdb00ef0c86cd4f81630d23

	rc issues

	svn path=/trunk/; revision=984

2003-03-11  Tim Janik 	# 45bb8a62366d81a086c73d30d5b382626a1027e2

	up version to 0.5.0-rc1, released rc tarball.

	Tue Mar 11 06:46:19 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.5.0-rc1, released rc tarball.

	svn path=/trunk/; revision=982

2003-03-10  Tim Janik 	# ae16f3119a5d2cbea9ceb335ba8065298cccbf2f

	include docs in EXTRA_DIST

	svn path=/trunk/; revision=981

2003-03-10  Tim Janik 	# 88e651d4a6eb9ed37416b57fddd2344c175ef404

	add missing files to beast_extra_sources

	svn path=/trunk/; revision=980

2003-03-10  Tim Janik 	# 92fe3abd6a2a09a572b575daf5584b744fa14e09

	fix bsegentypes.h rule and missing includes

	svn path=/trunk/; revision=979

2003-03-10  Tim Janik 	# 291d6d5367e18caa7e63e755f0d04ef0ea38e448

	cleanup temporaries

	svn path=/trunk/; revision=978

2003-03-10  Tim Janik 	# 71de463ef11f94c7e3e860c9aef47337d057b14a

	more gsl/ -> bse/ include fixes

	svn path=/trunk/; revision=977

2003-03-10  Tim Janik 	# 7858cc0aa03846f00c1c4d9073f72a3690094575

	fix includes, we don't have a toplevel gsl/ dir anymore.

	Mon Mar 10 11:22:48 2003  Tim Janik  <timj@gtk.org>

	        * freeverb/bsefreeverb.c:
	        * bsesequencer.c:
	        * davorgan.c: fix includes, we don't have a toplevel
	        gsl/ dir anymore.

	svn path=/trunk/; revision=976

2003-03-10  Tim Janik 	# ea8f6d91c92bb714159a0e407c82ee3f49b4e753

	don't build docs if we're not configured for @DVLBUILD@. provide

	Mon Mar 10 11:14:28 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: don't build docs if we're not configured for @DVLBUILD@.
	        provide am-conditional IF_BUILDDOCS to special case doc builds.

	svn path=/trunk/; revision=975

2003-03-10  Tim Janik 	# 35d79b4f9135e9fd363e05d53b8496061f52687b

	more include and buld rule fixes

	svn path=/trunk/; revision=974

2003-03-10  Tim Janik 	# 8c99f593e0dd055f9226920f621beaa1761a9d58

	fix inclusions and add elaborate comment

	svn path=/trunk/; revision=973

2003-03-10  Tim Janik 	# 94eec06969a1389d3ba777975c5f4f4334130bac

	builddir!=srcdir include fixes

	svn path=/trunk/; revision=972

2003-03-10  Tim Janik 	# b3ea6a7e9e140e442bf963184f686baf3cbc19be

	remove topdir gsl/ link, fixed includes.

	Mon Mar 10 09:24:27 2003  Tim Janik  <timj@gtk.org>

	        * remove topdir gsl/ link, fixed includes.

	svn path=/trunk/; revision=971

2003-03-10  Tim Janik 	# cacff5fa2e6889242a5dd13277d4c3e4d24a64d2

	added @DVLBUILD@ ac substitution to disable development build rules.

	Mon Mar 10 08:54:23 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: added @DVLBUILD@ ac substitution to disable
	        development build rules.

	        * */Makefile.am: more srcdir!=builddir fixes, adaptions to @DVLBUILD@.

	svn path=/trunk/; revision=970

2003-03-10  Tim Janik 	# eb68564c90b03d976973adcae02b7ab98ba7d94e

	yet another ${srcdir} fix

	svn path=/trunk/; revision=969

2003-03-10  Tim Janik 	# e1fac39899bc162e7a018ba04fa977ede03a3ea7

	build and include fixes

	svn path=/trunk/; revision=968

2003-03-10  Tim Janik 	# 0d6a81ba3460ef5790747631d49403abda5ded12

	build and include fixes

	svn path=/trunk/; revision=967

2003-03-10  Tim Janik 	# f4aeb44e29d0ed0f1752af544fa38193aa50efd0

	build fixes

	svn path=/trunk/; revision=966

2003-03-10  Tim Janik 	# 72c9f0379bcc86a338385e9f4be00518e39a6f87

	shutup

	svn path=/trunk/; revision=965

2003-03-10  Tim Janik 	# 78c69b4a51151fa85fe21b44a7e1882ab9fcdb92

	shut up

	svn path=/trunk/; revision=964

2003-03-10  Stefan Westerfeld 	# f9985eef37f4d067192af3c82ad6acb871a68298

	my priorization

	svn path=/trunk/; revision=963

2003-03-10  Tim Janik 	# 176f06ec98a1458b23bcbe1af2de4b187b11764f

	rename and CVS-move of bsw-shell/bswshell to shell/bsesh.

	Mon Mar 10 05:43:37 2003  Tim Janik  <timj@gtk.org>

	        * rename and CVS-move of bsw-shell/bswshell to shell/bsesh.

	        * shell/bsescminterp.h: moved here from bsw-shell/bswscminterp.h.
	        * shell/bsescminterp.c: moved here from bsw-shell/bswscminterp.c.
	        * shell/bsesh.c: moved here from bsw-shell/bswshell.c.

	        * shell/test.scm:
	        * shell/Makefile.am:
	        * shell/record-midi.scm:
	        * shell/bse-scm-glue.boot:
	        * shell/progressor-example.scm: moved here from bsw-shell/.

	        * bse/bsescripthelper.c:
	        * configure.in:
	        * Makefile.am:
	        * shell/*: adaptions to renames.

	svn path=/trunk/; revision=962

2003-03-10  Tim Janik 	# db42ecd56f0b15bebd354bd3c5f070b374235387

	debugging cleanup.

	Mon Mar 10 06:18:51 2003  Tim Janik  <timj@gtk.org>

	        * sficomport.[hc]: debugging cleanup.

	svn path=/trunk/; revision=961

2003-03-09  Tim Janik 	# 6cc48900c22dd8e62c1d21240bacf3b69c7316dd

	shutup

	svn path=/trunk/; revision=960

2003-03-09  Tim Janik 	# 8b2fc2d29f4ccc757791317fc53f3113cc7a536a

	got rid of a good chunk of fixmes. prioritized stw/timj items.

	Sun Mar  9 15:44:48 2003  Tim Janik  <timj@gtk.org>

	        * TODO: got rid of a good chunk of fixmes.
	        prioritized stw/timj items.

	        * beast-gtk/bstcanvassource.c (bst_canvas_icon_set): catch empty
	        icons.

	        * configure.in: removed CSL related checks.

	        * beast-gtk/bstrecords.sfidl: remove ALSA preference option.

	        * beast-gtk/bstdefs.h: cleaned up developer extensions and
	        related macros.

	        * beast-gtk/bstmain.c: fix up '-:' developer option.

	        * acbeast.m4: change gcc optimization from -O3 to -O2 since -O3
	        may produce buggy code at times.

	svn path=/trunk/; revision=959

2003-03-09  Tim Janik 	# 407ec2fbc7b7d81cbca62913fe2835271a476231

	fix link resolution messages.

	Sun Mar  9 09:53:41 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_resolve_item_links):
	        * bsesource.c (resolve_osource_input): fix link resolution messages.

	        * bsepcmdevice-csl.[hc]: removed CSL driver code (in
	        accordance with stefan).

	        * bserecords.sfidl: added pspec groups to preferences.

	        * bsemain.c (bse_async_parse_args): allow enabling of BSE
	        developer extensions via developer-extensions field in
	        the config record passed in.

	svn path=/trunk/; revision=958

2003-03-09  Tim Janik 	# c1070be46b779c16bc5a3e282f4ed89f0ce5fc39

	added NULL guards to value transforms.

	Sun Mar  9 14:45:50 2003  Tim Janik  <timj@gtk.org>

	        * sfidl.cc: added NULL guards to value transforms.

	        * sfivalues.c (sfi_value_copy_deep): fix NULL GValue handling.

	svn path=/trunk/; revision=957

2003-03-09  Stefan Westerfeld 	# 15e92cf840e0cb6fa0141dde4c94fa7f63c857f6

	added group supported by sfidl now

	Sun Mar  9 07:03:49 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/bstrecords.sfidl: added group supported by sfidl now

	svn path=/trunk/; revision=956

2003-03-09  Stefan Westerfeld 	# bfdd694984e4902d97eaee52ed3bdf602eba3fcd

	fixed double quotes in sfidl

	Sun Mar  9 07:06:16 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl.cc: fixed double quotes in sfidl

	svn path=/trunk/; revision=955

2003-03-07  Stefan Westerfeld 	# 70835ffe2d2cfa172cddb0a7375e3ee5f72511eb

	adapted sfidl_xxx macros to pspec group support.

	Fri Mar  7 21:45:13 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bstutils.c: adapted sfidl_xxx macros to pspec group support.

	svn path=/trunk/; revision=954

2003-03-07  Stefan Westerfeld 	# d3ece8f92322d440b4737e994f64ac12cff274de

	adapted sfidl_xxx macros to pspec group support

	Fri Mar  7 21:44:24 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsetype.c: adapted sfidl_xxx macros to pspec group support

	svn path=/trunk/; revision=953

2003-03-07  Stefan Westerfeld 	# b833ca35847af1bb8374f5828cb494ef1b54dbde

	support group keyword for grouping parameter specifications

	Fri Mar  7 21:39:47 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.* sfidl.cc: support group keyword for grouping
		parameter specifications

		* sfiparams.[hc]: sfi_pspec_set_group returns now the GParamSpec*

		* testidl.sfidl testsfi.c: test pspec group support

	svn path=/trunk/; revision=952

2003-03-07  Tim Janik 	# ffeddb0bd7fe59de19c319b4452c8055edb27782

	scan debugging keys and dump them to bstdebugkeys.defs.

	Fri Mar  7 14:53:17 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: scan debugging keys and dump
	        them to bstdebugkeys.defs.

	        * bstmain.c: debugging options revamp.

	svn path=/trunk/; revision=951

2003-03-07  Tim Janik 	# 26b76e49bba3c799bbe195ead4f3ddd396eda465

	removed old debugging cruft. switched things over to SFI debugging

	Fri Mar  7 14:52:43 2003  Tim Janik  <timj@gtk.org>

	        * *.[hc]: removed old debugging cruft. switched things over
	        to SFI debugging functions.

	        * bsemain.c: debugging options revamp.

	svn path=/trunk/; revision=950

2003-03-07  Tim Janik 	# 39b2fa72b880b3ccd3dfb834a5dc963e1dafc743

	cleaned things up, added key based debugging and info filter.

	Fri Mar  7 14:50:16 2003  Tim Janik  <timj@gtk.org>

	        * sfilog.[hc]: cleaned things up, added key based debugging
	        and info filter.

	        * sfi*.c: use SFI for debugging.

	svn path=/trunk/; revision=949

2003-03-07  Tim Janik 	# 7a41ca3b8674195a2cf98491778f6c8dfa076ef4

	updates

	svn path=/trunk/; revision=948

2003-03-07  Tim Janik 	# c1076e1412b39618a21ff487283fc99ea599ecfd

	fixup status messages.

	Fri Mar  7 03:46:44 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackrollctrl.c: fixup status messages.

	svn path=/trunk/; revision=947

2003-03-07  Tim Janik 	# 46783f7fe52eb5e5e01ca83abb9038c880e36efe

	removed cruft. fix time types.

	Fri Mar  7 03:37:47 2003  Tim Janik  <timj@gtk.org>

	        * bsesuper.[hc]: removed cruft. fix time types.

	        * bseutils.[hc]: removed already replaced timing functions.

	svn path=/trunk/; revision=946

2003-03-07  Tim Janik 	# 73a0b5dd48663cf2490fd86c8172c60029ff6d77

	clamp argument into sfi's min and max time.

	Fri Mar  7 03:45:12 2003  Tim Janik  <timj@gtk.org>

	        * sfitime.c (sfi_time_to_string): clamp argument into sfi's
	        min and max time.

	        * testsfi.c (test_time): added few more tests.

	svn path=/trunk/; revision=945

2003-03-06  Tim Janik 	# 8d253678537ba63f3e35c4a4e65a7a04956b1f8d

	updates

	svn path=/trunk/; revision=944

2003-03-06  Tim Janik 	# 20305dc89bb8c2684eefd4cd68a21da9dc440546

	minor doc fix

	svn path=/trunk/; revision=943

2003-03-06  Tim Janik 	# c21ae38119eb9b80449f98072c3488de398ddd17

	updates

	svn path=/trunk/; revision=942

2003-03-06  Tim Janik 	# 5047643ddee2b4878e0c381f1d67a074d11a3246

	removed SEQID column, since the SeqId is pretty useless for tracks. added

	Thu Mar  6 06:09:18 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: removed SEQID column, since the SeqId
	        is pretty useless for tracks. added Synth column to allow the user
	        to choose the SNet for a track. skip per-track property editing
	        elements. implemented upath matching algorithm for synth lookups.
	        however, we still need a convenient popup window to let the
	        user graphically select synths (or waves).

	        * beast-gtk/gxk/gxkutils.c: added function to create popup
	        cell renderer columns.

	        * beast-gtk/gxk/gxkcellrendererpopup.[hc]: new file implementing
	        a GtkCellRendererText derived cell renderer: GxkCellRendererPopup,
	        and a GtkEventBox derived GtkCellEditable interface proxy:
	        GxkProxyEditable. the latter is needed to have multiple widgets
	        make up an editable cell. the actual popup window doesn't yet
	        work, though the rest of the code seems to be in sufficient
	        shape now.

	svn path=/trunk/; revision=941

2003-03-06  Tim Janik 	# 6a233fd939087e7a9b6b3b5edfabf854e9f874a9

	removed ::part property hack. ignore snet changes while our internal sub

	Thu Mar  6 05:59:44 2003  Tim Janik  <timj@gtk.org>

	        * bsetrack.c: removed ::part property hack.
	        ignore snet changes while our internal sub synth is prepared
	        (locked) since changes have no effect then anyway.

	svn path=/trunk/; revision=940

2003-03-05  Tim Janik 	# 8ce360fe0a30da3c737b0c5ab413715f7f5274cf

	document part-link tool.

	Wed Mar  5 23:19:28 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/catalog-en.c (tools_en): document part-link tool.

	        * beast-gtk/bsttrackrollctrl.c (controller_update_canvas_cursor):
	        support linking of parts.

	        * beast-gtk/icons/part-copy.xcf:
	        * beast-gtk/icons/part-copy.c: part copying/linking image.

	        * beast-gtk/Makefile.am (beast_DEPENDENCIES): fix key scanning
	        build rule.

	        * docs/modifiers.txt: new file, holding comments about modifiers
	        affecting selections and dnd.

	svn path=/trunk/; revision=939

2003-03-05  Tim Janik 	# 2adf9f6901c24d51dd7187f789c7a5d024664bb7

	naming fixup

	svn path=/trunk/; revision=938

2003-03-05  Tim Janik 	# 815b1fbe4fed086a8fcdc00e00511e3a03b4a04e

	removed tool selections, BstTrackRollCtrl takes care of that now. setup

	Wed Mar  5 01:51:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.[hc]: removed tool selections,
	        BstTrackRollCtrl takes care of that now. setup radio tool
	        accelerators.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_widget_activate_accel_group()
	        to support per widget accelerator groups.

	        * beast-gtk/bstradiotools.[hc]: code cleanups. added accel group
	        and tool accelerators support. support BstCatalog tools.

	        * beast-gtk/bsttrackrollctrl.[hc]: moved tool selections here,
	        the track roll controler now creates his own radio tools, make
	        use of catalog tool definitions. removed code that became useless.

	        * beast-gtk/bstdefs.h: added dummy macros to allow for catalog
	        key and i18n string markup.

	        * beast-gtk/bstmain.c: added i18n markup.

	        * beast-gtk/bstcatalog.[hc]: started on a catalog mechanism
	        to lookup messages and other translatable things which aren't
	        good to be handled by gettext.

	        * beast-gtk/catalog-en.c: english catalog holding tool
	        definitions (name, icon, tooltip, etc.) for ctalog keys.

	        * beast-gtk/scankeys.c: small tool to grep for specific key
	        macros in C sources.

	        * beast-gtk/Makefile.am: add a rule that verifies there're
	        are no undefined catalog keys being used in the program.

	svn path=/trunk/; revision=937

2003-03-03  Stefan Westerfeld 	# 029a3a1e886f30e34437fc68a4f76d4ef4f15a23

	slightly beautified mutex init code.

	Mon Mar  3 23:17:18 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: slightly beautified mutex init code.

	svn path=/trunk/; revision=936

2003-03-03  Stefan Westerfeld 	# 08000746b9b8f917a84f2cca22132f0d05cb4f93

	initialize CSL with a mutex, as BSE is multithreaded.

	Mon Mar  3 22:42:25 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: initialize CSL with a mutex, as BSE is
		multithreaded.

	svn path=/trunk/; revision=935

2003-03-03  Stefan Westerfeld 	# 83355b1cf69737b79273130549837c52bae9dce9

	Updating entries.

	svn path=/trunk/; revision=934

2003-03-03  Tim Janik 	# fa028f19f8cc089395ceaacccff5c6277fe67540

	added CSL.

	Mon Mar  3 16:04:55 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-related.texi: added CSL.

	        * docs/site-news.texi: post an update on the LinuxForum news entry.

	svn path=/trunk/; revision=933

2003-02-28  Tim Janik 	# a4d9dbd21e72827fae7c00e3cd587968e431431e

	updates

	svn path=/trunk/; revision=932

2003-02-27  Alper Ersoy 	# 7cd89242c995270be8929531c16ebdb12c26ca80

	remove all non-alphanumeric characters from function and type names

	Thu Feb 27 05:21:47 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/reference-filter.pl: remove all non-alphanumeric
	        characters from function and type names instead of just parentheses,
	        asterisks and whitespaces at the end. made the loop that iterates over
	        index_files array more Perl-ish. changed indentation to be on par with
	        docs/generated/scandocs.pl.

	svn path=/trunk/; revision=931

2003-02-26  Tim Janik 	# d3c1e47a467d60edda1b89bbd7bb1f920437a782

	add news blurb about LinuxForum 2003.

	Thu Feb 27 00:02:09 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: add news blurb about LinuxForum 2003.

	svn path=/trunk/; revision=930

2003-02-26  Tim Janik 	# 560e5dabc2d54247baab7136c3dc054b420b2de4

	adjusted hzoom range.

	Wed Feb 26 23:02:18 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackroll.c: adjusted hzoom range.

	        * beast-gtk/bsttrackrollctrl.[hc]: added quantization functions, fixed
	        all operations to properly quantize according to the current setting.

	        * beast-gtk/bsttrackview.[hc]: added quantization radio tools. fixed
	        destruction of radio tool objects. added hzoom spinner.

	        * beast-gtk/bstradiotools.[hc]: added bst_radio_tools_destroy() to force
	        signal connections to be destroyed and the radio tool to be cleared.
	        added bst_radio_tools_build_toolbar_choice() which creates the radio
	        tools as toolbar choice items.

	        * beast-gtk/gxk/gxktoolbar.[hc]: added gxk_toolbar_choice_select(),
	        gxk_toolbar_choice_is_selected() and gxk_toolbar_choice_is_item(),
	        so choice items can be adjusted apart from the callback API.

	        * beast-gtk/bstdefs.h: added quantization enum.

	        * beast-gtk/icons/notes.xcf: added layer for tact quantization.

	        * beast-gtk/icons/qtact.png: tact quantization icon.

	svn path=/trunk/; revision=929

2003-02-25  Tim Janik 	# fc152adcb86aaf2f4d1045419e9f82992bd72794

	provide link for CSL.

	Tue Feb 25 15:22:24 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: provide link for CSL.

	svn path=/trunk/; revision=928

2003-02-23  Tim Janik 	# d297d38d263309e14f1aada8fe6726b2980b8b1e

	virtualize set_container().

	Sat Feb 22 17:10:34 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.[hc]: virtualize set_container().

	        * beast-gtk/bsttrackroll.[hc]: provide just ::drag and ::clicked signals
	        for control widgets. support tick markers. added vpanel for miniscopes.
	        polished overall layout.

	        * beast-gtk/bsttrackrollctrl.[hc]: support track roll position pointers.
	        adoptions to track roll changes.

	        * beast-gtk/bsttrackview.[hc]: support song position and loop pointers
	        and offer loop toggle button.

	        * beast-gtk/gxk/gxkutils.[hc]: added convenience function gxk_color_alloc().
	        fixed up gxk_tree_view_get_row_area() to return FALSE for empty trees.

	        * beast-gtk/bstmarker.[hc]: generic vertical marker drawing code. point of
	        this implementation is to prevent exposes on the host widget while moving
	        markers.

	        * beast-gtk/icons/Makefile.am:
	        * beast-gtk/icons/loopleft.xcf:
	        * beast-gtk/icons/loopleft.png:
	        * beast-gtk/icons/loopright.png:
	        * beast-gtk/icons/repeat.xcf:
	        * beast-gtk/icons/repeat.png:
	        * beast-gtk/icons/tickpointer.png: new tick loop/pointer/repeat icons.

	svn path=/trunk/; revision=927

2003-02-23  Tim Janik 	# c788140df71ebb3c6dfd29885f18f7a6d2ae02b2

	virtualize set_container().

	Sat Feb 22 17:10:34 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.[hc]: virtualize set_container().

	        * beast-gtk/bsttrackroll.[hc]: provide just ::drag and ::clicked signals
	        for control widgets. support tick markers. added vpanel for miniscopes.
	        polished overall layout.

	        * beast-gtk/bsttrackrollctrl.[hc]: support track roll position pointers.
	        adoptions to track roll changes.

	        * beast-gtk/bsttrackview.[hc]: support song position and loop pointers
	        and offer loop toggle button.

	        * beast-gtk/gxk/gxkutils.[hc]: added convenience function gxk_color_alloc().
	        fixed up gxk_tree_view_get_row_area() to return FALSE for empty trees.

	        * beast-gtk/icons/Makefile.am:
	        * beast-gtk/icons/loopleft.xcf:
	        * beast-gtk/icons/loopleft.png:
	        * beast-gtk/icons/loopright.png:
	        * beast-gtk/icons/repeat.xcf:
	        * beast-gtk/icons/repeat.png:
	        * beast-gtk/icons/tickpointer.png: new tick loop/pointer/repeat icons.

	svn path=/trunk/; revision=926

2003-02-23  Tim Janik 	# 6bba850c3c2f7eebfc37ad0429b12f63ca1ec997

	added properties for song looping and exported son gposition pointer,

	Sat Feb 22 17:10:34 2003  Tim Janik  <timj@gtk.org>

	        * bsesong.[hc]: added properties for song looping and exported
	        son gposition pointer, accompanied by a signal ::pointer-changed
	        for realtime updates.

	        * bsessequencer.[hc]: support song looping.

	svn path=/trunk/; revision=925

2003-02-23  Tim Janik 	# adec38ab1d364f5f95ff1f09038d1e8b92314903

	minor fixups

	svn path=/trunk/; revision=924

2003-02-23  Tim Janik 	# 2b4765096814c01bdc2aac5ca9668055abfec119

	darken title backgrounds somewhat and make links non-greenish on hover.

	Sun Feb 23 18:54:17 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/css/default.css: darken title backgrounds somewhat and
	        make links non-greenish on hover.

	svn path=/trunk/; revision=923

2003-02-23  Tim Janik 	# 520635bae3ecafe107ca1b39456e3b51d91e0ad7

	link update.

	Sun Feb 23 15:19:35 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-synthesis.texi: link update.

	        * docs/generated/Makefile.am (site-preview): new rule to build up
	        website content in ~/private_html/beast-preview/. so stuff can be
	        browsed before beast.gtk.org is updated.

	svn path=/trunk/; revision=922

2003-02-21  Tim Janik 	# 65bd0a550087f63fd4e521758533bfa6f7a17701

	shut up

	svn path=/trunk/; revision=921

2003-02-21  Tim Janik 	# 450d5e866460478c84002ad96b3f856d6bd71529

	added a new website news entry sketching recent development highlights.

	Fri Feb 21 22:24:43 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: added a new website news entry sketching
	        recent development highlights.

	svn path=/trunk/; revision=920

2003-02-21  Tim Janik 	# 4f5b38968d6bff6931cf45fc19e9102cc1723434

	call xml files with unfixed cross references *.crossfix.xml. generate xml

	Fri Feb 21 20:02:16 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am: call xml files with unfixed cross
	        references *.crossfix.xml. generate xml files from texi sources
	        without intermediate temporary files. create pass beast-man:
	        protocoll specification into generation of index.lst.
	        added gnome-index.lst to the cross reference fixup rule.

	        * docs/generated/gnome-index.lst.gz: index file containing anchors
	        and links of glib/pango/gdk/gtk/gnome API docs on developer.gnome.org.

	        * docs/generated/reference-filter.pl: support multiple index files.

	        * docs/generated/reference-index.xsl: figure the index reference
	        from a stringparam $protocol.

	        * docs/generated/css/default.css: resurrect hover underlines
	        for navigation items. underline clickable cross references.

	svn path=/trunk/; revision=919

2003-02-21  Tim Janik 	# 15eebd2a72362e286771c7327a94be8948f22c96

	new file added by Alper Ersoy to extract cross references from existing

	Fri Feb 21 19:14:55 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/reference-index.xsl: new file added by
	        Alper Ersoy to extract cross references from existing
	        xml files.

	        * docs/generated/reference-filter.pl: new file added by
	        Alper Ersoy to insert fixed cross references into certain
	        xml files.

	Thu Feb 20 01:03:35 2003  Alper Ersoy  <dirt@gtk.org>

	        * bse/bseautodoc.c:
	        * docs/teximacros.texi:
	        * docs/generated/Makefile.am:
	        * docs/generated/scandocs.pl: made function and struct names links to
	        their descriptions where possible.

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl: added support for anchors in beast-man://
	        urls.

	        * docs/generated/man.xsl: fixed a few typos, improved layout in a few
	        places, especially in tables.

	        * docs/site-news.texi: fixed an overlooked macro name with a dash.

	        * docs/generated/css/default.css: removed underlines in navigation
	        link hovers in favor of colors. added colors for links.

	svn path=/trunk/; revision=918

2003-02-21  Alper Ersoy 	# 9cceeec0199b475c65c15192457e34fdb0f7f571

	made function and struct names links to their descriptions where possible.

	Thu Feb 20 01:03:35 2003  Alper Ersoy  <dirt@gtk.org>

	        * bse/bseautodoc.c:
	        * docs/teximacros.texi:
	        * docs/generated/Makefile.am:
	        * docs/generated/scandocs.pl: made function and struct names links to
	        their descriptions where possible.

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl: added support for anchors in beast-man://
	        urls.

	        * docs/generated/man.xsl: fixed a few typos, improved layout in a few
	        places, especially in tables.

	        * docs/site-news.texi: fixed an overlooked macro name with a dash.

	        * docs/generated/css/default.css: removed underlines in navigation
	        link hovers in favor of colors. added colors for links.

	svn path=/trunk/; revision=917

2003-02-18  Stefan Westerfeld 	# 72a3a2e1bc6367a6d8f79a61cdf4f115b9d13b0a

	fixes to build without warnings on gcc-3.2.

	Tue Feb 18 17:54:40 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* beast-gtk/bstgconfig.c beast-gtk/bstmenus.c beast-gtk/bstrackitem.c
		beast-gtk/bstsnetrouter.c beast-gtk/tsmview.c
		beast-gtk/gxk/gxkstock.c docs/utils/xmlantispace.c: fixes to build
		without warnings on gcc-3.2.

	svn path=/trunk/; revision=916

2003-02-18  Stefan Westerfeld 	# 09ecb7943239be961449cc830e1a350597077bb2

	fixes to build without warnings on gcc-3.2.

	Tue Feb 18 17:51:11 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bseadder.c bseiirfilter.c bsemixer.c bsemult.c davxtalstrings.c:
		fixes to build without warnings on gcc-3.2.

	svn path=/trunk/; revision=915

2003-02-18  Stefan Westerfeld 	# 57215c9cb33a5d92ace616d5602a05ce290f6542

	fixes to build without warnings on gcc-3.2.

	Tue Feb 18 17:47:17 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bseautodoc.c bsebindata.c bseconstant.c bsecontextmerger.c
		bsedatapocket.c bseitem.c bsemagictest.c bseparasite.c
		bsepcmdevice-oss.c bsequery.c bseserver.c bsestandardsynths.c
		bsesubinstrument.c bsesubiport.c bsesubkeyboard.c bsesuboport.c
		bsesubsynth.c bsewave.c gslffttest.c gslfilter.c
		gslloader-oggvorbis.c gslloader-wav.c gslwaveosc.c gslwchunk.c
		zintern/zintern.c: fixes to build without warnings on gcc-3.2.

	svn path=/trunk/; revision=914

2003-02-18  Stefan Westerfeld 	# a0a52d2ae68569d1bd3f8692a3e26bde64d61d4d

	fixes to build without warnings on gcc-3.2.

	Tue Feb 18 16:39:38 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfimemory.c sfinote.c sfiprimitives.c sfithreads.c sfitypes.c
		testsfi.c toyprof-mem.c: fixes to build without warnings on gcc-3.2.

	svn path=/trunk/; revision=913

2003-02-18  Tim Janik 	# 4b1cb13a34edf1279de4e5138a6fb3d598875d21

	allow building without . in $PATH

	svn path=/trunk/; revision=912

2003-02-18  Tim Janik 	# acd522d222d6b0d6f8ba3cf10c36a678e3b7c288

	don't forget following parts when checking whether a track is done.

	Tue Feb 18 16:56:22 2003  Tim Janik  <timj@gtk.org>

	        * bsessequencer.c (bse_ssequencer_process_track_SL): don't forget
	        following parts when checking whether a track is done.

	svn path=/trunk/; revision=911

2003-02-18  Tim Janik 	# d2f1e3afc8a2d311a4e2edfc16c29fd91fec1d56

	refine debugging messages.

	Tue Feb 18 16:29:17 2003  Tim Janik  <timj@gtk.org>

	        * sfilog.c (sfi_log_message): refine debugging messages.

	svn path=/trunk/; revision=910

2003-02-18  Tim Janik 	# 633da3e2d47e4f21755ffce301629df815cc728c

	decrement n_items _after_ uncrossing to keep n_items checks in uncrossing

	Tue Feb 18 16:29:34 2003  Tim Janik  <timj@gtk.org>

	        * bsecontainer.c:
	        (bse_container_do_remove_item): decrement n_items _after_ uncrossing
	        to keep n_items checks in uncrossing logic working.
	        (_bse_container_cross_unlink): give precedence to recursively unlinked
	        cross references over further existing cross links.
	        (_bse_container_uncross_descendant):
	        (_bse_container_uncross): reload BseContainerCrossLinks* which might
	        have been reallocated during callbacks.

	        * bsetrack.c:
	        (track_uncross_part): stop after the first part to uncross was found.

	svn path=/trunk/; revision=909

2003-02-18  Stefan Westerfeld 	# a40ccc01e2569a74ec8d728091675c40c4d3efec

	make sfi_value_type_transformable actually call

	Tue Feb 18 16:29:19 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfivalues.c: make sfi_value_type_transformable actually call
		g_value_type_transformable, which makes it actually work.

	svn path=/trunk/; revision=908

2003-02-18  Tim Janik 	# d9bff9627ed1d9f5ae11869afe3204e63b8e613a

	spacing fixup requested by alper

	svn path=/trunk/; revision=907

2003-02-18  Stefan Westerfeld 	# 87e9990c8f6bc736b2be72fe79bff35ebf1d2ed3

	use BSE_PCM_DEVICE_CSL_SUPPORT (which is in the BSE namespace) instead of

	Tue Feb 18 01:09:06 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* bsepcmdevice-csl.c: use BSE_PCM_DEVICE_CSL_SUPPORT (which is in the
		BSE namespace) instead of HAVE_LIBCSL

	svn path=/trunk/; revision=906

2003-02-18  Stefan Westerfeld 	# b7a2e8e6ce59d826a2e69e7e174262f472e9e838

	cleanups of the libcsl configure stuff.

	Tue Feb 18 01:11:12 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in: cleanups of the libcsl configure stuff.

	svn path=/trunk/; revision=905

2003-02-18  Stefan Westerfeld 	# d0e2d4d14f528c9432f1ad81fefdb96a86d81034

	Wrong ChangeLog.

	svn path=/trunk/; revision=904

2003-02-17  Stefan Westerfeld 	# 60c7afbbd7568a14ddcfc643eb563b7c9f3a52b9

	libcsl support

	Mon Feb 17 22:52:02 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* configure.in bse/Makefile.am: libcsl support

		* bse/bsepcmdevice-csl.[hc]: new PCM device implementation for
		libcsl (Common Sound Layer). This allows using beast with artsd.

		* bse/bsepcmdevice-oss.c: bugfix: close filedescriptor when >= 0,
		not when < 0.

	svn path=/trunk/; revision=903

2003-02-17  Stefan Westerfeld 	# c6123c917600a7e92556b1a3d5d0e4e79d53a079

	fixed wrong sed expression.

	Mon Feb 17 20:57:55 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* acbeast.m4: fixed wrong sed expression.

	svn path=/trunk/; revision=902

2003-02-17  Tim Janik 	# 1ba829f1df5ed6d2530803d6a1b27a8e5187ca66

	make the first song page the default notebook page if the project cotains

	Mon Feb 17 19:33:19 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: make the first song page the default notebook
	        page if the project cotains a song. otherwise, make the first snet
	        page the default notebook page if the project contains one.

	        * beast-gtk/gxk/gxkutils.[hc]:
	        added gxk_notebook_set_current_page_widget().

	svn path=/trunk/; revision=901

2003-02-17  Tim Janik 	# 50ff0bad37bfc4414c95b30eaab565814c4465bc

	make the synth router the first notebook page.

	Mon Feb 17 18:38:11 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetshell.c (bst_snet_shell_rebuild): make the synth
	        router the first notebook page.

	        * test/simple-echo.bse: fix instrument "done" output.

	        * test/*.bse: storage format fixups.

	svn path=/trunk/; revision=900

2003-02-17  Tim Janik 	# 51eb70548fa73d38a136335dbfdc1e53a3e2604e

	register choice<=>enum transform functions for dynamic enum types.

	Mon Feb 17 18:34:46 2003  Tim Janik  <timj@gtk.org>

	        * bseplugin.c (bse_plugin_register_exports): register choice<=>enum
	        transform functions for dynamic enum types.

	        * bsestorage.[hc]: keep internal hash table of objects and their unames
	        created during parsing. resolve uname paths via internal hash table if
	        possible to give storage scope objects precedence over existing objects.
	        removed BSE_OBJECT_FLAG_FIXED_UNAME hackery.

	svn path=/trunk/; revision=899

2003-02-17  Tim Janik 	# 18dc3930eeddb50c71cf75e3ae2e3bb84e3de52b

	<sigh>, added sfi_value_transform(), sfi_value_type_compatible() and

	Mon Feb 17 19:07:13 2003  Tim Janik  <timj@gtk.org>

	        * sfivalues.[hc]: <sigh>, added sfi_value_transform(),
	        sfi_value_type_compatible() and sfi_value_type_transformable()
	        to work around bugs in equally named glib functions. GLib-2.2.1
	        (and prior) can't register transform functions for dynamic types,
	        so we hardcode choice<=>enum transforms in these functions.
	        changed all callers of related glib functions.

	        * sfivalues.c (sfi_value_choice2enum_simple): provide
	        sfi_value_choice2enum_simple() which is readily usable as transform
	        function.

	svn path=/trunk/; revision=898

2003-02-17  Tim Janik 	# dc4224eda2ce467213ba0239993c4c9cde202a7b

	use global ID allocator.

	Mon Feb 17 15:31:41 2003  Tim Janik  <timj@gtk.org>

	        * bseobject.c:  use global ID allocator.

	        * bsesnet.[hc]: nuke per-object id allocator, use global ID allocator.

	        * bseutils.[hc]: removed old functions. updated bse_string_hash().
	        added global ID allocator.

	svn path=/trunk/; revision=897

2003-02-17  Tim Janik 	# 0ebbf4370076d94ee9ed57d830d64a40122853c9

	fix return type.

	Mon Feb 17 15:20:10 2003  Tim Janik  <timj@gtk.org>

	        * sfimemory.[hc] (sfi_alloc_upper_power2): fix return type.

	svn path=/trunk/; revision=896

2003-02-16  Tim Janik 	# 20ba4ff8d3d4b37c4a314f17479067719c07b1a5

	more sfidl TODO updates

	svn path=/trunk/; revision=895

2003-02-16  Tim Janik 	# 80beacbb744f16458b0a321aa3b03dca3ecf5214

	support merging an existing project with BSE file contents.

	Sun Feb 16 09:01:28 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c (bst_file_dialog_open): support merging
	        an existing project with BSE file contents.

	        * beast-gtk/bstapp.c: added /File/Merge menu entry.

	svn path=/trunk/; revision=894

2003-02-15  Tim Janik 	# e939ac4a59be986ffcc497080e0c65bc7cd67ed4

	grrrr

	svn path=/trunk/; revision=893

2003-02-15  Tim Janik 	# eed512bc35a3f74787ae54fbbb960390b126faa6

	fix stw

	svn path=/trunk/; revision=892

2003-02-15  Tim Janik 	# 33adfb1097a51a7410d9d6e1208b1b72c30b7a81

	updates

	svn path=/trunk/; revision=891

2003-02-15  Tim Janik 	# 70529f129daa3b219bb5664aab4a26812aced6ab

	adoptions.

	Fri Feb 14 07:50:29 2003  Tim Janik  <timj@gtk.org>

	        * test/test-song.bse: adoptions.

	svn path=/trunk/; revision=890

2003-02-15  Tim Janik 	# 705c11c7835e154af5d09076e5a733da8245d1fe

	major overhaul. made BseStorage an object. moved GObject property storage

	Fri Feb 14 07:50:29 2003  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]: major overhaul. made BseStorage an object.
	        moved GObject property storage and parsing logic to here.
	        provide highlevel storage and parsing primitives and keep the
	        basic storage/parsing logic in a single place (bse_storage_store_item()
	        and item_restore_try_statement()). use sfi_storage_scanner_config.

	        * bseproject.[hcp]*: adapt to new BseStorage code, simplified parsing
	        logic.

	        * bsesong.c: removed uneccessary parsing hooks.

	        * bseparasite.[hc]: just provide bse_parasite_restore() amd
	        bse_parasite_store() and rely on BseStorage to invoke parasite
	        parsing/storage code when apropriate.

	        * bseobject.[hc]:
	        * bseitem.[hc]: removed lots of the complicated parsing and storage
	        logic.

	        * bsecontainer.[hc]: removed serialization methods.
	        just provide bse_container_store_children() to loop over all children
	        that need to be stored.

	        * bsewave.c:
	        * bsepart.c:
	        * bsetrack.c:
	        * bsesource.c:
	        * bsedatapocket.c: cleanup and fix restore_private() implementation.

	svn path=/trunk/; revision=889

2003-02-15  Tim Janik 	# 341ff09ee0c648c5d039efdb983d355081600c2a

	newline and indent before storing values. (sfi_serialize_primitives):

	Fri Feb 14 07:46:01 2003  Tim Janik  <timj@gtk.org>

	        * sfiserial.c (sfi_value_store_param): newline and indent before
	        storing values.
	        (sfi_serialize_primitives): store doubles with at most 17 significant
	        digits to avoid roundoff junk being stored.

	        * sfiserial.[hc]: export sfi_serial_check_parse_null_token() and
	        SFI_SERIAL_NULL_TOKEN to have a single point of NULL/nil token handling.

	svn path=/trunk/; revision=888

2003-02-14  Stefan Westerfeld 	# b147ffc129560119b5546590e42cebccab643719

	add space between tokens that are simply parsed out of the .sfidl file and

	Fri Feb 14 11:17:51 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.cc: add space between tokens that are simply parsed
		out of the .sfidl file and added to the .c source as-they-are, to
		allow string concatenation (SFI_PARAM_DEFAULT SFI_PARAM_HINT_SCALE).

	svn path=/trunk/; revision=887

2003-02-13  Tim Janik 	# 7450df0510e955453bc9f594c17c7baa98353b65

	added libz check. require libz for BSE.

	Thu Feb 13 10:53:59 2003  Tim Janik  <timj@gtk.org>

	        * configure.in: added libz check. require libz for BSE.

	        * beast-gtk/icons/Makefile.am: fix EXTRA_DIST filter.

	svn path=/trunk/; revision=886

2003-02-13  Tim Janik 	# b7e79793ee9c2e93965eb6b7e0a0ec6128af9433

	support "synthlist" and "synth" qualifiers to retrieve dumps of standard

	Thu Feb 13 10:43:23 2003  Tim Janik  <timj@gtk.org>

	        * bsequery.c: support "synthlist" and "synth" qualifiers to retrieve
	        dumps of standard synth definitions.

	        * bsestandardsynths.[hc]: nuked old synth generation code. added
	        bse_standard_synth_get_list() and bse_standard_synth_lookup() to
	        retrieve standard synth definitions.

	        * zintern/mono-wave.bse: added mono wave synth.

	        * zintern/zintern.c: small utility to generate C source to inline
	        file contents, supporting libz compression of the file contents.

	        * zintern/Makefile.am: added new subdir zintern/ for inlined BSE
	        files (synth definitions).

	svn path=/trunk/; revision=885

2003-02-13  Tim Janik 	# bd29e48bbb222d10da0d997cdae7520824f69f11

	provide bse_midi_receiver_voices_pending() which also accounts for pending

	Thu Feb 13 02:22:41 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]: provide bse_midi_receiver_voices_pending()
	        which also accounts for pending events, instead of
	        bse_midi_receiver_has_active_voices().

	        * bsesong.proc (find-track-for-part): adapt to using
	        bse_track_find_part().

	        * bsessequencer.c: split sequencing code into distinct functions for
	        songs, tracks and parts. use bse_track_get_part_SL() to step through
	        the parts of a track.

	        * bsetrack.[hc]: provide bse_track_find_part() to retrieve the tick
	        start of a certain part. provide bse_track_get_part_SL() for sequencer
	        lookups.
	        got rid of ->part_SL member.

	svn path=/trunk/; revision=884

2003-02-12  Alper Ersoy 	# 01ac9323520e1033c82b1e587ce4bed4de6d8d1f

	fixed man/nroff build process and added a descriptive comment of the steps

	Tue Feb 11 11:46:52 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/generated/Makefile.am: fixed man/nroff build process and added
	        a descriptive comment of the steps taken.

	        * docs/generated/log2texi.sh: added artificial spaces around @uref
	        substitutions.

	        * docs/generated/markup.xsl: added <reference-constant> to the
	        reference generation templates.

	        * TODO: made updates.

	        * bse/bseautodoc.c:
	        * docs/site-news.texi:
	        * docs/site-oldnews.texi:
	        * docs/teximacros.texi:
	        * docs/generated/log2texi.sh:
	        * docs/generated/scandocs.sh: dropped underscores in @reference_* and
	        @news_title macros' names for texinfo-4.5 compatibility.

	svn path=/trunk/; revision=883

2003-02-11  Tim Janik 	# 5f9b8489eb46be562be2003a86e4eaa3ac4e0a98

	allow NULL as signal name.

	Tue Feb 11 03:10:19 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkutils.c (gxk_signal_handler_pending): allow NULL as
	        signal name.

	        * beast-gtk/gxk/gxkutils.c: allow tree columns to be reordered.

	svn path=/trunk/; revision=882

2003-02-11  Tim Janik 	# 51bc13394cf5786cbf25a79ccc48d4c2b4156621

	added bse_object_reemit_signal() and bse_object_remove_reemit() to forward

	Tue Feb 11 06:58:09 2003  Tim Janik  <timj@gtk.org>

	        * bseobject.[hc]: added bse_object_reemit_signal() and
	        bse_object_remove_reemit() to forward signal emissions
	        from one object to another.
	        added convenience functions bse_object_proxy_notifies() and
	        bse_object_unproxy_notifies() to forward signals relevant
	        for an object reference.

	        * bsetrack.c: fixed up cross-references. keep cross
	        references on inserted parts, fixup finalization leaks.
	        proxy name changes and last-tick changes from parts to
	        ::changed.

	        * bseitem.[hc]: renamed cross-ref to cross-link in public API.
	        removed bse_item_list_cross_owners() and bse_item_has_cross_owners().
	        bse_item_uncross() now removes _all_ existing cross links,
	        bse_item_cross_unlink() now requires uncross_func passed in to
	        a previous call to bse_item_cross_link().

	        * bsecontainer.[hc]: reworked and cleaned up cross links.
	        allow removal of cross-links during uncross_func() invocation.
	        removed bse_container_cross_forall().

	svn path=/trunk/; revision=881

2003-02-11  Tim Janik 	# d2bb4e12e4366d47eb5919cadd6df3303789e545

	added sfi_glue_proxy_pending() to test for existing signal connections on

	Tue Feb 11 03:16:51 2003  Tim Janik  <timj@gtk.org>

	        * sfiglueproxy.[hc]: added sfi_glue_proxy_pending() to test for
	        existing signal connections on a proxy.

	svn path=/trunk/; revision=880

2003-02-10  Tim Janik 	# c61c23229c6cd1f59523af56710294f51658dd11

	supply drag data with information about validity of the current drag row.

	Mon Feb 10 23:54:43 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackroll.[hc]: supply drag data with information
	        about validity of the current drag row.

	        * beast-gtk/bsttrackrollctrl.c (editor_once): minor insertion fix.

	        * beast-gtk/gxk/gxkutils.c (gxk_tree_view_get_row_from_coord): return
	        whether the pointer is within visible row area and clamp ro to
	        visible rows.

	        * beast-gtk/bstsongshell.c (bst_song_shell_rebuild): switch notebook
	        page order for songs to allow easy editing of track view.

	svn path=/trunk/; revision=879

2003-02-10  Tim Janik 	# ffa349e9d77a25d69e992ada6c366569ce292b0f

	added editable tree view columns to mute tracks and for maximum number of

	Mon Feb 10 20:12:36 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttrackview.c: added editable tree view columns to
	        mute tracks and for maximum number of voices.

	        * beast-gtk/gxk/gxkutils.[hc]:
	        renamed gxk_tree_view_add_editable_text_column() to
	        gxk_tree_view_add_text_column() and added tooltip argument.
	        added gxk_tree_view_add_toggle_column() similar to the above function.
	        added gxk_tree_view_column_set_tip_title() to allow setting of
	        tooltips on tree view columns that isn't possible through the public
	        API.

	svn path=/trunk/; revision=878

2003-02-10  Tim Janik 	# dd58a9b30624761f7779297d93dc3307e7dfd3c5

	handle invalid value types with sfi_warn() and do lax value validation.

	Mon Feb 10 21:37:54 2003  Tim Janik  <timj@gtk.org>

	        * bseglue.c (bglue_proxy_set_property): handle invalid value
	        types with sfi_warn() and do lax value validation.

	        * bsessequencer.c (bse_ssequencer_process_song_SL): don't play
	        notes of muted tracks.

	        * bsetrack.[hc]: added ::muted property to silence a track during
	        playback.

	svn path=/trunk/; revision=877

2003-02-09  Tim Janik 	# c353ef0b7d165ecec3a8988c16bdbf4bef98abd2

	protect explicit newlines "@*" from variable markup.

	Sun Feb  9 19:05:48 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/scandocs.pl (tags_highlight): protect explicit
	        newlines "@*" from variable markup.

	svn path=/trunk/; revision=876

2003-02-09  Tim Janik 	# cb581df23f2f0ce540bb3f2ed8da9cf8843c40e5

	keep current radio tool if users click on an already depressed toggle

	Sun Feb  9 18:33:11 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstradiotools.c (rtools_toggle_toggled): keep current radio
	        tool if users click on an already depressed toggle button.

	        * beast-gtk/bsttrackrollctrl.c: support firing up part editor and
	        part deletion (from a track).

	        * beast-gtk/bsttrackview.c: more GUI work, added toolbar for part
	        operations.

	        * beast-gtk/bstpianoroll.c (bst_piano_roll_realize): force cursor
	        updates in ::realize.

	        * beast-gtk/bstitemview.[hc]: unconditionally create the tools
	        container, the widget holding action buttons (renamed from op_box).
	        support tooltips on action buttons.
	        allow derived classes to pack the tool box away.

	        * beast-gtk/icons/text.xcf:
	        * beast-gtk/icons/text.png:
	        * beast-gtk/icons/Makefile.am: added BST_STOCK_TEXT icon.

	        * beast-gtk/bstradiotools.[hc]: made BstRadioTools derive from
	        GObject (instead of GtkObject).

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_init):
	        * beast-gtk/bstpartdialog.c (bst_part_dialog_init): adapted
	        callers.

	svn path=/trunk/; revision=875

2003-02-09  Stefan Westerfeld 	# d6e0238b3bc3e4e526ea1ac2197b763e78378cf4

	using promoted type as argument for va_arg fixes crashes with gcc-3.2

	Sun Feb  9 17:56:07 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfiglue.c: using promoted type as argument for va_arg fixes
		crashes with gcc-3.2

	svn path=/trunk/; revision=873

2003-02-06  Tim Janik 	# a77ecec1a95b1b442ff1bee7fb243dc25f607253

	fix GtkObject user_data wihch is broken in gtk+2.2.

	Thu Feb  6 22:49:01 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): fix GtkObject user_data wihch is broken in
	        gtk+2.2.

	svn path=/trunk/; revision=872

2003-02-06  Tim Janik 	# c76ef6d0ec78838d3cc35b0639f90c191bbe7e08

	g++-3.2 wants std:: namespacing for strings and sets.

	Thu Feb  6 20:29:00 2003  Tim Janik  <timj@gtk.org>

	        * bseprocidl.cc: g++-3.2 wants std:: namespacing for strings and sets.

	svn path=/trunk/; revision=871

2003-02-06  Tim Janik 	# 1b81e1bb7eed7818f630cb3746fcacf217aad4a9

	remove -freg-struct-return from CFLAGS and CXXFLAGS, it causes broken code

	Thu Feb  6 20:08:02 2003  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: remove -freg-struct-return from CFLAGS and CXXFLAGS,
	        it causes broken code generation on g++-3.2.

	        * acbeast.m4: remove -fnonnull-objects from CXXFLAGS which isn't
	        supported by newer gcc versions anymore.

	svn path=/trunk/; revision=870

2003-02-06  Stefan Westerfeld 	# 91f00c2547cdee4ec36e201adda4fc24894e7b2f

	necessary #includes and std namespacing to compile with gcc-3.2

	Thu Feb  6 19:31:55 2003  Stefan Westerfeld  <stefan@space.twc.de>

		* sfidl-parser.* sfidl.cc: necessary #includes and std
		namespacing to compile with gcc-3.2

	svn path=/trunk/; revision=869

2003-02-05  Tim Janik 	# c13fe9c036a145c85bf763ed5cf3e723079b7910

	updates

	svn path=/trunk/; revision=868

2003-02-05  Tim Janik 	# e91685650fd7c3b0a41aca71eff5e1f816deebc7

	changed links to point to a mirror of http://news.gnome.org because that

	Wed Feb  5 16:48:55 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-about.texi:
	        * docs/site-oldnews.texi: changed links to point to a mirror of
	        http://news.gnome.org because that site got discontinued. referenced
	        articles are kept at http://beast.gtk.org/mirror/gnome-news/.

	        * docs/site-historic.texi: updates.

	svn path=/trunk/; revision=867

2003-02-05  Tim Janik 	# 1a2152c5ba8b666a0768e25fd2700abee67ee843

	wording fixup

	svn path=/trunk/; revision=866

2003-02-05  Tim Janik 	# 5a7b3cba8a4dadd52cde33adc7841ff6f752f48c

	added article links.

	Wed Feb  5 14:38:52 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-historic.texi: added article links.

	svn path=/trunk/; revision=865

2003-02-05  Tim Janik 	# d7153a51c4570fe58f60f73b3e96cddff4105ab3

	fix test code

	svn path=/trunk/; revision=864

2003-02-05  Tim Janik 	# bce244e96d09f6e3f4b1ee09f1b08ce9a62fa97d

	support editable cells.

	Wed Feb  5 03:52:58 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/bsttrackroll.[hc]: support editable cells.

		* beast-gtk/bsttrackrollctrl.c: support part name cell edits.

		* beast-gtk/bsttrackview.c (bst_track_view_create_tree):

		* beast-gtk/gxk/gxklistwrapper.c (gxk_list_wrapper_class_init): added
		::row-changed signal which is emitted before any row changes, usefull
		to abort cell edits.

	Tue Feb  4 18:37:34 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstitemview.[hc]: removed "Name" and "Comment" fields.
		made "Name" and "Comment" columns editable.

		* beast-gtk/gxk/gxkutils.[hc]: moved gxk_tree_view_add_column()
		and gxk_tree_view_append_text_columns() from bstutils.[hc] into
		this place.
		added gxk_tree_view_add_editable_text_column().

	Fri Jan 31 19:43:54 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstitemview.[hc]: made code more versatile and added
		virtual functions so bsttrackview demands can be fullfilled.

		* beast-gtk/bstmain.c: changed developer option from -! to -: to
		workaround sh history expansion.

		* beast-gtk/bsttrackview.c: take over tree widget creation and
		maintenance from item view. put a trackroll alongside and coupled
		with the tree.

		* beast-gtk/gxk/gxkutils.[hc]: added gxk_window_process_next() to
		force asyncronous GdkWindow updates. added tree view related
		convenience functions: gxk_tree_view_get_bin_window_pos(),
		gxk_tree_view_get_row_area(), gxk_tree_view_focus_row(),
		gxk_tree_view_is_row_selected(), gxk_tree_view_get_selected_row()
		and gxk_tree_view_get_row_from_coord().

		* beast-gtk/bsttrackroll.[hc]: new widget, designed to act as
		an extra tree view column, used to display part lists for tracks.

		* beast-gtk/bsttrackrollctrl.[hc]: controller code for BstTrackRoll
		widgets.

		* misc doc fixes.

	Mon Jan 27 22:32:43 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/gxk/gxkutils.[hc]: introduce gxk_window_set_cursor_type()
		to allow simple cursor type settings and to simplify resetting the
		cursor type to inherit the cursor type from the parent.

		* beast-gtk/bstpianoroll.c: simplify cusor handling, minor code
		cosmetics and bug fixes.

		* beast-gtk/bstpianorollctrl.c: fix default cursor setting.

	Fri Jan 24 18:57:53 2003  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstpianoroll.c (bst_piano_roll_realize): remove bogus cursor
		type increment.
		(bst_piano_roll_overlap_grow_hpanel_area): limit fudging by 0.

	svn path=/trunk/; revision=863

2003-02-05  Tim Janik 	# eff7fdf168c113b0be3cd04c33e171056d8b47a9

	provide bse-item-set-name().

	Tue Feb  4 18:20:31 2003  Tim Janik  <timj@gtk.org>

	        * bseitem.proc: provide bse-item-set-name().

	Fri Jan 31 19:37:31 2003  Tim Janik  <timj@gtk.org>

	        * bsetrack.[hcp]*: implemented part lists.

	        * bsetrack.proc: added track procedures to modified part list.

	        * bsepart.[hc]: get rid of ppqn which is provided by songs now.

	        * bsesong.[hc]: provide tpqn (ticks per quarter note) and qnpt
	        (quarter notes per tact) properties.

	        * misc doc fixes.

	svn path=/trunk/; revision=862

2003-02-05  Tim Janik 	# ae1d51fda9f56819155f0a3c968e88f180524f3b

	new function to append en element to an slist if it's not already

	Fri Jan 31 19:36:20 2003  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: new function to append en element to an slist
	        if it's not already contained.

	svn path=/trunk/; revision=861

2003-01-24  Alper Ersoy 	# 843e7ec60ee9b6546ba1364bc69ec4c1e94c93bb

	substituted underscores (_) in class names with dashes (-), so that they

	Fri Jan 24 00:42:20 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/generated/html.xsl:
	        * docs/generated/navigation.xsl:
	        * docs/generated/css/default.css: substituted underscores (_) in
	        class names with dashes (-), so that they are valid now.

	        * docs/teximacros.texi: changed the name of logentry macro to clogentry
	        for more clarification and added a clogitem macro.

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl:
	        * docs/generated/css/default.css:
	        * docs/generated/log2texi.sh: added support for clogentry and clogitem
	        macros.

	        * docs/generates/log2texi.sh: added a @docfont{tech} command to the
	        template.

	svn path=/trunk/; revision=859

2003-01-23  Tim Janik 	# 4bea75d9d2254199d4b9c0e8269f039336339fcf

	s/BEAST Release Notice/BEAST Release Notes/.

	Thu Jan 23 09:36:14 2003  Tim Janik  <timj@gtk.org>

	        * docs/beast-index.texi: s/BEAST Release Notice/BEAST Release Notes/.

	        * docs/release-notes.texi: keep the title centered.

	        * docs/generated/Makefile.am: use $GROFF and $SOELIM instead of
	        plain program names. fixed am-conditional HAVE_DOC_TOOLS.

	        * configure.in: don't try to detect whether this is a CVS build.
	        instead, require the caller to supply --enable-devel-rules=yes if
	        extra development rules should be enabled.
	        added checks for doc generation tools groff and soelim.
	        supply an am-conditional HAVE_DOC_TOOLS based on availability of
	        the doc tools.

	        * autogen.sh: supply --enable-devel-rules=yes to ./configure.

	Thu Jan 23 01:40:09 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/teximacros.texi: added an artificial linebreak at the end of
	        the revision line to avoid a bug with makeinfo that would lead to
	        misfilled paragraphs in info targets.

	        * docs/generated/scandocs.pl: adjusted linebreaks around revision
	        lines.

	        * docs/WRITING.3.texi: completely restructured, added examples for
	        @xref command.

	        * docs/WRITING.3.texi:
	        * docs/quickstart.texi: added @node and @menu commands to make these
	        documents generate more usable info files.

	        * docs/site-navigation.xml:
	        * docs/generated/navigation.xsl: renamed all <node> tags to
	        <navigation-node> to avoid mixing with tags generated via
	        @node commands.

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl: added support for @r, @b, @i, @t, @node,
	        @menu and @xref commands. document font is explicitly set to serif
	        even if it is not defined in the document. changed the way titles are
	        counted and numbered so that they are not affected by the change in
	        the XML structure upon the introduction of @node commands.

	        * docs/generated/markup.xsl: removed center justification from chapter
	        titles in favor of better consistency among different targets.

	        * docs/generated/man.xsl: improved toc and index handling via macros
	        to generate page numbers along with the titles, etc. included the
	        paragraph creation conditionals from other xsl files. added support
	        for block enclosing commands such as @blockquote and @example.
	        adjusted indentation of enumerated and itemized lists.

	        * docs/generated/Makefile.am: modified %.nroff and %.3 rules to take
	        advantage of node and anchor feedback coming from groff.

	        * docs/generated/css/default.css: substituted CSS2 type selectors with
	        HTML-only selectors to please CSS2-unaware browsers. substituted
	        CSS2-only properties with CSS1 properties where possible. added
	        indentation settings for titles in toc sections.

	svn path=/trunk/; revision=858

2003-01-23  Alper Ersoy 	# 87cdc532f04daad9a9df92f50b342d6706cfef2c

	adjusted linebreaks around revision lines.

	Thu Jan 23 01:40:09 2003  Alper Ersoy <dirt@gtk.org>

	        * bseautodoc.c: adjusted linebreaks around revision lines.

	svn path=/trunk/; revision=857

2003-01-22  Tim Janik 	# 6bbcea82d74abb4215a938517761e1a331934865

	general code cleanup, switched this over to using GtkTreeView.

	Wed Jan 22 23:19:58 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.[hc]: general code cleanup, switched this
	        over to using GtkTreeView.

	        * beast-gtk/bstmain.c: support -! as only debug option now.
	        make it accept flags: "g" for fatal warnings and "p" to load
	        plugins.

	        beast-gtk/gxk/gxkutils.[hc]: moved gxk_tree_selection_select_spath()
	        and gxk_tree_selection_unselect_spath() here. added
	        gxk_tree_selection_select_ipath(), gxk_tree_selection_select_ipath(),
	        gxk_tree_selection_force_browse() and gxk_tree_path_prev().

	        * beast-gtk/bstutils.[hc]: remove GtkTreeSelection convenience
	        functions.

	svn path=/trunk/; revision=856

2003-01-22  Tim Janik 	# 7ee417149627e9bac0889f39e6b1bc0b43e8e4c2

	supply sequential ID with ::item-removed as this can't be retrieved

	Wed Jan 22 23:24:50 2003  Tim Janik  <timj@gtk.org>

	        * bsecontainer.[hc]: supply sequential ID with ::item-removed as this
	        can't be retrieved afterwards.

	        * bsecontainer.proc: export proc to actually fetch an item via its type
	        and sequential id.

	svn path=/trunk/; revision=855

2003-01-21  Tim Janik 	# 3cde7c82852c3772d97fa65e75424fcb148bf7b8

	use GxkListWrapper.

	Tue Jan 21 17:56:46 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.[hc]: use GxkListWrapper.

	        * beast-gtk/gxk/gxklistwrapper.[hc]: moved code here from
	        beast-gtk/gtklistwrapper.[hc] and renamed to GxkListWrapper.

	        * beast-gtk/gtklistwrapper.[hc]: removed these.

	svn path=/trunk/; revision=854

2003-01-21  Tim Janik 	# 0a83fd19d12be4df9b985104e16f4f30d5dc4cc0

	use GxkListWrapper.

	Tue Jan 21 17:56:46 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.[hc]: use GxkListWrapper.

	        * beast-gtk/gxk/gxklistwrapper.[hc]: moved code here from
	        beast-gtk/gtklistwrapper.[hc] and renamed to GxkListWrapper.

	        * beast-gtk/gtklistwrapper.[hc]: removed these.

	svn path=/trunk/; revision=853

2003-01-21  Tim Janik 	# 6e1db4b4b0239eeb4d00d0d6a29e0dbb4f01bc4d

	implement ::pino_clicked() and ::piano_drag() signals, renamed

	Mon Jan 20 13:30:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpianoroll.[hc]: implement ::pino_clicked() and
	        ::piano_drag() signals, renamed ::canvas_press() to ::canvas_clicked().
	        (piano_roll_update_adjustments): initialize vertical scroll
	        position to 50%.

	        * beast-gtk/bstpianorollctrl.c: play notes upon clicks onto the piano
	        area of a BstPianoRoll widget.

	svn path=/trunk/; revision=852

2003-01-21  Tim Janik 	# 72ca14cbb516b0f900fae8f9d642ef8fa31fcc30

	keep processing events until the specified max_tick_stamp is reached.

	Tue Jan 21 03:42:08 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.c (bse_midi_receiver_process_events): keep
	        processing events until the specified max_tick_stamp is reached.

	        * bseproject.[hc]: bse_project_keep_activated() keep the project
	        from automatic deactivation until a certain tick stamp is reached.

	        * bsesong.proc: added procedures to find a track for a part, suitable
	        for live playing of notes and to synthesize track notes for immediate
	        playback.

	svn path=/trunk/; revision=851

2003-01-20  Tim Janik 	# 19832ec7f3f1b012503f3ad9db052fa3b0376392

	properly update status lines.

	Mon Jan 20 11:36:41 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprojectctrl.c:
	        (bst_project_ctrl_stop):
	        (bst_project_ctrl_play): properly update status lines.

	        * beast-gtk/bstapp.c (bst_app_operate): use BstProjectCtrl to start
	        and stop project playback.

	svn path=/trunk/; revision=850

2003-01-20  Tim Janik 	# 79d3b1c1311d795229c59315a3eef5385b8de7ce

	support ETCHED_IN/OUT and _IN/OUT line (shadow) drawing types.

	Mon Jan 20 11:13:14 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkpolygon.c: support ETCHED_IN/OUT and _IN/OUT
	        line (shadow) drawing types.

	        * beast-gtk/bstapp.[hc]: use BstProjectCtrl.

	        * beast-gtk/bstprojectctrl.[hc]: added controlling code, support stop
	        and play.

	        * beast-gtk/bstappcontrol.[hc]: moved contents to bstprojectctrl.[hc].

	        * beast-gtk/gxk/gxkutils.[hc]:
	        added convenience function gxk_size_group().

	Sun Jan 19 04:26:45 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/images/bse-mime.png: added mockup of beast-mime.png,
	        which actually says "BSE" for the file type.

	svn path=/trunk/; revision=849

2003-01-20  Tim Janik 	# 62ee0f47b658ab5279ba6f30cfedd2f9a0f2e51b

	changed playback and activation logic. project playback happens in stages

	Mon Jan 20 11:18:02 2003  Tim Janik  <timj@gtk.org>

		* bseproject.[hcp]: changed playback and activation logic.
		project playback happens in stages activate, start_playback,
		stop_playback and deactivate. a project can be automatically
		stopped due to the sequencer reaching song ends, and a project
		can be automatically deactivated through a timeout.
		export the new interface in procedures.

		* bseglobals.[hc] (bse_idle_timed): added timeout functions.

	Thu Jan 16 23:27:51 2003  Tim Janik  <timj@gtk.org>

		* bseproject.[hcp]*:

		* bsemain.c (bse_main_loop): start sequencer thread.

		* bsemididevice.[hc]: removed cruft.

		* bsemidireceiver.[hc]: added accessor to check whether some
		voices are still active.

		* bsepart.[hc]: keep track of the last tick and export it as
		property. more _SL fixes for functions/memebers protected by
		the sequencer lock.

		* bsemidisynth.c: set early context creation flag.

		* bsesnet.c: maintain user context creation setting.

		* bsesong.[hc]: integrate with sequencer updates.
		(bse_song_init): set early context creation and sequencing flags.

		* bsessequencer.[hc]: start switching sequencer code over from
		songs to supers. detect song playback ends.

		* bsesuper.[hc]: introduce flags to indicate need of early or
		sequencer context creation and need for sequencing. could remove
		auto_activate field after introduction of the flags.

		* bsetrack.c: cause the sequencer to re-check whether a track is
		done after properties were altered.

		* bsewaverepo.c: nuke auto_activate setting.

		* bseserver.[hc]: simplify device management by exporting just
		bse_server_open_devices() and bse_server_close_devices() and
		suport use counting for them.

		* bseserver.proc: scratch run/halt-project procedures since
		projects export the necessary mechanisms themselves now.

	svn path=/trunk/; revision=848

2003-01-20  Tim Janik 	# 99906bd74523eec6733bc85dbc8cdc3705e2a7b4

	improved logging output, add with_key() variants for sfi_debug(),

	Sat Jan 18 05:15:46 2003  Tim Janik  <timj@gtk.org>

	        * sfilog.[hc]: improved logging output, add with_key() variants
	        for sfi_debug(), sfi_nodebug() and sfi_info() to support detailed
	        (de-)activation of certain messages (filtering mechanism not yet
	        in place though).

	Thu Jan 16 23:26:25 2003  Tim Janik  <timj@gtk.org>

	        * sfiparams.h: added SFI_PARAM_GUI_READABLE and SFI_PARAM_GUI_WRITABLE
	        which are pspec hints that really are just readable or writable.

	svn path=/trunk/; revision=847

2003-01-14  Tim Janik 	# f31b46662166f4023d9882c28ab4824215c96ebe

	changed wording and added markup.

	Tue Jan 14 18:19:26 2003  Tim Janik  <timj@gtk.org>

	        * docs/release-notes.texi: changed wording and added markup.

	svn path=/trunk/; revision=846

2003-01-11  Tim Janik 	# 930b608e57d59b9f9b96c101d1961c2c59d599e9

	fix download link

	svn path=/trunk/; revision=845

2003-01-11  Tim Janik 	# b20fda2cf0cd8b76fc619bb1d2e8bd588ce95784

	announce the new website.

	Sat Jan 11 17:05:12 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: announce the new website.

	        * docs/site-links-related.texi: added CVS repo link.

	        * docs/site-development.texi: update website links.

	        * docs/generated/Makefile.am: update website dirs.

	svn path=/trunk/; revision=844

2003-01-11  Tim Janik 	# 8c12ff5eb5a76b7aa4e5001181b8380d38fadd48

	transmit site contents in bzip2 compressed tarball which is much smaller

	Sat Jan 11 16:36:01 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am (site-update-con): transmit site
	        contents in bzip2 compressed tarball which is much smaller than
	        the gzip variant (not so for the images and navigation tarballs
	        though). added beast-site-*.tar.bz2 to clean targets.

	svn path=/trunk/; revision=843

2003-01-11  Tim Janik 	# d136599acaa94a39ea4af70d9a734c3ec770b07a

	removed website related files from EXTRA_DIST, as we don't plan to release

	Sat Jan 11 16:04:18 2003  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: removed website related files from EXTRA_DIST,
	        as we don't plan to release the website with tarballs ;)

	        * docs/generated/Makefile.am: send css stuff along with website
	        updates. simplified and broadened clean rules. watch your *.ps,
	        *.pdf, *.xml, *.html and beast-site-*.tar.gz files, make clean
	        will wipe them all. introduced site-upgrade rule which does
	        a complete upgrade of beast.gtk.org to CVS contents, while
	        site-update only transmits frequently altered docs.

	        * docs/generated/css: new directory, containing site related
	        CSS stuff.

	        * docs/generated/css/default.css: Default CSS file for the BEAST
	        website from Alper Ersoy.

	        * docs/generated/css/images: new directory, containing site related
	        CSS images.

	        * docs/generated/css/images/*.png: added images from Alper Ersoy
	        for default.css.

	svn path=/trunk/; revision=842

2003-01-11  Tim Janik 	# 866409def429b9d6cb1faafb6177b657121b8afd

	use SYMBOL_GLIB to match GLib types, so we don't incedentally markup words

	Sat Jan 11 15:21:08 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/log2texi.sh: use SYMBOL_GLIB to match GLib
	        types, so we don't incedentally markup words like 'GUI'.
	        added word boundary constrains to CONST?_EXPR to avoid digit
	        markup for words like '24bit'.

	svn path=/trunk/; revision=841

2003-01-10  Tim Janik 	# 73470ac864fc28965f104484e4cdf7d0ef8fa359

	changed logfile to logentry in alpers last patch to better identify the

	Sat Jan 11 00:47:27 2003  Tim Janik  <timj@gtk.org>

	        * changed logfile to logentry in alpers last patch to better
	        identify the markup purpose.

	Fri Jan 10 12:15:40 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/teximacros.texi: added @logfile macro.

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl:  added markup for @logfile macro.

	        * docs/generated/log2texi.sh: mapped matched filenames to @logfile
	        macro, changed process substitution with tmpfile usage when applying
	        texi templates.

	svn path=/trunk/; revision=840

2003-01-10  Tim Janik 	# c742029b32dbc4bcea666f180db77719ea117412

	fix filename markup, added constants matching rules.

	Fri Jan 10 07:42:02 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/log2texi.sh (ChangeLog2texi): fix filename markup,
	        added constants matching rules.

	svn path=/trunk/; revision=839

2003-01-10  Tim Janik 	# c0113f0d475f39540a8d35e4bc5adbe91219200d

	minor changelog fix from alper

	svn path=/trunk/; revision=838

2003-01-09  Tim Janik 	# 1fd5cc4e8147199e5f26dc1e80605be49fb11f2d

	fix up markup for types, functions and constants.

	Thu Jan  9 18:17:00 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/log2texi.sh: fix up markup for types, functions and
	        constants.

	svn path=/trunk/; revision=837

2003-01-09  Tim Janik 	# dac7f8cf67c6c3aa03f4b4e7d94030bf4e5e69b8

	sync SYMBOL_PREFIX and MACRO_PREFIX with FUNC_PREFIX, so all match sfi and

	Thu Jan  9 17:51:50 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/log2texi.sh: sync SYMBOL_PREFIX and MACRO_PREFIX with
	        FUNC_PREFIX, so all match sfi and gdk. removed bsw as supported match.

	Thu Jan  9 18:06:26 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/WRITING.3.texi: removed part about mono/monospace parameter to
	        @docfont{}.

	        * docs/generated/log2texi.sh:
	        * docs/generated/Makefile.am: removed @docfont{mono}

	        * docs/generated/html.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/markup.xsl: removed mono/monospace from possible
	        parameters to @docfont{}.

	        * docs/generated/Makefile.am: changed @format with @example.

	        * docs/generated/log2texi.sh: added sfi to FUNC_PREFIX, and @code{} to
	        date/time substitution.

	        * docs/generated/markup.xsl: removed color from blurb markup

	svn path=/trunk/; revision=836

2003-01-09  Tim Janik 	# f0443afa6d4409505b3893ae3e81a8d21d345710

	fix variable, type, constant and function identifier matches. extend

	Thu Jan  9 03:22:37 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/scandocs.pl (tags_highlight): fix variable, type,
	        constant and function identifier matches. extend numeric constant
	        markup.

	svn path=/trunk/; revision=835

2003-01-08  Alper Ersoy 	# 76d8f031cf72de588441cf21c9e3492c2181747a

	added simple rule for pdf generation from ps files.

	Wed Jan  8 02:41:29 2003  Alper Ersoy <dirt@gtk.org>

	        * docs/generated/Makefile.am: added simple rule for pdf generation
	        from ps files.

	        * bse/bseautodoc.c: added struct_type markup.

	        * bse/bseautodoc.c: put a newline before SYNOPSIS titles.
	        * docs/generated/scandocs.pl: same here.

	        * docs/teximacros.texi: added @reference_constant and
	        @reference_struct_type macros.

	        * docs/generated/html.xsl: support constant and struct_type markups.
	        * docs/generated/markup.xsl:
	        * docs/generated/man.xsl:
	        * docs/generated/scandocs.pl: same here.

	        * docs/generated/scandocs.pl: added initial markup for numbers as
	        constants, fixed type markup.

	        * docs/generated/html.xsl: use <code /> tags instead of <span /> for
	        reference generation.

	        * docs/generated/man.xsl: adjusted monospace markup in reference
	        generation.

	        * docs/generated/markup.xsl: adjusted colors of reference elements.

	svn path=/trunk/; revision=834

2003-01-08  Tim Janik 	# c4db654dbe484d16c06fa1aae1d8845a5cc27ef0

	fix BSE error handling.

	Wed Jan  8 22:24:36 2003  Tim Janik  <timj@gtk.org>

	        * bstfiledialog.c:
	        * bstgconfig.c:
	        * bsw/testbsw.c:
	        fix BSE error handling.

	svn path=/trunk/; revision=833

2003-01-08  Tim Janik 	# 14777830bdb3ce75ba081cff399b20561a6184bc

	error code cleanups, improved error code handling.

	Wed Jan  8 20:15:01 2003  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]:
	        * gsldefs.[hc]:
	        * gslcommon.[hc]:
	        * gsl*.c:
	        * bse*.c: error code cleanups, improved error code handling.

	svn path=/trunk/; revision=832

2003-01-08  Tim Janik 	# 6f0817e8b23a310171cf721e2071be2bc88f5f0d

	indicate insensitive widget state.

	Wed Jan  8 15:47:53 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxkpolygon.c (gxk_polygon_expose): indicate insensitive
	        widget state.

	svn path=/trunk/; revision=831

2003-01-07  Tim Janik 	# fbc7b0bc1d023867f7bf772f7d946f488c5ab2d6

	fix libgnomecanvas link. same here.

	Tue Jan  7 19:01:25 2003  Tim Janik  <timj@gtk.org>

	        * README: fix libgnomecanvas link.
	        * docs/site-download.texi: same here.

	        * docs/site-documentation.texi: make link validator happy.
	        * docs/site-links-related.texi:
	        * docs/site-links-synthesis.texi: same here.

	        * docs/site-links-related.texi: added foreign project sites.

	        * docs/site-development.texi: add validator urls to aid website
	        development.

	svn path=/trunk/; revision=830

2003-01-07  Tim Janik 	# d78f02e4550fb43b45444b51cccf84e28b2d9c07

	remove texi macros \@hasbanner{large} @navigation{navigation.xml} to spare

	Tue Jan  7 17:04:11 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/scandocs.pl (print header): remove texi
	        macros \@hasbanner{large} @navigation{navigation.xml} to
	        spare layout space from function docs.

	svn path=/trunk/; revision=829

2003-01-07  Alper Ersoy 	# abd3a0d19ee12203b428576b6ea0091dbc71e620

	fix parameter markup.

	Tue Jan  7 16:44:04 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/scandocs.pl: fix parameter markup.

	        * docs/generated/html.xsl: fix empty subtopic lines in news
	        entries.

	svn path=/trunk/; revision=828

2003-01-07  Tim Janik 	# 15596517aa6583612530efeb573a965c12f5fc35

	document @,%,# and () tagging

	svn path=/trunk/; revision=827

2003-01-06  Tim Janik 	# 21c910dcebaba502195f68847d9ba4993bed51e2

	setup BstAppControl, update led.

	Tue Jan  7 00:17:40 2003  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: setup BstAppControl, update led.

	        * beast-gtk/bstappcontrol.[hc]: new files, providing a tape-control
	        alike GUI interface to project playback (not currently functional).

	        * beast-gtk/gxk/gxkled.[hc]: implemented led display widget.

	        * beast-gtk/gxk/gxkpolygon.[hc]: new widget that can display
	        unfilled lines and arcs, comes with preset polygons for tape
	        controls.

	        * beast-gtk/gxk/gxktest.c: test program for GXK code.

	        * */Makefile.am: general INCLUDE fixes.

	        * beast-gtk/Makefile.am: maintain same source file order for headers
	        and C sources.

	        * beast-gtk/gxk/Makefile.am: compact source file listing, build
	        gxktest.

	svn path=/trunk/; revision=826

2003-01-06  Tim Janik 	# 6a0c0191ed61a32ecdef6d6650bb0ed23a62abd6

	introduce activation state. added state notification.

	Mon Jan  6 00:16:17 2003  Tim Janik  <timj@gtk.org>

	        * bseproject.[hcp]*: introduce activation state. added state
	        notification.

	svn path=/trunk/; revision=825

2003-01-05  Alper Ersoy 	# f7610448c36518cf97391419ec28a3ae619bae4b

	fix @path{} macro handling.

	Sun Jan  5 23:50:56 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/teximacros.texi: fix @path{} macro handling.

	svn path=/trunk/; revision=824

2003-01-04  Tim Janik 	# 3ee839ec11881028d8fab6675cb4039e09617db3

	added config option invert_sustain to support sustain pedals which report

	Sat Jan  4 15:34:28 2003  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.c (process_midi_control_L):
	        * bsemidievent.c (bse_midi_signal_default):
	        * bserecords.sfidl (GConfig): added config option invert_sustain to
	        support sustain pedals which report inverted sustain events.

	svn path=/trunk/; revision=823

2003-01-04  Alper Ersoy 	# 8a95945e1f47f34452b962c61f38fcab9c89456b

	s/Document Revision/Document Revised/.

	Sat Jan  4 12:42:10 2003  Alper Ersoy  <dirt@gtk.org>

	        * bse/bseautodoc.c: s/Document Revision/Document Revised/.

	        * docs/generated/scandocs.pl: fix sorting of function descriptions.

	svn path=/trunk/; revision=822

2003-01-03  Tim Janik 	# 9015ed5f512ab0688cb6c0215765dbca87633dba

	new song sequencer implementation, based on the old song sequencing thread

	Fri Jan  3 19:10:03 2003  Tim Janik  <timj@gtk.org>

	        * bsessequencer.[hc]: new song sequencer implementation, based on the
	        old song sequencing thread from bsesongthread.[hc].

	        * bseproject.c: queue song sequencer jobs to start song playback and
	        don't start synthesis networks any earlier than song playback.

	        * bsesong.[hc]: use the new song sequencer.

	        * gsloputils.[hc]:
	        * gslopmaster.[hc]:
	        * gslengine.[hc]: implemented engine timers, delayed commits and
	        transaction merging.

	        * gslengine.[hc]: (gsl_job_add_poll): leak fix, don't forget
	        the free_func.

	        * bsesongthread.[hc]: removed this.

	svn path=/trunk/; revision=821

2003-01-03  Tim Janik 	# 434378136bafe2dbbabbc6facaec9d2f31ebfbde

	export functionality to merge two sorted rings (sfi_ring_merge_sorted).

	Fri Jan  3 19:16:49 2003  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: export functionality to merge two
	        sorted rings (sfi_ring_merge_sorted).

	svn path=/trunk/; revision=820

2003-01-03  Tim Janik 	# 54d2a724ac153571c6055f9e4cd7dbc642e4dc3b

	updates

	svn path=/trunk/; revision=819

2003-01-03  Tim Janik 	# 838cc489998e113c5cc851d8b2de50f653b212d7

	rotate news, so there're only two entries on the front page.

	Fri Jan  3 08:46:46 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi:
	        * docs/site-oldnews.texi: rotate news, so there're only two
	        entries on the front page.

	svn path=/trunk/; revision=818

2003-01-03  Tim Janik 	# 7532afbad0b55777b4d268fa81ed77c3b5936f46

	minor encoding fix

	svn path=/trunk/; revision=817

2003-01-02  Tim Janik 	# 99b2c51dab1f5318ead40f4d8278699d181a9519

	small fix from alper.

	Thu Jan  2 18:19:19 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/html.xsl: small fix from alper.

	        * docs/site-development.texi: use @example for markup.

	svn path=/trunk/; revision=816

2003-01-02  Alper Ersoy 	# e9618fdc186cc78675855bb34d00394321b1b2e6

	use @example as a replacement for buggy @verbatim until makeinfo got

	Thu Jan  2 17:23:54 2003  Alper Ersoy  <dirt@gtk.org>

	        * docs/generated/*.xsl:
	        * docs/WRITING.3.texi: use @example as a replacement for buggy
	        @verbatim until makeinfo got fixed. support relative (non-//) urls
	        for e.g. mailto:.

	        * docs/generated/site-*.texi: fixed relative urls.

	svn path=/trunk/; revision=815

2003-01-02  Tim Janik 	# f62eb1ebddc4109bf93a63e08805f899b2167935

	support site generation via recursion

	svn path=/trunk/; revision=814

2003-01-02  Tim Janik 	# ab91863e7472d45897ff08606ff0f5da64e63154

	support additional rules site-update-contents and site-update-navigation

	Thu Jan  2 06:05:26 2003  Tim Janik  <timj@gtk.org>

	        * docs/generated/Makefile.am: support additional rules
	        site-update-contents and site-update-navigation or just site-update
	        to auto upload generated website contents and regenerate website
	        files.

	svn path=/trunk/; revision=813

2003-01-01  Tim Janik 	# 6c175a814484fbeef64a147e1b0c418b522b82a5

	new content, provide synthesis and related projects links.

	Wed Jan  1 17:07:36 2003  Tim Janik  <timj@gtk.org>

	        * docs/site-links-related.texi:
	        * docs/site-links-synthesis.texi: new content, provide synthesis and
	        related projects links.

	        * docs/site-documentation.texi: provide some basic content.

	        * docs/site-navigation.xml: restructured development docs,
	        added link sections.

	        * docs/site-news.texi: sync this with the real site.

	        * docs/site-oldnews.texi: fix title.

	        * site-resources.texi: introduce link sections.

	        * site-about.texi: fixups.

	svn path=/trunk/; revision=812

2002-12-31  Tim Janik 	# 07a51255adfd125f914d13ff81aec7139b33ac07

	provide web-site banner.

	Tue Dec 31 09:11:19 2002  Tim Janik  <timj@gtk.org>

	        * docs/faq.texi: provide web-site banner.

	        * docs/teximacros.texi:
	        * docs/release-notes.texi: (re-)introduce displaySTART and
	        displayEND which is the only way to force <para> tags out
	        of <display> blocks with makeinfo-4.3 which is what beast
	        currently depends on.

	        * docs/site-*.texi:
	        renamed pure website sources to site-*.

	        * docs/generated/Makefile.am:
	        major cleanup and restructuring. support 'site' target now.

	        * docs/generated/log2texi.sh:
	        shell script to generate .texi sources from ChangeLogs.
	        this is a .texi-patched up version from Alper, based on
	        my old beast web site script that used to generate raw
	        html.

	svn path=/trunk/; revision=811

2002-12-31  Tim Janik 	# 984226d1380b995897cfbee48d2562d0c08b627a

	moved most of this into site-oldnews.texi.

	Tue Dec 31 18:17:44 2002  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: moved most of this into site-oldnews.texi.

	        * docs/generated/Makefile.am: support @sedfix{top_srcdir} substitutions
	        when copying .texi files to get ${top_srcdir} used by texi files.

	        * docs/site-navigation.xml: sketched new website structure.

	        * docs/site-development.texi:
	        * docs/site-historic.texi:
	        * docs/site-oldnews.texi: new website pages according to the new
	        website structure.

	svn path=/trunk/; revision=810

2002-12-31  Tim Janik 	# 96c384cdfcaf8f6a5e0e0f2ad6bcfeea48a33365

	merge current and old website news into this place.

	Tue Dec 31 10:47:04 2002  Tim Janik  <timj@gtk.org>

	        * docs/site-news.texi: merge current and old website news into
	        this place.

	svn path=/trunk/; revision=809

2002-12-31  Tim Janik 	# 4421fa85f11a87443b923ac3938a4fcfed8324f3

	provide web-site banner.

	Tue Dec 31 09:11:19 2002  Tim Janik  <timj@gtk.org>

		* docs/faq.texi: provide web-site banner.

		* docs/teximacros.texi:
		* docs/release-notes.texi: (re-)introduce displaySTART and
		displayEND which is the only way to force <para> tags out
		of <display> blocks with makeinfo-4.3 which is what beast
		currently depends on.

		* docs/site-*.texi:
		renamed pure website sources to site-*.

		* docs/generated/Makefile.am:
		major cleanup and restructuring. support 'site' target now.

		* docs/generated/log2texi.sh:
		shell script to generate .texi sources from ChangeLogs.
		this is a .texi-patched up version from Alper, based on
		my old beast web site script that used to generate raw
		html.

	Mon Dec 30 18:21:33 2002  Alper Ersoy <aersoy@tfz.net>

		Here are website changes:

		* docs/generated/Makefile.am:
		New files in $html_targets: index, about, download, contacts,
		links, api-overview, log-beast, log-bse, log-plugins, log-sfi.
		New files in $build_tools: nav.xml, navigation.xsl, log2texi
		New files in $temp_texi: log-beast, log-bse, log-plugins, log-sfi
		%.html rule has two new parameters for xsltproc, which are
		this_file ($@) and images_prefix (cvs-images/).
		New rules for log files: log-beast.texi, log-bse.texi,
		log-plugins.texi, and log-sfi.texi
		faq.xml removed from $conditional_clean.

		* docs/generated/navigation.xsl:
		* docs/generated/html.xsl:
		Deprecated parameters: banner, navigation, uplinks, this_file,
		image_prefix.
		banner and navigation are substituted with texinfo macros.
		uplinks (which controls the generation of a 'go to top' link at
		every section title) is simply removed.  I may consider re-adding
		that later (even though I think people should use their "Home" keys,
		there are times when they may want a 'top' link).
		this_file moved to navigation.xsl.  image_prefix is renamed to
		images_prefix.
		Removed the old fashioned table based layout in favor of a modern,
		div based full CSS layout.
		A couple of new templates: document-size, home-link,
		document-title.  These are for classifying document parts or the
		document itself in general to be used in CSS styles.
		banner template rewritten.  No more inline images for cosmetic
		issues.
		Navigation templates are moved to a separate file, navigation.xsl.
		This way, it is possible to make use of the templates from other
		sources too.  At this time, scanpics.pl is the only example.

		* docs/about.texi:
		* docs/contacts.texi:
		* docs/download.texi:
		* docs/index.texi:
		* docs/links.texi:
		* docs/api-overview.texi:
		new website related documents. (api-overview.texi left to be
		filled out by Tim).

	Mon Dec 30 18:21:33 2002  Alper Ersoy <aersoy@tfz.net>

		Here are non-website changes:

		* docs/WRITING.3.texi:
		Added examples for block level texinfo commands.
		Appearnce of block level commands follow their descriptions.

		* bse/bseautodoc.c:
		* docs/generated/scandocs.pl:
		* docs/*.texi:
		Removed @center from the @revision macro.

		* docs/teximacros.texi:
		* docs/release-notes.texi:
		* docs/utils/xmlantispace.c:
		Changed @keepspace* to @display.  Provided that you use CVS makeinfo,
		it will look identical.  Removed those macros from teximacros.texi too.

		* docs/teximacros.texi:
		Added workarounds for @samp, @env, @file, @command and @option in
		teximacros.texi.  They were generating <code/> blocks. Karl told
		that that's due to old HTML output mappings being used again with XML.
		Tried to adjust macro/rmacro definitions, ie. @contents was defined
		as a rmacro, but it can be a regular macro.

		* docs/generated/*.xsl:
		Added another document font type: monospace (also mono and fixed are
		accepted).
		Dropped <strong />  tags from table-of-contents items.

		* docs/generated/html.xsl:
		Changed the handling of most contextual markup commands in html.xsl.
		There was a repetitive pattern between the templates.

		* docs/generated/markup.dtd:
		* Brought markup.dtd up to date.  TSM files validate once again.

		* docs/generated/Makefile.am:
		news.texi and gsl-mplan.texi use @format instead of @example now.
		They also make use of the new document font monospace (because
		@format does not make any changes to the document font).

	svn path=/trunk/; revision=808

2002-12-31  Tim Janik 	# 39ec53caa1dd4459060822a866eb49f6adb8eab3

	use sfi/toyprof-mem.h code if necessary, removed otehr hacks.

	Tue Dec 31 03:29:32 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c:
	        * beast-gtk/bstapp.c: use sfi/toyprof-mem.h code if necessary,
	        removed otehr hacks.

	svn path=/trunk/; revision=807

2002-12-31  Tim Janik 	# 97c730a330d89488a2a83337d46fb7b8dcaf08b9

	remove toyprof code.

	Tue Dec 31 03:03:39 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am, toyprof.*: remove toyprof code.

	svn path=/trunk/; revision=806

2002-12-31  Tim Janik 	# cc725dbd1f9026741e2696f3ca41d891b65c5ebe

	moved toyprof code from BSE to here.

	Tue Dec 31 03:01:30 2002  Tim Janik  <timj@gtk.org>

	        * toyprof.[hc], toyprof.README, toyprof.pl: moved
	        toyprof code from BSE to here.

	        * toyprof-mem.[hc]: added GLibc specific memory profiler.

	        * sfiprimitives.c: allocate SfiRec, SfiSeq, SfiBBlock and
	        SfiFBlock via memblocks.

	        * sfivalues.[hc]: added sfi_value_rec_take_ref() and
	        sfi_value_seq_take_ref() which are value constructors
	        that take over the intial reference count of a rec or seq,
	        needed by sfidl.

	        * sfigluecodec.c (sfi_glue_decoder_dispatch): run gc at the
	        end of dispatch.

	        * sfidl.cc (createTypeCode): fix reference counting of records and
	        sequences, so we don't leak upon every conversion in generated code.

	svn path=/trunk/; revision=805

2002-12-30  Tim Janik 	# 56b3c6fc7f6c2fcece861d2c5693f2696238ecc2

	oops, fix rating. growing inheritance distance between editable type and

	Mon Dec 30 04:30:46 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_rate_impl): oops, fix rating.
	        growing inheritance distance between editable type and value type
	        decreases goodness (fixes option menu mismatch for choices).

	svn path=/trunk/; revision=804

2002-12-30  Tim Janik 	# 68e05db3e62c2b6c194be129238deb6f5915ff11

	updates

	svn path=/trunk/; revision=803

2002-12-30  Tim Janik 	# b6bfcdd22212dd349597e5dcae26964103307a79

	merged sfk-launch branch into HEAD. oddly enough, there's still no SFK

	Mon Dec 30 01:06:12 2002  Tim Janik  <timj@gtk.org>

	        * merged sfk-launch branch into HEAD. oddly enough, there's
	        still no SFK yet. BSE uses an SFI based middle ware layer
	        now which supports structure definitions in IDL files and
	        contains the neccessary logic to seperate BSE into an extra
	        thread (in or out of process) and generate client side API
	        wrapper code.

	svn path=/trunk/; revision=801

2002-10-23  Tim Janik 	# 4d867aac1f12b39421b2fca32c0ed64e9eb1cc54

	readd accidentally removed files

	svn path=/trunk/; revision=589

2002-10-23  Tim Janik 	# 6f92e6571f791d0cdba789e64c41debb0cdfca02

	i have a gun at my head.

	Wed Oct 23 20:47:51 2002  Tim Janik  <timj@gtk.org>

	        * i have a gun at my head.

	svn path=/trunk/; revision=588

2002-10-23  Tim Janik 	# d2336e4850f198bf416059a6aab4c3edb6045c31

	go away

	svn path=/trunk/; revision=586

2002-10-23  Tim Janik 	# bb46aff780b7da40119b7db80d991193d22a7ac4

	provide convenience setters for record fields.

	Wed Oct 23 20:28:01 2002  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.h: provide convenience setters for record fields.

	svn path=/trunk/; revision=583

2002-10-23  Tim Janik 	# 922c8bcdbcdbed746d6a3a95ece8a42a83a6a17e

	s/param_spec/pspec/ due to stefan's command. introduce pspec primitive

	Wed Oct 23 19:25:40 2002  Tim Janik  <timj@gtk.org>

	        * sfivalues.[hc]:
	        * sfiparams.[hc]: s/param_spec/pspec/ due to stefan's command.
	        introduce pspec primitive (serialization lacking).

	svn path=/trunk/; revision=582

2002-10-21  Tim Janik 	# 79dc21c1c9dd7109c500571e2c4551520d1b270c

	moved glue layer to SFI.

	Mon Oct 21 22:19:04 2002  Tim Janik  <timj@gtk.org>

	        * sfiglue.[hc]:
	        * sfigluecodec.[hc]:
	        * sfigluesignal.c:
	        moved glue layer to SFI.

	svn path=/trunk/; revision=581

2002-10-21  Tim Janik 	# 8d1378b6b63e8eaee5edb9ff32751afa112b402b

	implement sfi_vcall_void(), a GValue based function call marshaller (void

	Mon Oct 21 16:16:35 2002  Tim Janik  <timj@gtk.org>

	        * sfivcall.[hc]: implement sfi_vcall_void(), a GValue based
	        function call marshaller (void returns) with up to 5 arguments.

	        * sfimarshal.[hcl]*: get rid of this.

	svn path=/trunk/; revision=580

2002-10-20  Tim Janik 	# a470f101b1be4a67c8e0fb14a1c6a8a51cfde5f7

	generate data for boxed types after function definitions.

	Sun Oct 20 19:06:14 2002  Tim Janik  <timj@gtk.org>

	        * sfidl.cc: generate data for boxed types after function definitions.

	        * sfidl.cc: generate static GValueTransform functions for boxed<->SfiSeq
	        and boxed<->SfiRec, passed on to sfi_boxed_make_sequence() and
	        sfi_boxed_make_record().

	        * sfiparams.c:
	        (param_rec_validate): fix empty field creation.
	        (sfi_param_spec_time): fix hints.
	        (sfi_param_spec_note): fix hints.

	        * sfiserial.c: minor syntax tweaks.

	        * sfitypes.[hc]: add support for GValueTransform registration
	        for boxed sequence and record types.

	        * sfivalues.c (sfi_value_choice2enum): fallback to 0 as enum
	        value if no pspec default is given, and we fail completely at
	        matching the given choice pattern. we use 0 despite enum class
	        contents here, it can later be fixed up through validation.

	svn path=/trunk/; revision=579

2002-10-18  Tim Janik 	# feefc32fccd632e31bc939e399b2abe7334ce716

	removed cruft. use GScanner 64bit int parsing instead of identifier hack.

	Fri Oct 18 04:39:00 2002  Tim Janik  <timj@gtk.org>

	        * sfiserial.[hc]: removed cruft. use GScanner 64bit int parsing instead
	        of identifier hack. implemented sfi_value_store_param() and
	        sfi_value_parse_param_rest().

	        * sfiparams.c (param_rec_values_cmp): handle type mismatch of field
	        pspec and value.

	Sat Oct 12 19:30:42 2002  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: implemented 64bit-safe GScanner, using
	        strtoull() code from glibc.

	svn path=/trunk/; revision=578

2002-10-11  Tim Janik 	# b5e75a6f51a01252aa852ef0a3058b1daa499d5a

	fixup error handling when parsing notes.

	Sat Oct 12 01:03:24 2002  Tim Janik  <timj@gtk.org>

	        * sfinote.[hc]: fixup error handling when parsing notes.

	        * sfiparams.[hc]: add cmp/validate implementations for bblock,
	        fblock, seq and rec.

	        * sfiprimitives.[hc]: support sorting of record fields and use binary
	        lookups for field access.

	        * sfiserial.[hc]: implement sfi_value_store_typed() and
	        sfi_value_parse_typed() for all SFI types.

	        * sfitime.[hc]: fixup error handling when parsing date/time.

	        * sfitypes.h: add type specific constants.

	        * testsfi.c: check serialization facilities.

	svn path=/trunk/; revision=577

2002-10-11  Tim Janik 	# 12402a95f0d4b48cfb29f050f122907d12f8ae4e

	stringify unsigned longs with %lu (not %ld), stringify doubles with %.20g

	Thu Oct 10 18:25:40 2002  Tim Janik  <timj@gtk.org>

	        * sfidl.cc (parseParamDefHints): stringify unsigned longs with %lu (not
	        %ld), stringify doubles with %.20g to preserve precision, handle
	        unexpected tokens by simple returning the expected token so we
	        actually trigger a scanning error.

	svn path=/trunk/; revision=576

2002-10-09  Stefan Westerfeld 	# 00d49321ff44e1b332f8346e45588bfd171a5a12

	Oops ;).

	svn path=/trunk/; revision=575

2002-10-09  Stefan Westerfeld 	# f3f6ddab69c65b70a18c7f59ba4cf3fa5d4e3446

	conceptually changed the way setting up defaults for sequences to the way

	Wed Oct  9 13:59:00 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl.cc: conceptually changed the way setting up defaults for
		sequences to the way it works for records. you have per-type
		defaults now, thus the syntax has changed to

		typedef sequence {
		  Int ids @= ("ID", "", 0, 0, G_MAXINT, 1, ":readwrite");
		} IDSeq;

		(minor cleanups): make -l work. don't generate code on parse error.
		parse class Foo {}; properly. removed unused code.

	svn path=/trunk/; revision=574

2002-10-08  Stefan Westerfeld 	# b9710d5c40887d4d35ed2dd7ea782396852249c7

	support registering boxed types for each record and each sequence type

	Tue Oct  8 19:25:24 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl.cc: support registering boxed types for each record and
		each sequence type (-b), make #line number directives optional (-l)

	svn path=/trunk/; revision=573

2002-10-07  Tim Janik 	# b29efe9bda77bba43623062a485d7c62f29c1535

	add sfi_seq_clear().

	Sun Oct  6 08:04:55 2002  Tim Janik  <timj@gtk.org>

	        * sfiprimitives.[hc]: add sfi_seq_clear().

	        * sfitypes.[hc]: introduce sfi_boxed_make_record(),
	        sfi_boxed_make_sequence(), sfi_boxed_get_record_info() and
	        sfi_boxed_get_sequence_info() to support boxed<->rec and seq
	        transformations.

	        * sfiparams.[hc]: remove non-serializable pspecs Object and Enum.
	        set hints via sfi_pspec_set_static_hints() in the constructors,
	        so we can map these (partially) onto flags.
	        provide accessors for pspec hints. cleanup serializable param spec
	        categories. renamed a few things for consistency.

	        * sfivalues.[hc]: same here, remove object and enum values.
	        added sfi_value_lstring() and sfi_value_lchoice().

	svn path=/trunk/; revision=572

2002-10-05  Tim Janik 	# 660b719068497a30e2c6cfb7602cb80a187665d8

	add type name conversion functions.

	Sat Oct  5 02:07:57 2002  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: add type name conversion functions.

	        * sfiprimitives.[hc]: add sfi_bblock_new_sized(),
	        sfi_fblock_new_sized(), sfi_bblock_resize() and sfi_fblock_resize().

	        * sfidl.cc (parse): sync this with GValue types (missed out Proxy).

	        * sfidl-namespace.cc (qualify): output warnigns with g_warning().

	        * sfidl.cc: remove pointless namespacing in generated code,
	        fix sfi_value_*() uses. fix one more hardcoded "element"
	        sequence memeber.

	svn path=/trunk/; revision=571

2002-10-04  Stefan Westerfeld 	# 63e0d9b3f409d86ab04439eaf64c14c132191b32

	support optionally specifying the name of the sequence elements for the C

	Fri Oct  4 13:08:29 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl.cc: support optionally specifying the name of the sequence
		elements for the C binding (typedef sequence<Int notes> NoteSeq).

	svn path=/trunk/; revision=570

2002-10-04  Stefan Westerfeld 	# 9dc52e9a615d7c1d9f3d53bfe9ec59b94f081673

	generate conversion functions for sequences/records from/to

	Fri Oct  4 12:41:33 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl.cc: generate conversion functions for sequences/records
		from/to SfiSeq*/SfiRec* instead of from/to GValue*.

	svn path=/trunk/; revision=569

2002-10-04  Stefan Westerfeld 	# 45ea4e28534f0bed0846f29afe340a58b6572164

	support namespace substitution (sfidl -n Bse/Bsw)

	Fri Oct  4 11:30:07 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfidl.cc: support namespace substitution (sfidl -n Bse/Bsw)

	svn path=/trunk/; revision=568

2002-10-04  Tim Janik 	# edf5c4b590f90fbbb1beeebe39cd152afcc603d7

	pass nick and blurb of "" as NULL into GLib pspecs.

	Fri Oct  4 10:01:53 2002  Tim Janik  <timj@gtk.org>

	        * sfiparams.c: pass nick and blurb of "" as NULL into GLib pspecs.

	        * sfivalues.h: fix SFI_VALUE_HOLDS_NOTE() and SFI_VALUE_HOLDS_TIME().

	svn path=/trunk/; revision=567

2002-10-04  Tim Janik 	# c0fcfd668754762b0e3b5f982ee1fd9f1c3a2ae8

	default to kammer note instead of SFI_NOTE_VOID if the note is unparsable.

	Fri Oct  4 08:53:29 2002  Tim Janik  <timj@gtk.org>

	        * sfinote.c (sfi_note_from_string): default to kammer note
	        instead of SFI_NOTE_VOID if the note is unparsable.

	svn path=/trunk/; revision=566

2002-10-04  Tim Janik 	# a95ead24b152de027f34e4d8d6ec5d3e55d05e78

	new file, executed by make check. currently contains small tests for notes

	Fri Oct  4 08:37:25 2002  Tim Janik  <timj@gtk.org>

	        * testsfi.c: new file, executed by make check.
	        currently contains small tests for notes and time.

	        * sfinote.[hc]: midi note definitions and string conversion
	        routines.

	        * sfidl.cc: we don't need sfi functions, so include just
	        glib-extra.h.

	svn path=/trunk/; revision=565

2002-10-04  Tim Janik 	# 36464099676ef598ca75daab187f9ceebf3462b4

	call sequence elements "element" not "content" in the generated pspecs.

	Fri Oct  4 05:13:39 2002  Tim Janik  <timj@gtk.org>

	        * sfidl.cc: call sequence elements "element" not
	        "content" in the generated pspecs.
	        (run): print seq/rec prototypes after structure definitions.
	        generate "#line" directive before param_spec creation to make
	        compiler warnings somewhat meaningfull.

	svn path=/trunk/; revision=564

2002-10-04  Tim Janik 	# afd5fecea6bd46796644afe6e012164cc5fcf8cd

	support SfiBBlock.

	Fri Oct  4 02:06:15 2002  Tim Janik  <timj@gtk.org>

	        * sfidl.cc (createTypeCode): support SfiBBlock.

	        * sfiprimitives.[hc]: add SfiBBlock, a block of bytes,
	        similar to SfiFBlock.

	        * sfivalues.[hc]: implement BBlock values.

	        * sfiparams.[hc]: implement BBlock pspecs.

	svn path=/trunk/; revision=563

2002-10-03  Tim Janik 	# 04afd5132f271fa0a5f5fff1ff79a2bdf6e6f642

	move stefan's changelog entry.

	svn path=/trunk/; revision=562

2002-10-03  Stefan Westerfeld 	# 76226b2140fbbee79fd4f24bbace63484863f6c1

	generate proper default initialization for sequences when @= is omitted

	Fri Oct  4 01:18:21 2002  Stefan Westerfeld <stefan@space.twc.de>

		* sfi/sfidl.cc: generate proper default initialization for sequences when
		@= is omitted (instead of segfaulting), FBlock support, cleanup: add name
		of arguments/arrays by the caller, not by createTypeCode

	svn path=/trunk/; revision=561

2002-10-03  Tim Janik 	# 2803850013b5ca74b13318164466407f93c8eafa

	new subdirectory and library. in preparation for SFK (synthesis fusion

	Thu Oct  3 23:31:26 2002  Tim Janik  <timj@gtk.org>

	        * sfi/: new subdirectory and library. in preparation for SFK (synthesis
	        fusion kit), this is the underlying interface library SFI (syntheis
	        fusion kit interface).

	        * sfidl.cc: .sfidl code generator by Stefan.
	        * sfidl-namespace.[hc]*: auxillary files for sfidl.cc.

	        * sfiserial.[hc]: preliminary parsing/serialization code.

	        * sfiparams.[hc]: pspec implementations, corresponding to the Sfi values.

	        * sfivalues.[hc]: wrappers for supported GValue types and implementaitons
	        of Sfi specific value types.

	        * sfitime.[hc]: some preliminary time handling routines.

	        * sfiprimitives.[hc]: fundamental structure implementations, such as
	        record, sequence and float sequences (for performance reasons implemented
	        as a block of floats).

	        * sfitypes.[hc]: miscellaneous type decls and yet-to-clean-up auxillary
	        functions.

	        * glib-extra.[hc]: GLib compatibility code, add-ons or extensions.

	svn path=/trunk/; revision=560

2002-10-03  Tim Janik 	# 8826f2e5594758b953bb1d81444abbfb3af27149

	when using gcc, compile sources with -O3 (not -O6).

	Thu Oct  3 23:31:26 2002  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: when using gcc, compile sources with -O3 (not -O6).

	        * configure.in: prepare for sfi/ configuration.

	        * sfi/: new subdirectory and library. in preparation for SFK (synthesis
	        fusion kit), this is the underlying interface library SFI (syntheis
	        fusion kit interface).

	Thu Oct  3 23:31:26 2002  Tim Janik  <timj@gtk.org>

	        * sfi/: new subdirectory and library. in preparation for SFK (synthesis
	        fusion kit), this is the underlying interface library SFI (syntheis
	        fusion kit interface).

	        * sfidl.cc: .sfidl code generator by Stefan.
	        * sfidl-namespace.[hc]*: auxillary files for sfidl.cc.

	        * sfiserial.[hc]: preliminary parsing/serialization code.

	        * sfiparams.[hc]: pspec implementations, corresponding to the Sfi values.

	        * sfivalues.[hc]: wrappers for supported GValue types and implementaitons
	        of Sfi specific value types.

	        * sfitime.[hc]: some preliminary time handling routines.

	        * sfiprimitives.[hc]: fundamental structure implementations, such as
	        record, sequence and float sequences (for performance reasons implemented
	        as a block of floats).

	        * sfitypes.[hc]: miscellaneous type decls and yet-to-clean-up auxillary
	        functions.

	        * glib-extra.[hc]: GLib compatibility code, add-ons or extensions.

	svn path=/trunk/; revision=559

2002-09-18  Tim Janik 	# bfcdd07592e56f5aa94ca5c17d47420f173e7173

	new version from Alper, fixing table indentation, toc generation, spacing

	Wed Sep 18 09:53:56 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/markup.xsl: new version from Alper, fixing table
	        indentation, toc generation, spacing in indices and improved table
	        generation.

	        * docs/generated/Makefile.am: add generic rule for *.texi -> *.markup
	        generation.

	svn path=/trunk/; revision=558

2002-09-15  Tim Janik 	# bab534751f45fe53b9ec026fd6e2ade11d4961e7

	update these with new versions from Alper Ersoy which can generate

	Sun Sep 15 07:23:39 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/html.xsl:
	        * docs/generated/markup.xsl: update these with new versions from
	        Alper Ersoy which can generate indices.

	svn path=/trunk/; revision=557

2002-09-15  Tim Janik 	# af564ab5d64aaeee90663f5cab20a893a3e01b3a

	integrate with glue layer garbage collector and adjust to recent glue

	Sun Sep 15 06:30:06 2002  Tim Janik  <timj@gtk.org>

	        * bsw-shell/bswscminterp.[hc]: integrate with glue layer garbage
	        collector and adjust to recent glue layer changes.

	        * beast-gtk/bstapp.c: use beast_main_loop instead of gtk_main_quit().
	        * beast-gtk/bstmenus.c: same here, and implement a modal recursive
	        main loop explicitely.

	        * beast-gtk/bstmain.c: instead of using gtk_main(), implement our
	        own main loop which allowes us to call gsl_glue_gc_run() periodically
	        in th etoplevel main loop. export global variable beast_main_loop
	        to flag application exit, since gtk_main_quit() doesn't work anymore.

	svn path=/trunk/; revision=556

2002-09-15  Tim Janik 	# e8508a6461870713b1f77d10f82e3508628b8c68

	fix extern "C" and constants in structures to fix compilation with C++

	Sun Sep 15 06:02:16 2002  Tim Janik  <timj@gtk.org>

	        * bsebindata.h:
	        * bsecontainer.h:
	        * bseexports.h:
	        * bseitem.h:
	        * bsescriptcontrol.h:
	        * bsesuper.h: fix extern "C" and constants in structures to fix
	        compilation with C++ sources.

	        * bseglue.[hc]:
	        * gslgluecodec.[hc]:
	        * gslglue.[hc]:
	        together with Stefan Westerfeld, started out to revise the glue
	        layer implementation.
	        don't operate on GslGlueValue and GslGlueParam in place, but
	        make them seperately allocated objects in their own respect.
	        turn GslGlueSeq into a ref counted structure.
	        implement deep-copy variants.
	        implement constructors for the various data structures.
	        implement simplisitic garbage colleciton boundary which frees
	        all temporarily kept values returned from the glue layer.

	        * *.c: fixed assorted code according to glue layer changes.

	svn path=/trunk/; revision=555

2002-09-12  Tim Janik 	# cbd71eada92149ba8d355a0d757129ba7a875c11

	support Ctrl+R as reload (mimicking mozilla keybinding again).

	Thu Sep 12 06:58:52 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/gxk/gxktexttools.c (scroll_text_key_event): support
	        Ctrl+R as reload (mimicking mozilla keybinding again).

	svn path=/trunk/; revision=554

2002-09-12  Tim Janik 	# 6cb38e7274c86bfa4fc4766c0ba5e1ec65817ae4

	updates

	svn path=/trunk/; revision=553

2002-09-12  Tim Janik 	# ca104841974d3936bcda4ec6ef25aad11d8ebe2b

	implement standard_osc_reset().

	Thu Sep 12 01:57:36 2002  Tim Janik  <timj@gtk.org>

	        * bsestandardosc.c: implement standard_osc_reset().

	        * gsloscillator.[hc]: added gsl_osc_reset() for module resets.

	        * bsebiquadfilter.c: fix reset function name.

	        * bseamplifier.c: reorder GUI fields.

	svn path=/trunk/; revision=552

2002-09-11  Tim Janik 	# d69fcb6b945b4bb814e794a9db9b402a688199d9

	updates

	svn path=/trunk/; revision=551

2002-09-11  Tim Janik 	# 9657c7765bf25206bdac2efd37a85cc3082e61eb

	remove bsttexttools.[hc] and bsttoolbar.[hc] in favour of GXK variants.

	Wed Sep 11 18:23:00 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/Makefile.am: remove bsttexttools.[hc] and
	        bsttoolbar.[hc] in favour of GXK variants.

	        * beast-gtk/gxk/gxk.h:
	        * beast-gtk/gxk/Makefile.am:
	        * beast-gtk/gxk/gxktoolbar.[hc]:
	        * beast-gtk/gxk/gxktexttools.[hc]: add new cleaned up,
	        renamed and documented ports of the text tools and toolbar
	        code to GXK.

	        * docs/generated/Makefile.am: generate and check in faq.xml which
	        is needed for the web site.

	        * docs/generated/html.xsl:
	        * docs/generated/markup.xsl: minor fixes from alper ersoy.

	        * docs/generated/Makefile.am:
	        * docs/generated/markup.dtd: added markup.dtd from alper ersoy and
	        lint rule to check validity of markup output.

	        * *.[hc]: adaptions to the GXK rename.

	svn path=/trunk/; revision=550

2002-09-07  Tim Janik 	# 9d7b1041fa5e0bae82b2d00fd4cd996252c1138c

	shut up

	svn path=/trunk/; revision=549

2002-09-07  Tim Janik 	# 3203d21cc98f850e57521913756c1291eb590484

	remember the collector id. fixes enourmous cpu consumption for procedure

	Sat Sep  7 16:06:51 2002  Tim Janik  <timj@gtk.org>

	        * bsw/bswproxy.c (add_gc): remember the collector id. fixes
	        enourmous cpu consumption for procedure string returns.

	        * beast-gtk/bstdialog.[hc]:
	        * beast-gtk/bststatusbar.[hc]: removed in favour of gxk variants.

	        * beast-gtk/gxk/gxkdialog.[hc]:
	        * beast-gtk/gxk/gxkstatusbar.[hc]: convert Bst widgets into GXK
	        variants GxkDialog and GxkStatusBar by removing beast/bsw specific
	        code portions.

	        * beast-gtk/bstusermessage.[hc]: adapt to changes in BSE, the server
	        signals script start/error and user messages. the script control
	        objects signal progress.

	        * beast-gtk/bstutils.[hc]: add beast/bsw specific extensions:
	        (bst_status_eprintf): set BswErrorType status through gsk_status_set().
	        (bst_window_sync_title_to_proxy): sync a window's title to a proxy name.
	        removed gtk_widget_showraise, gtk_toplevel_hide, gtk_toplevel_delete,
	        gtk_toplevel_activate_default, gtk_idle_show_widget, gtk_idle_unparent,
	        and gtk_last_event_coords.

	        * beast-gtk/gxk/gxkutils.[hc]: added gxk_widget_showraise,
	        gxk_idle_show_widget, gxk_toplevel_delete, gxk_toplevel_hide and
	        gxk_toplevel_activate_default.

	        * beast-gtk/*.[hc]: adaptions due to GXK changes.

	        * docs/release-notes.texi: adapt to development series v0.4.

	svn path=/trunk/; revision=548

2002-09-07  Tim Janik 	# f407318d85e70aed563b1e3c625961cd9e426533

	get rid of BSE_ERROR_USER_* values.

	Sat Sep  7 16:00:47 2002  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]: get rid of BSE_ERROR_USER_* values.

	        * bseprocedure.[hc]: remove exec status signalling code.

	        * bsescriptcontrol.[hcp]*: maintain script_name and proc_name
	        fields. remove error_status. add ::progress signal.

	        * bseserver.[hc]: remove ::exec-status signal and related code.
	        add ::script-start and ::script-error signals and proper
	        handling code.
	        (bse_server_run_remote): fix ref count leakage on script controls.

	        * bsescripthelper.[hc]: adapt to BseServer and
	        BseScriptControl changes.

	        * *.c, *.proc: remove procedure exec status skipping/blocking code.

	svn path=/trunk/; revision=547

2002-09-06  Tim Janik 	# 3c23b60f464040fd11a92769cdda3d2a87fdb8ba

	shut up

	svn path=/trunk/; revision=546

2002-09-06  Tim Janik 	# 817d44892fc5f83e4a087fe49eb4d8d92a7f9a5b

	started general refactoring and cleanup work.

	Fri Sep  6 17:37:19 2002  Tim Janik  <timj@gtk.org>

	        * started general refactoring and cleanup work.

	        * beast-gtk/gxk/Makefile.am: new static library, holding
	        Gtk+ extensions/fixes and new widgets which are not beast-specific.

	        * beast-gtk/gxk/gxkcanvas.[hc]: new files covering gnome canvas
	        related functions.

	        * beast-gtk/gxk/gxkglobals.[hc]: global configuration stuff.

	        * beast-gtk/gxk/gxkstock.[hc]: stock icon/action rekated functions.

	        * beast-gtk/gxk/gxkutils.[hc]: miscellaneous utilities.

	        * beast-gtk/utils.[hc]: move many things out of this file into gxk.

	        * beast-gtk/*.[hc]: include fixes. adaptions to gxk.

	        * beast-gtk/icons/Makefile.am: generate icon list with
	        stock ids alongside the inlined pixbufs.

	        * docs/reference/Makefile.am: generate beast-gxk.dat and manual
	        page and get rid of the bst.* variants.

	Wed Sep  4 01:39:42 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttexttools.c (bst_scroll_text_create): prevent the location
	        entry from eating space unneccessarily.

	svn path=/trunk/; revision=545

2002-09-03  Tim Janik 	# 7962bd5042b7d82dd8c083fe78dbac12963c07ba

	add support for Alt+Left as back and Alt+Right as forward (keybindings

	Wed Sep  4 01:29:06 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttexttools.c (bst_scroll_text_create): add support for
	        Alt+Left as back and Alt+Right as forward (keybindings from netscape).

	svn path=/trunk/; revision=544

2002-09-03  Tim Janik 	# e2b299b4968d485854d706a63ad211a6f3fbaf59

	minor fix.

	svn path=/trunk/; revision=543

2002-09-03  Tim Janik 	# e89b881345fa7f7832d62514ffed8c7999d50409

	make documentation text views navigatable, rewind history upon reshow.

	Wed Sep  4 00:21:01 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: make documentation text views navigatable, rewind
	        history upon reshow.

	        * beast-gtk/bsttexttools.[hc]: implement navigatable portion of the text
	        views, optionally supported with BST_TEXT_VIEW_NAVIGATABLE.
	        removed BST_TEXT_VIEW_PARSE_TSM since we have to figure TSM-parsability
	        anyways.
	        got rid of bst_scroll_text_from_file(), reading input from files
	        should be done via absolute or partial file:// URIs now.

	        * beast-gtk/bsttoolbar.[hc]: support expandable toolbar widgets.

	        * beast-gtk/tsmview.c: make the browser navigatable.

	        * docs/beast-index.texi: new file. this simply links to all the
	        other docu files, it's used as a fallback index for beast's
	        documentation browser.

	        * docs/generated/markup.xsl:
	        a bunch of changes:
	        - provide a toplevel <tag-span-markup/> tag
	        - add anchors to section titles (copied from html.xsl), tag
	          spec: <anchor name="customPointer"/>
	        - tag rename, <activatable data="someURI"/> became <xlink
	          ref="someURI"/>. (for some _ODD_ reason, GMarkup seems
	          to be unable to parse <link/>, while <xlink/> doesn't pose
	          a problem.)
	        - nuke image link deadends.

	svn path=/trunk/; revision=542

2002-09-02  Tim Janik 	# 76fdfadea18666d4945efb0d2a09a950adcb7e58

	link updates

	svn path=/trunk/; revision=540

2002-09-02  Tim Janik 	# 3472365b073236d72e3a25f36c52860983497f61

	add $(top_srcdir)/configure as dependency to the *.dat rules, so the .dat

	Mon Sep  2 10:04:38 2002  Tim Janik  <timj@gtk.org>

	        * docs/reference/Makefile.am: add $(top_srcdir)/configure as dependency
	        to the *.dat rules, so the .dat files are properly remade if the
	        package version changes.

	svn path=/trunk/; revision=538

2002-09-02  Tim Janik 	# 1c4a0191570eacca413b2751f43f2ddd9ea6e730

	sync

	svn path=/trunk/; revision=537

2002-09-02  Tim Janik 	# ee091b72bba30aafc3d688d1a3983d6d469bb8b5

	up version to 0.4.1, non-rc.

	Mon Sep  2 07:13:50 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to 0.4.1, non-rc.

	        * beast-gtk/bstgconfig.[hc]: store rc-version as string.
	        * beast-gtk/bstmain.c: use BST_VERSION as rc-version.

	        * test/test-song.bse: provide a sample song.

	svn path=/trunk/; revision=536

2002-09-02  Tim Janik 	# 59d33be83447c8522a473ddb5cbc0f80d01311b8

	fix missing newline in output.

	Mon Sep  2 06:17:55 2002  Tim Janik  <timj@gtk.org>

	        * bseitem.c (bse_item_store_property): fix missing newline in
	        output.

	Fri Aug 30 10:29:33 2002  Tim Janik  <timj@gtk.org>

	        * gslmagic.[hc]: added gsl_magic_list_brute_match() to facilitate
	        exhaustive matches.

	        * gsltests.c: add ring sorting test.

	        * gslcommon.[hc]: provide gsl_ring_split(), gsl_ring_sort() and
	        gsl_ring_tail().

	svn path=/trunk/; revision=535

2002-08-30  Tim Janik 	# f6ab2c8a9108f5b22e9d34b59350ed0a8fad8548

	updates

	svn path=/trunk/; revision=534

2002-08-30  Tim Janik 	# db16478d4c8327a09892951c01bcdcab36de85a8

	up version to v0.4.1rc4.

	Fri Aug 30 03:21:31 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: up version to v0.4.1rc4.

	        * bsw-shell/*.[hc]:
	        * bsw/*.[hc]:
	        * beast-gtk/*.[hc]: update copyrights and license headers.

	        * AUTHORS: make this the canonical AUTHORS file for the whole
	        package, update names.

	        * put notes about licensing into COPYING. ship COPYING.GPL
	        and COPYING.LGPL.

	svn path=/trunk/; revision=533

2002-08-30  Tim Janik 	# 2dff2002355c571fb53fc9758c5f718636d7600a

	update copyrights and license headers.

	Fri Aug 30 03:18:26 2002  Tim Janik  <timj@gtk.org>

	        * *.[hc]: update copyrights and license headers.

	svn path=/trunk/; revision=532

2002-08-30  Tim Janik 	# 120f1463a4788d430342f548dcc0bdbab9459b01

	update copyrights and license headers.

	Fri Aug 30 03:18:09 2002  Tim Janik  <timj@gtk.org>

	        * *.[hc]: update copyrights and license headers.

	svn path=/trunk/; revision=531

2002-08-24  Tim Janik 	# 85f2977cc5e068aa227c25bc2c25689b6eb10caa

	support empty tagdefs.

	Sat Aug 24 12:02:21 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bsttexttools.c (text_buffer_tagdef): support empty tagdefs.

	        * docs/quickstart.texi: use doctitle and docauthor markup.

	        * docs/generated/markup.xsl:
	        * docs/generated/html.xsl: updates from alper for doctitle
	        and docauthor.

	svn path=/trunk/; revision=530

2002-08-23  Tim Janik 	# 9bb9f8c53cac0e6e97245bec73e5a3f3b61b1d5d

	fix docauthor and doctitle macros

	svn path=/trunk/; revision=529

2002-08-23  Tim Janik 	# 362519db34c03d305ce607e41dbdec435578aee4

	minor renaming fixup.

	svn path=/trunk/; revision=528

2002-08-23  Tim Janik 	# 9b3d59e2de39833dbd61685f6293504114bdca44

	complete "Setting Up Songs" chapter.

	Fri Aug 23 21:21:54 2002  Tim Janik  <timj@gtk.org>

	        * docs/quickstart.texi: complete "Setting Up Songs" chapter.

	        * beast-gtk/bstcanvassource.[hc]: add channel name hints, can be
	        toggled on and off with bst_canvas_source_set_channel_hints().

	        * beast-gtk/bstsnetrouter.[hc]:
	        add bst_snet_router_toggle_channel_hints() with GUI button to blend
	        in/out channel name hints.

	        * beast-gtk/bstparam.c (bst_param_create): shrink object properties by
	        a slight bit, so they aren't _insanely_ big.

	svn path=/trunk/; revision=527

2002-08-23  Tim Janik 	# c648038f7336a78e47bbf0b61d81307589c64046

	remove the "GNU" bubble from the logo pic, as beast is currently not an

	Fri Aug 23 15:22:41 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/images/beast-logo.png: remove the "GNU" bubble from the
	        logo pic, as beast is currently not an official GNU project.

	svn path=/trunk/; revision=526

2002-08-23  Tim Janik 	# f4b90a0fd9aee457875ca8289c1c48573c319ecd

	update from alper to fix empty paras.

	Fri Aug 23 14:52:49 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/markup.xsl: update from alper to fix empty paras.

	        * docs/generated/html.xsl: update from alper to fix empty paras.

	svn path=/trunk/; revision=525

2002-08-23  Tim Janik 	# 7034028a0f1ee341849e8aaec9dc10b4713e7687

	put the chunk list and the qsampler scrolled window into a vpaned so the

	Fri Aug 23 11:27:42 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.c (bst_wave_editor_init): put the chunk list
	        and the qsampler scrolled window into a vpaned so the user can alter
	        their layout.

	        * beast-gtk/bsttrackview.c: remove single track hack.

	        * docs/teximacros.texi: add @doctitle and @docauthor macros.

	svn path=/trunk/; revision=524

2002-08-23  Tim Janik 	# 12a80377c52cf7066482b7cca3776a0bdf2c3a70

	suspension update and reset() invokation fixes. whenever we change

	Fri Aug 23 13:39:59 2002  Tim Janik  <timj@gtk.org>

	        * gslopschedule.c (update_suspension_state):
	        * gslopmaster.c: suspension update and reset() invokation fixes.
	        whenever we change node->local_suspend or node->outputs_suspended,
	        update node->needs_reset.
	        * gsl-mplan.txt: keep a note about remaining suspension bugs.

	        * gslwaveosc.c (gsl_wave_osc_process): auto-trigger oscillator
	        if no sync input is present.
	        (gsl_wave_osc_config): reset sync level if the new config caused
	        a retrigger.
	        (gsl_wave_osc_reset): new function to reset filter state and
	        saved signal levels.

	        * bsewaveosc.c: slight rename, implement wosc_reset() function
	        to retrigger the oscillator.

	        * bsetrack.[hc]: support user setting for number of voices.

	svn path=/trunk/; revision=523

2002-08-23  Tim Janik 	# 4314b9046b7a97272f943aa13a7a52b5bea87964

	clean up the reset implementation.

	Fri Aug 23 14:24:01 2002  Tim Janik  <timj@gtk.org>

	        * davxtalstrings.c (xmod_reset): clean up the reset implementation.

	svn path=/trunk/; revision=522

2002-08-22  Tim Janik 	# 3f44e81f998ee004060b06a6627e3b3a964c137a

	support multiple tracks per song.

	Thu Aug 22 04:24:58 2002  Tim Janik  <timj@gtk.org>

	        * bsesongthread.c: support multiple tracks per song.

	        * gslopschedule.c (update_suspension_state): update
	        suspension flag before recursing into cycles that may
	        lead back to an object up in the stack trace.

	svn path=/trunk/; revision=521

2002-08-20  Tim Janik 	# 821989bbc4b4df11f4f8da75970ecd82dc550552

	fix va_start() invocations.

	Tue Aug 20 17:32:35 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c: fix va_start() invocations.

	        * docs/teximacros.texi: add @revision{} macro from alper to
	        show last revision stamp in generated output.

	        * docs/generated/html.xsl: update from alper with bug fixes.

	        * docs/generated/markup.xsl: update from alper with bug fixes,
	        fixes majorheading handling.

	        * docs/faq.texi:
	        * docs/quickstart.texi: fix revision date generation.

	svn path=/trunk/; revision=520

2002-08-16  Tim Janik 	# 1acb024030944519798d00574ee7016a16c39b20

	add @toc. add @toc, put title as majorheading. add nop macro (does

	Fri Aug 16 13:02:10 2002  Tim Janik  <timj@gtk.org>

	        * incorporate docs changes from Alper Ersoy <dirt@gtk.org>:

	        * docs/faq.texi: add @toc.
	        * docs/quickstart.texi: add @toc, put title as majorheading.
	        * docs/teximacros.texi: add nop macro (does nothing, throws
	        it's argument away) and @toc definition.

	        * generated/html.xsl: updated.

	        * generated/markup.xsl: yai! alper gave this some loving ;)

	svn path=/trunk/; revision=519

2002-08-16  Tim Janik 	# f94365f6e3520c3fffe3daed47698e8bf632ff04

	add new .texi doc files, cleanups. newly formatted and updated FAQ.

	Fri Aug 16 03:17:26 2002  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am: add new .texi doc files, cleanups.
	        * docs/faq.texi: newly formatted and updated FAQ.
	        * docs/quickstart.texi: started out on a quick start guide.
	        * docs/release-notes.texi: newly formatted release notes.
	        * docs/teximacros.texi: texi base macros.

	        * docs/generated/Makefile.am: generate docs from the .texi
	        sources with makeinfo and xsltproc now.

	        * docs/generated/texinfo.dtd: small DTD that just transforms
	        frequently used texi-sepcial entities into xml tags.

	        * docs/generated/html.xsl: XSL stylesheet from alper to produce
	        html from makeinfo --xml output.

	        * docs/generated/markup.xsl: bad hackup to generate TagSpanMarkup
	        output from makeinfo --xml. alper, this could need some loving ;)

	        * docs/reference/Makefile.am: moved tags2doc.pl into this dir,
	        since the reference docs aren't yet ported to texi/xsl.

	svn path=/trunk/; revision=518

2002-08-16  Tim Janik 	# 347ffb52f78f9a4fb1982eff13ad853e437f4c18

	add AC_DOC_REQUIREMENTS() which checks for all things neccessary to build

	Fri Aug 16 02:11:00 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: add AC_DOC_REQUIREMENTS() which checks for
	        all things neccessary to build texi docs. (currently, we
	        need a patched makeinfo, but that'll hopefully change with
	        the next makeinfo release).
	        up release candidate to 3.

	        * beast-gtk/Makefile.am: sort out beast sources. added build
	        rules for tsmview.

	        * beast-gtk/tsmview.c: a small noinst program to view TagSpanMarkup
	        docs with GtkTextView.

	        * beast-gtk/bstapp.c: added QuickStart help file popup to menu.

	        * beast-gtk/bstdialog.[hc]: renamed BST_DIALOG_STATUS flag to
	        BST_DIALOG_STATUS_SHELL, since this flag really indicates a
	        different type of window.
	        (bst_dialog_key_press_event): support Escape as a shortcut
	        for delete-event (for normal windows).
	        (bst_dialog_action_multi): catch addition of STOCK_CLOSE or
	        STOCK_CANCEL to update BST_DIALOG_DELETE_BUTTON flag.

	        * bstmain.c: moved some stuff into bstutils.c and bstapp.c to
	        avoid dependancies from the rest of the sources on bstmain.c.

	        * bstutils.[hc]: get rid of text widget or text display related
	        stuff.

	        * bsttexttools.[hc]: new files, containing code to deal with
	        text view/buffer objects, text display and markup.
	        beyond the functionality of text display related code from
	        bstutils.[hc], this code parses TagSpanMarkup xml tags, offers
	        utilities to move the cursor in text view/buffer, and offers
	        text browsing mode key bindings for GtkTextView.
	        also, the initial GtkTextView size requisition got fixed.

	svn path=/trunk/; revision=517

2002-08-15  Tim Janik 	# a4e32d7667899e40e56b82171b016d1418f914f5

	add mkcproc.pl to EXTRA_DIST.

	Thu Aug 15 21:21:46 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: add mkcproc.pl to EXTRA_DIST.

	        * bsestandardosc.c (bse_standard_osc_update_modules):
	        pass on transaction.

	svn path=/trunk/; revision=516

2002-08-08  Tim Janik 	# eb273269c60c76993064133f14bc5aa01d34dc19

	fix out-of-bound string access.

	Thu Aug  8 18:14:48 2002  Tim Janik  <timj@gtk.org>

	        * gslmagic.c (magic_create): fix out-of-bound string access.

	svn path=/trunk/; revision=515

2002-08-07  Tim Janik 	# 495f72e260ffdee0805688c36b34f8cf7d794ecd

	flag conditional enum ToyprofBehaviour to be skipped by the glib-mkenums.

	Wed Aug  7 11:20:59 2002  Tim Janik  <timj@gtk.org>

	        * toyprof.h: flag conditional enum ToyprofBehaviour to be skipped by
	        the glib-mkenums.

	svn path=/trunk/; revision=514

2002-08-07  Tim Janik 	# e9f038313d6a90a10a17083c43b136b4a417f584

	update

	svn path=/trunk/; revision=513

2002-08-07  Tim Janik 	# 0614594ab0cb59769aff7d3966a686768fd7885c

	updates

	svn path=/trunk/; revision=512

2002-08-07  Tim Janik 	# 23f00258672dc39b8f41c166612ff1e4d9b48925

	don't perform Xkb queries, since we currently don't need key tables.

	Tue Aug  6 23:18:33 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_key_table_from_xkb): don't perform Xkb
	        queries, since we currently don't need key tables.

	        * bsw/bswproxy.c (bsw_collector_get_string): plug string leakage.

	        * beast-gtk/bstpatterneditor.c:
	        * beast-gtk/bstpianoroll.c: s/halftone/semitone/.

	        * beast-gtk/bsttrackview.c (bst_track_view_can_operate): for a short
	        term hack, allow only creation of one track.

	svn path=/trunk/; revision=511

2002-08-07  Tim Janik 	# 73f09d2a2d6f5b4e02e44665a023c6d1ddda4a33

	remove BseGenOsc, BseStandardOsc fullfills all its purposes already.

	Tue Aug  6 08:36:32 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: remove BseGenOsc, BseStandardOsc fullfills all its
	        purposes already.

	svn path=/trunk/; revision=510

2002-08-07  Tim Janik 	# 70b684fe63a1bdbbc2851a838c54d8ff1de6f79e

	s/halftone/semitone/

	Tue Aug  6 18:48:13 2002  Tim Janik  <timj@gtk.org>

	        * bsepart.h:
	        * bseinfo.c:
	        * bseconstvalues.h:
	        * bseserver.proc:
	        * bseutils.[hc]:
	        * bswcommon.[hc]:
	        * bseglobals.[hc]:
	        * gslmath.[hc]: s/halftone/semitone/

	        * bsemain.c: adjust dcache node size to 4000 so the node's data plus
	        padding will normally fit into a page.

	        * gsldatacache.c: wow, gross buggyness in caching logic detected. we
	        badly miscalculated the current cache size and thus triggered lots of
	        sensless cache sweeps. fixed updating of aged nodes in case of
	        GSL_DATA_CACHE_PEEK, introduced AGE_EPSILON which prevents sensless
	        aging when frequently accessing the same block, added low_persistency
	        flag for dcaches that don't really need to cache data (figured through
	        gsl_data_handle_needs_cache()). altered caching logic so we do a
	        moderately good job at distributed node sweeping around the upper
	        cache memory mark. fixed documentation.

	        * gsldatahandle-mad.c:
	        * gsldatahandle-vorbis.c:
	        * gsldatahandle.[hc]: introduce recurse() method on data handles which
	        has to be implemented for all data handles that use other data handles
	        by invoking a user supplied callback on them. introduce ojob() method
	        which can be implemented by data handles to support certain optimization
	        jobs. remove coarse_seek() method, if this is really required, it can
	        be implemented as an optimization job.

	        * gsldatahandle.[hc]: introduce gsl_data_handle_needs_cache() which
	        figures whether a data handle will actually benefit from caching (not
	        true for data handles which don't do IO themselves, e.g. because they
	        are using static memory, a dcache or other data handles).

	        * gsldatahandle-mad.c:
	        * gsldatahandle-vorbis.c:
	        * gsldatahandle.c (wave_handle_ojob): return TRUE for the
	        GSL_DATA_HANDLE_NEEDS_CACHE ojob query.

	        * bseconstant.c (bse_constant_class_init): plug string leakage.

	        * bsewaveosc.c (pcm_pos_access_free): plug leakage of position struct.

	svn path=/trunk/; revision=509

2002-08-05  Tim Janik 	# ce3e68e65c03e12341c4d75d83991d529d72507a

	renamed bst_wrap_text_*() to bst_text_view_*(). unfortunately,

	Mon Aug  5 11:21:11 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: renamed bst_wrap_text_*() to
	        bst_text_view_*().
	        unfortunately, bst_text_view_from() still creates a GtkText widget
	        as opposed to the other bst_text_view_*() functions which deal with
	        GtkTextView already. that is because GtkTextView is simply still too
	        broken to correctly display Release-Notes and similar important stuff.

	        * beast-gtk/bstapp.c (bst_app_operate): we should use "mono" for fixed
	        font text views.

	svn path=/trunk/; revision=508

2002-08-04  Tim Janik 	# b2f2c66779251ddee55aa8fed83fc02cc48df1a4

	flag this loader with GSL_LOADER_SKIP_PRECEEDING_NULLS to deal with broken

	Sun Aug  4 21:01:56 2002  Tim Janik  <timj@gtk.org>

	        * gslloader-mad.c (_gsl_init_loader_mad): flag this loader with
	        GSL_LOADER_SKIP_PRECEEDING_NULLS to deal with broken mp3 files.

	        * gslmagic.[hc]: implement gsl_magic_list_match_file_skip() which
	        allowes for checking magics in files after an initial offset.

	        * gslloader.[hc]: support GSL_LOADER_SKIP_PRECEEDING_NULLS loader flag
	        to skip preceeding 0s before attempting magic matches.
	        this is implemented as a worst case fallback mechanism to deal with
	        some broken mp3 files.

	svn path=/trunk/; revision=507

2002-08-04  Tim Janik 	# 2ae4b6acc88e95e72c2b1cc8805e14a8f4811dae

	update playback position slider.

	Sun Aug  4 12:27:54 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.c: update playback position slider.

	svn path=/trunk/; revision=506

2002-08-04  Tim Janik 	# 82f43e98d5ad9678a882e5ef898c9c8a6e829b7d

	add fix from stefan so tail and head blocks are actually read out.

	Sun Aug  4 11:56:27 2002  Tim Janik  <timj@gtk.org>

	        * gslwavechunk.c: add fix from stefan so tail and head blocks are
	        actually read out.

	        * gslwavechunk.[hc] (struct _GslWaveChunk): rename ->start and ->end
	        fields to ->first and ->last since they both point to the first/last
	        position meant to be read out within that block (rather than the start
	        and upper boundary of the block).

	svn path=/trunk/; revision=505

2002-08-04  Tim Janik 	# a827b6278a8ce0be741d623460b6ed5335a09a1d

	rename ->start and ->end fields to ->first and ->last since they both

	Sun Aug  4 01:59:31 2002  Tim Janik  <timj@gtk.org>

	        * gslwavechunk.[hc] (struct _GslWaveChunk): rename ->start and ->end
	        fields to ->first and ->last since they both point to the first/last
	        position meant to be read out within that block (rather than the start
	        and upper boundary of the block).

	svn path=/trunk/; revision=504

2002-08-03  Tim Janik 	# acecf45f666d811cfcc378e18ec9475791195d7e

	don't include and ship PKG_paths.h.

	Sat Aug  3 17:46:41 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am (EXTRA_DIST): don't include and ship PKG_paths.h.

	        * docs/reference/Makefile.am (bsw-procs.dat): don't load plugins
	        from bsequery since this might be called while still uninstalled.

	        * configure.in: up version to rc2.
	        check whether ov_read_float() from libvorbis has 3 or 4 arguments.

	        * beast-gtk/images/beast-splash.png: splash screen update from
	        jimmac which says "Bedevilled Audio System".

	svn path=/trunk/; revision=503

2002-08-03  Tim Janik 	# fe63283c674e451fb165a95f4c6bae7d04943452

	translate errno via bse_error_from_errno().

	Sat Aug  3 17:16:13 2002  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_open):
	        * bsemididevice-oss.c (bse_midi_device_oss_open): translate errno
	        via bse_error_from_errno().

	        * bseserver.[hc]: fallback to null midi device if the real
	        midi device can't be opened.

	        * gsl-mplan.txt: fix typos.

	        * gsldatahandle-vorbis.c: adapt to changes in ov_read_float() in
	        libvrobis v1.0.0.

	svn path=/trunk/; revision=502

2002-08-02  Tim Janik 	# 220b9d9801f929202c92a3b8287efd48f0a6120d

	fix libguile check by supporting guile-config.

	Fri Aug  2 20:08:38 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: fix libguile check by supporting guile-config.

	svn path=/trunk/; revision=501

2002-08-02  Tim Janik 	# ae28bbffaaba11b5dd1fb6b6e9ab4ad8be3c97d2

	copy and update clue hunter code from GLE. added ::poll_refresh signal to

	Fri Aug  2 18:33:47 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcluehunter.[hc]: copy and update clue hunter code from
	        GLE. added ::poll_refresh signal to update clue hunter contents.

	        * beast-gtk/bstparam.c: update clue hunter code to use BstClueHunter.
	        feature bsw_item_list_proxies() procedure for OBJECT properties.

	svn path=/trunk/; revision=500

2002-08-02  Tim Janik 	# 41d4ecc045c722ee588ca87910e0c1127446a031

	add per-class list_proxies() method to retrive a list of possible proxies

	Fri Aug  2 18:21:19 2002  Tim Janik  <timj@gtk.org>

	        * bseitem.[hc]: add per-class list_proxies() method to retrive a list
	        of possible proxies for object properties.
	        add list_proxies() function and procedure.
	        bse_item_gather_proxies(): new convenience function to add predicate
	        filtered proxies to an iterator.

	        * bsemidisynth.c: support list_proxies() for synth net property.

	        * bseproject.[hc]: provide bse_project_get_wave_repo().

	        * bsesubsynth.[hc]: lock synth net property during playback, catch
	        infinite recursion during context creation. support list_proxies() for
	        synth net property.

	        * bsetrack.[hc]: support list_proxies() for synth net and part properties.

	        * bsewaveosc.c: support list_proxies() for wave property.

	svn path=/trunk/; revision=499

2002-07-29  Tim Janik 	# 2935e23ab49b2666d03fff2611a96187b11271c0

	updates.

	Tue Jul 30 01:44:02 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/release-notes.dat: updates.

	        * beast-gtk/bstplayback.[hc]: export API for seeking.

	        * beast-gtk/bstwaveeditor.[hc]: add seek scale.

	svn path=/trunk/; revision=498

2002-07-29  Tim Janik 	# ee0c1b9d13ce2440dfae68ea483e18170524834d

	support percentual seekage.

	Tue Jul 30 01:20:48 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.[hcp]*: support percentual seekage.

	        * gslwavechunk.c: fix uint/GslLong bug and non-loop initialization for
	        enter mem block.

	        * gsl*.[hc]: miscellanous const fixes.

	        * gslloader-oggvorbis.c (_gsl_init_loader_oggvorbis): add MIME
	        types application/x-ogg and audio/x-vorbis.

	svn path=/trunk/; revision=497

2002-07-27  Tim Janik 	# 1ee71fb2d36a5b97a93e52d85bb57645b7e31482

	cleanup

	svn path=/trunk/; revision=496

2002-07-27  Tim Janik 	# dc83ef4fb7f1e66d9952a49ab618eb4ecda63133

	feature release candidate appendix.

	Sat Jul 27 19:10:36 2002  Tim Janik  <timj@gtk.org>

	        * configure.in (BST_RELEASE_CANDIDATE): feature release candidate
	        appendix.

	        * bsw-shell/Makefile.am (public_scripts): don't install test.scm.

	        * bsw/Makefile.am: fix build rules for massive parallel
	        builds. fix clean rules.

	svn path=/trunk/; revision=495

2002-07-27  Tim Janik 	# 52fbccdbe4eeee78777cf9c35dd69931a1486cd3

	fix build rules for massive parallel builds. fix clean rules.

	Sat Jul 27 18:42:26 2002  Tim Janik  <timj@gtk.org>

	        * bsw/Makefile.am: fix build rules for massive parallel
	        builds. fix clean rules.

	svn path=/trunk/; revision=494

2002-07-27  Tim Janik 	# 3e931a1220e9481604ce9d403b757ca105477810

	fix gsl -> bse link.

	Sat Jul 27 18:22:32 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fix gsl -> bse link.

	        * configure.in: error out if guile is missing.

	        * beast-gtk/Makefile.am: add missing files.

	        * beast-gtk/bstpartdialog.c: nuke wrong include.

	        * beast-gtk/icons/Makefile.am: fix build rules.

	        * beast-gtk/images/Makefile.am: add missing files.

	        * bsw/Makefile.am: add -I., fix build rules.

	        * bsw/mkapi.c: fix generated includes.

	        * bsw-shell/Makefile.am: add -I., add missing files.
	        scm glue is now kept in bsw-scm-glue.boot.

	        * docs/Makefile.am: nuke outdated files from EXTRA_DIST.

	        * docs/reference/Makefile.am: fix build rules.

	svn path=/trunk/; revision=493

2002-07-27  Tim Janik 	# dff3772aed768b4ae7c396e39682863bb43115fa

	fix deps.

	Sat Jul 27 18:20:54 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: fix deps.

	        * listplugins.sh: generate deps on .c files for .enums files.

	svn path=/trunk/; revision=492

2002-07-27  Tim Janik 	# 923570adf35ff8ed6328975e74095b1d7f93bc45

	distcheck-fixing: include -I., prefix deps with srcdir, fix file arguments

	Sat Jul 27 18:17:49 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: distcheck-fixing: include -I., prefix
	        deps with srcdir, fix file arguments wrg srcdir
	        prefixing.

	        * mktypes.pl:
	        * bsetype.h: fixup builtin type macros.

	        * gslmakefile.inc: add missing files.

	svn path=/trunk/; revision=491

2002-07-27  Tim Janik 	# 27dfe307fa16a8b89c6f6a1cd440906ea5aad230

	grumbl

	svn path=/trunk/; revision=490

2002-07-27  Tim Janik 	# 96b4bc338671b7d1c8602585d2995cf1fc200a87

	add --print-path option to print a path to stdout on demand, print help

	Sat Jul 27 13:30:39 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_parse_args): add --print-path option
	        to print a path to stdout on demand, print help and version to
	        stdout (not stderr).

	svn path=/trunk/; revision=489

2002-07-27  Tim Janik 	# 98b076e118e4cc45858c4ece9c2b6b1c480e4bdd

	new directory containing images. added excellent images (logo, splash,

	Sat Jul 27 13:01:44 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/images/: new directory containing images.
	        added excellent images (logo, splash, mime-type, etc.) from
	        Jakub Steiner.

	        * NEWS: updates.

	        * configure.in: provide BST_VERSION_STABLE and BST_PATH_IMAGES,
	        fix BST_PATH_SAMPLES. upgrade version hint from Pre-ALPHA to ALPHA.

	        * beast-gtk/bstsplash.[hc]: splash dialog implementation.

	        * beast-gtk/bstdialog.c: add to status bar stack upon show if it's
	        empty.

	        * beast-gtk/bstmain.c: fire up splash screen. show dialogs as
	        early as possible. special case development command line options.

	        * docs/generated/release-notes.dat: updates.

	        * beast-gtk/bstparamview.c (bst_param_view_rebuild): properly honour
	        type ranges as set by bst_param_view_set_mask() (fixes the BSE
	        options in the preferences dialog).

	svn path=/trunk/; revision=488

2002-07-27  Tim Janik 	# 4b35afdfefa470ba6728563b2c35c2bc815c0a05

	support callback notification from bsw_register_scripts() and

	Sat Jul 27 12:48:07 2002  Tim Janik  <timj@gtk.org>

	        * bswcommon.[hc]: support callback notification from
	        bsw_register_scripts() and bsw_register_plugins().

	svn path=/trunk/; revision=487

2002-07-27  Tim Janik 	# cecc3a21f9ba8ae190692f4ab988cac7bad05f8d

	shutup

	svn path=/trunk/; revision=486

2002-07-27  Tim Janik 	# c995fc1c557758a235ce662b1cb6dbce877bb415

	adapt to new GSL data handle API.

	Sat Jul 27 07:49:48 2002  Tim Janik  <timj@gtk.org>

	        * bststest.c: adapt to new GSL data handle API.

	        * bstwaveeditor.[hc]: major code cleanup, adapt to new GSL data handle API.

	svn path=/trunk/; revision=485

2002-07-27  Tim Janik 	# 153e7a58eb30499b6fa6a5db92002f180018bb87

	redesigned some basic things. data handles correspond to samples now, they

	Sat Jul 27 06:26:10 2002  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc]: redesigned some basic things.
	        data handles correspond to samples now, they carry n_values,
	        n_channels and bit_depth, provided accessors for those and
	        the data handle name. these values are only valid for opened
	        data handles now though, implementations have to fill in a
	        setup structure upon openening to provide those values.
	        (gsl_data_handle_new_mem): new data handle for constant data
	        since gsl_data_handle_new_insert() doesn't allow a NULL src_handle
	        anymore.

	        * gslwavechunk.[hc]: life time redesign. wave chunks are ref counted
	        now and have to be explicitely opened.

	        * gslfilehash.c: remove debugging code.

	        * gslloader.c: adapt to new wave chunk API.

	        * bseeditablesample.[hcp]*: adaptions accroding to the new wave chunk
	        API. users have to explicitely open and editable sample now.

	        * gslloader-gslwave.c:
	        * gsldatautils.c:
	        * gsldatahandle-vorbis.c:
	        * gsldatahandle-mad.c:
	        * gsldatacache.c:
	        * bsestorage.[hc]: adaptions to the new data handle API.

	        * bsewave.[hc]: adaptions to the new data handle and wave chunk API.
	        callers must explicitely announce interest in the wave chunk index now.

	        * bsewaveosc.[hc]: use new BseWave API, cleanup and fix object
	        reference handling. use new GslWaveChunk API.
	        (wmod_process): pass NULL for non-connected input buffers.

	        * gslwaveosc*.[hc]: fix read out of constant default frequency,
	        frequency signal and modulation signal updates and the frequency
	        argument to gsl_wave_osc_retrigger() (was expected as signal frequency).

	        * gslwchunk.c: test case fixup according to new APIs.

	        * some ChangeLog cleanups.

	svn path=/trunk/; revision=484

2002-07-26  Tim Janik 	# a4913f6120a5348c7bec85a0ff972ba1b4f65416

	minor rename

	svn path=/trunk/; revision=483

2002-07-24  Tim Janik 	# e7beb8ce6e053afae16cfca256ac7ee8d3c74e9c

	gsl_wave_handle_new() updates.

	Thu Jul 25 01:25:35 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bststest.c: gsl_wave_handle_new() updates.

	        * doc updates.

	svn path=/trunk/; revision=482

2002-07-24  Tim Janik 	# d730c8b03252b19f1d7dd7348919f862fdb934ce

	new files, implementing GslHFile, an MT-safe pread() wrapper FILE type

	Thu Jul 25 01:12:51 2002  Tim Janik  <timj@gtk.org>

	        * gslfilehash.[hc]: new files, implementing GslHFile, an MT-safe
	        pread() wrapper FILE type which shares unix file descriptors (to
	        reduce usage thereof), and GslRFile, piggyback implementation
	        on top of GslHFile that supports the more common read()+seek() API.

	        * gsldatahandle.[hc]: use GslHFile for raw wave handles.
	        nuke data handle caching code. remove mtime from data handles.
	        make gsl_data_handle_open() and associated method return GslErrorType
	        instead of errno.

	        * gsldatahandle-vorbis.c: translate ogg/vorbis error codes into
	        GSL error codes. use GslRFile instead of unix FILE*.

	        * gsldatahandle-mad.c: use GslHFile instead of unix file descriptors.

	        * gslcommon.[hc]: provide gsl_error_from_errno(), get rid of
	        gsl_check_file_mtime(). sync gsl_strerror() with new error codes.

	        * *.c: adaptions due to gsl_wave_handle_new() changes.

	        * bseenums.[hc]: sync errors with new GSL errors.
	        use gsl_error_from_errno() from bse_error_from_errno().

	        * gslmultiwave.[hc]: remove unused code.

	        * gsldatahandle.[hc]: instead of gsl_data_handle_new_translate() with
	        mildly inconvenient parameters, offer gsl_data_handle_new_crop() and
	        gsl_data_handle_new_cut() with intuitive arguments.

	svn path=/trunk/; revision=481

2002-07-23  Tim Janik 	# c890af85e25b86bd004e2a3bf7f0cf381cd55252

	minor icon fixup.

	Tue Jul 23 08:12:54 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/icons/music-cut.png: minor icon fixup.

	        * beast-gtk/Makefile.am: remove unused code from build list, regarding
	        patterns, instruments and effects.

	        * bstapp.c: menu changes to reflect part/track usage vs. patterns
	        and instruments.

	        * bstkeytables.c: disable pattern editor dependancies.

	        * bstparam.c: there's no fundamental type BSE_TYPE_NOTE anymore.

	        * bstpartdialog.c: extend menu with newly added cut/copy/paste/clear
	        functions.

	        * bstpartdialog.c:
	        * bstpianoroll.[hc]:
	        * bstpianorollctrl.[hc]: port this over to use notes instead of
	        frequencies, bug fixes.

	        * bstsongshell.[hc]: remove dependancies on unused code.

	        * bsttrackview.c: properly deal with track removal during playback.

	        * bsw/bswproxy.[hc]: wrap BSE_NOTE_*() macros, get rid of BSE_TYPE_NOTE
	        fundamental.

	svn path=/trunk/; revision=480

2002-07-23  Tim Janik 	# f432bd0fc016f31c10dfaf3ee4459d09e6cc64d9

	remove unused fldbsepattern.c from build list.

	Tue Jul 23 08:04:20 2002  Tim Janik  <timj@gtk.org>

	        * Makefile.am: remove unused fldbsepattern.c from build list.

	        * *.c: adaptions to constant changes, use new pspec constructors.

	svn path=/trunk/; revision=479

2002-07-23  Tim Janik 	# 7ee78677197a2b71c8a2d1f4eecbb067a769b4bf

	remove (currently) unused code from build setup: BseInstrument,

	Tue Jul 23 07:47:55 2002  Tim Janik  <timj@gtk.org>

	        * bse.h:
	        * Makefile.am: remove (currently) unused code from build setup:
	        BseInstrument, BseEffect*, BsePattern*.

	        * bseconstvalues.[hc]: new files, taking over many constants and note
	        related macro definitions from bseglobals.[hc].

	        * bsemain.c: initialize GSL with proper kammer frequency/note.

	        * bseutils.[hc]: removed duplicated constants, added
	        bse_note_fine_tune_from_note_freq ().

	        * bswcommon.[hc] bswprivate.h: change BswPartNote to have a note
	        and a fine_tune field instead of frequency.

	        * bsetype.h:
	        * bseparam.[hc]: don't introduce BSE_TYPE_NOTE as fundamental
	        type, having a pspec variant is sufficient. added convnience
	        function to easily create pspecs for notes and frequencies.

	        * bsesongthread.c:
	        * bsepart.[hcp]*: ported this over from using frequencies to
	        using notes.

	        * bsesong.[hcp]*: remove dependancies on unused code.

	        * bsemath.h: added more accurate constants for 2^(1/12),
	        ln(2^(1/12)) and ln(2^(1/1200)), minor cleanups.

	        * bseglobals.[hc]: removed math constants. provide a constant,
	        high-accuracy semitone factor table and fine tune factor table
	        at compile time. got rid of 16bit-fixed semitone factor table.
	        removed lots of MIN/MAX defines, note, fine tune and frequency
	        macros.

	        * bseglue.c: BseNote fixes.

	        * bseconstant.[hc]: remove unused sequencer methods.

	        * *.c: constant fixes/adaptions, use new param spec constructors.

	        * bseinfo.c: added lots of (inactive) debugging code to check
	        note/frequency/table validity.

	svn path=/trunk/; revision=478

2002-07-21  Tim Janik 	# 583156b3b4733822507bcc20e28c60a89fd567a7

	add clipboard functions to toolbar, cut/copy/paste and clear.

	Sun Jul 21 21:16:22 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpartdialog.[hc]: add clipboard functions to toolbar,
	        cut/copy/paste and clear.

	        * beast-gtk/bstpianoroll.[hc]: slight note colorization changes, support
	        view-only selection rectangle. add function to retrive paste position.
	        remove controller-specific drag data.

	        * beast-gtk/bstpianorollctrl.[hc]: add clipborad support add
	        per-controller drag data. support selection group moves.

	        * beast-gtk/bsttoolbar.[hc]: support stock images.

	        * beast-gtk/bsttrackview.[hc]: fixup track image.

	        * beast-gtk/bstutils.[hc]:
	        * beast-gtk/icons/*: added new icons: music clipboard cut/copy/paste,
	        track and trash-scissors.

	svn path=/trunk/; revision=477

2002-07-21  Tim Janik 	# de7bcdd4b62576fc46d36bd49d2f99b0e8297352

	provide saner (and clearer) GSource priorities and bse_idle_*() helper

	Sun Jul 21 04:39:59 2002  Tim Janik  <timj@gtk.org>

	        * bseglobals.[hc]: provide saner (and clearer) GSource priorities
	        and bse_idle_*() helper functions to install async handlers at
	        the various priority levels.

	        * *.c: use bse_idle_* functions to queue async handlers.

	        * bsepart.[hcp]*: provide notes with event ids, select notes by
	        ids and not by range.

	svn path=/trunk/; revision=476

2002-07-15  Tim Janik 	# 41efac9489bf658fa7095128eab9519777922177

	use BstToolbar instead of GtkToolbar to fix up zoom and tool size layout.

	Mon Jul 15 14:40:52 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_page): use BstToolbar
	        instead of GtkToolbar to fix up zoom and tool size layout.

	        * beast-gtk/bstcanvassource.c: provide sane default size for info
	        window.

	        * beast-gtk/bstpartdialog.c: fix radio tool fallback.

	        * beast-gtk/bstradiotools.c: fixup toggle button state of fallback
	        tool when deactivated.

	        * beast-gtk/bstcanvassource.c: provide sane default size for info
	        window.

	        * beast-gtk/bsttoolbar.c: fix up tooltip on custom widgets.

	svn path=/trunk/; revision=475

2002-07-15  Tim Janik 	# 4fab322a4216c4aa6fbf263e23b9fda1dcdf60d7

	bye bye TODO.

	svn path=/trunk/; revision=474

2002-07-15  Tim Janik 	# 0081022c0394767fccfe4e949f03bb25231a603c

	quick script to record midi notes into a BsePart.

	Mon Jul 15 07:18:40 2002  Tim Janik  <timj@gtk.org>

	        * bsw-shell/record-midi.scm (record-midi): quick script to record midi notes
	        into a BsePart.

	        * beast-gtk/bstdragutils.[hc]: start at implementing necessary utilities
	        for widget implementations that support mouse dragging APIs (and auto-
	        scrolling).

	        * beast-gtk/bstpianorollctrl.[hc]: piano roll controller implementation
	        (insertion, selection, resizing, movement, deletion etc. of notes).

	        * beast-gtk/bsttoolbar.[hc]: quick toolbar implementation based on
	        standard widgets. this gets rid of lots of problems with GtkToolbar
	        and supports drop-down selection tool items.

	        * beast-gtk/bsttrackview.[hc]: view for BseTracks withint BseSong
	        shells.

	        * beast-gtk/bstpartdialog.[hc]: moved piano roll controller code into
	        bstpianorollctrl.[hc]. extend button3 menu with piano roll tools. add
	        hzoom, use new toolbar, add note length and quantization selections.
	        configure piano roll ctrl tools.

	        * beast-gtk/bstpianoroll.[hc]: implement new drag API. added auto
	        scrolling, support selections and implement proper boundary (highest/
	        lowest frequency) checks.

	        * beast-gtk/bstradiotools.[hc]: support BstToolbar.

	        * beast-gtk/bstsongshell.[hc]: support BstTrackView.

	        * beast-gtk/icons/*note*:
	        * beast-gtk/bstutils.[hc]: added new stock items for note length
	        and quantization selection.

	        * bsw-shell/bswscminterp.[hc]: implement GslGlueRec as SCM smob
	        with named field accessor. use GslGlueSeq of rproc/signal arguments.

	svn path=/trunk/; revision=473

2002-07-15  Tim Janik 	# 6894b50c0f7eef499a2cfe4915e0a7e7dcbec295

	new internal module which merges signal outputs of multiple module

	Mon Jul 15 05:07:37 2002  Tim Janik  <timj@gtk.org>

		* bsecontextmerger.[hc]: new internal module which merges signal
		outputs of multiple module contexts.

		* bsemidimodule.[hc]:
		* bsemidisynthinput.[hc]: remove old midi voice implementation modules.

		* bsetrack.[hc]: first start at implementing tracks for songs, which
		arrange song parts.

		* bsemidivoice.[hc]: internal wrapper objects for midi receiver modules.

		* bsecontainer.[hc]: added class method to list children for context
		creation propagation (overriden by BseSNet context branch
		implementation).

		* bseenums.[hc]: remove MIDI related enums.

		* bseglobals.[hc]:
		* gslcommon.[hc] (gsl_init):
		fix MIDI note number for kammer note.

		* bseglue.[hc]: support boxed->GslGlueSequence conversions. fix up
		record and sequence usage.

		* *midi*.[hc]: remove old BseMidiDecoder code.

		* bsemidievent.[hc]: remove old MIDI channel/note/decoder implementations.
		use float values for MIDI event fields.
		add event constructors, remove global MIDI notifier hook.
		add MIDI_SIGNAL enum and default values for the various control
		signals supported per midi channel.

		* bsemidiicontroller.[hc]: adaptions to work with the new MIDI_SIGNAL
		enum and MidiReceiver.

		* bsemidinotifier.[hc]: adaptions to work with the new MidiREceiver.

		* bsemidireceiver.[hc]: actually deploy the new midi receiver
		implementation. added event processing implementation, support float
		values for midi event fields.
		(bse_midi_receiver_push_data): translate system time to engine ticks
		here. process newly enqueued events (this might need to change).
		add API to push and process event structures.
		implement midi control value module.
		reimplement midi voice and switch modules, make use of the engine's
		new virtual module implementation.
		implement midi notifier hooks per midi receiver.
		support continuous midi controls (convert LSB and MSB part to float).
		support "all sound off" and "all notes off" control triggers, abuse
		"local control switch" for debugging output of active voices.
		support sustain pedal for active voices.
		move BseMidiEvent structure back into bsemidievent.[hc].

		* bsemidisynth.[hc]: implement multiple midi voices via branch
		contexts. got rid of the maximum_voices=4 limitation. this also
		requires midi voice synth networks to properly put out the
		"done" signal to figure reusable voices. get rid of "clicks"
		at note boundaries when reusing voices by means of the engine's
		reset() method for modules.

		* bseobject.[hc] (bse_object_debug_name): debugging convenience
		function which describes (partly invalid) object references.

		* bsepart.[hcp]*: support selection rectangle.

		* bseprocedure.proc: add convenience procedure to convert notes into
		frequencies.

		* bseserver.[hcp]*: remove MidiDecoder code, properly support
		BseMidiReceiver.

		* bsesnet.[hc]: added bse_snet_context_clone_branch() and
		bse_snet_context_is_branch() to support context branches for
		selected modules within a synthesis network.

		* bsesong.[hc]: implement voices via MidiReceiver modules
		and context branches.
		* bsesong.proc: add procs for track addition/removal.

		* bsesongthread.[hc]: implement playback of part notes via
		midi note on/off events. fetch part via BseTracks.

		* bsesource.[hc]: added convenience macro bse_source_must_set_input()
		fo rinternal module connections.
		support setting of context data for sources with 0 input and output
		channels. to be used by BseSNet solely (for context branches).
		bse_source_collect_inputs_recursive() traversal function to construct
		a list of modules that form inputs of a given modules.

		* bsesubsynth.[hc]: pass on MidiReceiver per context to custom synth
		networks.

		* bswcommon.[hc]: support iterator->GslGlueSequence conversion.

		* gslcommon.[hc]:
		add flow job debug key.
		(gsl_time_system): retrive system time in micro seconds.
		(gsl_tick_stamp_last): get the last tick stamp update together with
		the system time of that update.

		* gslgluecodec.c:
		* gslgluesignal.c:
		* gslglue.[hc]: don't fix the element type of sequences.
		ref-count records (should do the same at least for sequences).
		use sequences for compound signal/procedure arguments.
		support field names in record implementation (should use quarks
		for efficiency).

		* gslopnode.h:
		* gslengine.[hc]:
		* gslopmaster.[hc]:
		* gslopschedule.[hc]:
		* gsloputils.[hc]: change GSL Engine license to GPL.

		* gslengine.[hc]: more documentation. make/flag thread-safe functions.
		make garbage collection explicit.
		(gsl_module_new_virtual): really implement cirtual modules.
		(gsl_engine_dispatch): garbag collect here.
		(gsl_engine_tick_stamp_from_systime): translate system time to engine
		tick stamps, based on the last tick stamp update.

		* gslopnode.h:
		* gslopmaster.[hc]: update output stream connected flags during within
		scheduler.
		clenup pending flow jobs when discarding engine modules.
		reimplement resumption implementation.
		fixup flow job implementation.
		implement stream virtualization for virtual modules.
		implement module suspension.

		* gslopnode.h:
		* gslopschedule.[hc]:
		support scheduling virtual modules and ouput stream connected flag
		updates.

		* gsloputil.[hc]: implement proper flow job and garbage collection.

		* gsl-mplan.txt: document virtual modules.

	svn path=/trunk/; revision=472

2002-07-15  Tim Janik 	# 19e3d004484cf5b3bda3f969d426a50c5eb7c6e1

	support "done" output signal which goes high once the envelope completed

	Mon Jul 15 06:26:18 2002  Tim Janik  <timj@gtk.org>

	        * bsesimpleadsr*.[hc]: support "done" output signal which goes high
	        once the envelope completed the release phase.

	svn path=/trunk/; revision=471

2002-07-03  Tim Janik 	# 91454e5dd30e68be9009776d6bad7233267c20e9

	engine renaming fixes.

	svn path=/trunk/; revision=470

2002-07-03  Tim Janik 	# 6eddf919dfb0a056e49d492549a32a13609c5341

	new MIDI event handling core which creates the required engine modules on

	Wed Jul  3 05:34:10 2002  Tim Janik  <timj@gtk.org>

	        * bsemidireceiver.[hc]: new MIDI event handling core which creates
	        the required engine modules on demand (not currently deployed).

	        * bsemain.[hc]: delay plugin initialization and initialize MIDI core.

	        * bsemididevice-oss.c: pipe event data into the new midi receiver.

	        * bsemididevice.[hc]: add BseMidiReceiver property.

	        * bsemidievent.[hc]: rename, this code is scheduled for removal once
	        the new MIDI core is deployed.

	        * bseproject.c: create synth nets together with a default MIDI
	        receiver.

	        * bseserver.[hc]: add API to manage default MIDI receiver.

	        * bsesnet.[hc]: add API to maintain an associated MIDI receiver
	        per context.

	        * bsesubsynth.c: create contexts on the target snet with the
	        MIDI receiver and midi_channel from the current context of
	        the sub synth.

	        * gsl-mplan.txt: describe reset(), describe suspension,
	        fix consumer node definition, TODO cleanups.

	        * gslcommon.[hc]: add gsl_ring_insert_sorted().

	        * gslopmaster.[hc]:
	        * gslopschedule.[hc]:
	        * gsloputil.[hc]:
	        * gslengine.[hc]: implement first stab at virtual modules (not
	        yet completed). complete suspension and resume job implementations.

	svn path=/trunk/; revision=469

2002-06-19  Tim Janik 	# 72b93f2504c58da137c159508f223a4b40295073

	incorporated fixes/changes suggested by stefan and Hans Meine

	Wed Jun 19 03:47:45 2002  Tim Janik  <timj@gtk.org>

	        * incorporated fixes/changes suggested by stefan and
	        Hans Meine <hans_meine@gmx.net>.

	        * gsldatahandle-mad.c (create_seek_table): fix // comments.

	        * gslengine.h:
	        * gslopmaster.c: sigh, remove const integer fields from structures,
	        this is simply not C++ compatible.

	        * gslloader.[hc]: make GslWaveFileInfo a ref-counted structure.

	svn path=/trunk/; revision=468

2002-06-19  Tim Janik 	# 87564d9cc06caebe412abd42928008948ae0a2f6

	properly support the GslGlue layer and BseScriptControl.

	Wed Jun 12 06:31:34 2002  Tim Janik  <timj@gtk.org>

	        * bsescripthelper.[hc]: properly support the GslGlue layer and
	        BseScriptControl.

	        * bseglue.[hc]: new file, imlpementing the GslGlueVTable backend
	        for BSE.

	svn path=/trunk/; revision=467

2002-06-19  Tim Janik 	# 3b1643663b7ced357e244aec718595b8f8384ded

	added facility to set/get data pointers per proxy.

	Wed Jun 12 06:16:07 2002  Tim Janik  <timj@gtk.org>

		* bswproxy.[hc]: added facility to set/get data pointers per proxy.

		* bswsignal.c: fix closure guards and signal connection.

	Thu Jun 13 07:29:20 2002  Tim Janik  <timj@gtk.org>

		* bsw-boilerplate.scm.x: more scheme function definitions.

		* bswscminterp.[hc]: new binding implementation, based on the
		GSL Glue layer. we use an extra SMOB type to hook into the
		garbage collector now.

		* bswshell.c: support startup suspension via BSW_SHELL_SLEEP4GDB=1.
		adaptions to new bswscminterp.h.

		* progressor-example.scm: procedure fixes.

		* got rid of the old C glue generation code.

		* bstmain.c: support startup suspension via BEAST_SLEEP4GDB=1.
		fixup plugin and script registration process somewhat.
		added --hints option to display additional information in tooltips
		usefull for script implementations.

		* bstpianoroll.[hc]: supply GdkEvent in canvas event signals to allow
		pointer graps in handlers.

		* bstpartdialog.c: implemented procedure startup menu.

		* bstprocedure.c: removed some bad status hacks.

		* bststatusbar.[hc]: added support for script-control dialogs.

		* bstusermessage.[hc]: implemented script-control dialog.

		* bstutils.c: fix NULL action lookup.

	Mon May 27 16:45:48 2002  Tim Janik  <timj@gtk.org>

		* test/*.bse: fixes due to i/o channel renames.

		* bstapp.c: added /Script menu.

		* bstcanvassource.c: provide canonical channel names in info dialogs.

		* bstdialog.c: allow setting of child and removal of actions.

	svn path=/trunk/; revision=466

2002-06-19  Tim Janik 	# bafb7fe7dc467d296eef8a6722c08b19d3e37da8

	added facility to set/get data pointers per proxy.

	Wed Jun 12 06:16:07 2002  Tim Janik  <timj@gtk.org>

	        * bswproxy.[hc]: added facility to set/get data pointers per proxy.

	        * bswsignal.c: fix closure guards and signal connection.

	svn path=/trunk/; revision=465

2002-06-19  Tim Janik 	# 31ec317429a26926760c68e0047fba04b2519743

	more scheme function definitions.

	Thu Jun 13 07:29:20 2002  Tim Janik  <timj@gtk.org>

	        * bsw-boilerplate.scm.x: more scheme function definitions.

	        * bswscminterp.[hc]: new binding implementation, based on the
	        GSL Glue layer. we use an extra SMOB type to hook into the
	        garbage collector now.

	        * bswshell.c: support startup suspension via BSW_SHELL_SLEEP4GDB=1.
	        adaptions to new bswscminterp.h.

	        * progressor-example.scm: procedure fixes.

	        * got rid of the old C glue generation code.

	svn path=/trunk/; revision=464

2002-06-19  Tim Janik 	# 3b2300e74428ad424637ae7a92b3be86f7250ca2

	added missing files

	svn path=/trunk/; revision=463

2002-06-19  Tim Janik 	# 7f8cf11611330381f1a9520aefa502ebee438fc6

	new object, emitting notification of incomming MIDI events.

	Thu Jun 13 07:28:34 2002  Tim Janik  <timj@gtk.org>

	        * bsemidinotifier.[hcp]*: new object, emitting notification of incomming
	        MIDI events.

	        * bsescriptcontrol.[hcp]*: new object, proxying running scripts and
	        allowing for user side control of scripts.

	        * *.c: more i/o channel name fixups.

	        * bsebindata.c: code cleanups.

	        * bsecategories.c: check type name syntax.

	        * bsecomwire.[hc]: removed temporary hacks, slight fixup to
	        random request id generation.

	        * bsecontainer.proc: added lookup procedure to find a named child
	        of a container.

	        * *.proc: const cleanups.

	        * bseenums.[hc]: added user error enum values.

	        * bseitem.proc: added is_a check procedure.

	        * bsemidimodule.c:
	        * bsemididevice-oss.c: changes due to new timestamped and thread-safe
	        MIDI decoder API.

	        * bsemidievent.[hc]: midi decoder API extensions to provide
	        time stamped MIDI events. explicitely marked mutex-affected
	        functions and implemented thread-safety measures.

	        * bseobject.[hc] (bse_object_do_dispose): set the
	        BSE_OBJECT_FLAG_DISPOSED flag on objects, since we don't support
	        resurrection in general.
	        (bse_object_class_add_dsignal): allow addition of detailed signals.
	        (bse_object_from_id): don't hand out disposed objects.

	        * bseparasite.c: fixed string-escaping bug.

	        * bsepart.[hc]: for now, limit the maximum tick count to 0x7fffffff,
	        which is a valid signed integer.

	        * bsescripthelper.[hc]: properly support the GslGlue layer and
	        BseScriptControl.

	        * bseserver.[hcp]*: support container usage of the server.
	        moved script handling into bsescriptcontrol.c.
	        implment procedure to retrive a MIDI notifier obejct.

	        * bsesongthread.c: silence debugging output.

	        * bsesource.proc: allow setting a module's input by name.
	        added more getters for channels.

	        * bsestorage.c: fix string escaping bug.

	        * bswcommon.c: added handler to convert a BswNoteDescription
	        into a GslGlueRecord.

	Wed Jun 12 06:31:34 2002  Tim Janik  <timj@gtk.org>

	        * GSL Glue layer introduction. the code is mature enough for
	        our scheme bindings, but still evolving.

	        * gslglue.[hc]: new files implementing the GslGlue layer.
	        the GslGlue layer is a presumably simple API abstraction
	        which allowes acces to foreign object systems with notification
	        signals, object properties and object procedures.

	        * gslgluecodec.[hc]: serialization/deserialization layer
	        which allowes GslGlue to be used from remote processes
	        transparently.

	        * gslgluesignal.c: implementation of signal notification.

	        * bseglue.[hc]: new file, imlpementing the GslGlueVTable backend
	        for BSE.

	Mon May 27 16:45:48 2002  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: remove the buggy and old g_strdup_quoted() function.
	        changed callers to use g_strescape (string, NULL) instead.

	        * bsequery.c (show_procdoc): fallback to procedure blurb if there's
	        no help available.

	        * mkcproc.pl: support procedure BLURBs.

	        * gslcommon.[hc]: added function to return main thread handle.

	        * gsl*.[hc]: nuked GslPollFD, use GPollFD instead.

	svn path=/trunk/; revision=462

2002-06-19  Tim Janik 	# cb616abc416081eb8ddb783ed979eac26f7c7da8

	new object, emitting notification of incomming MIDI events.

	Thu Jun 13 07:28:34 2002  Tim Janik  <timj@gtk.org>

	        * bsemidinotifier.[hcp]*: new object, emitting notification of incomming
	        MIDI events.

	        * bsescriptcontrol.[hcp]*: new object, proxying running scripts and
	        allowing for user side control of scripts.

	        * *.c: more i/o channel name fixups.

	        * bsebindata.c: code cleanups.

	        * bsecategories.c: check type name syntax.

	        * bsecomwire.[hc]: removed temporary hacks, slight fixup to
	        random request id generation.

	        * bsecontainer.proc: added lookup procedure to find a named child
	        of a container.

	        * *.proc: const cleanups.

	        * bseenums.[hc]: added user error enum values.

	        * bseitem.proc: added is_a check procedure.

	        * bsemidimodule.c:
	        * bsemididevice-oss.c: changes due to new timestamped and thread-safe
	        MIDI decoder API.

	        * bsemidievent.[hc]: midi decoder API extensions to provide
	        time stamped MIDI events. explicitely marked mutex-affected
	        functions and implemented thread-safety measures.

	        * bseobject.[hc] (bse_object_do_dispose): set the
	        BSE_OBJECT_FLAG_DISPOSED flag on objects, since we don't support
	        resurrection in general.
	        (bse_object_class_add_dsignal): allow addition of detailed signals.
	        (bse_object_from_id): don't hand out disposed objects.

	        * bseparasite.c: fixed string-escaping bug.

	        * bsepart.[hc]: for now, limit the maximum tick count to 0x7fffffff,
	        which is a valid signed integer.

	        * bsescripthelper.[hc]: properly support the GslGlue layer and
	        BseScriptControl.

	        * bseserver.[hcp]*: support container usage of the server.
	        moved script handling into bsescriptcontrol.c.
	        implment procedure to retrive a MIDI notifier obejct.

	        * bsesongthread.c: silence debugging output.

	        * bsesource.proc: allow setting a module's input by name.
	        added more getters for channels.

	        * bsestorage.c: fix string escaping bug.

	        * bswcommon.c: added handler to convert a BswNoteDescription
	        into a GslGlueRecord.

	Wed Jun 12 06:31:34 2002  Tim Janik  <timj@gtk.org>

	        * GSL Glue layer introduction. the code is mature enough for
	        our scheme bindings, but still evolving.

	        * gslglue.[hc]: new files implementing the GslGlue layer.
	        the GslGlue layer is a presumably simple API abstraction
	        which allowes acces to foreign object systems with notification
	        signals, object properties and object procedures.

	        * gslgluecodec.[hc]: serialization/deserialization layer
	        which allowes GslGlue to be used from remote processes
	        transparently.

	        * bseglue.[hc]: new file, imlpementing the GslGlueVTable backend
	        for BSE.

	Mon May 27 16:45:48 2002  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]: remove the buggy and old g_strdup_quoted() function.
	        changed callers to use g_strescape (string, NULL) instead.

	        * bsequery.c (show_procdoc): fallback to procedure blurb if there's
	        no help available.

	        * mkcproc.pl: support procedure BLURBs.

	        * gslcommon.[hc]: added function to return main thread handle.

	        * gsl*.[hc]: nuked GslPollFD, use GPollFD instead.

	svn path=/trunk/; revision=461

2002-06-19  Tim Janik 	# b665336120c4a5cceedb5812feaa12a7804a1b65

	more i/o channel name fixups.

	Mon May 27 22:57:09 2002  Tim Janik  <timj@gtk.org>

	        * more i/o channel name fixups.

	        * bsecompressor.[hc]:
	        * bsesimpleresonancefilter.[hc]: removed outdated plugins.

	svn path=/trunk/; revision=460

2002-05-27  Tim Janik 	# 26bb65b0b900bafe06ea110c3c2b1364e9234e19

	remove debugging output

	svn path=/trunk/; revision=459

2002-05-27  Tim Janik 	# 50ff9006470ccb67024db18922afa22b8f5bf3c6

	implement utility procedures, mostly for scripts.

	Mon May 27 08:34:28 2002  Tim Janik  <timj@gtk.org>

	        * bseprocedure.proc: implement utility procedures, mostly for scripts.

	svn path=/trunk/; revision=458

2002-05-27  Tim Janik 	# bb0dfb6f35c0c5426c4359a77ddc49cf5de77a36

	updates re: scriptability

	svn path=/trunk/; revision=457

2002-05-27  Tim Janik 	# 364537d43b4864fb9b8ff545b6578e0f1db05f0f

	remove hack to set the status bar after procedure execution, BseServer

	Mon May 27 06:58:30 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c (bst_procedure_shell_execute): remove hack
	        to set the status bar after procedure execution, BseServer signals this.

	        * beast-gtk/bstprocedure.[hc]: added new functions to fire
	        up the procedure execution dialog non-modal.

	        * beast-gtk/bstutils.[hc]: added new stock icon types (from gtk)
	        for info/question/warning/error dialogs. added convenience
	        function gtk_tree_view_append_text_columns() to reduce code
	        duplication.
	        (bst_wrap_text_create):allow text to be horizontally centered.

	        * beast-gtk/bstapp.[hc]: support procedure browser.

	        * beast-gtk/bstdialog.[hc]: added functions to change dialog
	        flags.

	        * beast-gtk/bstmain.c: register scripts together with plugins
	        and setup user-message handlers.

	        * beast-gtk/bstusermessage.[hc]: install a BseServer handler to
	        popup message dialogs upon request (with various types: INFO,
	        QUESTION, WARNING and ERROR).

	        * beast-gtk/bstprocbrowser.[hc]: fire up a browsing dialog, listing
	        all BSE procedures.

	        * Makefile.am: define BSW_PATH_SCRIPTS (path where script files
	        reside) and BSW_PATH_BINARIES (path where the bswshell interpreter
	        resides).

	        * bsw-shell/bswshell.c: added argument parser to support:
	        --g-fatal-warnings: make glib warnings fatal.
	        --bse-command-pipe: setup input/output pipes when being invoked
	          remotely.
	        --bse-enable-register: enable script function registration for
	          the remote invokation case.
	        --bse-enable-server: enable bsw-server function, either for the
	          remote case when not registering scripts, or (automatically
	          enabled) for the standalone case.
	        -p: register plugins upon startup (could be auto-enabled for the
	         standalone case).
	        (gh_main): sort out remote vs. standalone invokation.

	        * bsw-shell/mkglue.c: fix float handling.

	        * bsw-shell/bswscminterp.[hc]: added SCM stubs to register
	        scripts.

	        * bsw-shell/bswscmhandle.c (bsw_scm_handle_eval): invoke
	        procedures over the wire if we're spawned from another
	        process. added BseComWire handling routines.

	        * bsw-shell/Makefile.am: added rule to install scripts (might
	        want to move these into a seperate dir at some point).

	        * bsw-shell/progressor-example.scm: simple example script.

	Wed May 22 19:01:35 2002  Tim Janik  <timj@gtk.org>

	        * bsw/mkapi.c (print_proc): make sure values have a type of 0
	        when initializing them.

	svn path=/trunk/; revision=456

2002-05-27  Tim Janik 	# fe2ee7def483b61e9d61b7ab6123c8038587d8aa

	provide the procedure execution status from the procedure's BseErrorType

	Mon May 27 08:34:28 2002  Tim Janik  <timj@gtk.org>

	        * bseprocedure.c (call_proc): provide the procedure execution status
	        from the procedure's BseErrorType output if any.

	        * bseprocedure.[hc]: allow NULL values for
	        bse_procedure_marshal_retval() and bse_procedure_unmarshal_retval().

	        * bseserver.[hcp]*: added ::user-message signal with wrapper function
	        bse_server_user_message(). added bse_server_run_remote() to start
	        a script interpreter. added bse_server_queue_kill_wire() to kill the
	        connection to a currently running child process. added interpreter
	        wire dispatch source to handle remote connections from the main loop.
	        renamed script-status to exec-status.

	        * bsestorage.[hc]: fix precision in float/double value storage.
	        fix validation of storage values to support G_PARAM_LAX_VALIDATION.

	        * bseutils.[hc]: provide documentation for bse_search_path_*().

	        * bswcommon.h[hc]: added bsw_register_scripts().
	        moved bsw_type_name_to_sname() into this place.

	        * bseplugin.[hc] (bse_plugin_dir_list_files): simply use
	        bse_search_path_list_files() to find plugin libraries.

	        * bseparam.c (param_note_validate): fix validation code to revert
	        to BSE_NOTE_VOID.

	        * bsemain.c (bse_init): record the current directory for spawning
	        child processes.

	        * bsemagictest.c (main): use bsw_register_plugins() to load plugins.

	        * bsecategories.c (category_strip_toplevels): added /Scripts/ toplevel
	        category.

	        * bsescripthelper.[hc]: implementation of script registration (currently
	        limited to scheme) and wrapper stubs to invoke script functions as
	        BseProcedure.

	        * bsecomwire.[hc]: implementation of communication stubs to spawn a
	        child and talk with it through pipes.
	        * bseprocedure.proc: implement utility procedures, mostly for scripts.

	        * bsehelloworld.proc: remove bse-progressor a left-over from test-cases
	        of an old procedure concept.

	        * bsestorage.c (bse_storage_parse_param_value): fix negating unsigned
	        ints bug in FLOAT or DOUBLE parsing.

	svn path=/trunk/; revision=455

2002-05-22  Tim Janik 	# 12b9547168227b6184681af4504af76952d643a6

	make sure values have a type of 0 when initializing them.

	Wed May 22 19:01:35 2002  Tim Janik  <timj@gtk.org>

	        * bsw/mkapi.c (print_proc): make sure values have a type of 0
	        when initializing them.

	svn path=/trunk/; revision=454

2002-05-22  Tim Janik 	# 18d4cec000da97ed9f4dd44d818166ae54171275

	updates

	svn path=/trunk/; revision=453

2002-05-22  Tim Janik 	# 06f15323b4080212a7730dbd5c6161e5cec62de4

	updates

	svn path=/trunk/; revision=452

2002-05-22  Tim Janik 	# b6cbab1e748031ea0a6455a7090be050a66346eb

	added a scheme based bswshell using libguile.

	Wed May 22 16:53:02 2002  Tim Janik  <timj@gtk.org>

	        * added a scheme based bswshell using libguile.

	        * bsw-shell/mkglue.c: generate glue code to call procedures
	        from scheme.

	        * bsw-shell/bswshell.c: bswshell main executable, starts a
	        read-eval-print-loop after initializing the BSW glue code.

	        * bsw-shell/bswscminterp.[hc]: scheme<->c glue code, includes
	        generated procedure wrappers from bswscm-genglue.c.

	        * bsw-shell/bswscmhandle.[hc]: storage handle, used by procedure
	        wrappers to marshal/demarshal procedure calls and their return
	        values to/from strings.

	        * bsw-shell/test.scm: simple test that loads a .bse file from
	        the ../test directory and starts playback.

	        * bsw/bswproxy.c (bsw_proxy_check_is_a): new function to check
	        proxies directly via a GType.

	        * bsw/mkapi.c: gor rid of bsw_value_initset_*() defines, those are
	        provided by bswglue.[hc] now.
	        (add_type_wrapper): provide BSW_TYPE_* wrappers
	        for enums, flags and boxed types (besides objects/proxies).
	        (type_wrapper_foreach): generate GType wrappers for the BSW_TYPE_*
	        macros.
	        (main): use bsw_register_plugins() to load plugins.

	        * bsw/bswglue.[hc]: new files, containing bsw_value_initset_*()
	        functions for quick value setup from generated glue code and
	        type name conversion functions.

	        * configure.in (AC_BSW_SHELL_REQUIREMENTS): check for libguile.

	        * beast-gtk/bstmain.c (main): use bsw_register_plugins() to load
	        plugins.

	        * docs/reference/bse-procs.dat: removed.
	        * docs/reference/bsw-procs.dat: added, basically a rename, but
	        we also use scheme names with bsw- prefix for the procedure names
	        now.

	svn path=/trunk/; revision=451

2002-05-22  Tim Janik 	# 94d610f18df9140d466b183ca5252d8c8fa7da2d

	use bsw_register_plugins() to load plugins and convert procedure names to

	Wed May 22 07:49:50 2002  Tim Janik  <timj@gtk.org>

	        * bsequery.c: use bsw_register_plugins() to load plugins and convert
	        procedure names to scheme names for --procdoc.

	        * bseplugin.[hc]: fix const for bse_plugin_check_load().

	        * bse.h: added missing files.

	        * bseprocedure.[hc]: added bse_procedure_eval() to call procedures from
	        strings, and bse_procedure_marshal_retval() and it's counterpart
	        bse_procedure_unmarshal_retval() to store/retrive procedure call returns
	        in/from strings.

	        * bsestorage.c (bse_storage_parse_param_value): allow pspec to be NULL.

	        * bswcommon.c (bsw_proxy_get_type): register value transform functions
	        for BswProxy <-> BseObject. added bsw_register_plugins() to reduce
	        duplication of this code. added function that should go into glib:
	        g_type_name_to_cname(), g_type_name_to_sname(), g_type_name_to_cupper(),
	        g_type_name_to_type_macro().

	svn path=/trunk/; revision=450

2002-05-21  Tim Janik 	# 1bb1a9ae75877dd7e8de07429ff915c3bbcc200c

	fix info updates, keep a use-count on the BseSource.

	Tue May 21 09:25:23 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c: fix info updates, keep a use-count
	        on the BseSource.

	        * beast-gtk/bstparam.c: (bst_param_entry_activate) don't activate
	        toplevel default. fix uloc and iterator usages.

	        * beast-gtk/bstplaylist.c:
	        * beast-gtk/bstpianoroll.c:
	        * beast-gtk/bstpartdialog.c: more iterator fixes.

	        * beast-gtk/*.c: fixes due to ::name -> ::uname change in BseObject,
	        iterator changes and procedure cleanups.

	        * test/*.bse: adoptions due to major storage format changes.

	Sat May 18 03:17:52 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsequence.[hc]:
	        * beast-gtk/bstparam.c: fixes due to BswNoteSequence.

	svn path=/trunk/; revision=449

2002-05-21  Tim Janik 	# 26db9690202ca3b2ac0f02ea9a9f428df2764ccb

	changes due to BswNoteSequence changes in BSE.

	Tue May 21 09:24:25 2002  Tim Janik  <timj@gtk.org>

	        * bsesequencer.[hc]: changes due to BswNoteSequence changes in BSE.

	svn path=/trunk/; revision=448

2002-05-21  Tim Janik 	# eed60c85672e3233882e7abbebc41b0f6437e26e

	" and uniqueness within children of a container. BseObject just has an

	Tue May 21 08:13:51 2002  Tim Janik  <timj@gtk.org>

	        * final object reference cleanup. get rid of ulocs, allow freeform
	        name for objects with the exception of ":" and uniqueness within
	        children of a container. BseObject just has an ::uname property
	        for this purpose now, and no ::name or ::uloc properties anymore.

	        * bseobject.[hc]: ::uloc/::name/::uname cleanup and changes. virtualize
	        property storage.

	        * bsecontainer.[hc]: store child references as strings with apropriate
	        prefix (bse-container-restore).
	        introduce retrieve_child() class function to resolve a (type,uname) pair
	        into an existing or a new child.
	        removed bse_container_item_from_handle(), bse_container_item_from_path()
	        and bse_container_make_item_path(). introduced:
	        bse_container_retrieve_child(): same purpose as the new class function.
	        bse_container_resolve_upath(): resolve a colon seperated list of unames,
	        by following the associated named objects (children).
	        bse_container_make_upath(): construct an upath for a (non-immediate)
	        child of a container.

	        * bseitem.[hc]: remove bse_item_make_handle() and
	        bse_item_make_uloc_path().

	        * bsecontainer.[hc]:
	        * bseitem.[hc]: remove unused PARENT_REF hack.

	        * bseproject.[hc]:
	        * bsewaverepo.[hc]: moved single-child-per-project hack into
	        bseproject.c and cleaned this up some.

	        * bsestorage.[hc]: disallow storing/parsing object values through
	        bse_storage_put_param()/bse_storage_parse_param_value().
	        introduced bse_storage_put_item_link() and bse_storage_parse_item_link()
	        for this purpose, where the latter takes a function for deferred
	        invocation to resolve object references after all have been created.
	        added bse_storage_input_text() and bse_storage_warn_skipc().

	        * bseitem.c: implement bse_item_store_property() and
	        bse_item_restore_property() to implement object properties via
	        BseStorage's _item_link functions.

	        * bsedatapocket.c: handle object links according to the new storage API.

	        * bse*.[hc], bse*.proc: various uname/upath/uloc fixes. changed
	        BseStorage uses to store/retrieve object references via
	        bse_storage_put_item_link() and bse_storage_parse_item_link().

	Sun May 19 23:57:10 2002  Tim Janik  <timj@gtk.org>

	        * bswcommon.[hc], bswprivate.h: reworked the iterators.
	        we now have BswIter as an abstract base, which introduces generic
	        iterator functions. there's no boxed iterator type, instead, each
	        boxed type that needs an iterator has to be implemented from scratch
	        (failry easy though). with that, we currently just need BswIterPartNote.

	        * bse*.[hc]: fixes due to iterator changes.

	Sat May 18 02:18:00 2002  Tim Janik  <timj@gtk.org>

	        * bswcommon.[hc]: renamed BseSequence to BswNoteSequence and moved it
	        into this file.

	        * bsesequence.[hc]: removed these files.

	        * bsestorage.[hc]: storage format fixups:
	        - valid boolean values: #t, #f, #T, #F
	        - store notes as strings
	        - store flags as lists
	        - store BswNoteSequence as list of notes

	        * bseparasite.[hc]:
	        * bsedatapocket.c: fix character storage, using #\c.

	        * bsestorage.[hc]: added bse_storage_parse_eval() to parse
	        procedures.

	        * bsemain.c: make sure the server is alive.

	svn path=/trunk/; revision=447

2002-05-17  Tim Janik 	# bb435db1f75e39acc8586427f6a565003087da2e

	updates

	svn path=/trunk/; revision=446

2002-05-17  Tim Janik 	# 9fd52e0d0edc699ea9abcb3b50a1b231d36d1fc6

	incorporate fixes from stefan.

	Fri May 17 20:56:39 2002  Tim Janik  <timj@gtk.org>

	        * gsl*.*: incorporate fixes from stefan.

	Thu May 16 23:15:33 2002  Tim Janik  <timj@gtk.org>

	        * bseserver.h: introduced ::script_status signal for GUI notification,
	        (not that we could currently execute scripts ;) this is currently used
	        to notify about procedure exit codes via BSE_SCRIPT_STATUS_PROC_END.

	        * bseprocedure.[hc]: procedure API and implementation cleanups.

	        * bsestorage.[hc]: some additions to store procedures.

	        * *.c: misc fixes due to procedure changes.

	svn path=/trunk/; revision=445

2002-05-16  Tim Janik 	# 8ee74d88632f46304013f89425d4ddcdf94415fa

	updates due to procedure changes in BSE.

	Thu May 16 23:17:54 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c:
	        * beast-gtk/bststatusbar.c:
	        * beast-gtk/bstprocedure.c: updates due to procedure changes in BSE.

	        * bsw/mkapi.c:
	        * bsw/bswproxy.[hc]: updates according to procedure cleanups in BSE.

	svn path=/trunk/; revision=444

2002-05-16  Tim Janik 	# ae64159a831b0a76034d23b748e85ca2e231fcd5

	introduced ::script_status signal for GUI notification, (not that we could

	Thu May 16 23:15:33 2002  Tim Janik  <timj@gtk.org>

	        * bseserver.h: introduced ::script_status signal for GUI notification,
	        (not that we could currently execute scripts ;) this is currently used
	        to notify about procedure exit codes via BSE_SCRIPT_STATUS_PROC_END.

	        * bseprocedure.[hc]: procedure API and implementation cleanups.

	        * *.c: misc fixes due to procedure changes.

	svn path=/trunk/; revision=443

2002-05-15  Tim Janik 	# 2493ed106d8666d9358168b3aaf45b2db9a3ee03

	clear playback mark. (bst_wave_editor_rebuild): resort to a single

	Wed May 15 08:46:53 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.c (play_back_wchunk_off): clear playback mark.
	        (bst_wave_editor_rebuild): resort to a single playback button with
	        different stcok children for start/stop playback.

	svn path=/trunk/; revision=442

2002-05-15  Tim Janik 	# 013ee2958b7721229ce55a7ce01c63dc5dc3c7e1

	commit missing file

	svn path=/trunk/; revision=441

2002-05-15  Tim Janik 	# 056f9b65333dc76841603faff0f7a17a6c6ffdbf

	popup BstWaveEditor instead of BstSampleEditor.

	Wed May 15 06:59:20 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveview.c (popup_wave_dialog): popup BstWaveEditor
	        instead of BstSampleEditor.

	        * beast-gtk/bstwaveeditor.[hc]: implement qsampler display, and sane
	        playback implementation. add zoom and vscale settings.

	        * beast-gtk/bstplayback.c (bst_play_back_handle_stop): auto-uninstall
	        pcm notify handler.
	        (bst_play_back_handle_pcm_notify): ignore pcm notify request when
	        not playing.

	        * beast-gtk/gtklistwrapper.[hc]: new Gtk object implementing a
	        GtkTreeModel for lists with cell value retrival via callbacks.

	        * beast-gtk/bstwaveeditor.c: use GtkListWrapper instead of GtkListStore.

	svn path=/trunk/; revision=440

2002-05-14  Tim Janik 	# 479647bd0b49e4792a126ea952432a4c6b0ea417

	fix typo.

	svn path=/trunk/; revision=439

2002-05-14  Tim Janik 	# f55d49eded1b6604b882c07ae8c0b577e674b8a1

	adjust filter menu.

	Tue May 14 21:12:06 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: adjust filter menu.

	        * test/*: fixups.

	        * doc updates.

	Tue May 14 21:36:51 2002  Tim Janik  <timj@gtk.org>

	        * bsesource.c: defer resolution of the input
	        channel until resolve_dinput() and provide a better error
	        message.

	        * documentation fixes.

	svn path=/trunk/; revision=438

2002-05-14  Tim Janik 	# 0c30f805fbf994c7f3bedc3d91ce1a1542b7fa72

	get rid of this, it's a misnamed and badly parameterized module.

	Tue May 14 21:05:49 2002  Tim Janik  <timj@gtk.org>

	        * bsecompressor.[hc]: get rid of this, it's a misnamed and badly
	        parameterized module.

	        * bseatandistort.[hc]: new module, offering the atan distortion
	        that could be achived with bsecompressor. this offers a saner linear
	        parameterization range and is a lot faster by using an equivalent
	        approximation of GSL.

	svn path=/trunk/; revision=437

2002-05-14  Tim Janik 	# 5c578813813a8f08a749562489d7d23bbd1db89b

	beefed-up version, using new modules.

	Tue May 14 04:39:43 2002  Tim Janik  <timj@gtk.org>

	        * test/simple-loop.bse: beefed-up version, using new modules.

	svn path=/trunk/; revision=436

2002-05-14  Tim Janik 	# 50c3b35ab78e4e0656f9359acc422ab749a1af52

	channel order fixup. same here.

	Tue May 14 04:17:08 2002  Tim Janik  <timj@gtk.org>

	        * bsestandardosc.c (bse_standard_osc_class_init): channel order fixup.
	        * bseamplifier.c (bse_amplifier_class_init): same here.

	svn path=/trunk/; revision=435

2002-05-14  Tim Janik 	# c46c7c254de66ef357cc65a36a5f20e13a5f14dd

	fix clipping bug i just introduced.

	Tue May 14 03:40:39 2002  Tim Janik  <timj@gtk.org>

	        * davxtalstrings.c (xmod_process): fix clipping bug i just introduced.

	svn path=/trunk/; revision=434

2002-05-14  Tim Janik 	# 2ae5aac440b46ad93cebfd6d3be54d69fa6d273b

	fix the biquad filter icon.

	Mon May 13 23:27:47 2002  Tim Janik  <timj@gtk.org>

	        * icons/biquad.c:
	        * bsebiquadfilter.c: fix the biquad filter icon.

	Mon May 13 23:06:49 2002  Tim Janik  <timj@gtk.org>

	        * gslmakefile.inc: added $(PERL) invocation fix from stefan.

	svn path=/trunk/; revision=433

2002-05-14  Tim Janik 	# bf32c58e43e8de6ae49e46925ec9716a40e23158

	some cleanups, provide sane trigger facility via input signal and

	Tue May 14 02:56:23 2002  Tim Janik  <timj@gtk.org>

	        * davxtalstrings.c: some cleanups, provide sane trigger facility
	        via input signal and frequency input. finally provide an icon for
	        this plugin.

	svn path=/trunk/; revision=432

2002-05-13  Tim Janik 	# b749310e04f92a9e777371cb5944645cc3f2854b

	minor update

	svn path=/trunk/; revision=431

2002-05-13  Tim Janik 	# 2d41f99885867fae1ba8ffc0e8a16e4e9c7886e3

	fix wrap texts by using GtkTextView.

	Sun May 12 07:00:38 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (bst_wrap_text_create): fix wrap texts by using
	        GtkTextView.

	        * test/midi-test.bse: fix connections.

	Mon May  6 13:01:07 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_tools): remove compat
	        code, offer BseAmplifier rather than the plugin BseMixer in the toolbar.

	svn path=/trunk/; revision=430

2002-05-13  Tim Janik 	# 77960d65a490ee2e9c2dc721d6693ca568bd8ea2

	reset the freverb filter when the module got reconnected.

	Mon May 13 22:17:17 2002  Tim Janik  <timj@gtk.org>

	        * freeverb/bsefreeverb.[hc] (free_verb_reconnect): reset
	        the freverb filter when the module got reconnected.

	        * bsesimpleresonancefilter.[hc]: disable this test module,
	        BSE's new biquad filter does things way better.

	        * *.c: fixes due to new GslClass layout.

	svn path=/trunk/; revision=429

2002-05-13  Tim Janik 	# 554d935505d354abca003812e849f0af64c4c510

	reserve space for process_defer() in GslClass and provide a reconnect()

	Mon May 13 22:07:36 2002  Tim Janik  <timj@gtk.org>

	        * gslengine.[hc], gslopmaster.c: reserve space for
	        process_defer() in GslClass and provide a reconnect()
	        class function, serving as notifier when a module got
	        reconnected. adapted related code portions.
	        added sub sampling argument to gsl_engine_init().

	        * bsestandardosc.c: boost up the range of modulatable
	        octaves to 5.

	        * gslfilter.[hc]: fix argument ordering of _eval()
	        functions. added lowpass and highpass biquad types.

	        * gslloader-wav.c: skip unknown sub-chunk rather than
	        aborting.

	        * gslsignal.[hc]: added implementation of
	        GslFrequencyModulator which can prerender a frequency
	        buffer out of various frequency modulation settings/inputs.

	        * bsebiquadfilter.[hc]: new filter implementation, supporting
	        biquad filter types and frequency and gain (modulation) input
	        signals.

	Sun May 12 20:48:34 2002  Tim Janik  <timj@gtk.org>

	        * bsepcmoutput.c (bse_pcm_output_context_connect): connect to
	        joint channels of the internal PCM output module.

	        * bsepcmmodule.c: use joint input channels for the internal PCM
	        output module.

	Fri May 10 17:46:01 2002  Tim Janik  <timj@gtk.org>

	        * gslsignal.h: provide gsl_approx_exp2() to approximate 2^x.
	        gsl_signal_exp2() is supposed to be deprecated.
	        gsl_approx_exp2() has slightly greater error within -0.5..0.5,
	        but is faster and covers a wider range.

	Fri May 10 17:41:11 2002  Tim Janik  <timj@gtk.org>

	        * gslieee754.h: make gsl_ftoi() operate on floats and provide
	        gsl_dtoi().

	Wed May  8 00:34:09 2002  Tim Janik  <timj@gtk.org>

	        * gslmath.h: accuracy fixes of constants, added more constants.

	Mon May  6 13:01:28 2002  Tim Janik  <timj@gtk.org>

	        * icons/instrument.xcf: use a speaker different from the
	        PcmOutput icon for sub instruments.

	svn path=/trunk/; revision=428

2002-05-05  Tim Janik 	# 46e401c11f8243d5572be3d3b88adb001ba6fc02

	don't invoke mkapi with -p as procedure wrapper generation doesn't work

	Sun May  5 20:57:28 2002  Tim Janik  <timj@gtk.org>

	        * bsw/Makefile.am ($(srcdir)/bswgenapi.c): don't invoke
	        mkapi with -p as procedure wrapper generation doesn't work
	        correctly for plugins on some platforms.

	Sun May  5 05:22:37 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_router_set_tool): clear the status line
	        when the router tool is reset by the user.

	svn path=/trunk/; revision=427

2002-05-05  Tim Janik 	# af6a9d7b7d3ab65000c48dc8499189a58f04006c

	moved this here from ../plugins/ because it introduces procedures and

	Sun May  5 20:31:57 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.[hcp]*: moved this here from ../plugins/ because
	        it introduces procedures and otehr core components rely on it.

	Sun May  5 08:07:39 2002  Tim Janik  <timj@gtk.org>

	        * bsemidievent.[hc]: provide initialization values other than 0
	        for pitch_bend, voume and balance on all MIDI channels.
	        allocate the channel controls with the decoder.

	Sun May  5 06:18:17 2002  Tim Janik  <timj@gtk.org>

	        * bseamplifier.[hc], bseamplifier-aux.c: new amplifier module, BSE's
	        VCA equivalent.

	        * gslincluder.c: add facility to reject certain cases with GSL_INCLUDER_REJECT().

	        * gslsignal.[hc]: add approximation functions for atan1(), and all
	        four quadrants of a circle.

	svn path=/trunk/; revision=426

2002-05-05  Tim Janik 	# cf1a228249779073ebce2575190a1e55d90698b5

	move this into BSE as it's an fundamental component and introduces

	Sun May  5 20:31:16 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.[hc]: move this into BSE as it's an fundamental
	        component and introduces procedures.

	svn path=/trunk/; revision=425

2002-04-25  Tim Janik 	# ee724fb68f1d22a7d5866363ed9daaceb25e6246

	improve info text.

	Wed Apr 24 06:16:56 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (csource_info_update):
	        * beast-gtk/bstcanvaslink.c (clink_view_update): improve info text.

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_event): implement status
	        idle-hint for i/o channels.

	        * beast-gtk/bststatusbar.[hc]: status bar rewrite. removed old code,
	        introduced BST_STATUS_PROGRESS and BST_STATUS_IDLE_HINT.

	        * test/*: updates to changes in BSE.

	svn path=/trunk/; revision=424

2002-04-25  Tim Janik 	# 230b4dceff9021b146729a7eecdf79544b760df7

	before invoking the ->reset() method, wait_on_trans()-action completions

	Wed Apr 24 08:13:26 2002  Tim Janik  <timj@gtk.org>

	        * bsesource.c (bse_source_reset): before invoking the ->reset() method,
	        wait_on_trans()-action completions unconidionally.

	        * bseproject.c (bse_project_stop_playback): eeek, forgot to
	        wait_on_trans() after dismissing contexts, before calling
	        bse_source_reset().

	        * gsldatahandle.[hc]: for consistency, change:
	        s/gsl_data_handle_new_reversed/gsl_data_handle_new_reverse/.

	        * gsldatahandle.c (gsl_data_handle_new_dcached): make use of
	        the padding around a node's value block.

	        * gslopmaster.[hc]:
	        * gslengine.[hc], gslopnode.h:
	        * gslopschedule.[hc]:
	        * gsloputil.[hc]:
	        major namespace cleanup.

	svn path=/trunk/; revision=423

2002-04-21  Tim Janik 	# 620c65685aef9270c04298fc5a089aee7263381f

	minor updates.

	svn path=/trunk/; revision=422

2002-04-21  Tim Janik 	# 700bb26c41c85c9d27b3007669929bd05308523f

	change fine-tune to match GSL fine-tune cent table.

	Sun Apr 21 21:10:17 2002  Tim Janik  <timj@gtk.org>

	        * bseglobals.[hc]: change fine-tune to match GSL fine-tune
	        cent table.

	        * bsesource.[hc]: complete joint channel implementation.

	        * bsestandardosc.[hc]: add fine-tune property, allowing
	        for slight detunes of multiple oscillators.

	        * gslopnode.h:
	        * gsloputil.c:
	        * gslopschedule.c:
	        * gslopmaster.[hc]:
	        * gslengine.[hc]: complete joint channel implementation.
	        NULL terminate the jstream gfloat**values; pointer array.

	        * gsloscillator.h:
	        * gsloscillator-aux.c: implement oscillator fine-tune.
	        * gsloscillator.c: fix sync-update clicks.

	        * gslsignal.[hc]: implement semitone cent fine-tune factor
	        table, available as gsl_cent_factor().

	svn path=/trunk/; revision=421

2002-04-21  Tim Janik 	# 2d6de965b192afd3396a3e518df03e0d61efcfa0

	implement input channels as jstreams.

	Sun Apr 21 21:18:21 2002  Tim Janik  <timj@gtk.org>

	        * bseadder.[hc]: implement input channels as jstreams.

	        * bsemixer.[hc]: slight cleanups.

	svn path=/trunk/; revision=420

2002-04-16  Tim Janik 	# 0b19fa40747b9493f47289ce975408f94a101872

	simple echo example.

	Tue Apr 16 13:00:43 2002  Tim Janik  <timj@gtk.org>

	        * test/simple-echo.bse: simple echo example.

	        * beast-gtk/bstradiotools.c: use category name + leaf index
	        for tool names.

	        * beast-gtk/bstsnetrouter.[hc]: provide a popup menu to select
	        modules to insert from.

	        * test/midi-test.bse: fixes due to BSE changes.

	svn path=/trunk/; revision=419

2002-04-16  Tim Janik 	# 4cf69f4ff5c2915cf6e35c3350c36ac24b748836

	remove this module from plugins.

	Tue Apr 16 08:24:53 2002  Tim Janik  <timj@gtk.org>

	        * bsesnooper.[hc]: remove this module from plugins.

	        * *.c: category fixes.

	svn path=/trunk/; revision=418

2002-04-16  Tim Janik 	# 5c7740d85334e4d6b839c3dcc2a64576e685fab2

	move this module from plugins to BSE.

	Tue Apr 16 12:51:17 2002  Tim Janik  <timj@gtk.org>

	        * bsesnooper.[hc]: move this module from plugins to BSE.

	        * bsesubiport.[hc]: virtual sub network input ports.

	        * bsesubiport.[hc]: virtual sub network output ports.

	        * bsesubkeyboard.[hc]: convenience virual input for instruments.

	        * bseinport.[hc], bseoutport.[hc], bsemidikeyboard.[hc]:
	        scratch these, they are replaced by the new modules now.

	        * bsesubinstrument.[hc]: convenience virual output for instruments.

	        * bsecategories.[hc]: provide leaf index of category names.

	        * bsesnet.[hc]: provide functions to test for registered port names
	        and provide notification when port names got unregistered.

	        * bsesource.c:
	        (bse_source_set_context_imodule):
	        (bse_source_set_context_omodule):
	        (bse_source_set_context_module):
	        be laxer about module IO checks, only demand the
	        GSL module has at least as many input/output channels as the
	        BseSource.

	        * bsestandardsynths.c: use the new modules.

	        * *.c: category fixes.

	svn path=/trunk/; revision=417

2002-04-16  Tim Janik 	# 74968acb01708cece496db925321b0d2f93ee9ef

	added GDebugKey structure definition.

	Tue Apr 16 05:48:48 2002  Tim Janik  <timj@gtk.org>

	        * gslglib.h: added GDebugKey structure definition.

	svn path=/trunk/; revision=416

2002-04-15  Tim Janik 	# d7d180db3c9a08a780347eecaefdebc1370a1c90

	fix standard oscillator.

	Mon Apr 15 14:48:37 2002  Tim Janik  <timj@gtk.org>

	        * test/midi-test.bse: fix standard oscillator.

	Mon Apr 15 14:43:18 2002  Tim Janik  <timj@gtk.org>

	        * bsestandardosc.h (enum): get rid of BSE_STANDARD_OSC_NONE.

	svn path=/trunk/; revision=415

2002-04-15  Tim Janik 	# d1a7e8d75fad97da711175a5ba97ec6bacb9778c

	minor fixups

	svn path=/trunk/; revision=414

2002-04-15  Tim Janik 	# 920deab01cad8675c0bda82e784077973ada474e

	create anti-aliased filter tables for the following wave forms: sine,

	Mon Apr 15 09:43:15 2002  Tim Janik  <timj@gtk.org>

	        * gslosctable.[hc]: create anti-aliased filter tables for the
	        following wave forms: sine, triangle, saw, peak, moog saw and
	        square/pulse variants.

	        * gsloscillator.[hc], gsloscillator-aux.c: new oscillator code,
	        supporting sync out and various inputs: freq, freq modulation,
	        sync and pulse width modulation. the wave to use for oscillation
	        is supplied via a GslOscTable.

	        * gslincluder.c: helper file for sources that need to comile
	        various forms of the same function.

	        * gslcommon.[hc]: supply debug keys for the debug options.

	        * gslieee754.h: mark gsl_ftoi() GNUC_CONST.

	        * gslsignal.h: mark gsl_signal_exp2() GNUC_CONST.

	        * gbsearcharray.h: minor naming fix.

	        * bsemidiicontroller.[hc]: provide midi control inputs.

	        * bseconstant.c: allow logarithmic scaling of the input values
	        as frequencies.

	        * bseenums.h: provide BseMidiControlType enum.

	        * bsemain.c: use GSL supplied debug keys.

	        * bsemidimodule.c: fix BSE_MIDI_SIGNAL_PITCH_BEND setting, so we put out
	        values between -1 and +1 for this.

	        * bsestandardosc.[hc]: use new GSL oscillator code for this (and
	        support all its bells and whistles).

	Fri Apr 12 04:45:04 2002  Tim Janik  <timj@gtk.org>

	        * gsl-fftconf.sh (gsl_power2_fftc_big): fix a missing NULL check to skip
	        first fft stage on input values.
	        (gsl_power2_fftsr): invoke gsl_power2_fftc_big() with n_cvalues instead
	        of n_values like we do for all other ffts as well.

	svn path=/trunk/; revision=413

2002-04-15  Tim Janik 	# db7556ac26c704d9e030fceee77b614382c7d9a0

	shutup

	svn path=/trunk/; revision=412

2002-04-15  Tim Janik 	# edf456682211430cfa09d3a124b5e29b595a2c47

	create anti-aliased filter tables for the following wave forms: sine,

	Mon Apr 15 09:43:15 2002  Tim Janik  <timj@gtk.org>

	        * gslosctable.[hc]: create anti-aliased filter tables for the
	        following wave forms: sine, triangle, saw, peak, moog saw and
	        square/pulse variants.

	        * gsloscillator.[hc], gsloscillator-aux.c: new oscillator code,
	        supporting sync out and various inputs: freq, freq modulation,
	        sync and pulse width modulation. the wave to use for oscillation
	        is supplied via a GslOscTable.

	        * gslincluder.c: helper file for sources that need to comile
	        various forms of the same function.

	        * bsemidiicontroller.[hc]: provide midi control inputs.

	        * bseconstant.c: allow logarithmic scaling of the input values
	        as frequencies.

	        * bseenums.h: provide BseMidiControlType enum.

	        * bsemain.c: use GSL supplied debug keys.

	svn path=/trunk/; revision=411

2002-04-09  Tim Janik 	# d218ec7248ee70e2c3f9ba020141b380aeabeed9

	minor fixes.

	svn path=/trunk/; revision=410

2002-04-09  Tim Janik 	# b365b4c290b97b29ac19b3e786f7b29ac36ec191

	updates

	svn path=/trunk/; revision=409

2002-04-09  Tim Janik 	# b4d8e955cdb2d300b044b20a61400b016bdc8a8b

	updates

	svn path=/trunk/; revision=408

2002-04-09  Tim Janik 	# dfde0b7f0f5f094114335de66acefb84f7e7bc4f

	fixup C++ related macros.

	Tue Apr  9 03:13:03 2002  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: fixup C++ related macros.

	        * test/simple-loop.bse: test the free verb modules.

	svn path=/trunk/; revision=407

2002-04-09  Tim Janik 	# 57cf61320deb1b22501ca2de57872dbd5821dd82

	implemented BseFreeVerb module, a wrapper around the public domain

	Tue Apr  9 03:03:53 2002  Tim Janik  <timj@gtk.org>

	        * implemented BseFreeVerb module, a wrapper around the public domain
	        FreeVerb code by Jeremy "Jezar" Wakefield.

	        * freeverb/comb.hpp, comb.cpp:
	        * freeverb/denormals.h, tuning.h:
	        * freeverb/revmodel.hpp, revmodel.cpp:
	        * freeverb/allpass.hpp, freeverb/allpass.cpp:
	        Freeverb - SOURCE CODE in the public domain, written by Jezar
	        at Dreampoint - http://www.dreampoint.co.uk.

	        * freeverb/bsefreeverb.[hc]:
	        * freeverb/bsefreeverbcpp.h freeverb/bsefreeverbcpp.cpp:
	        BseFreeVerb module implementation and C++ wrapper code.

	svn path=/trunk/; revision=406

2002-04-08  Tim Janik 	# 87ff23b108bb0a7a5d23c20a6d7eca1e717df565

	define if_expect() and if_reject() if GSL_EXTENSIONS is defined, to make

	Mon Apr  8 14:04:30 2002  Tim Janik  <timj@gtk.org>

	        * gsldefs.h: define if_expect() and if_reject() if GSL_EXTENSIONS
	        is defined, to make these usable in third-party code.

	        * gslsignal.[hc]: added windowing functions to implement the
	        windows: blackman, cos, bartlett, hamming, sinc and rectangle.

	svn path=/trunk/; revision=405

2002-04-08  Tim Janik 	# 379b472c0f91b3e76309f3d9c7ec229a7e53d4d3

	ported DavOrgan to the engine, so we have our organ back.

	Mon Apr  8 22:19:42 2002  Tim Janik  <timj@gtk.org>

	        * davorgan.[hc]: ported DavOrgan to the engine, so we have our
	        organ back.

	svn path=/trunk/; revision=404

2002-04-05  Tim Janik 	# f0355cea6ab0d8a8b6a2689b0e967f0a147491b6

	compat fixes

	svn path=/trunk/; revision=403

2002-04-05  Tim Janik 	# 8acd4081bfb902fda30ce6532f391d6f3e672f8d

	fix istream count.

	Fri Apr  5 09:15:18 2002  Tim Janik  <timj@gtk.org>

	        * bsegenosc.[hc]: fix istream count.

	svn path=/trunk/; revision=402

2002-04-05  Tim Janik 	# 547c1ce4da329bae72556d8252edfe936d254278

	updates

	svn path=/trunk/; revision=401

2002-04-05  Tim Janik 	# edf37401f9dee6eb7fd7dcde1ce41da1b4841ded

	updates

	svn path=/trunk/; revision=400

2002-04-05  Tim Janik 	# 825402b59b4e466723b2a3068fe063e5a1243430

	disable file contents if !GSL_HAVE_LIBMAD.

	Fri Apr  5 07:42:16 2002  Tim Janik  <timj@gtk.org>

	        * gsldatahandle-mad.c: disable file contents if !GSL_HAVE_LIBMAD.

	        * gslloader-mad.c (_gsl_init_loader_mad): don't register the MAD MPEG
	        loader if !GSL_HAVE_LIBMAD.

	svn path=/trunk/; revision=399

2002-04-05  Tim Janik 	# 0e3594878402ad522fcf148fafedaca28a437501

	*** empty log message ***

	svn path=/trunk/; revision=398

2002-04-05  Tim Janik 	# 8c00d0b28f0e9fbdc454bffe8433964ed07dcc76

	*** empty log message ***

	svn path=/trunk/; revision=397

2002-04-05  Tim Janik 	# b0319d89d2dd617aa303bac079670fd8beb94301

	*** empty log message ***

	svn path=/trunk/; revision=396

2002-04-05  Tim Janik 	# f4c61e891839da2b2ad58270090bbf6181b48df0

	use bse_item_uncross() to remove the cross reference to an old wave,

	Sun Mar 31 19:47:57 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.c (bse_wave_osc_set_property): use bse_item_uncross() to
	        remove the cross reference to an old wave, because we want the
	        notifier to be executed.

	Sat Mar 30 05:54:04 2002  Tim Janik  <timj@gtk.org>

	        * bsesimpleosc.[hc]: remove this, replaced by a standard oscillator
	        in BSE.

	        * fldbsepattern.c: adapt this code to removal of old definitions,
	        will be deprecated anyways.

	        * bse_wave_osc_class_init: provide proxy marshaller for signal.

	        * *.c: remove old unused includes.

	svn path=/trunk/; revision=395

2002-04-05  Tim Janik 	# 6cde710eb4633a86330f4391c8e7c887da225875

	libmad based mp3 datahandle implementation.

	Fri Apr  5 06:45:29 2002  Tim Janik  <timj@gtk.org>

		* gsldatahandle-mad.[hc]: libmad based mp3 datahandle implementation.

		* gslloader-mad.c: gsldatahandle-mad.[hc] based mp3 loader.

		* gslcommon.[hc]: introduce new debugging mechanism and rework
		GSL messages.

		* gslop*.[hc], gslengine.[hc]: fixup old debugging code.

		* gsldatautils.[hc]: new function gsl_data_find_block().

		* bsesnet.[hc], bsesnet.proc:
		got rid of BSE_SNET_FLAG_FINAL. introduced BSE_SNET_FLAG_USER_SYNTH
		to indicate user editable synthesis networks.
		disallow procedures to modify a synthesis network unless
		BSE_SNET_FLAG_USER_SYNTH or BSE_DVL_EXT are set.

	Thu Apr  4 23:02:54 2002  Tim Janik  <timj@gtk.org>

		* bseinport.[hc], bseoutport.[hc]:
		* bsesubsynth.[hc], bsemidikeyboard.[hc]: use the new BseSNet port API.

		* bsemain.c (bse_init): initialize random numbers properly.

		* bsemidievent.c: add debugging for note on/off events.

		* bsesnet.[hc]: rewrote port handling, changed API.
		provide bse_snet_create_context() to create contexts with an ID provided
		by the snet. added simple ID allocation algorithm to reuse freed IDs.

		* bsesongthread.c: some cleanups.

		* bsesource.[hcp]*: allow only one i/o module for all i/o channels now.
		add more jstream support (still not complete though).
		API cleanups and simplifications.
		redid context management code so context IDs are freely assignable by
		synthesis networks.
		(bse_source_set_context_omodule): allow resetting the module to NULL.
		(bse_source_set_context_imodule): allow resetting the module to NULL.

		* bseinport.c:
		* bseoutport.c:
		* bsesubsynth.c: fix port name changes during playback.

		* gbsearcharray.h: new file from/for GLib with binary searchable array
		implementation.

	Sun Mar 31 19:44:44 2002  Tim Janik  <timj@gtk.org>

		* bseitem.c (bse_item_uncross): new function to remove a cross reference
		by invoking the cross notifier.

	Sat Mar 30 05:57:45 2002  Tim Janik  <timj@gtk.org>

		* bsepart.[hc], bsepart.proc: new song related object which stores a
		list of notes to play.

		* bsestandardosc.[hc]: moved and renamed plugins/bsesimpleosc.[hc]
		to BseStandardOsc since BSE needs a default oscillator.

		* bsestandardsynths.[hc]: new file, adding functions that construct
		standard synthesis components for songs.

		* bsesong.proc: provide procedures to create/delete child components.

		* bseglobals.[hc], bsegconfig.[hc]: remove outdated definitions.

		* bseinstrument.[hc]: some cleanups. provide synthesis networks
		for song to play.

		* bseitem.proc: added procedure to retrive an item's sequential ID.

		* bsemain.c: define _XOPEN_SOURCE 600 only if
		GSL_HAVE_MUTEXATTR_SETTYPE is > 0, since this seems to break random
		stuff on some systems.

		* bsepattern.c: remove old defines, soon to be deprecated.

		* bseserver.proc: fix loader lookup, provide procedures to
		examine notes.

		* bsesong.[hc]: add support for BsePart.

		* bsesongthread.[hc]: start supporting BsePart.

		* bseutils.c: some cleanups.

		* bswcommon.[hc]: added uspport for iterators over boxed types.
		added boxed types BswPartNote and BswNoteDescription.

		* gslcommon.c: made gsl_alloc_report() more elaborate.
		(gsl_thread_new): do _not_ create joinable threads.
		initialize _gsl_init_loader_mad().

		* gslloader.[hc]: changed GslLoader, so we support lists of
		file extensions, file magics and mime types.

		* gslloader-wav.c:
		* gslloader-oggvorbis.c:
		* gslloader-gslwave.c: prefix function names with loader
		name. adapt code to GslLoader changes.

		* gslloader-wav.c: add "audio/wav" mime type, fix file magic to
		demand PCM format.

		* gslmagic.[hc]:
		(magic_parse_test): off-by-one error in string tests.
		(magic_parse_type): fix *short data size. disable "size" type. fix
		errors for mask handling.
		(magic_create): improve warnings.
		(magic_read_data): fix *short byte swapping.

		* bsemagictest.c: some minor improvements.

	Tue Mar 26 12:22:12 2002  Tim Janik  <timj@gtk.org>

		* removed unneeded files: bsechunk.[hc], bsehunkmixer.[hc],
		bsebuffermixer.[hc] and bsecapture.[hc].

		* bseobject.[hc]:
		(bse_object_class_add_signal):
		(bse_proxy_marshaller_lookup): mandate specification of a BswProxy
		marshaller besides the normal marshaller when introducing signals.
		provide lookup facility to retrive the proxy marshaller of a signal.

		* *.c: changed class_init() function which introduce signals to provide
		a proxy marshaller.

	svn path=/trunk/; revision=394

2002-03-21  Tim Janik 	# bec372a9ab389012a3ef03fc3220c825e61a0d13

	shutup

	svn path=/trunk/; revision=393

2002-03-21  Tim Janik 	# 4248fc5230e10308013b21f27c68c994abfd08c9

	shutup

	svn path=/trunk/; revision=392

2002-03-21  Tim Janik 	# e08d3b9845aa111978040f8a68678ff6f5747f22

	get rid of this.

	svn path=/trunk/; revision=391

2002-03-21  Tim Janik 	# caf4ecdd6cbe436aaca0615438df15d854623c1a

	beginning of a piano roll editing widget.

	Thu Mar 21 18:40:12 2002  Tim Janik  <timj@gtk.org>

	        * bstpianoroll.[hc]: beginning of a piano roll editing widget.

	        * bstasciipixbuf.[hc]: provide us with scaled character pixbufs.

	svn path=/trunk/; revision=390

2002-03-21  Tim Janik 	# 14fbcf3ae637c485267f3affe83304d34912dded

	*** empty log message ***

	svn path=/trunk/; revision=389

2002-03-21  Tim Janik 	# c06a7e6848a0e7db20aa9cd8bf8de047923055a7

	added BST_STOCK_* defines for stock icons and actions. added new icons.

	Wed Mar 13 18:19:44 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: added BST_STOCK_* defines for stock icons and
	        actions. added new icons. added convenience functions to create GtkImages
	        from BswIcon and stock icons. added BST_SIZE_* icon sizes and enforced
	        their use in the API. cleaned up unused utility functions. got rid of
	        GnomeForest based functions. added gdk_pixbuf_create_bitmap_data(), this
	        should really be in Gdk.

	        * beast-gtk/bstwaveeditor.[hc]: cleaned up cruft.

	        * beast-gtk/bstwaveview.c: use new icons, fix sample editor title handling.

	        * beast-gtk/icons/: added new icons. autogenerate C sources with
	        gdk-pixbuf-csource. removed old/uneeded files.

	        * beast-gtk/bstknob.c: retrive pixbuf via stock.

	        * beast-gtk/bstmenus.[hc]: rewrote item factory handling for saner API.

	        * beast-gtk/bstpatterndialog.[hc]: cleaned up cruft, use new menu API.

	        * beast-gtk/bstqsampler.c: slight fix to pcm position indicator.

	        * beast-gtk/bstsampleeditor.[hc]: cleaned up cruft.

	        * beast-gtk/bstradiotools.[hc]: support stock icons now.

	        * beast-gtk/bstsnetrouter.c:
	        * beast-gtk/bstprocedure.c:
	        * beast-gtk/bstpreferences.c:
	        * beast-gtk/bstplaylist.c:
	        * beast-gtk/bstpatternview.c:
	        * beast-gtk/bstmenus.[hc]:
	        * beast-gtk/bstitemview.[hc]:
	        * beast-gtk/bstfiledialog.c: fixup forest/icon/image handling and stock
	        actions.

	        * beast-gtk/bstdialog.[hc]: provide ability to sync the title with
	        a BswProxy object. fixup stock actions and icon handling.

	        * beast-gtk/bstpatterneditor.c: quick hack to sync BstDialog title of
	        parent window.

	        * beast-gtk/bstcanvassource.c: fix icon handling.

	        * beast-gtk/bstapp.c: fix menus, title setting and revert preferences
	        when reshown.

	        * beast-gtk/: remove gnomeforest.[hc]

	Tue Mar 12 10:35:30 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: nuke recently added BST_HAVE_BIRNET macro. we use
	        a command line argument now. added libmad checks to support MPEG
	        decoding.

	        * beast-gtk/bstdefs.h (BST_DVL_EXT):
	        * beast-gtk/bstmain.c (bst_parse_args): support comand line arg
	        --beast-developer-extensions to enable extra dialogs features which
	        are only usefull for developers (and may decrease stability for
	        incorrect usage).

	        * beast-gtk/bstplayback.c (bst_play_back_handle_new): show an
	        application dialog for the playback project only if BST_DVL_EXT is
	        TRUE.

	        * beast-gtk/bstwavereposhell.c (bst_wave_repo_shell_rebuild): put the
	        wave list on the first notebook page.

	Sun Mar 10 10:19:04 2002  Tim Janik  <timj@gtk.org>

	        * LOTS of GUI fixes.

	svn path=/trunk/; revision=388

2002-03-21  Tim Janik 	# e638184e93dd8fe8d6f22abe8373fb341f0ed602

	remove "no icon" icons from modules which don't have an icon.

	Wed Mar 13 18:17:46 2002  Tim Janik  <timj@gtk.org>

	        * remove "no icon" icons from modules which don't have an icon.

	        * icons/noicon.c:
	        * icons/noicon.xcf: remove these.

	svn path=/trunk/; revision=387

2002-03-21  Tim Janik 	# 0c39260369cf3514b65ecf4f35bd812578514dae

	sort things out, document interfacing, generate gslconfig.h from

	Thu Mar 21 08:36:55 2002  Tim Janik  <timj@gtk.org>

	        * gslmakefile.inc: sort things out, document interfacing, generate
	        gslconfig.h from configure.in checks. provide install hook for GSL
	        headers.

	        * Makefile.am: adapt to changes in gslmakefile.inc.
	        install gsl headers correctly.

	        * bsemain.c: define _XOPEN_SOURCE to 600 to make use of Unix98
	        pthread API. provide a pthread function vtable for GSL upon
	        GSL init if we have pthread available.

	        * gslcommon.[hc]: together with stefan, fix alignment problems in the
	        memblock caching allocator which lead to segfaults on solaris.

	        * gslcommon.[hc]: slim down the implementations for mutexes, recursive
	        mutexes and conditions. allow pluggable thread function table for these
	        constructs which allow direct use of pthread functions if they are
	        available. fixed up condition initialization and timed wait
	        implementation.

	        * gsldatacache.c: fix GslCond usage.

	        * gslglib.c:
	        * gsldefs.h: cleanups, use gslconfig.h values.

	        * gslengine.h, gslopmaster.c: fix assignment of const structure fields.

	        * gsloputil.c: together with stefan, fix and majorly improve the
	        constant value block cache algorithm. fix GslCond usage.

	Sun Mar 10 10:08:32 2002  Tim Janik  <timj@gtk.org>

	        * bseeditablesample.[hc], bseeditablesample.proc: new object
	        exporting the necesary interface to edit samples, i.e.
	        GslWaveChunks. (or at least, it'll soon gain interface additions
	        towards this end).

	        * bseitem.[hc]: export bse_item_use() for non-item procedures.

	        * bseplugin.[hc]: fix type registration order, so newly introduced
	        procedures can use newly introduced objects.

	        * bseserver.proc: supply a procuder to check for loader matches.

	        * bsewave.proc: added procedure to retrive a BseEditableSample.

	        * bswcommon.[hc]: made BseIcon into a BswIcon structure, so this
	        can be shared and exported through the wrapper code.
	        introduced BswValueBlock, which is basically a ref-counted array
	        of floats.

	        * gsldatacache.[hc]: support checking for presence of nodes without
	        affecting the number of queued nodes (schrooedingers katze ;)
	        fix dhandle naming.

	        * fix BseIcon vs. BswIcon.

	svn path=/trunk/; revision=386

2002-03-10  Tim Janik 	# c3669f262fcf88cc65c85c452f069d7e9fc07568

	LOTS of GUI fixes.

	Sun Mar 10 10:19:04 2002  Tim Janik  <timj@gtk.org>

		* LOTS of GUI fixes.

		* bstdialog.[hc]: rewrite of the BstADialog from bstutils.[hc]
		with cleaner interface and stock support. integrate better
		with status bars.

		* bststatusbar.[hc]: rely on BstDialog.

		* bstutils.[hc]: removed BstAdialog.

		* bstsampleeditor.[hc]: new widget, currently replacing
		bstwaveeditor.[hc], at some later point this needs to be integrated
		into BstWaveEditor.

		* bstdraggroup.c bstplaylist.c: fixed assignment in assertion,
		GLib finally allowes the compiler to catch this.

		* bstfiledialog.[hc]: changes to fit in with BstDialog. it's
		a pitty that GtkFileSelection has its own toplevel window.

		* bstitemview.c: stupid NULL pointer fix.

		* bstmain.c: fix release-notes popup. support loading ordinary
		samples from the commandline. cleanups.

		* bstmenus.c: dialog fixes.

		* bstparam.c: grow our hsliders.

		* bstparamview.c: fix scrolled window stupidness.

		* bstpatterndialog.c: use new saner procedure interface.

		* bstplayback.[hc]: use BseEditableSample for playback.
		support pcm_position changed notification from BseWaveOsc.
		cleaned up some hacks.

		* bstprocedure.[hc]: rewrite the dialog parts in terms of BstDialog.
		improved API for the common usage case a lot.

		* bstqsampler.[hc]: pretty much rewrote this widget, it's *way*
		faster now and can actually be used to scroll through pcm data
		during playback in realtime for certain zoom sizes.

		* bststest.c: broke this for the moment due to BstQSampler changes.

		* bstutils.[hc]: added gtk_toplevel_delete() to synthesize a
		delete event on a window. added bst_widget_request_aux_info()
		to help with scrolled window not honouring child's requisition.

		* bstwaveeditor.[hc]: currently disabled.

		* changed all BstAdialog users.

	Tue Mar  5 11:03:38 2002  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): improve
		feedback on already connected input/output channels.

	svn path=/trunk/; revision=385

2002-03-10  Tim Janik 	# 6453a416ad79a6fbf34a06825d3bd5c3a942213b

	new object exporting the necesary interface to edit samples, i.e.

	Sun Mar 10 10:08:32 2002  Tim Janik  <timj@gtk.org>

	        * bseeditablesample.[hc], bseeditablesample.proc: new object
	        exporting the necesary interface to edit samples, i.e.
	        GslWaveChunks. (or at least, it'll soon gain interface additions
	        towards this end).

	        * bseitem.[hc]: export bse_item_use() for non-item procedures.

	        * bseplugin.[hc]: fix type registration order, so newly introduced
	        procedures can use newly introduced objects.

	        * bseserver.proc: supply a procuder to check for loader matches.

	        * bsewave.proc: added procedure to retrive a BseEditableSample.

	        * bswcommon.[hc]: made BseIcon into a BswIcon structure, so this
	        can be shared and exported through the wrapper code.
	        introduced BswValueBlock, which is basically a ref-counted array
	        of floats.

	        * gsldatacache.[hc]: support checking for presence of nodes without
	        affecting the number of queued nodes (schrooedingers katze ;)
	        fix dhandle naming.

	        * fix BseIcon vs. BswIcon.

	svn path=/trunk/; revision=384

2002-03-10  Tim Janik 	# 5e7a178bcf8a9d7a8c7be9732bb2386d21b1fe5c

	fix BswIcon usage due to changes in BSW/BSE.

	Sun Mar 10 10:05:41 2002  Tim Janik  <timj@gtk.org>

	        * fix BswIcon usage due to changes in BSW/BSE.

	        * bsewaveosc.[ch]: support BseEditableSample. export procedure
	        and signal to notify about current PCM playing position on request.

	svn path=/trunk/; revision=383

2002-03-03  Tim Janik 	# 43b177b87794920faeb879070d9cdcf91e8dc9a4

	check the API docu .dat in for the BEAST WEB site

	svn path=/trunk/; revision=382

2002-03-03  Tim Janik 	# 8730ec86915f669eb610a77b98f16b562bdfb212

	fix font type.

	Sat Mar  2 13:24:27 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: fix font type.

	        * beast-gtk/bstitemview.c: optimize clist updates, so we
	        don't change rows if the string contents didn't actually
	        change.

	Thu Feb 14 13:46:26 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.[hc]: GType fixes.

	        * beast-gtk/*.h: fix G_TYPE_INSTANCE_GET_CLASS() macro usages.

	svn path=/trunk/; revision=381

2002-03-03  Tim Janik 	# a70f55250403c18aec190c65a74c160868f67649

	comment out code that checks input/output file stamps and aborts if the

	Sun Mar  3 04:45:13 2002  Tim Janik  <timj@gtk.org>

	        * docs/tags2doc.pl: comment out code that checks input/output
	        file stamps and aborts if the output file is newer.

	svn path=/trunk/; revision=380

2002-03-03  Tim Janik 	# 9c9732d6f7d3531f7a07ee372f0a70c00b04b579

	new subdir holding generated faq, release notes and GSL master plan.

	Sun Mar  3 04:39:09 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/: new subdir holding generated faq, release notes
	        and GSL master plan.

	        * docs/Makefile.am: updates since we moved files and did overall
	        doc file shuffling.

	svn path=/trunk/; revision=379

2002-03-03  Tim Janik 	# 4065f6a0460a3e2af954b7f1a468c16546c3e82b

	new subdir holding generated faq, release notes and GSL master plan.

	Sun Mar  3 04:39:09 2002  Tim Janik  <timj@gtk.org>

	        * docs/generated/: new subdir holding generated faq, release notes
	        and GSL master plan.

	svn path=/trunk/; revision=378

2002-03-03  Tim Janik 	# 16fa058e05d0712e79cf100cec4e52411c231013

	applied doc generation patch from alper with some shuffling on my part to

	Sat Mar  2 14:01:37 2002  Tim Janik  <timj@gtk.org>

	        * applied doc generation patch from alper with some
	        shuffling on my part to keep the directory structure flat.

	        * docs/reference/tags2doc.pl: new script from Alper Ersoy
	        <aersoy@tfz.net> to scan .dat files and generate output
	        with various kinds of markup.

	        * docs/reference/mkdocs.pl: incorporated changes from
	        alper to output .dat file data.

	        * docs/reference/scandocs.pl: renamed file since it only
	        scans for documentation now and has no real backend generation
	        code anymore.

	        * docs/reference/man-conf.pl: configuration files
	        for tags2doc.pl to output man pages.

	svn path=/trunk/; revision=377

2002-03-03  Tim Janik 	# ca910b70d79cff359bb505625e8772819cb46004

	applied doc generation patch from alper with some shuffling on my part to

	Sat Mar  2 14:01:37 2002  Tim Janik  <timj@gtk.org>

	        * applied doc generation patch from alper with some
	        shuffling on my part to keep the directory structure flat.

	        * docs/reference/tags2doc.pl: new script from Alper Ersoy
	        <aersoy@tfz.net> to scan .dat files and generate output
	        with various kinds of markup.

	        * docs/reference/mkdocs.pl: incorporated changes from
	        alper to output .dat file data.

	        * docs/reference/html-conf.pl:
	        * docs/reference/man-conf.pl: configuration files
	        for tags2doc.pl to output html or man pages.

	        * docs/reference/html-header.html:
	        * docs/reference/html-footer.html: helper files for
	        html output.

	svn path=/trunk/; revision=376

2002-03-02  Tim Janik 	# 0491dcee5b6ee70614b68e7632c5bac8ddb37f76

	minor fixing aid

	svn path=/trunk/; revision=375

2002-02-14  Tim Janik 	# e6636c7cc7d933b37ca18dd63abae2f2933f1961

	minor cosmetic fixes.

	svn path=/trunk/; revision=374

2002-02-13  Tim Janik 	# 0ce0ce0137a756c2acbff34d7ffeb79dfb74eafe

	applied patch from stefan with bug fixes and doc additions.

	Wed Feb 13 18:12:16 2002  Tim Janik  <timj@gtk.org>

	        * gsltests.c:
	        * gslfilter.c: applied patch from stefan with bug fixes and doc
	        additions.

	svn path=/trunk/; revision=373

2002-02-13  Tim Janik 	# fc4d6ceb7b748a8e3585df4fa77afca6a163a817

	move controllers from BstRackItem into this place. added more controls.

	Wed Feb 13 17:44:59 2002  Tim Janik  <timj@gtk.org>

	        * bstcontrollers.[hc]: move controllers from BstRackItem into this
	        place. added more controls.

	        * bstdial.[hc]: some cleanups/fixes.

	        * bstitemview.[hc]: use BSW where apropriate, now that we have
	        value iters.

	        * bstmenus.[hc]: add ability to change sensitivity of choice items.

	        * bstparam.[hc]: clue hunter code updates to deal with object references
	        through BSW API.

	        * bstplaylist.c: BswVIter updates.

	        * bstrackeditor.[hc]: comlpeted most code portions so the rack editor
	        slowly aproaches a usable state.

	        * bstrackitem.[hc]: dito, code updates, fixes, new features, etc.

	        * bstracktable.[hc]: fix drag abortion somewhat.

	        * glewidgets.c: new upstream incorporating fixes from GLE.

	        * beast-gtk/bstknob.[hc]: new scale/dial widget with different
	        usage behaviour.

	Wed Feb 13 17:41:52 2002  Tim Janik  <timj@gtk.org>

	        * bsw/bswproxy.[hc]: remove/fix stuff which went into BSE.
	        provide bsw_proxy_type().

	        * bswsignal.[hc]: also, use glue code from BSE now.

	        * mkapi.c: some cleanups and reqrites. support BswVIter types and
	        ulong.

	        * bsw/mkapi.c (cfile_header):

	Tue Feb 12 08:10:11 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_update_can_operate): keep the toplevel
	        menu entry "/Waves" sensitive all the time.

	svn path=/trunk/; revision=372

2002-02-13  Tim Janik 	# a2ef7227a61387e7d7c63aaf6451194cfef23b28

	move controllers from BstRackItem into this place. added more controls.

	Wed Feb 13 17:44:59 2002  Tim Janik  <timj@gtk.org>

	        * bstcontrollers.[hc]: move controllers from BstRackItem into this
	        place. added more controls.

	        * bstdial.[hc]: some cleanups/fixes.

	        * bstitemview.[hc]: use BSW where apropriate, now that we have
	        value iters.

	        * bstmenus.[hc]: add ability to change sensitivity of choice items.

	        * bstparam.[hc]: clue hunter code updates to deal with object references
	        through BSW API.

	        * bstplaylist.c: BswVIter updates.

	        * bstrackeditor.[hc]: comlpeted most code portions so the rack editor
	        slowly aproaches a usable state.

	        * bstrackitem.[hc]: dito, code updates, fixes, new features, etc.

	        * bstracktable.[hc]: fix drag abortion somewhat.

	        * glewidgets.c: new upstream incorporating fixes from GLE.

	        * beast-gtk/bstknob.[hc]: new scale/dial widget with different
	        usage behaviour.

	Tue Feb 12 08:10:11 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_update_can_operate): keep the toplevel
	        menu entry "/Waves" sensitive all the time.

	svn path=/trunk/; revision=371

2002-02-13  Tim Janik 	# 8d90829ec05ef018b102c86b1d155451cbd50775

	remove/fix stuff which went into BSE. provide bsw_proxy_type().

	Wed Feb 13 17:41:52 2002  Tim Janik  <timj@gtk.org>

	        * bsw/bswproxy.[hc]: remove/fix stuff which went into BSE.
	        provide bsw_proxy_type().

	        * bswsignal.[hc]: also, use glue code from BSE now.

	        * mkapi.c: some cleanups and reqrites. support BswVIter types and
	        ulong.

	        * bsw/mkapi.c (cfile_header):

	svn path=/trunk/; revision=370

2002-02-13  Tim Janik 	# 1f8b01a87e3409b07866c0499cc9508891ba36bb

	add list-items() procedure.

	Wed Feb 13 17:32:45 2002  Tim Janik  <timj@gtk.org>

	        * bsecontainer.proc: add list-items() procedure.

	        * bsecontainer.[hc]:
	        * bseitem.[hc]:
	        * bseproject.[hc]:
	        fix functions returning lists of values.

	        * bseproject.proc: added procedures for item handling via
	        uloc paths.

	        * bseitem.proc: bug fixes. provide get-uloc-path().

	        * bsedatapocket.c: omit extraneous changed notification from
	        _bse_data_pocket_entry_set().

	        * bsedatapocket.proc: bug fixes.

	        * bsestorage.[hc]: export scanner convenience macros.

	        * gslloader-wav.c:
	        * bsewave.c: disable debugging output.

	Tue Feb 12 06:42:33 2002  Tim Janik  <timj@gtk.org>

	        * bswcommon.[hc] bswprivate.h: provide low-level glue code at the
	        BSE layer, to reduce wrapping complexity.
	        implement BswVIter, a value iterator which is used to return
	        lists of values from procedures.

	        * bsedatapocket.c:
	        (bse_data_pocket_do_store_private):
	        (bse_data_pocket_do_restore_private): implement storage and parsing
	        abilities.

	svn path=/trunk/; revision=369

2002-02-11  Tim Janik 	# 1e89e1d9efab225fb98a3b122db71151c68ffbb7

	applied changes from stefan to support filter function scans. changed file

	Mon Feb 11 22:31:37 2002  Tim Janik  <timj@gtk.org>

	        * gsltests.c (main): applied changes from stefan to support filter
	        function scans.
	        changed file test to use gsl function.

	        * gslloader-wav.c: remove junk code.

	        * gslglib.[hc]: more compat stuff from stefan.

	        * gslfilter.[hc] (gsl_filter_sine_scan): added filter scanning
	        function from stefan.

	svn path=/trunk/; revision=368

2002-02-11  Tim Janik 	# 01a4b4004e93ad95c7aeb046496f17d6a9850704

	bsw_proxy_get_pspec() get pspecs from proxies.

	Mon Feb 11 19:39:13 2002  Tim Janik  <timj@gtk.org>

	        * bsw/bswproxy.[hc]: bsw_proxy_get_pspec() get pspecs from proxies.

	        * docs/release-notes.tmpl: generate release-notes.txt from this.

	svn path=/trunk/; revision=367

2002-02-11  Tim Janik 	# 7106345459fe376e4e6c6fda60ce3a45ef60f3a0

	new adjustment which, if connected to another adjustment, translates the

	Mon Feb 11 18:48:46 2002  Tim Janik  <timj@gtk.org>

		* bstlogadjustment.[hc]: new adjustment which, if connected
		to another adjustment, translates the value settings into
		a logartihmic scale (which needs to be configured on the log
		adjustment).

		* bstrackeditor-covers.c: produce cover widgets for the rack-editor.

		* bstrackeditor.[hc]: widget, which features BstRackTable, a GtkTable
		derived widget, which allowes free grid-aligned widget replacement via
		DnD by the user if in edit mode.
		the rack editor syncs the GUI layout with a BEAST-Rack-View data pocket
		within bse projects.

		* bstrackitem.[hc] bstrackitem-controllers.c: widget acting as a wrapper
		around items being added to a rack table. this allowes user editing of
		the GUI controller type for bse object properties.

		* bstrtest.c: remove this simple test program.

		* bstapp.[hc]: support the Rack Editor in the Projects/ menu.
		bst_app_find(): support finding the app from a BseProject.

		* bstgconfig.[hc]: add rc-file option which can be used to fire up
		RELEASE-NOTES greeting windows.

		* bstmain.c: fire up a text view for docs//release-notes.txt after
		parsing rc file.

		* bstmenus.[hc]: extend the BstChoice facilities to support submenus.

		* bstparam.[hc]: add support for adding properties to the Rack Editor,
		if this projects Rack Editor is in edit mode, when clicking on the
		xframe widget of the property labels.
		support logarithmic property scales via BstLogAdjustment.

		* bstparamview.[hc]: change GUI for property editing from wrap boxes to
		scrolled windows.

		* bstplayback.[hc]: properly handle stopping and retrigger of the wave
		preview playback.

		* bstracktable.[hc]: emit a notification signal when the edit mode
		was enabled/disabled.
		set gtk_container_set_reallocate_redraws() to avoid drawing artefacts
		when children get added/removed.
		bst_rack_table_size_allocate(): properly update child position bit array.
		bst_rack_table_button_press(): proxy button3 presses to BstRackItem
		children.
		bst_rack_table_add(): support BstRackItem GUI changed notifiaction upon
		adding.
		bst_rack_table_remove(): properly trigger a child position bit array
		update here.

		* bstwaveeditor.[hc]: grrrr, make osc_freq and mix_freq string properties
		on the tree store model, because the cell text renderer is too stupid to
		handle floats sanely.
		play_back_wchunk(): halt preview playback before adjusting playback
		settings, so we don't cause playback hickups ;)

		* bstxframe.[hc]: add ::button_check signal to allow widget users to
		check focussing and handle button presses on this widget.

	svn path=/trunk/; revision=366

2002-02-11  Tim Janik 	# bda51ee095be9679f837a1fefc7f7d7ca6f41981

	add common-ancestor() procedure.

	Mon Feb 11 18:20:57 2002  Tim Janik  <timj@gtk.org>

		* bseitem.proc: add common-ancestor() procedure.

		* bseobject.[hc]: add bse_object_class_set_param_log_scale() to set
		logarithmic scale parameters for a proeprty.

		* bseparam.[hc] (bse_param_spec_set_log_scale): support logarithmic
		parameters on property scales. add bse_param_spec_get_log_scale()
		for read-out.

		* bseproject.[hc]: remove useless bse_project_add/remove_super()
		functions.
		support ordinary items (non-supers) as children of a project.
		add new function bse_project_find_item().

		* bseproject.proc: ad procedure get-data-pocket() to retrive a
		named data pocket object from a project.

		* bsequery.c: minor improvement to procedure doc generation.

		* bsetype.h: flags cleanup.

		* gslcommon.[hc]: support gsl_thread_self() for the main thread
		in a way that's also suitable for aRts.

		* gsldatautils.c: fix peekbuffer fill size.

		* gsldatautils.c: minor speed improvement for tailmatch_score_loop().

		* gslfilter.c: fox band pass/stop filter scaling, so that b[0]==1.0.

		* gslfilter.[hc]: implement filter evaluation routine for first direct
		canonical form.

		* gslieee754.h: use static inline instead of extern inline in the GCC
		case, so this works with --finstrument-functions.

		* gslloader-gslwave.c: correctly handle relative chunk file paths.

		* gslloader-wav.c: fix gcc-ism.

		* gslloader.h: make loop_start/end GslLongs.

		* gslmath.c: up the default %f precision in stringifaction.

		* gsltests.c: support multiple file names for the wave-scan command.

		* gslwavechunk.[hc]: add strngification functions for GslWaveLoopType.

		* gslwaveosc.h: fix FIXMEs.

		* bsecontainer.c (uncross_ref): important fix to only invoke
		uncross notifier when uncrossing, not when unreffing the cross
		ref.

		* bsedatapocket.[hc] bsedatapocket.proc: new object to hold view
		specific, generic data. currently lacks storage ability.

	svn path=/trunk/; revision=365

2002-02-11  Tim Janik 	# 84b49101942066867ca417d38bec59b1059a09f6

	quick and simple resonance filter, needs property tweaking still.

	Mon Feb 11 18:18:09 2002  Tim Janik  <timj@gtk.org>

	        * bsesimpleresonancefilter.[hc]: quick and simple resonance filter,
	        needs property tweaking still.

	        * bsegenosc.c (bse_gen_osc_class_init): provide logarithmic parameters
	        for the frequency scale.

	        * bsesimpleosc.c (bse_simple_osc_class_init): same here.

	        * bseiirfilter.c (bse_iir_filter_class_init): provide log scale params
	        for scales here as well.

	svn path=/trunk/; revision=364

2002-02-06  Tim Janik 	# 8ad262041db5110c128df580b3d2c1ba41d38bbd

	quick test loop, using the new sequencer sync output.

	Wed Feb  6 17:32:47 2002  Tim Janik  <timj@gtk.org>

	        * test/simple-loop.bse: quick test loop, using the new sequencer
	        sync output.

	        * test/freak-noise.bse: make this even freakier ;)

	svn path=/trunk/; revision=363

2002-02-06  Tim Janik 	# 282a981fb8cb7830de2acd8efad1bf89b65b32a2

	provide per-note sync signal.

	Wed Feb  6 17:30:53 2002  Tim Janik  <timj@gtk.org>

	        * bsesequencer.[hc]: provide per-note sync signal.

	        * bsesimpleadsr*.[hc]: fix ranges and gate input handling.

	svn path=/trunk/; revision=362

2002-02-06  Tim Janik 	# 1a6bd9f1e11824572f09f7e48c55ddfd46c00cf0

	updates

	svn path=/trunk/; revision=361

2002-02-06  Tim Janik 	# 028a89de55c1ff64726d3739e4201c2effe1a705

	allow floats when parsing int/uint, to ease backwards compatibility.

	Wed Feb  6 04:52:37 2002  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_parse_param_value): allow floats when
	        parsing int/uint, to ease backwards compatibility.

	svn path=/trunk/; revision=360

2002-02-06  Tim Janik 	# 3574ec84f00b46aab8300455bee10b0bcd3a39ad

	specify timings as floats, so more fine grained adjustments are possible.

	Wed Feb  6 04:54:16 2002  Tim Janik  <timj@gtk.org>

	        * bsesequencer.c: specify timings as floats, so more
	        fine grained adjustments are possible.

	svn path=/trunk/; revision=359

2002-02-06  Tim Janik 	# 33785c3ca17030bc4ec56618d2b142b9e26da161

	fix option menu handling.

	Wed Feb  6 02:40:30 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): fix option menu handling.

	svn path=/trunk/; revision=358

2002-02-06  Tim Janik 	# 26e1e8d8d572ef9d905b888ce84127ec480955a3

	added gsl_iir_filter_eval() plus _change and _setup variants to calculate

	Wed Feb  6 04:38:01 2002  Tim Janik  <timj@gtk.org>

	        * gslfilter.[hc]: added gsl_iir_filter_eval() plus _change and
	        _setup variants to calculate IIR filters (second canonical
	        direct form).

	        * gslmakefile: fix tschebyscheff type II steepness in the
	        gsltestoutput rule.

	svn path=/trunk/; revision=357

2002-02-06  Tim Janik 	# 06f9328b2e453e4bb3d13c21b2108488e0f3c5fc

	new IIR filter module. for some odd reaon, band pass and stop filters

	Wed Feb  6 04:41:09 2002  Tim Janik  <timj@gtk.org>

	        * bseiirfilter.[hc]: new IIR filter module.
	        for some odd reaon, band pass and stop filters aren't
	        currently working.

	svn path=/trunk/; revision=356

2002-02-05  Tim Janik 	# 91984074145012326b6ceabe9a77f46631bb3d40

	new simple widget handling BseSequence editing.

	Tue Feb  5 04:37:13 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsequence.[hc]: new simple widget handling BseSequence
	        editing.

	        * beast-gtk/bstsampleshell.[hc]:
	        * beast-gtk/bstsamplerepo.[hc]: get rid of this, outdated.

	        * beast-gtk/bstparam.[hc]: support BseSequence.

	svn path=/trunk/; revision=355

2002-02-05  Tim Janik 	# 47f2c3db32da3465d672f888694aaba434e90c49

	remove bsesample.[hc] from the tree as it's hopelessly outdated and has

	Tue Feb  5 04:32:04 2002  Tim Janik  <timj@gtk.org>

	        * remove bsesample.[hc] from the tree as it's hopelessly
	        outdated and has been superceeded by BseWave.

	        * removed bsevoice.[hc], though songs don't work yet, they
	        don't use BseVoice anymore.

	        * added BseSequence, a new property type (boxed) containing
	        sequences of notes.

	        * bsesong.c: fix auto activation property.

	        * gslopmaster.c: eeek, added a FIXME about not freeing flow
	        jobs when discarding modules.

	svn path=/trunk/; revision=354

2002-02-05  Tim Janik 	# e2816833bd50e5b1298bec10ebbbba2b330e45e9

	new mini sequencer.

	Tue Feb  5 04:38:54 2002  Tim Janik  <timj@gtk.org>

	        * bsesequencer.[hc]: new mini sequencer.

	svn path=/trunk/; revision=353

2002-02-04  Tim Janik 	# f01250f968ca42a61b8ee3981cbcff5fcd6570d6

	new file selection dialog to load wave files.

	Sun Feb  3 23:16:31 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwavedialog.[hc]: new file selection dialog to
	        load wave files.

	        * bsw/bswsignal.[hc]: new files to implement bsw_proxy_connect() and
	        bsw_proxy_disconnect() to support signals on BswProxy.

	        * beast-gtk/bstutils.h:
	        * beast-gtk/*.c: remove GTK_OBJECT_DESTROYED() hackiness.

	        * beast-gtk/*.c: fix BSE_OBJECT_NAME() usages. many more
	        Bse* -> BswProxy fixes.

	        * beast-gtk/*.[hc]: many, many fixes.

	svn path=/trunk/; revision=352

2002-02-04  Tim Janik 	# 5bdf891746b2a9453a3c3340697e6049315a79b3

	support procedures up to BseObject.

	Sun Feb  3 23:01:45 2002  Tim Janik  <timj@gtk.org>

	        * bseitem.[hc]:
	        * bseprocedure.[hc]: support procedures up to BseObject.

	        * bseobject.proc: new file to implement BseObject+is_a().

	        * *.c:
	        * bseobject.[hc]: changed object->name to object->uloc, a non
	        user-editable propety which is a unique identifier for the
	        objects whithin its container. added a simple string property
	        object::name that has no uniquenes or character constrains
	        anymore.

	        * bsecontainer.[hc]: nuke item_seqid() and get_item() methods,
	        we solve this once and for all here and don't need special casing
	        in derived objects anymore.
	        sequential ids are now handed out per exact type of a child in
	        a container.

	svn path=/trunk/; revision=351

2002-02-03  Tim Janik 	# 108a7b3e88ab5e15d4a747f0969c96fb8addcc31

	fix wave repo names

	svn path=/trunk/; revision=350

2002-02-02  Tim Janik 	# 368eb5b01a20d3177f8650133fadb55f345f9791

	provide radio buttons that actually make sense, i.e. an option about

	Sat Feb  2 12:21:04 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfiledialog.c: provide radio buttons that
	        actually make sense, i.e. an option about whether to include
	        samples in saved files or not.

	        * test/midi-test.bse: use a synthesized oscillator to not
	        point at sample files. (and i won't inline a huge sample,
	        here, just for a midi test).

	        * test/osc-test.bse: resurrect this in a version that actually
	        works with the new object layout.

	svn path=/trunk/; revision=349

2002-02-02  Tim Janik 	# 492af6a137969e6a7eb3cf9fd9579a2ec615e0e3

	add argument on whether to save wave files per reference or inlined.

	Sat Feb  2 12:22:11 2002  Tim Janik  <timj@gtk.org>

	        * bseproject.[hc]:
	        (bse_project_store_bse): add argument on whether to save wave
	        files per reference or inlined.
	        BseProject+store-bse: provide a procedure to actually store
	        a project.

	        * bsestorage.h: added a flag and macro BSE_STORAGE_SELF_CONTAINED()
	        to indicate that objects shouldn't store references.
	        * bsestorage.c: convert sample data via gsl_conv_from_float_clip().

	        * bsewave.c: fix up the raminings of deciding between inlined storage
	        or file references, works with BSE_STORAGE_SELF_CONTAINED() now.

	svn path=/trunk/; revision=348

2002-02-02  Tim Janik 	# d955f87175374f922ccee6f736098ac507308fdf

	get rid of hardcoded pathnames

	svn path=/trunk/; revision=347

2002-02-02  Tim Janik 	# 627732d03304b881f421ad9a3f8d8bce0b20c7bd

	check for sys/soundcard.h in the OSS check, and forget about /dev/sndstat.

	Sat Feb  2 09:52:44 2002  Tim Janik  <timj@gtk.org>

	        * configure.in: check for sys/soundcard.h in the OSS check, and
	        forget about /dev/sndstat.

	svn path=/trunk/; revision=346

2002-02-02  Tim Janik 	# 19b88f8c487e8b0c4065393b4adb431c667e570d

	new test file to use with midi devices.

	Sat Feb  2 09:31:42 2002  Tim Janik  <timj@gtk.org>

	        * test/midi-test.bse: new test file to use with midi devices.

	        * test/*.bse: removed old outdated files.

	svn path=/trunk/; revision=345

2002-02-02  Tim Janik 	# b8a836b885098636620da6e499b50d86ca15d200

	require Ogg/Vorbis version 1.0rc3 or better.

	Sat Feb  2 08:31:42 2002  Tim Janik  <timj@gtk.org>

	        * configure.in (AC_GSL_REQUIREMENTS): require Ogg/Vorbis version
	        1.0rc3 or better.

	svn path=/trunk/; revision=344

2002-02-02  Tim Janik 	# 3e9340024135fea55eb29f1839916f960df08ab8

	new function for elaborate error messages.

	Sat Feb  2 09:21:39 2002  Tim Janik  <timj@gtk.org>

	        * gslcommon.[hc] (gsl_check_file): new function for elaborate
	        error messages.

	        * gsldatautils.[hc] (gsl_data_handle_dump_wav): dump a data handle
	        as .wav file.
	        const fixes for gsl_conv_*().

	        * bsepcmdevice-oss.c (oss_device_write): use
	        gsl_conv_from_float_clip() to improve accuracy and speed.

	        * gsldatahandle.h: add hooks for linear read data handles,
	        provide GSL_DATA_HANDLE_READ_LINEAR() to identify them and
	        introduce GslDataHandleFuncs.coarse_seek() to reposition
	        such handles.

	        * gsldatahandle-vorbis.[hc]: Ogg/Vorbis data handle. using this
	        with dcaches is suboptimal currently as dcaches warp back in pcm
	        positions on block boundaries. so this should be used in conjunction
	        with a linear-read-buffer handle only (which is of course not yet
	        implemented ;).

	        * gslloader-gslwave.c: GslLoader implementation for Ogg/Vorbis files.

	        * gslopmaster.c (master_process_flow): assert that rounding mode is
	        round-to-nearest, if this assertion is triggered, some software
	        didn't cleanup after itself and should be fixed.

	        * gsldatautils.c (gsl_data_handle_dump): clip values before saving,
	        to avoid nasty value wraps.

	        * gsldatautils.h: gsl_conv_from_{float|double}*() use gsl_ftoi()
	        for the rounding now, which is more accurate and, at least on i386,
	        slightly faster.

	        * gslieee754.h: provide fpu rounding functions, most importantly
	        gsl_ftoi() to round a float to interger in round-to-nearest mode.
	        we also have gsl_fpu_setround()/gsl_fpu_restore() now, to force
	        round-to-nearest mode, but that shouldn't be necessary as it's
	        the default for ieee754 (and on i387).

	svn path=/trunk/; revision=343

2002-02-01  Tim Janik 	# edcb2313ca084344d04111943353c0712c617e98

	moved frequency/epsilon z/s plane transformations from gslmath.* to

	Fri Feb  1 02:43:38 2002  Tim Janik  <timj@gtk.org>

	        * gslfilter.[hc]:
	        * gslmath.[hc]: moved frequency/epsilon z/s plane transformations
	        from gslmath.* to gslfilter.*.

	        * gslfilter.[hc]: added gsl_filter_tscheb2_steepness_db() and
	        gsl_filter_tscheb2_steepness() from stefan, which calculate the
	        required steepness factor for gsl_filter_tscheb2_rp() and variants
	        thereof.

	svn path=/trunk/; revision=342

2002-02-01  Tim Janik 	# 118979c97a7a9836053734a653ba919575710708

	support stamped flow jobs to set an output by frequency, value or note.

	Fri Feb  1 02:11:07 2002  Tim Janik  <timj@gtk.org>

	        * bseconstant.[hc]: support stamped flow jobs to set an output by
	        frequency, value or note.

	        * gslopmaster.c (master_handle_flow_jobs): implement rudimentary flow
	        job handling.
	        (master_process_locked_node): handle flow jobs, fix output buffer
	        virtualization for partial calculations (this is SLOW, desperately
	        needs fixing).
	        fixed stupid mistake where flow jobs weren't sorted by their tick_stamps
	        upon insertion.

	        * gslengine.h (struct _GslOStream): removed zero_initialize:1 flag
	        from ostreams as modules can easily memset(,0,) themselves and the
	        engine just becomes slower by checking this.

	        * bsesong.c (song_set_n_channels): grmm, initialize channel constants
	        with 0.0 (not the default 1.0).

	        * bsesongthread.c: major timing fixes.

	        * bseserver.[hc]: removed API/implementation about a magic-matched
	        loader procedures (loaders are plugged into GSL now).

	        * bsewave.[hc] (bse_wave_load_wave): new function to load a defined
	        set of chunks from a wave in a file, uses the GslLoader.

	        * bsewave.proc (load-wave): simply use bse_wave_load_wave() and get
	        rid of the GValueArrays passed in.

	        * bsesource.[hc]: provide bse_source_flow_access_modules() to commit
	        access flow jobs.
	        removed unused bse_source_access_imodules() and
	        bse_source_update_imodules() functions.

	        * bseutils.[hc]: provide bse_darrays_match_freq() that operates
	        on GDArray instead of value arrays.

	        * gslcommon.h: define GSL_MAX_TICK_STAMP.

	svn path=/trunk/; revision=341

2002-02-01  Tim Janik 	# 100f69fe6a6234fd951e49167981a0efdccc8262

	use bse_source_update_omodules() now as the variant for imodules vanished.

	Fri Feb  1 02:16:02 2002  Tim Janik  <timj@gtk.org>

	        * bsesimpleosc.c:
	        * bsegenosc.c: use bse_source_update_omodules() now as the
	        variant for imodules vanished.

	svn path=/trunk/; revision=340

2002-01-31  Tim Janik 	# 71ef2f97f2a2c5e3a95d757ff1fcba6f90aba16f

	support PcmInput as default module. fixed error handling when deleting a

	Thu Jan 31 17:49:27 2002  Tim Janik  <timj@gtk.org>

	        * bstsnetrouter.c: support PcmInput as default module.
	        fixed error handling when deleting a link.

	svn path=/trunk/; revision=339

2002-01-31  Tim Janik 	# 6f5a31d7daeed96c17dcc5da66ffcfccc68f7c52

	new module, providing recording abilities, (still has latency issues

	Thu Jan 31 17:43:46 2002  Tim Janik  <timj@gtk.org>

	        * bsepcminput.[hc]: new module, providing recording abilities,
	        (still has latency issues though).

	        * bsecapture.[hc]: disabled this (outdated) module, i.e. don't
	        enter a category for it.

	        * bsepcmoutput.[hc]: code fixes and cleanups.

	        * bsepcmdevice-oss.c:
	        * bsepcmdevice.[hc]: provide number of values read upon reading
	        from a pcm handle.

	        * bsepcmmodule.c: provide pcm input module.
	        * bseserver.[hc]: use/support pcm input modules.

	        * bsesong.[hc]: create left/right mixer.

	        * bsesource.c: fix stupid bug that caused deletion of some
	        source links to fail.

	        * gslopmaster.c: consumer list handling fixes.

	svn path=/trunk/; revision=338

2002-01-31  Tim Janik 	# 684276090a64a119ee6e9e84ce4e71e09b6d704c

	fooCVS:

	fooCVS: ----------------------------------------------------------------------

	svn path=/trunk/; revision=337

2002-01-31  Tim Janik 	# 1fa8a8bd84111c786db2f2e81066b1a121aa0313

	fix number of channels displayed.

	Thu Jan 31 01:17:31 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstwaveeditor.c: fix number of channels displayed.

	svn path=/trunk/; revision=336

2002-01-31  Tim Janik 	# 5a6557a24816b70bf938140178c62de41edee547

	deal gracefully with overlong headers.

	Thu Jan 31 01:15:24 2002  Tim Janik  <timj@gtk.org>

	        * gslloader-wav.c: deal gracefully with overlong headers.

	        * bseconstant.c: fix variable names.

	        * bsewave.[hcp]*: export n_channels.

	svn path=/trunk/; revision=335

2002-01-29  Tim Janik 	# 3e45bea6f0f80162e7e1420307bed9797ecb0e13

	fix adjustment value handling and comparisions, since it uses doubles in

	Tue Jan 29 15:19:20 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdial.[hc]: fix adjustment value handling and
	        comparisions, since it uses doubles in gtk+-2.0.

	        * beast-gtk/bstmain.c: add --no-plugins option to speed up
	        debugging.

	svn path=/trunk/; revision=334

2002-01-29  Tim Janik 	# a8d4b1d6342e3264bd05a02d21ec283946fca166

	set consumership.

	Tue Jan 29 15:17:43 2002  Tim Janik  <timj@gtk.org>

	        * bsesnooper: set consumership.

	        * removed bseconstant.[hc] as this is in BSE now.

	svn path=/trunk/; revision=333

2002-01-29  Tim Janik 	# 1c80e0c46efecabfb9cb02c28baf1a49bedae308

	make consumer property a per module property, changable via

	Tue Jan 29 15:16:51 2002  Tim Janik  <timj@gtk.org>

	        * gslengine.[hc], gslopmaster.c: make consumer property a per module
	        property, changable via gsl_job_set_consumer().

	        * *.c: changed modules accordingly to set consumership where
	        necessary.

	        * bsesubsynth.[hc]: make number of input/output channels compile time
	        configurable.

	        * bsesong.[hc]: more work on the required synthesis network.

	        * *.[hc]: s/BSE_ITEM_NEVER_STORE/BSE_ITEM_STORAGE_IGNORE/.

	svn path=/trunk/; revision=332

2002-01-24  Tim Janik 	# 9ad9871e02b7a93de56515d5d9e784c607b1ff25

	provide minimal heade ramrkup

	svn path=/trunk/; revision=331

2002-01-24  Tim Janik 	# 891f4ce23def0dff24cfa956a9bfee4429506a04

	fix generation rules and colors slightly

	svn path=/trunk/; revision=330

2002-01-24  Tim Janik 	# 764591119ecaf947514faaef56b7fbff15459139

	shut up

	svn path=/trunk/; revision=329

2002-01-24  Tim Janik 	# 1211b6dc77c2ef8d21b3559ffd47ffa9e1e77943

	build and commit *.html pages, so the web site doesn't need to build them from full source.

	svn path=/trunk/; revision=328

2002-01-24  Tim Janik 	# 276bf1c6f6b39c00c91913926d139140dc844d43

	colorize jchannel connection tags differently.

	Thu Jan 24 11:19:31 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvaslink.c: colorize jchannel connection tags
	        differently.

	        * beast-gtk/bstcanvassource.[hc]: provide API to figure whether an
	        input channel is a jchannel.
	        colorize jchannels differently.

	        * beast-gtk/bstsnetrouter.c:
	        (bst_snet_router_update_links): walk jchannels correctly. use
	        bsw_*() functions, don't access BseSource directly.
	        (bst_snet_router_root_event): don't access BseSource directly, use
	        bsw_source_ichannel_get_n_joints() to figure possible input
	        connections.
	        provide bsw_source_unset_input() with the output source and channel
	        that are to be disconnected.

	svn path=/trunk/; revision=327

2002-01-24  Tim Janik 	# 684fc12c8e50db9cea22115c68a73802a04d1f0f

	added more source conneciton errors, removed unneeded errors.

	Thu Jan 24 11:04:41 2002  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]: added more source conneciton errors, removed
	        unneeded errors.

	        * bsesource.[hc]: add joint (multi-connect) input channels.
	        this still needs implementing on the engine side, i.e.
	        jchannel->jstream, but the BSE side of things should be fully
	        intact.

	        * bsesource.proc: added a couple more procedures to let
	        callers deal with ichannels and jchannels correctly.

	svn path=/trunk/; revision=326

2002-01-24  Tim Janik 	# 5a483557e31a392e4a16856064bc7d7427467b34

	get rid of hard coded number of istreams.

	Thu Jan 24 11:03:49 2002  Tim Janik  <timj@gtk.org>

	        * bsesnooper.c (bse_snooper_context_create): get rid of hard coded
	        number of istreams.

	svn path=/trunk/; revision=325

2002-01-24  Tim Janik 	# 7769239df1f2bf50e2f6b6d261eb38eaf4f89c97

	try disabling this for while.

	Thu Jan 24 07:18:14 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (gnome_canvas_FIXME_hard_update): try disabling
	        this for while.

	svn path=/trunk/; revision=324

2002-01-24  Tim Janik 	# 75119ec5b30db14eabf4a514b17606861fdac6be

	applied a good bunch of build fixes, and gcc-ism fixes and aRts special

	Thu Jan 24 05:59:45 2002  Tim Janik  <timj@gtk.org>

	        * gsl*.*: applied a good bunch of build fixes, and gcc-ism fixes
	        and aRts special casing patches from stefan.

	        * gsltests.c: feature fir aproximation, this still needs fixing though.

	svn path=/trunk/; revision=323

2002-01-24  Tim Janik 	# be820e17410c05c0de6f9433c04edd3ebb0be152

	changed top category policy for synthesis modules from /Source/ to

	Thu Jan 24 01:10:35 2002  Tim Janik  <timj@gtk.org>

	        * dosc/bse-categories.txt: changed top category policy for synthesis
	        modules from /Source/ to /Modules/.

	        * beast-gtk/bstsnetrouter.c: use new /Modules/ categories. still
	        support, but verbosely deprecate /Source/.

	        * beast-gtk/bststest.c: minor wave handle loading fix.

	svn path=/trunk/; revision=322

2002-01-24  Tim Janik 	# 0a91e16363662253fa72d862233e3743f5821be2

	output #line directives after stripping a comment.

	Thu Jan 24 01:13:47 2002  Tim Janik  <timj@gtk.org>

		* mkcproc.pl: output #line directives after stripping a comment.

		* gslwchunk.c: don't implement your own data handle. reduce
		stack size usage so this works in threading mode as well.
		fix ping-pong loop specification.

		* gslwavechunk.c: fix ping-pong loop assertions.

		* gsltests.c: use new loader API for wave file scan.

		* gslmagic.[hc]: new implementation of a magic(5) matcher,
		required by GslLoader. (formerly, this code was in bsemagic.[hc]).

		* gslloader.[hc]: new loader API implementation.
		(gslloader.c used to be a non-functional test program, removed
		that setup.)
		FIXME: should we fallback to other loaders after the first failed?
		FIXME: datahandle/dcache integration is somewhat suboptimal currently.

		* gsldefs.h: moved GslErrorType enum to here, added a couple
		of new structure prototypes.

		* gslglib.h: provide "GSL" log domain.

		* gsldatautils.c: fix gcc-isms.

		* gsldatahandle.[hc]: redid cache implementation, made it generic
		by supporting a hash structure filled in by data handle implementations
		to use as cache keys. provide public API cache entry points.
		fixed logic in data handle creation functions that could cause leaks
		under rare circumstances.
		provide gsl_wave_format_to_string() and gsl_wave_format_from_string(),
		formerly in gslwavedsc.[hc]).
		removed GslDataHandleLoader proposal API.
		FIXME: there needs to be decided how to handle mtime correctly.
		(gsl_wave_handle_new_cached): removed this as public API.
		(gsl_wave_handle_new): don't create a translation handle if not
		required.

		* gslcommon.[hc]: updated errors. provide gsl_byte_order_to_string()
		and gsl_byte_order_from_string() (formerly in gslwavedsc.[hc]).
		bootup .gslwave and .wav loaders.

		* bsewaverepo.proc: use new GslLoader API to load waves.

		* bsewaverepo.c: strip junk.

		* bsewave.proc: use new GslLoader API to load waves.
		renamed gslwave-loader to load-wave.

		* bsewave.c: use new load-wave procedure.

		* bseserver.[hc]: use GSL magics now.

		* bsemagictest.c: use GSL magics now, loader adaptions.

		* bseinfo.c: silence compiler.

		* bseenums.[hc]: merged GSL errors into BSE errors.

		* bsecategories.c: support new /Modules/ toplevel category.

		* bsemagic.[hc]: files removed.

		* gslwavedsc.[hc]: nuked files.

		* gslloader-wav.c: new file, implementing a RIFF/WAVE file loader.

		* gslloader-gslwave.c: new file, implementing a .gslwave file loader,
		most code migrated from gslwavedsc.[hc].

		* gslwave.header: updated this to reflect syntax changes, mainly, for
		raw sample chunks, byte_order, format and n_channels have to be the
		same for all chunks.

		* gslwaveosc-aux.c: don't abort on non-mono dirstrides. the oscillator
		still needs fixing to let the user specify the channel to use for
		playback.

	svn path=/trunk/; revision=321

2002-01-24  Tim Janik 	# fdb403b810e97a3c4152bac7ab76b7e1f7a42395

	fix categories so /Modules/ is used instead of /Source/.

	Thu Jan 24 01:38:49 2002  Tim Janik  <timj@gtk.org>

	        * *.c: fix categories so /Modules/ is used instead of /Source/.

	        * bsewaveosc.c: make n_octaves stepping more fine grained.
	        fix description.

	svn path=/trunk/; revision=320

2002-01-15  Tim Janik 	# 6660db9fb0f469dac9d2fbbca8d62380ce02ad85

	popup the info window of a synth module upon shift+button1.

	Tue Jan 15 17:41:28 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c: popup the info window of a synth module
	        upon shift+button1.

	Mon Jan 14 15:46:26 2002  Tim Janik  <timj@gtk.org>

	        * docs/reference/mkdocs.pl: applied patch from
	        Alper Ersoy <dirt@tfz.net>, to produce html output with --html.

	svn path=/trunk/; revision=319

2002-01-15  Tim Janik 	# ea246fd5f0a45063606b6c11a741e45385dc8802

	deal with multiple incarnations by letting the user specify a context id

	Tue Jan 15 17:38:57 2002  Tim Janik  <timj@gtk.org>

	        * bsesnooper.[hc]: deal with multiple incarnations by letting
	        the user specify a context id which identifies the context to
	        snoop on.

	Tue Jan 15 17:37:14 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc*.[hc]: stripped GslModule calculation code,
	        use functions from gslwaveosc.h unstead. adapted input/output
	        channels, supports modulation (linear and exponential) now.
	        got rid of bsewaveosc-aux.c.

	Sat Jan 12 13:36:12 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.[hc]: fixed GslModule channel allocations.
	        use if_reject/if_expect where apropriate.
	        use tschebyscheff type II again.

	svn path=/trunk/; revision=318

2002-01-15  Tim Janik 	# 4e904dbf35777fc477b7a7ef6541ed5c4454f06f

	ignore already prepared children.

	Tue Jan 15 17:27:02 2002  Tim Janik  <timj@gtk.org>

	        * bsecontainer.c (forall_prepare): ignore already prepared
	        children.

	        * bseparam.h: grr, gimme bse_param_spec_boolean().

	        * bseproject.c (bse_project_prepare): give preparation precedence
	        to BseWaveRepos, so synth modules can fetch their wave index
	        from BseWave in BseSource.prepare().

	        * gslfilter.[hc]: added gsl_filter_fir_approx() from stefan, which
	        approximates an FIR filter from a frequency transfer function, given
	        in freely-spaced transfer function samples.
	        get rid of GSL_SIGNAL_EPSILON and GSL_SIGNAL_KAPPA.

	        * gslmath.h: provide GSL_LN2.

	        * gslopmaster.c: added debugging/trace facility to catch the slowest
	        module in the current schedule.

	        * gslsignal.[hc]: new file to aid signal processing. provides macros
	        to test for signal edges and changes. also provides gsl_signal_exp2(),
	        a fast but limited approximation of exp2f().

	        * gslwaveosc*.[hc]: seperated wave oscillator code out of
	        plugins/bsewaveosc.c into independantly callable functions. fixed up
	        the code somewhat and added modulation.
	        this is still missing an LP->LP transformation function in gslfilter.h
	        to adjust the filter during modulation.

	svn path=/trunk/; revision=317

2002-01-12  Tim Janik 	# 2489108bd6838ee25486a223a2511a00edaf64b0

	disable debugging dumbness.

	Sat Jan 12 11:21:10 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.c (bst_pattern_editor_init): disable debugging
	        dumbness.

	svn path=/trunk/; revision=316

2002-01-12  Tim Janik 	# 8de045a79038b2588a052cdcfb49b379a6996bce

	fixed GslModule channel allocations. use if_reject/if_expect where

	Sat Jan 12 13:36:12 2002  Tim Janik  <timj@gtk.org>

	        * bsewaveosc.[hc]: fixed GslModule channel allocations.
	        use if_reject/if_expect where apropriate.
	        use tschebyscheff type II again.

	svn path=/trunk/; revision=315

2002-01-12  Tim Janik 	# 362704c17aadae35146b8c5f6d25d6fdc45bad4e

	get rid of old sample and synth inputs. support BseWave now. removed a

	Sat Jan 12 11:22:18 2002  Tim Janik  <timj@gtk.org>

	        * bseinstrument.[hc]: get rid of old sample and synth inputs. support
	        BseWave now. removed a bunch of old/dead code.

	        * bsesong.[hc]: create partial (non-savable) synthesis modules to
	        play a song now.

	        * gslfilter.[hc]: do gsl_trans_zepsilon2ss() in the public filter
	        functions automatically, so users are to pass epsilon in z-space
	        now, as they are to pass frequencies in z-space already.
	        commented out an assertion that triggers an internal compiler error
	        (bug reported to gcc-bugs).
	        adjusted steepness argument for tschebyscheff type II filters, so
	        it's a real factor, based on the first frequency given.

	svn path=/trunk/; revision=314

2002-01-11  Tim Janik 	# ae720b97e887a1d72b8259bb65ca3f4adc6173ba

	GtkTablke derived widget, that allowes for limited grid-aligned GUI

	Fri Jan 11 05:54:30 2002  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstracktable.[hc]: GtkTablke derived widget, that
		allowes for limited grid-aligned GUI editing.

		* beast-gtk/bstrtest.c: test program for bstracktable.

		* beast-gtk/bstapp.[hc]: fix main loop exit.

		* beast-gtk/bstdial.[hc]: more cosmetic fixups.

		* beast-gtk/bstpatterneditor.[hc]: fix font and clear
		windows upon redraws.

		* beast-gtk/bstplaylist.[hc]: move to xpm format for the
		drop spot icon. remove kennel usage.

		* beast-gtk/bstsnetrouter.[hc]: silently ignor non BseSource items.
		fixed xpm icon creation.
		(bst_snet_router_build_page): convenience function to build notebook
		page with SNetRouter (so can be resused in songs).

		* beast-gtk/bstsnetshell.c: adaptions to SNetRouter changes.

		* beast-gtk/bstsongshell.[hc]: create a SNetRouter here as well.

		* beast-gtk/bstutils.[hc]: get rid of GtkKennel implementation,
		we have GtkSizeGroup now.
		(bst_xpm_view_create): create a GtkPixmap widget from an xpm.
		(bst_widget_force_bg_clear): force bg clearance and redraw
		on a widget.

	Fri Jan 11 06:17:23 2002  Tim Janik  <timj@gtk.org>

		* bsecontainer.h: provide object flags user shift macro.

		* *.c: reset TypeInfo prealloc configurations.

		* bseinstrument.c: tiny cleanup.

		* bsemain.[hc]: provide sequencer mutex.

		* bsepattern.c: insert sequencer locks as apropriate.

		* bsepatterngroup.c: same here.

		* bsepcmoutput.c: doh, fix off-by-one buffer access.

		* bsesnet.[hc]: change code to allow derivation.

		* bsesong.[hc]: derive from BseSNet. protect portions
		by sequencer lock. spwan sequencer thread upon playback.

		* bsesource.c: fix parser warning about failing connections.

		* bsestorage.c: fix off-by-one string access.

		* bsesuper.h: provide object flag user shift macro.

		* gsl-mplan.txt: updates, mention flow jobs.

		* gslcommon.[hc]: fix gsl_delete_struct/gsl_delete_structs.
		(gsl_ring_find): nw function to find data in a ring.
		(gsl_thread_new): return a thread handle.
		(gsl_thread_self): same here.
		(gsl_thread_sleep): sleep until timeout expires or woken up.
		(gsl_thread_aborted): should the thread abort?
		(gsl_thread_queue_abort): queue abort event on a thread.
		(gsl_thread_abort): abort a thread and wait until it finished.
		(gsl_thread_wakeup): wake up a sleeping thread.
		(gsl_thread_awake_after): queue wakeup of self after a certain
		tick_stamp.
		(gsl_thread_awake_before): queue wakeup of self before a certain
		tick_stamp.
		(gsl_thread_get_pollfd): retrive wakeup pollfd for self.
		(gsl_tick_stamp): return current tick stamp counter.
		(GSL_TICK_STAMP): get current tick stamp counter without
		lock protection (should be used within GModule only).

		* *.c: gsl_delete_struct*() adaptions.

		* gsldefs.h: provide GslThread handle.
		(if_reject): if() statement that is unlikely to succeede.
		(if_expect): if() statement that is likely to succeede.

		* gslengine.c: fix stream buffer allocations.
		doc fixes. added proper tick_stamp support.
		(gsl_flow_job_access): queue a time stamped flow job on
		a module to access module data.
		(gsl_flow_job_suspend): queue a time stamped flow job on
		a module to suspend it.
		(gsl_flow_job_resume): queue a time stamped flow job on
		a module to resume it.

		* gslopnode.h: buncha renaming and fields order changing.
		added flow jobs.

		* gslopmaster.c: removed master node list code. handle
		flow jobs. misc fixes. changed wakeup mechanism.
		walk unscheduled nodes with flow jobs at the end of dispatching.

		* gslopschedule.c: care of keping master node list sorted. dump
		schedule for debugging once it changed.

		* gsloputil.[hc]: plugged memleak. removed gross over-allocation
		of buffers. handle flow job trash queue. added function for
		master node list maintenance: _gsl_mnl_remove(), _gsl_mnl_integrate()
		and _gsl_mnl_reorder(). the list is partially sorted now.
		(gsl_engine_garbage_collect): do proper trash collection from
		user thread. removed old wakeup code.

		* gslfilter.h: added GSL_SIGNAL_EPSILON and GSL_SIGNAL_KAPPA
		to compare valid signals against.

		* gslmath.[hc]: make gsl_bit_depth_epsilon() return doubles.

	Thu Dec 20 06:40:04 2001  Tim Janik  <timj@gtk.org>

		* gslmath.[hc]: include gslieee754.h.
		(gsl_bit_depth_epsilon): grumble, make this return doubles.

		* gslieee754.h: new file, containing all the necessary bits to provide
		and check for inf/nan, normal and subnormal numbers on ieee754 floats
		and doubles.

	svn path=/trunk/; revision=313

2002-01-07  Tim Janik 	# 02b8595cf0dc1d8ebf4a43ea6ef91661aac82135

	dnd fixes, don't specify GTK_DEST_DEFAULT_DROP but implement own

	Mon Jan  7 09:48:34 2002  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdraggroup.c: dnd fixes, don't specify
	        GTK_DEST_DEFAULT_DROP but implement own ::drag_drop
	        handler. got rid of window origin query and translation
	        hack which was necessary because gtk erroneously computed
	        the drop position.

	        * beast-gtk/bstplaylist.c: same here. also, disabled idle
	        unparentation hack since gtk should deal with widget tree
	        changes during drag motion now.

	        * beast-gtk/bstutils.c:
	        (gtk_last_event_coords): simply chain to gdk_event_get_root_coords()
	        internally.
	        (bst_container_get_insertion_position): take container allocation
	        into account.

	svn path=/trunk/; revision=312

2001-12-14  Tim Janik 	# 370aa71ac9b43a9fb2ddb2628ac539d56607566f

	as a usability improvement, restrict range to 180 to 0 degrees.

	Fri Dec 14 18:43:49 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdial.[hc] (bst_dial_update): as a usability improvement,
	        restrict range to 180 to 0 degrees. GTK-2.0-updated the code.

	        * beast-gtk/bstxframe.[hc]: new widget, required by an as of yet
	        unimplemented killer feature ;)

	svn path=/trunk/; revision=311

2001-12-14  Tim Janik 	# 90f6fa67355d06a73774e13a0f39f2fdbe3d4286

	reenable latency device monitor.

	Fri Dec 14 08:55:29 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c: reenable latency device monitor.

	        * beast-gtk/bstservermonitor.[hc]: new files, showing BseServer options.

	svn path=/trunk/; revision=310

2001-12-14  Tim Janik 	# 3340be2bc586e91462c1d8c4875a5270ba418a09

	use BseServer IO watch to monitor device. this should have its own thread

	Fri Dec 14 08:49:49 2001  Tim Janik  <timj@gtk.org>

	        * bsemididevice-oss.c: use BseServer IO watch to monitor device.
	        this should have its own thread some day, but for now a high
	        prioritized main loop source is pretty fine already.

	        * bsepcmdevice.[hc]: support setting watermarks on pcm handles.

	        * bsepcmdevice-oss.c: fix up to PCM changes.

	        * bsepcmmodule.c: yay, fixup poll function, finally! supports
	        watermark now.

	        * bseserver.[hc]: added pcm_latency property. implemented io watch
	        handlers through a main loop source for now, should be a thread
	        someday.

	svn path=/trunk/; revision=309

2001-12-14  Tim Janik 	# 86f0ab6de78ce75fde19cf3889d515344fc84434

	fix loop filling for the threaded case, we don't need to be processed at

	Fri Dec 14 04:09:52 2001  Tim Janik  <timj@gtk.org>

	        * gslengine.c (gsl_engine_prepare): fix loop filling for the
	        threaded case, we don't need to be processed at all, so return
	        a timeout of -1.

	svn path=/trunk/; revision=308

2001-12-13  Tim Janik 	# 686cb33028f2a73998ff21402c2515bc4eb2ddc4

	added cdrom icon.

	Thu Dec 13 00:53:38 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/icons/: added cdrom icon.

	        * beast-gtk/bstplayback.[hc]: first code cleanup.

	        * beast-gtk/bstsnetshell.c (zoomed_add_xpm): center xpm.

	        * beast-gtk/*.h: remove unneeded #pragma lines.

	svn path=/trunk/; revision=307

2001-12-13  Tim Janik 	# 0e2231795c3e504efa36c5e79a129b5641696aa4

	added tentative float convenience wrapers.

	Wed Dec 12 04:44:08 2001  Tim Janik  <timj@gtk.org>

	        * fft.h: added tentative float convenience wrapers.

	        * gslwavedsc.[hc]: added stringification and parsing functions for
	        byte order and wave format.

	        * gslcommon.[hc]: added gsl_ring_length(), gsl_ring_nth(),
	        and gsl_ring_nth_data(), fixed other gsl_ring_* functions.

	        * gsldatautils.h: add double conversion variants gsl_conv_from_double,
	        gsl_conv_from_double_clip and gsl_conv_to_double.

	svn path=/trunk/; revision=306

2001-12-12  Tim Janik 	# cf16a8757c2aaada6ad4bdff11f2f459ae57b72c

	use gnome canvas "aa" property for setting aa-nes.

	Wed Dec 12 21:57:04 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_new): use gnome canvas
	        "aa" property for setting aa-nes.

	svn path=/trunk/; revision=305

2001-12-11  Tim Janik 	# ea08e37dd7045b9a2710081c4412f42dbb923c9f

	new files containing general sample data/ data handle utility functions,

	Tue Dec 11 01:17:43 2001  Tim Janik  <timj@gtk.org>

		* gsldatautils.[hc]: new files containing general sample data/
		data handle utility functions, some of these functions are
		written by Stefan Westerfeld.
		(gsl_data_detect_signal): detects signal start and end position within
		a data handle.
		(gsl_data_find_sample): find sample values or ranges thereof within
		a data handle.
		(gsl_data_find_tailmatch): determine loop points to aproximate a data
		handle's tail.
		(gsl_data_handle_dump): write out data handle contents to a file
		descriptor.
		(gsl_data_handle_peek_value): function to read a single sample out of a
		data handle. needs temporary peekbuffer variable to perform block-wise
		reads behind the scenes.

		* gsllooper.[hc]: removed these files.

		* gsldatahandle.h: added wave format loader hook proposal.

	Tue Dec 11 00:52:02 2001  Tim Janik  <timj@gtk.org>

		* FFT mania:

		* gsl-fftgen.pl: perl script to generate speed-optimized fft
		calculating routines.

		* gsl-fftconf.sh: configuration file to invoke gsl-fftgen.pl,
		and to provide public FFT routine frontends.

		* gslfft.h: publically exported FFT function header file.
		* gslfft.c: autogenerated FFT calculation code.

		* gslffttest.c: test code for FFT accuracy.

	Mon Dec 10 23:01:44 2001  Tim Janik  <timj@gtk.org>

		* changes done together with Stefan Westerfeld.

		* gslmath.[hc]:
		(gsl_complex_reciprocal): new function to compute the reciprocal
		value of a complex number.
		(gsl_complex_id): new function, returning the passed in complex number.
		(gsl_poly_mul): function changed and fixed to deal with variable length
		polynomials and work in place.
		(gsl_cpoly_mul): complex variant of gsl_poly_mul().
		(gsl_float_sign): extract sign of a float or double.

		* gslfilter.[hc]: scratched old filter variants.
		(gsl_filter_butter_rp):
		(gsl_filter_tscheb1_rp):
		(gsl_filter_tscheb2_rp): new functions to compute roots and poles for
		butterworth, and the both tschebyscheff types filters.
		(gsl_filter_butter_lp):
		(gsl_filter_tscheb1_lp):
		(gsl_filter_tscheb2_lp): added lowpass filter functions.
		(gsl_filter_butter_hp):
		(gsl_filter_tscheb1_hp):
		(gsl_filter_tscheb2_hp): added highpass filter functions.
		(gsl_filter_butter_bp):
		(gsl_filter_tscheb1_bp):
		(gsl_filter_tscheb2_bp): added bandpass filter functions.
		(gsl_filter_butter_bs):
		(gsl_filter_tscheb1_bs):
		(gsl_filter_tscheb2_bs): added bandstop filter functions.

		* gsltests.c: support new filter types.

	svn path=/trunk/; revision=304

2001-11-26  Tim Janik 	# 964b173197a9c570ed9289a5e73cdda58d292e25

	c++ comment fixCVS:

	c++ comment fixCVS: ----------------------------------------------------------------------

	svn path=/trunk/; revision=303

2001-11-26  Tim Janik 	# 337620c30f18a242259d5f5d9266e8c30e738e63

	various pointer/GType casting cleanups.

	Mon Nov 26 10:16:54 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/*.c: various pointer/GType casting cleanups.

	svn path=/trunk/; revision=302

2001-11-26  Tim Janik 	# 6eb564e2121626482364e47ef586395a2c5c49c3

	fix things to not cast GType into UINT.

	Mon Nov 26 10:04:42 2001  Tim Janik  <timj@gtk.org>

	        * bsecontainer.c: fix things to not cast GType into UINT.
	        * bseobject.c:
	        * bseserver.c:
	        * bseproject.c: same here.

	Mon Nov 26 05:08:50 2001  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.[hc] (gsl_data_handle_new_insert):  implemented new
	        handle for insertion of a small fixed value block.

	        * gslmath.[hc] (gsl_bit_depth_epsilon): new function for epsilons at
	        certain bit depths.

	Sun Nov 25 23:47:16 2001  Tim Janik  <timj@gtk.org>

	        * gsl*.[hc]: applied patch from stefan to use g_newa() instead
	        of g_alloca() and fix other minor portability issues.

	svn path=/trunk/; revision=301

2001-11-26  Tim Janik 	# d9e30c451d77dd6e8b7eaba63fece116b86262d6

	fix GType->UINT casting.

	Mon Nov 26 10:08:01 2001  Tim Janik  <timj@gtk.org>

	        * bsw/mkapi.c: fix GType->UINT casting.

	svn path=/trunk/; revision=300

2001-11-25  Tim Janik 	# fbfa0cbeaf5913d14d49b18992db0cc711f86048

	applied patch from stefan to use g_newa() instead of g_alloca() and fix

	Sun Nov 25 23:47:16 2001  Tim Janik  <timj@gtk.org>

	        * gsl*.[hc]: applied patch from stefan to use g_newa() instead
	        of g_alloca() and fix other minor portability issues.

	svn path=/trunk/; revision=299

2001-11-25  Tim Janik 	# 97898390ca49d819ba662eabafe24e0327c8e04a

	up version requirements for canvas, gtk, etc. to recent CVS (1.3.11 for

	Sun Nov 25 23:25:04 2001  Tim Janik  <timj@gtk.org>

	        * configure.in: up version requirements for canvas, gtk, etc. to
	        recent CVS (1.3.11 for glib and gtk).

	svn path=/trunk/; revision=298

2001-11-25  Tim Janik 	# 72861ed5a614287cd6ec53c6ed810bace747c99f

	fix fundamental type IDs accoring to recent glib changes.

	Sun Nov 25 23:36:57 2001  Tim Janik  <timj@gtk.org>

	        * bsetype.h: fix fundamental type IDs accoring to recent
	        glib changes.

	svn path=/trunk/; revision=297

2001-11-20  Tim Janik 	# fcfbf90b2fd0a1f9f94ffab69ce78558c6edccec

	bad, bad GTK_OBJECT_DESTROYED() hack, needs to be backed out again.

	Tue Nov 20 14:02:42 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.h (GTK_OBJECT_DESTROYED): bad, bad GTK_OBJECT_DESTROYED()
	        hack, needs to be backed out again.

	        * beast-gtk/bstwaveeditor.c: tree view column resizing API fixes.

	svn path=/trunk/; revision=296

2001-11-20  Tim Janik 	# df63d780e2410b22fa81145de97874dab46cc46b

	add more error types.

	Wed Nov 14 10:37:24 2001  Tim Janik  <timj@gtk.org>

	        * gslcommon.[hc]: add more error types.

	        * gslconvert.[hc]: preliminary UTF8 conversion.

	svn path=/trunk/; revision=295

2001-11-14  Tim Janik 	# bc419156e9929ca729229692c7db4e0aa22ed6e8

	minor update

	svn path=/trunk/; revision=294

2001-11-14  Tim Janik 	# b252e9d4b724ad5e4cc843545126e51c39e9a208

	applied heavily modified patch from stefan to make things more portable

	Wed Nov 14 08:36:41 2001  Tim Janik  <timj@gtk.org>

	        * gsl*.[hc]: applied heavily modified patch from stefan to make
	        things more portable and get rid of various GCC-isms.

	svn path=/trunk/; revision=293

2001-11-14  Tim Janik 	# 5ace8e8536ee5cefefbf83666742c9e8121d978c

	s/param_get/param_spec_get/.

	Wed Nov 14 03:51:37 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): s/param_get/param_spec_get/.

	svn path=/trunk/; revision=292

2001-11-14  Tim Janik 	# 36018c490f5983553b9d14fa6a1a7011cee0733d

	s/param_get/param_spec_get/.

	Wed Nov 14 03:37:14 2001  Tim Janik  <timj@gtk.org>

	        * bsequery.c (show_procdoc): s/param_get/param_spec_get/.

	svn path=/trunk/; revision=291

2001-11-13  Tim Janik 	# ea26d0dca8b69c04d30fe42f682721474d28525b

	fix according to gtk's new accel map API.

	Tue Nov 13 01:37:35 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpreferences.c (accel_map_print): fix according
	        to gtk's new accel map API.

	svn path=/trunk/; revision=290

2001-11-13  Tim Janik 	# 002ea866f6435e0b58ad6f84d2e9a42e0868802b

	minor fixes.

	Tue Nov 13 01:44:01 2001  Tim Janik  <timj@gtk.org>

	        * gsllooper.[hc]: minor fixes.

	svn path=/trunk/; revision=289

2001-10-29  Tim Janik 	# 2bfc98505bb73807e0856f6a81356ed43c2bce51

	options update.

	Mon Oct 29 22:38:27 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c: options update.

	        * beast-gtk/bstqsampler.c: make requisition
	        smaller, we can only provide a bad guess anyways.

	        * beast-gtk/bststest.c: support multiple samples.

	svn path=/trunk/; revision=288

2001-10-29  Tim Janik 	# e7b8ae61fe691a85c592413ee2abd4ee5b31c82a

	provide GSL_DATA_HANDLE_OPENED() to check whether a handle is open. added

	Mon Oct 29 22:45:37 2001  Tim Janik  <timj@gtk.org>

	        * gsldatahandle.h: provide GSL_DATA_HANDLE_OPENED() to
	        check whether a handle is open.
	        added bit_depth member to GslDataHandle, so the information
	        about the number of significant bits doesn't get lost by using
	        floats.

	        * gsldatahandle.c: implement reversed data handle.
	        gsl_data_handle_open(): return errno instead of GslErrorType
	        (so code portions that want to, can produce more elaborate
	        messages).
	        (gsl_data_handle_read): fixed a bug with boundary alignment.
	        (gsl_data_handle_common_init): added bit_Depth argument, so
	        an apropriate format can be choosen at save time.

	        * gsldefs.h: nuke GSL_BYTE_ORDER, we have G_BYTE_ORDER even
	        in the glib-compat code.

	        * gsllooper.[hc]: renamed gsl_loop_find_tailmatch to
	        gsl_data_find_tailmatch() should probably have a gsldata.[hc]
	        file for this.
	        added gsl_data_find_sample() to search for a certain sample
	        in a GslDataHandle.
	        provide gsl_data_peek_value() which is a macro to be used to
	        extract single data samples from a GslDataHandle (it needs a
	        user supplied stack buffer GslDataPeekBuffer which needs to be
	        0-initialized). this avoids wiritng custom buffering code
	        over and over when looping over a data handle's values.

	        * gslwave.header: provide a sample for how gslwave headers
	        are structured.

	        * gsltests.c: add midi2freq function.

	svn path=/trunk/; revision=287

2001-10-29  Tim Janik 	# c5253b15bf68c57907249db5c34f1eb34799142b

	new excellent image by drc.

	Sat Oct 20 12:51:57 2001  Tim Janik  <timj@gtk.org>

	        * icons/filter.xcf: new excellent image by drc.

	        * icons/filter.xcf: moved this to cyria-filter.xcf.

	svn path=/trunk/; revision=286

2001-10-23  Tim Janik 	# ede623dc42ff59613c971bf33c9a480f107ba64e

	commit missing files

	svn path=/trunk/; revision=285

2001-10-08  Tim Janik 	# 91ade9e9791e9bdfde96a7d42b61066b2bf5e356

	use hash_table_remove not insert(NULL) to remove nodes.

	Sat Oct  6 15:11:25 2001  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.c (bst_pattern_editor_class_set_key): use
	        hash_table_remove not insert(NULL) to remove nodes.

	        * beast-gtk/bstcanvassource.c (csource_info_update): show type blurb in
	        info window.

	Sat Oct  6 14:27:39 2001  Tim Janik  <timj@gtk.org>

	        * gslglibhash.cc: new GHashTable implementation in c++ from
	        stefan, that doesn't use SGI specific classes.

	        * gslglibhashtest.cc (main): new file from stefan to test hashtable.

	        * bseitem.proc: add procedure to retrieve type blurb of an item.

	svn path=/trunk/; revision=284

2001-09-27  Tim Janik 	# b1bea4d4bc0925d8af6c9cdb555a002fe23f1e59

	shut up

	svn path=/trunk/; revision=283

2001-09-27  Tim Janik 	# 8d3b64e025e2e4c5b6d62b2712145a503864d570

	shut up

	svn path=/trunk/; revision=282

2001-09-27  Tim Janik 	# 5254127f48de58b1b175053c4191ad1c7ebe1a92

	ensure that a gsl->bse link is in place.

	Thu Sep 27 14:22:41 2001  Tim Janik  <timj@gtk.org>

	        * Makefile.am: ensure that a gsl->bse link is in place.

	svn path=/trunk/; revision=281

2001-09-27  Tim Janik 	# 25eefe4358ebb3c292bc85af79e82032319738ee

	fix enum autogeneration for parallel builds. we can#t use the same tmpfile

	Thu Sep 27 14:42:11 2001  Tim Janik  <timj@gtk.org>

	        * Makefile.am (%.enums): fix enum autogeneration for parallel builds.
	        we can#t use the same tmpfile name here.

	svn path=/trunk/; revision=280

2001-09-27  Tim Janik 	# ef10aab88b37ffbb21ff5bc847423f3391e77a15

	Adding missing files.

	Thu Sep 27 14:10:55 2001  Tim Janik  <timj@gtk.org>

	        * bsw/bsw.h:
	        * bsw/bswproxy.h: BSE procedure API wrapper. this shall become
	        the only public API for BSE one day.

	        * beast-gtk/*: a bunch of code is already proted to using BSW
	        functions. however, a few unresolved fundamental problems still
	        remain, which is why BSE is still being used directly in a lot
	        of places.

	svn path=/trunk/; revision=279

2001-09-27  Tim Janik 	# 73cb5455fd107d5854530e60f3c8deae0a45bf7f

	lots of project shuffeling. blib got removed. we're depending on just

	Thu Sep 27 13:23:21 2001  Tim Janik  <timj@gtk.org>

	        * lots of project shuffeling. blib got removed. we're
	        depending on just glib-2.0, gtk+-2.0 and libart_lgpl+libgnomecanvas
	        now.

	        * beast-gtk/*: lots of adaptions to new gtk code. many new canvas
	        workarounds <urgl>.
	        new widgets got added as views to new BSE core objects.
	        also, there're starts at sample editing and preview GUIs.

	Thu Sep 27 13:10:43 2001  Tim Janik  <timj@gtk.org>

	        * MANY fixes, new APIs and cleanups.

	        * we're now using GSL, a common sound stuff backend for, at this
	        point, at least aRts and BSE. GSL comes with an abstraction to
	        sound file handles, file caches (that're designed for asyncronous
	        prereading), wavechunk looping, multi-sample waves and a flow
	        module operation engine. there're little docs on this yet, however
	        for the engine, the public guts are in engine.h and gsl-mplan.txt
	        gives a conceptual overview of the engine.
	        the core rationale for GSL is code sharing between BSE and aRts
	        to reduce required effords by both projects, and for the engine
	        specifically, the need to process modules of huge networks and
	        cycles tehreof, asyncronously and efficiently with full support
	        for multi processor systems.

	        * rough summary:
	        - we're using GSL now for data file caching, format conversion
	          and similar things and filter calculation.
	        - we're just having GObject and GLib as BSE dependancy again,
	          as the GObject move is completed now and remains of blib got
	          backmerged into BSE.
	        - we're using the GSL engine at the core now. most things work
	          again or better, except for songs. songs have to be implemented
	          a whole lot differently using engine concepts, the exact outcome
	          of this is not yet clear.
	        - a basic midi backend is supplied now
	        - BSE objects now just generally serve as templates for GSL module
	          networks to be created. this allowes for the same synthesis network
	          object to be plugged into different contexts and be realized
	          multiple times.
	        - instead of BseSample, samples are now gotten from BseWaveRepo
	          and BseWave now, which deals with samples, multi-samples and
	          collection thereof via GSL.

	Thu Sep 27 13:08:53 2001  Tim Janik  <timj@gtk.org>

	        * lots of adaptions to BSE changes, fixes and new plugins.

	        * a few dav*.[hc] plugins still remain unported, help apprechiated.

	        * davxtalstrings.[hc]: ported this to new BSE APIs, GSL engine and
	        floats processing.
	        * bsenoise.[hc] bsegenosc.[hc] bsemixer.[hc] bsemult.[hc] bseadder.[hc]:
	        likewise.

	        * bseconstant.[hc]: constant value plugin.

	        * bsesimpleosc.[hc]: new simple osciallator taking freq as input signal.

	        * bsesnooper.[hc]: new debugging module.

	        * bsesimpleadsr.[hc]: simple envelope generator.

	svn path=/trunk/; revision=278

2001-07-02  Tim Janik 	# 9c496e5bc45ad7f13c42d3aca662e571817e9241

	upmerge from beast-0-3 branch

	svn path=/trunk/; revision=277

2000-06-08  Tim Janik 	# 84cf5aa40caed9e98b263a24a7024d4ef73682b4

	minor doc string added

	svn path=/trunk/; revision=271

2000-05-30  Tim Janik 	# 9c78923b1b2af2372b2e6ed7a4ae201429fccace

	minor minor updates ;)

	svn path=/trunk/; revision=270

2000-05-30  Tim Janik 	# ec3cdd874af30c1ecf24af92ce61d50f3ac180ca

	minor updates

	svn path=/trunk/; revision=269

2000-05-29  Tim Janik 	# 26d53eed91a7d1fded33444dfcd48d9fe07da7d3

	added signal for focus changes. pass light_gc into effect drawing code,

	Mon May 29 02:42:41 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.[hc]: added signal for focus changes.
	        pass light_gc into effect drawing code, macro cleanups to avoid
	        accessing BsePattern fields directly.

	        * bsteffectview.[hc]: new container to provide effect views per
	        note, similar to BstItemView, but doesn't inherit from it, because
	        effects are not items and have certain constraints (only one
	        BseEffect derived type may exist per note).

	        * bstpatterndialog.[hc]: embed effect view container to allow effect
	        editing of pattern notes.

	        * bstutils.[hc]: moved some GtkCList workarounds from various code
	        portions here to 1) maintain them in a single place, 2) be able to
	        use them all around beast code, 3) keep all Gtk kludges in one
	        source file for reference.

	Thu May 25 06:22:35 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.[hc]: aggregate the paned container,
	        don't inherit from it. so we keep the underlying container
	        type exchangable. BstItemView is a GtkAlignment now.
	        (bst_item_view_set_layout): allow runtime changing of item view
	        layout.

	svn path=/trunk/; revision=268

2000-05-29  Tim Janik 	# 0907685738f540a74bf0dec6f911359e23285563

	save and load effect list with notes.

	Mon May 29 02:37:01 2000  Tim Janik  <timj@gtk.org>

	        * bsepattern.c: save and load effect list with notes.

	        * bseeffect.[ch]: object framework cleanup, we really just derive from
	        BseObject and that's it. provide class methods for effect settings.
	        scratched the BseEffectType idea, we use real methods instead of
	        hardcoded object type special casing in sequencer and front ends.

	        * bseeffectfinetune.c:
	        * bseeffectpatternbreak.c:
	        * bseeffectbalance.c:
	        * bseeffectnotevolume.c: completed effect implementation.

	        * bseeffectpatternjump.c:
	        * bseeffectvolumedelta.c: unimplemented, still on hold.

	        * bsevoice.[hc]: fine_tune bug squeezed (API cleanup), support arbitrary
	        effect settings.

	        * bsesongsequencer.c (bse_song_mixer_activate_voice): inserted effect
	        hooks for sequencer stepping and initial voice setup.

	Sat May 27 16:16:01 2000  Tim Janik  <timj@gtk.org>

	        * bsevoice.c (bse_voice_make_poly_and_renew): simply reset voices that
	        haven't started playing yet.

	        * mkenums.pl (parse_entries): urg, don't hang on multi line comments,
	        but read them up.

	Fri May 26 07:58:14 2000  Tim Janik  <timj@gtk.org>

	        * bsepattern.[hc]: provide effect management functions:
	        (bse_pattern_note_get_n_effects): number if effects on note.
	        (bse_pattern_note_get_effect): get effect by index.
	        (bse_pattern_note_find_effect): get effect by type.
	        (bse_pattern_note_actuate_effect): install effect type.
	        (bse_pattern_note_drop_effect): drop effect type.

	        * bsecategories.c (category_strip_toplevels): handle /Effect toplevel
	        categories.

	        * bse.h: only export the BseEffect basis type to the rest of the world.

	svn path=/trunk/; revision=267

2000-05-29  Tim Janik 	# 53a7bc60ce04a2440ce578aeddebbaa029f52eec

	glib type compatibility changes

	svn path=/trunk/; revision=266

2000-05-27  Tim Janik 	# 11331e149521ba8a47e7310407af82552c109be7

	indentation fixes

	svn path=/trunk/; revision=265

2000-05-25  Tim Janik 	# 889e65e2215b781fb87a6b48da7a8c7e6a66f014

	display instrument id as a hexadecimal number.

	Wed May 24 23:59:15 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstinstrumentview.c: display instrument id as a
	        hexadecimal number.

	        * beast-gtk/bstitemview.[hc] (bst_item_view_set_id_formate): allow
	        customization of id format string.

	        * beast-gtk/bstpatterneditor.c (INSTRUMENT_FMT): display instrument id
	        as a hexadecimal number.

	Tue May 23 18:15:52 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): parameter option menus need
	        to grab focus when clicked, like all other parameter widgets do.

	        * docs/interpolation.txt: a word on cubic interpolation.

	svn path=/trunk/; revision=264

2000-05-25  Tim Janik 	# 2e6fe263e2b4fdf4dd7087eab8aa7b9e4dcbd51c

	mixer function cleanup, implemented cubic interpolation.

	Thu May 25 02:56:18 2000  Tim Janik  <timj@gtk.org>

	        * bsebuffermixer.[hc]:
	        * bsebuffermixercore.c: mixer function cleanup, implemented cubic
	        interpolation.

	Wed May 24 06:40:11 2000  Tim Janik  <timj@gtk.org>

	        * bsebuffermixercore.c: squeezed half_step thinko in linear
	        interpolation. optimized linear interpolation by trading a
	        multiplication for a bitshift.

	        * bsevoice.c (bse_voice_set_note): set BseMixSource's block_padding
	        field from the munk's bin_data object.

	        * bsebuffermixer.[hc] (struct _BseMixVolume): added block_padding field,
	        since certain interpolation can only be run with sufficient start and
	        end padding on the sample data.

	        * bsestorage.c (bse_storage_create_rblock): set bin data padding on
	        newly created bin_data objects to BSE_DFL_BIN_DATA_PADDING.

	        * bsebindata.[hc]: support zero padding at start and end of data block
	        by a certain amount of bytes.
	        (bse_bin_data_set_byte_padding): set padding if no data was
	        allocated yet.

	Tue May 23 18:17:24 2000  Tim Janik  <timj@gtk.org>

	        * bseenums.h (enum): new enum BseInterpolType.

	        * bseinstrument.[hc]: made the interpoltion field an enum.

	svn path=/trunk/; revision=263

2000-05-25  Tim Janik 	# 88853cbfa2e69b6af1abbdcf3e45dc1077e5f9cf

	preliminary icon for DavChorus.

	Thu May 25 02:38:18 2000  Tim Janik  <timj@gtk.org>

	        * icons/chorus.c: preliminary icon for DavChorus.

	        * davchorus.c: give this a preliminary ugly icon.

	svn path=/trunk/; revision=262

2000-05-16  Tim Janik 	# 77297ba998d74bec95a0f073699974c64fb2ab9b

	new chorus module from David A. Bartold <foxx@mail.utexas.edu>.

	Mon May 15 14:22:16 2000  Tim Janik  <timj@gtk.org>

	        * davchorus.[hc]: new chorus module from David A. Bartold
	        <foxx@mail.utexas.edu>.

	        * davguitar.c (dav_guitar_prepare): cut-off frequency fix from David,
	        let lesser DC pass through to avoid clipping.

	svn path=/trunk/; revision=261

2000-05-04  Tim Janik 	# 1fdfdf76ba6e5a0c95a49f2ba339a27cdbee6d1b

	some Make 3.79 $(strip ) versions are broken and require an empty arg,

	Thu May  4 02:04:46 2000  Tim Janik  <timj@gtk.org>

	        * configure.in (STRIP_DUMMY): some Make 3.79 $(strip ) versions are
	        broken and require an empty arg, give it to them.

	svn path=/trunk/; revision=260

2000-04-30  Tim Janik 	# 8343af34d68ff2b6c1317b042fc82b3e38a82a69

	the default base_octave is 1 after the (not-so-)recent octave revamp.

	Sun Apr 30 04:35:18 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.c (bst_pattern_editor_init): the
	        default base_octave is 1 after the (not-so-)recent octave revamp.

	svn path=/trunk/; revision=259

2000-04-30  Tim Janik 	# 5017a6ef891ea215d8b80b09e30c2a3d20ddf585

	more adaptions for GLib 1.3.1 compatibility. only allow characters passed

	Fri Apr 28 21:33:52 2000  Tim Janik  <timj@gtk.org>

	        * glib-extra.h: more adaptions for GLib 1.3.1 compatibility.
	        * glib-extra.c (g_strcanon): only allow characters passed as
	        valid_chars.

	        * glib-gparam.c (g_param_spec_internal):
	        * glib-gparam.c (g_param_spec_hash_table_lookup): list all valid
	        characters in call to g_strcanon().

	svn path=/trunk/; revision=258

2000-04-30  Tim Janik 	# 40e7fa4e50e5bea5c81784fc1b1d953035bdd44f

	list all valid characters in call to g_strcanon().

	Fri Apr 28 21:27:16 2000  Tim Janik  <timj@gtk.org>

	        * bseobject.c (bse_object_add_notifier_i): list all valid characters in
	        call to g_strcanon().

	svn path=/trunk/; revision=257

2000-04-19  Tim Janik 	# 9f81be1ab88928b7363ea1a07106c47251cc1d84

	check whether the isource/csource's BseSource is still valid before

	Thu Apr 20 00:27:28 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvaslink.c (bst_canvas_link_set_icsource):
	        (bst_canvas_link_set_ocsource): check whether the isource/csource's
	        BseSource is still valid before removing notifier.

	Wed Apr 19 23:51:04 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.c (gnome_canvas_item_keep_above):
	        (gnome_canvas_item_keep_between): shut up the warning for
	        unparented items.

	        * beast-gtk/bstcanvassource.c (bst_canvas_icon_set): use
	        gdk_pixbuf_new_from_data() to create the pixbuf now.

	Mon Apr 17 21:30:46 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_ichannel_pos):
	        (bst_canvas_source_ochannel_pos): these functions may get called
	        after we lost our BseSource, guard access.

	svn path=/trunk/; revision=256

2000-04-19  Tim Janik 	# 7e9e3453bd075e5d1f8dc27e1cc0b96f0cf78941

	oops, don't unset n_params prior to destructing them.

	Mon Apr 17 20:45:50 2000  Tim Janik  <timj@gtk.org>

	        * glib-gobject.c (g_object_base_class_finalize): oops, don't unset
	        n_params prior to destructing them.

	svn path=/trunk/; revision=255

2000-04-19  Tim Janik 	# 080ff82f833817e8528caef1cc3a03c507274e56

	remove child source's input/output channels, regardless of the prepared

	Thu Apr 20 00:35:20 2000  Tim Janik  <timj@gtk.org>

	        * bsecontainer.c (bse_container_do_remove_item): remove child source's
	        input/output channels, regardless of the prepared state of the
	        container.

	svn path=/trunk/; revision=254

2000-04-12  Tim Janik 	# 6011fca8820ec93ba6454bb5350986e5b1d77c1f

	assert no further ref_count increments.

	Thu Apr 13 01:11:22 2000  Tim Janik  <timj@gtk.org>

	        * bseobject.c (bse_object_do_shutdown): assert no further ref_count
	        increments.

	svn path=/trunk/; revision=253

2000-04-11  Tim Janik 	# a03732c59358f0a10001946f827d085dd6f90ba6

	minor ups

	svn path=/trunk/; revision=252

2000-04-11  Tim Janik 	# 4dd7c4f548dbfeaf5800f8c67267be878dfed6af

	don't let scales and dials grab focus.

	Tue Apr 11 05:44:38 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): don't let scales and
	        dials grab focus.

	svn path=/trunk/; revision=251

2000-04-11  Tim Janik 	# 6b62b5caf6ad34ecb1225aebb38a44e9a6115940

	added trigger velocity, metallic factor and snap factor parameters.

	Tue Apr 11 05:36:09 2000  Tim Janik  <timj@gtk.org>

	        * applied changes from David A. Bartold <foxx@mail.utexas.edu>:

	        * davguitar.[hc]: added trigger velocity, metallic factor and snap
	        factor parameters.

	        * davorgan.c (dav_organ_class_ref_tables): fixed triangle table setup.

	        * davguitar.c:
	        * davxtalstrings.c: added note on the use of a stanford patent for
	        wavetable modification.

	svn path=/trunk/; revision=250

2000-04-11  Tim Janik 	# 41aeb12ff09ea83c011144096961e2741e382d17

	shut up

	svn path=/trunk/; revision=249

2000-04-11  Tim Janik 	# c3f1b0ca6a02cc6fb779ca3054d3b9faa263627f

	port over to use GParamSpec, GValue and for GObject hirarchy base type.

	Tue Apr 11 04:23:56 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgconfig.[hc]: port over to use GParamSpec, GValue
	        and for GObject hirarchy base type.

	        * beast-gtk/bstparam.[hc]: operate on a GValue+GParamSpec,
	        instead of BseParam now. use BLib's B_SEQ_PARAM_* ids to
	        implement the switch()es.

	        * beast-gtk/bstprocedure.[hc]: parameter/value port. this
	        introduced some API changes, mostly wrg preset parameters,
	        they need to be set incrementally now from a value+name
	        pair.

	        * beast-gtk/bstpatterndialog.c: port over to new procedure
	        API and GValue/BParamSpec.

	Thu Mar 30 16:58:14 2000  Tim Janik  <timj@gtk.org>

	        * configure.in: setup BLIB_CFLAGS, BLIB_LIBS and generate
	        blib/Makefile and blib/blibconfig.h.

	svn path=/trunk/; revision=248

2000-04-11  Tim Janik 	# 24ca11c9620283f6e080cb09195e9673d12c3b8b

	fixed a coupole of bugs in the initial parameter/object implementations,

	Tue Apr 11 04:28:10 2000  Tim Janik  <timj@gtk.org>

		* fixed a coupole of bugs in the initial parameter/object
		implementations, after getting beast running on GObject and GValue.

		* btype.[hc]: miscellaneous B* type stuff, provide sequential
		is for B_TYPE_PARAM_* types, so code can switch() on them.

		* bmain.[hc]: BLib initialization.

	Fri Apr  7 04:27:49 2000  Tim Janik  <timj@gtk.org>

		* glib-gobject.[hc]: completed parameter set/get implementations,
		along with asyncronous parameter changed notification queue.

	Mon Apr  2 02:07:55 2000  Tim Janik  <timj@gtk.org>

		* bparam.[hc]: BParamSpec implementations, some of them are just
		simple extensions of the GLib parameter specifications.

	Sun Apr  2 04:54:36 2000  Tim Janik  <timj@gtk.org>

		* glib-includes.h: mangle GLib extension files together.

		* glib-gobject.[hc]: GObject implementation, that is facilities
		for setting/getting quarked data and reference counting.

		* glib-gparamspecs.[hc]: first actuall parameter implementations
		for GLib, so far we have: char, uchar, bool, int, uint, long,
		ulong, enum, flags, float, double, string and object. each of these
		GParamSpecs is a new instantiatable type in its own respect,
		so the .c file derives 13 new types from G_TYPE_PARAM and
		defines over 50 (*2) conversion facilities.

		* glib-gvaluecollector.h: generic varargs handling stubs for
		GParamSpecs, private header file (does get installed for
		inclusion into user code though).

		* glib-gvalue.[hc]: GValue functionality implementation.

		* glib-gparam.[hc]: basis GParamSpec implementation for
		the virtual base type G_TYPE_PARAM.

	        * glib-genums.[hc]: enum/flags type implementation, based on
		bseenum.[hc].

		* glib-extra.[hc]: GLib additions, including 1.3 compatibility
		routines and various other functions, from string manipulation
		over list manipulation up to a unix signal GSource.

		* glib-gtype.[hc]: GLib Type System implementation, heavily
		based on BSE's dynamic type system.

	Thu Mar 30 17:34:58 2000  Tim Janik  <timj@gtk.org>

		* blib.h: global include file for libblib

		* blibconfig.h.in: provide general version number and
		version checking macros.

	svn path=/trunk/; revision=247

2000-04-11  Tim Janik 	# a1c97594d5510ae04b43d92f9fffd865edbc6f73

	ported everything BSE over to the new GLib type system.

	Tue Apr 11 04:02:47 2000  Tim Janik  <timj@gtk.org>

	        * ported everything BSE over to the new GLib type system.

	        * BseParam* got nuked.

	        * *.[hc]: port over to use GValue instead of BseParam, use
	        GParamSpec* and BParamSpec structures instead of BseParamSpec*
	        and BseObjectParamSpec.
	        pitfall: [bg]_param_spec_* () creation functions in general
	        take minimum, maximum, default_value, stepping_rate now (swapped
	        stepping_rate and default_value from the old bse_param_spec_*()
	        functions).

	        * *.[hc]: port objects over to GType and GObject, most objects
	        perform their cleanups in BseObjectClass.destroy() now.
	        finalize() got moved to GObject.
	        shutdown() got moved to GObject and shouldn't normally be
	        used by object implementations.
	        BseObject is a derived type of GObject now.

	        * bseobject.[hc]: apart from porting this over to GObject derivation,
	        a bunch of its implementation vanished, such as parameter set/get
	        facilities, reference counting and finalization.
	        nuked old BseInterface cruft.

	        * bseprocedure.[hc]: port over to GValue from BseParam, that means
	        in/out values are now matched by position, and automated value
	        conversion is performed where applicable.

	        * bsestorage.[hc]: port over from BseParam to GValue. we still
	        provide all means for loading and saving in this place, rather
	        than implementing it as virtual functions in the ParamSpec
	        classes. to switch() identify the non-fundamental param types,
	        we now use BLib's B_SEQ_PARAM_* id facility.

	        * bsetype.[hc]: nuked most of the rest of the file contents,
	        all param types are now introduced and implemented in BLib.

	        * miscellaneous related code cleanups.

	Mon Apr  3 17:05:32 2000  Tim Janik  <timj@gtk.org>

	        * bsemagic.[hc]: file magic implementation to figure file types
	        from contents. provides simple TRUE/FALSE match results, optimized
	        for running multiple match types on a single file.

	        * bseexports.h:
	        * bseplugin.[hc]: started out on load/save handler plugin
	        facilities.

	        * bseplugin.h: provided one liner descriptions for the complex
	        macro magic we use for loading plugins.

	Sun Apr  2 04:53:12 2000  Tim Janik  <timj@gtk.org>

	        * Makefile.am: removed glib-* entries that went into blib.
	        * glib-*.[hc]: files removed.

	svn path=/trunk/; revision=246

2000-04-11  Tim Janik 	# f6f09f3b18b6802b4e4e3cbe1fd98ee93e6428a4

	port over from BseParam to GValue and [GB]ParamSpecs.

	Tue Apr 11 04:23:08 2000  Tim Janik  <timj@gtk.org>

	        * *.[hc]: port over from BseParam to GValue and [GB]ParamSpecs.

	svn path=/trunk/; revision=245

2000-03-28  Tim Janik 	# d914b8dd63c098735c901b7c495e495d7371417f

	changed BstPEActionType enum, provide means for cell activation and

	Mon Mar 27 13:52:49 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.[hc]: changed BstPEActionType enum,
	        provide means for cell activation and rectangular selection,
	        fixed some key binding bugs.
	        changed signal name s/cell_clicked/cell_activate/.

	        * beast-gtk/bstpatterndialog.c: s/cell_clicked/cell_activate/,
	        feature button==0 (keyboard) for menu popups.
	        (bst_pattern_dialog_gtkfix_default_accels): setup default
	        accelerators for BsePattern procedures.
	        (pe_key_press): hard-wire Insert and Delete keys.

	        * beast-gtk/bstmain.c: call
	        bst_pattern_dialog_gtkfix_default_accels() before parsing rc
	        file and, directly after gtk_init().

	        * beast-gtk/bstkeytable-base.c:
	        * beast-gtk/bstkeytable-us.c:
	        * beast-gtk/bstkeytable-de.c: convert keytables to new macro
	        formats. added <Alt>M for menu popups to base keytable, and
	        enable Shift+movement keys to do rectangular selections.

	        * beast-gtk/bstkeytables.c: provide new keytable macros.

	        * beast-gtk/bstapp.c (menubar_entries): accelerator cleanups.

	        * beast-gtk/bstmenus.c: added accelerator recommendation comment.

	svn path=/trunk/; revision=244

2000-03-28  Tim Janik 	# 947a181321d294cbf0ddccc5eddbf484a44103b8

	GObject implementation.

	Tue Mar 28 05:38:07 2000  Tim Janik  <timj@gtk.org>

	        * glib-gobject.[hc]: GObject implementation.

	        * builtin_bsepattern.c: capitalize procedure categories.

	svn path=/trunk/; revision=243

2000-03-28  Tim Janik 	# f99cd84c7e1080e12bda93a75a0adf2f16f6968b

	capitalize procedure categories.

	Tue Mar 28 05:39:44 2000  Tim Janik  <timj@gtk.org>

	        * fldbsepattern.c: capitalize procedure categories.

	svn path=/trunk/; revision=242

2000-03-25  Tim Janik 	# d5aae1f5a7fcee5d62a7e7f7dc61402724b2a5df

	new file, takling over most of the bseenum.[hc] functionality.

	Sat Mar 25 10:31:40 2000  Tim Janik  <timj@gtk.org>

	        * glib-genums.h: new file, takling over most of the bseenum.[hc]
	        functionality.

	        * bsequery.c: quickly added facility to iterate over the
	        fundamental types.

	        * bseplugin.c (bse_plugin_register_types): register enums and flags
	        types inline.

	        * *.[hc]: port over to G_TYPE_ENUM and G_TYPE_FLAGS.

	svn path=/trunk/; revision=241

2000-03-25  Tim Janik 	# 3b025e869f8421649117ab988d2de26dbaa8bebd

	port over from BSE to GLib type system.

	Fri Mar 24 09:44:26 2000  Tim Janik  <timj@gtk.org>

	        * *.[hc]: port over from BSE to GLib type system.

	svn path=/trunk/; revision=240

2000-03-24  Tim Janik 	# 24f0f59f321feaf2e677296e053893025c9a57ed

	port over from BSE to GLib type system.

	Fri Mar 24 09:10:58 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgconfig.[hc]: port over from BSE to GLib type system.

	        * docs/bse-categories.txt: updated, we now use "+" instead of "::"
	        to seperate a procedure's base type from the method name. ':' and
	        '.' are already used for instance names or object paths.

	svn path=/trunk/; revision=239

2000-03-24  Tim Janik 	# c630b1100eafa7e60ab435c729cf6cc6dbd754a1

	ported the BSE type system over to use the GLib one, bsetype.c is now <

	Fri Mar 24 09:19:55 2000  Tim Janik  <timj@gtk.org>

	        * bsetype.[hc]: ported the BSE type system over to use the GLib
	        one, bsetype.c is now < 200 lines, hoehoe ;)

	        * *.[hc]: port over from BSE to GLib type system.

	svn path=/trunk/; revision=238

2000-03-24  Tim Janik 	# c93216916d7f9c07270f1fd60d7098751702f707

	port over from BSE to GLib type system.

	Fri Mar 24 09:44:26 2000  Tim Janik  <timj@gtk.org>

	        * *.[hc]: port over from BSE to GLib type system.

	Fri Mar 24 01:08:44 2000  Tim Janik  <timj@gtk.org>

	        * icons/canyon.xcf:
	        * icons/filter.xcf:
	        * icons/noise.xcf: Updated plugin icons, from Cyria Arweiler.

	        * icons/filter.xcf: bit of retouchee on my part to make the
	        inner side darker.

	        * davcanyondelay.c:
	        * bsefirfilter.c:
	        * bsenoise.c: include the new icons.

	Thu Mar 23 23:39:07 2000  Tim Janik  <timj@gtk.org>

	        * davxtalstrings.[hc]: new string synthesizer plugin from
	        David A. Bartold.

	        * davguitar.[hc]: new physical modelling acoustic guitar
	        synthesizer from David A. Bartold.

	svn path=/trunk/; revision=237

2000-03-13  Tim Janik 	# c1cf62027250c3b6ac0963a9fdf5cd8bff026742

	shame, mkcalls.pl was missing from extra_sources

	svn path=/trunk/; revision=234

2000-03-13  Tim Janik 	# f7f99c32e09337dfd54960f5773597f1992a3a95

	more of the same kind

	svn path=/trunk/; revision=233

2000-03-13  Tim Janik 	# c2151712a9e990d9797aad62d19a2677c494f943

	beast_extra_sources fixups for make distcheck

	svn path=/trunk/; revision=232

2000-03-13  Tim Janik 	# b906e0d2e3bcce12527807c39a2aae20241a53c4

	even smaller one (getting closer ;)

	svn path=/trunk/; revision=231

2000-03-13  Tim Janik 	# 6e3b12a5f8cd5d067f1843eba27d3f9156948e9b

	minor item

	svn path=/trunk/; revision=230

2000-03-13  Tim Janik 	# 4301f43514c09bf31be06bea6d49fb54cdba8766

	//beast.gtk.org.

	Mon Mar 13 01:00:35 2000  Tim Janik  <timj@gtk.org>

	        * released beast-0.3.2.tar.gz on http://beast.gtk.org.

	        * configure.in: up up version number to 0.3.2.

	        * docs/faq.dat: added an item on how to get pre-0.3.2 songs to play
	        in BEAST.

	Sun Mar 12 16:06:03 2000  Tim Janik  <timj@gtk.org>

	        * NEWS: scratched the "* Synthesis instruments, i.e. use of synthesis
	        networks as song instruments" item for now, we want more thorough
	        support of that.

	svn path=/trunk/; revision=229

2000-03-13  Tim Janik 	# 58387e838d13199079aa284ef88adfb75d2cb72f

	handle songs with empty playlists (pattern==NULL). we still simply loop

	Mon Mar 13 00:05:37 2000  Tim Janik  <timj@gtk.org>

	        * bsesongsequencer.c (bse_song_sequencer_step): handle songs with
	        empty playlists (pattern==NULL). we still simply loop the song
	        at the end though...

	        * bsepatterngroup.[hc] (bse_pattern_group_get_nth_pattern): new function
	        to return pattern by play index.

	        * bsesong.c (bse_song_get_pattern_from_list): implemented this in
	        terms of fetching the current pattern to play from the pattern groups.

	Sun Mar 12 16:07:50 2000  Tim Janik  <timj@gtk.org>

	        * bseinstrument.c (bse_instrument_class_init): disabled synthesis
	        input facility.
	        * bsesinstrument.c (BSE_BUILTIN_TYPE): don't register a category
	        for this object yet.

	svn path=/trunk/; revision=228

2000-03-13  Tim Janik 	# 2c0ae46769238e57d62943ff67b9f047660bb0f2

	scratched the note_val and instrument parameters, so this procedure can be

	Sun Mar 12 23:40:17 2000  Tim Janik  <timj@gtk.org>

	        * fldbsepattern.c (insert_note_exec): scratched the note_val and
	        instrument parameters, so this procedure can be used for generic
	        note insertions (e.g. bound to an accelerator).

	svn path=/trunk/; revision=227

2000-03-10  Tim Janik 	# d99c086f5a1cf6cbd7ad52ee03f191567cef4648

	use destroy notification instead of reference counting, some code

	Fri Mar 10 22:20:37 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstitemview.c (bst_item_view_set_container): use destroy
	        notification instead of reference counting, some code cleanups.

	        * beast-gtk/TODO: clean ups.

	svn path=/trunk/; revision=226

2000-03-10  Tim Janik 	# d78d2929183d86e8b8f11239ca08eece8ef195e0

	preallocation adjustments.

	Fri Mar 10 22:48:33 2000  Tim Janik  <timj@gtk.org>

	        * bsesong.c:
	        * bsesnet.c:
	        * bseheart.c:
	        * bsesample.c:
	        * bsepattern.c:
	        * bseinstrument.c:
	        * bsepatterngroup.c:
	        * bseeffectfinetune.c:
	        * bseeffectnotevolume.c:
	        * bseeffectpatternjump.c:
	        * bseeffectvolumedelta.c:
	        * bseeffectpatternbreak.c:
	        preallocation adjustments.

	        * bseglobals.h (BSE_PREALLOC_N_SUPERS): added object preallocation
	        defines so memory can be trimmed if desired.

	        * bseutils.c (bse_icon_ref_static):
	        s/bse_icon_static_ref/bse_icon_ref_static/ and changed callers.

	        * TODO: cleanups.

	svn path=/trunk/; revision=225

2000-03-09  Tim Janik 	# 1c9f824be90050b8e13bbf6e3ce8de0c9a38a7b0

	New plugin icons, kindly submitted by Cyria Arweiler

	Fri Mar 10 00:10:04 2000  Tim Janik  <timj@gtk.org>

	        * icons/canyon.xcf:
	        * icons/filter.xcf:
	        * icons/noise.xcf: New plugin icons,
	        kindly submitted by Cyria Arweiler <c_arweiler@yahoo.com>.

	        * davcanyondelay.c:
	        * bsefirfilter.c:
	        * bsenoise.c: include the new icons.

	svn path=/trunk/; revision=224

2000-03-08  Tim Janik 	# be4fdf7d31959abed527a48833790ed254d02de2

	  DavBassFilter  - TB-303 low-pass resonant filter clone

	svn path=/trunk/; revision=223

2000-03-08  Tim Janik 	# 8167c28ac9596fb8b59c9a794b3d52a70f2d7abb

	a TB-303 filter clone based on the VCF303 portions of gsyn v0.2. code

	Wed Mar  8 16:29:56 2000  Tim Janik  <timj@gtk.org>

	        * davbassfilter.[hc]: a TB-303 filter clone based on the VCF303 portions
	        of gsyn v0.2. code partly copyright by Andy Sloane.
	        plugin provided by David A. Bartold <foxx@mail.utexas.edu>.

	        * davcanyondelay.c (dav_canyon_delay_class_init): feedback parameter
	        description patch from David A. Bartold <foxx@mail.utexas.edu>.

	svn path=/trunk/; revision=222

2000-03-08  Tim Janik 	# a86dbd7e1a1facf26e723ab633d551f648c8a572

	arg, fix popup pos

	svn path=/trunk/; revision=221

2000-03-08  Tim Janik 	# 129b1433cfe07ca4c7e48499043751d1848d7f9c

	implemented bse_pattern_group_store_private() and

	Wed Mar  8 14:57:50 2000  Tim Janik  <timj@gtk.org>

	        * bsepatterngroup.c: implemented bse_pattern_group_store_private()
	        and bse_pattern_group_restore_private() to store tha pattern list.

	        * bsesong.c: implemented bse_song_restore_private(),
	        bse_song_store_after() and bse_song_restore() to save and load
	        the pattern group list.

	        * bseobject.[hc]: semantic change, substituted store_termination()
	        method with store_after(), so second stage saving can be used
	        in the same way as store_private() (derived widgets can store
	        stuff even after chaining the parent handler).
	        (bse_object_store): after invoking store_after(), store
	        the actual termination.

	svn path=/trunk/; revision=220

2000-03-08  Tim Janik 	# da0bc552d4dcec0af2068afa9f4fc045f9f508d7

	move drop_spot out of the way before adding new pattern (sigh, can't

	Wed Mar  8 12:51:58 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdraggroup.c (drag_group_drag_data_received): move
	        drop_spot out of the way before adding new pattern (sigh, can't
	        unparent here right away ;( ).

	        * beast-gtk/bstplaylist.c (group_list_drag_data_received): same,
	        here, gtkdnd.c really needs fixing.

	svn path=/trunk/; revision=219

2000-03-08  Tim Janik 	# eb9b052e4a07dbb9597a0333e200c71ba04d15f7

	remove references to removed pattern from pattern groups.

	Wed Mar  8 12:28:19 2000  Tim Janik  <timj@gtk.org>

	        * bsesong.c (bse_song_remove_item): remove references to
	        removed pattern from pattern groups.

	svn path=/trunk/; revision=218

2000-03-08  Tim Janik 	# 7fae5bc9bbdc66e5cf5dc8e22710996d4280d252

	added a bunch of new helper functions for general widget handling and DND

	Wed Mar  8 10:56:51 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: added a bunch of new helper functions for
	        general widget handling and DND workarounds.
	        new GtkKennel structure to constrain arbitrary widgets to a certain
	        size.
	        * beast-gtk/icons/target.c:
	        * beast-gtk/icons/target.xcf: new icon to indicate DND target zone.
	        * beast-gtk/icons/pattern-group.c:
	        * beast-gtk/icons/pattern-group.xcf: icon to indicate pattern groups.

	        * beast-gtk/bstplaylist.[hc]: new pattern playlist editor widget.
	        * beast-gtk/bstdraggroup.c:
	        * beast-gtk/bstdragpattern.c: assistant files for pattern dnd and
	        pattern group dnd.

	        * general code cleanups.

	Mon Mar  6 23:51:09 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatternview.c (bst_pattern_view_operate): auto-add
	        newly created patterns to the song's default pattern group.

	        * beast-gtk/gnomeforest.[hc]: keep idle update handler id, so we can
	        force updates. made the renderer independant of the REALIZED state.
	        (gnome_forest_render_now): new function to force updates.
	        (gnome_forest_bitmap_data): new function to create bitmap mask data
	        from the current forest buffer, suitable to create a bitmap mask with
	        gdk_bitmap_create_from_data().

	svn path=/trunk/; revision=217

2000-03-08  Tim Janik 	# b04513d4f7b4a849066c2d0e4b2bb35c9cb934d3

	added pattern group support: bse_song_get_default_pattern_group(),

	Mon Mar  6 23:47:46 2000  Tim Janik  <timj@gtk.org>

	        * bsesong.[hc]: added pattern group support:
	        bse_song_get_default_pattern_group(),
	        bse_song_insert_pattern_group_link(),
	        bse_song_insert_pattern_group_copy() and
	        bse_song_remove_pattern_group_entry().

	        * bsepatterngroup.[hc]: new maintenance object to keep track of
	        patterns, grouped together for arranger parts.

	        * bseitem.[hc] (bse_item_queue_seqid_changed): made seqid_changed() an
	        async notification.

	svn path=/trunk/; revision=216

2000-03-01  Tim Janik 	# 8ce973a448791614bfd7d6796fc22485703a2e4b

	new files, holding the icon stock, gnome canvas utilities and workarounds,

	Tue Feb 29 08:59:39 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstutils.[hc]: new files, holding the icon stock,
	        gnome canvas utilities and workarounds, gtk utilities, utility
	        functions for auxillary dialogs and for text views.

	        * beast-gtk/bstfiledialog.[hc]: moved cruft to bstutils.[hc],
	        feature overwriting when saving files.

	        * beast-gtk/bstdefs.h:
	        * beast-gtk/bstmain.c: clean ups, moved portions to bstutils.[hc],
	        print help and version.

	        * beast-gtk/bstmenus.[hc]: more versatile modal choice support
	        (menus and dialogs).

	        * beast-gtk/bstparam.[hc]: added bst_param_reset() for default value
	        resetting.

	        * beast-gtk/bstpatterndialog.c: popup menu fixes.

	        * beast-gtk/bstpatterneditor.c: indentation fixes in keytable dump.

	        * beast-gtk/bstprocedure.[hc]: redid widget implementation, we provide
	        a vbox derived shell now. better handling of preset parameters,
	        fixed popdown behaviour and miscellaneous other things.

	        * beast-gtk/glewidgets.[hc]: new sources.

	        * beast-gtk/bststatusbar.c: prevent delete events during procedure
	        shares.

	        * beast-gtk/bstapp.c (bst_app_new): set sane default and minimum sizes.

	        * *.[hc]: copyright corrections (date). files that may prove to be
	        usefull for other projects (gnome-libs, gtk, ...) are put under LGPL.

	svn path=/trunk/; revision=215

2000-02-22  Tim Janik 	# a08935923c39362ee0a22d11f5aadf576465f6a5

	updates from David A. Bartold.

	Tue Feb 22 07:44:17 2000  Tim Janik  <timj@gtk.org>

	        * test/davorgan.bse: updates from David A. Bartold.

	        * test/complex-wave.bse: new file from David A. Bartold
	        <foxx@mail.utexas.edu>.

	svn path=/trunk/; revision=214

2000-02-22  Tim Janik 	# f6c2a99ac8e325f2e8e7833a21982362480d4269

	New version from David A. Bartold <foxx@mail.utexas.edu>. Added time

	Tue Feb 22 07:53:04 2000  Tim Janik  <timj@gtk.org>

	        * davcanyondelay.[hc]: New version from David A. Bartold
	        <foxx@mail.utexas.edu>. Added time adjustments to the module and
	        updated it so one can set the feedback % for each "cross-over".
	        Also, the low-pass filter cutoff frequency is adjustable from the GUI.
	        The code's a bit cleaner too, the calc_chunk() loop now has comments.

	        * davorgan.c: new version from David A. Bartold to remove a division
	        operation in the calc_chunk inner loop, and to increase the
	        frequency grainularity to 1/256 hz steps.

	svn path=/trunk/; revision=213

2000-02-22  Tim Janik 	# fd7351d09cf29af8e5f04c3359ef49e9f5f83fd4

	added Tools/Fill random procedure, formerly in fldbsepattern.c as a test

	Tue Feb 22 07:28:03 2000  Tim Janik  <timj@gtk.org>

	        * builtin_bsepattern.c: added Tools/Fill random procedure, formerly
	        in fldbsepattern.c as a test procedure.

	svn path=/trunk/; revision=212

2000-02-22  Tim Janik 	# ae915909b0ec338c3499c465673af35759a5b567

	removed my test cruft from this file to leave room for a couple of

	Tue Feb 22 07:26:26 2000  Tim Janik  <timj@gtk.org>

	        * fldbsepattern.c: removed my test cruft from this file to leave room
	        for a couple of procedure implementations from Dave Seidel
	        <dave@superluminal.com>:
	        Edit/Delete note,
	        Edit/Clear instrument and
	        Edit/Fill instrument.

	svn path=/trunk/; revision=211

2000-02-22  Tim Janik 	# 97b20c1d60cabb9c3e5e33b6f7dbf8a0417605bc

	pulled new widgets.

	Tue Feb 22 04:02:46 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/glewidgets.[hc]: pulled new widgets.

	svn path=/trunk/; revision=210

2000-02-22  Tim Janik 	# cb98f69867a06373d57d3b45e6174bfd96c4c103

	new files, containing abstracted and optimized BseMixValue buffer mixing

	Tue Feb 22 04:58:22 2000  Tim Janik  <timj@gtk.org>

	        * bsebuffermixer.[hc]: new files, containing abstracted and optimized
	        BseMixValue buffer mixing functions, based on the former song mixing
	        core.
	        * bsebuffermixercore.c: actuall mixer function implementation, compiled
	        multiple times with different optimization setups.

	        * bsehunkmixer.[hc]: removed BseMixValue related mixing functions,
	        s/bse_hunk_clip_mix_buffer()/bse_hunk_clip_from_mix_buffer()/.

	        * bsesongsequencer.c: moved a bunch of the former bsesongmixer.c
	        fucntions here, cleaned code up a bit by using bse_mix_buffer_*()
	        functions.
	        temporarily disabled synth instruments.

	        * bsevoice.[hc]: major cleanups and rewrites, use BseMix* type
	        structures for certain value sets. some preparation for note effect
	        support.

	svn path=/trunk/; revision=209

2000-02-16  Tim Janik 	# dd9a4726fc6699e527177d6b12893f30e1615eed

	added two more icons.

	Wed Feb 16 01:07:48 2000  Tim Janik  <timj@gtk.org>

	        * icons/drum.c:
	        * icons/drum.xcf:
	        * icons/organ.c:
	        * icons/organ.xcf: added two more icons.

	svn path=/trunk/; revision=208

2000-02-11  Tim Janik 	# 688c3aaec38f09d6783e0ae14fb5c7bc5b03337d

	dumdidu

	svn path=/trunk/; revision=207

2000-02-11  Tim Janik 	# 4b0629506aee62c8b9685665d51602b42bdf38df

	arg, fighting pixbuf again. set x_in_pixels and y_in_pixels to FALSE, so

	Thu Feb 10 23:55:37 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_icon_set): arg, fighting
	        pixbuf again. set x_in_pixels and y_in_pixels to FALSE, so the icons
	        don't walk away when zooming.

	svn path=/trunk/; revision=206

2000-02-11  Tim Janik 	# 244c77d07ea02e58ab3cbaa2a3915b34635ef0fe

	oops, comitted buggy version of bstparam.c

	svn path=/trunk/; revision=205

2000-02-11  Tim Janik 	# a254fa85971de0d1e277dc9af272b76ccf9c8336

	many overall GUI improvements, lots of GUI clean ups and fine tuning.

	Thu Feb 10 11:51:28 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c:
	        * beast-gtk/bstradiotools.c:
	        * beast-gtk/bstparam.c:
	        * beast-gtk/bstparamview.[hc]:
	        * beast-gtk/bstitemview.[hc]:
	        * beast-gtk/bstpatternview.[hc]:
	        many overall GUI improvements, lots of GUI clean ups and fine tuning.
	        clean ups of GUI code.

	        * beast-gtk/bstdefs.h (enum): s/BST_ICON_TRASH/BST_ICON_DELETE/,
	        added BST_ICON_PATTERN, BST_ICON_PATTERN_TOOL and BST_ICON_TRASHCAN.
	        * beast-gtk/bstmain.c (bst_icon_from_stock): trashcan, trashsmall
	        replacement, added pattern.

	        * beast-gtk/icons/trashcan.c:
	        * beast-gtk/icons/trashcan.xcf:
	        new trashcan based on a png from tigert.

	        * beast-gtk/icons/pattern.c:
	        * beast-gtk/icons/pattern.xcf:
	        * beast-gtk/icons/pattern-tool.c:
	        * beast-gtk/icons/pattern-tool.xcf:
	        new BsePattern icon based on something from mc and panel.

	svn path=/trunk/; revision=204

2000-02-10  Tim Janik 	# 5a1e98a2e1fcc648a1958d8b6bbbf86fa9101c77

	some visibility improvements, i.e. gimme the description and name. minor

	Thu Feb 10 03:27:49 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c (bst_procedure_dialog_rebuild): some
	        visibility improvements, i.e. gimme the description and name.
	        * minor code cleanups.

	svn path=/trunk/; revision=203

2000-02-09  Tim Janik 	# 7b0c4b462c6d02f2f9d207da12a7390361b60408

	some changes due to BSE's parameter mess.

	Wed Feb  9 13:37:09 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/*.c: some changes due to BSE's parameter mess.

	svn path=/trunk/; revision=202

2000-02-09  Tim Janik 	# 93b422752bc66265c3422b99c8ff0c8488bdf007

	major parameter cleanups, scratched the param_group, param_id and

	Wed Feb  9 12:58:48 2000  Tim Janik  <timj@gtk.org>

	        * bseparam.[hc]: major parameter cleanups, scratched the param_group,
	        param_id and parent_type memebers so params are more appropriate for
	        general use.

	        * bseobject.[hc]: changed the way we store per-class parameter specs,
	        so we can still suply a param_id and a param_group, and have the
	        object_type for hash lookups.
	        got rid of the IN_PARAM_CHANGED flag.
	        we pass the param_id as a seperate argument to the classes
	        get_param() and set_param() functions now.
	        (bse_object_class_get_n_param_specs):
	        (bse_object_class_get_param_spec): accessors for param specs.

	        * *.c: changed all get_param() and set_param() functions accordingly.

	svn path=/trunk/; revision=201

2000-02-09  Tim Janik 	# 062e9e7a34506d57cf125fedbfeef82dd1f3817f

	be noisy about failing preset parameter conversions.

	Wed Feb  9 03:23:34 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstprocedure.c (bst_procedure_dialog_preset): be noisy about
	        failing preset parameter conversions.

	svn path=/trunk/; revision=200

2000-02-09  Tim Janik 	# 3650c8097121413f762048800861e7e2af11b838

	a conversion rule for BSE_TYPE_PARAM_UINT <=> BSE_TYPE_PARAM_UINT was

	Wed Feb  9 03:17:18 2000  Tim Janik  <timj@gtk.org>

	        * bseparam.c (param_exchange_lookup): a conversion rule for
	        BSE_TYPE_PARAM_UINT <=> BSE_TYPE_PARAM_UINT was missing.
	        optimized exchange function table lookups by returning
	        param_exch_copy() right away for equal types.
	        (bse_param_values_exchange): validate parameters after exchanging.

	svn path=/trunk/; revision=199

2000-02-09  Tim Janik 	# c6c5602ac8456268781d3ff4367c8818c98e8eac

	put a comment to not confuse people about current_channel and current_row.

	Wed Feb  9 00:53:20 2000  Tim Janik  <timj@gtk.org>

	        * bsepattern.h (struct _BsePatternClass): put a comment to not confuse
	        people about current_channel and current_row.

	svn path=/trunk/; revision=198

2000-02-09  Tim Janik 	# fe1cc2cbf73782c9d78b3fda53912a942e2ebcd7

	faq stuff from Dave: makefaq.py updates, renamed faq.src to faq.dat.

	Wed Feb  9 00:47:06 2000  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am:
	        * docs/makefaq.py:
	        * docs/faq.src:
	        * docs/faq.dat:
	        faq stuff from Dave: makefaq.py updates, renamed faq.src to faq.dat.

	svn path=/trunk/; revision=197

2000-02-08  Tim Janik 	# 6c82f4c3201fb56869e35ed5d24297c13c107656

	new widget to maintain radio selections that can build toolbars, menus (to

	Tue Feb  8 09:24:11 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstradiotools.[hc]: new widget to maintain radio selections
	        that can build toolbars, menus (to be implemented) and a palette
	        container with description for the radio controls.

	        * beast-gtk/bstsnetrouter.c: build the toolbar via BstRadioTools and
	        feature a palette dialog.

	svn path=/trunk/; revision=196

2000-02-08  Tim Janik 	# 6e5f6c3217393dde02dcad068fce6b8cb8c148b3

	return the referenced icon from bse_icon_static_ref() and bse_icon_ref().

	Tue Feb  8 09:23:25 2000  Tim Janik  <timj@gtk.org>

	        * bseutils.[hc]: return the referenced icon from bse_icon_static_ref()
	        and bse_icon_ref().

	        * bsesnet.c:
	        (BSE_BUILTIN_TYPE): don't add to categories.
	        (bse_snet_class_init):
	        (bse_snet_do_get_icon): return synthesis network icon.

	svn path=/trunk/; revision=195

2000-02-07  Tim Janik 	# 051acc220c1086e49f6249ec055554741ebe95c8

	fixed a stupid bug where a string field's NULL toggle wasn't shown because

	Mon Feb  7 05:58:28 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): fixed a stupid bug where a
	        string field's NULL toggle wasn't shown because of a hidden alignment.
	        (bst_param_set_editable): don't change editable state of entries, that
	        is taken care of by the entry itself, instead change sensibility like
	        we do for all other widgets.

	        * test/bsemixer-test.bse:
	        * test/davorgan.bse:
	        * test/osc-test.bse: fixups due to recent plugin changes.

	svn path=/trunk/; revision=194

2000-02-07  Tim Janik 	# 745c998dfc22acabc702ef19e6bc2d810fde465e

	changed things back so that we have one selection per pattern. for

	Mon Feb  7 03:40:20 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.*: changed things back so that we have
	        one selection per pattern. for multiple views and the possibility
	        of having procedures invoked unrelated to a view, this seems to be
	        the sanest way of handling things. note however, that in contrast
	        to common behaviour in spreadsheets, we don't auto-select the
	        currently focussed cell with this.

	        * beast-gtk/bstpatterneditorselection.c:
	        (bst_pattern_editor_selection_start): delete the pattern's selection
	        itself, not a copy of its selection.

	        * beast-gtk/bstpatterneditor.c:
	        (bst_pattern_editor_draw_tone): draw notes selected state regardless of
	        its focus state.
	        (bst_pattern_editor_set_pattern): install notifier handler for
	        "note_selection_changed".
	        (bst_pattern_editor_set_focus): reset the selection according to the
	        `reset_selection' argument, even if the focus didn't change.
	        (bst_pe_size_changed): don't reset the pattern's selection.

	        * beast-gtk/bstpatterndialog.c (pe_cell_clicked): don't give auto-focus
	        to the cell the click occured on. auto-select the current focus note
	        if no notes are selected currently though.

	svn path=/trunk/; revision=193

2000-02-07  Tim Janik 	# 976ce60f82ee64bd566ff704aec557ff304ca72d

	reintroduce bse_pattern_select_note() and bse_pattern_unselect_note() to

	Mon Feb  7 02:57:43 2000  Tim Janik  <timj@gtk.org>

	        * bsepattern.[hc]: reintroduce bse_pattern_select_note() and
	        bse_pattern_unselect_note() to modify note selections on individual
	        notes.
	        (bse_pattern_restore_selection): use bse_pattern_select_note() or
	        bse_pattern_unselect_note() so notifiers get invoked.
	        (bse_pattern_has_selection): new function to quickly check whether
	        selected notes are present at all.

	        * bsedefs.h: introduced BseNotify_note_selection_changed() notifier.

	svn path=/trunk/; revision=192

2000-02-07  Tim Janik 	# 740ed8e751baf7010b2bd1b6384c26af5455f806

	use the useless number as a random seed value, since this procedure is

	Mon Feb  7 03:54:44 2000  Tim Janik  <timj@gtk.org>

	        * fldbsepattern.c (test_content_setup): use the useless number as a
	        random seed value, since this procedure is actually funny to some
	        extend ;)

	svn path=/trunk/; revision=191

2000-02-06  Tim Janik 	# 27db7f11b96735651be2dfc42659c904e6bbf3eb

	push status window around procedure invocation.

	Sun Feb  6 09:54:12 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterndialog.c (pattern_dialog_exec_proc): push
	        status window around procedure invocation.

	        * beast-gtk/bststatusbar.[hc]: provide bst_status_window_push() and
	        bst_status_window_pop() to contrain status messages to a certain window.

	        * beast-gtk/bstapp.c (bst_app_operate): arg, fixed recently introduced
	        bug where playback wasn't restarted when Play is hit for an already
	        playing project. provide status messages.

	        * beast-gtk/bststatusbar.c (bst_status_bar_set): always clear status
	        messages after a certain delay.

	        * beast-gtk/bstpatterndialog.c (pattern_dialog_exec_proc): use
	        bst_procedure_void_execpl_modal() now.

	        * beast-gtk/bstprocedure.[hc]: fixed one of the most often used mistake
	        when assembling new dialogs through a composite widget: derivation
	        from GtkWindow. we derive from GtkVBox now, so the procedure dialog
	        is pluggable.
	        (bst_procedure_void_execpl_modal): new function superceeding
	        bst_procedure_void_execpl(), executes a procedure and pops up a modal
	        parameter input dialog if necessary.

	        * beast-gtk/bstdefs.h (BstSubWindowFlags): added BST_SUB_POPUP_POS flag
	        for popup window positioning such as GTK_WIN_POS_MOUSE or
	        GTK_WIN_POS_CENTER (which one to choose should actually be due to some
	        BEAST or gnome configuration value).

	        * beast-gtk/bstfiledialog.c (bst_file_dialog_open):
	        (bst_file_dialog_save): provide status messages.

	svn path=/trunk/; revision=190

2000-02-06  Tim Janik 	# 998456178b69efbc5e2a20e8f0f20f470614e319

	added DavCanyonDelay

	svn path=/trunk/; revision=189

2000-02-06  Tim Janik 	# d1c8e3dddfab95197eb417c4f8db6d7d417f657b

	added cool new canyon delay module from David A. Bartold

	Sun Feb  6 07:43:28 2000  Tim Janik  <timj@gtk.org>

	        * davcanyondelay.[hc]: added cool new canyon delay module from
	        David A. Bartold <foxx@mail.utexas.edu>.

	Sat Feb  5 18:35:37 2000  Tim Janik  <timj@gtk.org>

	        * bsemult.c:
	        * bsenoise.c:
	        * bsefirfilter.c:
	        * bseadder.c:
	        * davorgan.c:
	        * davsyndrum.c:
	        * bsemixer.c:
	        * bsegenosc.c: canonicalized input and output channel names, this breaks
	        links in already saved .bse files, but we have to be consistent here in
	        the long run.

	svn path=/trunk/; revision=188

2000-02-06  Tim Janik 	# 837f8296a5abb77d4188d4a5860385556f9ccc7b

	s/signal/usignal/ for glib's unix (user) signal loop source. compat code

	Thu Feb  3 09:19:49 2000  Tim Janik  <timj@gtk.org>

	        * glib-extra.[hc]:
	        s/signal/usignal/ for glib's unix (user) signal loop source.
	        compat code to make g_datalist_id_remove_no_notify() return
	        the data for !1.3.1 glib.

	        * bseobject.[hc]:
	        * bsesource.c:
	        * bseparasite.c:
	        * bsecontainer.c:
	        qdata_remove_no_notify fixups.

	svn path=/trunk/; revision=187

2000-02-03  Tim Janik 	# 5fddbdc2673595d08ac0737baedeae1eb254afdf

	ertk, forgot this file!

	Wed Feb  2 23:14:18 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.[hc]: selection fixups, each view can have
	        its own selection now.
	        many other fixes.
	        (there are still minor problems with the focus field selection state
	         and procedure invocation).
	        * beast-gtk/bstpatterneditorselection.c: move all the pattern editor
	        selection relevant code here.

	        * beast-gtk/bstpatterndialog.c (pattern_dialog_exec_proc): apply the
	        views selection before invoking a procedure and resync afterwards.

	svn path=/trunk/; revision=186

2000-02-02  Tim Janik 	# 7a88945e1f8649720c986e1f354a02592598d24c

	selection fixups, each view can have its own selection now. many other

	Wed Feb  2 23:14:18 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.[hc]: selection fixups, each view can have
	        its own selection now.
	        many other fixes.
	        (there are still minor problems with the focus field selection state
	         and procedure invocation).
	        * beast-gtk/bstpatterneditorselection.c: move all the pattern editor
	        selection relevant code here.

	        * beast-gtk/bstpatterndialog.c (pattern_dialog_exec_proc): apply the
	        views selection before invoking a procedure and resync afterwards.

	svn path=/trunk/; revision=185

2000-02-02  Tim Janik 	# 43149323991a22242089932759f3ccf77e1ad424

	added Select/All, Select/None and Select/Invert procedures.

	Wed Feb  2 23:59:48 2000  Tim Janik  <timj@gtk.org>

	        * builtin_bsepattern.c (multi_select_exec): added Select/All,
	        Select/None and Select/Invert procedures.

	        * bsepattern.[hc]: revamped selection API, we only store the
	        selection for procedure invokations now.

	        * bseexports.h:
	        * bseprocedure.[hc]: added private_id field to procedure class and
	        export type for multipurpose procedures.

	svn path=/trunk/; revision=184

2000-02-02  Tim Janik 	# 27e353e7e1d8b7aa5c51aedcb1089b3fa4e14e48

	added private_id field to procedure class and export type for multipurpose

	        * bseexports.h:
	        * bseprocedure.[hc]: added private_id field to procedure class and
	        export type for multipurpose procedures.

	svn path=/trunk/; revision=183

2000-02-01  Tim Janik 	# bb9b9de5e810911df5c42d2b95eec11da9b866e5

	make prompt, pre- and post-action widgets insensitive for !editable.

	Wed Feb  2 06:42:41 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_set_editable): make prompt, pre- and
	        post-action widgets insensitive for !editable.

	        * beast-gtk/bstprocedure.c (bst_procedure_dialog_preset): unificate
	        preset parameters with procedure's in parameters.

	        * beast-gtk/bstpatterndialog.c: pattern procedure menu fixups.
	        (pattern_dialog_exec_proc): provide preset parameters "pattern",
	        "focus_channel" and "focus_row" for procedure invocation, make
	        sure the focus cell is selected.
	        (pe_cell_clicked): readjust focus cell for button3 clicks.

	        * beast-gtk/bstpatterneditor.c (bst_pattern_editor_draw_tone): draw
	        empty note contents with a light gc.
	        (bst_pattern_editor_set_focus): readjust selection.

	svn path=/trunk/; revision=182

2000-02-01  Tim Janik 	# 4428f7db6c41ae9f0e3a288e686f65dbf25fb6f9

	new (internal) function.

	Wed Feb  2 05:37:02 2000  Tim Janik  <timj@gtk.org>

	        * bsepattern.[hc]:
	        (bse_pattern_unselect_except): new (internal) function.

	        * *.c: altered seom copyright years.

	svn path=/trunk/; revision=181

2000-02-01  Tim Janik 	# 3c70a44de0fb44c60c1f7cdbcdc7e50edb51da1f

	test procedure plugin for feldspar.

	Wed Feb  2 06:50:46 2000  Tim Janik  <timj@gtk.org>

	        * fldbsepattern.c: test procedure plugin for feldspar.

	svn path=/trunk/; revision=180

2000-01-30  Tim Janik 	# 00ebab3748240eb03d85f2e6f4c6592402216b12

	updates

	svn path=/trunk/; revision=179

2000-01-30  Tim Janik 	# 24c60547721b831c4445e7fcc317e8daaed64456

	fixed bug wrt pattern deletion. handle BseItem params better (search for

	Mon Jan 31 19:05:40 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterneditor.c:
	        (bst_pattern_editor_fetch_pattern_sibling): fixed bug wrt pattern
	        deletion.
	        * beast-gtk/bstparams.[hc]: handle BseItem params better (search for
	        candidates within project).

	svn path=/trunk/; revision=178

2000-01-30  Tim Janik 	# c2d481ddb125fb6a81f3441bdcc8e1c13a4817fd

	play bsesinstrument blocks for synthesis instruments, we still have some

	Mon Jan 31 19:09:37 2000  Tim Janik  <timj@gtk.org>

	        * bsesongsequencer.[hc]:
	        * bsesongmixer.c:
	        * bsevoice.[hc]: play bsesinstrument blocks for synthesis instruments,
	        we still have some fading problems here.

	Thu Jan 27 19:20:45 2000  Tim Janik  <timj@gtk.org>

	        * bsesnet.c:
	        (bse_snet_remove_item): don't reset items, let BseContainer take
	        care of this.

	        * bseproject.c: only rprepare/reset the prject itself for playback, the
	        rest is taken care off by the BseContainer implementation.

	        * bsecontainer.c:
	        (bse_container_prepare): prepare all BseSource children.
	        (bse_container_reset): rest all BseSource children.
	        (bse_container_do_add_item): prepare items if necessary.
	        (bse_container_do_remove_item): reset item if necessary, clear input
	        and output channels for non-container children.

	Mon Jan 24 20:07:48 2000  Tim Janik  <timj@gtk.org>

	        * bseobject.c (bse_object_queue_param_changed): do param_changed
	        notification fully asyncronous from an idle handler (not only
	        compressed for multiple param specs).

	        * bseproject.[hc]:
	        (bse_project_list_nick_paths):
	        (bse_project_item_from_nick_path): new functions to list nick path of
	        all items of a specific type contained in this project, and to find
	        the items again from their nick paths.

	        * bseitem.[hc] (bse_item_make_nick_path): create an item path made up of
	        object names only.

	        * bsecontainer.c: fixed uncross bug.

	        * bsesongsequencer.[hc]:
	        * bsesongmixer.c:
	        * bsevoice.[hc]:
	        recoded the voice allocation scheme, so we keep the association of
	        poly voices with their original channels.
	        major source cleanups, fixed a bunch of bugs.
	        added support for voice inputs from other objects than samples.

	        * bsesong.[hc] (bse_song_update_sequencer): provide possibility for
	        external sequencer syncronization.

	        * icons/mic.*:
	        * bsecapture.[hc]:
	        moved capturing source from plugin dir to BSE proper.

	        * bsepattern.[hc]: s/BseNote/BsePatternNote/.
	        *.[hc]: bunch of BsePatternNote fixups and signedness corrections for
	        notes in general.

	        * bseglobals.h:
	        * bsecontainer.c:
	        * bseheart.c: priority fixups.

	svn path=/trunk/; revision=177

2000-01-30  Tim Janik 	# 732ec6355824faae168d13b6cb7ea67d4cc04c5c

	fixed optimization bug that cause volumes to not take effect sometimes.

	Mon Jan 31 19:08:37 2000  Tim Janik  <timj@gtk.org>

	        * bsemixer.c (bse_mixer_calc_chunk): fixed optimization bug that cause
	        volumes to not take effect sometimes.

	        * icons/mic.*:
	        * bsecapture.[hc]:
	        moved capturing source into BSE proper.

	svn path=/trunk/; revision=176

2000-01-21  Tim Janik 	# 6a4cec823d52b19e9e552b96736c0487b88bb302

	altered GdkPixbuf check to feature -lgdk_pixbuf and optionally

	Fri Jan 21 02:45:14 2000  Tim Janik  <timj@gtk.org>

	        * configure.in: altered GdkPixbuf check to feature -lgdk_pixbuf and
	        optionally -lgnomecanvaspixbuf.

	Thu Jan 20 00:27:53 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_subwindow_new): feature BstSubWindowFlags to
	        configure specific aspects (e.g. destroy_on_hide).

	        * beast-gtk/bstapp.c (bst_app_operate): destroy help windows when
	        closed.

	svn path=/trunk/; revision=175

2000-01-19  Tim Janik 	# 97906851e6048b4413eea597b446a77ac996ff69

	couple of build fixes for older gcc versions.

	Wed Jan 19 16:35:55 2000  Tim Janik  <timj@gtk.org>

	        * couple of build fixes for older gcc versions.

	svn path=/trunk/; revision=174

2000-01-19  Tim Janik 	# 0b9007f500a1a9b0feca3b0c29b183983191325d

	scratch autogenerated PKG_paths.h

	svn path=/trunk/; revision=173

2000-01-18  Tim Janik 	# 989ea716a4b47ef00be82b2943f786eb856102e1

	ding dong

	svn path=/trunk/; revision=172

2000-01-17  Tim Janik 	# e8454285eec9aae9916dea1463604baa2afcf761

	updates

	svn path=/trunk/; revision=171

2000-01-17  Tim Janik 	# 06f4cbd7da9d0e2eb87c6a3dc4535bdeb09501ae

	provide a Help/Keytable dialog.

	Mon Jan 17 21:36:24 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_operate): provide a Help/Keytable
	        dialog.

	        * beast-gtk/bstpatterneditor.[hc] (bst_pattern_editor_class_keydump):
	        dump the current keytable as a string.

	        * beast-gtk/bstfiledialog.[hc] (bst_text_view_from): new function that
	        replaces bst_text_view_from_file() for more flexibility.

	svn path=/trunk/; revision=170

2000-01-17  Tim Janik 	# 4b57368d678a62c6127a1f7b29a89d9cd4204780

	auto-sweep unsused samples.

	Mon Jan 17 15:19:18 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (project_cross_changes): auto-sweep unsused
	        samples.

	        * beast-gtk/bstapp.c (bst_app_add_super): popup sample shell.
	        (bst_app_new): auto-update GUI when supers got added to/removed
	        from the project.
	        (bst_app_reload_supers): don't unecessarily destroy widgets,
	        remeber old page.

	        * beast-gtk/bstsampleshell.[hc]: new sample shell widget (features
	        nothing more than a paramview yet).

	svn path=/trunk/; revision=169

2000-01-17  Tim Janik 	# 6ede186ff2349dfcd427aaa5c82e77fe8d3fdd04

	provide asyncronous notification of cross-link changes through a

	Mon Jan 17 15:01:11 2000  Tim Janik  <timj@gtk.org>

	        * bsedefs.h:
	        * bsecontainer.c: provide asyncronous notification of cross-link
	        changes through a "cross_changes" notifier.

	        * glib-extra.[hc]: added g_slist_remove_any() to walk the whole list
	        and remove items, in case an item got added twice or more times.
	        added G_STRLOC macro that expands to a string, describing its current
	        source file location.

	        * bseitem.[hc]: supply bse_item_has_cross_owners() and
	        bse_item_list_cross_owners(), the return value needs to be
	        g_list_free()ed, no references are held on the items though.

	        * bsecontainer.[hc]: implemented bse_container_cross_forall() to walk
	        all cross references (do *not* modify the cross references during
	        execution of this function).

	        * bsesongmixer.c (bse_song_mixer_activate_voice): deal with NULL samples
	        in instruments.

	        * bsesongsequencer.c:
	        * bsesongmixer.c (bse_song_mixer_fill_buffer): namespace fixups.

	Mon Jan 17 12:59:16 2000  Tim Janik  <timj@gtk.org>

	        * bsechunk.[hc]: provide bse_chunk_get_trigger_state() that returns
	        whether a specified track of a chunk carries a positive trigger signal
	        or not.

	svn path=/trunk/; revision=168

2000-01-17  Tim Janik 	# 079640506344a989fbfb221f16d3c2e2afa22279

	added edge-sensitive trigger input channel.

	Mon Jan 17 16:11:03 2000  Tim Janik  <timj@gtk.org>

	        * davsyndrum.[hc]: added edge-sensitive trigger input channel.

	svn path=/trunk/; revision=167

2000-01-17  Tim Janik 	# 13c5de35cc8a54565a680a88fd49c950937271fb

	popup sample shell. (bst_app_new): auto-update GUI when supers got added

	Sun Jan 16 07:33:35 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_add_super): popup sample shell.
	        (bst_app_new): auto-update GUI when supers got added to/removed
	        from the project.
	        (bst_app_reload_supers): don't unecessarily destroy widgets,
	        remeber old page.

	        * beast-gtk/bstsampleshell.[hc]: new sample shell widget (features
	        nothing more than a paramview yet).

	svn path=/trunk/; revision=166

2000-01-17  Tim Janik 	# 71560f4a0ead55946bb80858fbe7dcecd6160101

	added DavSynDrum module, a synthesized drum generator, provided by David

	Mon Jan 17 11:15:37 2000  Tim Janik  <timj@gtk.org>

	        * davsyndrum.[hc]: added DavSynDrum module, a synthesized drum
	        generator, provided by David A. Bartold <foxx@mail.utexas.edu>
	        (minor updates from my part to honour BSE_MIX_FREQ after _prepare()
	        and to adjust parameter resolutions).

	        * davorgan.c (dav_organ_set_param): fixed a minor bug i introduced.

	svn path=/trunk/; revision=165

2000-01-17  Tim Janik 	# 0c05e124dccf6dad1aff2cc83facf5ee87853d97

	provide BSE_CLIP_SAMPLE_VALUE().

	Mon Jan 17 11:07:16 2000  Tim Janik  <timj@gtk.org>

	        * bsehunkmixer.h: provide BSE_CLIP_SAMPLE_VALUE().

	        * bsehunkmixer.c: make use of BSE_CLIP_SAMPLE_VALUE().

	        * bseglobals.h: provide BSE_MIX_FREQ_f, BSE_TRACK_LENGTH_f,
	        BSE_MIX_FREQ_d and BSE_TRACK_LENGTH_d.

	Sun Jan 16 06:36:54 2000  Tim Janik  <timj@gtk.org>

	        * bsecontainer.[hc]:
	        (bse_container_shutdown): destroy remaining cross references.
	        (bse_container_do_remove_item): uncross item when removing it.
	        (bse_container_cross_ref): install a cross reference.
	        (bse_container_cross_unref): destroy a cross reference.
	        (bse_container_uncross_item): destroy all cross references that
	        contain item (or any of its children) and another item that
	        is not part of the hirarchy branch spawned by item.

	        * bseitem.[hc]:
	        (bse_item_cross_ref):
	        (bse_item_cross_unref): new functions to maintain cross references
	        (a special kind of weak reference between two hirarchy branches)
	        between items within the same project.

	        * bseinstrument.c (bse_instrument_set_param): use cross references to
	        keep a pointer to the sample.

	svn path=/trunk/; revision=164

2000-01-16  Tim Janik 	# 78e291ed65cab29e26711572eea3496539f6203a

	put davorgan.bse in there

	svn path=/trunk/; revision=163

2000-01-16  Tim Janik 	# 693b9938da2f911703ee084953a21791903d305b

	incorporated changes from Dave Seidel <dave@superluminal.com>: # 14 Jan

	Sun Jan 16 00:24:31 2000  Tim Janik  <timj@gtk.org>

	        * docs/Makefile.am:
	        * docs/makefaq.py: incorporated changes from Dave Seidel
	        <dave@superluminal.com>:
	        # 14 Jan 2000 - added command line processing, error handling,
	        #               comments

	Sat Jan 15 23:54:40 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (toolbar_add_radio): instead of stripping
	        "Bse" from the toolbar buttons, strip any kind of namespace prefix.

	svn path=/trunk/; revision=162

2000-01-16  Tim Janik 	# e17c86b4fc112fb64b40e24ff1bfd49f392b690c

	added DavOrgan module, an additive organ synthesizer provided by David A.

	Sun Jan 16 02:51:06 2000  Tim Janik  <timj@gtk.org>

	        * davorgan.[hc]: added DavOrgan module, an additive organ
	        synthesizer provided by David A. Bartold <foxx@mail.utexas.edu>.
	        did overall clean up for coding style etc.

	svn path=/trunk/; revision=161

2000-01-15  Tim Janik 	# 7e7175cde0902557ca0601fb30bbbe369c9dafcb

	synthesis network to test the new BseMixer plugin.

	Sat Jan 15 20:03:19 2000  Tim Janik  <timj@gtk.org>

	        * test/bsemixer-test.bse: synthesis network to test the new
	        BseMixer plugin.

	svn path=/trunk/; revision=160

2000-01-15  Tim Janik 	# 37b962e63e570edb69cfbae62614c2897d79a313

	renamed bsemixer.[hc] to bsehunkmixer.[hc]. added

	Sat Jan 15 18:42:28 2000  Tim Janik  <timj@gtk.org>

	        * bsemixer.[hc]:
	        * bsehunkmixer.[hc]: renamed bsemixer.[hc] to bsehunkmixer.[hc].
	        added bse_hunk_clip_mix_buffer() and bse_mix_buffer_fill().

	        * bseheart.c (bse_heart_mix_chunks): use bse_hunk_clip_mix_buffer().
	        * bsesongsequencer.c (bse_song_sequencer_fill_hunk): same here.

	        * bsesnet.[hc]: added master volume (finally!).

	svn path=/trunk/; revision=159

2000-01-15  Tim Janik 	# dc4d43f2fdf1c3def2c7c39b5c8826091ab3e766

	new source which will mix up to four input channels at specified volumes

	Sat Jan 15 19:51:16 2000  Tim Janik  <timj@gtk.org>

	        * bsemixer.[hc]: new source which will mix up to four input channels
	        at specified volumes together.

	        * *.c: adapted a couple plugins to include bsehunkmixer.h and make use
	        of bse_hunk_clip_mix_buffer(). enforced usage of BSE_MAX_SAMPLE_VALUE
	        instead of hardcoded numbers.

	svn path=/trunk/; revision=158

2000-01-14  Tim Janik 	# fed00c5aa427bff436d5b52a5f85f246edd65627

	minor fix

	svn path=/trunk/; revision=157

2000-01-14  Tim Janik 	# 92f89a558c4284143d21a128081e1335c23b3bf8

	//beast.gtk.org.

	Fri Jan 14 15:06:29 2000  Tim Janik  <timj@gtk.org>

	        * released beast-0.3.1.tar.gz on http://beast.gtk.org.

	svn path=/trunk/; revision=155

2000-01-14  Tim Janik 	# 7158495fc74593e8c367301d99f84169e2588713

	check for python and fold, since we use them in the docs/ dir for file

	Fri Jan 14 02:41:14 2000  Tim Janik  <timj@gtk.org>

	        * configure.in: check for python and fold, since we use them in the
	        docs/ dir for file generation.

	        * docs/Makefile.am:
	        * docs/faq.src:
	        * docs/text.1.faq:
	        * docs/text.2.faq:
	        * docs/makefaq.py:
	        generate faq.txt now, files and build setup provided by Dave Seidel
	        <dave@superluminal.com>.

	svn path=/trunk/; revision=154

2000-01-14  Tim Janik 	# 7e19193fc108cd17decedaeddd72431be3a8e44e

	added compatibility defines for ALSA lib < 0.5.0 to alias

	Fri Jan 14 01:11:47 2000  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c: added compatibility defines for ALSA lib < 0.5.0
	        to alias snd_pcm_playback_drain(), snd_pcm_channel_flush() work around
	        lack of snd_card_get_longname() and snd_card_get_name().
	        fixed up the rest to work with 0.5.0.

	svn path=/trunk/; revision=153

2000-01-13  Tim Janik 	# c2e88823148d39786358ef854cce62fb95d5d63d

	added debugging ability to disable ALSA driver (since we give it

	Thu Jan 13 19:10:19 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main):
	        * beast-gtk/bstgconfig.[hc]: added debugging ability to disable
	        ALSA driver (since we give it precedence over OSS), so the OSS
	        code can be tested with ALSA's OSS emulation.

	svn path=/trunk/; revision=152

2000-01-13  Tim Janik 	# 7166017ea88b9579a43b719d0efdc9aa0a0b04a2

	new object, taking over part of BsePcmDevice's responsibilities as its

	Thu Jan 13 18:12:51 2000  Tim Janik  <timj@gtk.org>

	        * bsedevice.[hc]: new object, taking over part of BsePcmDevice's
	        responsibilities as its parent type.

	        * bsepcmdevice.[hc]:
	        * bsepcmdevice-oss.[hc]:
	        * bsepcmdevice-alsa.[hc]: minor adaptions because of the hirarchy
	        change.

	svn path=/trunk/; revision=151

2000-01-13  Tim Janik 	# dc93a32e735b97799872be7350d8a6d1fadb957f

	grrr, automake me harder. masochismus

	svn path=/trunk/; revision=150

2000-01-13  Tim Janik 	# 7c95f73cda768f61f45f663afba5be8b6753594e

	blub

	svn path=/trunk/; revision=149

2000-01-13  Tim Janik 	# 54bb9decb1fd673a2814626764346f03f66e0065

	added missing BSE_TYPE_PARAM_ENUM support.

	Wed Jan 12 23:51:23 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_apply):
	        (bst_param_update):
	        (bst_param_create): added missing BSE_TYPE_PARAM_ENUM support.

	svn path=/trunk/; revision=148

2000-01-13  Tim Janik 	# 56ad81674cd2ceeda502f042054511586d9798b6

	exported enum types support.

	Wed Jan 12 23:11:31 2000  Tim Janik  <timj@gtk.org>

	        * bseplugin.[hc]: exported enum types support.

	        * bseexports.h: provide support for auto-generated exported enum
	        types.

	        * bseenums.[hc]: provide bse_enum_type_register() and
	        bse_enum_complete_info () to register exported enums.

	        * bsestorage.c (bse_storage_parse_param_value): humpf, flags value
	        parsing case was missing.
	        (bse_storage_put_param): store enum values by names to avoid
	        ambiguities.

	        * mkenums.pl (parse_trigraph): allow white spaces in nick names.

	svn path=/trunk/; revision=147

2000-01-13  Tim Janik 	# 1abd5138a92f69952d627a8c166519df9c59299f

	export BseGenOscWaveType to BSE and add a parameter spec for the wave

	Wed Jan 12 23:45:39 2000  Tim Janik  <timj@gtk.org>

	        * bsegenosc.[hc]: export BseGenOscWaveType to BSE and add a parameter
	        spec for the wave form, made the wave form selection radio buttons
	        pure GUI items.

	        * listplugins.sh: feature BSE_EXPORT_AND_GENERATE_ENUMS() in cfiles,
	        write out %.enums creation dependancies.

	        * Makefile.am: added %.enums: %.h generation rule for plugin enum types.
	        support build sources in general.

	svn path=/trunk/; revision=146

2000-01-09  Tim Janik 	# 9bb3ceb40b8edb4e211cc82aac707862f2c077cc

	same here

	svn path=/trunk/; revision=145

2000-01-09  Tim Janik 	# d1cecb0ecf72ba14b96213b32c6ac346cf3aca2f

	minor fix

	svn path=/trunk/; revision=144

2000-01-09  Tim Janik 	# a7f060f1c64b944c4bf734c1b76ffdc9dc90bfbd

	enforce real trigraphs (again), so /*< skip >*/ is recognized while /* <

	Sun Jan  9 22:58:42 2000  Tim Janik  <timj@gtk.org>

	        * mkenums.pl: enforce real trigraphs (again), so /*< skip >*/
	        is recognized while /* < skip > */ is not.

	        * *.h: bunch of trigraphs adapted.

	svn path=/trunk/; revision=143

2000-01-09  Tim Janik 	# cedb4eeaf3c5ba171380708f1f499c52df1648ad

	un Jan  9 13:42:01 2000  Tim Janik  <timj@gtk.org>

	        * bsegconfig.c (bse_gconfig_do_default_revert):
	        (bse_gconfig_revert): walk *all* classes when reverting the parameters,
	        not only the topmost one.

	        * bseobject.c (bse_object_do_set_name): don't pass destroy notifier when
	        name == NULL.

	svn path=/trunk/; revision=142

2000-01-09  Tim Janik 	# 48ca6c621fb3eb762efe59091449bcb2313437be

	implemented BEAST configuration settings with a BstGlobals struct and a

	Sun Jan  9 12:51:23 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstgconfig.[hc]: implemented BEAST configuration settings
	          with a BstGlobals struct and a BstGConfig object.

	        * beast-gtk/bstpreferences.[hc]: feature BstGConfig object by adding a
	          notebook page for the object settings derived frmo BSE_TYPE_GCONFIG.

	        * beast-gtk/main.c: cache the keytable in the config settings, so we
	        don't need to requery it upon every startup (and risk triggering the
	        XKB bugs).
	        (bst_key_table_from_xkb_symbol): seperated out the xkb_symbol->keypatch
	        logic from bst_key_table_from_xkb().

	Sun Jan  9 07:28:49 2000  Tim Janik  <timj@gtk.org>

	        * NEWS: updates for version 0.3.1.

	        * configure.in: up to version 0.3.1.

	svn path=/trunk/; revision=141

2000-01-09  Tim Janik 	# 45aa7c1542cd2749bcf837a0c66198e4875f137d

	moved the BseGConfig object from bseglobals.[hc]. implement object

	Sun Jan  9 12:49:29 2000  Tim Janik  <timj@gtk.org>

	        * bsegconfig.[hc]: moved the BseGConfig object from bseglobals.[hc].
	        implement object functions as methods in class so they can be overridden.

	        * bseglobals.[hc]: cleanups, provide private interface for BseGConfig.

	        * bseenums.[hc] (bse_error_from_errno): new function to map errno values
	        to BSE_ERROR_* values.

	svn path=/trunk/; revision=140

2000-01-08  Tim Janik 	# f03a482c56d849e2691fc9577a407af6bc32f3d2

	*** empty log message ***

	svn path=/trunk/; revision=139

2000-01-07  Tim Janik 	# 8c5519b97b3cd90f86dad79c0472af7c13e673f6

	view faq.txt, bse-heart.txt and bse-networks.txt from the docs dir as help

	Sat Jan  8 02:02:03 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstapp.c (bst_app_operate): view faq.txt, bse-heart.txt and
	        bse-networks.txt from the docs dir as help screens.

	        * beast-gtk/bstfiledialog.[hc] (bst_text_view_from_file): new function
	        to view text files.

	Tue Jan  4 20:43:19 2000  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstheartmonitor.c (bst_heart_monitor_init): don't poketypoke
	        values into foreign objects, use bst_param_view_set_mask() instead.
	        * beast-gtk/bstpreferences.c (bst_preferences_set_gconfig): dito.

	        * beast-gtk/bstparamview.[hc]:
	        (bst_param_view_set_object): small bug fix.
	        (bst_param_view_new_with_base): nuked.
	        (bst_param_view_new): allow NULL objects.
	        (bst_param_view_set_mask): new function to allow setting of specifc
	        type/pattern masks to determine parameters to build from (does not
	        do automatic rebuilds).

	Mon Jan  3 17:27:07 2000  Tim Janik  <timj@gtk.org>

	        * Makefile.am: rebuild a PKG_paths.h file everytime the Makefile
	        changed, here we provide C defines for all the relevant Makefile
	        paths.

	        * acconfig.h: make PKG_config.h include PKG_paths.h.

	        * configure.in: compose and export bsesampledatadir, beastdocsdir and
	        bseplugindir.

	        * beast-gtk/Makefile.am: removed building of bstconfigpaths.h,
	        dropped TAGS rule for now.

	        * docs/Makfile.am: install selected text files.

	Mon Jan  3 06:47:50 2000  Tim Janik  <timj@gtk.org>

	        * docs/faq.txt: new file.

	        * beast-gtk/bstxkb.[hc]: minor include fixes.

	svn path=/trunk/; revision=138

2000-01-07  Tim Janik 	# f800faf61373b2c7e30abc70e32fe2d165900b95

	use ALSA's snd_pcm_channel_go() to retrigger input and output.

	Fri Jan  7 23:15:08 2000  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-alsa.c (bse_pcm_device_alsa_retrigger): use ALSA's
	        snd_pcm_channel_go() to retrigger input and output.

	        * bseheart.c (bse_heart_dispatch): be a bit laxer in overrun detection,
	        i.e. allow two (+1) extra input chunks.

	        * bsepcmdevice.[hc]: scratched obsolete in_playback() method.

	        * bsepcmdevice-alsa.c (bse_pcm_device_alsa_setup): operate in
	        non-blocking mode.

	        * bsepcmdevice-alsa.c (bse_pcm_device_alsa_update_state): fixed bug,
	        return amount of bytes left to write.

	Tue Jan  4 20:25:44 2000  Tim Janik  <timj@gtk.org>

	        * bsetype.[hc] (bse_type_next_base): new function that works like
	        bse_type_parent() but in the opposite direction for a given
	        parent<->child inheritance path.

	Mon Jan  3 17:08:08 2000  Tim Janik  <timj@gtk.org>

	        * Makefile.am: removed bseconfigpaths.h build rule.
	        removed building of TAGS file for now.

	svn path=/trunk/; revision=137

2000-01-07  Tim Janik 	# d8a1a2285b81e6e7e36b721eb1a34bc7974829d6

	added adjustable compressor.

	Fri Jan  7 23:26:26 2000  Tim Janik  <timj@gtk.org>

	        * bsecompressor.[hc]: added adjustable compressor.

	Mon Jan  3 16:50:55 2000  Tim Janik  <timj@gtk.org>

	        * Makefile.am (plugindir): use value from $(bseplugindir).

	svn path=/trunk/; revision=136

2000-01-03  Tim Janik 	# 631319f8de545620bac857b27ed8524e45023a17

	new file.

	Mon Jan  3 06:47:50 2000  Tim Janik  <timj@gtk.org>

	        * docs/faq.txt: new file.

	        * beast-gtk/bstxkb.[hc]: minor include fixes.

	svn path=/trunk/; revision=135

1999-12-31  Tim Janik 	# 0cc96cc5bdff84e17c53c0e22bc256790fa4eaa6

	//beast.gtk.org.

	Fri Dec 31 07:39:12 1999  Tim Janik  <timj@gtk.org>

	        * released beast-0.3.0.tar.gz on http://beast.gtk.org.

	svn path=/trunk/; revision=134

1999-12-31  Tim Janik 	# 48f8f3d570a5413cd7095a3d67ae4c8f22f1ddce

	updates to README and added test/Makefile to configure.in

	svn path=/trunk/; revision=132

1999-12-31  Tim Janik 	# 84672dbc7d257591e7ac95f03658197df5be5be0

	have this in cvs as well

	svn path=/trunk/; revision=131

1999-12-31  Tim Janik 	# 4299d01a4f78fac0d7b765f6c4176c8b0e88feef

	shut up cvs

	svn path=/trunk/; revision=130

1999-12-31  Tim Janik 	# 3958f53070b48896c93e1206bbc732a79d236f4a

	add testsubdir

	svn path=/trunk/; revision=129

1999-12-31  Tim Janik 	# b70717e46f8dd59b4d25015c8ba3e5cafba216c0

	put a Makefile.am here

	svn path=/trunk/; revision=128

1999-12-30  Tim Janik 	# 19e4e27441d514128b09cfcac4e15d769a1ae55a

	small bug fix.

	Fri Dec 31 00:07:03 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstheartmonitor.c (bst_heart_monitor_set_heart): small bug
	        fix.

	svn path=/trunk/; revision=127

1999-12-30  Tim Janik 	# 84f8bdabefd1698ccbc0e50fb2ae48baa5bf6cf0

	away with that

	svn path=/trunk/; revision=126

1999-12-30  Tim Janik 	# 3a33ff0bd04dd0bddac2221c54230c0f505767ac

	up to version 0.3.0. install plugins in $libdir/bse/v* with major, minor

	Thu Dec 30 22:27:40 1999  Tim Janik  <timj@gtk.org>

	        * configure.in:
	        * beast-gtk/Makefile.am:
	        * PKG_config.h:
	        up to version 0.3.0. install plugins in $libdir/bse/v* with major,
	        minor _and_ micro version encoded.
	        nuked $beastpdatadir.
	        define BST_VERSION.

	        * more release preparation.

	svn path=/trunk/; revision=125

1999-12-30  Tim Janik 	# 6146bec2ef1e96dfd64cebffac3302948ee924a6

	prefix flag values, provide one to flag default value storage.

	Thu Dec 30 19:19:22 1999  Tim Janik  <timj@gtk.org>

	        * bsestorage.[hc]: prefix flag values, provide one to flag default
	        value storage.

	        * bseobject.c (bse_object_do_store_private): save object parameters
	        even if tehy default when BSE_STORAGE_PUT_DEFAULTS (storage).

	svn path=/trunk/; revision=124

1999-12-30  Tim Janik 	# 5f0d2d7ba4311a3ca70a175e60da39fcc8602d2c

	cleaned up debugging code, s/BST_DEBUG/BST_IF_DEBUG()/, according to the

	Thu Dec 30 05:33:54 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdefs.h:
	        * beast-gtk/bstmain.c:
	        * beast-gtk/bstsamplerepo.c:
	        cleaned up debugging code, s/BST_DEBUG/BST_IF_DEBUG()/, according
	        to the BSE_IF_DEBUG() scheme.

	        * beast-gtk/bstmain.c: clean up the PCM devices correctly.
	        feature BST_DEBUG, BST_NO_DEBUG, --bst-debug and --bst-no-debug
	        besides their "beast" variants.

	svn path=/trunk/; revision=123

1999-12-30  Tim Janik 	# 3e5a307b1efcb2130791a3628cd4479279042b03

	stupid cvs... but anyways, we're still alive

	svn path=/trunk/; revision=122

1999-12-30  Tim Janik 	# 616e89167b1f79ed5025a1a3ccd99ecc3881f35c

	provide function to perform necessary cleanups after all sources got

	Thu Dec 30 05:47:24 1999  Tim Janik  <timj@gtk.org>

	        * bseheart.c (bse_heart_unregister_all_devices): provide function to
	        perform necessary cleanups after all sources got detached.

	svn path=/trunk/; revision=121

1999-12-30  Tim Janik 	# aabde2dabb9e9d2854dd4c51406aa8a0300f64e6

	conditionalize workaround for <=1.2.6

	svn path=/trunk/; revision=120

1999-12-30  Tim Janik 	# 2520b0cb887f53ebaed382a6f4d2cc1eace18a15

	work around a size allocation/background computation bug in gtkhscale.c.

	Thu Dec 30 04:59:54 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparamview.c (bst_param_view_rebuild): work around a size
	        allocation/background computation bug in gtkhscale.c.

	svn path=/trunk/; revision=119

1999-12-30  Tim Janik 	# 1f6da2475014f4437e94186c085079b52fbabdde

	disabled procedure menu, still test code currently.

	Thu Dec 30 03:25:43 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstpatterndialog.c (pe_cell_clicked): disabled procedure
	        menu, still test code currently.

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_toolbar): removed
	        test hackery (useless song test icon).

	svn path=/trunk/; revision=118

1999-12-30  Tim Janik 	# 276ddebc4232d0a4f63d8e10f137135d14bf0222

	don't provide spinners if the stepping value is 0.

	Wed Dec 29 23:38:15 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): don't provide spinners if
	        the stepping value is 0.

	        * beast-gtk/bstheartmonitor.c (bst_heart_monitor_init): skip BseObject
	        specific parameters from GUI.

	        * beast-gtk/bstparamview.[hc] (bst_param_view_new_with_base): new
	        function to skip parameters below base type.

	        * beast-gtk/bstpreferences.[hc]: new dialog to present preference values.

	        * beast-gtk/bstapp.c: provide a File/DialogPreferences menu item to
	        popup the preferences dialog.

	svn path=/trunk/; revision=117

1999-12-30  Tim Janik 	# 8117423d5cc6d49545bb7c2bbd82a5001bcf4229

	added BseGConfig object that exports the BseGlobals values through its

	Wed Dec 29 22:41:27 1999  Tim Janik  <timj@gtk.org>

	        * bseglobals.[hc]: added BseGConfig object that exports the BseGlobals
	        values through its parameter interface, and provides notification for
	        when BseGlobals are locked/unlocked.

	        * bseglobals.c (bse_globals_unlock): clear up hunk/chunk memory pool
	        when BseGlobals are unlocked.

	        * bseheart.c: squeezy squeezy, the GSource was stealing a BseHeart ref
	        count that it didn't own.

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_update_state): grr, the es1371
	        driver in 2.3.34 can report audio_buf_info.bytes greater than
	        audio_buf_info.fragsize * audio_buf_info.fragstotal, which could
	        cause int wrap arounds in calculations we perform.

	svn path=/trunk/; revision=116

1999-12-29  Tim Janik 	# c26ce78eeaf47785fabc9739628187de05a8f10d

	if no host object to watch for destruction is given, add an automatic quit

	Wed Dec 29 14:37:40 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_subwindow_new): if no host object to watch
	        for destruction is given, add an automatic quit handler.

	        * beast-gtk/bstapp.c: provide a File/Dialog/Device Monitor menu item
	        to popup BseHeart dialog.

	        * beast-gtk/bstheartmonitor.[hc]: new files coming with a preliminary
	        dialog to edit BSE's heart latency.

	        * docs/bse-heart.txt: a bit of restructuring and a bunch of minor
	        corrections and changes.

	svn path=/trunk/; revision=115

1999-12-29  Tim Janik 	# 01e61ab25d992ea7f682dd79c3f73bdff5d12a0f

	completely revised the GSource part according to docs/bse-heart.txt,

	Wed Dec 29 14:36:17 1999  Tim Janik  <timj@gtk.org>

	        * bseheart.[hc]: completely revised the GSource part according to
	        docs/bse-heart.txt, highlights are over- and under-run detection
	        with retriggering and variable latency setting.
	        (bse_heart_mix_chunks): changed semantics, we unref and free the
	        chunk list now and return a newly created chunk.

	        * bsepcmdevice.[hc]: removed a lot of cruft such as the _iready() and
	        oready() interfaces and the capture cache.
	        implemented high level data processing API with input and output queues
	        according to docs/bse-heart.txt. added ability to retrigger input and
	        output for over-/under-run situations.

	        * bsepcmdevice-oss.c:
	        * bsepcmdevice-alsa.c: bug fixes, minor adaptions to the BsePcmDevice
	        structure changes, more debug messages.

	svn path=/trunk/; revision=114

1999-12-29  Tim Janik 	# fc687cfcc688652096dc00cfea3e0c801dd5fee3

	removed capture cache cludge, with bse_pcm_device_iqueue_peek() we've got

	Wed Dec 29 12:19:34 1999  Tim Janik  <timj@gtk.org>

	        * bsecapture.c (bse_capture_calc_chunk): removed capture cache cludge,
	        with bse_pcm_device_iqueue_peek() we've got a sane interface now.

	svn path=/trunk/; revision=113

1999-12-27  Tim Janik 	# 58b86b682150dbf472bfe43a6d53cc9820f854ab

	check if the canvas link we received a button click for is actually the

	Mon Dec 27 14:40:23 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): check if the
	        canvas link we received a button click for is actually the tag part
	        of a source's input or output channel area. in that case we operate
	        on the canvas source.

	        * beast-gtk/bstcanvaslink.[hc] (bst_canvas_link_has_canvas_source_at):
	        new function to determine canvas source from a canvas link's start or
	        end tag.
	        (bst_canvas_link_event): grrr, don't returned handled=TRUE for
	        buttons!=2 (i.e. when we did *not* handle the release).

	svn path=/trunk/; revision=112

1999-12-27  Tim Janik 	# b55da0ee7e4196efb26e974fc7965189b241d499

	feature self-modulation.

	Mon Dec 27 18:33:01 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.[hc]: feature self-modulation.

	svn path=/trunk/; revision=111

1999-12-26  Tim Janik 	# 33f152812658611eb38bb13415860c2f67dbf480

	added highpass, corrected displayed degree value (*2).

	Sun Dec 26 22:42:45 1999  Tim Janik  <timj@gtk.org>

	        * bsefirfilter.[hc]: added highpass, corrected displayed
	        degree value (*2).

	svn path=/trunk/; revision=110

1999-12-26  Tim Janik 	# eeb78d8d4ff3ffecadea0feea46b6ad0af83c9ac

	store the canvas item that holds the source' icon and update it if

	Sun Dec 26 19:08:28 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.[hc]: store the canvas item that holds the
	        source' icon and update it if necessary.

	svn path=/trunk/; revision=109

1999-12-26  Tim Janik 	# 9bc7cf15c8212b99a323fabc639c1a33648dc0d2

	finally introduce a get_icon() class function and provide icon_changed

	Sun Dec 26 18:51:35 1999  Tim Janik  <timj@gtk.org>

	        * bseobject.[hc]: finally introduce a get_icon() class function and
	        provide icon_changed notification if necessary.

	svn path=/trunk/; revision=108

1999-12-26  Tim Janik 	# d73ffc66fc211fca49eb4deb47bd6eab242cd569

	notify icon_changed when entering/ leaving subtract mode.

	Sun Dec 26 19:23:58 1999  Tim Janik  <timj@gtk.org>

	        * bseadder.c (bse_adder_set_param): notify icon_changed when entering/
	        leaving subtract mode.
	        (bse_adder_do_get_icon): override parent class function to return a
	        different icon when in subtract mode.

	Sun Dec 25 01:37:24 1999  Tim Janik  <timj@gtk.org>

	        * bseadder.[hc]: feature subtract mode instead of adding (for olaf ;).

	svn path=/trunk/; revision=107

1999-12-24  Tim Janik 	# b3e862c33961d7e80aa40a54038226f6bccf81d5

	new file describing how BSE's internal loop works, the syncronization

	Fri Dec 24 15:37:11 1999  Tim Janik  <timj@gtk.org>

	        * docs/bse-heart.txt: new file describing how BSE's internal loop works,
	        the syncronization issues araising there, and how we currently handle
	        them.

	        * docs/Makefile.am (EXTRA_DIST): added bse-heart.txt.

	svn path=/trunk/; revision=106

1999-12-23  Tim Janik 	# 27cfcc04ed3d53c4c0773ea0f12805351a300638

	do not bail out because opening of pcm devices failed due to

	Wed Dec 22 19:01:56 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): do not bail out because opening of pcm
	        devices failed due to BSE_ERROR_DEVICE_BUSY.

	svn path=/trunk/; revision=105

1999-12-23  Tim Janik 	# 6d492c583b193059e8842b182d8777c7bf80937d

	open() the device always non-blocking, since newer kernels apparently

	Wed Dec 22 18:57:10 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_open):
	        (bse_pcm_device_oss_setup): open() the device always non-blocking, since newer
	        kernels apparently don't return EBUSY upon opening anymore.

	svn path=/trunk/; revision=104

1999-12-21  Tim Janik 	# 5a396eefc5eea2ae733d4c693e70ec41062d6552

	provide button3 popup by default to close window (should have a close

	Tue Dec 21 20:48:45 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (bst_subwindow_new): provide button3 popup by
	        default to close window (should have a close button also i guess).

	svn path=/trunk/; revision=103

1999-12-21  Tim Janik 	# 316a95931ed724a57f00139aced8a0bbe3d055e7

	new file that contains (corrected) information merged from bse-ep-net.txt

	Tue Dec 21 09:05:01 1999  Tim Janik  <timj@gtk.org>

	        * docs/bse-networks.txt: new file that contains (corrected) information
	        merged from bse-ep-net.txt and bse-pool-sources.txt.

	        * docs/bse-typesystem.txt: merged with stuff from bse-concept.txt,
	        minor corrections and additions (procedure types).

	        * docs/bse-data-v1.txt: major corrections, supplied description
	        of the binary appendix layout.

	        * docs/bse-concept.txt:
	        * docs/bse-ep-net.txt:
	        * docs/bse-pool-sources.txt: nuked.

	svn path=/trunk/; revision=102

1999-12-21  Tim Janik 	# 0bf75baa871a8a6ac169edde1cf78a3f0c176beb

	bunch o fixups

	svn path=/trunk/; revision=101

1999-12-21  Tim Janik 	# 373e54cd405d472b0320b548415f7c03c283a0e5

	feature canvas link views and popup menu.

	Tue Dec 21 07:16:52 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): feature canvas
	        link views and popup menu.

	        * beast-gtk/bstcanvaslink.[hc]: implemented canvas link view popup.

	        * beast-gtk/bstmain.c: more usefull convenience functions to popup
	        subwindows.

	svn path=/trunk/; revision=100

1999-12-21  Tim Janik 	# 5fecf444735bf5b89dfd330c54cb8cf8ee0c9bcf

	added convenience function.

	Tue Dec 21 06:54:26 1999  Tim Janik  <timj@gtk.org>

	        * bseobject.[hc] (bse_object_get_name_or_type): added convenience function.

	svn path=/trunk/; revision=99

1999-12-17  Tim Janik 	# 25a0767b56b0bad34a0183b69e9e07745f4d563d

	use parameter nick name, removed ugly bst_rcarg_params_use_tip_name hack.

	Fri Dec 17 17:01:00 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (_GROUP_ADD_NAMED_OBJECT): use parameter nick
	        name, removed ugly bst_rcarg_params_use_tip_name hack.

	svn path=/trunk/; revision=98

1999-12-17  Tim Janik 	# 998565f34a68f5f253b500a3dc71541b0cfc4af1

	added parameter nick name for GUI uses. bunch of adaptions to

	Fri Dec 17 16:57:59 1999  Tim Janik  <timj@gtk.org>

	        * bseparam.[hc]: added parameter nick name for GUI uses.
	        * *.c: bunch of adaptions to bse_param_spec_* () calls to supply nick names.

	svn path=/trunk/; revision=97

1999-12-17  Tim Janik 	# a2ffe03b1a22750cc0cf0c49ee1983a848fae721

	use chunk_new_orphan() not chunk_new_foreign(), since we allocated the

	Fri Dec 17 17:53:18 1999  Tim Janik  <timj@gtk.org>

	        * pluged bad memory leaks:
	        * bsemult.c (bse_mult_calc_chunk):
	        * bseadder.c (bse_adder_calc_chunk): use chunk_new_orphan() not
	        chunk_new_foreign(), since we allocated the hunk and don't
	        provide it from static data.

	Fri Dec 17 17:26:12 1999  Tim Janik  <timj@gtk.org>

	        * greeting.c: (test file anyways)
	        * bsegenosc.c:
	        * bsefirfilter.c: adapted bse_param_spec* () calls to supply nick names.

	svn path=/trunk/; revision=96

1999-12-17  Tim Janik 	# 9d19dcdbc408d84d2837619d6cf6bb6f4f37f443

	new function to fill a hunk with a value.

	Fri Dec 17 08:48:29 1999  Tim Janik  <timj@gtk.org>

	        * bsemixer.[hc] (bse_hunk_fill): new function to fill a hunk with a
	        value.

	svn path=/trunk/; revision=95

1999-12-17  Tim Janik 	# 6eac12cbaa364c1be3f715f14648e65f010203e6

	added multiplier source to fold signals.

	Fri Dec 17 10:43:54 1999  Tim Janik  <timj@gtk.org>

	        * bsemult.[hc]: added multiplier source to fold signals.

	        * bseadder.[hc]: added adder source to sum up signals.

	svn path=/trunk/; revision=94

1999-12-16  Tim Janik 	# 56664fc48a1f0d94736c8cfb57da20d6ce2ddb88

	return a sorted list of file names.

	Thu Dec 16 10:08:25 1999  Tim Janik  <timj@gtk.org>

	        * bseplugin.c (bse_plugin_dir_list_files): return a sorted list of
	        file names.

	svn path=/trunk/; revision=93

1999-12-16  Tim Janik 	# 5f25713a101fabccd3c659b4f348d9945a636fa9

	group frequency parameters.

	Thu Dec 16 10:15:15 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.c (bse_gen_osc_class_init): group frequency parameters.

	svn path=/trunk/; revision=92

1999-12-16  Tim Janik 	# a8b7ca9a7492b4ff4da8235c1aa81e8a844ae55b

	changed the basic layout container from hboxes to table, so we have a sane

	Thu Dec 16 06:55:44 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c: changed the basic layout container from hboxes
	        to table, so we have a sane GUI layout (finally). we are still missing
	        a dial widget though.

	svn path=/trunk/; revision=91

1999-12-16  Tim Janik 	# 9dd782b3198754d8439dd2122b2574abe8586b4f

	group cut off parameters.

	Thu Dec 16 08:08:35 1999  Tim Janik  <timj@gtk.org>

	        * bsefirfilter.c (bse_fir_filter_class_init): group cut off parameters.

	        * bsegenosc.[hc]: removed amplitude modulation input channel.

	svn path=/trunk/; revision=90

1999-12-12  Tim Janik 	# bbf0baa3fca6aa010f846fa64cfc6596cf560fea

	added a bunch of new icons (based on stock icons from tigert) required for

	Sun Dec 12 12:07:38 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/icons/*: added a bunch of new icons (based on stock icons
	        from tigert) required for menu items.

	        * beast-gtk/bstsupershell.c (bst_super_shell_name_set): prefix the
	        super name with its type for the notebook tab label.

	        * beast-gtk/bstmenus.[hc]: added bst_choice_* interface to create
	        small menus on the fly for the user to make a quick choice.

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): made button1
	        *toggle* source view visibility. added button3 menu (finally).

	        * beast-gtk/bstparam.c (bst_param_set_object): use destroy notification
	        instead of reference counting.

	        * beast-gtk/bstparamview.c (bst_param_view_set_object): use destroy
	        notification instead of reference counting.

	svn path=/trunk/; revision=89

1999-12-12  Tim Janik 	# f3ef3637bdfe8173254f3b4ae3228f75941f2de9

	don't calc history here, we do that on demand.

	Sun Dec 12 09:06:29 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c (bse_source_set_input): don't calc history here,
	        we do that on demand.

	svn path=/trunk/; revision=88

1999-12-12  Tim Janik 	# e6b3005c9f868ccff981ccbe43cf294aacebd752

	properly detect ALSA and -lasound.

	Sat Dec 11 04:38:41 1999  Tim Janik  <timj@gtk.org>

	        * configure.in: properly detect ALSA and -lasound.

	Thu Dec  9 21:06:54 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): popup csource
	        view for button 1 as well (if not clicked into linkable area).

	Thu Dec  9 06:18:48 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): use the new
	        BstCanvasSource API to properly connect links with input/output ids.

	        * beast-gtk/bstcanvassource.[hc]: major rework, we deal with multiple
	        input/output channels now.

	svn path=/trunk/; revision=87

1999-12-12  Tim Janik 	# daf1fc58f565f9ebf7805a82e18c2e296d8dc11d

	start playback with read() here already, normally select(in) should do,

	Sun Dec 12 04:50:19 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_open): start playback with
	        read() here already, normally select(in) should do, but that is not
	        the case for pseudo-OSS drivers in the kernel.

	        * bsepcmdevice-oss.c (bse_pcm_device_oss_update_caps): fixed bug with
	        max_fragment_size readout, this could stop OSS card drivers from
	        working if they supported all fragment sizes we check for.

	        * <sigh> duplex still doesn't work correctly here, this defers further
	        work until i got a new machine that *does* work in duplex mode. it's
	        certainly not the fault of all the 3 soundcards and 5 drivers that i
	        eventually tested here ;(

	Sat Dec 11 05:34:17 1999  Tim Janik  <timj@gtk.org>

	        * bsetype.h (BSE_DUMMY_TYPE): install a dummy type, needed when normal
	        type defs had to be disabled.

	        * bsepcmdevice-alsa.[hc]: first implementation of an ALSA based pcm
	        driver.

	Fri Dec 10 16:19:51 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c (bse_source_default_skip_chunk): hm, changed ckip_chunk()
	        semantics, reinvoking calc_chunk() doesn't really go along with
	        different source cycle indices. unless we change skip_chunk() to be
	        comprehensively called for all BseHeart sources before the global
	        index is increased, one basically can't call ref_chunk() from
	        this method.

	Fri Dec 10 08:26:00 1999  Tim Janik  <timj@gtk.org>

	        * bsesnet.c (bse_snet_reset): reset all sources that we serve
	        as a container for.

	        * bsesource.c: we prepare isource in two cases, for osources that
	        are already prepared and get a new isource, for osources that are
	        currently being prepared and have isources as input.
	        we mostly do not reset sources anymore.

	Thu Dec  9 23:55:00 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice.[hc]:
	        (bse_pcm_device_iready):
	        (bse_pcm_device_oready):
	        return number of writable blocks instead of just boolean.
	        (bse_pcm_device_write):
	        (bse_pcm_device_read):
	        adjust left space appropriatedly.

	Thu Dec  9 16:34:15 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]:
	        (bse_source_do_cycle):
	        (bse_source_do_prepare):
	        (bse_source_calc_history):
	        cleanups/optimizations to the ochannel history buffer. fixed a bug
	        introduced with recent cleanups that completely disabled history.
	        (bse_source_do_shutdown): do proper cleanups through function calls,
	        and don't reinvent the wheel all over ;)

	Thu Dec  9 03:23:30 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c (bse_source_set_input): don't allow shortcircuiting
	        within the same source (BSE_ERROR_SOURCE_BAD_LOOPBACK).

	        * bseenums.[hc]: BSE_ERROR_STREAM_* cleanups.

	        * bsechunk.[hc]: return chunk->hunk from bse_chunk_complete_hunk()
	        for convenience.

	svn path=/trunk/; revision=86

1999-12-12  Tim Janik 	# b5bef6567409bc1373f2240c4e2515d6b8bb7439

	radio parameter fixups.

	Sun Dec 12 04:55:13 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.c: radio parameter fixups.

	        * bseloopback.[hc]: channel history related recoding. this is
	        still a somewhat dubious module, we can effectively only delay
	        stuff by some multitude of the bse track length,
	        i.e. z^(n*BSE_TRACK_LENGTH), which provides questionable benefits.

	svn path=/trunk/; revision=85

1999-12-09  Tim Janik 	# 2d4c6ab29ce8bf4889b1722abf1ff609bd07cb65

	use the new BstCanvasSource API to properly connect links with

	Thu Dec  9 06:18:48 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): use the new
	        BstCanvasSource API to properly connect links with input/output ids.

	        * beast-gtk/bstcanvassource.[hc]: major rework, we deal with multiple
	        input/output channels now.

	svn path=/trunk/; revision=84

1999-12-09  Tim Janik 	# 50bb28a89a642fd06e5b5167cdb06ffdf0c06ce2

	don't allow shortcircuiting within the same source

	Thu Dec  9 03:23:30 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c (bse_source_set_input): don't allow shortcircuiting
	        within the same source (BSE_ERROR_SOURCE_BAD_LOOPBACK).

	        * bseenums.[hc]: BSE_ERROR_STREAM_* cleanups.

	        * bsechunk.[hc]: return chunk->hunk from bse_chunk_complete_hunk()
	        for convenience.

	svn path=/trunk/; revision=83

1999-12-09  Tim Janik 	# ef7c08b4d2705a663f6275478e33a7d9ad771f1d

	handle amplitude modulation.

	Thu Dec  9 03:56:24 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.c (bse_gen_osc_calc_chunk): handle amplitude modulation.

	        * bseloopback.[hc]: simlpe plugin to reroute it's input to the output
	        (no, no extra buffer copy is necessary).

	        * removed testos.c (finally).

	svn path=/trunk/; revision=82

1999-12-07  Tim Janik 	# e43ed26370a195319d49581ca93d7c17222f1843

	hum, removed some preliminary changes, minor cleanups

	svn path=/trunk/; revision=81

1999-12-07  Tim Janik 	# f32cea1213e49affb2b7319493138c0baf168a61

	erk, don't draw a blackground for all items if not in aa mode.

	Tue Dec  7 02:46:21 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build): erk, don't
	        draw a blackground for all items if not in aa mode.

	svn path=/trunk/; revision=80

1999-12-07  Tim Janik 	# 32a2d84ac6994553a03be717eefa32a9c8367f0d

	make the whole thing clickable with "fill_color_rgba" 0x00000000.

	Tue Dec  7 02:25:39 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build): make the
	        whole thing clickable with "fill_color_rgba" 0x00000000.
	        (create_canvas_icon): feature gdk_pixbuf if present.

	        * configure.in: added check for BST_WITH_GDK_PIXBUF.

	svn path=/trunk/; revision=79

1999-12-06  Tim Janik 	# f526d3bc93d845c69269608d5580015003a65d36

	even more fixes to the clue hunter case.

	Mon Dec  6 03:43:08 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_entry_key_press): even more fixes to
	        the clue hunter case.

	        * beast-gtk/glewidgets.[hc]: pulled new sources.

	svn path=/trunk/; revision=78

1999-12-06  Tim Janik 	# f48c95ee4c0c20ce1c9160076d17eddc6d0970eb

	fixed minor bug.

	Mon Dec  6 03:21:54 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_entry_key_press): fixed minor bug.

	svn path=/trunk/; revision=77

1999-12-06  Tim Janik 	# e62c4fbe9ea6741606488e22cd941c55b19aa961

	removed gle dependancy.

	Mon Dec  6 02:35:37 1999  Tim Janik  <timj@gtk.org>

	        * configure.in: removed gle dependancy.

	        * beast-gtk/glewidgets.[hc]: source files containing headers and
	        implementations of gtkcluehunter.[hc], gtkwrapbox.[hc],
	        gtkhwrapbox.[hc], gtkvwrapbox.[hc], gtk_idle_show_widget() and
	        gtk_file_selection_heal() out of the gle source tree.

	        * beast-gtk/gle-pull.sh: script to pull gle sources.

	        * beast-gtk/bstdefs.h: remove gle includes, include glewidgets.h.

	        * beast-gtk/bstapp.[hc]: remove gle dependancies.

	        * beast-gtk/bstmain.c: removed gle dependancies.

	        * beast-gtk/beast.glr: got rid of that.

	Sun Dec  5 18:11:31 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstparam.c (bst_param_create): grow BseTime entry.

	svn path=/trunk/; revision=76

1999-12-06  Tim Janik 	# c5e3bdeb28bbb42e5e8aae5e786f03cd9f7df488

	added envelope test from last april

	svn path=/trunk/; revision=75

1999-12-05  Tim Janik 	# 084ec31872f1ecf083276cf9bfbe58ce69d10790

	new file with olaf's old testmixer.c tune.

	Sat Dec  4 22:51:25 1999  Tim Janik  <timj@gtk.org>

	        * test/testmixer.bse: new file with olaf's old testmixer.c tune.

	        * removed bstsongrouter.[hc].

	        * beast-gtk/gnomeforest.[hc]: grumbl, some priority fixups.

	        * beast-gtk/bstsongshell.c:
	        (bst_song_shell_can_operate):
	        (bst_song_shell_operate):
	        * beast-gtk/bstsnetshell.c:
	        (bst_snet_shell_can_operate):
	        (bst_snet_shell_operate):
	        get rid of the OP_PLAY and OP_STOP cases, this should be handled on
	        project basis.

	        * beast-gtk/bstapp.c:
	        (bst_app_can_operate):
	        (bst_app_operate): handle start and stop of plaback at project basis.

	svn path=/trunk/; revision=74

1999-12-05  Tim Janik 	# a61c2bad86d8f090211b7964dbcb38be60f75b03

	added functions (bse_project_start_playback): retrigger playback for all

	Sat Dec  4 23:48:57 1999  Tim Janik  <timj@gtk.org>

	        * bseproject.[hc]: added functions
	        (bse_project_start_playback): retrigger playback for all supers.
	        (bse_project_stop_playback): reset all currently playing supers.

	        * bsesnet.c:
	        (bse_snet_prepare): lock object (and globals).
	        (bse_snet_reset): unlock object (and globals).

	        * bsesong.c:
	        (bse_song_prepare): lock object (and globals).
	        (bse_song_reset): unlock object (and globals).

	        * bsesongsequencer.c: no need to do locking in
	        bse_song_sequencer_destroy() and bse_song_sequencer_setup() that's what
	        the BseSource PREPARED state cares about.

	        * bsesource.c (bse_source_reset): finally got around to implement
	        this function ;)

	Sat Dec  4 20:59:22 1999  Tim Janik  <timj@gtk.org>

	        * got rid of a bunch of dead sources: bsetext.[hc], bsestream.[hc],
	        bsefilestream.[hc], bsenullstream.[hc], bsepcmstream.[hc],
	        bsepcmstream-oss.[hc] and bsemaster.[hc].
	        removed olaf's testmixer.c, look at ../test/testmixer.bse.

	Sat Dec  4 16:30:14 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: introduce (*skip_chunk)() member function. per cycle
	        we now guarrantee that either calc_chunk() or skip_chunk() gets called
	        per output channel. even if no output sources are connected to this
	        channel.
	        (bse_source_do_prepare):
	        (bse_source_do_reset): attach/detach to from BseHeart.

	Fri Dec  3 23:44:22 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: source flag cleanups, introduced *attached flags for
	        BseHeart.

	        * bsemain.c (bse_parse_args): construct the debug keys from generated
	        enum list.

	        * *.[hc]: generic objetc flags cleanups, s/BSE_DEBUG/BSE_IF_DEBUG/.

	Thu Dec  2 21:36:00 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.[hc]: removed pausing junk.
	        (bse_source_do_cycle): don't cycle input sources, this is done
	        centrally by BseHeart now.

	        * bseheart.[hc]: added pcm device registry.

	Wed Dec  1 23:53:23 1999  Tim Janik  <timj@gtk.org>

	        * bseheart.[hc]: started out on a new bse core engine, based on
	        bstmaster.[hc] and bsemaster.[hc].

	        * bseenums.[hc] (BseErrorType): cleaned up some of the stream error
	        enums, added device errors enums.

	Wed Dec  1 22:57:24 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmdevice-oss.[hc]: pcm device backend for OSS (based on
	        duplex.c and bsepcmstream-oss.[hc]).

	        * bsepcmdevice.[hc]: new base type for dealing with pcm devices
	        (code redesigned, based on bsestream.[hc] and bsepcmstream.[hc]).

	svn path=/trunk/; revision=73

1999-12-05  Tim Janik 	# b46a18543cc4e1d058908e8fd1f8a49a8a03400d

	adapted stuff to the new BsePcmDevice and BseHeart core objects.

	Sun Dec  5 02:52:29 1999  Tim Janik  <timj@gtk.org>

	        * bsecapture.[hc]: adapted stuff to the new BsePcmDevice and BseHeart
	        core objects.

	svn path=/trunk/; revision=72

1999-11-27  Tim Janik 	# f915d843ac75baefecbb1f2bf8f7f59a937e53db

	urg! load plugins from BSE_PATH_PLUGINS not from some hardcoded path that

	Sat Nov 27 23:03:37 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): urg! load plugins from BSE_PATH_PLUGINS
	        not from some hardcoded path that only works on my system.

	svn path=/trunk/; revision=71

1999-11-27  Tim Janik 	# b1377d4686b72693fe4836ac25f69d37a282a1d6

	added test file, hacked up during geekworld.

	Sat Nov 27 22:36:24 1999  Tim Janik  <timj@gtk.org>

	        * test/geekworld.bse: added test file, hacked up during geekworld.

	svn path=/trunk/; revision=70

1999-11-27  Tim Janik 	# afd2ac4dd896958e884369d34bb0fbc23e1e65f4

	set/get the zoom factor through bse parasites.

	Sat Nov 27 07:40:54 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c:
	        (bst_snet_router_set_snet):
	        (bst_snet_router_adjust_zoom): set/get the zoom factor through bse
	        parasites.

	        * beast-gtk/bstcanvassource.c:
	        (bst_object_get_coords):
	        (bst_object_set_coords): set/get the coordinates through bse parasites.

	Sat Nov 27 01:14:48 1999  Tim Janik  <timj@gtk.org>

	        * acbeast.m4: check for support before adding -Wmissing-noreturn
	        to the gcc option list.

	svn path=/trunk/; revision=69

1999-11-27  Tim Janik 	# b71589e4121882e33b4e27e0656603f91b12533e

	install parasite parsers.

	Sat Nov 27 09:11:32 1999  Tim Janik  <timj@gtk.org>

	        * bseobject.c (bse_object_class_init): install parasite parsers.

	        * bseparasite.c:
	        (store_parasite_list):
	        (parasite_parser): implemented storing/parsing abilities for parasites.

	        * bseobject.[hc]: cleaned up the custom parser interface.
	        (bse_object_do_try_statement): feature custom parsers.
	        (bse_object_store): emit store when storing.

	Sat Nov 27 05:40:45 1999  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_flush_fd): terminate with newline if we
	        don't have binary data.

	        * bsesource.c:
	        (bse_source_do_store_private): store input links here.
	        (bse_source_do_restore_private): restore input links (deferred until
	        project emits complete_restore).

	        * bsesource.[hc]: new functions bse_source_get_ochannel_id and
	        bse_source_get_ichannel_id to get channel ids from their names.

	        * bseproject.c (bse_project_restore): emit complete_restore upon
	        completion.

	        * bsecontainer.c (bse_container_store_termination): eeek, need to chain
	        parent class handler here.

	Tue Nov 23 23:55:49 1999  Tim Janik  <timj@gtk.org>

	        * bseparasite.[hc]: started parasite implementation. only floats
	        are featured currently, and we need saving/parsing hooks.

	        * bseobject.[hc] (bse_object_kill_qdata_no_notify): remove a certain
	        data poriotn without notification.

	svn path=/trunk/; revision=68

1999-11-27  Tim Janik 	# a356d6d775b1b340e03255e206ea05223c74f58e

	check for support before adding -Wmissing-noreturn to the gcc option list.

	Sat Nov 27 01:14:48 1999  Tim Janik  <timj@gtk.org>

	        * acbeast.m4 (ac_vm): check for support before adding -Wmissing-noreturn
	        to the gcc option list.

	svn path=/trunk/; revision=67

1999-11-23  Tim Janik 	# 93e7e5eb9ba4125ea1718b7da8d3ae6b04af9ac2

	some (minor) parameter clean ups.

	Tue Nov 23 00:16:57 1999  Tim Janik  <timj@gtk.org>

	        * bsefirfilter.[hc]: some (minor) parameter clean ups.

	svn path=/trunk/; revision=66

1999-11-20  Tim Janik 	# 6bc6f205e3b8812a5f166f2f47a06320d50b9d50

	actually commit the new files

	svn path=/trunk/; revision=65

1999-11-20  Tim Janik 	# d8be63679a3aa0f0591eeefc12dc024edf3888ad

	minor stuff

	svn path=/trunk/; revision=64

1999-11-20  Tim Janik 	# 3c997436d2b3f1e6d6147530405a31f9a56c6830

	started out on an FIR (finite impulse response) filter. it supports

	Sat Nov 20 23:24:25 1999  Tim Janik  <timj@gtk.org>

	        * bsefirfilter.[hc]: started out on an FIR (finite impulse response)
	        filter. it supports variable degree setting, cut off frequency,
	        C. Lanczos and von Hann smoothing. only lowpass mode is implemented
	        currently though.

	        * bsegenosc.c (bse_gen_osc_calc_chunk): take modulo operations out
	        of the inner loop.

	        * testos.c: removed some more test code.

	        * bsecapture.c: use the Mic icon for now.

	svn path=/trunk/; revision=63

1999-11-20  Tim Janik 	# 0cb7e4724bd8772fc5000191e5c476cda8885f69

	reset router mode to "Edit" after a new source has been added.

	Sat Nov 20 08:47:50 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_event): reset router mode
	        to "Edit" after a new source has been added.

	        * beast-gtk/bstparam.c (bst_param_update): took out the automatic
	        GtkEntry growing if the new string is wider than the allocation.
	        the entry will always grow, because stupid GtkEntry reports always
	        reports a requested width >150.
	        (bst_param_create): changed default note field width to 50 (from 40),
	        feature free radios.

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_root_event): popup
	        csource paramview for button3, sync on BseSource name changes.

	        * beast-gtk/bstcanvassource.[hc] (bst_canvas_source_popup_view): new
	        function to popup paramview.

	        * configure.in: accept /proc/asound/sndstat as alternative to
	        /dev/sndstat if /proc/asound/oss-devices exists.

	svn path=/trunk/; revision=62

1999-11-20  Tim Janik 	# 0283cd63f90b8cfb94b28430f129aed88df2a4fb

	added BSE_PARAM_HINT_RADIO.

	Sat Nov 20 12:27:21 1999  Tim Janik  <timj@gtk.org>

	        * bseparam.h (BseParamBits): added BSE_PARAM_HINT_RADIO.

	        * bseutils.[hc]: added bse_note_from_freq(), bse_note_to_freq() and
	        bse_note_to_tuned_freq(), we use the constants from bseglobals.c.

	        * bseglobals.h (BSE_MAX_NOTE): changed this to 123=dis+7=19912.127Hz,
	        so we stay below BSE_MAX_OSC_FREQ_d (and below 22050).
	        added BSE_MAX_OSC_FREQ_d=20000 and BSE_MIN_OSC_FREQ_d=1/20000.

	        * bseglobals.c (BSE_LN_OF_2_RAISED_TO_1_OVER_12_d): added constant for
	        ln(2^(1/12)).

	        * bsesource.c (bse_source_do_reset):
	        * bsesource.c (bse_source_init): defualt initialize ->index with 0 not
	        -1, so we are always greater than ->start.

	svn path=/trunk/; revision=61

1999-11-20  Tim Janik 	# a8144d43af4c8416f55510f080b73ef11cc05cd3

	added phase, base_note, base_freq and frequency_modulation_percentage

	Sat Nov 20 08:57:38 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.c (bse_gen_osc_set_param): added phase, base_note,
	        base_freq and frequency_modulation_percentage parameters.
	        implemented frequency modulation. implemented growing/shrinking saw,
	        triangle and pulse besides sine.

	svn path=/trunk/; revision=60

1999-11-15  Tim Janik 	# 035080d3fe68a9d3418e64e20eb0c27b04c098c9

	new radio button type that allowes for free toggeling (i.e. working

	Mon Nov 15 22:50:38 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstfreeradiobutton.[hc]: new radio button type that allowes
	        for free toggeling (i.e. working stand-alone, radio->group is unused).

	svn path=/trunk/; revision=59

1999-11-14  Tim Janik 	# c19982f65ed2222243bfb18cfbd51523bb0adf9f

	play 440Hz

	svn path=/trunk/; revision=58

1999-11-14  Tim Janik 	# 8616fdda1568f17b3cba27e2d971e3034ef39025

	urg, had to adapt all keytable notes to the corrected BSE_KAMMER_NOTE

	Sun Nov 14 19:59:53 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstkeytable-us.c (bst_key_table_us_101):
	        * beast-gtk/bstkeytable-de.c (bst_key_table_de_102): urg, had
	        to adapt all keytable notes to the corrected BSE_KAMMER_NOTE
	        octave.

	svn path=/trunk/; revision=57

1999-11-14  Tim Janik 	# 2bb2b98c96cfb82752110d9c591b3c7453a67b59

	eeeek, bad change necessary: BSE_KAMMER_NOTE is actually A' not A-0, and

	Sun Nov 14 19:44:51 1999  Tim Janik  <timj@gtk.org>

	        * bseglobals.h: eeeek, bad change necessary: BSE_KAMMER_NOTE is actually
	        A' not A-0, and it's MIDI code is actually 57, not 69. this displaces
	        all saved songs by one octave, but there are hopefully not too much of
	        them out there yet ;)

	Sun Nov 14 05:52:23 1999  Tim Janik  <timj@gtk.org>

	        * bsesnet.c (bse_snet_calc_chunk): use bse_hunk_mix () to do the
	        mixing for us.

	        * bsemixer.c (bse_hunk_mix): don't multiply added values of a qualified
	        pointer with sizeof (*pointer).

	Sun Nov 14 05:28:37 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmstream-oss.c (pcm_stream_oss_open_dsp): disable duplex for now.

	        * bsedefs.h: make sure we have PI, BSE_MAX_SAMPLE_VALUE and
	        BSE_MIN_SAMPLE_VALUE defined. oh, and i recently added BSE_EPSILON
	        and BSE_EPSILON_CMP to provide generic double/float comparision
	        against a certain quantity (BSE_EPSILON=1e-6).

	svn path=/trunk/; revision=56

1999-11-14  Tim Janik 	# 634c75d806d6e67513dfdb91cf13e9adcc430bca

	started out on a generic oscillator implementation.

	Sat Nov 13 20:26:45 1999  Tim Janik  <timj@gtk.org>

	        * bsegenosc.[hc]: started out on a generic oscillator implementation.

	svn path=/trunk/; revision=55

1999-11-14  Tim Janik 	# cdb73c0a7a4a66d637dda02455cbc222d1ce1aa2

	minor changes for recording frequency, we still have big ISSUEs here.

	Sun Nov 14 01:11:09 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmaster.c: minor changes for recording frequency,
	        we still have big ISSUEs here.

	svn path=/trunk/; revision=54

1999-11-14  Tim Janik 	# dbc8ffd50f52b2a17a79e1a1d3a9d27f6e8c2705

	reordered stuff so initialization actually works with OSS as well.

	Sat Nov 13 04:40:45 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmstream-oss.c: reordered stuff so initialization actually works
	        with OSS as well.

	Fri Nov 12 04:41:59 1999  Tim Janik  <timj@gtk.org>

	        * bsemixer.[hc]: new files to cover common mixing requirements for
	        hunks (maybe also generic buffers at a later point).
	        this file is a good candidate to get partly generated upon compilation
	        time in the future.

	        * bsechunk.c (bse_hunk_free): reordered arguments so n_tracks comes
	        always first.
	        (bse_hunk_copy): same here.

	Fri Nov 10 16:04:08 1999  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]: minor fixes/additions to BSE_ERROR_ enum values.

	        * bsepcmstream-oss.c: use new BSE_ERROR_ enum values.

	Mon Nov  8 22:09:49 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmstream-oss.c (pcm_stream_oss_open_dsp): set blocking behaviour
	        prior to any ioctl()s.
	        (pcm_stream_oss_set_dsp): set BSE_PCMSA_FRAGMENT_SIZE right at the
	        beginning (probably still not enough for OSS).

	Mon Nov  8 02:42:44 1999  Tim Janik  <timj@gtk.org>

	        * bsepcmstream.[hc]:
	        * bsepcmstream-oss.c: added an incredibly bad hack for the microphone
	        source to plugin. this does give me the opportunity to test stuff untill
	        the pcm side is redesigned.

	svn path=/trunk/; revision=53

1999-11-14  Tim Janik 	# a4f516ec497d5a6c546edfb6ab53c63e552f8e49

	new bse source to provide recorded data.

	Wed Nov 10 03:06:54 1999  Tim Janik  <timj@gtk.org>

	        * bsecapture.[hc]: new bse source to provide recorded data.

	svn path=/trunk/; revision=52

1999-11-11  Tim Janik 	# 9ab17a6f9d1aaf6455de5b864cbc430b1aa22c08

	ugh oh, a BseNoise structure amounts to sizeof (BseNoise), not sizeof

	Thu Nov 11 03:51:21 1999  Tim Janik  <timj@gtk.org>

	        * bsenoise.c: ugh oh, a BseNoise structure amounts to sizeof (BseNoise),
	        not sizeof (BseSource).

	        * bsecapture.c: same here (well i copied the basic code ;).

	svn path=/trunk/; revision=51

1999-11-08  Tim Janik 	# c503597a6784b9947cedaf4e9df07981e3d4f9f2

	wooho! unbelievable, using BseNoise connected to BseSNet, i just got the

	Mon Nov  8 02:05:10 1999  Tim Janik  <timj@gtk.org>

	        * wooho! unbelievable, using BseNoise connected to BseSNet, i just
	        got the first, real (though extremely primitive) synthesis network
	        running ;)
	        yes! that is *something* already.

	        * beast-gtk/bstsongshell.c (bst_song_shell_can_operate):
	        * beast-gtk/bstsnetshell.c (bst_snet_shell_can_operate):
	        use BSE_SOURCE_PREPARED() to figure whether the supers are currently
	        playing or not.

	svn path=/trunk/; revision=50

1999-11-08  Tim Janik 	# 4ea270b75aa00583ea11cefc61ea632b710d4745

	don't notify objects that are destroyed. notify object of ::destroy,

	Mon Nov  8 02:01:31 1999  Tim Janik  <timj@gtk.org>

	        * bseobject.h (BSE_NOTIFY): don't notify objects that are destroyed.
	        * bseobject.c (bse_object_do_shutdown): notify object of ::destroy,
	        allthough it is of course destroyed.

	        * bsesnet.[hc]: make the sole input channel we have a multi track
	        channel (well, actually only stereo for the moment).
	        (bse_snet_calc_chunk): mix input hunk to stereo if necessary.

	        * bsesource.[hc]: added max_n_tracks field to BseSourceIChannelDef.
	        enforced further usage of the BSE_SOURCE_*() macros, instead of direct
	        class usage. renamed the class-> ichannels and ochannels fields to
	        ichannel_defs and ochannel_defs to keep distinction to the ->ochannels
	        member in sources (and because these are actually *definitions* only).
	        moved BseSourceInput ->history field, this actually belongs into the
	        BseSourceIChannelDef structure.
	        got rid of the history argument to bse_source_set_input() and the
	        ->add_input() member function that way.
	        made BSE_SOURCE_ICHANNEL_DEF() and BSE_SOURCE_OCHANNEL_DEF() return
	        pointers.
	        (bse_source_ref_state_chunk):
	        (bse_source_ref_chunk): reduced code duplication by moving 98% percent
	        of the code into an inlined bse_source_fetch_chunk().
	        (bse_source_fetch_chunk): guard against negative indices.
	        (bse_source_do_prepare): recalc history for all output channels.
	        (bse_source_do_remove_input): notify the output source about io_changed.
	        (bse_source_get_input): new function to return input handle for a given
	        channel.

	        * bseenums.[hc]: added BSE_ERROR_SOURCE_TOO_MANY_OTRACKS
	        error case.

	svn path=/trunk/; revision=49

1999-11-08  Tim Janik 	# ed257c7f336dbdb3cd762c42e98c286daf105b70

	up up the noise blocks

	svn path=/trunk/; revision=48

1999-11-07  Tim Janik 	# 6d8d902fc9e78590effef6206b6c4771de499995

	new noise generator.

	Sun Nov  7 20:48:04 1999  Tim Janik  <timj@gtk.org>

	        * bsenoise.[hc]: new noise generator.

	        * icons/noicon.xcf:
	        * icons/noicon.c: files to be used for objects/procedures that don't
	        come with their own icons but want one.

	svn path=/trunk/; revision=47

1999-11-07  Tim Janik 	# 2d8baefcf2e585502bc48926f59f8a2294424956

	uhg, don't kill my speakers with that test sound.

	Sun Nov  7 08:12:21 1999  Tim Janik  <timj@gtk.org>

	        * bsesnet.c (N_RAND_BLOCKS): uhg, don't kill my speakers with that
	        test sound.

	svn path=/trunk/; revision=46

1999-11-07  Tim Janik 	# 3d4ed0b7f376a65d72c001a1e67184bea2ca2cac

	don't return TRUE (as need_dispatch) if we have no input sources.

	Sun Nov  7 07:24:36 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmaster.c (bst_master_check): don't return TRUE (as
	        need_dispatch) if we have no input sources.

	svn path=/trunk/; revision=45

1999-11-07  Tim Janik 	# aa6de6d9a60d34fbc8b8b2db257d1020c38534ac

	feature channel ids for bst_canvas_source_link_start() and

	Sat Nov  6 19:04:06 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.[hc]: feature channel ids for
	        bst_canvas_source_link_start() and bst_canvas_source_link_end (),
	        keep track of when the source's input/output connections changed.

	        * beast-gtk/bstcanvaslink.h: maintain channel ids for input and
	        output sources.

	        * beast-gtk/bstsnetrouter.c: call bst_canvas_source_update_links()
	        for all newly created canvas items, setup a signal connection so
	        we can handle the link updating for the csources.

	        * beast-gtk/bstcanvassource.[hc]: introduced ::update_links
	        signal, to be emitted when the BseSource connections change.

	Sat Nov  6 05:58:29 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetshell.c (bst_snet_shell_build): moved most of
	        the dynamic snet router creation here, we also setup the zoomed
	        window in this place.

	        * beast-gtk/bstsnetrouter.[hc]: changed matters, so we derive from
	        GnomeCanvas now. removed other non-canvas dependant stuff (we still
	        create the toolbar though). indicate toolbar mode through cursor
	        change on the canvas.

	svn path=/trunk/; revision=44

1999-11-07  Tim Janik 	# 9e1de44869563438854cde05f7cd76fb0829a1f2

	notify outside world when input/output channels got added/removed. we

	Sat Nov  6 19:21:06 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c: notify outside world when input/output channels got
	        added/removed. we simply notify "io_changed" in this case for now.

	        * bseobject.c (bse_object_do_destroy): squeezed a bug that had been
	        causing random crashes recently. basically, we left invalid pointers
	        in the object name hash table.

	svn path=/trunk/; revision=43

1999-11-07  Tim Janik 	# 91dce49f8ca0ae45176524f28abaa51568cda49a

	ok, we can actually handle new links and sources as of now (bunch of code

	Sun Nov  7 03:06:55 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.[hc]: ok, we can actually handle new links
	        and sources as of now (bunch of code added to achive that).

	        * beast-gtk/bstcanvaslink.[hc]: use names for the input/output
	        sources and fields that actually make sense. reordered drawing code,
	        so we draw stuff the correct way (from output to input).

	svn path=/trunk/; revision=42

1999-11-07  Tim Janik 	# 49a797a67e804fa03d9db6b005cf9039d2d83f6a

	create a mono input channel.

	Sun Nov  7 03:05:39 1999  Tim Janik  <timj@gtk.org>

	        * bsesnet.[hc]: create a mono input channel.

	svn path=/trunk/; revision=41

1999-11-07  Tim Janik 	# 2c0df086c031ee5a21d7e5b5ea5273e2991ab4b4

	more minor test stuff

	svn path=/trunk/; revision=40

1999-11-06  Tim Janik 	# 3b17b271a691dc9a8bb159bcecfde6b5682cf821

	notify outside world when input/output channels got added/removed. we

	Sat Nov  6 19:21:06 1999  Tim Janik  <timj@gtk.org>

	        * bsesource.c: notify outside world when input/output channels got
	        added/removed. we simply notify "io_changed" in this case for now.

	        * bseobject.c (bse_object_do_destroy): squeezed a bug that had been
	        causing random crashes in the last time. basically we left invalid
	        pointers in the object name hash table.

	svn path=/trunk/; revision=39

1999-11-06  Tim Janik 	# 8bd22ab2123ccfdec6178bfe237b06cb22baf218

	moved most of the dynamic snet router creation here, we also setup the

	Sat Nov  6 05:58:29 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetshell.c (bst_snet_shell_build): moved most of
	        the dynamic snet router creation here, we also setup the zoomed
	        window in this place.

	        * beast-gtk/bstsnetrouter.[hc]: changed matters, so we derive from
	        GnomeCanvas now. removed other non-canvas dependant stuff (we still
	        create the toolbar though). indicate toolbar mode through cursor
	        change on the canvas.

	Fri Nov  5 05:00:13 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetshell.c (bst_snet_shell_operate): added playback
	        and playback stop support.

	        * beast-gtk/bstapp.c: reordered menubar, made play/stop project specific
	        operations.

	        * beast-gtk/bstapp.c (bst_app_operate): don't spawn a new song in new
	        projects.
	        * beast-gtk/bstmain.c (main): same here for the default project.

	svn path=/trunk/; revision=38

1999-11-06  Tim Janik 	# 82eb31fd9ffb3adad98ee14c69f04c19ebebe40d

	slight color change.

	Sat Nov  6 05:55:59 1999  Tim Janik  <timj@gtk.org>

	        * icons/snet.xcf:
	        * icons/snet.c: slight color change.

	Fri Nov  5 04:49:05 1999  Tim Janik  <timj@gtk.org>

	        * bsesnet.[hc]: added necessary bits to serve as output source.

	        * bsechunk.[hc] (bse_hunk_copy): new function to alloc a new hunk filled
	        with sample data.

	        * bsesource.h:
	        renamed BSE_SOURCE_ICHANNEL() to BSE_SOURCE_ICHANNEL_DEF() and
	        renamed BSE_SOURCE_OCHANNEL() to BSE_SOURCE_OCHANNEL_DEF().
	        introduced BSE_SOURCE_OCHANNEL() to return a pointer to the source's
	        output channel connection.

	        * bsesource.c: pass normal ochannel_ids to calc_history as well,
	        instead of hackery 0-starting indices. use BSE_SOURCE_OCHANNEL() over
	        the place, instead of direct strcuture member adressing.

	svn path=/trunk/; revision=37

1999-11-03  Tim Janik 	# 8e2acba5e443a6d4af7895940d18e827f6880088

	ignore supers, so they don't pop up in the toolbar.

	Thu Nov  4 00:18:05 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (toolbar_add_category): ignore supers,
	        so they don't pop up in the toolbar.

	        * beast-gtk/bstcanvassource.c: set/get canvas coordinate in bse object,
	        we need parasites in bse.

	        * beast-gtk/bstsongrouter.c: completely disable source file for now

	        * beast-gtk/bstsnetrouter.c: ok, the canvas now actually reflects the
	        real objects held in an snet. we also feature *adding* new objects now.
	        the canvas apparently has redraw problems with newly created or
	        destroyed items.

	Wed Nov  3 18:37:17 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstcanvassource.c: don't accept NULL sources anymore.

	        * beast-gtk/bstcanvassource.c (bst_canvas_source_build): fetch the
	        source's object and only revert to BST_ICON_NOICON if none could
	        be fetched. properly ref/unref the icon.

	        * beast-gtk/bstmain.c (bst_icon_from_stock): stock icons stay alive
	        throughout a programs life time.

	svn path=/trunk/; revision=36

1999-11-03  Tim Janik 	# cd613939feee7e6799e3b21ce133c53ab511fe59

	don't return const strings, this is extremely annoying.

	Wed Nov  3 21:50:38 1999  Tim Janik  <timj@gtk.org>

	        * bseenums.[hc]: don't return const strings, this is extremely annoying.

	        * bseplugin.c (bse_plugin_get_export_spec): fixed a bad bad bug here,
	        we were walking the export specs by sizeof(BseExportSpec) instead of
	        the appropriate sizeof(BseExportObject) or sizeof(BseExportProcedure),
	        depending on what type of specs we actually handle. this lead to only
	        the first type being recognized (which was moderatedly mild, could
	        have insanely crashed instead ;).

	Wed Nov  3 20:05:14 1999  Tim Janik  <timj@gtk.org>

	        * bsecategories.c (bse_categories_register_icon): category icons stay
	        alive throught a programs life time.

	        * bseobject.c (bse_object_get_icon): removed icon cruft from object
	        class and simply provided bse_object_get_icon(). there might be a
	        notifier someday to indicate that an object's icon should get
	        refetched.

	        * bseutils.h: provide simple refcounting functions for BseIcons,
	        facilitate permanent icon ref_counts.

	svn path=/trunk/; revision=35

1999-11-03  Tim Janik 	# c245242154b1774bb5e364c97d6d1cadb8ee8616

	we need to be *at least* of size sizeof (BseSource) if we want to derive

	Wed Nov  3 20:55:21 1999  Tim Janik  <timj@gtk.org>

	        * testos.c: we need to be *at least* of size sizeof (BseSource) if
	        we want to derive from BseSource.

	svn path=/trunk/; revision=34

1999-10-31  Tim Janik 	# 7d909b38aa121fe6bb91609688473a4656684ca3

	eeek, fixed a bad bad bug. we weren't saving/restoring the current parsing

	Sun Oct 31 16:20:49 1999  Tim Janik  <timj@gtk.org>

	        * bsestorage.c (bse_storage_parse_bin_data): eeek, fixed a bad bad bug.
	        we weren't saving/restoring the current parsing position around binary
	        block reads.
	        (bse_storage_ensure_bin_offset):
	        (bse_storage_restore_offset): retrive/restore current file offset.

	svn path=/trunk/; revision=33

1999-10-30  Tim Janik 	# 5dd79c93b9deb1f722a3c2ae0096228987b34d37

	hum, reverted wrapbox layout, used horizontal toolbar instead. added Zoom

	Sat Oct 30 16:16:55 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_toolbar): hum,
	        reverted wrapbox layout, used horizontal toolbar instead. added
	        Zoom spinner.

	        * beast-gtk/gnomeforest.[hc]: updated gnome-forest version from my
	        local tree.

	Fri Oct 29 22:33:07 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstdefs.h: added bst_icon_from_stock() for global icon
	        retrival.

	Sat Oct 30 07:54:26 1999  Tim Janik  <timj@gtk.org>

	        * testos.c: correctly prefix all obejct type names with "Bse".

	svn path=/trunk/; revision=32

1999-10-29  Tim Janik 	# 9f0f5f8cdf984dec93154ec42ef29278bd879095

	eeek, omit scaling through libart by compiling correct size initially

	svn path=/trunk/; revision=31

1999-10-29  Tim Janik 	# 67a3b36da7bda7e054537f40a7a7f5d8fa63fe88

	minor icon changes (reordered pixies, hopefully more visibly attractive)

	svn path=/trunk/; revision=30

1999-10-29  Tim Janik 	# 6060d82804369611f9c6feeccc5db4196d70d33c

	use a wrap box for now (far from being perfect in appearance though ;( ).

	Fri Oct 29 11:28:21 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstsnetrouter.[hc]: use a wrap box for now (far from
	        being perfect in appearance though ;( ).

	        * beast-gtk/bstsnetrouter.c (bst_snet_router_build_toolbar): add radio
	        for mouse_tool button (link, move, properties). (still all radio
	        buttons selections are test buttons and non-effective).

	        * beast-gtk/icons/mouse_tool.{c,xcf}: new icon mouse_tool, composed out
	        of tigert's stock_jump_to.png, stock_properties.png and gnoghurt's
	        move-tool.xpm (indicates link, move, properties for mouse
	        buttons 1,2,3).

	Fri Oct 29 11:27:47 1999  Tim Janik  <timj@gtk.org>

	        * bseplugin.c: minor const correctness fixes.

	svn path=/trunk/; revision=29

1999-10-15  Tim Janik 	# b89b28665112d2da3518fc4fce7cbb099fe8511a

	shut up cvs

	svn path=/trunk/; revision=28

1999-10-15  Tim Janik 	# f02b60a8f9a1b8ad04797a28db9880a84a93d8ba

	really shut up!

	svn path=/trunk/; revision=27

1999-10-15  Tim Janik 	# 0613578ecb9b49fd00c71a92eb4d20f4bc07c106

	wrapped up MASTER debugging stuff.

	Fri Oct 15 02:47:33 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmaster.c: wrapped up MASTER debugging stuff.

	        * beast-gtk/bstmain.c (bst_parse_args): new function to parse
	        --beast-debug, --beast-no-debug args and evaluate BEAST_DEBUG and
	        BEAS_NO_DEBUG env vars.

	Fri Oct 15 02:09:24 1999  Tim Janik  <timj@gtk.org>

	        * bsemain.c (bse_parse_args): added --bse-debug and --bse-no-debug args
	        and featuring of BSE_DEBUG and BSE_NO_DEBUG environment variables.

	        * bseobject.c: wrapped up NOTIFY and OBJECTS debugging stuff.

	        * bsetype.c: wrapped up CLASSES debugging stuff.

	svn path=/trunk/; revision=26

1999-10-14  Tim Janik 	# b997e028011f93137d79a8e6b375c830e8d08935

	minor fix

	svn path=/trunk/; revision=25

1999-10-14  Tim Janik 	# f597e9c40f2c939a8fc10cb93978b0f65fb4ed82

	merge my changes with CVS (finally).

	Fri Oct 15 00:36:26 1999  Tim Janik  <timj@gtk.org>

		* merge my changes with CVS (finally).

	Fri Oct 15 00:07:17 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/icons/Makefile.am:
		* beast-gtk/icons/Makefile.icons: setup ./icons subdirectory.

		* beast-gtk/bstsnetrouter.[hc]: new files (added some weeks ago
		actually), mostly reimplemented this file from the old song router
		code which is currently inactive. additionally to the routing canvas,
		create a toolbar from which BseSource objects are selectable (retrived
		through the categories).

	Thu Oct  7 15:30:45 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstmenus.[hc]: deal with categories and not procedure
		types, feature icon specifications in menus.

		* beast-gtk/bstpatterndialog.c (bst_pattern_dialog_class_init): use
		new bse categories.

		* beast-gtk/bstsamplerepo.c (bst_sample_repo_init): updated
		g_pattern_spec* calls to match new()/free() prototypes.

	Wed Oct  6 21:40:37 1999  Tim Janik  <timj@gtk.org>

		* docs/bse-categories.txt: new file, giving general guidlines for
		category naming.

	Wed Sep 22 13:08:25 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstparam.[hc]: completely abstracted the parameter
		specific packaging mechanism, we can now easily change this
		for tables or wrap boxes (yet to come though).

	Wed Sep 22 08:37:39 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstapp.c (menubar_entries): changed "File" menu to
		"Project" menu.

	Wed Sep 22 07:12:10 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstcanvaslink.c (bst_canvas_link_set_start): don't
		disconnect_by_func() for destroyed objects.

	Thu Sep 16 09:19:54 1999  Tim Janik  <timj@gtk.org>

		* configure.in: require GLib-1.2.5, Gtk+-1.2.5, GNOME-1.0.16.

		* acbeast.m4: added a bunch of new compiler flags, cleaned stuff up
		some. we still need a check to see if certain options are actually
		supported by gcc.

	Tue Sep 14 00:18:57 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/bstzoomedwindow.[hc]: new widget, basically a scrolled
		window that features a toggle button in the scrollbar corner.

	Mon Sep 13 15:58:42 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/gnomeforest.c:
		(gnome_forest_state_changed):
		(gnome_forest_style_set): new functions, we need to rerender the buffer
		here so the window's background settings take effect.

	Mon Sep 13 05:22:37 1999  Tim Janik  <timj@gtk.org>

		* configure.in (STRIP_BEGIN|STRIP_END): added GNU Make check.

	Sun Aug 15 06:47:06 1999  Tim Janik  <timj@gtk.org>

		* beast-gtk/gnomeforest.[hc]: include gnome forest code for the
		moment, as it's not yet part of gnome (this also contains new
		libart portions).

	Fri Oct 15 00:20:30 1999  Tim Janik  <timj@gtk.org>

		* icons/Makefile.am:
		* icons/Makefile.icons: setup ./icons subdirectory.

	Fri Oct 15 00:00:41 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.c: add category with ugly test-icon for an internal object.

	Thu Oct 14 23:28:27 1999  Tim Janik  <timj@gtk.org>

		* bseutils.[hc]: added bse_icon_from_pixdata() to create a new icon
		structure from a pixdata buffer (and decode the run-length encoding).

	Wed Oct 13 06:05:55 1999  Tim Janik  <timj@gtk.org>

		* Makefile.am: adapted some stuff so loging domains and fallback
		plugin names are featured for builtin plugins as well.

	Tue Oct 12 20:15:34 1999  Tim Janik  <timj@gtk.org>

		* bseplugin.[hc]: recognize predefined plugin names, only evaluate
		plugin-name specification for strings for builtin_* plugins, create
		their symbols from their underscored file name.
		removed some export stuff.
		added object type support for plugins.

		* bseexports.h: moved lots of new stuff here, fixed up object types.

		* mkbuiltinlist.pl: output the actuall file name of builtin plugins
		as symbol part (with non-identifier chars converted into '_').

	Fri Oct 8 15:04:40 1999  Tim Janik  <timj@gtk.org>

		* bseprocedure.[hc]: removed proecedure category implementation,
		adapted code to work with bsecategories.[hc].

	Thu Oct  7 00:17:38 1999  Tim Janik  <timj@gtk.org>

		* glib-extra.[hc]:
		nuked g_pattern_spec_init() and g_pattern_spec_free_segs() in favour of
		g_pattern_spec_new() and g_pattern_spec_free() which create and free a
		newly allocated structure. also cleverly optimized g_pattern_spec_new()
		by counting tail and head wildcards and jokers. from these numbers, we
		can make better judgement whether to match from tail or head and also
		got rid of a bunch of strchr() calls.

	Wed Oct  6 23:53:07 1999  Tim Janik  <timj@gtk.org>

		* bsecategories.[hc]: new files, implementing a more general
		categorization approach. intended to take over the procedure category
		administration and feature object categories as well (see also
		docs/bse-categories.txt on this topic).

	Tue Oct  5 13:49:57 1999  Tim Janik  <timj@gtk.org>

		* bseexports.h: added export structure for objects.
		* bseplugin.h: extended macro magic to feature object types.
		* bseplugin.c: register, reinit, unload and complete exported
		and builtin object types.

	Fri Oct  1 07:29:32 1999  Tim Janik  <timj@gtk.org>

		* bsemaster.c (bse_master_do_cycle): added ability to mix multiple
		stereo songs together.

		* some const corrections.

	Thu Sep 30 09:18:58 1999  Tim Janik  <timj@gtk.org>

		* bsesample.c (bse_sample_do_shutdown):
		* bsepattern.c (bse_pattern_do_shutdown):
		* bseinstrument.c (bse_instrument_do_shutdown):
		* bsesong.c (bse_song_do_shutdown):
		* bseproject.c (bse_project_do_shutdown):
		remove/release items/objects in shutdown handler, rather than destroy.

		* bseobject.c (bse_object_unlock): release global lock *after* the
		->unlocked class method has been invoked.

		* bseobject.[hc]: changed destruction mechanism to using an intermediate
		->shutdown method. this eases class destruction, shutdown is invoked
		prior to the object's destroy notification and one ref_count is at least
		being held. once the final reference count dropps, the ->destroy method
		is actually invoked.
		(bse_object_set_valist):
		(bse_object_set_param): check for non-destroyed object first.

		* bsecontainer.[hc] (bse_container_add_item_unrefed): new function for
		containers to manage (non-destroyed) items, without holding and extra
		ref count on them, we use destroy notification from BseItem for cleanup.

		* bseitem.c (bse_item_do_shutdown): remove item from container in
		->shutdown instead of ->destroy.

		* bsesource.c: added some !destroyed checks.
		(bse_source_do_shutdown): use ->shutdown instead of ->destroy.

	Sat Sep 27 12:30:02 1999  Tim Janik  <timj@gtk.org>

		* bsesnet.[hc]: new super type to manage source networks (skeleton
		only).

	Wed Sep 22 06:24:00 1999  Tim Janik  <timj@gtk.org>

		* bsetype.[hc]: lots of code cleanups and bug fixes over the last few
		days. significantly changed allocation system, so TypeNodes are not
		themselves relocatable anymore (certain structure parts are though).
		nodes get allocated with their supers list in one peace now.

	Thu Sep 16 09:14:19 1999  Tim Janik  <timj@gtk.org>

		* bsetype.[hc]: started out on bse_type_class_lastref() as a
		preparation for delayed destruction.
		we need to catch FIXMEs.

	Mon Sep 13 05:19:17 1999  Tim Janik  <timj@gtk.org>

		* Makefile.am: minor autogeneration fixups, use cp instead of mv.

	Fri Oct 15 00:25:44 1999  Tim Janik  <timj@gtk.org>

		* icons/Makefile.am:
		* icons/Makefile.icons: setup ./icons subdirectory.

	Thu Oct 14 23:14:16 1999  Tim Janik  <timj@gtk.org>

		(over the last few days):

		* Makefile.am: specify a logging domain and a fallback plugin
		name through preprocessor macros upon compilation.

		* added a test-object plugin to prove object-type imports are
		actually possible.

		* added ability to type registration to specify pixdata buffers
		to create icons from.

		* shuffled initialization fields for procedures so categories
		go along with (newly) specified pixdata to create icons from.
		the prefered pixdata format is actually run-length-encoded
		macro-ized output of the gimp's c-source file export.

		* testos.c: added some more testobjects, all sources. test expose
		new categories and icons.

	svn path=/trunk/; revision=24

1999-07-01  Tim Janik 	# 84018431dc65de29f5d88778d93d48eb2da3d480

	use new keyboard stuff and guess, yes we are finally able to do that ;)

	Thu Jul  1 11:08:02 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstmain.c (main): use new keyboard stuff and guess,
	        yes we are finally able to do that ;)

	        * configure.in: check for the neccessary bits so we dno't compile
	        XKB specific code if the extension is not present.

	        * beast-gtk/bstxkb.[hc]: special xlib code to figure
	        keyboard type through XKB extension.

	        * beast-gtk/bstkeytables.h:
	        * beast-gtk/bstkeytables.c:
	        * beast-gtk/bstkeytable-base.c:
	        * beast-gtk/bstkeytable-us.c:
	        * beast-gtk/bstkeytable-de.c:
	        revamp, moved the common key codes from us and de into
	        bstkeytable-base.c, implemented keypatch administration that
	        features keyboard aliases and incremental usage of keypatches.
	        the only thing we're lacking now is a GUI front end to choose
	        the keyboard layout (and volounteers to contribute keytables ;).

	svn path=/trunk/; revision=23

1999-06-27  Tim Janik 	# f04c56a1be7012d05a2936f47242bb004a361dbc

	provide program data dir for BEAST data files.

	Sun Jun 27 10:21:57 1999  Tim Janik  <timj@gtk.org>

	        * configure.in: provide program data dir for BEAST data files.

	        * autogen.sh: invoke automake with --add-missing

	        * beast-gtk/Makefile.am: autogenerate beastconfigpaths.h, install
	        beast.glr.

	        * beast-gtk/bstmain.c: read beast.glr from beast program data dir.

	        * merged ChangeLog and beast-gtk/ChangeLogs.

	Sun Jun 27 10:04:46 1999  Tim Janik  <timj@gtk.org>

	        * beast-gtk/bstkeytable-de.c:
	        * beast-gtk/bstkeytable-us.c:
	        * beast-gtk/bstkeytables.c: restructured source files, more stuff to
	        come.

	        * beast-gtk/bstkeytables-us.c: vanished.

	Sun Jun 27 10:11:37 1999  Tim Janik  <timj@gtk.org>

	        * Makefile.plugins: ugh, oh. all the time this file was empty and
	        wouldn't get remade because of CVS stamps. no it has contents and
	        actually compiles (and installs) the plugins.

	svn path=/trunk/; revision=22

1999-06-06  6 	# e15cf8678b03f098af0aec7ccfd948b837a2dd29

	prepare parameters for wrap box container.

	1999-06-06    <timj@dhcpd7.redhat.com>

	        * bstparam.c: prepare parameters for wrap box container.

	svn path=/trunk/; revision=21

1999-06-05  Tim Janik 	# 80c6cfb17d01852e212b15a6f3488b9b6466329a

	delete junk

	svn path=/trunk/; revision=20

1999-06-04  Tim Janik 	# 25e2c3bca9cfadebdaeaf398b83802058e5abc89

	minor fixups.

	svn path=/trunk/; revision=19

1999-06-01  Tim Janik 	# 8a2db8329e55aa3fcfac89863223a74f48df0290

	removed cruft, add us keytable

	svn path=/trunk/; revision=18

1999-05-31  1 	# 4e86aa2fc4a88ed7267ed36be1e1895e606943ce

	ignore stamp-h.in 1999-05-31    <timj@dhcpd7.redhat.com>

	        * configure.in: check for GNOME libs 1.0.2, since 1.0.6 doesn't really
	        match gnome-config --version reporting 1.0.pre-2-10. gnome versioning is
	        what is actually broken and needs to be fixed ;(

	svn path=/trunk/; revision=17

1999-05-31  1 	# ddd0aee5a14dc3f3ded719a46f27c00e8a5cfd42

	ignore failing fragment size settigns for now, so we work with the OSS

	1999-05-31    <timj@dhcpd7.redhat.com>

	        * bsepcmstream-oss.c (pcm_stream_oss_set_dsp): ignore failing fragment
	        size settigns for now, so we work with the OSS driver.

	svn path=/trunk/; revision=16

1999-05-28  Tim Janik 	# 46b304fbf69b5e2bff391d4aef75b0e3ca9eb0cf

	don't prefix seq ids with an 0, which would make them octal nombers.

	1999-05-28  Tim Janik  <timj@couch.wilmington.net>

	        * bsepattern.c (save_note): don't prefix seq ids with an 0, which
	        would make them octal nombers.

	svn path=/trunk/; revision=15

1999-05-24  Tim Janik 	# 84746a51bf4742cc9ab2987807714e1dcd5fcac5

	checkin a us table that might be usable. gotta integrate that though

	svn path=/trunk/; revision=14

1999-05-18  Tim Janik 	# 97b2ac71c0fe0a6b9272f456a8388698e72a8b35

	we don't want configure in cvs

	svn path=/trunk/; revision=13

1999-05-17  Bertrand Guiheneuf 	# 7028ddb45dc0834a1598ebcc16db72813373b5c5

	configure.in :add  in -lgle test

	svn path=/trunk/; revision=12

1999-05-17  Tim Janik 	# 75858a9676512423ec564a449dcd658762a3eb41

	don't want aclocal.m4 in cvs

	svn path=/trunk/; revision=11

1999-05-17  Tim Janik 	# 805bbb7699e0526a677eb004f49d5870dd788bf0

	shut up even more

	svn path=/trunk/; revision=10

1999-05-17  Tim Janik 	# 8466aee6c3cc6be0ca2c274cb9a27233d0a8bb3e

	shut up cvs

	svn path=/trunk/; revision=9

1999-05-17  Tim Janik 	# 9ba05f6f1a87a4ef7c0d5f00903b573aebcbe9fa

	shut up even more

	svn path=/trunk/; revision=8

1999-05-17  Tim Janik 	# 0335449d3d7e797db04ea7e49eded22bb10edc03

	shut up cvs

	svn path=/trunk/; revision=7

1999-05-17  Tim Janik 	# d1993d613436f6b260b255dded54bf4d3e617c65

	checking empty Makefile.plugins, so automake doesn't barf.

	svn path=/trunk/; revision=6

1999-05-17  Tim Janik 	# 7367bf503660ecf207e568d13c579510f6dcc93c

	Initial revision

	svn path=/trunk/; revision=2

