\input texinfo
@c %**start of header
@settitle BSESH - BSE Scheme Shell
@footnotestyle end
@c %**end of header

@include texiutils.texi

@docpackage{BEAST-@value{BST_VERSION}}

@unnumbered NAME
bsesh -- A Guile based scheme shell for @beast and @bse{}.

@unnumbered SYNOPSIS
	@command{bsesh} [@var{OPTIONS}] [@option{---}] ...

@unnumbered DESCRIPTION
	@command{bsesh} is a @uref{man://1/guile} based scheme shell for @bse{},
	the Bedevilled Sound Engine.

	@command{bsesh} provides a shell interface to all procedures exported by the
	@bse library, so scripts are able to access the full range of functionality
	provided by it, from simple playback of a @file{.bse} file to
	full fledged automated creation or editing of synthesis networks.

	Alternatively to the linked in @bse library, the @command{bsesh} language interface
	can also talk to a remotely running @bse library host, for instance
	@uref{beast-man://1/beast}.
	By operating on a remotely running @bse core, @command{bsesh} can be used to script
	arbitrary @bse programs. The shell is also used directly by the @bse library to
	execute procedures on its behalf, this allows
	@bse procedures to be written in scheme.

	When started, @command{bsesh} tests whether the first non-option argument is a @file{.bse}
	file and if the test succeeds, attempts to play the command line arguments as
	@file{.bse} files.

@unnumbered OPTIONS
	@command{bsesh} follows the usual GNU command line syntax, with long options starting with two dashes (`--').

@table @option 
@item ---bse-pipe @var{INFD OUTFD}
	Provide the input and output communication filedescriptors
	for remote operation.
@item ---bse-eval @var{STRING}
	Execute (eval-string @var{STRING}) instead of going into interactive mode.
@item ---bse-enable-register
	Allowes registration of procedures with the @bse core.
@item ---bse-no-load
	Prevent automated loading of plugins and scripts at startup time in interactive mode.
@item ---bse-no-play
	Prevent automated detection and playback of @file{.bse} file command line arguments.
@item ---g-fatal-warnings
	Make runtime warnings fatal (abort).
@item ---help
	Describe command line options and exit.
@item ---version
	Display version and exit.
@end table

	Guile Options:
	
@table @option
@item -l @var{FILE}
	Load scheme source code from file.
@item -e @var{FUNCTION}
	After reading script, apply @var{FUNCTION} to command-line arguments.
@item -ds
	Do -s @var{SCRIPT} at this point (note that this argument must be
	used in conjuction with -s).
@item ---debug
	Start with debugging evaluator and backtraces enabled (useful for debugging scripts).
@item ---emacs
	Enable emacs protocol for use from within emacs (experimental).
@end table

	The remaining Guile options stop argument processing, and pass all
	remaining arguments as the value of (command-line):
	
@table @option
@item ---
	Stop argument processing, start in interactive mode.
@item -c @var{EXPR}
	Stop argument processing, evaluate @var{EXPR} as a scheme expression.
@item -s @var{SCRIPT}
	Load Scheme source from @var{SCRIPT} and execute as a script.
@end table

@unnumbered SEE ALSO
@uref{man://1/guile},
@uref{beast-man://1/beast},
@uref{beast-man://1/bse-plugin-generator}

@*
@revision{Document Revised:}
@bye
