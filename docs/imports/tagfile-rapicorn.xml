<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>about-aida.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/aidacc/</path>
    <filename>about-aida_8dox</filename>
  </compound>
  <compound kind="file">
    <name>builtins.idl</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/aidacc/</path>
    <filename>builtins_8idl</filename>
    <class kind="struct">Aida::DynamicSequence</class>
    <class kind="struct">Aida::DynamicRecord</class>
    <member kind="typedef">
      <type>bool</type>
      <name>__builtin__bool</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>a08e9f8d76c571a0042da04fe4c7c0301</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32</type>
      <name>__builtin__int32</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>a3e600feab38e7e85f2bb521a2426276a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64</type>
      <name>__builtin__int64</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>a7642bc019e7ad8e14af91a009afec734</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float64</type>
      <name>__builtin__float64</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>a1fce4a76d216b8dd106be7261687703f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>String</type>
      <name>__builtin__String</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>a5e1eda2bdacf80041358c6e621baf187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Any</type>
      <name>__builtin__Any</name>
      <anchorfile>namespaceAida_1_1____system__typedefs____.html</anchorfile>
      <anchor>aec9acbd6e84ac6c49180ea43c89d053f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChangeLog.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>ChangeLog_8dox</filename>
  </compound>
  <compound kind="file">
    <name>main.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>main_8dox</filename>
  </compound>
  <compound kind="file">
    <name>tutorial.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/tutorial/</path>
    <filename>tutorial_8dox</filename>
  </compound>
  <compound kind="file">
    <name>NEWS.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>NEWS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>rapicorn-core.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>rapicorn-core_8hh</filename>
    <includes id="rcore_8hh" name="rcore.hh" local="no" imported="no">rcore/rcore.hh</includes>
  </compound>
  <compound kind="file">
    <name>rapicorn.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>rapicorn_8hh</filename>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
  </compound>
  <compound kind="file">
    <name>aida.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aida_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="aidasignal_8hh" name="aidasignal.hh" local="yes" imported="no">aidasignal.hh</includes>
    <class kind="struct">Rapicorn::Aida::EnumValue</class>
    <class kind="struct">Rapicorn::Aida::TypeCode</class>
    <class kind="class">Rapicorn::Aida::TypeMap</class>
    <class kind="class">Rapicorn::Aida::ImplicitBase</class>
    <class kind="class">Rapicorn::Aida::Any</class>
    <class kind="struct">Rapicorn::Aida::Any::Field</class>
    <class kind="class">Rapicorn::Aida::EventFd</class>
    <class kind="struct">Rapicorn::Aida::TypeHash</class>
    <class kind="struct">Rapicorn::Aida::ValueType</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</class>
    <class kind="union">Rapicorn::Aida::IdentifierParts</class>
    <class kind="struct">Rapicorn::Aida::IdentifierParts::ORBID</class>
    <class kind="class">Rapicorn::Aida::OrbObject</class>
    <class kind="class">Rapicorn::Aida::SmartHandle</class>
    <class kind="struct">Rapicorn::Aida::SmartHandle::NullSmartHandle</class>
    <class kind="class">Rapicorn::Aida::SmartMember</class>
    <class kind="struct">Rapicorn::Aida::_ServantType</class>
    <class kind="struct">Rapicorn::Aida::_HandleType</class>
    <class kind="class">Rapicorn::Aida::ObjectBroker</class>
    <class kind="union">Rapicorn::Aida::FieldUnion</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer8</class>
    <class kind="class">Rapicorn::Aida::FieldReader</class>
    <class kind="class">Rapicorn::Aida::BaseConnection</class>
    <class kind="class">Rapicorn::Aida::ServerConnection</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodEntry</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodRegistry</class>
    <class kind="class">Rapicorn::Aida::ClientConnection</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_CPP_STRINGIFYi</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a1973b87166f77d463268a0c863298844</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_CPP_STRINGIFY</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>aa010f6ca5c148bf049bc1d03df773bf4</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_UNUSED</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a76eeecec7295883e87a3b2ad8298b4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_DEPRECATED</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a3f03486ebf9940fd77fb279c938c07bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_NORETURN</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a48a3bf8ef223d56e537dd4fe6bb8c657</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_PRINTF</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a24660c2a437d7ddab2782f3f103c7fec</anchor>
      <arglist>(fix, arx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_ISLIKELY</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a7148eec951b8a889bd3dec792a02c4df</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_UNLIKELY</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>ab33eb1c8bf2d4dee673e67b1d53f8d2b</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_ASSERT</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>a1b8fc316759bc1242930e7c40ab23470</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AIDA_LIKELY</name>
      <anchorfile>aida_8hh.html</anchorfile>
      <anchor>aa7728bc50d7ade5e09ce435f0346afeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a31ec5e241b25279c793d2114af1db92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldBuffer *(*</type>
      <name>DispatchFunc</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ab6972240c2409e10c00243dc4f98eb11</anchor>
      <arglist>)(FieldReader &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TypeHash &gt;</type>
      <name>TypeHashList</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a07fe876da77da2946a52404548e70ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldBuffer *</type>
      <name>SignalEmitHandler</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4966aa42a5d9c7a5f759fd6f5ef49e5a</anchor>
      <arglist>(const FieldBuffer *, void *)</arglist>
    </member>
    <member kind="enumeration">
      <name>TypeKind</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNTYPED</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92aafc9cd45b6e3d7988ea4b57bc1c5b468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOID</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac7dbd611f71ca1826b7767223d94dd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ab54febda14479a08816b39fd2159692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT32</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a50f7454db8e3863666e379ea3080b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a13e7ff2527c4f6f411c5f8de24e12632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad121241c9476c0e839b3cb6e7820044c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad7ac6c9d2f522609f32f18743074c00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUM</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ae07683ac6e6a0ce0847ca322a53eb914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEQUENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a44186695c152bdaf3acdf2100c02a9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECORD</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a547ec93ddc1e465a278689ac1112176e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a3d28c7cd557a73e5a3142ecdf73610ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a28754a6929f2813fd0e5f1aaeb637f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_REFERENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a8a1cf942d9b04acd1c9389e752d0e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a250839b656b7375712ba6daa04d07888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MessageId</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_NONE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bac688474c8ac020cbe82400b49157522c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_ONEWAY_CALL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba847bad2d87580284a851aef0a3793ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_DISCONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1ff5abae0b5affa659579875d73bf2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1713d747bbc871d9fb0640516460feee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_DROP_REFS</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba6d747dffd1f4ec26fae2e217cac40592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_HELLO_REQUEST</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba74a91795e3f9d163e5983bf606015459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_TWOWAY_CALL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baed1f09e9c0b41873a6a28659046a3317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bad840443b5af937891d8be95b855bb69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa48359186fcf0294cf41bd078c0eb454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_HELLO_REPLY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba68abc6bbf56e3d5a804b9d71935abf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CALL_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba486c5a3ce44d59b60f0cb154b7333481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CONNECT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba21a7be778c75d60e8e2c8b42d266a388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baad326870340735838e1bfa5f6f883fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type_kind_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aba93ad91b36f114b0787aeb348b786db</anchor>
      <arglist>(TypeKind type_kind)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_error</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a00c4fe1dee74e73750136be643a55419</anchor>
      <arglist>(const char *file, uint line, const char *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fatal_error</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5829bd912b46fa055bc00a0a280e546a</anchor>
      <arglist>(const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_warning</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2e1b4a62811a4ee93beaeda2e4a72750</anchor>
      <arglist>(const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>msgid_has_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>abb7c65f6106c3c475d56d968fcc9ef50</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>msgid_is_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a6ff450e3ca83a02073d13b8fdb31c464</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>MessageId</type>
      <name>msgid_as_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5353df79d874cd8837fe8d8f4493ad2a</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>msgid_mask</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a60bbe0922086a04c1437869b3ed7711c</anchor>
      <arglist>(uint64 mid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aaac06fbd269efad0f769d8c26a9a59c7</anchor>
      <arglist>(std::nullptr_t, const SmartHandle &amp;shd) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a11e0d1d63d630f0ee22627c68e5edb96</anchor>
      <arglist>(std::nullptr_t, const SmartHandle &amp;shd) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint64</type>
      <name>CONNECTION_MASK</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adf95aae4c9792cdd42a0be5d444522f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_ServantType</type>
      <name>_servant</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a424070ff463d381d27d4cceee4c7de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_HandleType</type>
      <name>_handle</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a82082338cb79e692465c1eab344be273</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aidacxx.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidacxx_8hh</filename>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="aidavariants_8hh" name="aidavariants.hh" local="no" imported="no">rcore/aidavariants.hh</includes>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <namespace>Rapicorn::Aida::CxxStub</namespace>
  </compound>
  <compound kind="file">
    <name>aidaprops.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidaprops_8hh</filename>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::Aida::Property</class>
    <class kind="struct">Rapicorn::Aida::PropertyList</class>
    <class kind="struct">Rapicorn::Aida::PropertyBool</class>
    <class kind="struct">Rapicorn::Aida::PropertyRange</class>
    <class kind="struct">Rapicorn::Aida::PropertyString</class>
    <class kind="struct">Rapicorn::Aida::PropertyEnum</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_AIDA_PROPERTY</name>
      <anchorfile>aidaprops_8hh.html</anchorfile>
      <anchor>aa5a2629b8cd94c459d6b9339ec50760c</anchor>
      <arglist>(Type, accessor, label, blurb,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_AIDA_PROPERTY_CHAIN</name>
      <anchorfile>aidaprops_8hh.html</anchorfile>
      <anchor>ace7d3ced1ee8609fd546ae03a7dbd18d</anchor>
      <arglist>(first,...)</arglist>
    </member>
    <member kind="typedef">
      <type>ImplicitBase</type>
      <name>PropertyHostInterface</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af619c1d6c3d5e5047a57b67d8e43a604</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a928ca0eb6efb81473997b84bce88cf24</anchor>
      <arglist>(void(Class::*setter)(bool), bool(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5b2ec1ee4abd1e2f3c7377307edb292b</anchor>
      <arglist>(void(Class::*setter)(int), int(Class::*getter)() const, const char *ident, const char *label, const char *blurb, int min_value, int max_value, int stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a05777a6137ebb746f9206e1c5151ba51</anchor>
      <arglist>(void(Class::*setter)(int), int(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ab7c9b410b78b1fbabfc1162e40bb425f</anchor>
      <arglist>(void(Class::*setter)(int16), int16(Class::*getter)() const, const char *ident, const char *label, const char *blurb, int16 min_value, int16 max_value, int16 stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2a9c4c08bf6bbf4bb720f99cbe7c90ad</anchor>
      <arglist>(void(Class::*setter)(uint), uint(Class::*getter)() const, const char *ident, const char *label, const char *blurb, uint min_value, uint max_value, uint stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a36bc7b4f3bd30ca4229235eb88352c2b</anchor>
      <arglist>(void(Class::*setter)(uint16), uint16(Class::*getter)() const, const char *ident, const char *label, const char *blurb, uint16 min_value, uint16 max_value, uint16 stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a0f95629be7d241c7d4a99c395237eb1f</anchor>
      <arglist>(void(Class::*setter)(float), float(Class::*getter)() const, const char *ident, const char *label, const char *blurb, float min_value, float max_value, float stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>abef4d67c51d3f66d9535174333056550</anchor>
      <arglist>(void(Class::*setter)(double), double(Class::*getter)() const, const char *ident, const char *label, const char *blurb, double min_value, double max_value, double stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2ed583ac47d65e12b254a7769e9f9de0</anchor>
      <arglist>(void(Class::*setter)(double), double(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a53341d92e924bb2c9803e221f5c1c6b4</anchor>
      <arglist>(void(Class::*setter)(const String &amp;), String(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a67705424c1f97bdf49d6c0b625d2a3ec</anchor>
      <arglist>(void(Class::*setter)(Type), Type(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aidaproto.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidaproto_8hh</filename>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
  </compound>
  <compound kind="file">
    <name>aidasignal.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidasignal_8hh</filename>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorLast</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorDefault</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorDefault&lt; void &gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, void(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::HandlerLink</class>
    <class kind="class">Rapicorn::Aida::Lib::ProtoSignal&lt; R(Args...), Collector &gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, R(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, void(Args...)&gt;</class>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;</class>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</class>
    <class kind="class">Rapicorn::Aida::Signal</class>
    <class kind="class">Rapicorn::Aida::Signal::Connector</class>
    <class kind="struct">Rapicorn::Aida::CollectorUntil0</class>
    <class kind="struct">Rapicorn::Aida::CollectorWhile0</class>
    <class kind="struct">Rapicorn::Aida::CollectorVector</class>
    <class kind="class">Rapicorn::Aida::Connector</class>
    <class kind="class">Rapicorn::Aida::AsyncSignal</class>
    <class kind="class">Rapicorn::Aida::AsyncSignal::Connector</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ae1c30620e796be152f684788ad8e81ae</anchor>
      <arglist>(Instance &amp;object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a8631a013ecb4377a0fcb2256a190d4fd</anchor>
      <arglist>(Class *object, R(Class::*method)(Args...))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aidavariants.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidavariants_8hh</filename>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
  </compound>
  <compound kind="file">
    <name>blobres.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>blobres_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::Blob</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_RESOURCE_DATA</name>
      <anchorfile>blobres_8hh.html</anchorfile>
      <anchor>a16408515faf12d138d4fa783f68b8bc9</anchor>
      <arglist>(IDENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_RESOURCE_ENTRY</name>
      <anchorfile>blobres_8hh.html</anchorfile>
      <anchor>a91827082cb8ca7fbaa6e2b1b559dbd77</anchor>
      <arglist>(IDENT, PATH,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cpuasm.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>cpuasm_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CACHE_LINE_ALIGNMENT</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a3a8630e7788c28e140acf9b479541be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>ae3a191584110d3c84095c302bd183bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a1bc24a5c8a0142f387a4991ea44bfe79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_LFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a70a9c49709d9d9cfac3d65a7df86a953</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a472060cf594ce33ccb40b3245643cfe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_HAVE_X86_RDTSC</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a46d2ea1e078a91271600ddd06cf857ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_X86_RDTSC</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>ad2e1de055f7d512b2bfb3d59d2598d79</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxxaux.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>cxxaux_8hh</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <class kind="struct">Rapicorn::Init</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ABS</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a361a81a8c626136757968ca93ef61c3e</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MIN</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a2b21e2501cee6a2b750aad3b69188ec9</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a59c744fc26e584a630b19fd6926d00ce</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CLAMP</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>acf2bbff518bf87715ae87a99c890245e</anchor>
      <arglist>(v, mi, ma)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ARRAY_SIZE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a919efcca2ea387e0120ef8b28b863097</anchor>
      <arglist>(array)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABS</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a26e668489fb528456f4bc54ba908d5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>adbd5cbe76e047a39e0a34f085cdae6fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a392fb874e547e582e9c66a08a1f23326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLAMP</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a0777ae4b2be3dd76d997e6a802a93b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_SIZE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a7ec751f49d6391028a94f1419374c2fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN_C</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>abbaccfbed35b945162c27ef6d3748e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRFUNC</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ad2491038c7c4e97c4ac4f7d3ed1000d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT64_MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ad0d744f05898e32d01f73f8af3cd2071</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT64_MIN</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ab21f12f372f67b8ff0aa3432336ede67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT64_MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a30654b4b67d97c42ca3f9b6052dda916</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIZE_T_MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>acfa3af56d5e0045c1d7a5682fd1d2853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSIZE_T_MAX</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aab89eada8d273a7e1f1447c5c0dffa3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN__BOOL</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa826fab2d0c3a98aba6765253bdd9433</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ISLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a8b4f0070d2d9ab6ea02e9f6e14111c76</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_UNLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a6f6e60a23b8c30515902847176228ac0</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_LIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a85dfcafc2c8c450bf29b5d19008f2cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a166c187faea6c07b17636595d40b963a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ab9b3b84a7f2c427fecdcea74dd6b282b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa6e7ede8d3a1fa9479b34255a578d10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRINGIFY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>afdf68e28db2e9d9d1f23f15d94976d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CONVENIENCE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a71e71bfd947064760bb308e4dbb3860e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CPP_PASTE2_</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a62f4414f2c7a32297aee975699682d3c</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CPP_PASTE2</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a95544dd93248e2dc97a37a119f704a2a</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CPP_STRINGIFY_</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>adf459c7cad8d76c57e9a90534f2650d8</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CPP_STRINGIFY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a083159cc753d992b3880df8bbab0c49b</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_ASSERT</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a34c385f2849b33d3ae995a76bdc94586</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PURE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>afa1bc864496b0051637cecd90fc45ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MALLOC</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a59addec25478ad6b2a5a81e0e93170ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PRINTF</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa0255895ef4c7a42bd93c4146b5e4ea7</anchor>
      <arglist>(format_idx, arg_idx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SCANF</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a055ed5ad96327a02bced1ac332d187eb</anchor>
      <arglist>(format_idx, arg_idx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_FORMAT</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aeaea97287a4f701b8832f85a83e36a03</anchor>
      <arglist>(arg_idx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SENTINEL</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>acf9e456509304d80efd0ca338e7228d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_NORETURN</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a76566cb7e04658975f1aab9e28f57a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CONST</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a8d2a1c10db597a0ab916d6e68c742e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_UNUSED</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>afbd17e499de501e91ea2a9a4789fb394</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_NO_INSTRUMENT</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a0611a2d9eabbd950f68203d62e237925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DEPRECATED</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ad87705fa74ae546768070875f48d3d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ALWAYS_INLINE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa2e19ffc0aa76ba66622bb6841c47022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_NOINLINE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a01c22f3b0bf1d8227e929436c7a287c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CONSTRUCTOR</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a07d1e416fb97c57a083a453fa0ffaaff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MAY_ALIAS</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a0f0963c83ef3d9aa1697c5cd0fecd80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIMPLE_FUNCTION</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a60a2ca5d93161ecadcbc07c4101dd668</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DIR_SEPARATOR</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa24f57e86327727350f44f6da7bf7ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DIR_SEPARATOR_S</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa3e8ef31c2bbabb92a382a1d1f6c6779</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SEARCHPATH_SEPARATOR</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a577ab9927d46a1cfacae6afc5a0eb962</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SEARCHPATH_SEPARATOR_S</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a483011a01998e745aaaa5b19ce6cc98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_IS_ABSPATH</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>af6b484b7064042065285f59fc97ba34d</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CLASS_NON_COPYABLE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a9fc541f13020424308b381296bd3aa4a</anchor>
      <arglist>(ClassName)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a91ad9478d81a7aaf2593e8d9c3d06a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16d6f020959fce8f26846704ebc1202f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08c53dfdeea218dc880288740a6628ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae0f57cae2524e94411aa67d5296f06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4cd21db9a6b3e2fac590ad05f34b8da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>int8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a34a2d08cdd3d8d2674be16cec3212eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa64695863923d53a505cf781a783785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84936f297319d5502963a9df1ccf6006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a62578e481b74c480f0224ff138c8cc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e07f478607e6ab6d8bcb2c95ab91be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82eae5a113474d2f8400917889bbef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; String &gt;</type>
      <name>StringVector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab17672389c3d548faea6426546704d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long signed int</type>
      <name>LongIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aba77ddbfe3450e4e917ce69ae1752c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long unsigned int</type>
      <name>ULongIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2cfe2f2457ff0d63e77b7a222cfabde3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>CastIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2cfea938cae87c445fd1fea97542ece2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>UCastIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61d0c13056c7cd780cede3db840635d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a4c9502dddaebce619acb8f77b9f0596c</anchor>
      <arglist>(uint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd3e53c92de36a2305c534555e5f7e2c</anchor>
      <arglist>(uint8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aced0aa59d5d5cc1ab119f66daaa7cf1e</anchor>
      <arglist>(int8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f12eefe4dfc3a391f45d8fa9798eb56</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>debugtools.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>debugtools_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::TestStream</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>docu.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>docu_8dox</filename>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_FLIPPER</name>
      <anchorfile>docu_8dox.html</anchorfile>
      <anchor>ac1f363ab01c042a93ae0e414940dcc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_TEST</name>
      <anchorfile>docu_8dox.html</anchorfile>
      <anchor>acbf6c9b52c8c37574da6c682a11b9aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_DEBUG</name>
      <anchorfile>docu_8dox.html</anchorfile>
      <anchor>a9a174d8255682c8693694b8f0629447c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE_DIR__</name>
      <anchorfile>docu_8dox.html</anchorfile>
      <anchor>a3fcc2b63619b567d9ecbbff6b27b9460</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>formatter.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>formatter_8cc</filename>
    <includes id="formatter_8hh" name="formatter.hh" local="yes" imported="no">formatter.hh</includes>
    <includes id="main_8hh" name="main.hh" local="yes" imported="no">main.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>formatter.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>formatter_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>inifile.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>inifile_8hh</filename>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <class kind="class">Rapicorn::IniFile</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>inout.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>inout_8hh</filename>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="struct">Rapicorn::UserSource</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::AnsiColors</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_FLIPPER</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a78de0fee8ecfa92c62e127fca78151d1</anchor>
      <arglist>(key, blurb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DEBUG_OPTION</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a5bb91f35322e737849763fc856b9c693</anchor>
      <arglist>(key, blurb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_KEY_DEBUG</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a1eec3a52b4d25ba020ba2966cee0dbee</anchor>
      <arglist>(key,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_FATAL</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a47c3fdf722aa61f0e215aa4d4e22a23b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a63243a3c02216ddbe34f4b278e59236e</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT_RETURN</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a2a80c7531fc9fe17c04a11f14457aae2</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT_UNREACHED</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>afafd899ad18eab80063da57d772208f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CRITICAL</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a683ca5957bcb789c003422d6118c0cbf</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CRITICAL_UNLESS</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a3675ea44fc61b1f8a99108b284c83119</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DIAG</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>ab60e9a6b39758dd6eda73ed63fc0680d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STARTUP_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a4611fd9cb331549ffef41ba42d3379f3</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert_unreached</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a9d3ab84d5e33153bce0366bfbf5619ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert_return</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a9710867e5b10920ac6847a6107af252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>fatal</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>aeb6ad588d9fde043f5a7ae20aef48e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>critical_unless</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a57fad0a4de54663e5cae930d27fc9abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>critical</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a69d0a66f699a8e2e06cce60af674843e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STARTUP_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a18bf7182c5daa47f660ab06d978f1481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a24df254ec81fc13256ad54cfe955d229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Colors</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESET</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515ab60027c645f68c4692be928555c6b5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printout</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab36936872d41aba9c3bec612eb2dbe9f</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printerr</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a96e94edd3515f60a397c3709640afff9</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_notice</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a490c936bd3936e5423bf3968b280f812</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_warning</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3a176807433f32344b1c29e0a9adf4</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_flipper_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa86dd177a188551ebe65d00b90ccdb86</anchor>
      <arglist>(const char *env_var, const char *key, bool with_all_toggle, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2e9c872f514527edf522224befd6df6d</anchor>
      <arglist>(const char *env_var, const char *key, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>envkey_debug_message</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a016e50bfd4b06198208803a3218713b4</anchor>
      <arglist>(const char *env_var, const char *key, const char *file, const int line, const String &amp;message, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_envvar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b2601d10a4a9109d6c907e60df0d69</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af17f742e6889a962d6c20b16841e4d31</anchor>
      <arglist>(const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_del</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec22b35108beef1271a9829c8609b294</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_config_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab9a21d4e8e101c9b41f0db315fdca5ce</anchor>
      <arglist>(const String &amp;key, const String &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_config_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a489b730cdfa517e8c2ceff633750220d</anchor>
      <arglist>(const String &amp;key, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_devel_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ada7681a12663d8950ea33cf29d82d57a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rapicorn_debug</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3de5099dad51e0483ca98cf8e22098</anchor>
      <arglist>(const char *key, const char *file, const int line, const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rapicorn_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16860f3bfe3924c44d8d6768b966a1e5</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color_code</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>aa40ee649038738e5f9bde4bb9e5c2968</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a7dcd80a9f6c9a5f6db335a5c077219f9</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorize_tty</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a539cd043ebe5503de6bc834d5e0f5b9f</anchor>
      <arglist>(int fd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_envkey</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ab74022b4aadf4c6c52b60b291590be5e</anchor>
      <arglist>(const String &amp;env_var, const String &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>loop.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>loop_8hh</filename>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <class kind="struct">Rapicorn::PollFD</class>
    <class kind="class">Rapicorn::EventLoop</class>
    <class kind="class">Rapicorn::MainLoop</class>
    <class kind="struct">Rapicorn::EventLoop::State</class>
    <class kind="class">Rapicorn::EventLoop::Source</class>
    <class kind="class">Rapicorn::EventLoop::DispatcherSource</class>
    <class kind="class">Rapicorn::EventLoop::TimedSource</class>
    <class kind="class">Rapicorn::EventLoop::PollFDSource</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>main.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>main_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::InitSettings</class>
    <class kind="class">Rapicorn::ScopedLocale</class>
    <class kind="class">Rapicorn::ScopedPosixLocale</class>
    <class kind="class">Rapicorn::InitHook</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>void</type>
      <name>init_core</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2c7198d1bba741180fc8c1c154f4db67</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_core_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9928167f88b4f9999d00197327a333a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a931b0686e62c1fc572b51318d9d76960</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_string_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4070966821dbf5bce86791b05ff7bbf0</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg, const char **strp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arg_parse_collapse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26e99a12175bb322145f72352f9cbd0d</anchor>
      <arglist>(int *argcp, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>rapicorn_version</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a39d47bc467d0d93c9222755e62fc0f07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>rapicorn_buildid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8836e8b19e344ddf3e182183d04a03d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91ca854a47f5191e9f126c3c47deda47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_alias</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa1813f40e9082a47a85d2fdbed6faeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_ident</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94a8f71ecda6cfa0f9d95a816cb19571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_cwd</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77613e0faf04099fc9ce91b97669f543</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>markup.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>markup_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::MarkupParser</class>
    <class kind="struct">Rapicorn::MarkupParser::Error</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>math.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>math_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>int</type>
      <name>dtoi32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af9d5bf5c91221efab9ad9a6b0f421171</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>dtoi64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a702ec30b042d043c8622cf43455ce383</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>iround</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a11b32a8860265c696770ba4b267f1338</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>ifloor</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae556428267057179e1e634571047df2f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>iceil</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0eb24c8ce57d7af6c8403f7e218670d4</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dtoi32_generic</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a15ed5b471a66e2bb611485f671ef49ad</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>_dtoi64_generic</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a74bb4c32fe4f51f478bbee3d5738f1bb</anchor>
      <arglist>(double d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>memory.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>memory_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::IdAllocator</class>
    <class kind="class">Rapicorn::AlignedArray</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>int</type>
      <name>fmsb</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a238705dee2a406d99d2c1c903c09dcd0</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>aligned_alloc</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa3d647c99f6a41d4a49dda7d5bb06871</anchor>
      <arglist>(size_t total_size, size_t alignment, uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aligned_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c5d47aff557524b20e03c76d2923368</anchor>
      <arglist>(uint8 **free_pointer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objects.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>objects_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <includes id="aidaprops_8hh" name="aidaprops.hh" local="no" imported="no">rcore/aidaprops.hh</includes>
    <class kind="class">Rapicorn::VirtualTypeid</class>
    <class kind="struct">Rapicorn::ClassDoctor</class>
    <class kind="class">Rapicorn::Deletable</class>
    <class kind="class">Rapicorn::Deletable::DeletionHook</class>
    <class kind="class">Rapicorn::DataListContainer</class>
    <class kind="class">Rapicorn::ReferenceCountable</class>
    <class kind="interface">Rapicorn::BaseObject</class>
    <class kind="class">Rapicorn::NullInterface</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatcher</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>Aida::PropertyList</type>
      <name>PropertyList</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab383dc90d5cd9dc3865ad2d03e293339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Aida::Property</type>
      <name>Property</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac698bb19b3c36fe0bf6f77f05c4a3862</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>platform.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>platform_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="struct">Rapicorn::CPUInfo</class>
    <class kind="struct">Rapicorn::TaskStatus</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>CPUInfo</type>
      <name>cpu_info</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af92b7413c99dc16f393900adb8ff8085</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cpu_info_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af851465f3a93e7ad8b20835a864a90ee</anchor>
      <arglist>(const CPUInfo &amp;cpu_info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>quicktimer.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>quicktimer_8hh</filename>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::QuickTimer</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>rapicornconfig.h</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rapicornconfig_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>Rapicorn</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a33b62113c09fe104e99ee56362551b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_NAMESPACE_NAME</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a4a40673c3cf2a183b4a6f845cd2c562b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_EXTERN_C_BEGIN</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a233aab8d10dca348a61ad7636d4ee622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_EXTERN_C_END</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>ad80098125677e62c19f8bea5f764c81a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_VERSION</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a4ccbbaeddcd9b1b2f52348048794ef06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CHECK_VERSION</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a83c7c71588248327531242ab1b69dada</anchor>
      <arglist>(year, month, revv)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DEVEL_VERSION</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>aa7325c4617642e0244ec4d8e573b61b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STABLE_VERSION</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>acdbe9056bdac4a9afa956fefc2ac205b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_I18N_DOMAIN</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a27d90a15250e8695bcfac661fe382470</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DOCDIR</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a09f6116b422829f8709e61529d63f126</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DATADIR</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>aa862ea518166d5f4b38d3aa5584f82b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_LOCALEDIR</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a4d249fc213455a4080192d7cb3caa6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_WITH_PANGO</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a8ee0f01c079c35b17e37399e5b58675f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_OS_UNIX</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>af4f3c724e18d522a68e3f8ebdb2d3941</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_POINTER</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a2886ea5575b8e73955ebef3df077d46f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_LONG</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a6bc54be026acc402184c0734ea5fb147</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_SYS_TYPESH_UINT</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a45ae602272759766ff8e956db1f9a18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_PTHREADH_SPINLOCK</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a6224795b8f7df675696235bd665008b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_PTH_MUTEX_T</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>acf06f36da38efb9f5414270bf64ac69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SIZEOF_PTH_COND_T</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a3a9d31d4878a2be2eb4be9eff828fd3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SPINLOCK_INITIALIZER</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a1c6041f275929f90e584fef7b03e44a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_HAVE_MUTEXATTR_SETTYPE</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a369b9ed3e60ef36e2ba87c39fbf1c3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLIN</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a39a43ecf7c6b38da931b5a8302e16bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLPRI</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a6801cb5ee0dfcf4fc7da73ca5a0c1aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLOUT</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a45353f0c1f47a3631581f3148cadff8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLRDNORM</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a2640d60842a32d060a2ef5cfdc9a3979</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLRDBAND</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>add224706f92547ebc29f825f7a5c8adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLWRNORM</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a0a36bdaa004efd4f025814175c0d8f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLWRBAND</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a62b63d2a28665c022a8b09bc0a4e6272</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLERR</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>aefb128054cb16290daaf2f8e3f40d76e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLHUP</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>a6910e88615a3f2d5d918aaab800f3e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SYSVAL_POLLNVAL</name>
      <anchorfile>rapicornconfig_8h.html</anchorfile>
      <anchor>ab9f4a77f5a4026166a94e37e2bead8b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rcore.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rcore_8hh</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="aidacxx_8hh" name="aidacxx.hh" local="no" imported="no">rcore/aidacxx.hh</includes>
    <includes id="aidaprops_8hh" name="aidaprops.hh" local="no" imported="no">rcore/aidaprops.hh</includes>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="formatter_8hh" name="formatter.hh" local="no" imported="no">rcore/formatter.hh</includes>
    <includes id="inout_8hh" name="inout.hh" local="no" imported="no">rcore/inout.hh</includes>
    <includes id="inifile_8hh" name="inifile.hh" local="no" imported="no">rcore/inifile.hh</includes>
    <includes id="platform_8hh" name="platform.hh" local="no" imported="no">rcore/platform.hh</includes>
    <includes id="debugtools_8hh" name="debugtools.hh" local="no" imported="no">rcore/debugtools.hh</includes>
    <includes id="loop_8hh" name="loop.hh" local="no" imported="no">rcore/loop.hh</includes>
    <includes id="main_8hh" name="main.hh" local="no" imported="no">rcore/main.hh</includes>
    <includes id="markup_8hh" name="markup.hh" local="no" imported="no">rcore/markup.hh</includes>
    <includes id="memory_8hh" name="memory.hh" local="no" imported="no">rcore/memory.hh</includes>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <includes id="quicktimer_8hh" name="quicktimer.hh" local="no" imported="no">rcore/quicktimer.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <includes id="math_8hh" name="math.hh" local="no" imported="no">rcore/math.hh</includes>
    <includes id="unicode_8hh" name="unicode.hh" local="no" imported="no">rcore/unicode.hh</includes>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="xmlnode_8hh" name="xmlnode.hh" local="no" imported="no">rcore/xmlnode.hh</includes>
    <includes id="regex_8hh" name="regex.hh" local="no" imported="no">rcore/regex.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>regex.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>regex_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>CompileFlags</type>
      <name>operator&amp;</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>addf1c6f468091ce6655e5439b3bf366a</anchor>
      <arglist>(CompileFlags s1, CompileFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>CompileFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>aaec61ac7d08ebe38bd292e9cd9866d86</anchor>
      <arglist>(CompileFlags &amp;s1, CompileFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>CompileFlags</type>
      <name>operator|</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>aadc81cf8025de4efa21e0f8c16dc12c2</anchor>
      <arglist>(CompileFlags s1, CompileFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>CompileFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>a040e7deff6f71af84a3378671cfc0870</anchor>
      <arglist>(CompileFlags &amp;s1, CompileFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>MatchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>a8c3ed595343a4f5f38d29852fcc2da9a</anchor>
      <arglist>(MatchFlags s1, MatchFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>MatchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>a072c800caffc5c4a3e5f4c2487b88878</anchor>
      <arglist>(MatchFlags &amp;s1, MatchFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>MatchFlags</type>
      <name>operator|</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>af0fb529a8803e7f0f1aa5620e98ea1e2</anchor>
      <arglist>(MatchFlags s1, MatchFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>MatchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>a454e340b83a5fc2bdcebee2da1d9ca6c</anchor>
      <arglist>(MatchFlags &amp;s1, MatchFlags s2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_simple</name>
      <anchorfile>namespaceRapicorn_1_1Regex.html</anchorfile>
      <anchor>a6888b0d9b43ee666b31cedae1fa7b9c6</anchor>
      <arglist>(const String &amp;pattern, const String &amp;utf8string, CompileFlags compile_flags, MatchFlags match_flags)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strings.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>strings_8hh</filename>
    <includes id="formatter_8hh" name="formatter.hh" local="no" imported="no">rcore/formatter.hh</includes>
    <class kind="class">Rapicorn::Strings</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CQUOTE</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>abc16d95b3e5a422ba6901427d91427b7</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING_VECTOR_FROM_ARRAY</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>aac25174bfb51078a50b85798b6fe92b3</anchor>
      <arglist>(ConstCharArray)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRING_VECTOR_FROM_ARRAY</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>afd29267eab097bc08aab51b7298874f8</anchor>
      <arglist>(ConstCharArray)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CQUOTE</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>abcea90f4ce103b3f6b26a6957592dc4c</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>rapicorn_gettext</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad77f658a4e9f58fbb692bd8e7364e18a</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cstring_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a184ce3f360a16c19b05aa71f3f5b68</anchor>
      <arglist>(const char *string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a877751570b565ebe8768df63169e5e15</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aef23cfd69b1962d42eda9838006cdd0d</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77d1b603d207742ce001c85ec5a240a4</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cfef18e6ee55a693d7e82cb010effca</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_multiply</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a186e9ac6634c2be77152a465336f767a</anchor>
      <arglist>(const String &amp;s, uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_canonify</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a75cee7a94e49e3678b35134d00c7f898</anchor>
      <arglist>(const String &amp;string, const String &amp;valid_chars, const String &amp;substitute)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_a2z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae003b5e0377a41b24109d3fe63bf6243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_A2Z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16b08c4a178ce731abf12f4d7983661c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_ascii_alnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5ed54bc7aa14d537873ff30d7d75d2de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_tolower</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0e80960940efceef8ec52778ef72c55</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_toupper</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a86354c7902a6afbafb75597b25f84738</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_totitle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5e1578da91aca5928c8cff7ee83b873</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f012815cf0a15b9ce32ce52decbc809</anchor>
      <arglist>(const String &amp;string, const String &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_join</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe062e2b14ba277feff47bd5312db242</anchor>
      <arglist>(const String &amp;junctor, const StringVector &amp;strvec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a12e852c1f51ccdef22b0d8298054881a</anchor>
      <arglist>(const String &amp;string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac17484b7e899090db75a70c51695f33d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad85455a62ddae50689ac3605b7c9b34a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8fd8489d13343bc19a359a0ce032e624</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_has_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82e98eaff382b3afbcd9a1c1ee2b6f82</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a523fcfbe297b1084cd9d0cf0ab73a55a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a41e7a6037022e9bf9c22fca4e47fe4a5</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfc6be3d5d1483475edc46f9db95b9a5</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a855a2730c71981afd9248073a1487f8b</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afcd374c6928481d798baaabbcb8a49dd</anchor>
      <arglist>(const char *dblstring, const char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94d94e40016953a45f241099becd2d9f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82a7acd9a74ad348f79d3d506459d3de</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1db606a57d29397e3c3b2dcbacd0c302</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>string_to_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4f11172904317c35ba4e3fd3ec3f603</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a59f63cf89417af26921259d2bae5353c</anchor>
      <arglist>(Type value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_type&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaba1a50a843a918003457078df317e5d</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4792bcc71fb880a987c8d1fcf08b556e</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>string_to_type&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a206dc77e0167886e68a611cbf835ac97</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad860af223c01d9e5fe1abdfff11ed463</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_type&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a67fadb67a7ab587fbe142c088f950615</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1dfabd72e0feab9a8934a6181dbb9fed</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>int16</type>
      <name>string_to_type&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a478346e6838b837f505f01932bb633f1</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeb136ffde25f230d916ae11a9285d61c</anchor>
      <arglist>(int16 value)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>string_to_type&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b6c5ba7c593eaa9aefc8e06611b0c04</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a4fcd34658c9a9dcbb37506b78f06a6</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_to_type&lt; int &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84f35ea0bed7a62876ea2be3a3d129fb</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6f71d0b303552e51c016608eaf3f5030</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>string_to_type&lt; uint &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa72d40c031a2ba1f05e1048c94e26d6e</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad06ffd2d1c9b40a3d71d635d19b624b7</anchor>
      <arglist>(uint value)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_type&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad0a5e86ac3ed55fbccfc954bd446ad3d</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a503db58c61b46db3e96a6d247c66b003</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_type&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94960be0c4241e32677ae05f703aa7e5</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a906244b5e7b5bf7a4894e0b904d00588</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_type&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0280ac16f2b12f6ed1f5e1a704a5667f</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f2534edee622e0c439b4ffb5e712357</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; double &gt;</type>
      <name>string_to_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4b584badecf6ad4e187b0a9ebd9a0e66</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6bc7f3471ccb82b16dd66cc2a4244552</anchor>
      <arglist>(const vector&lt; double &gt; &amp;dvec, const String &amp;delim)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_errno</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac2d70acf529c14500eddcc2f0dee655f</anchor>
      <arglist>(int errno_val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_is_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae3eef88f3144118ed8f39ffc440764b6</anchor>
      <arglist>(const String &amp;uuid_string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_cmp_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f6b25d462eaeece3ecf0dac5de08cb9</anchor>
      <arglist>(const String &amp;uuid_string1, const String &amp;uuid_string2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_startswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6f9b700c92add1fe94fff83b8cd4ae</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_endswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68fcf11adb4255e92cd5d611b5b31318</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a98ce101af4fcf48e9e35a049589880a5</anchor>
      <arglist>(const String &amp;ident1, const String &amp;ident2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier_tail</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09dca5a31152ae6137b9c1ba7298b196</anchor>
      <arglist>(const String &amp;ident, const String &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_pretty_function_name</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfda5d69d7e8692562dfaa66c7778791</anchor>
      <arglist>(const char *gnuc_pretty_function)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cescape</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8299326b493de662098921b7a180bd17</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a795a0a454b6dde0f435fc4dcf3a7d38e</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a36a0241f3983e64505081a124e5c5cad</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_hexdump</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab1b6b7ec8d95f0e77df0e75e89d9355d</anchor>
      <arglist>(const void *addr, size_t length, size_t initial_offset)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a632d5948ccac14b9d4ff2e089c7d6880</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45d7d1d37bd26585b163dc50b31cc303</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6d8dde3a7e91d895fb223e9505818eff</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_substitute_char</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a458f21b1370a4f30527e7c6dfd734ce2</anchor>
      <arglist>(const String &amp;input, const char match, const char subst)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vector_find</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1ac20f4f074bd445f624dffec483b85b</anchor>
      <arglist>(const StringVector &amp;svector, const String &amp;key, const String &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>cstrings_to_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad3503997cf1fd0687031dfb891843803</anchor>
      <arglist>(const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memset4</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a530022bcd34f01295dabf360c750b85f</anchor>
      <arglist>(uint32 *mem, uint32 filler, uint length)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>posix_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61e0122a3069ba22a830af964c22b118</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>current_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26adc180c8b1288a1eea0c0bf41508a8</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_option_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a54b8159b50dc3f3a90ebde519b1f0712</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_option_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08cbc395fb2a3bcba8fa265204090b5e</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_options_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a231c3452e3bdf5db9bb2a2afe0a4dcaa</anchor>
      <arglist>(const String &amp;option_string, vector&lt; String &gt; &amp;option_names, vector&lt; String &gt; &amp;option_values, const String &amp;empty_default)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>text_convert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aab7ab68dd73485ab7e44f68bcb506bf8</anchor>
      <arglist>(const String &amp;to_charset, String &amp;output_string, const String &amp;from_charset, const String &amp;input_string, const String &amp;fallback_charset, const String &amp;output_mark)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>strerror</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acff50a73b33f31a8d2ad3f515720dbac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testutils.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>testutils_8hh</filename>
    <includes id="rcore_8hh" name="rcore.hh" local="no" imported="no">rcore/rcore.hh</includes>
    <class kind="class">Rapicorn::Test::Timer</class>
    <class kind="class">Rapicorn::Test::RegisterTest</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Test</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TTITLE</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a7f388f6d3c689cd8c1b7ade358285a87</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TSTART</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad79f34884d0b00cb9aa38c71422aa5dd</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TDONE</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a61bb2f89de27f74f8db608aa36f25996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOUT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>afb1d46debc8bc422e60621b3d51e70ac</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TMSG</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a968431da0bcfe449540af3c61a47ad5d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TINFO</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>aa34682f2c6947ea0dedc2910138c7ec3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWARN</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a18f8ec714eeaf8dcd9a1045cc357b492</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ac315a99971739ef05b2c65cd36ef35ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TASSERT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a3a39dc0079a11e2ed8ac40db2cd30fa7</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TASSERT_AT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad71d705e2373dd881977928509e50328</anchor>
      <arglist>(LINE, cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TCMP</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a78fca0e2c2f18b434176208c72a5edda</anchor>
      <arglist>(a, cmp, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TCMPS</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a37f03abb55e75962ee5271b20363e586</anchor>
      <arglist>(a, cmp, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TASSERT__AT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a37e1bafdb81e9a076b3ee93a5ac80879</anchor>
      <arglist>(LINE, cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TCMP_op</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>acc5b63bd9e102ce5cbebc4c815d93be7</anchor>
      <arglist>(a, cmp, b, sa, sb, cast)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_TEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad63f947ba2083ebe03542d0e144362d0</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_SLOWTEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a5308efd838deb2667f4169c3fa35218e</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_LOGTEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ab69e3ba5bb2f0f44058388805923aa1c</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="enumeration">
      <name>ModeType</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_TESTING</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a67739471a5884bf784964a4bc0e117fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_VERBOSE</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a5bb35484f55e6e1a8280847355d465ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_READOUT</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a2a0197e4f7980deb88be32464917b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SLOW</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284aea3241e04a9179114779f52bf5045c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core_test</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a449637d24c531aa019bee5c206b07d77</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a0e1263eb1dab165cbedbc8a247efafdc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>af3276e84937383962d36a32c4e9c5372</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa87de7c3a3991e59d82c3ce99919e91f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slow</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2bf53b41a6d5a88fa365bc7a1eee49f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ui_test</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aea9fae6e6fcfa6d16a00f378811342b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_assertion_hook</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a25c63e277b3756eb98743fb18289d6d1</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_failed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2ccd7777505443d4835ba41d53f85f47</anchor>
      <arglist>(const char *file, int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9c549317ab0c4165e75e358d2a2c8824</anchor>
      <arglist>(const char *a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a63f72b037c7dcb2c80d75ff9fe180b42</anchor>
      <arglist>(const V *a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2c439da2203091b50bfc8f716ce6e60a</anchor>
      <arglist>(const A &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a27b5d634a394e6cbab800108b39bbba4</anchor>
      <arglist>(const float &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>abb000d0fa00ce18d5ced662955b7c0a7</anchor>
      <arglist>(const double &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a7fc809fbddd47915666a5b4db18ffac3</anchor>
      <arglist>(const bool &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int8 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a6b6f8ab2aae8c681d71163c9158224c9</anchor>
      <arglist>(const int8 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a5057d02c617a12b3251f6c5f2714f607</anchor>
      <arglist>(const int16 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int32 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a92d7b53342bf1cb13e382ea8a72f1bbd</anchor>
      <arglist>(const int32 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab0e47f59b429075a1889073163f7a8c6</anchor>
      <arglist>(const int64 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint8 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9894b16e098a1eb883f8c52c4539b691</anchor>
      <arglist>(const uint8 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a5b2e8e809edb3274beeb1f8f9ee88652</anchor>
      <arglist>(const uint16 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint32 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a8067b37478a1d84ac404584c413483d2</anchor>
      <arglist>(const uint32 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab3d73ce33e70c89c1cb9367abf692c56</anchor>
      <arglist>(const uint64 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a6ce4bc28f3bb8d60e3457f7aba317b5d</anchor>
      <arglist>(const String &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>_as_strptr</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a046fa31406a4977811191ea6c94a5322</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>rand_bit</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a257ab23e2b863bcb2f6e019fae8e2eac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>rand_int</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>acd7af583d19d17fc61ec12621210e29c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>rand_int_range</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a349d533b26ce8691e4d6a259fd1a050f</anchor>
      <arglist>(int32 begin, int32 end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_rand_double</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ad7a35b7591d74c208f631cd787a3377a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_rand_double_range</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab6d0e6ea96fc7928fc3f9d7862dbeb13</anchor>
      <arglist>(double range_start, double range_end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_fork</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a944c36f642346303253eec823e22eefa</anchor>
      <arglist>(uint64 usec_timeout, uint test_trap_flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_fork_silent</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a79c7c34de3ce0f127750a1b0f48f9204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_timed_out</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a325a0e92aaa9addcc8319124344ca5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_passed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>afcd2c7c50ebf814443103ae67f516a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_aborted</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa520e482002d01c04fa04bafc9037d13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_sigtrap</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a508c770e055e8a31a549665a41c10062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>trap_stdout</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a8db7deb611ce299d670cf3d1ccb5cc23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>trap_stderr</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a4291fcc868f309999c9174919e105f07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>thread.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>thread_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="threadlib_8hh" name="threadlib.hh" local="no" imported="no">rcore/threadlib.hh</includes>
    <class kind="struct">Rapicorn::RECURSIVE_LOCK</class>
    <class kind="class">Rapicorn::Mutex</class>
    <class kind="class">Rapicorn::Spinlock</class>
    <class kind="class">Rapicorn::RWLock</class>
    <class kind="struct">Rapicorn::ThreadInfo</class>
    <class kind="struct">Rapicorn::AUTOMATIC_LOCK</class>
    <class kind="struct">Rapicorn::BALANCED_LOCK</class>
    <class kind="class">Rapicorn::ScopedLock</class>
    <class kind="class">Rapicorn::Cond</class>
    <class kind="struct">Rapicorn::Atomic&lt; char &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int64 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint64 &gt;</class>
    <class kind="class">Rapicorn::Atomic&lt; V * &gt;</class>
    <class kind="class">Rapicorn::Exclusive</class>
    <class kind="class">Rapicorn::AsyncBlockingQueue</class>
    <class kind="class">Rapicorn::AsyncNotifyingQueue</class>
    <class kind="class">Rapicorn::AsyncRingBuffer</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::ThisThread</namespace>
    <member kind="define">
      <type>#define</type>
      <name>do_once</name>
      <anchorfile>thread_8hh.html</anchorfile>
      <anchor>acba25f2657a42c1c6a786d5b537b6a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ab7e33385c69891d6f9b67e2c76ede9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>online_cpus</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>acac4c2a321d197f7eee1a88da8fb7215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a7d462ea80f7db209f4897309d3e0b049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a6dd2d6965877652c5b733b1822d53c75</anchor>
      <arglist>(int cpu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>thread_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ade8b26f2d65becbcd62a8d224b0f7264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a84e55848b3b318dcea5edaef49f84778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yield</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a35a22b1d7e4ca2f51fd786de16f3fc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::thread::id</type>
      <name>get_id</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a9344650ad9ebef82a7ea8771b581d5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_for</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a5ab35ed8e4903c7866b1833044bbdcc2</anchor>
      <arglist>(std::chrono::duration&lt; Rep, Period &gt; sleep_duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_until</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a52bd6072ee842c384186d2a437b5e352</anchor>
      <arglist>(const std::chrono::time_point&lt; Clock, Duration &gt; &amp;sleep_time)</arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::RECURSIVE_LOCK</type>
      <name>RECURSIVE_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61669cb28487b4c08cb2ce043edd6ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::AUTOMATIC_LOCK</type>
      <name>AUTOMATIC_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a22171f89df45aef5fd1c7fac16e7e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::BALANCED_LOCK</type>
      <name>BALANCED_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a975d39087ad1d063261fb5a9a2e91ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadlib.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>threadlib_8hh</filename>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <class kind="class">Rapicorn::Lib::Atomic</class>
    <class kind="class">Rapicorn::Lib::OnceScope</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASECTION</name>
      <anchorfile>threadlib_8hh.html</anchorfile>
      <anchor>a8af6e5b1de8dcbc70359bfe8fcd305d9</anchor>
      <arglist>(bytes)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DO_ONCE_COUNTER</name>
      <anchorfile>threadlib_8hh.html</anchorfile>
      <anchor>af3db7f12ae71cd12e929e2d5f3d0c2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DO_ONCE</name>
      <anchorfile>threadlib_8hh.html</anchorfile>
      <anchor>acdc2bad06503c3c8b0341c3b1f47a0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>atomic_load</name>
      <anchorfile>namespaceRapicorn_1_1Lib.html</anchorfile>
      <anchor>aafd09d9fae32d1b7f2faa3a25f8460cc</anchor>
      <arglist>(T volatile *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>atomic_store</name>
      <anchorfile>namespaceRapicorn_1_1Lib.html</anchorfile>
      <anchor>a9874b9f3a4cc817f0ec9b58f6449ccda</anchor>
      <arglist>(T volatile *p, T i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>once_list_enter</name>
      <anchorfile>namespaceRapicorn_1_1Lib.html</anchorfile>
      <anchor>affb8d57ad3ad6494eeb5fc54b6f86d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>once_list_bounce</name>
      <anchorfile>namespaceRapicorn_1_1Lib.html</anchorfile>
      <anchor>a207a67ab2f8d482be8819bdf331671af</anchor>
      <arglist>(volatile void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>once_list_leave</name>
      <anchorfile>namespaceRapicorn_1_1Lib.html</anchorfile>
      <anchor>afce0da6608a4d84c3d5d9793984503ce</anchor>
      <arglist>(volatile void *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unicode.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>unicode_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Unicode</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isvalid</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a034bd3e656a8a0b9c77e452c821d8403</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isalnum</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ab184be0152cce5fac14c57b4affe2cf5</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isalpha</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a2b0c403cc8c19bbcc64b860eed6427ca</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iscntrl</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>af4022c013828a5cd198a437f73d7779e</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdigit</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ac6cbd8f3ac0a8aa8ae60f53641f5ec9f</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>digit_value</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ae0bd53be33bbc5141acf30c3c9b833bb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isgraph</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a50f2af0c9e7f9ed3fc77a8fac50d791b</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>islower</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>abdf15618ab32514e1b04677169390ccb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>tolower</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aedb96b46ffd9ad7adddd6b374f387965</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isprint</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a4903e184161ca352863d6dcb0daa40fb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ispunct</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a4111d20c8e732413c56e42f4abd3a393</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isspace</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>adfbe64624b4a7b4fc24eba7230575269</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isupper</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>adcc658bf4c7a929a28c6d20ec5c212d9</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>toupper</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a0e1a89851833ad82a9c348330acdb039</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isxdigit</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a7146272fe8955e37401c743cd7007c2a</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xdigit_value</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aa2b7b6d522347696b2ce02677ad8ee8b</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istitle</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a757aea4b2822bbde1d6958388d92eb95</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>totitle</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a2530443bb6db13e2eb26ce9d24a85e08</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdefined</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a9214acff434b5d6c982e422fcbab1952</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iswide</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>abb63d9adb61cb346387d550c78b6a1b1</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iswide_cjk</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>add767a051e13f3ffe8158f402ec190c8</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_type</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aa75857f4913733e1143105a98007f64c</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>BreakType</type>
      <name>get_break</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a64bfa474efbcb26a6e0250da3ad416b1</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b8016ef0338395d02131d0b389a8644</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0051b19617bb25e55b8ee1c2e68de567</anchor>
      <arglist>(char *c)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5f98ae90d754c37cf1a1e370f05169d4</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad079b05bd418f9333c719ac37c64ddee</anchor>
      <arglist>(char *c)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_find_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1a76aebc707c3ca4a4ed314cf323a04a</anchor>
      <arglist>(const char *c, const char *bound=NULL)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_find_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9ecf398b044cbb909b892af6075da154</anchor>
      <arglist>(char *current, const char *bound=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_find_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe95d2a9b2934829ff01e18c709b2963</anchor>
      <arglist>(const char *start, const char *current)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_find_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a33af5fb39e8728ca6fd3dcd7a71b5ff9</anchor>
      <arglist>(const char *start, char *currrent)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_align</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06ad0783bd2386fe56d03f3ae9bb273c</anchor>
      <arglist>(const char *start, const char *current)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_align</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8be7a147b9cdd7fea2cd4ffb9075c0bc</anchor>
      <arglist>(const char *start, char *current)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>utf8_aligned</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cdf6badbedf2eba668100dfcac5114d</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>utf8_to_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acb378191b52eef855de114c7f3555330</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_from_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aafe5f6ce231406bb8dccf715af5e0566</anchor>
      <arglist>(unichar uc, char str[8])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>utf8_validate</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2b8b3b4465868a3fb9d27bc290f8d6b5</anchor>
      <arglist>(const String &amp;strng, int *bound)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rcore_2utilities_8hh</filename>
    <includes id="inout_8hh" name="inout.hh" local="no" imported="no">rcore/inout.hh</includes>
    <class kind="class">Rapicorn::TraitConvertible</class>
    <class kind="class">Rapicorn::DataKey</class>
    <class kind="class">Rapicorn::DataList</class>
    <class kind="class">Rapicorn::DataList::NodeBase</class>
    <class kind="class">Rapicorn::DataList::Node</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Path</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEPARATOR</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a0920890c442b665b0c6609fa796e9047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEPARATOR_S</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>aca761e7d12e548532f757d7cceacbb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHPATH_SEPARATOR</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a5db5904907495d474fe92156ece2df52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHPATH_SEPARATOR_S</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>acf32d68c4474a3f0ba0dbfbe20618c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__PRETTY_FILE__</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>acdc77560e2c0593242cf83f4d126229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRLOC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a5d88e286727da87a591cc86da40657d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>return_if</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a1ce38ddddb17a04a5d6430c0149c8119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>return_unless</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ac4ea01920a3929f349d27eac53eb2b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PRETTY_FILE</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a0eb36df9d1885a5875648a6102f30ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRLOC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a3a97af7008caf2f6d1ec12ca81d3fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRFUNC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad9e6f7b9fea3910164b531af4fbbba9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRINGIFY</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad75a1c2a261f81a6f757be064a2370ea</anchor>
      <arglist>(macro_or_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRINGIFY_ARG</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>abefb78cc4e7965d616026a2f3b0a16e0</anchor>
      <arglist>(arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_RETURN_IF</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad235cd07741a3eba1d1870f6b892936b</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_RETURN_UNLESS</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a783c201419fa5cbb5c41209fe9f1d9db</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_BREAKPOINT</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a6c7f0d3c77a901acb3571ee0db64cc66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>abs</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac8935b7be4e83220c6e182c830d5167a</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clamp</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b7b47c60b92cb59e0b3932fb97329a7</anchor>
      <arglist>(const T &amp;value, const T &amp;minimum, const T &amp;maximum)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>vector_from_array</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04f376c05ae1e6dc267b05ff9effa3dc</anchor>
      <arglist>(const T(&amp;array_entries)[S])</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>pretty_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc0d588a0ba15bf4b486cf1e03f10838</anchor>
      <arglist>(const char *file_dir, const char *file)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>pretty_backtrace</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3052c1d4c26a6227e8c2a4792a6a3d2a</anchor>
      <arglist>(uint level, size_t *parent_addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_backtrace_snapshot</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3ad33e283b20ae36df3000e07587fe39</anchor>
      <arglist>(size_t key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_backtrace_showshot</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4e6846022d5dcfa77c17f0077164987e</anchor>
      <arglist>(size_t key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakpoint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab311e2c8581a101f63818b430cc4b800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>process_handle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e35b4c257c8dd22f85e03ee799f4fa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_startup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae8ed4bec3134b69126b686ae3ac661de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_realtime</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac500700b3a37937ab1a47e9ca54b800c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_benchmark</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8e6aefca1841bb6009772970c45fe96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_resolution</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f22e8bd6f8b84e06e57b51fcd7f8ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>timestamp_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a35badd327a0ea81f1178329d956a348e</anchor>
      <arglist>(uint64 stamp)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>dirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ab2f8dec1b122e92dc8c8f79b857d569a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>basename</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2de3f9da8ea9637473babea208cafbd8</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>abspath</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>abfb4c9905790e104afdfe480cb55f9d2</anchor>
      <arglist>(const String &amp;path, const String &amp;incwd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>acf7b18825e3ff1d026f00623cade1405</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>af0a67c6d6605e957a44ab243f5a72a7d</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>skip_root</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a4d21ccd7a130112bd10db713fb53d14a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a3d99afd50c944702015419628e88323e</anchor>
      <arglist>(const String &amp;frag0, const String &amp;frag1, const String &amp;frag2, const String &amp;frag3, const String &amp;frag4, const String &amp;frag5, const String &amp;frag6, const String &amp;frag7, const String &amp;frag8, const String &amp;frag9, const String &amp;frag10, const String &amp;frag11, const String &amp;frag12, const String &amp;frag13, const String &amp;frag14, const String &amp;frag15)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ae1304999c5d8503029949aa458f4ee52</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a8ed528ee7f3f017a61731b4b4973116e</anchor>
      <arglist>(const String &amp;file1, const String &amp;file2)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>memread</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a22a1c0568cd4f8ee787e4bbfb2707aa6</anchor>
      <arglist>(const String &amp;filename, size_t *lengthp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memfree</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a3f2161eae6c6e64e7ba98743b457d124</anchor>
      <arglist>(char *memread_mem)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cwd</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>aea9cf3ea2b5c66b186b33206cae40a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>vpath_find</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2eb15061edbfc230170e62a0495f34de</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>searchpath_find</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a71df0f55836d0b3a00f22d7b5c793610</anchor>
      <arglist>(const String &amp;searchpath, const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>searchpath_split</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a4a56c3a92f67437ae3d32f27693436f3</anchor>
      <arglist>(const String &amp;searchpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>url_show</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe82dc239e06d97bf77dd6d7f126e5ed</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>url_show_with_cookie</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe799f823c33d5ae558be4ab47beeaed</anchor>
      <arglist>(const char *url, const char *url_title, const char *cookie)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>url_test_show</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad7a3478b43ddd27285631cdbfb6e412a</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>url_test_show_with_cookie</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc7f2cd27700b7678ddf090b29ad8c1d</anchor>
      <arglist>(const char *url, const char *url_title, const char *cookie)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>cleanup_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9b89f655e13a41709abf1165f193d6df</anchor>
      <arglist>(uint timeout_ms, void(*destroy_data)(void *), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup_force_handlers</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7ed7231c0a66273b9414d96024270c7e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint8 *</type>
      <name>zintern_decompress</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64260cc6cb05aba6be0f0953cc6ce59a</anchor>
      <arglist>(unsigned int decompressed_size, const unsigned char *cdata, unsigned int cdata_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zintern_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac02b3dcb0ce7acdb1455d5e3967b1d3e</anchor>
      <arglist>(uint8 *dc_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalid_type</name>
      <anchorfile>namespaceRapicorn_1_1TEMPLATE__ERROR.html</anchorfile>
      <anchor>af9b066d08d8b481494edbc9a9d158c78</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>ui_2utilities_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <class kind="struct">Rapicorn::Exception</class>
    <class kind="struct">Rapicorn::NullPointer</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</class>
    <class kind="class">Rapicorn::CheckDerivedFrom</class>
    <class kind="struct">Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type *const  &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type *const  &gt;</class>
    <class kind="class">Rapicorn::PointerIterator</class>
    <class kind="struct">Rapicorn::ValueIterator</class>
    <class kind="class">Rapicorn::IteratorRange</class>
    <class kind="class">Rapicorn::ValueIteratorRange</class>
    <class kind="class">Rapicorn::Walker</class>
    <class kind="struct">Rapicorn::Walker::AdapterBase</class>
    <class kind="class">Rapicorn::Walker::Adapter</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acb001d020ee4e66e284a40bc8b4f1a2e</anchor>
      <arglist>(double a, int64 b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1fc5ea7db50b60876564603db1c47e66</anchor>
      <arglist>(int64 a, double b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6619304834d4095d003752f3270eef56</anchor>
      <arglist>(double a, int64 b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af43b1c56d7efd642a1b3e792300a7237</anchor>
      <arglist>(int64 a, double b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_derived_from</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a20ae745c1c6c4d7e27c20a0c7584fea7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_derived</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45cdf08ffec0f7c35459a7e5e8f202e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;</type>
      <name>pointer_iterator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a397eeefdf882773ff6ae4e4fdc16a381</anchor>
      <arglist>(Value *const val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9dce8a537dc7da88529f9c850494390d</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a35a45dd611a909b82c1858fb06d6aafc</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b3a37477f20476f46a4e31389247fd2</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a83637bb8d9315763bda4fa0fbb11d2a9</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adf5dd5e1f9180532f0270d15654104d2</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a93d361a8210b7f8202abbb08477210b7</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;::difference_type</type>
      <name>operator-</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a218c4694706324a9633ec42cfedaed76</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab21ec17bdadfe1496a5aa6602475a314</anchor>
      <arglist>(typename PointerIterator&lt; Value &gt;::difference_type n, const PointerIterator&lt; Value &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;</type>
      <name>value_iterator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4fa11b6b7ffc26f29bf8e931b77344c4</anchor>
      <arglist>(const Iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae05511eb2403b624cd8abd09ac5fb247</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa08e41b39399d7b507944ae2adb81f2e</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afc4c6365c7d1007641d05de808dfba90</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3744d67a99cefd9b74785948baeb1132</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2912a4d3902bbfe0e8a70578a5170d2d</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2789556b9ccc91fd68b3c751796f8a95</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;::difference_type</type>
      <name>operator-</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05b72083a12780365bb090ef85bbe641</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a420ccb25ff6f6a05039193eb47d857a2</anchor>
      <arglist>(typename ValueIterator&lt; Iterator &gt;::difference_type n, const ValueIterator&lt; Iterator &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; Iterator &gt;</type>
      <name>iterator_range</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a629ee830d293efcd55f23cb43620e99f</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>ValueIteratorRange&lt; Iterator &gt;</type>
      <name>value_iterator_range</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab5ccb9ceaaad9da9bc5de670e07aee3b</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; const typename Container::const_iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a11d3d98f0c96d0d4d9bd7612a51dd905</anchor>
      <arglist>(const Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Container::iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a52f4c32777f9e05b382d79af8c3840d6</anchor>
      <arglist>(Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; const typename Container::const_iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d79d074ed3282f449a40402584b5027</anchor>
      <arglist>(const Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; typename Container::iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6c07ea01e799ac89589eff80cd66c543</anchor>
      <arglist>(Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab8335c2dadf81f630eddf636279b0f15</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; typename Iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7da51d65bdf3f5aa10e9e5c4e576dc78</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xmlnode.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>xmlnode_8hh</filename>
    <includes id="markup_8hh" name="markup.hh" local="no" imported="no">rcore/markup.hh</includes>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <class kind="class">Rapicorn::XmlNode</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>py-rope.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rope/</path>
    <filename>py-rope_8hh</filename>
    <includes id="rapicorn_8hh" name="rapicorn.hh" local="no" imported="no">rapicorn.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>PYCF</name>
      <anchorfile>py-rope_8hh.html</anchorfile>
      <anchor>ae30aefb497765e5f0d355c1049de6922</anchor>
      <arglist>(func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PYTO</name>
      <anchorfile>py-rope_8hh.html</anchorfile>
      <anchor>afca7ca77e374df53b1d6785d126bab01</anchor>
      <arglist>(ooo)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PYWO</name>
      <anchorfile>py-rope_8hh.html</anchorfile>
      <anchor>aa7cb5472415f46eefe354dc9fa2d1119</anchor>
      <arglist>(ooo)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PYS</name>
      <anchorfile>py-rope_8hh.html</anchorfile>
      <anchor>a3203cb1bf3aed006cc1647d8a87471b8</anchor>
      <arglist>(cchr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>None_INCREF</name>
      <anchorfile>py-rope_8hh.html</anchorfile>
      <anchor>a228cd515362ae8bf29d461f10fac4b7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adjustment.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>adjustment_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::Adjustment</class>
    <class kind="class">Rapicorn::AdjustmentSource</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>application.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>application_8hh</filename>
    <includes id="commands_8hh" name="commands.hh" local="no" imported="no">ui/commands.hh</includes>
    <class kind="class">Rapicorn::ApplicationImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>arrangement.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>arrangement_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::Arrangement</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>arrangementimpl.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>arrangementimpl_8hh</filename>
    <includes id="arrangement_8hh" name="arrangement.hh" local="no" imported="no">ui/arrangement.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::ArrangementImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>blitfuncs.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>blitfuncs_8hh</filename>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <class kind="struct">Rapicorn::Blit::RenderTable</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>COLA</name>
      <anchorfile>blitfuncs_8hh.html</anchorfile>
      <anchor>ab5f965323ebb692e8434cb09effef41a</anchor>
      <arglist>(argb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLR</name>
      <anchorfile>blitfuncs_8hh.html</anchorfile>
      <anchor>add652cce4250726e5ef0f5e87404aea9</anchor>
      <arglist>(argb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLG</name>
      <anchorfile>blitfuncs_8hh.html</anchorfile>
      <anchor>a4e55b96fa688dcba1a64a3ddd2ae8554</anchor>
      <arglist>(argb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLB</name>
      <anchorfile>blitfuncs_8hh.html</anchorfile>
      <anchor>a8c5d84fc23d81427668ab19672b12df3</anchor>
      <arglist>(argb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_ARGB</name>
      <anchorfile>blitfuncs_8hh.html</anchorfile>
      <anchor>ae9b24cfb95751b96a71749237ab7f79f</anchor>
      <arglist>(a, r, g, b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_optimize_mmx</name>
      <anchorfile>namespaceRapicorn_1_1Blit.html</anchorfile>
      <anchor>a1da1b7d35728bc318389c8221114eb84</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>buttons.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>buttons_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="paintcontainers_8hh" name="paintcontainers.hh" local="no" imported="no">ui/paintcontainers.hh</includes>
    <class kind="class">Rapicorn::ButtonAreaImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>cairocontext.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>cairocontext_8hh</filename>
    <includes id="painter_8hh" name="painter.hh" local="no" imported="no">ui/painter.hh</includes>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::CairoContext</class>
    <class kind="class">Rapicorn::CairoPainter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>clientapi.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>clientapi_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="class">Rapicorn::ListModelHandle</class>
    <class kind="class">Rapicorn::ListModelRelayHandle</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="class">Rapicorn::WidgetHandle</class>
    <class kind="class">Rapicorn::ContainerHandle</class>
    <class kind="class">Rapicorn::ButtonAreaHandle</class>
    <class kind="class">Rapicorn::DrawableHandle</class>
    <class kind="class">Rapicorn::WidgetListHandle</class>
    <class kind="class">Rapicorn::WindowHandle</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="class">Rapicorn::ApplicationHandle</class>
    <class kind="class">Rapicorn::IdlTestWidgetHandle</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PIXBUF_TYPE</name>
      <anchorfile>clientapi_8hh.html</anchorfile>
      <anchor>a579a3aadac2c8c6e8b766ba37b239bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelHandle</type>
      <name>ListModelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a55e28f9bcee38f22184865d1368e111a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelRelayHandle</type>
      <name>ListModelRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec24986b760009950390f9b97d91715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetHandle</type>
      <name>WidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06fccaa7d6ebf06b4a39abd8e2d1b339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ContainerHandle</type>
      <name>ContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a287dd4b731f6d3aa271e1970f69b34a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ButtonAreaHandle</type>
      <name>ButtonAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f7da593dcca3fab645f020842e66807</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableHandle</type>
      <name>DrawableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a30c01e1c22bc5896307e0e32a4e33dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListHandle</type>
      <name>WidgetListH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae74a432b5ddb0fda0774bc5c4b521998</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowHandle</type>
      <name>WindowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab63697b1c07367fa51d014d60ef04f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ApplicationHandle</type>
      <name>ApplicationH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4dd2568fd18e4faf62cf93611507b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IdlTestWidgetHandle</type>
      <name>IdlTestWidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2dbfae52135a8b319ecdaca5520bda54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeba6c446eaed9b0363f4ef07a7735c57</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const BoolSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6e21248a426e2dc4c1e12cd52d3366cf</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, BoolSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b5c2e6dd179ee99da3c649406d418a7</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const StringSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4d609ec1699aaa22e8e5ba9d047b2681</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, StringSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3e60365f3492ac70f85fa20f6dab4ef8</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const AnySeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e4b2f3546e1402e5d8fdf89f638c299</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, AnySeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e570d3c58658bd6f2d1bea9522adcda</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const AnySeqSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2d8b87ad86f41a0ecbf561913a4ea8f7</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, AnySeqSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaeb3a7963b76347facb7d59cc812c451</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const PixelSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaca0980104563c8472baab359102b4f8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, PixelSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4ee8d110c51376d8f92c2e0983764e67</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const Pixbuf &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0250ffcaaf581ce522ce27a889f89eac</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, Pixbuf &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae80cb764d9fa1e0efa2a35f3adc6cdb8</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const UpdateSpan &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9c36cdf2acb28ec6ec2e2e4e0a80f3f3</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, UpdateSpan &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc937d5d3fafd8797628e6d2c929e4b6</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const UpdateRequest &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68902df873c3b18f1e1c5949a543c344</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, UpdateRequest &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2aff430f8528c8745bdc38050cabac40</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ListModelHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c063e75161ca819121db22a151fdde4</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac6a3917facf413c72eecb29602661262</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ListModelRelayHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adabd2f7f396afbb5e1b8059785f4dd1c</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelRelayHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a00266c52d67a27b4731708a3cab5a901</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const Requisition &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a330ef7cfd0ebf308b1a69125e3db033d</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, Requisition &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a72ce79640cf8796a4d44638bb909dbfe</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const WidgetSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af4d9fc88f4b79fcd40c287758c0b775b</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, WidgetSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7603ba135a131204c6446797eb8f5af</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a43d483adcf6f86dda34bb20bee1ac4b8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab788b8b670f003b391688fed4a9cd2ca</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ContainerHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3bf40fb5442fb26725f09daa94180cad</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ContainerHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa2005ac69676ac5e52af6ae25cdedc10</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ButtonAreaHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe963156dfda8026775690994eefcd05</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ButtonAreaHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a610257f80c0202036e65227ff41e6c80</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const DrawableHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a76d4fa2ac7d0b68115d22a8db4ce9a40</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, DrawableHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8658d8a815ee9f1cf348127adc95090d</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WidgetListHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21a9afa697edf2d1ab27ee3e168816e4</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetListHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a083e8a53b092e4ae427d5f72b6a7cb20</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WindowHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1eb4d8a16820b0eb8c5ab6cb97f1b572</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WindowHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3637bd6de6471bb16c9bff05c7f43498</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const WindowList &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a20c6b0d7b335d045ab4e0b6b8ea4fad6</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, WindowList &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ace59f7cb2dbe83c7ccc37e6772d1aa9b</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ApplicationHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7504c011bf5c5d383671a5a24360d2cd</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ApplicationHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2d915e28d02af11f33ef4156029a2930</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const IdlTestWidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af8a962ba85d12e6417e931b00c8b6968</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, IdlTestWidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AdjustmentSourceType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa5c2d0da751522c138927d69a9e61375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AlignType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adca5a04cf0dd3f0fe42422315dd2e754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AnchorType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a936dd37f80015bab41044c874a17c16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ClickType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ac163e97eaf5f3cbb2fd94efb3eb797d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ColorType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a1279c22e8fe4a39c29ea14c2680d3819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ColorSchemeType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a1beee1e0c12c620ed60f8a57daf8605b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::DirType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa818674c356cda7ed6fb1493dc26742e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::EllipsizeType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af7bffe2d4b7f36d00b2af008d6fc4c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::FocusDirType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5e2665adf486135ab4b537c9a7356b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::FrameType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af0bfbf85abbb69186eff56ea7efc2186</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::LightingType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a17f7d19d57d36f1e019aaacb19892bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::SelectionMode &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af1fe03ffae35ad00e26fbd68ed317604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::SizePolicyType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a59f8013ecfb345a19ffa7fa532b9673e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::StateType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a04d6d1beeef354375638ac2000825e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::TextMode &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a9e23d1c9440cdcc10c44afe1ff4917f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::WindowType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa52a3f8a233c2ac3c54a358d85be96ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::UpdateKind &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>afc5fd0c5dc21ea5072f5d0a83218df58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::TestEnum &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a9b27d48b2ebbd40292a1eab3960570ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_app_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af70355a4ca32a082340b8eba3406b2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af0825c1f4488f7728049256c2b107644</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_test_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a670ab204db4a2bde3920bf957958e806</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f7570597dcc101076b2f20a68bcc5ec</anchor>
      <arglist>(int status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clientinsert.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>clientinsert_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PIXBUF_TYPE</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a579a3aadac2c8c6e8b766ba37b239bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a8fc500e3ea62d548693c60a1a03de0e2</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t *</type>
      <name>row</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a3186d5b77ea517e46b8ad8918e62e0b3</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a369399896761e31ae71db57fdd0ba431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>ae26bcfe2f33f5873dbdfb6948cf1f59f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>class_scope int</type>
      <name>length</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a92eeb0805128e3255e0ab0d93d732fdb</anchor>
      <arglist>(_length)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ApplicationHandle</type>
      <name>init_app</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>ad40c21f4bc81396b337b567cbbf85b45</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args=StringVector())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ApplicationHandle</type>
      <name>init_test_app</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a5cdbf6fa330654c932ff0e1b1f056c82</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args=StringVector())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>af1c210e54cbc7dedaf0c68bc079264f6</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="variable">
      <type>includes</type>
      <name>__pad0__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>ad95c39c606d15138185e81e4cc1d3b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IGNORE</type>
      <name>__pad1__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a6518d3a22ecaffd5f7bf218e63182cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IGNORE uint</type>
      <name>h</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>aa434188338840bca2f1243476d712eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope</type>
      <name>__pad2__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a8a04609dfa6bf57cb5e8ba74db42f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope int</type>
      <name>_length</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a58aacf4f069c06b76c580797aad1ea16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope</type>
      <name>__pad3__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a9df2a56c4ada0c07f073e44a7e168af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope const UpdateSpan &amp;</type>
      <name>rs</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>ad3a506dff3c722cba019e40ff0e415ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope const UpdateSpan const UpdateSpan &amp;</type>
      <name>cs</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>add3690f8d89074476c2614efb323cfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IGNORE</type>
      <name>__pad4__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>af4c83aee7feb667b129735e8bb3b0767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>global_scope</type>
      <name>__pad5__</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a495ed478c7ada205d6a80bc7177e637f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cmdlib.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>cmdlib_8hh</filename>
    <includes id="window_8hh" name="window.hh" local="no" imported="no">ui/window.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>bool</type>
      <name>command_lib_exec</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abad107acfe560eca20f729828e6c1136</anchor>
      <arglist>(WidgetImpl &amp;widget, const String &amp;cmd_name, const StringSeq &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>command_scan</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a525fb4a0087a7f3daf1c40a6175a4a33</anchor>
      <arglist>(const String &amp;input, String *cmd_name, StringSeq *args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>command_string_unquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acff8e7ba832456047e8cc2242f4152d8</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>commands.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>commands_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
  </compound>
  <compound kind="file">
    <name>container.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>container_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::ContainerImpl</class>
    <class kind="class">Rapicorn::SingleContainerImpl</class>
    <class kind="struct">Rapicorn::AnchorInfo</class>
    <class kind="class">Rapicorn::ResizeContainerImpl</class>
    <class kind="class">Rapicorn::MultiContainerImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>evaluator.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>evaluator_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::Evaluator</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>events.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>events_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <includes id="keysymbols_8hh" name="keysymbols.hh" local="no" imported="no">ui/keysymbols.hh</includes>
    <class kind="class">Rapicorn::Event</class>
    <class kind="class">Rapicorn::EventButton</class>
    <class kind="class">Rapicorn::EventKey</class>
    <class kind="struct">Rapicorn::EventWinSize</class>
    <class kind="struct">Rapicorn::EventContext</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>Event</type>
      <name>EventMouse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a19b67ee0df6fae1a76cb5cc7c8d5eee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventScroll</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a33c606494e40b638369b4356528b68aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventFocus</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e127e4aed52a6ca498a22a292613247</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventWinDelete</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21dda4a0b748dd14a6fd2ae9e4ec7b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventWinDestroy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6e66a26a4bb80ac3e59fba5994253548</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>key_value_to_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad1afb3c8cc0ff4438b45be6ff192c714</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_modifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64d984417d764489363ff626b7b579be</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_accelerator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af4928842f94c4ac485c40797c1fb4514</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>FocusDirType</type>
      <name>key_value_to_focus_dir</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a143f5f2c4cd95f862d8e5375ed1a52b0</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_focus_dir</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab040956c246794f553a400189829778c</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>ActivateKeyType</type>
      <name>key_value_to_activation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b963bd0179eed6301ca0be4a34c9b6</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_cancellation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a946a876202457338eb61a8b10a52ead2</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>string_from_event_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0f7b52f0d842617662d31adfaaf41b11</anchor>
      <arglist>(EventType etype)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>create_event_transformed</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6524480e9a06f93209f2d41d3969e1f2</anchor>
      <arglist>(const Event &amp;source_event, const Affine &amp;affine)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>create_event_cancellation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a23f7580e049071d6725ad356df0269f6</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventMouse *</type>
      <name>create_event_mouse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f2bccc7a3a70ade371c6322e343b717</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventButton *</type>
      <name>create_event_button</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b37fb1c5f516c72f78707972123a0c1</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext, uint button)</arglist>
    </member>
    <member kind="function">
      <type>EventScroll *</type>
      <name>create_event_scroll</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f9b5aef9cd931c1c0148af9632b167a</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventFocus *</type>
      <name>create_event_focus</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a92ae54af624d5d88e7196ee564030cbd</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventKey *</type>
      <name>create_event_key</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab478e7fbaa4d968ea80422f82cfa07cb</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext, uint32 key, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>EventWinSize *</type>
      <name>create_event_win_size</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5e297539a3ef1b1c1f5f1b85bae3fd7</anchor>
      <arglist>(const EventContext &amp;econtext, double width, double height, bool intermediate)</arglist>
    </member>
    <member kind="function">
      <type>EventWinDelete *</type>
      <name>create_event_win_delete</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a167d54fdf046eeaa94a0280ebe5bf260</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventWinDestroy *</type>
      <name>create_event_win_destroy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1a1229f3d6a4de24a0a9b569e6761696</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>factory.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>factory_8cc</filename>
    <includes id="factory_8hh" name="factory.hh" local="yes" imported="no">factory.hh</includes>
    <includes id="evaluator_8hh" name="evaluator.hh" local="yes" imported="no">evaluator.hh</includes>
    <includes id="window_8hh" name="window.hh" local="yes" imported="no">window.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FDEBUG</name>
      <anchorfile>factory_8cc.html</anchorfile>
      <anchor>a179be969c80b3ec05c9d2cd253db4fa8</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EDEBUG</name>
      <anchorfile>factory_8cc.html</anchorfile>
      <anchor>a698276cc8e1ff537d1aaec983ee32f02</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; String, const XmlNode * &gt;</type>
      <name>GadgetDefinitionMap</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a51cddb0eaad570fac51b72712226fe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use_ui_namespace</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a999879d22cb9a8170374ac10e8a9b6d2</anchor>
      <arglist>(const String &amp;uinamespace)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_name</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a2c5fd37d6e8553bd513044eb0e7dfb07</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_type</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a0a09ebeadcf5ce005333e5ab25a2c9c6</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>UserSource</type>
      <name>factory_context_source</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a16a792b91b22031bad7d65995139baef</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>const StringSeq &amp;</type>
      <name>factory_context_tags</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a2f8379033b0e0302b8e538eeedabf461</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_impl_type</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a5cbe6e46d35291b08b9b8c75e14fe73f</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_ui_window</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ad4884a089f07cdf979f1c75661561347</anchor>
      <arglist>(const String &amp;widget_identifier)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl &amp;</type>
      <name>create_ui_widget</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a84af87e80b572c548f6dbad3d1a680f8</anchor>
      <arglist>(const String &amp;widget_identifier, const ArgumentList &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl &amp;</type>
      <name>create_ui_child</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ac3c690a62dff060cbc8c9bb43fb228e7</anchor>
      <arglist>(ContainerImpl &amp;container, const String &amp;widget_identifier, const ArgumentList &amp;arguments, bool autoadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_ui_children</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>aa0a709ad07215429e9c473362543c769</anchor>
      <arglist>(ContainerImpl &amp;container, vector&lt; WidgetImpl * &gt; *children, const String &amp;presuppose, int64 max_children)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parse_ui_data</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>aa3065ad8f85c5452c7433a1f4ab1005d</anchor>
      <arglist>(const String &amp;uinamespace, const String &amp;data_name, size_t data_length, const char *data, const String &amp;i18n_domain, vector&lt; String &gt; *definitions)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parse_ui_file</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ae32610eaebb89755e381639339dcdf0f</anchor>
      <arglist>(const String &amp;uinamespace, const String &amp;file_name, const String &amp;i18n_domain, vector&lt; String &gt; *definitions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>factory.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>factory_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::Factory::WidgetTypeFactory</class>
    <class kind="class">Rapicorn::WidgetFactory</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>std::vector&lt; String &gt;</type>
      <name>ArgumentList</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ab4dec330ed6a2952d7f0231213aedd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; String, String &gt;</type>
      <name>VariableMap</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a21e8d692ff39bee0b783c57cd7a5c47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parse_ui_file</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ae32610eaebb89755e381639339dcdf0f</anchor>
      <arglist>(const String &amp;uinamespace, const String &amp;file_name, const String &amp;i18n_domain, vector&lt; String &gt; *definitions)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parse_ui_data</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>aa3065ad8f85c5452c7433a1f4ab1005d</anchor>
      <arglist>(const String &amp;uinamespace, const String &amp;data_name, size_t data_length, const char *data, const String &amp;i18n_domain, vector&lt; String &gt; *definitions)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl &amp;</type>
      <name>create_ui_widget</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a84af87e80b572c548f6dbad3d1a680f8</anchor>
      <arglist>(const String &amp;widget_identifier, const ArgumentList &amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl &amp;</type>
      <name>create_ui_child</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ac3c690a62dff060cbc8c9bb43fb228e7</anchor>
      <arglist>(ContainerImpl &amp;container, const String &amp;widget_identifier, const ArgumentList &amp;arguments, bool autoadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_ui_children</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>aa0a709ad07215429e9c473362543c769</anchor>
      <arglist>(ContainerImpl &amp;container, vector&lt; WidgetImpl * &gt; *children, const String &amp;presuppose, int64 max_children)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_ui_window</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>ad4884a089f07cdf979f1c75661561347</anchor>
      <arglist>(const String &amp;widget_identifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use_ui_namespace</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a999879d22cb9a8170374ac10e8a9b6d2</anchor>
      <arglist>(const String &amp;uinamespace)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_name</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a2c5fd37d6e8553bd513044eb0e7dfb07</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_type</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a0a09ebeadcf5ce005333e5ab25a2c9c6</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>const StringSeq &amp;</type>
      <name>factory_context_tags</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a2f8379033b0e0302b8e538eeedabf461</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>UserSource</type>
      <name>factory_context_source</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a16a792b91b22031bad7d65995139baef</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>factory_context_impl_type</name>
      <anchorfile>namespaceRapicorn_1_1Factory.html</anchorfile>
      <anchor>a5cbe6e46d35291b08b9b8c75e14fe73f</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hardcoded.idl</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>hardcoded_8idl</filename>
    <class kind="interface">Rapicorn::BaseObject</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>heritage.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>heritage_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Heritage</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>image.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>image_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::Image</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>interfaces.idl</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>interfaces_8idl</filename>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="interface">Rapicorn::ListModel</class>
    <class kind="interface">Rapicorn::ListModelRelay</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="interface">Rapicorn::Widget</class>
    <class kind="interface">Rapicorn::Container</class>
    <class kind="interface">Rapicorn::ButtonArea</class>
    <class kind="interface">Rapicorn::Drawable</class>
    <class kind="interface">Rapicorn::WidgetList</class>
    <class kind="interface">Rapicorn::Window</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="interface">Rapicorn::Application</class>
    <class kind="interface">Rapicorn::IdlTestWidget</class>
    <namespace>Rapicorn</namespace>
    <member kind="enumeration">
      <name>AdjustmentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad727c4f727d48a6046d74879d6c8317f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AlignType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a01cb38d55e327d3de4fc9c1c87c93d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AnchorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3380d4b28813af812be0fad677ad144f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ClickType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c9119421605845db84cd3e0aadd613a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ColorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21d6ae4fc230404f3321a704f4c8bd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ColorSchemeType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_INHERIT</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0ab306dc84dd28d8e5dd227047b9d1aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a56efebe0abbfa3acd603d41f097d5e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SELECTED</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a6ade49e7d85c7a38875a0dbd2f35b957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BASE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a39d3045eb3e9cc6651035ba57ebfdd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a24338f17abbf59dd63ff951c63528565</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a71e11f0369e06caaed8eaf7443a074d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a05c1d3a1236815eeca81178b4a7c278c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2acdae37ef75521fa3164283ba9f8cbc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WindowType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313aae1cdf512674ac850acd01716f527c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DESKTOP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ab85a4ac2e6867b3973ce5748e41083ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a160f71ec57382f49889f4106323b4543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_TOOLBAR</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac715e8144f08a022603fa0d16d53d503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a98040ffd508e641a4cd2c73caf4b11b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_UTILITY</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a132fc98733fd067d1800d82a7ed17468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_SPLASH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a2ef3915a453aa058fa09ce57102d94aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DIALOG</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a37e3f2e40751f040b740853c588e6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DROPDOWN_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a3ff88a2ec6aacbb04f070fd7d2be24e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_POPUP_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac876877e1c727de6af4a8fa27c4d5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_TOOLTIP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ad43b309a4e802a5a51a6763870476c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_NOTIFICATION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a129181f417bc812e68d1ec9fdb5d28be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_COMBO</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a534e02e7d3158ffb46c6a8f2bf6d5e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DND</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a41eb840a06ca1fb3bf6a04b79b8e00e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>UpdateKind</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_READ</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba762d8bd681cc31a667ea7112371e90e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_CHANGE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba8ad4ba23954e96f0ae67e7ac10cca0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_INSERTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba409fccbf750c75a26f320b28a1e47305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_DELETION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba04e84ed6100e8ef1b10d53463275606f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>include hardcoded</type>
      <name>idl</name>
      <anchorfile>interfaces_8idl.html</anchorfile>
      <anchor>a3646e43b3a021c5b239357059e2982a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MAXINT32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f195e25e0a6426a8424ae621a477a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MAXINT31</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6569884398cb91297164c7eb943c99fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MININT31</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06396f7b82e56e9695ba8b9dfe4efe4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>internal.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>internal_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>ApplicationH</type>
      <name>uithread_bootup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd8da6bf2f0a3c1efc1d32df713c1ae9</anchor>
      <arglist>(int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uithread_shutdown</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6264cf93a2a3f67759fae4803be5d52a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>client_app_test_hook</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0ca65d6385f821086feb5bc75f9c057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>server_app_test_hook</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a845c0f182340fabbfd85473ef4a300b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>keysymbols.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>keysymbols_8hh</filename>
    <member kind="variable">
      <type></type>
      <name>KEY_BackSpace</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a44beaa24df81a47b110607b3bca8bf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Tab</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acdb7cb8145ed88189bd156300826767c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Linefeed</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a751a01c89cd6eba4d995d13edb6a46d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Clear</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad8aaf0ba6f33b5553fa4691132c5f953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Return</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af3b5e6a426e41b2d6b6aea239804215c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pause</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8e0fa7eb0dc54ccdebdfc945e62f04ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Scroll_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a745f681938017c0eefa2705c9652d41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Sys_Req</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a827f27470fe9ab588304da99db9d4663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Escape</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4fb9b9760a7311cfb66b2ec980340af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Delete</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4ce4c49daa8d1fca9fd1d7087ab5e325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Multi_key</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3a42a79697dd5cfd6b0974bf62d63848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Codeinput</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a051074114bed638958efe33d488ea2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_SingleCandidate</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a39dee36360e8003bed01cdc23fd15e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_MultipleCandidate</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac2b3afae1646596895addc35f0bd3877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_PreviousCandidate</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5b83694ae0cd0317a14a101b3edbd682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Home</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afec9cf706ad396d86b3dd739702eabee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac5e459f54ccd0883b78fed50d7860fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af6d9db62479a2f55354421411c00acf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a619a15383494c20f2b84feb546674117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa885b36e7578c5970cfa7a43ae814eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Prior</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af00f0c0a6750308d3ea6151243a8eede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Page_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3ed8d18dfb40fe2c815029863f0158eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Next</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6f965715e82e26be5ca43905a84c64f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Page_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6a33f63aa07bbb59c6d29548c4d7a162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_End</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a66685c6cc0f35d3c4d1fd45de1896187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Begin</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a46bbcc02872383627f5f2783da92f1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Select</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7832b4fb83c9bba5252d06ce8978f39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Print</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a956c8c9edf8561cba075e927deefa0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Execute</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a89fc0c502bf4e7aaa7384bbe7f94ddf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Insert</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a889e7ef372ce6ed5868d2ed2b0e4fe78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Undo</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a900f3eb122542ebb304151dd3979dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Redo</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a18d3850c9a3ff988dba1bbdc0b08754a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Menu</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab7877bc8b1604a05d54bddf268bd8181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Find</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4e28e03633ef5250b5ff692e90d76dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Cancel</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa09c08d115fff2dc7b0c3625167819a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Help</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac680e383d83b60b04205f540cfd7af12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Break</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a500baa7916e7beb6f371165eb7ede41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Mode_switch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2423fd5bcc800c385a9b0d9c1d1eb8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_script_switch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2848f899350221b97f474c67ee0494db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Num_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9cb82ba80178a5a24d411509455b93a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Space</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a760c3539e0a3ccd827b8c61c3ca91428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Tab</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a24d93c646af145e54aae53dedfd46e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Enter</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9700f680e2e6591dee32c386f794e23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_F1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a87f49c1659c9844aa9a6705b921bd91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_F2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a26388f3dbc4dc2b9b16cff3234864e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_F3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa28449b29d62011e386c52ad2d548dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_F4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a41c87d6b1ba1c3636ae48915a26db282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Home</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8dcb491b51ab7cdff73e13be4375b867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab368fe22dcc6f5c3c859a744438032a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af976077bc872932fa67ab34c99baec95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1aa095b57566b058c027e81d0844c1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2721bdd169a629cff15e2789a437fa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Prior</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af96e1270aa698c8ec55c99c0a0d2a4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Page_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac7208272c43d824c66932fd35ce45a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Next</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1a04a95fe290235fbbb13172f67f5a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Page_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ace6eaaf7cea6aa0923b6752dd8f99c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_End</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2707235f19a4d53926e2cac757a1fab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Begin</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a34083a25281f17e34fe95539bd36ada4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Insert</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a109ed9254f97cbb951b5221946b441ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Delete</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1f0920d1bf6860276b7b9b72f8866ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Equal</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a33feb7b408431a088a1de55e7ebb659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Multiply</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a32e82e34d275071894fac3acc6c970fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Add</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af183c4c1b41b42f6e80533a3414ef73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Separator</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4ad2c39068e9ae1e4dcf55c9e7700140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Subtract</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac63c448d23c0cc706838e1b1c5f0aebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Decimal</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>add454d558827fab6169fa875c6503f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Divide</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a64dc4e6168d16637dd762650a2c5161b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_0</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0a9b47fc4ef8d93e3d4e0ce60027fab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa2948be0918f3f5f5b7d190d4b5a5654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9f5b0b7f48be37ddd5ddece0cae4bcf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a879d2636d3c51ffacf8c696433d048cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a50bfd45512bce4bc7ccd88dc3033e74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8eba8fef8950a3878fc081de25efc97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_6</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a99a539e59be2a3e788a5c1c965792a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_7</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a129e1b80b011bdb396bc3697326a7f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_8</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4c63a5e4cb2308e848130d1207fb91bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_9</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af8caa1d1636f067b9958188e206c3f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a281bf2f56c581e1654f373a06be8677e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8b40013d0222f1d120ae1eed06c45fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aec9fd5330d06367e8cea86eb7a2d079f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3f5adfe66a439ad9eb625c129f1fd8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a93b2f2e201f4ae77866763d00032b519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F6</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8f1edec155f01cc8eb1ff68f9477e745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F7</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a37219a05b08631b4c183e7c0fcde49e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F8</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad329788b30dd05d7c5bc3f8bf9ab71a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F9</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af56021d5503bdd2aa82e9a20916eb075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F10</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4bfefabd74d404cf66a13ac1e6d57c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F11</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab8c608305c2b375aacbf49807d98a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F12</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6af9fa4d3286b6dbbfab5750565c9dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F13</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aae110d193f131bc26eb678192180974b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F14</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab5b8edcb508a34a4b3243a1429186331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F15</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a13ce3af6756587c5321fee4e36c954cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F16</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afc204ae4d2bf2235e5329385225acc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F17</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a63fc983522802384ecc31c7b95a2b5a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F18</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a45ef2b9fb45fe320171097a660496ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F19</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a02f9681a6a635382c2e31b628544e74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F20</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acd1c97fce2201700efdaf7cac928a16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F21</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afcdee0d49d3fd9e19790432ae0c7227d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F22</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7f591a45b9bacbbfb0ab38a028f2f757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F23</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a383f5410881d4ac9e35e36ee011581d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F24</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad3ddb2881b924003a149ee306209c53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F25</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afcf37fda388b651c43931bf285c91165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F26</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a459c988b1dc3b9f7b81a69fc97697c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F27</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab4fcfff9f4a401eac28e3a7c843e7997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F28</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a08bb72862f117fcd431046a4f9e135a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F29</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1dce657606bc7dc17ef71af698c3d40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F30</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa96e07a1c46cca551f5b00a05dbd5ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F31</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4b7bceb429a5ebb541c423a72bf87926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F32</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aad35de888f8095facc4212727e99f97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F33</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3e2f156e6ce06c2cee5087cd32f0e0a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F34</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9a657b5f50641830a97e96e24f2c06da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_F35</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2eab5c5d13069843e08eaca0bb4c3c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8f1c11d153023ea94b5e373a860f2f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9e0688a946ed3c4753099aff75318267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Control_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6bf5bce19960e5cae2ea140873199236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Control_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a01e75f6f4bce3eb26557fec710bb2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Caps_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acc0647c3d31d6ea1221016874640ed3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a86074ff85bb7f2dc5089a8a950ffeb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Meta_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a05030fcea7ab3d1557f746ae5a40887d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Meta_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a56b89531b2e3b8b7d5c98c1f83d05c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Alt_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa2f66d286391ac1f5cea030a3935794a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Alt_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac08f9a81efe9ad47fc22c621f6aa3884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Super_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5f2ba03f7d322b67cabab0a4f2ef0636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Super_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a16cd7ed451e185301b37a8fbf99f8cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Hyper_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a44c3b4844c7edcf8c028c3594c3fabc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Hyper_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa209068d16cc82af41cbfb718d0a1c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aff1ee5f955efee68243039f8564d285d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level2_Latch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3920a7b314bf3c032a78dbc7a7b30c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level3_Shift</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab302e8b17c8996430b85f3e90501ae84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level3_Latch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a635b6e2b0c1b572f1ceb45f6055474e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level3_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a75270eb88a91a09078502d8a56900d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level5_Shift</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a38b3eaa6ecfd0edea3871538a5a7daea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level5_Latch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a413d5be409267d00d467fc9adbc12e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Level5_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5dfdaf188fc40a8bddaa721a7254eb08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Group_Shift</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9dbd627633060c6ed2b1477bcc1cff79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Group_Latch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac88821a3821890ba4ae598b13e49b05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Group_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2b097f3fbb728f8532164a05c6e06e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Next_Group</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa6e37db3cb04d0b46163461eb1d7545f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Next_Group_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7d078cea59835f348d3c34fa50fe6257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Prev_Group</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad863e2626de642bbb1c8b38b322d25f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Prev_Group_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1a6b62fbbdceca25c0d400a138af0df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_First_Group</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ae475e5a43cce13c9ef3a74ac2ca5a11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_First_Group_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acaa0a0109d083c5fc6192de8e3bba0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Last_Group</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac2219e9a5180455b419e90b59fea5f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Last_Group_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>adb613dec8dc3615daabe7de6b0e4d751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Left_Tab</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a64227e5ef2b34d7f5d7331cb82533dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Move_Line_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af2657feacac057a7ac29e2bda5dd8349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Move_Line_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab77091726839f5f8f83957c0253c47ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Partial_Line_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0c9f8a1d110fc0ff49a5f3bcc9ff8187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Partial_Line_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a94694e4954253ed36bfa27c09fe1983d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Partial_Space_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af64db3eccc0442e97c555cd93f6c8916</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Partial_Space_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3b554b72ca7fdaa3b87a125063cb36d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Set_Margin_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a857b8f0679bdf48f31e3bee9c8764465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Set_Margin_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2171925ff3235e73ad15073b239e28cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Release_Margin_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af4d14784c12b8ba78b080feefeb1920f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Release_Margin_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a53a8afce7b150888ce7c6b28b655d08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Release_Both_Margins</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a43be139e63b160b794d7bfe204a5dc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Fast_Cursor_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8a40caf45981d53110017550d8577ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Fast_Cursor_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8b441ca3add1fd183dd84b69b1316cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Fast_Cursor_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8565a472ad6e8393fc2f25638e9cd89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Fast_Cursor_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0940302f8d12476342e3fd6db550f6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Continuous_Underline</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acd4320e354496ce1d266a107df651883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Discontinuous_Underline</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad78bafe9d25f99687d28653add433ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Emphasize</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7f68d31aa40422a6a2ac5c4ad2afde1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Center_Object</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a27fcecb361daf2b28be8e76dfc269a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Enter</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acd0a74a4eb6292743e6664f2572ac69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_First_Virtual_Screen</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a04303e8f3f99805cd46b31f58fd9025a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Prev_Virtual_Screen</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a19335113a3d8b35081d3605952b5ac5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Next_Virtual_Screen</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a87677ec0d666850f80c73127cfca5761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Last_Virtual_Screen</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a992303b4609969331cd565703ed1f0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Terminate_Server</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a17c99ec9bbb6b598e4d119e830e5cb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_AccessX_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9884a458460c5cfb469e27bdd1a472c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_AccessX_Feedback_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4b86d795740d9f7a5ee1725cdefb3fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_RepeatKeys_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af4029ece0b4a7347f5091033a35679c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_SlowKeys_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a74ead5f7f4458a2408c745147935be17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_BounceKeys_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7ddb68761a19005bc2100327ce3e71dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_StickyKeys_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa94ea878201da8b054c11da7e649bfd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_MouseKeys_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3a58dc2e87e1dbb12310cfa8fd2b26e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_MouseKeys_Accel_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>adbf810a127399b1d78722c2122ec7250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Overlay1_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ab22066c5b184eb51a9b358ff033ae14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Overlay2_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9f5fab67ae6ffe4547e799e888a55d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_AudibleBell_Enable</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5348ffb6e49bda484cef29ed543d5007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3c27ec29c5c4a887a498662873432f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a01b9ddfaf48b2e2be3d4b25b7c788d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a891074f6ab15f7095e089f9dc195ce0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ae775011d565ed5f9d05d1cab0fe4ee41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_UpLeft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2622c71890866d9b7298e6bfa93d61f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_UpRight</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afe2c900ec54528445b470c11f9543526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DownLeft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ae86546efe8ca8dc53547d7dc0b20c987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DownRight</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a92aa930a1f00a90fa2ba35063a099bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button_Dflt</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2cb9ae1e69a3b8429527776e89c0337d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1724f5a6f53955f2627c767b7e5b6bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2164d5d4fc4f51a354537072836d6fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7f4711a0bc9d706ae2ccd3b84c23683e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0a40310a58b94dffc9ebc19c3f8e74e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Button5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>abceedd622462049766354237b5aade3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick_Dflt</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a91302834d8726657e9e126477981b8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0a2081ff43ff17aafd16352a40ab5a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ace0a15427c5276bc484a098b2dde05b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a049ecc26cbe98c828736a6267b458a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a95de02f7c209e8172ebcf578dbd5c874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DblClick5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aab2f08ea660e397557f3900b18e2f88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag_Dflt</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a66f4f13bfc978f79f4e219314b719213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1a7f02da85246e06ff1b19bf31d08979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9d38a9814d0f8c038afc90c01782635d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6a9a4260028fe2f0421c9f518fb53cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a81b17fbb1bbc5fee070cf606b8e4e96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Drag5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a755cddb98900e319c2844d45415ef5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_EnableKeys</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a49dc55c594cc9379a6bc278c870479f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_Accelerate</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0ef37a17dbd954fbddb359e452bffb77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DfltBtnNext</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8d1704e026412d50a1103f927a7238a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pointer_DfltBtnPrev</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1ce7390b06d722cae8e8077aab621c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_space</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5edd5d17dec3ac25169c6cfa10b64801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_exclam</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1df40bf712d3ff39cea0a886adfb0687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quotedbl</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa29f085eeac5251591afffe0181ab6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_numbersign</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0dcf8d88f1304b87fa6a6425a215162b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_dollar</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a29b22deb8cf19300003c58f48d3df9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_percent</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a461fa3d4f675cd982b0d7464a14f6158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ampersand</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0bf56457aca46ad02bd26a0716eafde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_apostrophe</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a14fbd74e18d2dfdc898f20f8cd57c3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quoteright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aba7f907ca4a844fd523ee9aac328ba7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_parenleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa62b8860af268dc7c59e116ac32a0d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_parenright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a92705427d4b9f067a997f96d255f165f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asterisk</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6e2028591e5dd18e0b4d9246c8b69c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_plus</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aeba050e9e94a974e278b7f42c94a5094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_comma</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa8392d443c951dd0db413155f72decad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_minus</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac026b3d41bf74529cf1554085644c221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_period</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8f1de2820148cbd52c8d0d10f8bf404c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_slash</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa28519252f095d26949e64d120f9bd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_0</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9dbede9bb56b8837ea8541ce57d746e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa06c8ff22b1272902cb314d91ec31a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3d5438ff4f0527b4274715105654462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a30d6fb9827772bbafe10bd233ce66ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a595ead57bda522ff722eed26201d4f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a84a4d528d1b3039dcbb0c1be6e234dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_6</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8c51c16306b54b9aa58ceb5b57b49126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_7</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2459d6feb61430358708ac5469462f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_8</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>abdbe0c17838e7483db913fe5c2ad7a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_9</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a85669336a10bd1eb3a1ec4b40440fa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_colon</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9f57dfb9ed52d00adc5f3962bf97e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_semicolon</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af8fa4866afd5d5a0447f91e185b627b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_less</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aaeef7818c155bffb78163a4064e8cf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_equal</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad7becf00baee7c9b2ed5ae19168b8baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_greater</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a583637a0d7d163af7c36ddb41e4edd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_question</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4a32edb2245ed9a36c04cc65e34e441b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_at</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a35359dc667f436f1d0b512450fb7dac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bracketleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a25d2001e60752a8934158bf4eacbff41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_backslash</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a371c34bcb6fc86e0d8c62eda41472269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bracketright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a14ee357584573383c517facd5b465ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asciicircum</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9609a116ce743b7671114f1f931a20b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_underscore</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8bc0d97711b6e83d0f0639c517ffb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_grave</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ae617648311c6a4ec4eeb186d98a73214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quoteleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad4daa6b108652beaf4bf527e92277c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_braceleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afd2118613496ed8e72637c173aea83dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bar</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af057ebf34d93c2c5aa9a596e7e75ba22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_braceright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>abf817aba8a765782daa8c237b41b15b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asciitilde</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aecc31d7f0b4a934cb04d57c69cb4803b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_nobreakspace</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa277d5f76a0a1f8707a15613aee88432</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>layoutcontainers.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>layoutcontainers_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::Alignment</class>
    <class kind="class">Rapicorn::HBox</class>
    <class kind="class">Rapicorn::VBox</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>listarea.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>listarea_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="layoutcontainers_8hh" name="layoutcontainers.hh" local="no" imported="no">ui/layoutcontainers.hh</includes>
    <class kind="struct">Rapicorn::ListRow</class>
    <class kind="class">Rapicorn::WidgetListImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>models.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>models_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::ListModelRelayImpl</class>
    <class kind="struct">Rapicorn::ListModelRelayImpl::RelayModel</class>
    <class kind="class">Rapicorn::MemoryListStore</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>paintcontainers.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>paintcontainers_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::Ambience</class>
    <class kind="class">Rapicorn::Frame</class>
    <class kind="class">Rapicorn::FocusFrame</class>
    <class kind="struct">Rapicorn::FocusFrame::Client</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>painter.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>painter_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::CPainter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>paintwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>paintwidgets_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::Arrow</class>
    <class kind="class">Rapicorn::DotGrid</class>
    <class kind="class">Rapicorn::DrawableImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>pixmap.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>pixmap_8hh</filename>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <class kind="class">Rapicorn::PixmapT</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>PixmapT&lt; Pixbuf &gt;</type>
      <name>Pixmap</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a7199c4794a9f5eaeade56d2868e3d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitives.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>primitives_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="serverapi_8hh" name="serverapi.hh" local="no" imported="no">ui/serverapi.hh</includes>
    <class kind="class">Rapicorn::Point</class>
    <class kind="class">Rapicorn::Rect</class>
    <class kind="struct">Rapicorn::IRect</class>
    <class kind="class">Rapicorn::Color</class>
    <class kind="class">Rapicorn::Affine</class>
    <class kind="struct">Rapicorn::Affine::VectorReturn</class>
    <class kind="struct">Rapicorn::AffineIdentity</class>
    <class kind="struct">Rapicorn::AffineHFlip</class>
    <class kind="struct">Rapicorn::AffineVFlip</class>
    <class kind="struct">Rapicorn::AffineTranslate</class>
    <class kind="struct">Rapicorn::AffineScale</class>
    <class kind="struct">Rapicorn::AffineRotate</class>
    <class kind="struct">Rapicorn::AffineShear</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>double</type>
      <name>degree</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab738c246055ce44f7f9c47326e1a2340</anchor>
      <arglist>(double radians)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>radians</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeb7a27cf5db3c7627db93269eead1416</anchor>
      <arglist>(double degree)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a76d629517eb133af40b3ba648f711c92</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af5f16953f070b664b79b8354496a00cd</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>floor</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a289b10a015b57426d48bbc6c02e3ccb2</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ceil</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9bc6f5c921b3f63a9091b8e3b8130c27</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>round</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac1f4e60b4de9ce5eef1b785085abe927</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>region.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>region_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Region</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9623d12dc75e47ac345af79e3f972b57</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7ae41884314a0c90c23f030c6003d5a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aad051ec6d380e65237d2944a4f47032a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>regionimpl.h</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>regionimpl_8h</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <class kind="struct">RapicornRegionBox</class>
    <class kind="struct">RapicornRegionPoint</class>
    <member kind="typedef">
      <type>signed long long int</type>
      <name>llint64_t</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a09eba6f9fe542aaf21dcfe4e03c62141</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>llint64_size_assertion_t</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ab0c39ed48e4606603720743c19713ebb</anchor>
      <arglist>[-!(sizeof(llint64_t)==8)]</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RAPICORN_EXTERN_C_BEGIN</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a7b8a5948a059b5aecc9fe839d25a3245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RapicornRegion *</type>
      <name>_rapicorn_region_create</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ac821a0c118d38a0fafb8488a306c9ce8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_free</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ad91bd48ce4bfb9e756af8d454e872b85</anchor>
      <arglist>(RapicornRegion *region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_init</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a540e7226ded6b35bde65dd57b0db106b</anchor>
      <arglist>(RapicornRegion *region, int region_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_uninit</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a8104a66244e7326f9030969734a88db8</anchor>
      <arglist>(RapicornRegion *region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_copy</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a4a95486458107f3954521d32dc9adc48</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_clear</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ad6baf37077ae2d23ba74f37e3e527e05</anchor>
      <arglist>(RapicornRegion *region)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_rapicorn_region_empty</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>afe435b406a5cfc57823cd035168b1a55</anchor>
      <arglist>(const RapicornRegion *region)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_rapicorn_region_equal</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a772dc54dc2b362507133282bbae71875</anchor>
      <arglist>(const RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_rapicorn_region_cmp</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a2b0aff4c2f00b054e9796b93a6e5905f</anchor>
      <arglist>(const RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_swap</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a8ee7e3df102fd2b8324e80aaf2d1a428</anchor>
      <arglist>(RapicornRegion *region, RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_extents</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a972cc161760ec8ad2845a27dbb83a550</anchor>
      <arglist>(const RapicornRegion *region, RapicornRegionBox *rect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_rapicorn_region_point_in</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a132179771fac49f79fbf154c4a5a3e4f</anchor>
      <arglist>(const RapicornRegion *region, const RapicornRegionPoint *point)</arglist>
    </member>
    <member kind="function">
      <type>RapicornRegionCType</type>
      <name>_rapicorn_region_rect_in</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ad42446c234b160d598312b7c47ea2573</anchor>
      <arglist>(const RapicornRegion *region, const RapicornRegionBox *rect)</arglist>
    </member>
    <member kind="function">
      <type>RapicornRegionCType</type>
      <name>_rapicorn_region_region_in</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a3faeef1f71758e76181c1a90276c85cf</anchor>
      <arglist>(const RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_rapicorn_region_get_rects</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>ae5fca84d4fb7db26507cc6afbffb6dad</anchor>
      <arglist>(const RapicornRegion *region, int n_rects, RapicornRegionBox *rects)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_rapicorn_region_get_rect_count</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>aebe184c739f426265ba96abb1b3589de</anchor>
      <arglist>(const RapicornRegion *region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_union_rect</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a50e5d0015d55587370059ea6a6f1d056</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegionBox *rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_union</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a623bb1c5d56d8a6fbc1108da291c3b2d</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_subtract</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a09f7ff8f5adc1dea3d0dde456973f145</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_intersect</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a0939ea0e5036188346f3d6a84ebcb2f2</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_rapicorn_region_xor</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a9e2ece96a72d9147f4d11881b0fcabc4</anchor>
      <arglist>(RapicornRegion *region, const RapicornRegion *region2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RAPICORN_EXTERN_C_END</name>
      <anchorfile>regionimpl_8h.html</anchorfile>
      <anchor>a83d8383da23f9489355225d9cf773f6e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>screenwindow.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>screenwindow_8hh</filename>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <class kind="class">Rapicorn::ScreenWindow</class>
    <class kind="struct">Rapicorn::ScreenWindow::Setup</class>
    <class kind="struct">Rapicorn::ScreenWindow::Config</class>
    <class kind="struct">Rapicorn::ScreenWindow::State</class>
    <class kind="struct">Rapicorn::ScreenCommand</class>
    <class kind="class">Rapicorn::ScreenDriver</class>
    <class kind="struct">Rapicorn::ScreenDriverFactory</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ScreenWindow &gt;</type>
      <name>ScreenWindowP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad49b5157fd0ee9ed73d6716437dfdb85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scrollwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>scrollwidgets_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::ScrollArea</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>scrollwidgetsimpl.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>scrollwidgetsimpl_8hh</filename>
    <includes id="scrollwidgets_8hh" name="scrollwidgets.hh" local="no" imported="no">ui/scrollwidgets.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::ScrollAreaImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>selector.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>selector_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <class kind="class">Rapicorn::Selector::CustomPseudoRegistry</class>
    <class kind="struct">Rapicorn::Selector::SelectorNode</class>
    <class kind="struct">Rapicorn::Selector::SelectorChain</class>
    <class kind="class">Rapicorn::Selector::Selob</class>
    <class kind="class">Rapicorn::Selector::Matcher</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>bool</type>
      <name>is_combinator</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a3ccfee668b7462cfc1c25b8741913caf</anchor>
      <arglist>(Kind kind)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_spaces</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a51864d2547f7ecbeb8a666d956feed6b</anchor>
      <arglist>(const char **stringp, int min_spaces)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>skip_spaces</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>af66382a3443965d334f3877794064ad4</anchor>
      <arglist>(const char **stringp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scan_nested</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a895f8d528b7f006b2f9502caa7762761</anchor>
      <arglist>(const char **stringp, const char *pairflags, const char term)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_case_word</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>af7c6230a6939c34f7216dd0170728bc3</anchor>
      <arglist>(const char **stringp, const char *word)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_unsigned_integer</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a9f198c6783455b7e122f497569621b0a</anchor>
      <arglist>(const char **stringp, uint64 *up)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_signed_integer</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>aa04692a8a6b42289c9230a25758cdb11</anchor>
      <arglist>(const char **stringp, int64 *ip)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_css_nth</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a16ab7b8063919997f24255811a4bce6a</anchor>
      <arglist>(const char **stringp, int64 *ap, int64 *bp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_css_nth</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a30773478a97fd543416876cb78e986b7</anchor>
      <arglist>(int64 pos, int64 a, int64 b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_identifier</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>ac76d44db4c51a588a0d9bdb5d095990a</anchor>
      <arglist>(const char **stringp, String &amp;ident)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_string</name>
      <anchorfile>namespaceRapicorn_1_1Selector.html</anchorfile>
      <anchor>a0d1ad82e62c9ce24e8498dfd1fbba654</anchor>
      <arglist>(const char **stringp, String &amp;ident)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>selob.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>selob_8hh</filename>
    <includes id="selector_8hh" name="selector.hh" local="no" imported="no">ui/selector.hh</includes>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <includes id="models_8hh" name="models.hh" local="no" imported="no">ui/models.hh</includes>
    <class kind="class">Rapicorn::Selector::SelobWidget</class>
    <class kind="class">Rapicorn::Selector::SelobListModel</class>
    <class kind="class">Rapicorn::Selector::SelobAllocator</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>serverapi.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>serverapi_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <class kind="class">Rapicorn::ListModelIface</class>
    <class kind="class">Rapicorn::ListModelRelayIface</class>
    <class kind="class">Rapicorn::WidgetIface</class>
    <class kind="class">Rapicorn::ContainerIface</class>
    <class kind="class">Rapicorn::ButtonAreaIface</class>
    <class kind="class">Rapicorn::DrawableIface</class>
    <class kind="class">Rapicorn::WidgetListIface</class>
    <class kind="class">Rapicorn::WindowIface</class>
    <class kind="class">Rapicorn::ApplicationIface</class>
    <class kind="class">Rapicorn::IdlTestWidgetIface</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4ca27bafd5486786a06c5e81beb81a61</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ListModelIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5b985433b2b3b988c61fb56143fc7bef</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ListModelIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a596b2613f10974d542fc4d26dc21ceac</anchor>
      <arglist>(ListModelHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ListModelHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad283cb90a27da0c3a85724dcbce92a8b</anchor>
      <arglist>(ListModelIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f8cdd4e00efe17b13afb9988c941992</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ListModelRelayIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a824c11de7e5ece7e67caf0eab3b6fd6c</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelRelayIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a686095bc6024d4bc699ee304615a93de</anchor>
      <arglist>(ListModelRelayHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae104ed0127977be2b2b8ca5871469160</anchor>
      <arglist>(ListModelRelayIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acf1bb50277d72668672ae2f347b55633</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WidgetIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9550fcd437f95442fe870ce17a72cdf9</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WidgetIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3e5635c0cbac3a1a8bdbb59676331f8b</anchor>
      <arglist>(WidgetHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac921005c2d034ca0f5684b0ac1e6e565</anchor>
      <arglist>(WidgetIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a03f9a004c7746ea72dbd9d64d885728f</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ContainerIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b59f334b3c187ad99dcaa56f9189d8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ContainerIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ContainerIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4bd74543558102fe10f68afd6f5b05e7</anchor>
      <arglist>(ContainerHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ContainerHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7ed99addb5b49cddc8f790bc5bfc18b2</anchor>
      <arglist>(ContainerIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae9141e64f3b3b188fee6df1458015d90</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ButtonAreaIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3891f011ecccb79d068bba655817be51</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ButtonAreaIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ButtonAreaIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa2f3af3756325886300cb8ed6d236bfe</anchor>
      <arglist>(ButtonAreaHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ButtonAreaHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a93bd856684e7521a5a0f61d4b1e3a638</anchor>
      <arglist>(ButtonAreaIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2ca386c261afd057ef912a9fd61cce0a</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, DrawableIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a56b903a475c67a10c9b84d10ff8bc584</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, DrawableIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>DrawableIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3dddb939f3d544e201714a00228439df</anchor>
      <arglist>(DrawableHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>DrawableHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4350046cefc4b4b809c90d7361e2229d</anchor>
      <arglist>(DrawableIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac6237eda1b9e4a4787df271ede139ce9</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WidgetListIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0fb60dbacf1d505b4880db961c016fed</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetListIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WidgetListIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04342997c89e25a94c5e5f603389f62c</anchor>
      <arglist>(WidgetListHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WidgetListHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a329e2e3edcff87a6db92135c9175fea3</anchor>
      <arglist>(WidgetListIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac4faf3b8685d8f3a599ddf8413a2016e</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WindowIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa691f0487d8fbe1e0784697d1535e06f</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WindowIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WindowIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5382ffbc9bea61e02a7a349ee7cfb144</anchor>
      <arglist>(WindowHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec994f2e0ee8df90c9fdcb83578cf255</anchor>
      <arglist>(WindowIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05867c705a75ba931026fd89cdf2f96d</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ApplicationIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abbbd56e8df370dbbfb597be21823693d</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ApplicationIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a262b8da953826fa30e621122d84c7551</anchor>
      <arglist>(ApplicationHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae6b9e1e841b3c97673f6e69216121db2</anchor>
      <arglist>(ApplicationIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aba8f15f0f4ee5ebfbe94eb24d8f4add5</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, IdlTestWidgetIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad50f25730bbdd82b64a1d2cacb59b9c1</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, IdlTestWidgetIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a14035f307f106389a0aeb9894c67b11c</anchor>
      <arglist>(IdlTestWidgetHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa84dfb7f2ad52939fe4eaf183caf331c</anchor>
      <arglist>(IdlTestWidgetIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>serverinsert.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>serverinsert_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <member kind="function">
      <type>const WidgetImpl &amp;</type>
      <name>impl</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>ae47dc242c1d880ad8e040ee74ef5f281</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>includes</type>
      <name>__pad0__</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>ad95c39c606d15138185e81e4cc1d3b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IGNORE</type>
      <name>__pad1__</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>a6518d3a22ecaffd5f7bf218e63182cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope</type>
      <name>__pad2__</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>a8a04609dfa6bf57cb5e8ba74db42f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope</type>
      <name>__pad3__</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>a9df2a56c4ada0c07f073e44a7e168af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_scope ListModelIface &amp;</type>
      <name>model</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>ab841f631963a83aeaff398a2dc7e40cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IGNORE</type>
      <name>__pad4__</name>
      <anchorfile>serverinsert_8hh.html</anchorfile>
      <anchor>af4c83aee7feb667b129735e8bb3b0767</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sinfex.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>sinfex_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <class kind="class">Rapicorn::Sinfex</class>
    <class kind="struct">Rapicorn::Sinfex::Scope</class>
    <class kind="class">Rapicorn::Sinfex::Value</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>sinfeximpl.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>sinfeximpl_8hh</filename>
    <includes id="sinfex_8hh" name="sinfex.hh" local="yes" imported="no">sinfex.hh</includes>
    <class kind="class">Rapicorn::SinfexExpressionStack</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>sizegroup.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>sizegroup_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::SizeGroup</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>slider.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>slider_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::SliderArea</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>stock.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>stock_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Stock</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>table.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>table_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::Table</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>tableimpl.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>tableimpl_8hh</filename>
    <includes id="table_8hh" name="table.hh" local="no" imported="no">ui/table.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::TableImpl</class>
    <class kind="struct">Rapicorn::TableImpl::RowCol</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>testwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>testwidgets_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::TestContainer</class>
    <class kind="class">Rapicorn::TestBox</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>text-editor.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>text-editor_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="struct">Rapicorn::Text::ParaState</class>
    <class kind="struct">Rapicorn::Text::AttrState</class>
    <class kind="class">Rapicorn::Text::Editor</class>
    <class kind="class">Rapicorn::Text::Editor::Client</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>text-pango.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>text-pango_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="text-editor_8hh" name="text-editor.hh" local="no" imported="no">ui/text-editor.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>uithread.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>uithread_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="application_8hh" name="application.hh" local="no" imported="no">ui/application.hh</includes>
    <includes id="arrangement_8hh" name="arrangement.hh" local="no" imported="no">ui/arrangement.hh</includes>
    <includes id="buttons_8hh" name="buttons.hh" local="no" imported="no">ui/buttons.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="cmdlib_8hh" name="cmdlib.hh" local="no" imported="no">ui/cmdlib.hh</includes>
    <includes id="evaluator_8hh" name="evaluator.hh" local="no" imported="no">ui/evaluator.hh</includes>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="factory_8hh" name="factory.hh" local="no" imported="no">ui/factory.hh</includes>
    <includes id="heritage_8hh" name="heritage.hh" local="no" imported="no">ui/heritage.hh</includes>
    <includes id="image_8hh" name="image.hh" local="no" imported="no">ui/image.hh</includes>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <includes id="layoutcontainers_8hh" name="layoutcontainers.hh" local="no" imported="no">ui/layoutcontainers.hh</includes>
    <includes id="listarea_8hh" name="listarea.hh" local="no" imported="no">ui/listarea.hh</includes>
    <includes id="models_8hh" name="models.hh" local="no" imported="no">ui/models.hh</includes>
    <includes id="paintcontainers_8hh" name="paintcontainers.hh" local="no" imported="no">ui/paintcontainers.hh</includes>
    <includes id="paintwidgets_8hh" name="paintwidgets.hh" local="no" imported="no">ui/paintwidgets.hh</includes>
    <includes id="painter_8hh" name="painter.hh" local="no" imported="no">ui/painter.hh</includes>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <includes id="scrollwidgets_8hh" name="scrollwidgets.hh" local="no" imported="no">ui/scrollwidgets.hh</includes>
    <includes id="selector_8hh" name="selector.hh" local="no" imported="no">ui/selector.hh</includes>
    <includes id="selob_8hh" name="selob.hh" local="no" imported="no">ui/selob.hh</includes>
    <includes id="sinfex_8hh" name="sinfex.hh" local="no" imported="no">ui/sinfex.hh</includes>
    <includes id="sizegroup_8hh" name="sizegroup.hh" local="no" imported="no">ui/sizegroup.hh</includes>
    <includes id="stock_8hh" name="stock.hh" local="no" imported="no">ui/stock.hh</includes>
    <includes id="table_8hh" name="table.hh" local="no" imported="no">ui/table.hh</includes>
    <includes id="text-editor_8hh" name="text-editor.hh" local="no" imported="no">ui/text-editor.hh</includes>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <includes id="window_8hh" name="window.hh" local="no" imported="no">ui/window.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_TEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>a1eee3ec14206d07b32c357cc1ca7dba7</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_SLOWTEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>a17f22277121dea36313391da79edc478</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_LOGTEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>af1cc769da128f619877a7a72118f1b1d</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uithread_test_trigger</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1c9904b764f50dde1e1a6c15d735d4f3</anchor>
      <arglist>(void(*test_func)())</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>uithread_main_loop</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9fa1b7c5393614ed9e220f120789e6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uithread_is_current</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae96268ed61a2aeac3259f6122438136f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>viewport.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>viewport_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <class kind="class">Rapicorn::ViewportImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>widget.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>widget_8dox</filename>
  </compound>
  <compound kind="file">
    <name>widget.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>widget_8hh</filename>
    <includes id="serverapi_8hh" name="serverapi.hh" local="no" imported="no">ui/serverapi.hh</includes>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <includes id="commands_8hh" name="commands.hh" local="no" imported="no">ui/commands.hh</includes>
    <includes id="heritage_8hh" name="heritage.hh" local="no" imported="no">ui/heritage.hh</includes>
    <class kind="class">Rapicorn::EventHandler</class>
    <class kind="class">Rapicorn::WidgetImpl</class>
    <class kind="struct">Rapicorn::WidgetImpl::PackInfo</class>
    <class kind="struct">Rapicorn::WidgetIfaceVector</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>Rect</type>
      <name>Allocation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05bfbf22505a1cb864fe0b7fac444620</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af176ccea138e2c2aa92403a0e971e907</anchor>
      <arglist>(const WidgetImpl &amp;widget1, const WidgetImpl &amp;widget2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a906e8e38060384abb8679a1459079c3d</anchor>
      <arglist>(const WidgetImpl &amp;widget1, const WidgetImpl &amp;widget2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>window.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>window_8hh</filename>
    <includes id="viewport_8hh" name="viewport.hh" local="no" imported="no">ui/viewport.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <class kind="class">Rapicorn::WindowImpl</class>
    <class kind="struct">Rapicorn::WindowImpl::GrabEntry</class>
    <class kind="struct">Rapicorn::WindowImpl::ButtonState</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="page">
    <name>Aida-IDL-Compiler</name>
    <title>Aida - Abstract Interface Definition Architecture</title>
    <filename>Aida-IDL-Compiler</filename>
    <docanchor file="Aida-IDL-Compiler">ImplicitBase</docanchor>
    <docanchor file="Aida-IDL-Compiler">aida_type_name</docanchor>
    <docanchor file="Aida-IDL-Compiler">motivations</docanchor>
    <docanchor file="Aida-IDL-Compiler">design</docanchor>
  </compound>
  <compound kind="page">
    <name>rapicorn-ChangeLog</name>
    <title>Rapicorn Development ChangeLog</title>
    <filename>rapicorn-ChangeLog</filename>
    <docanchor file="rapicorn-ChangeLog">commit_7aa0f8aab05</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8e4934873e7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_34fe14593cd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7265c8fa7aa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9a1f1f72f22</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_88be6b0e924</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eef9c33df4d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1b27b4f2a11</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c11bc161060</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_112f877dc26</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b06bee4f13f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_000c82c3ec9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_840904e4347</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_49a1f0e5a5e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5ab64f4123b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0a57d49972f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_39d0d3e0ed8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6cd30ed66f4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e080edf9f28</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a18a4a13460</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0b4f7effd4a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fa051c2fb38</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_76ddd5132a8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3b13f6eefc3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7764256f269</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_63830a3f131</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a7fca34cd60</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2ce3689fa43</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ecec7d97f71</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f9d8a58afc8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9efd14ecc81</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7ff1aa0b822</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a86c0e67948</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3bd6af70e02</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d9813ade179</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ff9605bf10e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e377de6b2e0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_72076e75369</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_19251864d96</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1ab0d63e5a7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0ca8074c831</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ad332ec123c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_02ae7e764cb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b01b7a172e5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a48bf3308af</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3cfcd12f487</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4f2d9f28291</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7b9ac55ed2f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cc58db67d2e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_958aefef1c1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_63e8e15ddee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cf941b911df</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d66cf04f738</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1ad796179fe</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e1d1e2ab661</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5d2742b2499</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a98f105200</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c9b4a79e670</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1a2156d5201</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_99519bb9c35</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eae939f74c5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a5ba9a8dca</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e57399a7028</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9ecb5a0b5bc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1bbda61598b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a24f7cf5b71</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a64dac72024</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d148394de10</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a69f1a8cd85</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ba29b7c796f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_27d4c83f915</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_03d7c93fdb5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c7d29d810cd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ebed5e5a5e9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_feafd7376ad</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3e7f3f8719f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eb2c37cbb67</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_84a0f47f2ea</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_74e44c2dc95</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66ef49e1672</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_293211aaf93</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4ba7ce74ed9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a6abf108cfc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b7dc9722fc5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5b964b79de9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5d0ca7fd36e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e4e4041b6ed</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_605cc1ebdda</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17f56a58634</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_663377bc8d5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fca93e5f35b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_493ca3b804b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_44a83c1686c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5183848db71</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f6696bc6219</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b9d59525025</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a927d9e646</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fafe307e638</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_64c3351e1ae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_029677d4463</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_388abb5e9b0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3c1eca5672a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6180cb92ac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5b73bf7722d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d5f34824af3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cdc1e61f864</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8e1cd24d93b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d97178f605d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9a8be9e4632</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1e06774d76b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3d9683d6549</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6d25e91185</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3d7c41da411</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_24efe3a7bb9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7c2be664908</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5c73bc9a1d1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0f8378394c3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1c7559fe5d7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cd9ebcca323</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2f5dc306b40</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_83b51a12df9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_442461b32aa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_47c784a6ae8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6f18ab76c87</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_debb5afc6e3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cacfcb2b002</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8268f77417d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bb83b0c4acb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4d6ed1e95da</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b88a5ce5ea7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_818ac13db99</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_278eb35944f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e1eba978a09</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_10f4da704b4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6589712b756</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_affd6b961a9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_67225a1a701</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3d0c7841235</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2124adfa449</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b067dcf670e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3fa1f8bd21c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2868331dd71</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_58aff58f406</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1fb3cbb932c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6919800bf56</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a958e8655bd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2ad39589167</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_70b69dea194</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0cb2e454200</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e751194679c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_71723acc92b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e544100f054</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_44a81508d58</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3d2204f06c2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_caae9bd3dc3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0c4dbc5a191</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4eaa3c09429</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ebb92948fa6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6c8380004f4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c4ca69419c1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cf416bdb78c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a8eb297d35e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4a9a52389a6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6e2a1e233ae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d40a2fd78c9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_37abad60bd3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd6c3a71956</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6d765553231</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_11d4be45616</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_84274485fbc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_945dcd7dc9f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2b4d9a51700</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6dc50023849</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_18e1d6aef49</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_33fcca18bcf</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e35571b24f8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ee5de54aaf0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c9d51713d8e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_43275e8ba9c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_050ea94e357</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ea3c26e8d04</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_be2d029fef0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d34e51c041b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ca983304939</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_15d99b08a08</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7c849614c9b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b7fc2380683</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b4e30ee40cc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_881252ca493</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_98c039d938e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_805faea2290</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fb8c6b52aff</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cbc62a16545</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0319dda66f0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_738f3565478</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c1066f43fa0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0ea54e16f95</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f3845832868</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bde2774ae0a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7ec06684dbb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7e70e88748d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b88dcec7c9d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bc22a2c911d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4f6428de6d3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2f0371ee558</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d8f4fe898c4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3ce59d05844</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17ce09fca53</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aee88c2a95b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4c62f531774</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6e90c92ee29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2ebb3691b69</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_19f91fc01c6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ed85b9ac4f9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5be54194e25</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2fb6cfba4b2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c503a006228</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_08cd329d43b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7542de9ca43</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66f2b297d1a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d9076035599</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_be85f576c1b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_41e1a0a184d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_38159f64395</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_feef04c6e45</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b771c49b731</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_095f26e3d8f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_333b0630414</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_647e6f11a67</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dc151244074</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_76cff384cfa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_84c9f77b16d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3f891e9100b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b93b61babae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5d6d05e0a4d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ac019b16337</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2f753c81b0a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_81370be0970</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f22783eb578</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_01d91e20589</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_951892fb423</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_253bde5cb7d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2a83e8008d3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5adc2458797</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0310fde28c9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fafc2e3d1c7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a27dd753e96</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6d85311040c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_947799b2248</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5b714109131</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ad56dce2a44</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_553b0c32413</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cc256412623</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8883b986417</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ccbf9bb884d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_52b8a0186b5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_77f66d7af9f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_801e4c8692b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ba3183b86b2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_161c9e897aa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_59f7549a3ed</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e3b67f11763</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b50b627311c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c56cd32a787</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4c7901c9bdc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1ab3163df95</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f94d557a549</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_30978969fd5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_26a294c3855</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5086d008ccc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_54acba5d122</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aff6996628d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_63988ac52d3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e3af976042a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_61c4bfaa5d3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e782c5e384d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2a7a5daea13</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_664bbda5151</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aa9105a2bcd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d0299626ce3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_be9e33b209a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a2ae29253f7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_802d1361ed5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aca11a2d31f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c2a5eab213e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7440ad65d7e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_190f1bd86da</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_070f587fd89</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_942e80e3019</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e340eff62b9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9013e71b9c4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f6a5b402fbc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f8ea1c501d3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_104f3587236</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e08b9a807e5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_67af42668d7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6a8f35b18e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_de40bc05bd4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a3c74f35e36</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a7f198df908</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6b1ad8ef109</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4417c48abda</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_822231a2f2a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b5acdf0bdb7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4a0bcc0b8d7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3395aa93132</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_956f6259656</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_97ea79d55da</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aa0e6b9dac9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_85ccd1551f3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e07e545312e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c2a06d170de</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7726952d5ac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_57fbef09268</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3ae29fb7c15</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7170a628469</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b98b71df9c9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3a0d2c345a2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ba3b4489c83</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c177b4d7ed1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d08d5331524</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d7694ffa923</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_23844de5638</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2420d874580</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_24bf03f9eac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1b236565818</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d403817c962</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0b4efea873b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c565ad85a47</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_877d64979ee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ea6c61b133</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_981cb70fa98</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6622d6dd00d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2fdd266026e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dd379996d0c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_46a6f880e82</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0c2b9ac5a22</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9983f4d41c7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e70636e8b8a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c3a3162f66f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9e5e9410f82</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b89d99a6bae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3b8012916d2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_28aaf377566</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17d805377d1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6ac0a969ca7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_068b92ccb48</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66d3562065b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cd85d0c61bc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_37b3ecd67b7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_53b4666f7d6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f3c6a752c29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a76c174564c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a9362b94ab4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e1ebd72fc3d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_59a5bf92467</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a286bf9830b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d662c9d5a0f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5753e75e148</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_945fa445000</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_94842e83cab</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_533191847a9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3e6d1970226</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_adcbb50c77f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d18c8d255f0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e77ffebae55</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_87f41dd7852</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f9fb68d4a8f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9d89480ea2f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_69d15f52678</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8516bd39f2a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_86328813b4a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0115f5b7782</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4190ee94dfb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0bb06c245fb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2376def7a4b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_006f4b383fe</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3154e0bf689</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_afb6f318722</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5157e221a87</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_18475107bf3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_51d839e3320</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f15f873eb90</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_11f655c9d3a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_81343f926e3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e244daefc1c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_db95c7f64ee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_91f810b1fa2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_790ddcc06cd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8d6df5b9e08</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f21bac2886f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ab5cb68cdb9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b4e35a4c6bd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cc2918c98c5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e7b66f51a2d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f6d421b1632</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0ed8e8b5636</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_179bb8475a0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f974c8b482e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_093831a6859</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cf2ff42eada</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0a60b06a8d2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_73423e4522c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9680c7ad4a1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_04f212f1ac9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6b5d29a9643</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d19dbd78878</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_07d467bbe79</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b255f8a97f7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_134f5bda7f9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e6812e2803a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a9400874364</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6b91a662373</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e6322d940f7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a54fd368792</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f5f4f44d07a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8e9986a615d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5e35dec5772</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e6b8db87507</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e6e71518b7c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_731bda33b5f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_53549ef5d0c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c7991f25136</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_20333d55da9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6cce4b194a3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e23027657ec</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3d1efd29df6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c7a41204d29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7e5c710bb5b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f51ab644f96</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5d69eb26cb7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f1628fa9d3d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a29b4c7840</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_713e9581350</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_008b6d25946</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_683cfb6df68</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ed1fa2ef6f4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4a72cd86705</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fa202c92e36</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dcbb67b6d1b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6d1c8b285cf</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a7923096539</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3703deca5d5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a18ab39bca6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_840388cbc49</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fec0127e9c5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a327f946da8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ec204b83b8d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_67f73e64045</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0d8de2d8ba2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_663f60e2559</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d572405ca1a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6c2c60c425</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1d64040043f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9da2989c5cc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a32757ed334</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f7c21f5673e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c3ebe959925</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5e06915640e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_003edf34acb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3518326f2e2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f63571d21ff</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8fae30d79b3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_913312b6f4c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fa0573a3dcc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_874ba931372</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_606f8bbe01f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eac3b1ef510</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_99ae4296c03</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_203107f282f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_41a0c59bce5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_15df6ee3444</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_572813d6082</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2c1deebb2c3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7c69e98da83</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6999516185d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_97ea59d3342</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d1941418d18</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6f3e20f62a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd1cea962e2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9f7a2dcec93</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ea2e93165e0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_63f179ab077</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9dc04ba3942</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_25774145579</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1731afe7a93</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ac32bb7baaa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0d202daee55</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0d69f05479a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eff8e578693</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f1ad9bb01ba</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_94fd236244f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6f909c53930</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_661f7433b64</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a138d8d4b58</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b1eda0b308f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_74c57837d44</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_55d01fd0be5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5ac549bb110</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd25fa2847b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17153e11da6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_055cf9970e9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_50eb0faa898</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_195161c0fb8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dc9671866a5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b1431f8704f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f77b29e9e59</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fec0d781e44</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_64abcc233cb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7d89152f67f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_30d705c0a9d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a8b25027a64</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3f7616caca1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ca7d2833174</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c24b5825847</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ddf4a1f8ecd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7ccedcbda7b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1d13f4b9896</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd2b7409ba6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_db992f9d732</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6230b78cd2f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a539a228f55</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6c15bd35ea</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f4a9ee0a0dd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8e9eac5f7d8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4fea3d23911</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_586f32de149</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e1f6464b667</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7caa1f6baff</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_15e8d6b2042</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_89a7afab66a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9a3790642ef</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ee812c9d6d2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_569fce82433</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1f574253bb4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5fe33c8be2f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_85cfdeff044</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1ef645d82fc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9c4655272df</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a15f12ae727</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b2f9d8588c8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4c151fde410</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4cee15dd512</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a5e45141fb2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_83160466201</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_03730124850</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ab0a822aa42</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_863ef0fafc1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b15a80e2128</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_96b60698fc9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_98b109a5754</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1e72d21a909</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_432db667896</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1f4c704ab03</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1882c05fc7d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bfab52bc9e0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_09917201706</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bafc162f062</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_885f4a6ca0c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8c7d4c53d69</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_86c1d6d76ac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c88e23e59b0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a025601828e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_569b482a8da</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ea0dfbe426</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7f49543e969</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_11cbec8a641</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3f378700d29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_565f9de5926</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e91311a4d21</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4fe2d92997f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c45582d8b0a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a21732267f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ef3d8788c65</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_09a836b3460</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9bb650b0ebd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a0179339c13</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_112475af598</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a3cd04307e5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b37e21e704c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2137d6feab7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8742ad18a30</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9b497586fe1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e59e66b7398</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5a2ed6e1fc4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_177773ddb5c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f9f0996985e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4806ff22267</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9cac969f22f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c2a6ea65fa5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_01ca6c0cc86</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17737352271</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0efb1dba618</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7e010d80b9d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dd4513df491</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f55f8d280c7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_edcb76efc62</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_caa14e9a058</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_62fb39fa61b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_eaa77674296</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f58e7d9ea5a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_97ec1002fe5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e276ffafa82</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_aa3586c6abd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_51b871d2d48</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_90cadcd0eb7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f3fd8d788aa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_65862e1eb14</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ab76bd940e1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b105c31d49e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6c7aba9aa14</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1c1ced0b666</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7b2774d02f3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b4dc9b81eb4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4b5e7e945ba</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fc3274d86c7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ec09797adb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_64af02f600f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_90cdbe1a80c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d6169f31480</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_25577673f1e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_015ae094efd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7d47f944d17</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e0e10a314df</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8678009da93</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_42de084e6f2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bb2d53da09d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b21726d60b4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_58cfe27970e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ebf7f1b490e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c11709bc14c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_03c7925dfac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d8aabe423c9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a4afbc4b6fa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2ff01508caa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0dba374e194</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_747f2473a39</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4ee70b3f59b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_53d3510a2f2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b7d59c018bf</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_932b17c22af</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_37af253361c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e77cab6367c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_46390f0eaf4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_baabd84ef84</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_58073c016ce</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3c336ec4292</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ba78dbcf92</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5ff87dbd46f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_611454d933b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ab0726c6226</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bcdfe3aca45</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0e26e6959be</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_610b471d132</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_248f10d6e80</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66fe1ef2ac2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e8bf3bc2159</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f18694770d2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e5b8b7e62de</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4bd2a14fa1d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_34fbe3302a4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_51e4ec1a841</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7bf2344f535</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_31965b1145b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a75661dd131</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_074b5380c82</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6348bc37e80</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3e832b5da39</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d9c26233866</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d8da9657649</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a223fddc492</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7375f011623</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ab5bf3a9ca8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3ccd33360f2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_65e59c20133</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cf7c5ca5c26</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_094f5bfb308</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b53beee3e8a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_de55559ae93</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e4b99792ae8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_84edb94627d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a9bec5f4e6b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9c7c193f3b8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0db47d6da13</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_15c01513975</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1da128b7164</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c3641a7f5d9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_607f0d9d1ae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fa6e71d0e98</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66c80bb272c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_193af65aea6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ff08173b060</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_52fac0905ef</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_85439fabd48</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a0ef1098805</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_82aa558bdfe</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_42b72ea80dc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d926bcfbe69</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e2d4c827942</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_419b07cba31</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_53bd918f5e6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_72ab4da3806</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1877637b367</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4480546e875</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_de58837881a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0595a5a0ef4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ad518f08f1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e59a007873b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2b21bd71111</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_45680c7de46</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_308fb685ffe</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b58fc3b5d29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_88f8d1a8056</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_14ab05014cf</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7b19f25bf4d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8685e809384</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a3fce0b6b8a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e2b3ef8bc21</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_14a408d2025</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f26935895cd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f3707ae6217</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_88ae5231727</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4246e8ba762</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4413bb5901b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a4c511ff69e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_744aefbbee5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cb52a47ef31</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e9f228008f0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_29430cbde2c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9c6851bcc2d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2cca721c278</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0e6d3aa9510</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_bfc9e32b8a2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_080521e4beb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cf68275c998</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_03bafe51c2b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8a11355e735</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ff38bef6777</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_acaf3e3515e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_292de6dd44e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_00dcf4303a5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_42876edc489</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_173ec3f786a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ca942d7714a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3a178932c70</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_53a4d57605c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ef7c23f43a6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ee2258eabb3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8800c2d51e2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5e7524246ad</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1d964d5df4a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_30b6e97884e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_89358300994</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9782195bc3e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_945c0d835ae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd465599ed8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1211bbaf4a0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dcc86b303e6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a2e76cfafa2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_547493bfa0b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_58ba4b03f44</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b8c4069dd23</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1ece8d966f7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_49ded64df44</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_07492e04ea5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c4dcd0de140</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_de0e777f459</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_44f951b9b0d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ef90a9bd995</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f08514032eb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4901773ee4a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d21bcafb639</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_95110f4dd4f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_504d2b486d4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c4cae632f49</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_67c34fb6644</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7f2bf432a0b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d19ea34db2f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_06b7dff34b8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8062f77a946</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f1f22c15d34</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6878f2fed45</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_776dced5431</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8ef29570e14</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c61e8e816d4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0ec2c9b0626</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d062c9d7222</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_af2a4dda712</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_01c600f6a32</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0d0b0d1ac42</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a315a0a2fc6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f58a7e54b29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_849cd4ba05f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fca09d05cdc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4ce8e2e11d8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b75f82a9d29</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3766a7e0f08</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17cfa566205</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ad393762bc0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_68af7364e6e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6fa8843855b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ad36c909aa8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7c65e109cdb</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_7b53d513488</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_63100135f24</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_087fab198e3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_115aff0a48c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_da0767e9b6f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_17ba8cc30a3</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d95b0c94085</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f117cc7176c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dce3f9b2415</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_407d38576f8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_355a9d7013c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8169f0ca870</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c0b3af54980</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6ecd47acc8b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ae973ed6a34</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1f19c96add8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2826c718a18</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5034c9677b0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c3684106b67</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_47bea5d54bd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5524e7c301f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b367a46ff4b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_10867479138</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2712e7327e2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_119fae9654f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a1210066a22</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d285a84d2ce</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_83254b0d0aa</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c394b1a3e33</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b0884be7e67</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c23d8b36d84</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e0658d2d290</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8e92a52d0e9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f22ba767fce</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_46d6603fec2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_06569b8af79</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e4b2f92db31</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4ebb68a1c23</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3134cd1e0cc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a909c7f2023</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e0b662afe14</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e71859c6b49</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0594c9d34df</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ac7044b6c76</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ca3ada3e17c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_23e54b86ec2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e2f8cb27bdf</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e4ec0b8d829</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9c82aebf8ee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dd0af3bf320</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_66af599478c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5f5a74ca45a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9ac1595f925</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_177897f19f9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4a5f676aaae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_10a5280fd8f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_4791b64af84</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_afb9302edf8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5950d303a50</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3b53a3ba8d6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3360855d780</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8befa8658cc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_73005dcdb9c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c91160beb16</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2878cb81c06</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a7eb1f3c038</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6884d3b10cc</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_55677e36376</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_291974155f6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6e9f84757ec</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b8efe2a1d5a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a820721e1b1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0e49d7a95f8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_813663557b4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8b09eb6d04b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_caa0eba4b08</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_04982d65853</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a1e8017768f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9731d0770ac</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_509695f4917</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d13d45f306f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_daf507ffe22</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8be2116884b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_59b5063ab4a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f93cd186c25</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a5ec5e9cea4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_51113e471c4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d2223c46915</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_b73c7edb662</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_02ae46aae8a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c333710e3ee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f655adca6ea</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fea24897f1c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c0e03400ef6</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_322ab18f14d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_272e6aeb318</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a45cfcec941</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_2042b7e9511</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_74ab354c4ea</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_44c3a825d38</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_df1ab525002</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d69642eb140</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cc8016f73db</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d99dd83b0d0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_96c77b9911c</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fd4f6766c60</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5f927cdde71</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_6ada3805b0d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e2264ddcfee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_845a4b57fee</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_0493cf4632b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e7b30d9a3ae</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1feb3d26d40</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_9d9f97f0329</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_497f9429d35</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5216167408a</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_43ee1e66f9b</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_1cd7df12ef4</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e15c039d680</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_33c63901bc8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_abf9cbc26a8</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e5d073817e0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_d276de952fd</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_a0e881481b7</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_412fa4698e0</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_fe37ff4dc0e</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_235b11f8f38</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_cd191d1c88f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_5ed93163e73</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e8ca60d8f5d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_87d15baa213</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_73670e8eaa5</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_e70e252e8a2</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_f5e330673b1</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_808b0d837f9</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_8600d564d78</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_dab8537e960</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_ff2ae39344f</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_326c18f3405</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_c60d396c81d</docanchor>
    <docanchor file="rapicorn-ChangeLog">commit_3acb8a87e09</docanchor>
  </compound>
  <compound kind="page">
    <name>rapicorn-tutorial</name>
    <title>Rapicorn Tutorial</title>
    <filename>rapicorn-tutorial</filename>
    <docanchor file="rapicorn-tutorial">Introduction</docanchor>
    <docanchor file="rapicorn-tutorial">hello-loop-exit</docanchor>
    <docanchor file="rapicorn-tutorial">hello-event-signal</docanchor>
    <docanchor file="rapicorn-tutorial">hello-app-init</docanchor>
    <docanchor file="rapicorn-tutorial">hello</docanchor>
    <docanchor file="rapicorn-tutorial">hello-create-dialog</docanchor>
  </compound>
  <compound kind="page">
    <name>rapicorn-NEWS</name>
    <title>Release News</title>
    <filename>rapicorn-NEWS</filename>
    <docanchor file="rapicorn-NEWS">release</docanchor>
  </compound>
  <compound kind="page">
    <name>EventLoops</name>
    <title>Event Loops and Event Sources</title>
    <filename>EventLoops</filename>
  </compound>
  <compound kind="page">
    <name>Widget</name>
    <title>Widget System</title>
    <filename>Widget</filename>
  </compound>
  <compound kind="class">
    <name>Lib::AsyncSignal</name>
    <filename>classLib_1_1AsyncSignal.html</filename>
  </compound>
  <compound kind="class">
    <name>Lib::ProtoSignal</name>
    <filename>classLib_1_1ProtoSignal.html</filename>
  </compound>
  <compound kind="struct">
    <name>RapicornRegionBox</name>
    <filename>structRapicornRegionBox.html</filename>
    <member kind="variable">
      <type>llint64_t</type>
      <name>x1</name>
      <anchorfile>structRapicornRegionBox.html</anchorfile>
      <anchor>abad5313991a667f0a3eeb2f2285df200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>llint64_t</type>
      <name>y1</name>
      <anchorfile>structRapicornRegionBox.html</anchorfile>
      <anchor>aecaf8a2acdac021c03f172816d6b0800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>llint64_t</type>
      <name>x2</name>
      <anchorfile>structRapicornRegionBox.html</anchorfile>
      <anchor>a20510c4f4e167103f67dac9c7fbb10ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>llint64_t</type>
      <name>y2</name>
      <anchorfile>structRapicornRegionBox.html</anchorfile>
      <anchor>a609b973e4370a99ce967b1f987081cc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RapicornRegionPoint</name>
    <filename>structRapicornRegionPoint.html</filename>
    <member kind="variable">
      <type>llint64_t</type>
      <name>x</name>
      <anchorfile>structRapicornRegionPoint.html</anchorfile>
      <anchor>a09a7c75f5daf03001dbababe0b66398a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>llint64_t</type>
      <name>y</name>
      <anchorfile>structRapicornRegionPoint.html</anchorfile>
      <anchor>a4632930e102d6d6c98c2cd1983485187</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Aida::DynamicSequence</name>
    <filename>structAida_1_1DynamicSequence.html</filename>
    <member kind="variable">
      <type>Any</type>
      <name>any</name>
      <anchorfile>structAida_1_1DynamicSequence.html</anchorfile>
      <anchor>aab84a29bdf9eafd1d02de3251a3abe8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Aida::DynamicRecord</name>
    <filename>structAida_1_1DynamicRecord.html</filename>
    <member kind="variable">
      <type>Any</type>
      <name>__builtin__deleteme__</name>
      <anchorfile>structAida_1_1DynamicRecord.html</anchorfile>
      <anchor>a811ac3d8e093c2ff6277afeb4f74cc63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::AuxData::Error</name>
    <filename>classaidacc_1_1AuxData_1_1Error.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::CxxStub::G4STUB</name>
    <filename>classaidacc_1_1CxxStub_1_1G4STUB.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::CxxStub::G4SERVANT</name>
    <filename>classaidacc_1_1CxxStub_1_1G4SERVANT.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::CxxStub::Generator</name>
    <filename>classaidacc_1_1CxxStub_1_1Generator.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a32636c78ad213d9098c128a9ac7c13a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>Iwrap</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a5869a91c3ab6e1255545af3a986485dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type2cpp</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ab3ab8e7302778ad116b1c4c639a6a14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>C4server</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a3d4ce157c2182d81e07c646e7d439d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>C4client</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>afbc255eac033c447bef54a678f2dea9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>C</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ae6b29194f0d6587eb5f38c0fa9def057</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>R</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ab722a3009ac9ae83eeb2871553669342</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>M</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>aef7e0375b153890cde6c67b38e119653</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>V</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>aea860442f360a5133784868664243c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>A</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ac483016a19f6a6f2439dcbd8a799fd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>Args</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ad0c0801daf3b88546f55b93ea3ee1179</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>U</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a2203322e40411e768bae62a740252b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>F</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a07a31ee8173f829a346d24432322fb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tab_stop</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ae7b594f78e6e78be5fde3739049a3bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>close_inner_namespace</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a975f7d47285041f9edde9c7eb59ae2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>open_inner_namespace</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>add5dc6bba44fd77c6136aa7cf9aae4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>open_namespace</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a5d6df4252c3eba520e0fb74c2982afc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type_relative_namespaces</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a5320334c78006ff9a78caf9b4d0c6f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespaced_identifier</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a28c795742607b20ed9c4419518d2a8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>mkzero</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>aadabb6e9873352779aa35b6a62f17125</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_recseq_decl</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a022699cbac20188a1b7b7d5bf87d7760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ntab</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a24afb01b671972f95af3b712519038b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>namespaces</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>aeb6762d52fdc92358533069496ef0912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>insertions</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a45e348fd3d4826d85f2160af025513be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cppguard</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a580ac8849dda25589b94e4518164427c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ns_aida</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ac51c8ec25de946d19645ed11cb4084e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>gen_inclusions</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a22c106aa56b1bde0700183467790e5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>skip_symbols</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a47c89a7e394e55e02376d997bbcb1996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>iface_base</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>af8e36caa8edfa74d361ad32def0c4023</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>property_list</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ab1dc39cecc7cab4de4bc2513d664af5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>gen_mode</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a73c35ff6d1d2079712248d056a1add8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>idl_file</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>a2e1583ad6e397494f80622fc445a45d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>apikey</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>ab97bb5d2f32d6d8d47ceb0e5bf201e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>strip_path</name>
      <anchorfile>classaidacc_1_1CxxStub_1_1Generator.html</anchorfile>
      <anchor>aef683e48b925dabb0912a53ce78c2294</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::BaseDecl</name>
    <filename>classaidacc_1_1Decls_1_1BaseDecl.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>a50bcf18e1e7441e3d3dd171fd95f8557</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>list_namespaces</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>a93add3ec47fe642f2fde9f3a1bea0f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>afac3de3d52b9dd555db81ddbd4522d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>namespace</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>a376322814ef60951ffc8f656eda89e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>loc</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>a83380d3712e78be6a029285977bbbfa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hint</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>a1e958d79cbf057841f9967958bd75561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>docu</name>
      <anchorfile>classaidacc_1_1Decls_1_1BaseDecl.html</anchorfile>
      <anchor>af1789560010288a3af4503c16d11746c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::Namespace</name>
    <filename>classaidacc_1_1Decls_1_1Namespace.html</filename>
    <base>aidacc::Decls::BaseDecl</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a812d225b3be7db17fb734f4adce5d9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>full_name</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a2a2f61fd4b39dde2fd186e6bf60386bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_const</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a3b70d9ac19924c3fac6f088b9aba6ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_type</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a4af851f3bb11ef3c376233229d7b7ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>types</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a073a9d4a4b1b37e459a9409a1fcb0d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>consts</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>af208cb0ce70a6368a67d4747526225b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>unknown</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>ac64615f17901505dd106ed1f1c2bff63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>find_const</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>addbde33ac38c16956edb0a70ded5067f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>find_type</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>ab950fb39fdcb598ee022f34de8283097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>add061630d06347b7e157d2d645ccd514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>namespace</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>ad31cf1a98e4a82363a34a1cfc36c7a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ns_nested</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a0022ce0558485edea082f88a6164343a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ns_using</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a5316f558346547247418dd279d59e086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cmembers</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>ad47a5f0e67ce3511d729f7cc863bc74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tmembers</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a7a341c10215d3ff6182b61315758907a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>type_dict</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a4fd28be602f0ff44ff778661932e089d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>const_dict</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a2ac1a648c975a0ae5a98912625783ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>impl_set</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a6ad2e02fbd0e8155eb5cc73a8c1a813c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>global_impl_list</name>
      <anchorfile>classaidacc_1_1Decls_1_1Namespace.html</anchorfile>
      <anchor>a585badc625ec7a71b038e86ca3a6c31d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::TypeInfo</name>
    <filename>classaidacc_1_1Decls_1_1TypeInfo.html</filename>
    <base>aidacc::Decls::BaseDecl</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a45e658479a902756283167eae70eb2d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>builtin_type</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aacc3ab0188812dab9a044ca62a0ffbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>string_digest</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ab50e25ab26f0cbb1d8a1ee6df57454f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>ident_digest</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a925d478dac956861321800f355a8e728</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>hash128digest</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ac704166dc6ce21a2b367164724912558</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type_hash</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a77dc489d96e6d965ecf75229488d2c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>twoway_hash</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a5908ea7b8c6aedd1e0812b0865483e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>property_hash</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a2906095f1917c2488b437892fff9c815</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clone</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ae6da90441dd17c643d313926de8860bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update_auxdata</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>affff2c7b1e9c8e07292c7f0de4411d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_combinable</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a91d0f4b7e8b20e5070095f7a1faedab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_option</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a8c08e15147f82480665fbc040fc23068</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>has_option</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a03ca4e21c7562248cc26f05cff636d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_stream_type</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a8c69a13461f3879329a6af2ae9de7682</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_field</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ae8d8ffd7a61de79fe0a510bf5f3d85e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_arg</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aa64175bc01fe27bb9995f92d9f7e2ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_rtype</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>af43599764f1fe31702781d6ca71aff0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_pure</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a364e2b279b528938d45441600158c629</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_collector</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a9bb19ec81de5a3cefee1960ef0b3f784</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_method</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a43675e9df5422868d4924312a42c48bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_prerequisite</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aa6dd0e9a34fb951b0298232df9e99acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_elements</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aad533064e8259902b200f4c03ae8515b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>full_name</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a995f9a55b139c2e5a5e6d9b5ce677ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a485589e739a161e43d116304e13fe2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>storage</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a0035a7c62ec7a74d8f0122a4d7e936b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>isimpl</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a8bc17cf8e23d7f40b3dfe0648d35fcc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>typedef_origin</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a2289e881c94cd50d882be235460db65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_forward</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ad824f51814dd532b5a44e6de67f4c212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>options</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aefd7cd313a78449e66061c4a0017f44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>combinable</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a16aed85825936c85316ac3cbec9b666f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fields</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ade58f215dc27e7a04b33f2c0f5b1bb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>elements</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ab22a55f6b32a6d37d3aae23b06122593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>args</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a592f400d75b79d54d7beb1e427dd4e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rtype</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a94ed82bb3bd2b31b22f89712d1ecb425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ownertype</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a33c74669cbeef37e124dc0fbf3d1ea04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pure</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a519dee875a37412accf00cd1a4b81ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>issignal</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a35677cdee232c7c0dcbcf2b25c3698bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>prerequisites</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aed74910d2a30b1b38e77a9c68d36501f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>methods</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a2b3418172a326b9895cca0cff3569702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>signals</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>aed9ba1508b82d04fff7035dd9cc8a9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>auxdata</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a4b3027ed2f5e4c201d2d3b409158cac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ioj_stream</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a058cddc508d740f4c8a0b270ce0f29fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>collector</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>a45089eecee822dba2bcf6fe0c7cd5f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>string</type>
      <name>collector</name>
      <anchorfile>classaidacc_1_1Decls_1_1TypeInfo.html</anchorfile>
      <anchor>ac02bc21711ae03d05c1cba46dddade0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Source</name>
    <filename>classaidacc_1_1loop_1_1Source.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a1b321409c58541a7374e1432baecf402</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_poll</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>adc43eb8349afe4b4800107c02df0e7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepare</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a7160ba83cb3af32cff681f6e483d50df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>check</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a163dc816614fbe4df3ede8d949939de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>dispatch</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>af3a85cff267c0b7dd4c639746dd8dd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>destroy</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>af9578cba90af78e0e431533f0352ee7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>priority</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a648fba7296265726a6d574e62b0f28cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>callable</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>ac15531a16dabb97fd632708a9e2d9ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>state</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>ad91418b0025f342e66f7a96e3687e581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>loop</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a3844d2a9c64bd67d5a1940739b545441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pollfd</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a05af8d157c7e9d3740114de003b9da0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pollevents</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a0b19f7a9877cfe659331820c5e313ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dispatching</name>
      <anchorfile>classaidacc_1_1loop_1_1Source.html</anchorfile>
      <anchor>a77cecdb2700d388d4ca672dbdfabdab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::IdleSource</name>
    <filename>classaidacc_1_1loop_1_1IdleSource.html</filename>
    <base>aidacc::loop::Source</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1loop_1_1IdleSource.html</anchorfile>
      <anchor>a302f7cec70cdb21c534c77d82982c3c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::TimeoutSource</name>
    <filename>classaidacc_1_1loop_1_1TimeoutSource.html</filename>
    <base>aidacc::loop::Source</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>aa8bc4fcf69cabc5c78d8b68b56478183</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepare</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>afac2d93a7ff8ddb18f54d197f5c7fb69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>check</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>ac306b31a906b9e978a060bb54f723bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>dispatch</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>a24188cecff98712c3158195901d9261b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>expiration_time</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>a316124a984e54216e6d38a6fc58873a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>repeat_interval</name>
      <anchorfile>classaidacc_1_1loop_1_1TimeoutSource.html</anchorfile>
      <anchor>a0cb3b839b4dc501763b12bed7b789319</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Loop</name>
    <filename>classaidacc_1_1loop_1_1Loop.html</filename>
    <class kind="class">aidacc::loop::Loop::Timeout</class>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>ae19f1ad79a8e2b588dc1649172d5b231</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update_poll</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a07be33be804fe42fa71b00173b479b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>quit</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a41adaf5bff6c6e0efb85117dfee1024d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loop</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>accdb61b53e8a4a8f1c635f9e1b314870</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__iadd__</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a90041beb300d3f8e459a1e75abf511c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__isub__</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>abcf147340d23d7fd06991337941e39d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_source</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a45804c1ae578d2e69c241a9b26105e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepare_sources</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>acc32d79d40fe2e5c54c5dc6bd480d67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>check_sources</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a41680cc944352027dc2d369c741c46b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>dispatch_sources</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>ad6037273c68cf081394107ce7f36c4e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>iterate</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a983932bedb105c6b35f545afd36d36f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sources</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a6cdda5af658c5b64b46406d464d96e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quit_status</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a7e65cfc17428c5bacc313461c93bc726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>poll</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a82f1a3207eb53ce18d3d22f684584cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pollfds</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>ac50ce49762acb82668a58d766789d540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fddict</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>a846d235c30503f1b80d2486d8578f51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_priority</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop.html</anchorfile>
      <anchor>aa542070e2cd4190ef402d3f716b551f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Loop::Timeout</name>
    <filename>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</anchorfile>
      <anchor>a3326cd64f988584bafe52fd9ffde4016</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>expire</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</anchorfile>
      <anchor>a60ed4cadce7c6fdc589b0713102c1bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>expire_msecs</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</anchorfile>
      <anchor>a691260a402e93cc64359b7ce649e664b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>expire_time</name>
      <anchorfile>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</anchorfile>
      <anchor>ad6a5634d41ba02c774206a4ccb75c013</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::YYGlobals</name>
    <filename>classaidacc_1_1Parser_1_1YYGlobals.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a68adef4a27bfffba8060af74e2dc4941</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>reset</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a4abcc3579b570cbb75e34a2006ad7904</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>configure</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>afb885cf00aa306b7de19d59e20b13cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_const</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a6e67cb257e137dfd799468b429c89520</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_typedef</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a0cd12c7eaa910d78a01c32b4c998dc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_evalue</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>ada0bb80186e1b0859b8eb0004f20af49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_enum</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>ae7d0f845adfb01fb587e09fc868aede4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_record</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a02e0a7eb076a44edb0af4b3d0ca758fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_interface</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a0e8c59ac8f29de6f6d86505a71ef0a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>interface_fill</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a0f5bb56090d89111e3dc3814874602bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>parse_assign_auxdata</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>afd9aaf9c97229005f863704d590d1b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>argcheck</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>afd46686f2b4d3d3349bbd886cdd44218</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nsadd_sequence</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a410fc8916ef2ce8d4ac614a218eb9ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_match</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>ac5ca57e862fd077b6a5a7fb66218310b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_lookup</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>aa98bb0d9bc2b2fb3484c7076aef94b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clone_type</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a3ec211a7fb78622c0c6e2fd12b07f6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resolve_type</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a35a4ba7ab85e9b8d1129628cbb507af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_using</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a77de0285a5e946b6c592f670bf6ea6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_open</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a44d488fe259066b2a5778aeba5e1f9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_close</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>abeb4071f4230f6e4b7c34779fd05af40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>handle_include</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>aad1b794995dd9439e1e1f4c5783d3dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a4b22c1d78f7b8670f6d30b270a485dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ecounter</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a273ba12ecb2cabee8586fd3c480a90ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>impl_list</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a5e735fae6b8d4165dcf31fc5bfae12c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>impl_includes</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>aa0b100cd4608dfee2bf637a23c1d9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>impl_rpaths</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>adc799ad9346b1de382d286af01c5bace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>parsed_files</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>acdf147e0eb56a340bcbd78b87d1a0712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>global_namespace</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a013284aa777a2f523ccefd8cfadc960e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>namespaces</name>
      <anchorfile>classaidacc_1_1Parser_1_1YYGlobals.html</anchorfile>
      <anchor>a5558d22d58daddc0ebea47c10e08b9dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::Error</name>
    <filename>classaidacc_1_1Parser_1_1Error.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1Parser_1_1Error.html</anchorfile>
      <anchor>a942fc4b3a46508ea14b450535cdc9e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ecaret</name>
      <anchorfile>classaidacc_1_1Parser_1_1Error.html</anchorfile>
      <anchor>a630377134a32635340bfd1a657394fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exception</name>
      <anchorfile>classaidacc_1_1Parser_1_1Error.html</anchorfile>
      <anchor>abdaabf57f6739ac32129660950d9e5fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::IdlSyntaxParserScanner</name>
    <filename>classaidacc_1_1Parser_1_1IdlSyntaxParserScanner.html</filename>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>patterns</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParserScanner.html</anchorfile>
      <anchor>aacd15ea360bf348588a106447d64c564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::IdlSyntaxParser</name>
    <filename>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</filename>
    <member kind="function">
      <type>def</type>
      <name>IdlSyntax</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>af01af3274959679a33c9e53de0ef67f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aee7298fed7e9aad48b6102be9f0f0345</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>topincludes</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>affa66c7b1d068282f9d9c78dbef012d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>using_namespace</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>ad3220c291004059e91c52aa090f535cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>declaration</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>abd8f3c587ba97d205e7c826e46b0cdb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enumeration</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a6d336611dde89e3444a9b002751875b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enumeration_rest</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aaa6bb12fe184002e65e9058ba2d539c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enumerator_decl</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a2f3b26501dea10444bcfdea65b726cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enumerator_args</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aeda672e7a745b702cbce63540d9a35a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>typename</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a4404360edbca000a1f33340753db1b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>auxinit</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aec737fcd5277391fd9121f0eec5fbcda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>field_decl</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aea3a371071c5c8a343a32895110c278e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>method_args</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>ab2a304fe00720c4e08745734fc81cc02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>field_stream_method_signal_decl</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>acbcd03a04953f807a8417b244f08678f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>typedef</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a2e16ba1420183823846f0360ca4649e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>field_group</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>abe1bf1b60792672c0a84d27b488d58c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>interface</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a9096e0444cf1b7141a2d8ed9a68cf1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>record</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aa2356b9abe87866da7c38f7cc3a6793a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>sequence</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a5b02f97afdfdb52aefacafef8740f05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>const_assignment</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>ab8b41a583bc62209d94611ae6943a7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>info_assignment</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a29960408461a543f53cb17001c73f822</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>expression</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a8d45193ebfb0a70ddb45d9810ce60788</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>or_expr</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a4cd154101bf253d765dd7e68ae9dbe12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>xor_expr</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a1bbd0158ee81bef35085cb931111e3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>and_expr</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a5634fa9ad78c2e9c46c96a68516302a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>shift_expr</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>accc3ac1de1bfb944851cdc65393dbe92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>summation</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a0901992202091a8ea1addf28825e823c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>factor</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>abe3bb83b3ccdd103f48bea61f8dcdff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>unary</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a243c110149bcb8de84341bf51069c43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>power</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>aec1a278b04efe624c20df427f6502f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>term</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a5b37afae95008c2e7907a73232f2c8ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>string</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a4d8b5a08aaca22092514954247045ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plain_string</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>a738b628813d458fbb505d887e0b10a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>Context</name>
      <anchorfile>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</anchorfile>
      <anchor>ac75b1df01cc431478851e5401d316d10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::plic::AidaMain</name>
    <filename>classaidacc_1_1plic_1_1AidaMain.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a9b7e152e2d486a3f6a2d25749e170b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>strip_name</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a8fb50472a0fc0f147661e6d2ceca05ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_auxillary_initializers</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a26eb17981ad06fdafd3ac6582f633504</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_backend</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a14fcb45d74a7bad18d0e9a7f5b2ea3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_default_backend</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>aea9fe3825597cba15207449d6722fe8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>list_backends</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>ad7f75e8bbddbbbc9d78a91a4dc0ec920</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_backend</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a06ac57b9492f5e5716f61ff9a0297f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>backends</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a644f8455f50a05bbbb610ead1e6d2439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>default_backend</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a4b20775c92e3ca1dd2f947b567042351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>auxillary_initializers</name>
      <anchorfile>classaidacc_1_1plic_1_1AidaMain.html</anchorfile>
      <anchor>a8cded527b0ce9cb2f2c92af37e4f66ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::plic::ParseError</name>
    <filename>classaidacc_1_1plic_1_1ParseError.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1plic_1_1ParseError.html</anchorfile>
      <anchor>a81c5b36ab781b1a647e97b5bbf50f424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kind</name>
      <anchorfile>classaidacc_1_1plic_1_1ParseError.html</anchorfile>
      <anchor>a5e0f6c8a305f0b9741e768b5f2d17ce3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub::Generator</name>
    <filename>classaidacc_1_1PyStub_1_1Generator.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a01b4e3253b18d9d58e700257c3d75173</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tabwidth</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a72f4d30cb3f2e8361ef1ce06fe6edde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_to_tab</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a00cbb2fa113d8c005489f5adb0b0579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_arg</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>aa170983026ef57412bd1c41746af39e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>hash2digestbytes</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ae5b74f81cbf3824618fd4636995ccc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>hash2digestident</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a0eefbf08e8267d494c03ca1cd36095cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>method_digests</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a704599f37a0bb019f4d026c49c50ad19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getter_digests</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a216d0b3ebcf4c13d78bf2139fefd906b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setter_digests</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ac07af8188915a7e72f6706390ba96fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inherit_reduce</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ad3172faf7d5126d2d98c6b4b796bcbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_name_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ad31d83226323bcfe896b5c4ffef0dcca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>leave_inner_namespace_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>aa292e661c76d4146231fc6f4618bec49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enter_inner_namespace_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a391b309cebbf26ed94b308d0bf807bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enter_namespace_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a5f5d90f16102eacf93894ef5943d4ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type_relative_namespaces</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a147c0f2f76b3be8c041315d3ba1f63b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>zero_value_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a9c508b1f88bedb5c69df9173383dd27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>default_value_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ab14804e8b6a10e726cc1f7ee930917fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_enum_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a102f12437bb5022e6daa183c76e9e4b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_record_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ad5af158a7d05b2665eb5679e61eded55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_signal_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a6c86191a3132c598f1e9d04061d4b48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_to_proto_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a360bdf9f17fe4a6923262afe8c9564a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_method_caller_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a6f5fac0908e9e6aff0dbeba812e2bd3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespaced_type_name</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a38b5e681e0fe894562e6e718905b99d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_class_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a6a14b484a58487210b5436ed96805d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_types_pyimpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a41b032b559e2573e2ddc79649e7af6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_add_0_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a2252a2ffa31990d1e078f1fd2792f2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_add_field_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a1fd0a70468958a5640a4fe41eda1b03d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pop_field_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a1e8c9947d728f1085012780f4ad8aeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_record_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>aa9a8d71334ee97a187b7aa0a96d234b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_sequence_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ae5c37da2071fada55376196edf84847e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pyemit_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a7fb75aa1377c9c6a1efd87d08f75fc34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pycall_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a2188ff1fb2351b61904294e28239fd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pygetter_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ae0bc8b0beb67bd9d2ebddbb2fedb4135</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_pysetter_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>abbe3b5cb337fdc28912cdceb170b50bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type2cxx</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ac78379276a15e794e752e319d27c3b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>idl_path</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>ab13373375aaa229bf2e24943d9a7621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pyclient_feature_keys</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a679465750904ddb334aa57e36a8a3a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>text_expand</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a3d1bfaaeaafa33ddad14bac3dd1f50f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_types_cxximpl</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>afcead0cb6e7c150f1a5cb5d151e60527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ntab</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a9c2b11445d3d2026f6d97c7cc3af36c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>idl_file</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>aea8ff5a1b681684a320d5dcd5bee9823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>module_name</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a8ec5a719e82b1b6131659db8b4288517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>namespaces</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a62e635774dea7b5e11b100db2a442aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>apikey</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>a14df4bae1e42b23d527aef278293cd26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>strip_path</name>
      <anchorfile>classaidacc_1_1PyStub_1_1Generator.html</anchorfile>
      <anchor>affb3b73b1aa5cbf8dc7eac339d885557</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::__AIDA_Enum__</name>
    <filename>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__new__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a79d3ba320d80d7720988e7796d6c3998</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__repr__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>ad9846c386321e6d7fe6a298512680bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>ab3a6a77dda937b08c106609146623953</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>index</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a01e9b07b2c659dd1ced0d932e5729867</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a5de4dddd9160368880869444170c384f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseRecord_</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseRecord__.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseRecord__.html</anchorfile>
      <anchor>a854842d1e221c6ae8226106d5be385cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseClass_</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseClass__.html</filename>
    <class kind="class">aidacc::PyStub-glue::_BaseClass_::__Signal__</class>
    <class kind="class">aidacc::PyStub-glue::_BaseClass_::_AidaID_</class>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass__.html</anchorfile>
      <anchor>af8ca3d48b79f2bc93db06976830c253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__getattr__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass__.html</anchorfile>
      <anchor>afd4ca7ca7e9ad53cee38b7e30fb8ecfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__setattr__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass__.html</anchorfile>
      <anchor>a6c257406608e1e58a2471b671ae28031</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseClass_::__Signal__</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a007a020bf0a3b7f81e6376a604109557</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>connect</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>acda03f4e1f5c5fca494b4b29604da9a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>disconnect</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a7339e95c0eb77fc32dc53efd2d6b826a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__iadd__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a281fff0c3299a92a7555909e890ee844</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__isub__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a36fda7ddbad7cdac87cc2703ec5a52ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseClass_::_AidaID_</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1__AidaID__.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1__AidaID__.html</anchorfile>
      <anchor>a26ebb34cab11591d7e99ae39eb022015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>id</name>
      <anchorfile>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1__AidaID__.html</anchorfile>
      <anchor>a42af2d66c96561f26ad689375a703737</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::TypeMap::Encoder</name>
    <filename>classaidacc_1_1TypeMap_1_1Encoder.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a0d1be4284218962a78f67189d07315ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>segment_offsets</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a92d8af6964e1d6842adcacd8a96a6089</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>segment_lengths</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a946008f140b6ec916ad2c3a12c81e232</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>segment_strings</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a1e87c34456edbae1bcfd97e74d6247f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>node_index</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a4c2aed49b7a52eda5c1ef2e126686cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>list_index</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a05efe9ad37f7a30c0d5843b52a7cbab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>string_index</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>ab7a92e2b6a109934ec93de7804848175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>encode_fields</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a31ef6a28ed84b1f8e8eb26774e71f7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>encode_value</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>ae17ebb83ee8bbf0a2116d5137fd32c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>encode_string</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a5f83c0aecdbf851023e3a1d2d2714d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>encode_unsigned</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a0a0fcb1551c66da0a4e02dafb5ec22ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>encode_double</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>afacf1df29bba1128990367d8f0ac2c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>node0</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a3756ae9ce4d834839877aea84b9eb8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nodes</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>ad29b91811c819f1f3edba975b40301c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nodem</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>aa7aaca09472242f709ca8fb94dcf4d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>list0</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a9e55af0cc7a13ac2c5624d01f03f06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lists</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>aff34e122b45d61dae315feadfd95c5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>listm</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a5d59b24e19a93a25ab91efdf86b16bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>string0</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>ac0912fba2fe192b23bd92ac6eb66e8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>strings</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a859f23232c5113fc0962a6e83444894a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stringm</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Encoder.html</anchorfile>
      <anchor>a417baf891dc7aad32c0e82602e9556f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::TypeMap::Generator</name>
    <filename>classaidacc_1_1TypeMap_1_1Generator.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a4fe5084e804c700e9d1794c5376dfafe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>aux_strings</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>af1682328e6402dc063e7118d1f7377de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type_key</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a8e3e3872e44200415e813390cbd08a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_field</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>ae108e6becbdee3692e57852c5a8a518f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_type</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>aa5957e8a36f3ea4dfe8fea6cffaa1514</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>namespace_types</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a8f2e496149d749de18ca84fe6e0b2329</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_namespace_type_map</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a5eb0b9f3e9c40988e602f77b2dcd0d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generate_type_map</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>af0e7d69250d88913719a1b571e16173d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>config</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a797330eba0fc4cedee6f253bf67fe641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>tuple</type>
      <name>reference_types</name>
      <anchorfile>classaidacc_1_1TypeMap_1_1Generator.html</anchorfile>
      <anchor>a0dfcf0a40fa90416f803c439ee07bb71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::SyntaxError</name>
    <filename>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</anchorfile>
      <anchor>a23db1772bd955d7a897765de7a0e3977</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</anchorfile>
      <anchor>abad77b998ee410cef2e79b751536353f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</anchorfile>
      <anchor>a93a70fed4ff59049224e031df647b3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>msg</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</anchorfile>
      <anchor>ac998028c19d9b10523f978df73f1110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>context</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</anchorfile>
      <anchor>ad697574f39a2a000e883d55ab6858c9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::NoMoreTokens</name>
    <filename>classaidacc_1_1yapps2runtime_1_1NoMoreTokens.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Token</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Token.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>aaf5807d75d783fffe556c3f72f967f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__repr__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>a26e60f8a2eb804a13b570973f6daf2fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>type</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>a27abfc2bbdfe16bcf662aff900fda4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>value</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>a366cb772cc0b890741d90066bbb83c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>a2779fdfef7448930824e1b12646d5870</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Scanner</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Scanner.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a64fc8b49465583bdece9bf804c4f5580</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>stack_input</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a27887aaf04d84f44ca1beb6fd3fbe72d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a4e79ca82d37fdb794bc50110864353dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_line_with_pointer</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>aa4d912b5c7d20bcf52372891ade235ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>grab_input</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ab584bf105caca98f1d3711c4373bf87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getchar</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a5e17b6a3de8f294bdcb2f5d43645b481</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>token</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>af22cd89fabff7322a4ab880c5ac7323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>peek</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a1e71f97b9488cbd5eb2f40252062dd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>scan</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>aad6b079a738b1ec135718018c91c635e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>input</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ab62d640affaf7fd47fdb82ddd2b268c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ignore</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>affc2c3914f2aee66c0e0f8dc11112a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>file</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a9388529b4ace2bbbd355e14e6ac234fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filename</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a34bc0e7cda7830bcaa902ac99b0ff868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ae2fa391c27ba8b371261e308c46861c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>del_pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a05a86277973082ae3eca7b12a7236fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>line</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>afff9ddbe54c00d854e8753b645394694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>del_line</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a95a678a1e14c4693d0b895bb5f9f4c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>col</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a78bea21ae7faf84cdcd6be3b14edb102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tokens</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ab32ef760c55cce397665aa2612b5680d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stack</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a57553dce44219dd51a641a8a2469c040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stacked</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ad16c502b954c21adc2b4e778d515bda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>last_read_token</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a8e30e2c33bcaad106f0b7e49d8a75095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>last_token</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a03b6b55956f936314cacf522c7cf033b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>last_types</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a190d8a1fab020104d26a877facd46631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>patterns</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a58fb8b02d80a557e35c0c606a5abc900</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Parser</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Parser.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Parser.html</anchorfile>
      <anchor>ab8efc91b2aaad49df5b404156b870d04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Context</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Context.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>ab3cfdd4a77e809095e79948e60ad0121</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>a874a84073bb77fde50af8d7267bc14c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>parent</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>a4ca13d4bfc84332f22051c1d4b0d4b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>scanner</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>af42f38a98a7b67cf202ca8b508e34ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rule</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>a95fd7ec75f9dc2d29c5889bedcc00ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>args</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>ab59789dc49d56e1e13634e03f97ede02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>token</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>a6130b7949ee6c5652e724a7c018a2c23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn</name>
    <filename>namespaceRapicorn.html</filename>
    <namespace>Rapicorn::Aida</namespace>
    <namespace>Rapicorn::AnsiColors</namespace>
    <namespace>Rapicorn::Path</namespace>
    <namespace>Rapicorn::Test</namespace>
    <namespace>Rapicorn::ThisThread</namespace>
    <namespace>Rapicorn::Unicode</namespace>
    <class kind="class">Rapicorn::Blob</class>
    <class kind="struct">Rapicorn::Init</class>
    <class kind="class">Rapicorn::TestStream</class>
    <class kind="class">Rapicorn::IniFile</class>
    <class kind="struct">Rapicorn::UserSource</class>
    <class kind="struct">Rapicorn::PollFD</class>
    <class kind="class">Rapicorn::EventLoop</class>
    <class kind="class">Rapicorn::MainLoop</class>
    <class kind="class">Rapicorn::InitSettings</class>
    <class kind="class">Rapicorn::ScopedLocale</class>
    <class kind="class">Rapicorn::ScopedPosixLocale</class>
    <class kind="class">Rapicorn::InitHook</class>
    <class kind="class">Rapicorn::MarkupParser</class>
    <class kind="class">Rapicorn::IdAllocator</class>
    <class kind="class">Rapicorn::AlignedArray</class>
    <class kind="class">Rapicorn::VirtualTypeid</class>
    <class kind="struct">Rapicorn::ClassDoctor</class>
    <class kind="class">Rapicorn::Deletable</class>
    <class kind="class">Rapicorn::DataListContainer</class>
    <class kind="class">Rapicorn::ReferenceCountable</class>
    <class kind="interface">Rapicorn::BaseObject</class>
    <class kind="class">Rapicorn::NullInterface</class>
    <class kind="struct">Rapicorn::CPUInfo</class>
    <class kind="struct">Rapicorn::TaskStatus</class>
    <class kind="class">Rapicorn::QuickTimer</class>
    <class kind="class">Rapicorn::Strings</class>
    <class kind="struct">Rapicorn::RECURSIVE_LOCK</class>
    <class kind="class">Rapicorn::Mutex</class>
    <class kind="class">Rapicorn::Spinlock</class>
    <class kind="class">Rapicorn::RWLock</class>
    <class kind="struct">Rapicorn::ThreadInfo</class>
    <class kind="struct">Rapicorn::AUTOMATIC_LOCK</class>
    <class kind="struct">Rapicorn::BALANCED_LOCK</class>
    <class kind="class">Rapicorn::ScopedLock</class>
    <class kind="class">Rapicorn::Cond</class>
    <class kind="struct">Rapicorn::Atomic&lt; char &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int64 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint64 &gt;</class>
    <class kind="class">Rapicorn::Atomic&lt; V * &gt;</class>
    <class kind="class">Rapicorn::Exclusive</class>
    <class kind="class">Rapicorn::AsyncBlockingQueue</class>
    <class kind="class">Rapicorn::AsyncNotifyingQueue</class>
    <class kind="class">Rapicorn::AsyncRingBuffer</class>
    <class kind="class">Rapicorn::TraitConvertible</class>
    <class kind="class">Rapicorn::DataKey</class>
    <class kind="class">Rapicorn::DataList</class>
    <class kind="class">Rapicorn::XmlNode</class>
    <class kind="class">Rapicorn::Adjustment</class>
    <class kind="class">Rapicorn::AdjustmentSource</class>
    <class kind="class">Rapicorn::ApplicationImpl</class>
    <class kind="class">Rapicorn::Arrangement</class>
    <class kind="class">Rapicorn::ArrangementImpl</class>
    <class kind="class">Rapicorn::ButtonAreaImpl</class>
    <class kind="class">Rapicorn::CairoContext</class>
    <class kind="class">Rapicorn::CairoPainter</class>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="class">Rapicorn::ListModelHandle</class>
    <class kind="class">Rapicorn::ListModelRelayHandle</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="class">Rapicorn::WidgetHandle</class>
    <class kind="class">Rapicorn::ContainerHandle</class>
    <class kind="class">Rapicorn::ButtonAreaHandle</class>
    <class kind="class">Rapicorn::DrawableHandle</class>
    <class kind="class">Rapicorn::WidgetListHandle</class>
    <class kind="class">Rapicorn::WindowHandle</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="class">Rapicorn::ApplicationHandle</class>
    <class kind="class">Rapicorn::IdlTestWidgetHandle</class>
    <class kind="struct">Rapicorn::ContainerImpl</class>
    <class kind="class">Rapicorn::SingleContainerImpl</class>
    <class kind="struct">Rapicorn::AnchorInfo</class>
    <class kind="class">Rapicorn::ResizeContainerImpl</class>
    <class kind="class">Rapicorn::MultiContainerImpl</class>
    <class kind="struct">Rapicorn::Evaluator</class>
    <class kind="class">Rapicorn::Event</class>
    <class kind="class">Rapicorn::EventButton</class>
    <class kind="class">Rapicorn::EventKey</class>
    <class kind="struct">Rapicorn::EventWinSize</class>
    <class kind="struct">Rapicorn::EventContext</class>
    <class kind="class">Rapicorn::WidgetFactory</class>
    <class kind="class">Rapicorn::Heritage</class>
    <class kind="class">Rapicorn::Image</class>
    <class kind="interface">Rapicorn::ListModel</class>
    <class kind="interface">Rapicorn::ListModelRelay</class>
    <class kind="interface">Rapicorn::Widget</class>
    <class kind="interface">Rapicorn::Container</class>
    <class kind="interface">Rapicorn::ButtonArea</class>
    <class kind="interface">Rapicorn::Drawable</class>
    <class kind="interface">Rapicorn::WidgetList</class>
    <class kind="interface">Rapicorn::Window</class>
    <class kind="interface">Rapicorn::Application</class>
    <class kind="interface">Rapicorn::IdlTestWidget</class>
    <class kind="class">Rapicorn::Alignment</class>
    <class kind="class">Rapicorn::HBox</class>
    <class kind="class">Rapicorn::VBox</class>
    <class kind="struct">Rapicorn::ListRow</class>
    <class kind="class">Rapicorn::WidgetListImpl</class>
    <class kind="class">Rapicorn::ListModelRelayImpl</class>
    <class kind="class">Rapicorn::MemoryListStore</class>
    <class kind="class">Rapicorn::Ambience</class>
    <class kind="class">Rapicorn::Frame</class>
    <class kind="class">Rapicorn::FocusFrame</class>
    <class kind="class">Rapicorn::CPainter</class>
    <class kind="class">Rapicorn::Arrow</class>
    <class kind="class">Rapicorn::DotGrid</class>
    <class kind="class">Rapicorn::DrawableImpl</class>
    <class kind="class">Rapicorn::PixmapT</class>
    <class kind="class">Rapicorn::Point</class>
    <class kind="class">Rapicorn::Rect</class>
    <class kind="struct">Rapicorn::IRect</class>
    <class kind="class">Rapicorn::Color</class>
    <class kind="class">Rapicorn::Affine</class>
    <class kind="struct">Rapicorn::AffineIdentity</class>
    <class kind="struct">Rapicorn::AffineHFlip</class>
    <class kind="struct">Rapicorn::AffineVFlip</class>
    <class kind="struct">Rapicorn::AffineTranslate</class>
    <class kind="struct">Rapicorn::AffineScale</class>
    <class kind="struct">Rapicorn::AffineRotate</class>
    <class kind="struct">Rapicorn::AffineShear</class>
    <class kind="class">Rapicorn::Region</class>
    <class kind="class">Rapicorn::ScreenWindow</class>
    <class kind="struct">Rapicorn::ScreenCommand</class>
    <class kind="class">Rapicorn::ScreenDriver</class>
    <class kind="struct">Rapicorn::ScreenDriverFactory</class>
    <class kind="class">Rapicorn::ScrollArea</class>
    <class kind="class">Rapicorn::ScrollAreaImpl</class>
    <class kind="class">Rapicorn::ListModelIface</class>
    <class kind="class">Rapicorn::ListModelRelayIface</class>
    <class kind="class">Rapicorn::WidgetIface</class>
    <class kind="class">Rapicorn::ContainerIface</class>
    <class kind="class">Rapicorn::ButtonAreaIface</class>
    <class kind="class">Rapicorn::DrawableIface</class>
    <class kind="class">Rapicorn::WidgetListIface</class>
    <class kind="class">Rapicorn::WindowIface</class>
    <class kind="class">Rapicorn::ApplicationIface</class>
    <class kind="class">Rapicorn::IdlTestWidgetIface</class>
    <class kind="class">Rapicorn::Sinfex</class>
    <class kind="class">Rapicorn::SinfexExpressionStack</class>
    <class kind="class">Rapicorn::SizeGroup</class>
    <class kind="class">Rapicorn::SliderArea</class>
    <class kind="class">Rapicorn::Stock</class>
    <class kind="class">Rapicorn::Table</class>
    <class kind="class">Rapicorn::TableImpl</class>
    <class kind="class">Rapicorn::TestContainer</class>
    <class kind="class">Rapicorn::TestBox</class>
    <class kind="struct">Rapicorn::Exception</class>
    <class kind="struct">Rapicorn::NullPointer</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</class>
    <class kind="class">Rapicorn::CheckDerivedFrom</class>
    <class kind="struct">Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type *const  &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type *const  &gt;</class>
    <class kind="class">Rapicorn::PointerIterator</class>
    <class kind="struct">Rapicorn::ValueIterator</class>
    <class kind="class">Rapicorn::IteratorRange</class>
    <class kind="class">Rapicorn::ValueIteratorRange</class>
    <class kind="class">Rapicorn::Walker</class>
    <class kind="class">Rapicorn::ViewportImpl</class>
    <class kind="class">Rapicorn::EventHandler</class>
    <class kind="class">Rapicorn::WidgetImpl</class>
    <class kind="struct">Rapicorn::WidgetIfaceVector</class>
    <class kind="class">Rapicorn::WindowImpl</class>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16d6f020959fce8f26846704ebc1202f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08c53dfdeea218dc880288740a6628ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae0f57cae2524e94411aa67d5296f06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4cd21db9a6b3e2fac590ad05f34b8da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>int8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a34a2d08cdd3d8d2674be16cec3212eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa64695863923d53a505cf781a783785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84936f297319d5502963a9df1ccf6006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a62578e481b74c480f0224ff138c8cc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e07f478607e6ab6d8bcb2c95ab91be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82eae5a113474d2f8400917889bbef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; String &gt;</type>
      <name>StringVector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab17672389c3d548faea6426546704d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MarkupParser::Error</type>
      <name>MarkupError</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4150f2194b3d4f7c31bb8ed1bc6f1393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MarkupParser::ErrorType</type>
      <name>MarkupErrorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7999086a24d905162bccba71e8c1e8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MarkupParser::Context</type>
      <name>MarkupParserContext</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0cc6a99a490502c19e18fa5294c99f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Deletable *, DeletableAuxData &gt;::iterator</type>
      <name>DMapIterator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac3d39ed52e7905909c87a4c067cb3170</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Aida::PropertyList</type>
      <name>PropertyList</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab383dc90d5cd9dc3865ad2d03e293339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Aida::Property</type>
      <name>Property</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac698bb19b3c36fe0bf6f77f05c4a3862</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelHandle</type>
      <name>ListModelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a55e28f9bcee38f22184865d1368e111a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelRelayHandle</type>
      <name>ListModelRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec24986b760009950390f9b97d91715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetHandle</type>
      <name>WidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06fccaa7d6ebf06b4a39abd8e2d1b339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ContainerHandle</type>
      <name>ContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a287dd4b731f6d3aa271e1970f69b34a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ButtonAreaHandle</type>
      <name>ButtonAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f7da593dcca3fab645f020842e66807</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableHandle</type>
      <name>DrawableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a30c01e1c22bc5896307e0e32a4e33dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListHandle</type>
      <name>WidgetListH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae74a432b5ddb0fda0774bc5c4b521998</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowHandle</type>
      <name>WindowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab63697b1c07367fa51d014d60ef04f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ApplicationHandle</type>
      <name>ApplicationH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4dd2568fd18e4faf62cf93611507b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IdlTestWidgetHandle</type>
      <name>IdlTestWidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2dbfae52135a8b319ecdaca5520bda54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Evaluator::VariableMapList</type>
      <name>VariableMapList</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7b94e4b5175fbea6b267eb07e4c8a60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventMouse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a19b67ee0df6fae1a76cb5cc7c8d5eee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventScroll</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a33c606494e40b638369b4356528b68aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventFocus</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e127e4aed52a6ca498a22a292613247</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventWinDelete</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21dda4a0b748dd14a6fd2ae9e4ec7b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Event</type>
      <name>EventWinDestroy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6e66a26a4bb80ac3e59fba5994253548</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Color(*</type>
      <name>ColorFunc</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a141f4b89c2932705d92795e70c57c1f3</anchor>
      <arglist>)(StateType, ColorType)</arglist>
    </member>
    <member kind="typedef">
      <type>PixmapT&lt; Pixbuf &gt;</type>
      <name>Pixmap</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a7199c4794a9f5eaeade56d2868e3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ScreenWindow &gt;</type>
      <name>ScreenWindowP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad49b5157fd0ee9ed73d6716437dfdb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rect</type>
      <name>Allocation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05bfbf22505a1cb864fe0b7fac444620</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long signed int</type>
      <name>LongIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aba77ddbfe3450e4e917ce69ae1752c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long unsigned int</type>
      <name>ULongIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2cfe2f2457ff0d63e77b7a222cfabde3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>CastIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2cfea938cae87c445fd1fea97542ece2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>UCastIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61d0c13056c7cd780cede3db840635d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AdjustmentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad727c4f727d48a6046d74879d6c8317f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AlignType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a01cb38d55e327d3de4fc9c1c87c93d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AnchorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3380d4b28813af812be0fad677ad144f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ClickType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c9119421605845db84cd3e0aadd613a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ColorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21d6ae4fc230404f3321a704f4c8bd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ColorSchemeType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_INHERIT</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0ab306dc84dd28d8e5dd227047b9d1aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a56efebe0abbfa3acd603d41f097d5e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SELECTED</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a6ade49e7d85c7a38875a0dbd2f35b957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BASE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a39d3045eb3e9cc6651035ba57ebfdd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a24338f17abbf59dd63ff951c63528565</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a71e11f0369e06caaed8eaf7443a074d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a05c1d3a1236815eeca81178b4a7c278c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2acdae37ef75521fa3164283ba9f8cbc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WindowType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313aae1cdf512674ac850acd01716f527c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DESKTOP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ab85a4ac2e6867b3973ce5748e41083ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a160f71ec57382f49889f4106323b4543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_TOOLBAR</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac715e8144f08a022603fa0d16d53d503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a98040ffd508e641a4cd2c73caf4b11b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_UTILITY</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a132fc98733fd067d1800d82a7ed17468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_SPLASH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a2ef3915a453aa058fa09ce57102d94aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DIALOG</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a37e3f2e40751f040b740853c588e6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DROPDOWN_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a3ff88a2ec6aacbb04f070fd7d2be24e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_POPUP_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac876877e1c727de6af4a8fa27c4d5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_TOOLTIP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ad43b309a4e802a5a51a6763870476c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_NOTIFICATION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a129181f417bc812e68d1ec9fdb5d28be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_COMBO</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a534e02e7d3158ffb46c6a8f2bf6d5e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_DND</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a41eb840a06ca1fb3bf6a04b79b8e00e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>UpdateKind</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_READ</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba762d8bd681cc31a667ea7112371e90e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_CHANGE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba8ad4ba23954e96f0ae67e7ac10cca0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_INSERTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba409fccbf750c75a26f320b28a1e47305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_DELETION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba04e84ed6100e8ef1b10d53463275606f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd3e53c92de36a2305c534555e5f7e2c</anchor>
      <arglist>(uint8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aced0aa59d5d5cc1ab119f66daaa7cf1e</anchor>
      <arglist>(int8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f12eefe4dfc3a391f45d8fa9798eb56</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printout_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adbf10f8bc99fb18e6b60abc95c763524</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printerr_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a72c6149a3f9f12c3bf4d47437ef128ca</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_notice_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1b5894c3f3275440ebdd3aabf714c191</anchor>
      <arglist>(const UserSource &amp;source, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_warning_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a633e6c7cd5239749d2f3506e362285e0</anchor>
      <arglist>(const UserSource &amp;source, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_flipper_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa86dd177a188551ebe65d00b90ccdb86</anchor>
      <arglist>(const char *env_var, const char *key, bool with_all_toggle, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2e9c872f514527edf522224befd6df6d</anchor>
      <arglist>(const char *env_var, const char *key, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>envkey_debug_message</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a016e50bfd4b06198208803a3218713b4</anchor>
      <arglist>(const char *env_var, const char *key, const char *file, const int line, const String &amp;message, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_message</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad93d1c2cb6144abba72890a9b2916ce2</anchor>
      <arglist>(char kind, const char *file, int line, const String &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_fmessage</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5af32907a37e213f340b7e8f583342c7</anchor>
      <arglist>(const char *file, int line, const String &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_assert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adddd15edb3cdfdedf731655747cf54f7</anchor>
      <arglist>(const char *file, const int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_fassert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6d1c05c42f30ae0bc1f5446c880fa847</anchor>
      <arglist>(const char *file, const int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_envvar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b2601d10a4a9109d6c907e60df0d69</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af17f742e6889a962d6c20b16841e4d31</anchor>
      <arglist>(const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_del</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec22b35108beef1271a9829c8609b294</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_config_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab9a21d4e8e101c9b41f0db315fdca5ce</anchor>
      <arglist>(const String &amp;key, const String &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_config_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a489b730cdfa517e8c2ceff633750220d</anchor>
      <arglist>(const String &amp;key, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_devel_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ada7681a12663d8950ea33cf29d82d57a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rapicorn_debug</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3de5099dad51e0483ca98cf8e22098</anchor>
      <arglist>(const char *key, const char *file, const int line, const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rapicorn_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16860f3bfe3924c44d8d6768b966a1e5</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printout</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab36936872d41aba9c3bec612eb2dbe9f</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printerr</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a96e94edd3515f60a397c3709640afff9</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_notice</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a490c936bd3936e5423bf3968b280f812</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_warning</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3a176807433f32344b1c29e0a9adf4</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8040cd84db7bff24d10a18adf2c3e551</anchor>
      <arglist>(PollFD)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>offsetof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4c741e06695601e5efe86171769cd71</anchor>
      <arglist>(PollFD, fd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7930264a7d3195ee1ed805eec034304f</anchor>
      <arglist>(((PollFD *) 0)-&gt;fd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>offsetof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa92a5f6d91864cec7990ef764b60b1b9</anchor>
      <arglist>(PollFD, events)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>offsetof</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a612038d2276a2c2bd2a2beab1701d476</anchor>
      <arglist>(PollFD, revents)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ignore_errors_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a709711235102d76a00a4b2fbe8fac617</anchor>
      <arglist>(strchr(mode.c_str(), &apos;E&apos;)!=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ignore_hangup_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a115ea41aafb72cfc9539ac520c9f20fe</anchor>
      <arglist>(strchr(mode.c_str(), &apos;H&apos;)!=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>never_close_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c8f6d9680c0782bdfe949934dac88d9</anchor>
      <arglist>(strchr(mode.c_str(), &apos;C&apos;)!=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oneshot_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aca6cced4dc9edb25f24df71a6c30d14f</anchor>
      <arglist>(false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bool_poll_slot_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9b594bf51e27f1c1b61630c75fae586f</anchor>
      <arglist>(slot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oneshot_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab7c16003c6d4ce6a25740370724b2653</anchor>
      <arglist>(true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>void_poll_slot_</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a48fddae2a6c8d1dcda54bad5932a0891</anchor>
      <arglist>(slot)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>rapicorn_version</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a39d47bc467d0d93c9222755e62fc0f07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>rapicorn_buildid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8836e8b19e344ddf3e182183d04a03d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a931b0686e62c1fc572b51318d9d76960</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_string_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4070966821dbf5bce86791b05ff7bbf0</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg, const char **strp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arg_parse_collapse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26e99a12175bb322145f72352f9cbd0d</anchor>
      <arglist>(int *argcp, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91ca854a47f5191e9f126c3c47deda47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_alias</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa1813f40e9082a47a85d2fdbed6faeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_ident</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94a8f71ecda6cfa0f9d95a816cb19571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_cwd</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77613e0faf04099fc9ce91b97669f543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_core_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9928167f88b4f9999d00197327a333a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2c7198d1bba741180fc8c1c154f4db67</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dtoi32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af9d5bf5c91221efab9ad9a6b0f421171</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>dtoi64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a702ec30b042d043c8622cf43455ce383</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>iround</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a11b32a8860265c696770ba4b267f1338</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>ifloor</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae556428267057179e1e634571047df2f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>iceil</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0eb24c8ce57d7af6c8403f7e218670d4</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dtoi32_generic</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a15ed5b471a66e2bb611485f671ef49ad</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>_dtoi64_generic</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a74bb4c32fe4f51f478bbee3d5738f1bb</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>aligned_alloc</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa3d647c99f6a41d4a49dda7d5bb06871</anchor>
      <arglist>(size_t total_size, size_t alignment, uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aligned_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c5d47aff557524b20e03c76d2923368</anchor>
      <arglist>(uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fmsb</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a238705dee2a406d99d2c1c903c09dcd0</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
    <member kind="function">
      <type>CPUInfo</type>
      <name>cpu_info</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af92b7413c99dc16f393900adb8ff8085</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cpu_info_string</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af851465f3a93e7ad8b20835a864a90ee</anchor>
      <arglist>(const CPUInfo &amp;cpu_info)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>rapicorn_gettext</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad77f658a4e9f58fbb692bd8e7364e18a</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_multiply</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a186e9ac6634c2be77152a465336f767a</anchor>
      <arglist>(const String &amp;s, uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_canonify</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a75cee7a94e49e3678b35134d00c7f898</anchor>
      <arglist>(const String &amp;string, const String &amp;valid_chars, const String &amp;substitute)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_a2z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae003b5e0377a41b24109d3fe63bf6243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_A2Z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16b08c4a178ce731abf12f4d7983661c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_ascii_alnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5ed54bc7aa14d537873ff30d7d75d2de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_tolower</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0e80960940efceef8ec52778ef72c55</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_toupper</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a86354c7902a6afbafb75597b25f84738</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_totitle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5e1578da91aca5928c8cff7ee83b873</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_cprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac6a4de498b8246503aa04452b27e6895</anchor>
      <arglist>(const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_cprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6b5710184591b0fb65967e414ddce474</anchor>
      <arglist>(const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77d1b603d207742ce001c85ec5a240a4</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cfef18e6ee55a693d7e82cb010effca</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f012815cf0a15b9ce32ce52decbc809</anchor>
      <arglist>(const String &amp;string, const String &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_join</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe062e2b14ba277feff47bd5312db242</anchor>
      <arglist>(const String &amp;junctor, const StringVector &amp;strvec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a12e852c1f51ccdef22b0d8298054881a</anchor>
      <arglist>(const String &amp;string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cstring_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a184ce3f360a16c19b05aa71f3f5b68</anchor>
      <arglist>(const char *string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac17484b7e899090db75a70c51695f33d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad85455a62ddae50689ac3605b7c9b34a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8fd8489d13343bc19a359a0ce032e624</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_has_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82e98eaff382b3afbcd9a1c1ee2b6f82</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a523fcfbe297b1084cd9d0cf0ab73a55a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a41e7a6037022e9bf9c22fca4e47fe4a5</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>posix_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61e0122a3069ba22a830af964c22b118</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>current_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26adc180c8b1288a1eea0c0bf41508a8</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a855a2730c71981afd9248073a1487f8b</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afcd374c6928481d798baaabbcb8a49dd</anchor>
      <arglist>(const char *dblstring, const char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfc6be3d5d1483475edc46f9db95b9a5</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94d94e40016953a45f241099becd2d9f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; double &gt;</type>
      <name>string_to_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4b584badecf6ad4e187b0a9ebd9a0e66</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6bc7f3471ccb82b16dd66cc2a4244552</anchor>
      <arglist>(const vector&lt; double &gt; &amp;dvec, const String &amp;delim)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_errno</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac2d70acf529c14500eddcc2f0dee655f</anchor>
      <arglist>(int errno_val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_is_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae3eef88f3144118ed8f39ffc440764b6</anchor>
      <arglist>(const String &amp;uuid_string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_cmp_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f6b25d462eaeece3ecf0dac5de08cb9</anchor>
      <arglist>(const String &amp;uuid_string1, const String &amp;uuid_string2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_startswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6f9b700c92add1fe94fff83b8cd4ae</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_endswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68fcf11adb4255e92cd5d611b5b31318</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier_tail</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09dca5a31152ae6137b9c1ba7298b196</anchor>
      <arglist>(const String &amp;ident, const String &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a98ce101af4fcf48e9e35a049589880a5</anchor>
      <arglist>(const String &amp;ident1, const String &amp;ident2)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_pretty_function_name</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfda5d69d7e8692562dfaa66c7778791</anchor>
      <arglist>(const char *gnuc_pretty_function)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cescape</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8299326b493de662098921b7a180bd17</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a795a0a454b6dde0f435fc4dcf3a7d38e</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a36a0241f3983e64505081a124e5c5cad</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a632d5948ccac14b9d4ff2e089c7d6880</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45d7d1d37bd26585b163dc50b31cc303</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6d8dde3a7e91d895fb223e9505818eff</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_substitute_char</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a458f21b1370a4f30527e7c6dfd734ce2</anchor>
      <arglist>(const String &amp;input, const char match, const char subst)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_hexdump</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab1b6b7ec8d95f0e77df0e75e89d9355d</anchor>
      <arglist>(const void *addr, size_t length, size_t initial_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memset4</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a530022bcd34f01295dabf360c750b85f</anchor>
      <arglist>(uint32 *mem, uint32 filler, uint length)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vector_find</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1ac20f4f074bd445f624dffec483b85b</anchor>
      <arglist>(const StringVector &amp;svector, const String &amp;key, const String &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>cstrings_to_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad3503997cf1fd0687031dfb891843803</anchor>
      <arglist>(const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_options_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a231c3452e3bdf5db9bb2a2afe0a4dcaa</anchor>
      <arglist>(const String &amp;option_string, vector&lt; String &gt; &amp;option_names, vector&lt; String &gt; &amp;option_values, const String &amp;empty_default)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_option_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08cbc395fb2a3bcba8fa265204090b5e</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_option_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a54b8159b50dc3f3a90ebde519b1f0712</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>text_convert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aab7ab68dd73485ab7e44f68bcb506bf8</anchor>
      <arglist>(const String &amp;to_charset, String &amp;output_string, const String &amp;from_charset, const String &amp;input_string, const String &amp;fallback_charset, const String &amp;output_mark)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>strerror</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acff50a73b33f31a8d2ad3f515720dbac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a877751570b565ebe8768df63169e5e15</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aef23cfd69b1962d42eda9838006cdd0d</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82a7acd9a74ad348f79d3d506459d3de</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1db606a57d29397e3c3b2dcbacd0c302</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>string_to_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4f11172904317c35ba4e3fd3ec3f603</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a59f63cf89417af26921259d2bae5353c</anchor>
      <arglist>(Type value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_type&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaba1a50a843a918003457078df317e5d</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4792bcc71fb880a987c8d1fcf08b556e</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>string_to_type&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a206dc77e0167886e68a611cbf835ac97</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad860af223c01d9e5fe1abdfff11ed463</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_type&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a67fadb67a7ab587fbe142c088f950615</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1dfabd72e0feab9a8934a6181dbb9fed</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>int16</type>
      <name>string_to_type&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a478346e6838b837f505f01932bb633f1</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeb136ffde25f230d916ae11a9285d61c</anchor>
      <arglist>(int16 value)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>string_to_type&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b6c5ba7c593eaa9aefc8e06611b0c04</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a4fcd34658c9a9dcbb37506b78f06a6</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_to_type&lt; int &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84f35ea0bed7a62876ea2be3a3d129fb</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6f71d0b303552e51c016608eaf3f5030</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>string_to_type&lt; uint &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa72d40c031a2ba1f05e1048c94e26d6e</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad06ffd2d1c9b40a3d71d635d19b624b7</anchor>
      <arglist>(uint value)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_type&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad0a5e86ac3ed55fbccfc954bd446ad3d</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a503db58c61b46db3e96a6d247c66b003</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_type&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94960be0c4241e32677ae05f703aa7e5</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a906244b5e7b5bf7a4894e0b904d00588</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_type&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0280ac16f2b12f6ed1f5e1a704a5667f</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_type&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f2534edee622e0c439b4ffb5e712357</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core_test</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a449637d24c531aa019bee5c206b07d77</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a482f26438773b094ad0ee4db83ebe084</anchor>
      <arglist>(NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pth_thread_id</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7658e5db2fdf09b5d08e2e7bba916d4a</anchor>
      <arglist>(pthread_self())</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>utf8_to_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acb378191b52eef855de114c7f3555330</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_from_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aafe5f6ce231406bb8dccf715af5e0566</anchor>
      <arglist>(unichar uc, char str[8])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>utf8_validate</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2b8b3b4465868a3fb9d27bc290f8d6b5</anchor>
      <arglist>(const String &amp;strng, int *bound)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b8016ef0338395d02131d0b389a8644</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0051b19617bb25e55b8ee1c2e68de567</anchor>
      <arglist>(char *c)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5f98ae90d754c37cf1a1e370f05169d4</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad079b05bd418f9333c719ac37c64ddee</anchor>
      <arglist>(char *c)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_find_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1a76aebc707c3ca4a4ed314cf323a04a</anchor>
      <arglist>(const char *c, const char *bound=NULL)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_find_next</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9ecf398b044cbb909b892af6075da154</anchor>
      <arglist>(char *current, const char *bound=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_find_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe95d2a9b2934829ff01e18c709b2963</anchor>
      <arglist>(const char *start, const char *current)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_find_prev</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a33af5fb39e8728ca6fd3dcd7a71b5ff9</anchor>
      <arglist>(const char *start, char *currrent)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>utf8_align</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06ad0783bd2386fe56d03f3ae9bb273c</anchor>
      <arglist>(const char *start, const char *current)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>utf8_align</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8be7a147b9cdd7fea2cd4ffb9075c0bc</anchor>
      <arglist>(const char *start, char *current)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>utf8_aligned</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cdf6badbedf2eba668100dfcac5114d</anchor>
      <arglist>(const char *c)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>timestamp_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a35badd327a0ea81f1178329d956a348e</anchor>
      <arglist>(uint64 stamp)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>pretty_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc0d588a0ba15bf4b486cf1e03f10838</anchor>
      <arglist>(const char *file_dir, const char *file)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>pretty_backtrace</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3052c1d4c26a6227e8c2a4792a6a3d2a</anchor>
      <arglist>(uint level, size_t *parent_addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_backtrace_snapshot</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3ad33e283b20ae36df3000e07587fe39</anchor>
      <arglist>(size_t key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_backtrace_showshot</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4e6846022d5dcfa77c17f0077164987e</anchor>
      <arglist>(size_t key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>process_handle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e35b4c257c8dd22f85e03ee799f4fa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>url_test_show</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad7a3478b43ddd27285631cdbfb6e412a</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>url_show</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe82dc239e06d97bf77dd6d7f126e5ed</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>url_test_show_with_cookie</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc7f2cd27700b7678ddf090b29ad8c1d</anchor>
      <arglist>(const char *url, const char *url_title, const char *cookie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>url_show_with_cookie</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe799f823c33d5ae558be4ab47beeaed</anchor>
      <arglist>(const char *url, const char *url_title, const char *cookie)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup_force_handlers</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7ed7231c0a66273b9414d96024270c7e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>cleanup_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5a510f219577bd922204dcb3c9fcbf4f</anchor>
      <arglist>(guint timeout_ms, GDestroyNotify handler, void *data)</arglist>
    </member>
    <member kind="function">
      <type>uint8 *</type>
      <name>zintern_decompress</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64260cc6cb05aba6be0f0953cc6ce59a</anchor>
      <arglist>(unsigned int decompressed_size, const unsigned char *cdata, unsigned int cdata_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zintern_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac02b3dcb0ce7acdb1455d5e3967b1d3e</anchor>
      <arglist>(uint8 *dc_data)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>abs</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac8935b7be4e83220c6e182c830d5167a</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clamp</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b7b47c60b92cb59e0b3932fb97329a7</anchor>
      <arglist>(const T &amp;value, const T &amp;minimum, const T &amp;maximum)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>vector_from_array</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04f376c05ae1e6dc267b05ff9effa3dc</anchor>
      <arglist>(const T(&amp;array_entries)[S])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakpoint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab311e2c8581a101f63818b430cc4b800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_startup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae8ed4bec3134b69126b686ae3ac661de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_realtime</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac500700b3a37937ab1a47e9ca54b800c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_benchmark</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8e6aefca1841bb6009772970c45fe96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_resolution</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f22e8bd6f8b84e06e57b51fcd7f8ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>cleanup_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9b89f655e13a41709abf1165f193d6df</anchor>
      <arglist>(uint timeout_ms, void(*destroy_data)(void *), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeba6c446eaed9b0363f4ef07a7735c57</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const BoolSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6e21248a426e2dc4c1e12cd52d3366cf</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, BoolSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0b5c2e6dd179ee99da3c649406d418a7</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const StringSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4d609ec1699aaa22e8e5ba9d047b2681</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, StringSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3e60365f3492ac70f85fa20f6dab4ef8</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const AnySeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e4b2f3546e1402e5d8fdf89f638c299</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, AnySeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e570d3c58658bd6f2d1bea9522adcda</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const AnySeqSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2d8b87ad86f41a0ecbf561913a4ea8f7</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, AnySeqSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaeb3a7963b76347facb7d59cc812c451</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const PixelSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaca0980104563c8472baab359102b4f8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, PixelSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5cd6fded490d96c0a1c8bd5d50e9976</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const Pixbuf &amp;rec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4ee8d110c51376d8f92c2e0983764e67</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const Pixbuf &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0250ffcaaf581ce522ce27a889f89eac</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, Pixbuf &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad6d5c648a23ea99bce9b3abfcb758782</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const UpdateSpan &amp;rec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae80cb764d9fa1e0efa2a35f3adc6cdb8</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const UpdateSpan &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9c36cdf2acb28ec6ec2e2e4e0a80f3f3</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, UpdateSpan &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a41e2d8241ebe5535cb0130fcc3fb43c4</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const UpdateRequest &amp;rec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc937d5d3fafd8797628e6d2c929e4b6</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const UpdateRequest &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68902df873c3b18f1e1c5949a543c344</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, UpdateRequest &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2aff430f8528c8745bdc38050cabac40</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ListModelHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c063e75161ca819121db22a151fdde4</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac6a3917facf413c72eecb29602661262</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ListModelRelayHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adabd2f7f396afbb5e1b8059785f4dd1c</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelRelayHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a17d0def4b74b5fd75d17da831567c062</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const Requisition &amp;rec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a00266c52d67a27b4731708a3cab5a901</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const Requisition &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a330ef7cfd0ebf308b1a69125e3db033d</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, Requisition &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a72ce79640cf8796a4d44638bb909dbfe</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const WidgetSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af4d9fc88f4b79fcd40c287758c0b775b</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, WidgetSeq &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7603ba135a131204c6446797eb8f5af</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a43d483adcf6f86dda34bb20bee1ac4b8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab788b8b670f003b391688fed4a9cd2ca</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ContainerHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3bf40fb5442fb26725f09daa94180cad</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ContainerHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa2005ac69676ac5e52af6ae25cdedc10</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ButtonAreaHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe963156dfda8026775690994eefcd05</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ButtonAreaHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a610257f80c0202036e65227ff41e6c80</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const DrawableHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a76d4fa2ac7d0b68115d22a8db4ce9a40</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, DrawableHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8658d8a815ee9f1cf348127adc95090d</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WidgetListHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21a9afa697edf2d1ab27ee3e168816e4</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetListHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a083e8a53b092e4ae427d5f72b6a7cb20</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const WindowHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1eb4d8a16820b0eb8c5ab6cb97f1b572</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WindowHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3637bd6de6471bb16c9bff05c7f43498</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;dst, const WindowList &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a20c6b0d7b335d045ab4e0b6b8ea4fad6</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;src, WindowList &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ace59f7cb2dbe83c7ccc37e6772d1aa9b</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const ApplicationHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7504c011bf5c5d383671a5a24360d2cd</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ApplicationHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2d915e28d02af11f33ef4156029a2930</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, const IdlTestWidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af8a962ba85d12e6417e931b00c8b6968</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, IdlTestWidgetHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_app_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af70355a4ca32a082340b8eba3406b2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af0825c1f4488f7728049256c2b107644</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_test_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a670ab204db4a2bde3920bf957958e806</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f7570597dcc101076b2f20a68bcc5ec</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>client_app_test_hook</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0ca65d6385f821086feb5bc75f9c057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>command_lib_exec</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abad107acfe560eca20f729828e6c1136</anchor>
      <arglist>(WidgetImpl &amp;widget, const String &amp;cmd_name, const StringSeq &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>command_scan</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a525fb4a0087a7f3daf1c40a6175a4a33</anchor>
      <arglist>(const String &amp;input, String *cmd_name, StringSeq *args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>command_string_unquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acff8e7ba832456047e8cc2242f4152d8</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>string_from_event_type</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0f7b52f0d842617662d31adfaaf41b11</anchor>
      <arglist>(EventType etype)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>create_event_transformed</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6524480e9a06f93209f2d41d3969e1f2</anchor>
      <arglist>(const Event &amp;source_event, const Affine &amp;affine)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>create_event_cancellation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a23f7580e049071d6725ad356df0269f6</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventMouse *</type>
      <name>create_event_mouse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f2bccc7a3a70ade371c6322e343b717</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventButton *</type>
      <name>create_event_button</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b37fb1c5f516c72f78707972123a0c1</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext, uint button)</arglist>
    </member>
    <member kind="function">
      <type>EventScroll *</type>
      <name>create_event_scroll</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f9b5aef9cd931c1c0148af9632b167a</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventFocus *</type>
      <name>create_event_focus</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a92ae54af624d5d88e7196ee564030cbd</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventKey *</type>
      <name>create_event_key</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab478e7fbaa4d968ea80422f82cfa07cb</anchor>
      <arglist>(EventType type, const EventContext &amp;econtext, uint32 key, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>EventWinSize *</type>
      <name>create_event_win_size</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5e297539a3ef1b1c1f5f1b85bae3fd7</anchor>
      <arglist>(const EventContext &amp;econtext, double width, double height, bool intermediate)</arglist>
    </member>
    <member kind="function">
      <type>EventWinDelete *</type>
      <name>create_event_win_delete</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a167d54fdf046eeaa94a0280ebe5bf260</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>EventWinDestroy *</type>
      <name>create_event_win_destroy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1a1229f3d6a4de24a0a9b569e6761696</anchor>
      <arglist>(const EventContext &amp;econtext)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_modifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64d984417d764489363ff626b7b579be</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_accelerator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af4928842f94c4ac485c40797c1fb4514</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>FocusDirType</type>
      <name>key_value_to_focus_dir</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a143f5f2c4cd95f862d8e5375ed1a52b0</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_focus_dir</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab040956c246794f553a400189829778c</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>ActivateKeyType</type>
      <name>key_value_to_activation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b963bd0179eed6301ca0be4a34c9b6</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_value_is_cancellation</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a946a876202457338eb61a8b10a52ead2</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>key_value_to_unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad1afb3c8cc0ff4438b45be6ff192c714</anchor>
      <arglist>(uint32 keysym)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationH</type>
      <name>uithread_bootup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd8da6bf2f0a3c1efc1d32df713c1ae9</anchor>
      <arglist>(int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uithread_shutdown</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6264cf93a2a3f67759fae4803be5d52a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>server_app_test_hook</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a845c0f182340fabbfd85473ef4a300b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>degree</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab738c246055ce44f7f9c47326e1a2340</anchor>
      <arglist>(double radians)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>radians</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aeb7a27cf5db3c7627db93269eead1416</anchor>
      <arglist>(double degree)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a76d629517eb133af40b3ba648f711c92</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af5f16953f070b664b79b8354496a00cd</anchor>
      <arglist>(const Point &amp;p1, const Point &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>floor</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a289b10a015b57426d48bbc6c02e3ccb2</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ceil</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9bc6f5c921b3f63a9091b8e3b8130c27</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>round</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac1f4e60b4de9ce5eef1b785085abe927</anchor>
      <arglist>(const Point &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9623d12dc75e47ac345af79e3f972b57</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7ae41884314a0c90c23f030c6003d5a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aad051ec6d380e65237d2944a4f47032a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4ca27bafd5486786a06c5e81beb81a61</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ListModelIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5b985433b2b3b988c61fb56143fc7bef</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ListModelIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a596b2613f10974d542fc4d26dc21ceac</anchor>
      <arglist>(ListModelHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ListModelHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad283cb90a27da0c3a85724dcbce92a8b</anchor>
      <arglist>(ListModelIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f8cdd4e00efe17b13afb9988c941992</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ListModelRelayIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a824c11de7e5ece7e67caf0eab3b6fd6c</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ListModelRelayIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a686095bc6024d4bc699ee304615a93de</anchor>
      <arglist>(ListModelRelayHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae104ed0127977be2b2b8ca5871469160</anchor>
      <arglist>(ListModelRelayIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acf1bb50277d72668672ae2f347b55633</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WidgetIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9550fcd437f95442fe870ce17a72cdf9</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WidgetIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3e5635c0cbac3a1a8bdbb59676331f8b</anchor>
      <arglist>(WidgetHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac921005c2d034ca0f5684b0ac1e6e565</anchor>
      <arglist>(WidgetIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a03f9a004c7746ea72dbd9d64d885728f</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ContainerIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b59f334b3c187ad99dcaa56f9189d8</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ContainerIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ContainerIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4bd74543558102fe10f68afd6f5b05e7</anchor>
      <arglist>(ContainerHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ContainerHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7ed99addb5b49cddc8f790bc5bfc18b2</anchor>
      <arglist>(ContainerIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae9141e64f3b3b188fee6df1458015d90</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ButtonAreaIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3891f011ecccb79d068bba655817be51</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ButtonAreaIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ButtonAreaIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa2f3af3756325886300cb8ed6d236bfe</anchor>
      <arglist>(ButtonAreaHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ButtonAreaHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a93bd856684e7521a5a0f61d4b1e3a638</anchor>
      <arglist>(ButtonAreaIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2ca386c261afd057ef912a9fd61cce0a</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, DrawableIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a56b903a475c67a10c9b84d10ff8bc584</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, DrawableIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>DrawableIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3dddb939f3d544e201714a00228439df</anchor>
      <arglist>(DrawableHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>DrawableHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4350046cefc4b4b809c90d7361e2229d</anchor>
      <arglist>(DrawableIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac6237eda1b9e4a4787df271ede139ce9</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WidgetListIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0fb60dbacf1d505b4880db961c016fed</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WidgetListIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WidgetListIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04342997c89e25a94c5e5f603389f62c</anchor>
      <arglist>(WidgetListHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WidgetListHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a329e2e3edcff87a6db92135c9175fea3</anchor>
      <arglist>(WidgetListIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac4faf3b8685d8f3a599ddf8413a2016e</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, WindowIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa691f0487d8fbe1e0784697d1535e06f</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, WindowIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>WindowIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5382ffbc9bea61e02a7a349ee7cfb144</anchor>
      <arglist>(WindowHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec994f2e0ee8df90c9fdcb83578cf255</anchor>
      <arglist>(WindowIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05867c705a75ba931026fd89cdf2f96d</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, ApplicationIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abbbd56e8df370dbbfb597be21823693d</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, ApplicationIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a262b8da953826fa30e621122d84c7551</anchor>
      <arglist>(ApplicationHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae6b9e1e841b3c97673f6e69216121db2</anchor>
      <arglist>(ApplicationIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aba8f15f0f4ee5ebfbe94eb24d8f4add5</anchor>
      <arglist>(Rapicorn::Aida::FieldBuffer &amp;fb, IdlTestWidgetIface *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad50f25730bbdd82b64a1d2cacb59b9c1</anchor>
      <arglist>(Rapicorn::Aida::FieldReader &amp;fbr, IdlTestWidgetIface *&amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetIface *</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a14035f307f106389a0aeb9894c67b11c</anchor>
      <arglist>(IdlTestWidgetHandle &amp;sh, Rapicorn::Aida::_ServantType)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetHandle</type>
      <name>operator-&gt;*</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa84dfb7f2ad52939fe4eaf183caf331c</anchor>
      <arglist>(IdlTestWidgetIface *obj, Rapicorn::Aida::_HandleType)</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>uithread_main_loop</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9fa1b7c5393614ed9e220f120789e6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uithread_is_current</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae96268ed61a2aeac3259f6122438136f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uithread_test_trigger</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1c9904b764f50dde1e1a6c15d735d4f3</anchor>
      <arglist>(void(*test_func)())</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acb001d020ee4e66e284a40bc8b4f1a2e</anchor>
      <arglist>(double a, int64 b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1fc5ea7db50b60876564603db1c47e66</anchor>
      <arglist>(int64 a, double b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6619304834d4095d003752f3270eef56</anchor>
      <arglist>(double a, int64 b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af43b1c56d7efd642a1b3e792300a7237</anchor>
      <arglist>(int64 a, double b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_derived_from</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a20ae745c1c6c4d7e27c20a0c7584fea7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_derived</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45cdf08ffec0f7c35459a7e5e8f202e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;</type>
      <name>pointer_iterator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a397eeefdf882773ff6ae4e4fdc16a381</anchor>
      <arglist>(Value *const val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9dce8a537dc7da88529f9c850494390d</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a35a45dd611a909b82c1858fb06d6aafc</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3b3a37477f20476f46a4e31389247fd2</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a83637bb8d9315763bda4fa0fbb11d2a9</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>adf5dd5e1f9180532f0270d15654104d2</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a93d361a8210b7f8202abbb08477210b7</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;::difference_type</type>
      <name>operator-</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a218c4694706324a9633ec42cfedaed76</anchor>
      <arglist>(const PointerIterator&lt; Value &gt; &amp;x, const PointerIterator&lt; Value &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator&lt; Value &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab21ec17bdadfe1496a5aa6602475a314</anchor>
      <arglist>(typename PointerIterator&lt; Value &gt;::difference_type n, const PointerIterator&lt; Value &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;</type>
      <name>value_iterator</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4fa11b6b7ffc26f29bf8e931b77344c4</anchor>
      <arglist>(const Iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae05511eb2403b624cd8abd09ac5fb247</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa08e41b39399d7b507944ae2adb81f2e</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afc4c6365c7d1007641d05de808dfba90</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3744d67a99cefd9b74785948baeb1132</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2912a4d3902bbfe0e8a70578a5170d2d</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2789556b9ccc91fd68b3c751796f8a95</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;::difference_type</type>
      <name>operator-</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05b72083a12780365bb090ef85bbe641</anchor>
      <arglist>(const ValueIterator&lt; Iterator &gt; &amp;x, const ValueIterator&lt; Iterator &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator&lt; Iterator &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a420ccb25ff6f6a05039193eb47d857a2</anchor>
      <arglist>(typename ValueIterator&lt; Iterator &gt;::difference_type n, const ValueIterator&lt; Iterator &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange&lt; Iterator &gt;</type>
      <name>iterator_range</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a629ee830d293efcd55f23cb43620e99f</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>ValueIteratorRange&lt; Iterator &gt;</type>
      <name>value_iterator_range</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab5ccb9ceaaad9da9bc5de670e07aee3b</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; const typename Container::const_iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a11d3d98f0c96d0d4d9bd7612a51dd905</anchor>
      <arglist>(const Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Container::iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a52f4c32777f9e05b382d79af8c3840d6</anchor>
      <arglist>(Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; const typename Container::const_iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d79d074ed3282f449a40402584b5027</anchor>
      <arglist>(const Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; typename Container::iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6c07ea01e799ac89589eff80cd66c543</anchor>
      <arglist>(Container &amp;container)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Iterator::value_type &gt;</type>
      <name>walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab8335c2dadf81f630eddf636279b0f15</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Walker&lt; typename Dereference&lt; typename Iterator::value_type &gt;::Value &gt;</type>
      <name>value_walker</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7da51d65bdf3f5aa10e9e5c4e576dc78</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af176ccea138e2c2aa92403a0e971e907</anchor>
      <arglist>(const WidgetImpl &amp;widget1, const WidgetImpl &amp;widget2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a906e8e38060384abb8679a1459079c3d</anchor>
      <arglist>(const WidgetImpl &amp;widget1, const WidgetImpl &amp;widget2)</arglist>
    </member>
    <member kind="variable">
      <type>bool volatile</type>
      <name>_rapicorn_debug_check_cache</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad53c4f2b666b8d8bf956b241969e5be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::RECURSIVE_LOCK</type>
      <name>RECURSIVE_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61669cb28487b4c08cb2ce043edd6ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::AUTOMATIC_LOCK</type>
      <name>AUTOMATIC_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a22171f89df45aef5fd1c7fac16e7e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::BALANCED_LOCK</type>
      <name>BALANCED_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a975d39087ad1d063261fb5a9a2e91ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8</type>
      <name>utf8_skip_table</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9cf1595b0532357d5c847230029f1dd0</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CHAR_BIT</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a57db5f36538093a5b6228f99a08f77f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCHAR_MIN</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8520e12a1eadff5b9f71662307e9cdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCHAR_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0bd916611baf8722339ca99a7ff87987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UCHAR_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad25546ed51db49ae9359fd2fd5bbd23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SHRT_MIN</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afaedb5756e390914b412e10cf5825bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SHRT_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3f85590578fdbc917e18f0ba560dd6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USHRT_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1741df4987d5ea08e004f8b6ae623a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT_MIN</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aca62276d36edcc88ce78ef005b7bb0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac2f1304fbf2b4d914fad506171e5f7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UINT_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4cee89e9c0d6e82bb7c9e5ab76fce4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT64_MIN</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5910da942422ffbe4a34d3f9b0804ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT64_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7fec934dcc31399bc289f7a9a00196f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UINT64_MAX</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4b8a77354321cbdb3610ae2a39189343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LDBL_MIN&lt;=1E-37);1(LDBL_MAX &gt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a258d0a13efeabaa8659a41be1eb08204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MAXINT32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f195e25e0a6426a8424ae621a477a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MAXINT31</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6569884398cb91297164c7eb943c99fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Const</type>
      <name>MININT31</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06396f7b82e56e9695ba8b9dfe4efe4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::nothrow_t</type>
      <name>dothrow</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abd1e12eb3f6d4677072016f93d2d4fc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Blob</name>
    <filename>classRapicorn_1_1Blob.html</filename>
    <member kind="function">
      <type></type>
      <name>Blob</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>ae9b92558c0e13e4d0992c4fac47358dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>ad2a7816e649c41a13a705446f6b7fec4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a4c2b29be6b845ef9da2cc0d03aaa37b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a803562609b7c55b37933032183538add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8 *</type>
      <name>bytes</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a9136d6ebfaaea698764149836992d79e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a9efd0315f4b96cf38d6942de9257bfff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator _UBool</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a56c2077abfdcaadfdd4f9a9cc3e1ac26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>load</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>af0813cff60fa7d001075e3512f0238cc</anchor>
      <arglist>(const String &amp;res_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>from</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a529643da6fed5c167ac045a502620b56</anchor>
      <arglist>(const String &amp;blob_string)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Init</name>
    <filename>structRapicorn_1_1Init.html</filename>
    <member kind="function">
      <type></type>
      <name>Init</name>
      <anchorfile>structRapicorn_1_1Init.html</anchorfile>
      <anchor>a6bf73926694a12e8bb4131cdbe627fc7</anchor>
      <arglist>(void(*f)())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestStream</name>
    <filename>classRapicorn_1_1TestStream.html</filename>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>ae89700e0d0d1604cb8d46e4099cfc54a</anchor>
      <arglist>(const String &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>a2a6ca76fd3f6c1bf0a46a4c932a966e9</anchor>
      <arglist>(const String &amp;name, Value v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_intern</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>ae7680730b0a8c9952a1682729b786eb3</anchor>
      <arglist>(const String &amp;name, Value v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_node</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>aa38e5683056c39f7f18a49f3ae4ee92a</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_node</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>a1937276e0b5037113e9ed76c756daca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_indent</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>acf1aa3af26dc94239ba21a97941c239c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_indent</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>ae70f7efa1ef1481f4283ab0da11af790</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>filter_matched_nodes</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>a8597df3f25e09e9f75af0484ecac5a04</anchor>
      <arglist>(const String &amp;matchpattern)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>filter_unmatched_nodes</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>ac3b9d5226da4cb038b3676cd1c6b830b</anchor>
      <arglist>(const String &amp;matchpattern)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>adffc5eedc4e5c699a8fcce4099089279</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestStream *</type>
      <name>create_test_stream</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>abe517f9060255429cd1951ce4b9f1255</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ddump</name>
      <anchorfile>classRapicorn_1_1TestStream.html</anchorfile>
      <anchor>a8de3dcd88a9b6621e614a5c32d3aa007</anchor>
      <arglist>(Kind kind, const String &amp;name, const String &amp;val)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IniFile</name>
    <filename>classRapicorn_1_1IniFile.html</filename>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ac8eaa094ed89189aede5d28839e336cf</anchor>
      <arglist>(const String &amp;res_ini)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad790150015291321a1a039b50409243c</anchor>
      <arglist>(Blob blob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>afcf4527aafa0a28c453f71f3fb701030</anchor>
      <arglist>(const IniFile &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>IniFile &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad105f3fc00e59565af128b30f6e5cd9c</anchor>
      <arglist>(const IniFile &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_sections</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a7ee1e53b15c0100570970b137c6406f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>sections</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>aa1341a3ec637ee5aebec14ee50b1cc60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_section</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad9bed565e83cc78477df244d5067b065</anchor>
      <arglist>(const String &amp;section) const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>attributes</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a69dd1cfca3154b3cf8d220f0b3d2f582</anchor>
      <arglist>(const String &amp;section) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_attribute</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ab30a4f9abb9a9ff3f757cf4a0c043699</anchor>
      <arglist>(const String &amp;section, const String &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>raw_value</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a878aae42e3b8bbad00870b755afd6812</anchor>
      <arglist>(const String &amp;dotpath) const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>raw_values</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a0ce6cba0325dbd43e3770d39451a9f35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>value_as_string</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a1b7b07e10c502ea5a6e3337c656c2b48</anchor>
      <arglist>(const String &amp;dotpath) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>cook_string</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>af3e24d98e2b6c4056f4a696ac87b3e16</anchor>
      <arglist>(const String &amp;input_string)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UserSource</name>
    <filename>structRapicorn_1_1UserSource.html</filename>
    <member kind="function">
      <type></type>
      <name>UserSource</name>
      <anchorfile>structRapicorn_1_1UserSource.html</anchorfile>
      <anchor>a3b38a155904571aa93f355356b20dbe7</anchor>
      <arglist>(const String &amp;module, const String &amp;filename=&quot;&quot;, int line=0)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>module</name>
      <anchorfile>structRapicorn_1_1UserSource.html</anchorfile>
      <anchor>a30679a8693bec9c9b04f1acd5256a2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>filename</name>
      <anchorfile>structRapicorn_1_1UserSource.html</anchorfile>
      <anchor>acb3d947960e6bb4858d8bb659783b0d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>structRapicorn_1_1UserSource.html</anchorfile>
      <anchor>a2db7c16430e354242e02cdb1e9cfe1fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::PollFD</name>
    <filename>structRapicorn_1_1PollFD.html</filename>
    <member kind="enumvalue">
      <name>IN</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a1318477f58f61bbe2e867590c8993bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRI</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7adf8ef60f85c2c893a04c6201cfb1051e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OUT</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a6dcc498d67b390cb435fa29d78b5bdd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RDNORM</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7ab06df20061f93d2c4b2276011d1d22b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RDBAND</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a30ff5c210b65313adc473367ed42968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRNORM</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7ad7ad846c1ff4a2497153c97eb505d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRBAND</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a3d737d6ef866e02209c1bc6193bf6c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERR</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a1f0ade8e00e52e3382a3756c3c5df6b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HUP</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7a0761cb574302506046375fa3a4eb0b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NVAL</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a48e3395ab31c75215300653eb7debed7af16e08af4fac48d5c0fb5d404fef3431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fd</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae78b4e994cf24e367b27de74a7a0efdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>events</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>aba01916641aeae62d785f1cf14010c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>revents</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>a41b3bfb21666781bb60fa2bb998429db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop</name>
    <filename>classRapicorn_1_1EventLoop.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <class kind="class">Rapicorn::EventLoop::DispatcherSource</class>
    <class kind="class">Rapicorn::EventLoop::PollFDSource</class>
    <class kind="class">Rapicorn::EventLoop::Source</class>
    <class kind="struct">Rapicorn::EventLoop::State</class>
    <class kind="class">Rapicorn::EventLoop::TimedSource</class>
    <member kind="typedef">
      <type>std::function&lt; void(void)&gt;</type>
      <name>VoidSlot</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a1a5333565e0c510e5cfbc1f1a690f3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(void)&gt;</type>
      <name>BoolSlot</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ad266eb6a45f86f4ed2915e2f5013d7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(PollFD &amp;)&gt;</type>
      <name>VPfdSlot</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a9885796b8f4f6278b4a3fd7361a8b133</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(PollFD &amp;)&gt;</type>
      <name>BPfdSlot</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>af71e7b723afcac76b0144c2a2f5ef7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const State &amp;)&gt;</type>
      <name>DispatcherSlot</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aaf0659f6b9385f06907662ccb72aac6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeup</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa36d5afeb60fec404de6279b0cd1875f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac19d1b2741611098523255699dfb25bd</anchor>
      <arglist>(Source *loop_source, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a090b5b6383fe686a08cb5f9f37620f03</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_remove</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>abefef779e1fce3b6276a902009fe8b80</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>kill_sources</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a17d091ebadc6c640a82caa8123a0737e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_primary</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a846b4a1d051482627333c2789a82b42c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>flag_primary</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a0b9f9dfc21ebed3c5352ceb9fc2c86f4</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_now</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a5544bf6762e118b4e2a276966c14addd</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_next</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa34718a26237fe905dfb7ac520f1c91e</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_notify</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a9ffe9146569fa066d1ff78e28d4ce37f</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_normal</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a159d0e9540731e116a7ea36290be36d7</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_update</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a615166e9c25b6916841b75ef3a4cca97</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_background</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a670f0d43d4bf11503f8fad44fea5542e</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>main_loop</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a3853f8ecc99e39e1c4a0fc2077984a6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_dispatcher</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a4b91f23226599e222efe4cdfe1a648f6</anchor>
      <arglist>(const DispatcherSlot &amp;sl, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_timer</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a28e2392b1aa5329c9a1c1898a669eb96</anchor>
      <arglist>(uint timeout_ms, BoolVoidFunctor &amp;&amp;bvf, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_timer</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a2786a218a2d7d470698ac09e582ccaf8</anchor>
      <arglist>(uint initial_timeout_ms, uint repeat_timeout_ms, BoolVoidFunctor &amp;&amp;bvf, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_io_handler</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a61bd2a5723aced226c81e25dfa42b8ff</anchor>
      <arglist>(BoolVoidPollFunctor &amp;&amp;bvf, int fd, const String &amp;mode, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NOW</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac31f361be5f3b5f6c01b633723910646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_HIGH</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ab31f19cd0d658a367f4e879a33e2adaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NEXT</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a37b784d17f6b2f3170df54dac72f7b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NOTIFY</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac3b8a999e7c4efd72885e6873d039714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NORMAL</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a42a4a78bc43b832dbff30b7a1b86586d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_UPDATE</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a04142723cc0914aaa66e978ec4fbdc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_IDLE</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a1f9e0f846335faf48d9bf2d19c616ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_BACKGROUND</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a1a043f7ab9b4d184040c355ef430fdc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; Source * &gt;</type>
      <name>SourceList</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a13c77266c8958af998afefe8922de9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventLoop</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a63879b6fa5c0172980119cec74bc91b5</anchor>
      <arglist>(MainLoop &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Source *</type>
      <name>find_first_L</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a11d5ecce791e0ebf3074f3ee82d329d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Source *</type>
      <name>find_source_L</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ae98d1aee0df06ff362b9b5b423e8ff16</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>has_primary_L</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa35c1bda5e6741101d812e488d6c96fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_source_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a19738fcb21c90c2415cdfa814a07adf3</anchor>
      <arglist>(Source *source)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>kill_sources_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>af884bf14bfdb40594ab7d135a54e9c76</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unpoll_sources_U</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a9bdd1f3f81743daa11cec55dad6b613b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>collect_sources_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a0d4bddb22c75963db233e3c00aa62bd5</anchor>
      <arglist>(State &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>prepare_sources_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a098ec7f354830d65664330dfac606444</anchor>
      <arglist>(State &amp;, int64 *, QuickPfdArray &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check_sources_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aba18133f68c5f07692e09159c7f0eb9d</anchor>
      <arglist>(State &amp;, const QuickPfdArray &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Source *</type>
      <name>dispatch_source_Lm</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>abea590b6c5f367d174fbba915dcb3729</anchor>
      <arglist>(State &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MainLoop &amp;</type>
      <name>main_loop_</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa57bdea4d63f5c52c8061180392260bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SourceList</type>
      <name>sources_</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a39c3ae991dcea0967bc4e7ca893a942f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64</type>
      <name>dispatch_priority_</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a46d1c41fa02acdf0c434e82259b98a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QuickSourceArray &amp;</type>
      <name>poll_sources_</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>afb153b0bb62129a6d2207b7b81a20faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>pollmem1</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a2be32b171b4fe751347948683d93114b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Source *</type>
      <name>pollmem2</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ad3678d8164a9df99b23d515415cb1c29</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>primary_</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aca28c9114732f70d29daebfe970a9ffc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::DispatcherSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function">
      <type></type>
      <name>DispatcherSource</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>ab26d9f99a6de05a08fa3760a3530f418</anchor>
      <arglist>(const DispatcherSlot &amp;slot)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a0c207bf450e05eea3141cb5ce5ef8c54</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a50164f9167663f092760875ff5e510dd</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a3d5e8c80d88110974648264bf2f4950f</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a0cec075aa20d3bdefe4c8b71f9ffd63f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::PollFDSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1PollFDSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function">
      <type></type>
      <name>PollFDSource</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a91462497065bcebfd9909f7ec507430a</anchor>
      <arglist>(const BPfdSlot &amp;slot, int fd, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PollFDSource</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a9809ac9e386fbb787db5601da6d29209</anchor>
      <arglist>(const VPfdSlot &amp;slot, int fd, const String &amp;mode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>ada6c07d56882e42ec7f11291b1943403</anchor>
      <arglist>(const String &amp;mode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a2025f7da2a65289e0d947feb5be95c7b</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a2951662ea849924d163512dc2cb47f58</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a1990bad59052e73997156d6312b5a79d</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a6b0cb1223add4cac492f901062818082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PollFD</type>
      <name>pfd_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a0d86a8b27f85fcb06c6f9fcb11fc16cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>ignore_errors_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a87fdd7b2bc06663ff6367c1ccc42ccbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>ignore_hangup_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a4ff63f5d353de401707fae585798fa0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>never_close_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>afe9d328db648d4e6f4c9013e326d377e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::Source</name>
    <filename>classRapicorn_1_1EventLoop_1_1Source.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a58c3c97aabf325330b0f6904b67ed28e</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a0aad63c8fb82d7a7ca5026ea05481ec8</anchor>
      <arglist>(const State &amp;state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a59cdecd0c185bb65358f56c0bec32119</anchor>
      <arglist>(const State &amp;state)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a8ec86debeb42635e4e26f1a1c056fa13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recursion</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>abf9caa6d6f96e8b1946049913bb59f6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>may_recurse</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae25a8928728145757eb56f97efde900a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>may_recurse</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>abe885a23833f14b4951c67f81c2416ae</anchor>
      <arglist>(bool may_recurse)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>primary</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>aeb90e5f51ec7c492286c612b2e8ff211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>primary</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ac733f968213c716cc1d621c6457f3a38</anchor>
      <arglist>(bool is_primary)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_poll</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae21550c6b2bde1a03fd6645c3e404a00</anchor>
      <arglist>(PollFD *const pfd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_poll</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ac1f258a592213a10e20b380914f43369</anchor>
      <arglist>(PollFD *const pfd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loop_remove</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a0bc9b67e2c5f1a092db5f903788e3891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>main_loop</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae37be988186836220bcb1d348895f4ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>n_pfds</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>af4e1c9fa4f13f3e8dc61cbe8b7f20c64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>source_id</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a68e88cc3f6a9602792e1805b6c809f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventLoop *</type>
      <name>loop_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>aea326426551e2aca6a59d7dc70cacff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>struct Rapicorn::EventLoop::Source::@11 *</type>
      <name>pfds_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a25b18f3b58c00389a3a312675f71cb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PollFD *</type>
      <name>pfd</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1Source_1_1@11.html</anchorfile>
      <anchor>a7d092f1beda15aa14db9e494c4ecbd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>idx</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1Source_1_1@11.html</anchorfile>
      <anchor>a6123a378ab35a370824a124c5e1ff13b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>id_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a75ca439081a802b812fcea6d0941e685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>priority_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a50d063ea4df2e648d62224642c932aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16</type>
      <name>loop_state_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a3a4fd11eb8891bdaa4b187994a7272f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>may_recurse_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>aa9aed41046784b2b9a51ecde24f93eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>dispatching_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a9d1870cef5ed7a92b540390e20a0a53d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>was_dispatching_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a75734e3b9e73494ce3406bf802b3f705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint</type>
      <name>primary_</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ab27223c7bc4b6c779aa7e14291532a83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventLoop::State</name>
    <filename>structRapicorn_1_1EventLoop_1_1State.html</filename>
    <member kind="variable">
      <type>uint64</type>
      <name>current_time_usecs</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1State.html</anchorfile>
      <anchor>ad88ed63dad84b387d95fe9e36c9fedbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Phase</type>
      <name>phase</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1State.html</anchorfile>
      <anchor>a33a2dd6fba907146ac7afc967b313bc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>seen_primary</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1State.html</anchorfile>
      <anchor>aed8b70d4361f1ee037e2f7264556f27f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::TimedSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1TimedSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function">
      <type></type>
      <name>TimedSource</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>ab927ac778f2771e3e896fbe601f54db0</anchor>
      <arglist>(const BoolSlot &amp;slot, uint initial_interval_msecs=0, uint repeat_interval_msecs=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimedSource</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>a01344165ebd8c3afc913926da3c02550</anchor>
      <arglist>(const VoidSlot &amp;slot, uint initial_interval_msecs=0, uint repeat_interval_msecs=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>acc1561ad84e38980df797a574073c012</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>a9a2ef0d7f9bc2b4712b4d8115b655a78</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>ae58c4c8a05e978c1071fa60beda3db47</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MainLoop</name>
    <filename>classRapicorn_1_1MainLoop.html</filename>
    <base>Rapicorn::EventLoop</base>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>adcffd14422fd062c194c02dcffa01ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>running</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a9506d6c957f0c0db6971313c6579ce91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a6895802ca9fa926fcef4e9a9131125d4</anchor>
      <arglist>(int quit_code=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a0365a01d7a74b0e601d046b72970b24a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iterate</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>afdf7308e02928344c873d01cdc5041ac</anchor>
      <arglist>(bool block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iterate_pending</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a2120a9b245808c7fe61b10d09e9d5bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>kill_loops</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a683f44e3e2b116db5890f469f3f5a521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventLoop *</type>
      <name>new_slave</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a81bb78f90008876962b2bba3d3e94c35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>mutex</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a6c8fa4c9d3c767a3846ca56c1d9b370e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MainLoop *</type>
      <name>_new</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>ab4752a1afe748cefdc65e347312777ce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::InitSettings</name>
    <filename>classRapicorn_1_1InitSettings.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>autonomous</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>ae2d05690d3dec850426dc7b19e4149c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>test_codes</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>a289fd15415b2e326209d050e75d33cfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>test_codes_</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>ab3b2d47285836a7f7763a951b00b8a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>autonomous_</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>ae610945e1fa03c184063d631f0f835d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedLocale</name>
    <filename>classRapicorn_1_1ScopedLocale.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>ScopedLocale</name>
      <anchorfile>classRapicorn_1_1ScopedLocale.html</anchorfile>
      <anchor>a30aa90995fef00a3830e02a3190518dc</anchor>
      <arglist>(locale_t scope_locale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedPosixLocale</name>
    <filename>classRapicorn_1_1ScopedPosixLocale.html</filename>
    <base>Rapicorn::ScopedLocale</base>
    <member kind="function" static="yes">
      <type>static locale_t</type>
      <name>posix_locale</name>
      <anchorfile>classRapicorn_1_1ScopedPosixLocale.html</anchorfile>
      <anchor>a4ce96bb2e6511bd839ed2f17ed6c9968</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::InitHook</name>
    <filename>classRapicorn_1_1InitHook.html</filename>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1InitHook.html</anchorfile>
      <anchor>ab1d10fc0f768c36615fde4c67975b353</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>main_args</name>
      <anchorfile>classRapicorn_1_1InitHook.html</anchorfile>
      <anchor>a5f6854518bc621de3af864082dfd3798</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InitHook</name>
      <anchorfile>classRapicorn_1_1InitHook.html</anchorfile>
      <anchor>a6b4cf0e87af22e17972a3de2cdfc4025</anchor>
      <arglist>(const String &amp;fname, InitHookFunc func)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>invoke_hooks</name>
      <anchorfile>classRapicorn_1_1InitHook.html</anchorfile>
      <anchor>ad2a076a866eb3218bc905ede46a56f42</anchor>
      <arglist>(const String &amp;, int *, char **, const StringVector &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MarkupParser</name>
    <filename>classRapicorn_1_1MarkupParser.html</filename>
    <class kind="struct">Rapicorn::MarkupParser::Error</class>
    <member kind="typedef">
      <type>const vector&lt; String &gt;</type>
      <name>ConstStrings</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a2f1dcbce1320c6823823c4a0e45b93a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a5ac378c81ead9199823e662e433173da</anchor>
      <arglist>(const char *text, ssize_t text_len, Error *error)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>end_parse</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a09befb3239237a7ea81aa3b5bd75f7a6</anchor>
      <arglist>(Error *error)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>get_element</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a27e62b3d04fff9c478866372d361bb44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>input_name</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a30138e7afb4aec025ed3c180999b7a2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>adbeb2f2ac595bfe82f08a766fe7db62c</anchor>
      <arglist>(int *line_number, int *char_number, const char **input_name_p=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>error</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a17a2713de125a8b2948d1190fb2e5c28</anchor>
      <arglist>(const Error &amp;error)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MarkupParser *</type>
      <name>create_parser</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>acd87e5c2f2219a8c2e2c9578881b525f</anchor>
      <arglist>(const String &amp;input_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>escape_text</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a9903d99d0e61d98d4f674cb40df57788</anchor>
      <arglist>(const String &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>escape_text</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a875b1e3277ea985129f9e3432a183214</anchor>
      <arglist>(const char *text, ssize_t length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>escape_format_args</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>ae0e15f550449ab0c0101bcf1ee6e3724</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MarkupParser</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a1bcaef226e93dd343c04981c960ec2de</anchor>
      <arglist>(const String &amp;input_name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>start_element</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>affb0c6a347a7319b1c5e45fa62ca6025</anchor>
      <arglist>(const String &amp;element_name, ConstStrings &amp;attribute_names, ConstStrings &amp;attribute_values, Error &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>end_element</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>aa91f68f0216bcf28cd8b740cac184947</anchor>
      <arglist>(const String &amp;element_name, Error &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>text</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>ae8aaa9aaa8daf989565edc6661ae2a74</anchor>
      <arglist>(const String &amp;text, Error &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pass_through</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a019c5628176ef30f54faf32fab552d97</anchor>
      <arglist>(const String &amp;pass_through_text, Error &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recap_element</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a8f9ade302dcb29e80a23c03ff12051cc</anchor>
      <arglist>(const String &amp;element_name, ConstStrings &amp;attribute_names, ConstStrings &amp;attribute_values, Error &amp;error, bool include_outer=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const String &amp;</type>
      <name>recap_string</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>ad1e6824f1833f8a976f1a19def078c06</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::MarkupParser::Error</name>
    <filename>structRapicorn_1_1MarkupParser_1_1Error.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>a443067433741550c252cf4dfee58a552</anchor>
      <arglist>(ErrorType c, String msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>a41c8e5c921b7d1fd5bce63cf62507c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ErrorType</type>
      <name>code</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>a8650826b6555486e4564fb87775aac74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>message</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>a2cb60f03babd5380bf7a757854097f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>line_number</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>acba6b4ee893555fd0c6ba99b808a1577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>char_number</name>
      <anchorfile>structRapicorn_1_1MarkupParser_1_1Error.html</anchorfile>
      <anchor>ac27ac17cf4ef71a6ff85a1960a0ab1d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdAllocator</name>
    <filename>classRapicorn_1_1IdAllocator.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>alloc_id</name>
      <anchorfile>classRapicorn_1_1IdAllocator.html</anchorfile>
      <anchor>a547df5919c1038d2d9e4e6e5f9e6192b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_id</name>
      <anchorfile>classRapicorn_1_1IdAllocator.html</anchorfile>
      <anchor>aa719493efaaaf3de393f20c4c2f8553e</anchor>
      <arglist>(uint unique_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>seen_id</name>
      <anchorfile>classRapicorn_1_1IdAllocator.html</anchorfile>
      <anchor>a9c273acf7f7056d0ac2e67cd36d011fe</anchor>
      <arglist>(uint unique_id)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdAllocator *</type>
      <name>_new</name>
      <anchorfile>classRapicorn_1_1IdAllocator.html</anchorfile>
      <anchor>ad2d345bf0775b57dfd7878a5d9d7b9d2</anchor>
      <arglist>(uint startval=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AlignedArray</name>
    <filename>classRapicorn_1_1AlignedArray.html</filename>
    <templarg></templarg>
    <templarg>ALIGNMENT</templarg>
    <member kind="function">
      <type></type>
      <name>AlignedArray</name>
      <anchorfile>classRapicorn_1_1AlignedArray.html</anchorfile>
      <anchor>a98b536ca1f78870395ea657165a35ae1</anchor>
      <arglist>(const vector&lt; T &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AlignedArray</name>
      <anchorfile>classRapicorn_1_1AlignedArray.html</anchorfile>
      <anchor>af593c40e96fce718c31fb763ebc86123</anchor>
      <arglist>(size_t n_elements)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classRapicorn_1_1AlignedArray.html</anchorfile>
      <anchor>ac50c532ca63e89c91bccada974a7b4a7</anchor>
      <arglist>(size_t pos)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classRapicorn_1_1AlignedArray.html</anchorfile>
      <anchor>afff7776e5b04ee7870ba5edc2615bc71</anchor>
      <arglist>(size_t pos) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classRapicorn_1_1AlignedArray.html</anchorfile>
      <anchor>a15e2b1981b129fb6c5dfaa472f3f2357</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VirtualTypeid</name>
    <filename>classRapicorn_1_1VirtualTypeid.html</filename>
    <member kind="function">
      <type>String</type>
      <name>typeid_name</name>
      <anchorfile>classRapicorn_1_1VirtualTypeid.html</anchorfile>
      <anchor>a33c13594845053c9627cb9904debd811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>cxx_demangle</name>
      <anchorfile>classRapicorn_1_1VirtualTypeid.html</anchorfile>
      <anchor>a6d95b27fa5d7f1e1eadaed1a8ef56698</anchor>
      <arglist>(const char *mangled_identifier)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ClassDoctor</name>
    <filename>classRapicorn_1_1ClassDoctor.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>widget_set_parent</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>aa2d4baa58e5cb5ed73be60b3373e5e25</anchor>
      <arglist>(WidgetImpl &amp;widget, ContainerImpl *parent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Selector::Selob *</type>
      <name>widget_pseudo_selector</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>ac263c971543f1485d4d3f0446686a448</anchor>
      <arglist>(Selector::Selob &amp;selob, WidgetImpl &amp;widget, const String &amp;ident, const String &amp;arg, String &amp;error)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>widget_set_parent</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>aa2d4baa58e5cb5ed73be60b3373e5e25</anchor>
      <arglist>(WidgetImpl &amp;widget, ContainerImpl *parent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update_widget_heritage</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>a1702b9a308fba50591ce17646528ab52</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>widget_set_flag</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>a66d98b80b29dfd8e23fdea1db990dece</anchor>
      <arglist>(WidgetImpl &amp;widget, uint32 flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>widget_unset_flag</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>a954fd594ae33519d0e260c54336170df</anchor>
      <arglist>(WidgetImpl &amp;widget, uint32 flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_window_heritage</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>a4620f0a3432438eb786daea253a07d9e</anchor>
      <arglist>(WindowImpl &amp;window, Heritage *heritage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Heritage *</type>
      <name>window_heritage</name>
      <anchorfile>classRapicorn_1_1ClassDoctor.html</anchorfile>
      <anchor>a931d04e0dd06168458b6b623e0a42dbd</anchor>
      <arglist>(WindowImpl &amp;window, ColorSchemeType cst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Deletable</name>
    <filename>structRapicorn_1_1Deletable.html</filename>
    <base virtualness="virtual">Rapicorn::VirtualTypeid</base>
    <class kind="class">Rapicorn::Deletable::DeletionHook</class>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invoke_deletion_hooks</name>
      <anchorfile>structRapicorn_1_1Deletable.html</anchorfile>
      <anchor>a36d10e29d893e3ce12202232b433e863</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Deletable::DeletionHook</name>
    <filename>classRapicorn_1_1Deletable_1_1DeletionHook.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>deletable_add_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a6270b8e32e7cd8e4c6436689e0f7660f</anchor>
      <arglist>(void *any)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deletable_add_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a355ce94fd56a1301de81db26a61c6cf6</anchor>
      <arglist>(Deletable *deletable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deletable_remove_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a8ad278f8b0b48060ee8fc99ae4b054d4</anchor>
      <arglist>(void *any)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deletable_remove_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a68d0e8f7a38f5a922ca43db65f965e8f</anchor>
      <arglist>(Deletable *deletable)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>monitoring_deletable</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a01e68f8bd94bc73b5a6577c632c131e0</anchor>
      <arglist>(Deletable &amp;deletable)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>dismiss_deletable</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a84071a23b7add01b99bfee3f66ca9978</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataListContainer</name>
    <filename>classRapicorn_1_1DataListContainer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>a03a26a2fba9d8b1aad107dced74ec411</anchor>
      <arglist>(DataKey&lt; Type &gt; *key, Type data)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>ab114dd8578eae982774bf42541e2769d</anchor>
      <arglist>(DataKey&lt; Type &gt; *key) const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>swap_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>ac6b126d3c62a7f5bd896bb8dea9c1710</anchor>
      <arglist>(DataKey&lt; Type &gt; *key, Type data)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>swap_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>af8089489bc093dd3d2d27d121dbaa331</anchor>
      <arglist>(DataKey&lt; Type &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>a84064cad7ccf13ab56c3e4c5bd2cb4d1</anchor>
      <arglist>(DataKey&lt; Type &gt; *key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ReferenceCountable</name>
    <filename>classRapicorn_1_1ReferenceCountable.html</filename>
    <base virtualness="virtual">Rapicorn::Deletable</base>
    <member kind="function">
      <type>bool</type>
      <name>floating</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>aff6b41828efe7c32b3972e1bfb4d864c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a73ee574dfa538abb6b86f65115870644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ref_sink</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a47e048a5058afe13f200f5bbafea1ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finalizing</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a84484b568d71800e845a0011850ab1c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a42ebf04ceb8f304bc6622bd9c9a8edf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ref_diag</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a1724b72f9a36f36e778e32d57c254289</anchor>
      <arglist>(const char *msg=NULL) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountable</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>ad1035a9fd1b40aa22e79a9178764148c</anchor>
      <arglist>(uint allow_stack_magic=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Obj &amp;</type>
      <name>ref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a9422b6bd529e4d1436fb3f6d16ed4891</anchor>
      <arglist>(Obj &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Obj *</type>
      <name>ref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>afe0b3903e3bebf01b2fc8a87794531c5</anchor>
      <arglist>(Obj *obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Obj &amp;</type>
      <name>ref_sink</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>ae681259dabc340014d8508674c14785b</anchor>
      <arglist>(Obj &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Obj *</type>
      <name>ref_sink</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a104670f4a60c69c35b7c5553fdfaff17</anchor>
      <arglist>(Obj *obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a8f9e53f5a5523ff88723cc35c2d21660</anchor>
      <arglist>(Obj &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unref</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a4a9c7f3d58720beee0438a80f3263fda</anchor>
      <arglist>(Obj *obj)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_this</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a2110c00ea9bf086237bd0af99ccb550a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pre_finalize</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a7bbf1394358c82eb28061e5e1246f976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>a68a146602c80cd34a77929ef2d4c0298</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32</type>
      <name>ref_count</name>
      <anchorfile>classRapicorn_1_1ReferenceCountable.html</anchorfile>
      <anchor>ac06924a73f22e41f3975ed0b671ad54e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::BaseObject</name>
    <filename>classRapicorn_1_1BaseObject.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <base virtualness="virtual">Rapicorn::Aida::ImplicitBase</base>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatcher</class>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dispose</name>
      <anchorfile>classRapicorn_1_1BaseObject.html</anchorfile>
      <anchor>aaa1f7cdcbdcb51818b8f6d788b7be380</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatcher</base>
    <member kind="typedef">
      <type>C &amp;</type>
      <name>Result</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</anchorfile>
      <anchor>a910020b9a6551ee12e8754b0fb80b856</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterfaceMatch</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</anchorfile>
      <anchor>a94e57e98957e074ca14118f01865eee9</anchor>
      <arglist>(const String &amp;ident)</arglist>
    </member>
    <member kind="function">
      <type>C &amp;</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</anchorfile>
      <anchor>a7ace46ae24f84287766cfdbf1f138999</anchor>
      <arglist>(bool may_throw) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>match</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</anchorfile>
      <anchor>af67f742e0098097cd941a0f759afca1e</anchor>
      <arglist>(BaseObject *obj, const String &amp;ident)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>C *</type>
      <name>instance_</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch.html</anchorfile>
      <anchor>aa706decc761d7845ada772e653da7ee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_6_01_4.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatch</base>
    <member kind="function">
      <type></type>
      <name>InterfaceMatch</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_6_01_4.html</anchorfile>
      <anchor>a5caaed0c65c04f462b5be1de7248ff82</anchor>
      <arglist>(const String &amp;ident)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_5_01_4.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatch</base>
    <member kind="typedef">
      <type>C *</type>
      <name>Result</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_5_01_4.html</anchorfile>
      <anchor>ad73b188e067d7297394040be1f725a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterfaceMatch</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_5_01_4.html</anchorfile>
      <anchor>a364108cb166c406c285cadccf2b54429</anchor>
      <arglist>(const String &amp;ident)</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_5_01_4.html</anchorfile>
      <anchor>a4c15677251716722c4cd99e1d3809d4e</anchor>
      <arglist>(bool may_throw) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatcher</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>InterfaceMatcher</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>a18e3264f893e91ea29991cdfb3422075</anchor>
      <arglist>(const String &amp;ident)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>done</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>ab491efb1d271e7cc90994e395e7e19de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>match</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>ad471aea781d4015a839eab77a7bd529d</anchor>
      <arglist>(BaseObject *object, const String &amp;ident=String())=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RAPICORN_CLASS_NON_COPYABLE</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>a1ec1ef3a4eed2545bf6208b28e132673</anchor>
      <arglist>(InterfaceMatcher)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const String &amp;</type>
      <name>ident_</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>a18bb813840a855ac55b95641f97b3043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>match_found_</name>
      <anchorfile>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</anchorfile>
      <anchor>a936fe064e0706b6809a708f5c1d82d77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::NullInterface</name>
    <filename>classRapicorn_1_1NullInterface.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CPUInfo</name>
    <filename>structRapicorn_1_1CPUInfo.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>machine</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a00f7d2efcf77953aac9ee9fd4752c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>cpu_vendor</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a41332e29a64cba98789bc5a0ce626282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_fpu</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a075d263ddf0c50aaf4de737944680ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_ssesys</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>ad1ed301cd1d0b25aaa54fc04e166bc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_tsc</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a154e6f39f12d72d0abe585b9d18af63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_htt</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a1d796bc27d7014cd91408728ac28268e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_mmx</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a90899a0d0e71ed4e292e161ec589e857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_mmxext</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a4df5a32a1463c6abcb4041deeef9cd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_3dnow</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>ae1b4e847a02aa95008dfc0317668ca4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_3dnowext</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a3121852e06ebb868ac407df6f902a54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_sse</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>ab2fcc324b3ba67e3a8c2c1a5161c2135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_sse2</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a389806d30769be334170361c35760bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_sse3</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>ab69b911e4edbf7fc8fe50706d07225f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_ssse3</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a42af94e65f03399f2108650d52a5d99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_cx16</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a40f2f7b0c3009311e1329c6c29471ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_sse4_1</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>ad2b1ebb5dc3e0e92f6fc0c10361a7a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>x86_sse4_2</name>
      <anchorfile>structRapicorn_1_1CPUInfo.html</anchorfile>
      <anchor>a30bbea2ee758eed677e87ad5f0925a0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::TaskStatus</name>
    <filename>structRapicorn_1_1TaskStatus.html</filename>
    <member kind="function">
      <type></type>
      <name>TaskStatus</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>aa3debf7a8e330e5467284f77b8d24132</anchor>
      <arglist>(int pid, int tid=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a14056b334bfbba2e4e11fc481a85b6ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a2fe4fa1695936670842039a00280c6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>process_id</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a90d0cc07fff356785881c9d3f54fa659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>task_id</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a3f8be00190bebae7b67e80be3ae92cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a4e7c850e4365e21362d3e8a7ea4800aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>State</type>
      <name>state</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a441ecf9fbc5f50912d715d655792934b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>processor</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a852a7ebacde528542bb94d7f3e85452e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>priority</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ad4080947260cba4c91712d067b6b6127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>utime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ab8a22c68291685cef05bfc7a23e1bb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>stime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a28d6211e6eb370908c868996ddbf3ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>cutime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a7eda37cd7548f91ae5541f472cf16dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>cstime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>aa212763cf4b959ee134cc23e6a16b37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_stamp</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a6f521ddeeb4ca061e260a5a9a5ade151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_utime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>af38aed18996b571c77aa61bb7c32170a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_stime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ac84c3f009851fef97899ceda64fe8531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_cutime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ab6b41ec4377029d8fc858badb18bd9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_cstime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>abe43d0dd63773e52ec7c0deb7dd39088</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::QuickTimer</name>
    <filename>classRapicorn_1_1QuickTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>QuickTimer</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>a3d1c06fefbd4d1a7e8223cc457370ec3</anchor>
      <arglist>(uint64 usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>aeb92422fab3d356e25c72bd8a79da136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>a09ee24aff9e4ae8bbd89332a1e017c0f</anchor>
      <arglist>(uint64 usecs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expired</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>ab31a6a429b01ec628ea9d6bcf1c29f61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Strings</name>
    <filename>classRapicorn_1_1Strings.html</filename>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a6db75157b7dffbea1d6693c40e49fa5c</anchor>
      <arglist>(CS &amp;s1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a55b05132c4645588fa9d8b22ff9dcecb</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a78bcc2a52299e00abf8d78cbd769aedb</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>af61c7a7e89e9d6c25ee3ce6d69e44285</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a6c0bd58990fb0735b9a888c75c77bce8</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>aeb900d9925cc599cfe4232d65744f120</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>ac15093076e51abbd01e2eead47197f4c</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a08a430fd50074a95abe3f43180f37391</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7, CS &amp;s8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a2e1668e6df7f3cf7301d2d41d45b8bae</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7, CS &amp;s8, CS &amp;s9)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a71ffdac1e6b9ca31d008f4b690721cbc</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7, CS &amp;s8, CS &amp;s9, CS &amp;sA)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>a564330852bbc45732cec27b01ee4bb1a</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7, CS &amp;s8, CS &amp;s9, CS &amp;sA, CS &amp;sB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Strings.html</anchorfile>
      <anchor>ab909d2c8c926e69f2f133122d8b57c88</anchor>
      <arglist>(CS &amp;s1, CS &amp;s2, CS &amp;s3, CS &amp;s4, CS &amp;s5, CS &amp;s6, CS &amp;s7, CS &amp;s8, CS &amp;s9, CS &amp;sA, CS &amp;sB, CS &amp;sC)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::RECURSIVE_LOCK</name>
    <filename>structRapicorn_1_1RECURSIVE__LOCK.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Mutex</name>
    <filename>classRapicorn_1_1Mutex.html</filename>
    <member kind="typedef">
      <type>pthread_mutex_t *</type>
      <name>native_handle_type</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a2f453222f2b76a62678d827b7d3803e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Mutex</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>ae3ef65e045631bd3d2f9e8e4d6bd3eb2</anchor>
      <arglist>(struct RECURSIVE_LOCK)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a788e3944725c9904ecd41184e138e47f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a54ebe6b6897c6e1e092e1c562bbbd7c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a09261ffb6a5ecc808d341273858dd494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_locked</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a2fedabe3145d4ad92ab7710503d71a89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a10bf7160b94426412a9dfb361b97ba10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mutex</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>acd29a8d13919975f2857d71872dd642d</anchor>
      <arglist>(const Mutex &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>ac407b6c30141cb90207b3edb094755c6</anchor>
      <arglist>(const Mutex &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Spinlock</name>
    <filename>classRapicorn_1_1Spinlock.html</filename>
    <member kind="typedef">
      <type>pthread_spinlock_t *</type>
      <name>native_handle_type</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>a2f69d02006651c63016a3e5941b021fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>ae91f10f5cd3b007dc615114e56de316b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>a10e5e7e4d4a9732488eec1c0a11761c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>a51f35159db80eda2d6012d309d0dd725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>a7a5a744a2950aa1c0bc14f45af93b58f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Spinlock</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>ab47206579dc7b3a99737429411163572</anchor>
      <arglist>(const Spinlock &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Spinlock.html</anchorfile>
      <anchor>ad18cae600515f9b3cec9ea76855fef1a</anchor>
      <arglist>(const Spinlock &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::RWLock</name>
    <filename>classRapicorn_1_1RWLock.html</filename>
    <member kind="typedef">
      <type>pthread_rwlock_t *</type>
      <name>native_handle_type</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>ae84cf9f4eaa0f528e57850767a1c692c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rdlock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>a7730bd16d212bf37f142ccfef43ba85e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wrlock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>af23f35ef9f702d9c5225ee40e7b78a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>a4de089f8cfafbbc4d4d52e243266dfd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_rdlock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>aec4d551ea065d67663704602104aa78a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_wrlock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>ae7b934dc8b0a1ef6869e3614e7a4b166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>a439ee7e48a46750b37a895787533dc2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RWLock</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>a1fd24bce4bd2a334a54aefc749b13a54</anchor>
      <arglist>(const RWLock &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1RWLock.html</anchorfile>
      <anchor>a00989e977323eceb246530ccd0c5eaac</anchor>
      <arglist>(const RWLock &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ThreadInfo</name>
    <filename>structRapicorn_1_1ThreadInfo.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; void * &gt;</type>
      <name>VoidPointers</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a9bcfbd4539da262780d9951f645e29c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *volatile</type>
      <name>hp</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a1c4af2a29e5f58712ccfed0ffd8a43d1</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VoidPointers</type>
      <name>collect_hazards</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a10d4d094bb6188f1552fd1943671e8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lookup_pointer</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a4868fb93de6b6a5a2d95f58890623ba0</anchor>
      <arglist>(const std::vector&lt; void * &gt; &amp;ptrs, void *arg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ThreadInfo &amp;</type>
      <name>self</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>ac3f69830fe460d013e21fb19954094b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ident</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a96d4dfcf757c75ae5a01f3b588a13c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a88438c51331d998cbe08c1c6f6df29c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>aa8c3547963add325b296eb033e9b29e5</anchor>
      <arglist>(const String &amp;newname)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>get_data</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a64b71c30937c4688b85b1832cce7c991</anchor>
      <arglist>(DataKey&lt; T &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>abfb0afcc559454f7d0e5572448005c43</anchor>
      <arglist>(DataKey&lt; T &gt; *key, T data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_data</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a1e11c9a296e5e6b802e03e1da390398a</anchor>
      <arglist>(DataKey&lt; T &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>swap_data</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>adab6713c91ccb6a61fe07e8c4b516f15</anchor>
      <arglist>(DataKey&lt; T &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>swap_data</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>afd65b09b1f54a6320ffbf2fd7b068e6f</anchor>
      <arglist>(DataKey&lt; T &gt; *key, T data)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AUTOMATIC_LOCK</name>
    <filename>structRapicorn_1_1AUTOMATIC__LOCK.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BALANCED_LOCK</name>
    <filename>structRapicorn_1_1BALANCED__LOCK.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedLock</name>
    <filename>classRapicorn_1_1ScopedLock.html</filename>
    <templarg>MUTEX</templarg>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classRapicorn_1_1ScopedLock.html</anchorfile>
      <anchor>ad13d09f51a36da5a0fcf806a0599ec98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classRapicorn_1_1ScopedLock.html</anchorfile>
      <anchor>ad3ec132564b9547633673e245fd51677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedLock</name>
      <anchorfile>classRapicorn_1_1ScopedLock.html</anchorfile>
      <anchor>aead25fb58b9d5840074eb061417e127b</anchor>
      <arglist>(MUTEX &amp;mutex, struct AUTOMATIC_LOCK=AUTOMATIC_LOCK)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedLock</name>
      <anchorfile>classRapicorn_1_1ScopedLock.html</anchorfile>
      <anchor>ad5e8118342f8979ee71b4114c230c193</anchor>
      <arglist>(MUTEX &amp;mutex, struct BALANCED_LOCK)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Cond</name>
    <filename>classRapicorn_1_1Cond.html</filename>
    <member kind="typedef">
      <type>pthread_cond_t *</type>
      <name>native_handle_type</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>aa6d417a163dbd598c1853cd16de645df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signal</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>addef28ef610f4e960924ae1195dfe1ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>a1cc3b7d9f66e3b6303002e2d5c0c94bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>ae8e7d99639f82cb43eba70735e52d803</anchor>
      <arglist>(Mutex &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_timed</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>a76086283693e35d068f69e9e142d1874</anchor>
      <arglist>(Mutex &amp;m, int64 max_usecs)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classRapicorn_1_1Cond.html</anchorfile>
      <anchor>ae17626e1064b6327e6cc25b045222625</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; char &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01char_01_4.html</filename>
    <base>Rapicorn::Lib::Atomic</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01char_01_4.html</anchorfile>
      <anchor>aa4364c77ae1af670a533d7e7cca1f211</anchor>
      <arglist>(char i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int8 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int8_01_4.html</filename>
    <base>Atomic&lt; int8 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01int8_01_4.html</anchorfile>
      <anchor>a107b524e2a90c679c7587126977c3720</anchor>
      <arglist>(int8 i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint8 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint8_01_4.html</filename>
    <base>Atomic&lt; uint8 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01uint8_01_4.html</anchorfile>
      <anchor>aff8863e4eb8379a9fa17d9c33f4da4e9</anchor>
      <arglist>(uint8 i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int32 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int32_01_4.html</filename>
    <base>Atomic&lt; int32 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01int32_01_4.html</anchorfile>
      <anchor>a3eaaa74e827266851931af42304d7541</anchor>
      <arglist>(int32 i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint32 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint32_01_4.html</filename>
    <base>Atomic&lt; uint32 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01uint32_01_4.html</anchorfile>
      <anchor>a789ab426744a6de1b9e79d8744866cc6</anchor>
      <arglist>(uint32 i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int64 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int64_01_4.html</filename>
    <base>Atomic&lt; int64 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01int64_01_4.html</anchorfile>
      <anchor>a6f25ad1c0170209bdce9b2c9ed0fa7cf</anchor>
      <arglist>(int64 i=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint64 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint64_01_4.html</filename>
    <base>Atomic&lt; uint64 &gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>structRapicorn_1_1Atomic_3_01uint64_01_4.html</anchorfile>
      <anchor>acae85cf4f4ebc33ac46aecaae481df3c</anchor>
      <arglist>(uint64 i=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Atomic&lt; V * &gt;</name>
    <filename>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</filename>
    <templarg></templarg>
    <base protection="protected">Rapicorn::Lib::Atomic</base>
    <member kind="function">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</anchorfile>
      <anchor>a5b1e3ddd99663941edfef83a23df5238</anchor>
      <arglist>(V *p=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>V *</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</anchorfile>
      <anchor>a2d014f748f64f518da0eaa207ec6fc9b</anchor>
      <arglist>(ptrdiff_t d) volatile</arglist>
    </member>
    <member kind="function">
      <type>V *</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</anchorfile>
      <anchor>a838391e6d87b324753e8fb99b97543dc</anchor>
      <arglist>(ptrdiff_t d) volatile</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator V *</name>
      <anchorfile>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</anchorfile>
      <anchor>a839f7c001ffe544f133832ac3804770c</anchor>
      <arglist>() const volatile</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_link</name>
      <anchorfile>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</anchorfile>
      <anchor>ae5edbed0e7c0a45c06dbb7bf42651ba9</anchor>
      <arglist>(V *volatile *nextp, V *newv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Exclusive</name>
    <filename>classRapicorn_1_1Exclusive.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Exclusive.html</anchorfile>
      <anchor>a4fb1c34db47c36bb87b64ae537199154</anchor>
      <arglist>(const Type &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Type</name>
      <anchorfile>classRapicorn_1_1Exclusive.html</anchorfile>
      <anchor>a21bc60af37fb9f74259117aeeb6d2b03</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncBlockingQueue</name>
    <filename>classRapicorn_1_1AsyncBlockingQueue.html</filename>
    <templarg>Value</templarg>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classRapicorn_1_1AsyncBlockingQueue.html</anchorfile>
      <anchor>ae1431e6105d001f082ce5bf2a818f156</anchor>
      <arglist>(const Value &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Value</type>
      <name>pop</name>
      <anchorfile>classRapicorn_1_1AsyncBlockingQueue.html</anchorfile>
      <anchor>a24cab39c67b070e60acb532030ba469f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pending</name>
      <anchorfile>classRapicorn_1_1AsyncBlockingQueue.html</anchorfile>
      <anchor>a53f6d5fb56106604906bc389023e2208</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1AsyncBlockingQueue.html</anchorfile>
      <anchor>a92aaba24cbcb878215c433d71f8c311e</anchor>
      <arglist>(std::list&lt; Value &gt; &amp;list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncNotifyingQueue</name>
    <filename>classRapicorn_1_1AsyncNotifyingQueue.html</filename>
    <templarg>Value</templarg>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classRapicorn_1_1AsyncNotifyingQueue.html</anchorfile>
      <anchor>a3e94dc2a69de3c9124edcc57af477067</anchor>
      <arglist>(const Value &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Value</type>
      <name>pop</name>
      <anchorfile>classRapicorn_1_1AsyncNotifyingQueue.html</anchorfile>
      <anchor>a3f64b492bfce1b09e04d0dbf9895c18b</anchor>
      <arglist>(Value fallback=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pending</name>
      <anchorfile>classRapicorn_1_1AsyncNotifyingQueue.html</anchorfile>
      <anchor>a787fe357c2d934ee6647be4235a7128d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1AsyncNotifyingQueue.html</anchorfile>
      <anchor>a6937fc9a96d43016fa7a2a262b4e8d40</anchor>
      <arglist>(std::list&lt; Value &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifier</name>
      <anchorfile>classRapicorn_1_1AsyncNotifyingQueue.html</anchorfile>
      <anchor>a875493803631ca460f9cb3badc6d9f87</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;notifier)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncRingBuffer</name>
    <filename>classRapicorn_1_1AsyncRingBuffer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>AsyncRingBuffer</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a64b0a505ca4524825947c51cbd8199ee</anchor>
      <arglist>(uint buffer_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncRingBuffer</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>aaa67b0c2928d62eb08ac92da87f440a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>n_readable</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a2613ad565bcb5736fc909861f55f5224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>n_writable</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a9d39ed66e08ab4fa5c3ce66dfd1ea859</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>read</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>ae859f4a3ddbb94f3e99fdaf25dcd44c7</anchor>
      <arglist>(uint length, T *data, bool partial=true)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>write</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a48123e2e98dab4740dff6a782c0b1547</anchor>
      <arglist>(uint length, const T *data, bool partial=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TraitConvertible</name>
    <filename>classRapicorn_1_1TraitConvertible.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataKey</name>
    <filename>classRapicorn_1_1DataKey.html</filename>
    <templarg>Type</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>fallback</name>
      <anchorfile>classRapicorn_1_1DataKey.html</anchorfile>
      <anchor>af64e10fa4c15c6519ca6f3bcb63a60f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1DataKey.html</anchorfile>
      <anchor>a0db52d615ad5f331a97a5b76b8f5d4b8</anchor>
      <arglist>(Type data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataList</name>
    <filename>classRapicorn_1_1DataList.html</filename>
    <class kind="class">Rapicorn::DataList::Node</class>
    <class kind="class">Rapicorn::DataList::NodeBase</class>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>a9b374712aa88a702a17104279baec41c</anchor>
      <arglist>(DataKey&lt; T &gt; *key, T data)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>get</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>a2119554cb8ac28699be5b7df7cb88dfd</anchor>
      <arglist>(DataKey&lt; T &gt; *key) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>aa73029f3e0c08bd7f3ec063d1dbe8215</anchor>
      <arglist>(DataKey&lt; T &gt; *key, T data)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>a9d6017987e3a47e4915a65bf2d2fb06e</anchor>
      <arglist>(DataKey&lt; T &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>del</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>ad8886475e3804f401223b3bedfe85f0e</anchor>
      <arglist>(DataKey&lt; T &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_like_destructor</name>
      <anchorfile>classRapicorn_1_1DataList.html</anchorfile>
      <anchor>ad214cc50918d2126d1597bfbb35064a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::XmlNode</name>
    <filename>classRapicorn_1_1XmlNode.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <base virtualness="virtual">Rapicorn::DataListContainer</base>
    <member kind="typedef">
      <type>const vector&lt; XmlNode * &gt;</type>
      <name>ConstNodes</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>aa0adccfcf88d97762e06126ea76409b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstNodes::const_iterator</type>
      <name>ConstChildIter</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a668721b8a06eb29e63c94380b1d5d073</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a28dae20970d748dfca71ea967c0775d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>XmlNode *</type>
      <name>parent</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>ab79fe76c433fbdbdf4fc1208e8f77265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const StringVector &amp;</type>
      <name>list_attributes</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a5f0da9886de2a4ccef4c669bbb5f73da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const StringVector &amp;</type>
      <name>list_values</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a6ea6724b4980ceb8918c7c15b5768873</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_attribute</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a2a937c16ed190519b9b05be41cada5fa</anchor>
      <arglist>(const String &amp;name, const String &amp;value, bool replace=true)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>get_attribute</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>ae19c53e8acc0967cb78bb4d01a3fb6ea</anchor>
      <arglist>(const String &amp;name, bool case_insensitive=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_attribute</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>ab5c45166af138ef892e54a4dba0f77d2</anchor>
      <arglist>(const String &amp;name, bool case_insensitive=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>del_attribute</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>adb9738d5edd928e5ffc6194ebefc7997</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parsed_file</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a8c0b7200d4348832f97df74a4cfa523f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>parsed_line</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>ace0f6961c1862447f7df8f95f0561d77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>parsed_char</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a436d4332b5fb14541e7b7cb686f72428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>text</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a36d0ab679c44e7c8cdfb22410093eae7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istext</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>afe15801e243779b1ed68a8061769da7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ConstNodes &amp;</type>
      <name>children</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>ab33a9cce83277bad915a5e0f8acf9e4c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>ConstChildIter</type>
      <name>children_begin</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a0eb0873addb4c7da01a03c1c36a0a5dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstChildIter</type>
      <name>children_end</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a102cb14a0d7d4151112e704760c7be7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const XmlNode *</type>
      <name>first_child</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a2976e0e6e30c763f5eb8785822b99061</anchor>
      <arglist>(const String &amp;element_name) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>add_child</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a0f486cf24e765c9a093066be59603717</anchor>
      <arglist>(XmlNode &amp;child)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>del_child</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a0720f5f3f8894c6961db03cf666d04ef</anchor>
      <arglist>(XmlNode &amp;child)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>steal_children</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a3513a84554e0662145075f4f66b3d65a</anchor>
      <arglist>(XmlNode &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>break_after</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a3ba150709dec44fd93f9953088e0d36a</anchor>
      <arglist>(bool newline_after_tag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>break_after</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>abe52a5e3b2a57e36c5545f2fc8ce73d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>break_within</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a463d8f589badce3ef65d3a4285b50308</anchor>
      <arglist>(bool newlines_around_chidlren)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>break_within</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a6ad7072c255331f5c80667bf43a0ee3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>xml_string</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a0d608d10f0c9233935e9cf88f7b9dde1</anchor>
      <arglist>(uint64 indent=0, bool include_outer=true, uint64 recursion_depth=-1) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XmlNode *</type>
      <name>create_text</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a4fb7e1acc68c2d5d13b9762c8bf8a828</anchor>
      <arglist>(const String &amp;utf8text, uint line, uint _char, const String &amp;file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XmlNode *</type>
      <name>create_parent</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a106e350c7ea0d5059987cebaef8a94cb</anchor>
      <arglist>(const String &amp;element_name, uint line, uint _char, const String &amp;file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XmlNode *</type>
      <name>parse_xml</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a80ce4fcadcc67e6056c128d992494b25</anchor>
      <arglist>(const String &amp;input_name, const char *utf8data, ssize_t utf8data_len, MarkupParser::Error *error, const String &amp;roottag=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>xml_escape</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a4619e491cabd01a01fa6977d109440ba</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>XmlNode</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a9d05c7fa291d104d4947486e826eb224</anchor>
      <arglist>(const String &amp;, uint, uint, const String &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint64</type>
      <name>flags</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>aa386b8e0bc9f153f9cab0cf4936add1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>flags</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a121deef5ee179b2099f47a940333c5dd</anchor>
      <arglist>(uint64 flags)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>set_parent</name>
      <anchorfile>classRapicorn_1_1XmlNode.html</anchorfile>
      <anchor>a06bd03fb1ac25fb762f56eb494183687</anchor>
      <arglist>(XmlNode *c, XmlNode *p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Adjustment</name>
    <filename>classRapicorn_1_1Adjustment.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a2531d2987d14f4de34ab3af37cd0ced1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aba9a2f09c24e163ecfea8ccead6528e7</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>flipped_value</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aae4d506714d326723fe35f05c89472e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipped_value</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a24e48731db22c9f820a7a471c0c2a2bb</anchor>
      <arglist>(double newval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>nvalue</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aab9a21c1ee542ced88e89f6a929943ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nvalue</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a010f6a0893e2b46bdf7d7916cfcdab55</anchor>
      <arglist>(double newval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>flipped_nvalue</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a781bb0ba16a8e91b440a2513fe8ec5ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipped_nvalue</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a3cd9e119fb72418dfbc0f48a5bcf09f4</anchor>
      <arglist>(double newval)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>frozen</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a17ff547a32b0bcb826687865ce37b1fa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>freeze</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a2814470dd81e2f9f809bc9bbe91c4367</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>lower</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a4a6076279c456893ea10896f282df12d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lower</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a2138360ff95523a132a333d1b69336bb</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>upper</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>afbdb4b3c3a26da1fa74e361d369ede69</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>upper</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>af7805058ecba42cf9073a0f314d59fee</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>step_increment</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>ad659eef238dd9307361ea43c31597027</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>step_increment</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a4151e964c423283434c09f558d062eb2</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>page_increment</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a351187a561a53a420af2fd6d71a2ecdf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>page_increment</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>ab8f4cd937e435c0148f82d85362def5b</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>page</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a03a1b957f9db96c48162235bd4cc4a45</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>page</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a9324909f6e1f49c754afa93218b710e3</anchor>
      <arglist>(double newval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>constrain</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a17f58e94399ceb08076fb2930c4574a8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>thaw</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a9b2d1d5f24009c72d82f8a6f4b292db6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>abs_range</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a79f4716f331e579e534d5a72e2f8f5d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>abs_length</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aff4cc0b9c7c773671a3f9acb0a0cc3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>ad9a5743f1cead620cacf0d452abba586</anchor>
      <arglist>(MoveType move)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_flipped</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a9151bfead2291f513677144cfdd4849a</anchor>
      <arglist>(MoveType move)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a0b480d4582b923d50faec8c11caa3a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Adjustment *</type>
      <name>create</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a9f2794005d80ed55ea88abaa175c01be</anchor>
      <arglist>(double value=0, double lower=0, double upper=100, double step_increment=1, double page_increment=10, double page_size=0)</arglist>
    </member>
    <member kind="variable">
      <type>SignalValueChanged</type>
      <name>sig_value_changed</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a19e01e76c9273939efd26e0d0af7e0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SignalRangeChanged</type>
      <name>sig_range_changed</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>a2fbdddf398c72daef5cee473ca53dc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>value_changed</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aca191239f52bb5bab816bad80ed95042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>range_changed</name>
      <anchorfile>classRapicorn_1_1Adjustment.html</anchorfile>
      <anchor>aa515e70063767556eea5b087ab6b25da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AdjustmentSource</name>
    <filename>classRapicorn_1_1AdjustmentSource.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual Adjustment *</type>
      <name>get_adjustment</name>
      <anchorfile>classRapicorn_1_1AdjustmentSource.html</anchorfile>
      <anchor>a54755a7692ddf5f8c9febae1b6c54959</anchor>
      <arglist>(AdjustmentSourceType adj_source, const String &amp;name=&quot;&quot;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationImpl</name>
    <filename>classRapicorn_1_1ApplicationImpl.html</filename>
    <base>Rapicorn::ApplicationIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a7e0a78131ca188b0f9d3ec5e3af82c29</anchor>
      <arglist>(const String &amp;file_name, const String &amp;binary_path, bool search_vpath=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a905f1922cb28b8d23777a5b530fa4e24</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a3da3ded8b03d9127365c446e20876824</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowIface *</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a1e43735052ca34b28bd91df63a554fef</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>aa2b42320b9099bbc08b65b3f6b572e1f</anchor>
      <arglist>(WindowIface &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>afd6a62077eb288b4e556177881c7c7ca</anchor>
      <arglist>(WindowIface &amp;window)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>ad7eadd702bac4490331b21126eee0844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowIface *</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>ad200abe24c718968d447d338dbd62c55</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a13fb428daf590383ab22781e653cde9d</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a1e2d8b81e2c50ac0f5534c2a7adcd848</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ListModelRelayIface *</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a3247198c73a708a2d6f5e01cb81b6ba3</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a02925a5988a2fc780c430d71ee4d5bb3</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>aa2d11e5573b050524c1d74d0eac33d84</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a609f2fc61e25867bc01dff0c01d717dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>adde96d884345e9a3eb41f99e4e303368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a6f16a46aa0150aa0bb46fd081d600c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lost_primaries</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a675c941e05a005c56c1160930b968b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ApplicationImpl &amp;</type>
      <name>the</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>acf63f88ad35fdb2295776834a3653222</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Arrangement</name>
    <filename>classRapicorn_1_1Arrangement.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a6c949b1fbe53e9ed831b4c9bc4d1da7b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a302c5eb6bdd80b5891eb6d74186ece45</anchor>
      <arglist>(double v)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a97486a5d740a33c4d9781e58fbb387c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>ae4ca5723b2c4520d094a611cd018a459</anchor>
      <arglist>(double v)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>ac16ffd6858a4d20faf311e91beefc47e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>affb838b840956b0780420a4b6a8cd41d</anchor>
      <arglist>(float align)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a33f59834c9a8ab50732ace3c7217af65</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a89cc65747041091ef90fd81e91b94cb2</anchor>
      <arglist>(float align)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rect</type>
      <name>child_area</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a3b740a1785e9ffc62aaa5c4a94ab774c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a43e7c3e31a00a8fc0b5e185a05b33b6c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrangementImpl</name>
    <filename>classRapicorn_1_1ArrangementImpl.html</filename>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <base virtualness="virtual">Rapicorn::Arrangement</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>ac1f885fa674612dee9abfe6ed38d1e3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>ade87804888dbb8422db95e3f68d5d053</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a718693c4d4ae7effa8beedd3f0b4f189</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>ab7966c11c4a84304b63ae5a6582ada29</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a5ca3b91ea38872a3256cd44e52ad2606</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>aa174eefe62fad73a26824a6bf2b82227</anchor>
      <arglist>(float align)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a329f534307ee97d7e5f469673d31e362</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a373c08a471db9f05d26d1a0a2fc29f64</anchor>
      <arglist>(float align)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Rect</type>
      <name>child_area</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a0a5ce28186391d2fc43fd9209d7806da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>affcbc9ac66aacfba6a3f71638de89fd4</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a3033b2884a71f3ab46cb0cb7b5f28050</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Allocation</type>
      <name>local_child_allocation</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a17e157b02f356463c5ddfd94952fa0e2</anchor>
      <arglist>(WidgetImpl &amp;child, double width, double height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaImpl</name>
    <filename>classRapicorn_1_1ButtonAreaImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ButtonAreaIface</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <base virtualness="virtual">Rapicorn::FocusFrame::Client</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_widget</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>aadd0043dda9b23c749bd999046ea6b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a30656ecb9b35a3072421257f6f310ca8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>ad7743a6162a857fa71fccf040f162a05</anchor>
      <arglist>(const String &amp;command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a4d0aa45feee17403d6a5f0f90efa0e99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>ae7c65d46a870f386dabb343d12042d5c</anchor>
      <arglist>(const String &amp;command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>ad95378e0a4ad38829f154ef24892e2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a9f41d388314a2a21bb4d6b11eae09de7</anchor>
      <arglist>(const String &amp;command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClickType</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>aa63b410d7018c8ca4dea48df36f2aae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>ac960e34c059fd7779c96e6dfe845e7aa</anchor>
      <arglist>(ClickType click_type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>af1f7ed8dae0f85537e45ff1e7cd50781</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CairoContext</name>
    <filename>classRapicorn_1_1CairoContext.html</filename>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a335e88165d733db53459e60f4ee7ed92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>af670e378da3d24ac1c14913ed8b84aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tolerance</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a1c21dc9d427bc307a0975640c6f6dacd</anchor>
      <arglist>(double tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_antialias</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a8fe596f79f711c4694c5d53c2ba85dec</anchor>
      <arglist>(Antialias antialias=CAIRO_ANTIALIAS_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fill_rule</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a4dd2dd04e53e5793449dc4ced0787cc8</anchor>
      <arglist>(FillRule fill_rule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_width</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a04a4e8979dede7bbd73c2110df243459</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_cap</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>adc5a4f76ec2d181dac3b7ecd02b04e8f</anchor>
      <arglist>(LineCap line_cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_cap</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a421032af43b43a58d24c8c162c619d08</anchor>
      <arglist>(_Round round)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_join</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>ad760969915f1a816afda30c8cbcd417b</anchor>
      <arglist>(LineJoin line_join)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_join</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a412530698c9b8e79d11935d0a9bd7aba</anchor>
      <arglist>(_Round round)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_miter_limit</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a1c46b36d1d349e549b1414fef63c8557</anchor>
      <arglist>(double limit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dash</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>aa77250fc37cb18ef4b530c377b873d1d</anchor>
      <arglist>(double *dashes, int num_dashes, double offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_color</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a18309dd1da51b0d5cb86537d3b79af92</anchor>
      <arglist>(Color color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a27090bd509a2744acddedaff4ad1d69e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>new_path</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>ae0696086a25699b71bf6b9e7a5beb75c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_to</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a31150b30597110a5e4f65e7915390cbb</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>line_to</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a8b07dace6f28fc79ab4edddc60314bb8</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rel_move_to</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a6749ea0fec02cb5b906737d3fc98204a</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rel_line_to</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>accac5419322b0a4131c1c149a08f9c8f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rectangle</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a80c9500643377448def2c0c18cc0ed44</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curve_to</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>ad97c25a0b9319fc685ec526d5a4b3921</anchor>
      <arglist>(double x1, double y1, double x2, double y2, double x3, double y3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arc</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a0df442792e72e5e017f216ebbe9a43f6</anchor>
      <arglist>(double xc, double yc, double radius, double angle1, double angle2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arc_negative</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a641db434e1aef3456bf3bddd53384e72</anchor>
      <arglist>(double xc, double yc, double radius, double angle1, double angle2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_path</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>ae164497a54f6f3ceb9443be5380c182c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a8dd9a895d4e3b177bc8486036e5d47e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stroke</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>aeb554f2adc700ef5c4142524e2e372e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stroke_preserve</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>ab43fcc8f1bf92f1521ceeb8653260c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a1f5dac7a29a5d2926c8595e9b3538ee5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill_preserve</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a40e60be3a0eef09da2b7250b02fb0c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CairoContext *</type>
      <name>cairo_context_from_plane</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>aae6cf7dc1ae546b09f387f735b7a6673</anchor>
      <arglist>(Plane &amp;plane)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cairo_t *</type>
      <name>cr</name>
      <anchorfile>classRapicorn_1_1CairoContext.html</anchorfile>
      <anchor>a7d6e64faffeb774262983389f8a10139</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CairoPainter</name>
    <filename>classRapicorn_1_1CairoPainter.html</filename>
    <member kind="function">
      <type></type>
      <name>CairoPainter</name>
      <anchorfile>classRapicorn_1_1CairoPainter.html</anchorfile>
      <anchor>ae6450f3a66e89c3c8213170e45321f5c</anchor>
      <arglist>(Plane &amp;plane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_arrow</name>
      <anchorfile>classRapicorn_1_1CairoPainter.html</anchorfile>
      <anchor>ad9e7e94419eaa5fd03dbe0db415fd21b</anchor>
      <arglist>(double x, double y, double width, double height, Color c, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_dir_arrow</name>
      <anchorfile>classRapicorn_1_1CairoPainter.html</anchorfile>
      <anchor>aee7c5a6616509fc8ad2328a3c49dafbc</anchor>
      <arglist>(double x, double y, double width, double height, Color c, DirType dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_dot</name>
      <anchorfile>classRapicorn_1_1CairoPainter.html</anchorfile>
      <anchor>a0bc72798510209592f8abc58645fc554</anchor>
      <arglist>(double x, double y, double width, double height, Color c1, Color c2, FrameType frame)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BoolSeq</name>
    <filename>structRapicorn_1_1BoolSeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; bool &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>a230277e03cb3de1bf39a2015166d7a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>a13c55a0005ecfe4e09a30052798efbea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>a06108dc35e3de3255ce0175c0bf614d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>a375c3a0383b18965cafb1087bbe6326a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bools</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>ab1c1584457b664421d22b7202e0bbb15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::StringSeq</name>
    <filename>structRapicorn_1_1StringSeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>a3099749c2bb34a8fa0739c94150c087e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>afffeb528042b7a01e746dcc8b96fd990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>a33686c9c180f6d2b9fe804dc65e53dfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>a3664f6032e56baa125bd18988530d03e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringSeq</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>a33e68e248c3703e2cda46663ef57ecda</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strv)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>strings</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>af27d02d217b4f475ad276a2a1fb45f0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnySeq</name>
    <filename>structRapicorn_1_1AnySeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; Rapicorn::Aida::Any &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a5f23f3daa3b60a50bb622f5560a62b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a2da555c1593c041a84a47066ed101676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a5547a759d09e183c7077b8f5a8683d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a33f691f5138488979003d47c51ba50fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Any</type>
      <name>vany</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a6a20ebc47fbc4ea3b85a09f782e6e13d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnySeqSeq</name>
    <filename>structRapicorn_1_1AnySeqSeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; AnySeq &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>a7cffc1cfa7ee55bfe2ea95892dcb6ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>a0273a2707c0ff15e81b4f22eaabeafd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>add228348632034868ef771264c8204c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>a6b3c070795e551101d64c99465b9b34d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>AnySeq</type>
      <name>seq</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>a22bcee2df2151b57ce5f1a1cd6025d26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::PixelSeq</name>
    <filename>structRapicorn_1_1PixelSeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a8bd6a70d66f734c9fe43f34b920f8963</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a31788d6b42a10b09e715ddeb26f16ec5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a36eb63686045972d7c934fce604c2fd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a5eeefdce422329e170752af009cfdfd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>argb</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a6f9c2b70953f90e508b24d74683dc0f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Pixbuf</name>
    <filename>structRapicorn_1_1Pixbuf.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a3246f21fa40f762e1f154e8318ecc91e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a63d55154dcea5a9a9969bb5ed842ecb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>aebc70f4e0c7f99dfaa40917eb36a802e</anchor>
      <arglist>(const Pixbuf &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a82ba90b76fecbbec885ded0cca9e2c5c</anchor>
      <arglist>(const Pixbuf &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a262e6861ffab1d7b4993bf761e15cceb</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a0d2b06a7089f904e7fba3c0f07f1986d</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a7c1b4b28a7c6275c18f24c7cd984936a</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t *</type>
      <name>row</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a0285865daa7de56904cb4341f663b335</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>const uint32_t *</type>
      <name>row</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a31ace03ddc473457418b6343df3ee1e9</anchor>
      <arglist>(uint y) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>aec51700a0fad39b5ee96a7bf18747197</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a35e1b112fc58e3b566cae06d0dfe15a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>row_length</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a3f45b11294942c741d7a975e9d756be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PixelSeq</type>
      <name>pixels</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>abd1057487fc37c5ba921cbed11615705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringSeq</type>
      <name>variables</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>ad28ff608ac12a40fdea920f850362970</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>ab1e4e280e7c2efa81f42b5ad8f606338</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const Pixbuf &amp;rec)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UpdateSpan</name>
    <filename>structRapicorn_1_1UpdateSpan.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a2e39aff2082b67ad53733392a1abce1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a9fb958a3023ead245f1a199791397684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>aeef9360c43270a034b2e0084702fc97d</anchor>
      <arglist>(const UpdateSpan &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>aad3e24743c2c64452ef483d35cb345e1</anchor>
      <arglist>(const UpdateSpan &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a026710c22741fa62234d90e382911dc5</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UpdateSpan</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>ad05e141bf781ff76cf977abe455a87db</anchor>
      <arglist>(int _start, int _length)</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>start</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>adae2e8717cc7b646d737b8388fa98a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>length</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a07fc175b2e90f8cdf5951793ea5a8e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>ac83f3ce026d6179730f3b8f9a508fa7b</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const UpdateSpan &amp;rec)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UpdateRequest</name>
    <filename>structRapicorn_1_1UpdateRequest.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>aad9faa4d5981463852ee8cb3508f7fb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>aa0c69cee4731295393f4a532d96d3a05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>ad2b7813b1c024966a35f04935bf7dd02</anchor>
      <arglist>(const UpdateRequest &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>adcb2c08aa3b54ae43e19073296b81ffd</anchor>
      <arglist>(const UpdateRequest &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a3bfcdc9beccd34266952e269ed1de44c</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UpdateRequest</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a5324bb8d22836339ac4177723661e85f</anchor>
      <arglist>(UpdateKind _kind, const UpdateSpan &amp;rs, const UpdateSpan &amp;cs=UpdateSpan())</arglist>
    </member>
    <member kind="variable">
      <type>UpdateKind</type>
      <name>kind</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a8d8d590dbd753f50f247682774dd6954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UpdateSpan</type>
      <name>rowspan</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>ad4397cc3dff18d867d3caf8ca38debae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UpdateSpan</type>
      <name>colspan</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a1ddc6bd3c77febde2af9013dd5102ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringSeq</type>
      <name>variables</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a449048c1713d36ac31873967373ad37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Any</type>
      <name>value</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>ad7ba91a5887334792847dc4e4cf0466e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a5b5295ff93f4c7469edd20dc1b6281a4</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const UpdateRequest &amp;rec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelHandle</name>
    <filename>classRapicorn_1_1ListModelHandle.html</filename>
    <base virtualness="virtual">Rapicorn::Aida::SmartHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a16ad725f7cb8694f34d76304f31e9d06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__updated</type>
      <name>sig_updated</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a0feb4939ee7a7397a9b68fcb182db23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a372899df9ae9f495fea43b30edf48bb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a6b022f63c43db1b9d64e956ffce77d8d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>aab11b6ea708cadcf57c693d24f4d481c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ListModelHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a46f31444fe90a91f440effc420ea8b15</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayHandle</name>
    <filename>classRapicorn_1_1ListModelRelayHandle.html</filename>
    <base virtualness="virtual">Rapicorn::Aida::SmartHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>ad5291d75b96d523a3695f16933981f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__refill</type>
      <name>sig_refill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>ae9fbf7f275ebf2f6ec89f0864993f7e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ListModelHandle</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>aa815e3c7f4515b07ed3461cec37857a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>a4753fd023269a40ad74d68b0c68cccee</anchor>
      <arglist>(int first, const AnySeq &amp;asq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>a169e868263d2bccf2bc7ea39551e1fd2</anchor>
      <arglist>(const UpdateRequest &amp;urequest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>a0d4773bf3e63814f44a08c63d19d0c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ListModelRelayHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>ac52bdbb234e8b8b2c23cd5f254b5a7ce</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Requisition</name>
    <filename>structRapicorn_1_1Requisition.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>abfefb7de88f5ad36ab6b9be0a1785db8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>a78e8f35bed61dd5b52dea7e48aad4c17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>a3c4d9cdb0bbb42f2a01ef66a8d8ae024</anchor>
      <arglist>(const Requisition &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>ae5cf325d8566c3c9b1a49b46c47aa78a</anchor>
      <arglist>(const Requisition &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>acabc4c9fcb0c7bcdee8d95b9654836e7</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requisition</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>ad1ccc5cd523fc28cc607c15e5c594461</anchor>
      <arglist>(double w, double h)</arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>a323c0eac7877713d45e03162faa7fc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>aa53f935c115e0462204f8182eb974600</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>a488368bacd94f80e875136c79604fa52</anchor>
      <arglist>(Rapicorn::Aida::Any &amp;any, const Requisition &amp;rec)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetSeq</name>
    <filename>structRapicorn_1_1WidgetSeq.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; Rapicorn::Aida::SmartMember&lt; WidgetHandle &gt; &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>a67973bb07091c5322a3c393b35e0ef24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>a8ab92b091118604c959ac460d73a1c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>a4c04f53b70b1ec0a1a5539fd36818530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>acfcd401e4ecb7a85015c3e31803c6a4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Widget</type>
      <name>widgets</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>a3e2f49a165d0afa610bbd5b5135ba3dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetHandle</name>
    <filename>classRapicorn_1_1WidgetHandle.html</filename>
    <base virtualness="virtual">Rapicorn::Aida::SmartHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ad758e8cb9b142068c870e1644b696d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a098d5d91d7a4f523687ab7c2a3270a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ad8b1bd463758b2f2dea78219d026baa9</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a690b1fc977f541677a1dc5fa2ea3171b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a1d8ac422ebe68266c6f2211045ea0774</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8444027c2649cd14a2bfe1266a8aa984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a0be96e7a0c044b25a8d2a622ed7dbe50</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab1b9b44bc9dc8d0110e410c6e9a992c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab0fafd9ef84ab59d995adbe72a62ecdb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a6a0d27866eb398ce944e72772baac6ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a9ad462075241b499c41db1ad748de849</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afd1bef1aa57a82752c19dc4f08dc167f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7231fc60f4b1713c2c9d7599ecb9eef9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a763e2cc58673b98d6d94a3a575a2bedb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7fdabe0b5033a04915069b0d18fcbd05</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8b64fa3df6ef1f825a781f430a80de47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>acabe9239b1146c6cddcad7ad63f16799</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>acad68bc56eda4a3f0aac625e235138cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8fbfa4ef57ea48dd0b9c29a2a37054db</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afd76c8d8acd63a8d222b5b505473f98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a439a5c0052ee619f2c8e6964d41de355</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3d848743d25ae1d6f26a9229d5fbea7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3c24093709450a009c97953a606e35b9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7c157d135750bc4f26323eea2db75d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a91748c41830b5338495e174f20fd8993</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a69c89b2fda14ca33504d0168628a8537</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aad91f84933063aad64b42de6f51c65ab</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3e3bd1a7d7ee4f0a6dcdc585cb2e2259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a50c0ad2a0ff56b803c21c97ba57c564c</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a42bdfa4186c75b054b678b16dccadf40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab65808c5eb7d73cb5e97e82e97479866</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a6402a8711e8503f5dc13b39de93a55c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a2465e607a3f6e306214c236044311b43</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a94c6f1fce587746688aa7f58cb182132</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aeb5b28219860c694f2fd7a828596b680</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a84b6b06a487658ba1e6a846090929e7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae83b3083daaa616c90b1c3665f3c3cda</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>af2cff2fea6c2e6583e06c1556a10723d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae800a680dc1837b36ce7527cabde0dfc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae470eed7cd2514546f0743b520143792</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8a6ce9fbf706196e1e30f874f34b7c5d</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a66e513939fd30dbc9f24a8646a657862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac8e88bd6a8ebda6c9572cb0ac7b8214f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aed826432bdfeb4210559fd026db5dbac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3c54756e272d1584abf20d525ca4bd38</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac5e9395e8d3c2201993939d68f6c4e81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afb7aca4966f6fed0cfe35ca931e40eb6</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a122d7dc2ea61f6a849fe81692770017e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ad2e05a3c253923bc236412c5d3337c5e</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a130e04bcf146443e5c39f898b76af11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aeaf202b3ded1f9cfec8d6ad1b2c5a473</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a11371b869985a54f8837825d63a60358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7b1b0896a17f8788ec5cfc708ae7cf0e</anchor>
      <arglist>(ColorSchemeType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a06cb3aa61fc03f84029e61c7b89ac2b9</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>af46e199979f945ca6bb3e5db78249793</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac1d5dd3f048592a2c627dcfb7f893a49</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae54822011fdd156291893980f94c1fc1</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a5baff30bd16f310388480e3ac02af229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Target</type>
      <name>component</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a82598b83e0df4545764b54d96e819056</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a915d5269c8f0226d4e17aeb895b3ad83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WidgetHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a34f436f1ecf5246cd2a3601f718f898b</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ContainerHandle</name>
    <filename>classRapicorn_1_1ContainerHandle.html</filename>
    <base>Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ContainerHandle.html</anchorfile>
      <anchor>ac1faa9acab43936431e64836df267958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>create_child</name>
      <anchorfile>classRapicorn_1_1ContainerHandle.html</anchorfile>
      <anchor>a2e88a18c3ab7843982d6028f305e1319</anchor>
      <arglist>(const std::string &amp;widget_identifier, const StringSeq &amp;args=StringSeq())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ContainerHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1ContainerHandle.html</anchorfile>
      <anchor>a89f25f3522f297625e0d2f950cb1bbea</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaHandle</name>
    <filename>classRapicorn_1_1ButtonAreaHandle.html</filename>
    <base>Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>ace95afefb32f06c3422d53a92c7a80d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>acd8f21e7e6cc2e9068102e49b904fa9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>ab40a96d3b4ae27a41fc09d15d6d3bc85</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9adcf1dd2556911b2539186fc11a17db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9006fe767e85e6a1b776efcc57318548</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9f8b9e7edf1ab0aecd5d333980615059</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>af36295b9b27eeebf878032c1ba2cf738</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ButtonAreaHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a2dea330d0cf233b4c04279340114a3a8</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableHandle</name>
    <filename>classRapicorn_1_1DrawableHandle.html</filename>
    <base>Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1DrawableHandle.html</anchorfile>
      <anchor>aa110080b72c869935516caa55590a912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__redraw</type>
      <name>sig_redraw</name>
      <anchorfile>classRapicorn_1_1DrawableHandle.html</anchorfile>
      <anchor>adc364b63e45953647be47ed2a2e901eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableHandle.html</anchorfile>
      <anchor>abe95123aca7ef8a2e692e234de55d601</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DrawableHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1DrawableHandle.html</anchorfile>
      <anchor>af980ff119b5c8a6635c978422fbb1493</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListHandle</name>
    <filename>classRapicorn_1_1WidgetListHandle.html</filename>
    <base>Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a0974e61df6f062f90aaacc582af7c09b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>aed7090b53b55a9bdc861f158d26511cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a60e1bc3ee1411aaac71ab0f66d3e28cd</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>aaae58efbf36d32af09404c77cf28adfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a93429417c880c199b50d8c1d158ec08c</anchor>
      <arglist>(SelectionMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a7315823538690e1935ea2408be1acf9f</anchor>
      <arglist>(const BoolSeq &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a13c515761b4b31efbc88c1d6bd5ef303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a0efaef03b17d51ae04c7e33ec5a21746</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a6410af7d19d44ee7968ec786e9897974</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WidgetListHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a8f69e82dd4f1512886d600dd38a41242</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowHandle</name>
    <filename>classRapicorn_1_1WindowHandle.html</filename>
    <base>Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>af16de7a2dbc5331d61834fa3bd3c19bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a8935208c5acf270be3e91536a34b058d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a805c08c1fd7bf965a108c9bf05bce475</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>afe9628e3e04a9fed7e01f80a3f36d3d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>adae11ebfdb183956230c53c80e41a2ed</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__commands</type>
      <name>sig_commands</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a7f0c5f5be1b8c086d6ebe415469f0038</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__displayed</type>
      <name>sig_displayed</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>adb5c87ffa5c974818bf953f5ee1bde65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a5044979071d27281cb610f0392bd0ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a71b883fbc9974a8629c12dc3ba34d7cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae50a9a5b6a1fe61bdf0f83b5709e0994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae921d484c329fabb2609f1bdf9fdee4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a11324d6025fa535e614b484a2fe71396</anchor>
      <arglist>(const std::string &amp;pngname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a77a2a5f7dac2c55baefde7429583245d</anchor>
      <arglist>(WidgetHandle &amp;widget, int button, double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>aceb84bf7d869698667a8ad17654fa116</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae1af7a2aa400989b6c1cdacafe9e8fd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a7f22c10df78864880b65e4963f1548ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a2b0110ae16896e7cd7d9c9ff429f4e32</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WindowList</name>
    <filename>structRapicorn_1_1WindowList.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; Rapicorn::Aida::SmartMember&lt; WindowHandle &gt; &gt;</type>
      <name>Sequence</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>a31cd09b9cb1a14b8d1470192a49bb45b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>a9146f20c0a27d8bfaf72c35c2a692d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>a595f002aafb829a12c87c1e299b27d19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>a2e5a79898d7363373edc7f5cefe30bd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Window</type>
      <name>windows</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>ac98b0911fe35b1d7538c35a00decff27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationHandle</name>
    <filename>classRapicorn_1_1ApplicationHandle.html</filename>
    <base virtualness="virtual">Rapicorn::Aida::SmartHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ab6c7e375319e63457f6b30b43ec7cddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__Aida_Signal__missing_primary</type>
      <name>sig_missing_primary</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>aa81c7b859c13d4134af090e409ea2f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>acc23e70cad32b2f5945eb5bc3b65326a</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, bool search_vpath=1)</arglist>
    </member>
    <member kind="function">
      <type>StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a07f96b5f2edd37cf61f618e6121a8fbd</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factory_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ab3c2c40cf8ea40677ed58d2ea250f8be</anchor>
      <arglist>(const std::string &amp;factory_definition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>af16f455b0c923583c8ba01a642fb7d45</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a7c8ed6a471f3e16b5ebdb85229f5de13</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a6ac374a33efc0597e2a2a8545256f496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a6fa653f00e288a7b548bb51aadbfef0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a466acd653a37d0245b5ae86a2a964d20</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>af0e54ddc7a77c8ad8af4bfc3f4ca2dd5</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a80c72261dc973c028eb974bc685d1237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayHandle</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3b0d9abf82550991efb26a56393613ac</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a75911b8d73f015783281ad4aca0d1ac6</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a4b96aeecfd9ca46c6964a0040a75ea7b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a2f22d154a764da296fb78d903d3cbc92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3772006bd98d41c8f2aa941e69902f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3b49640e9962dbe43aec83510f4e7bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a562bde6431ff38e05fe5fe994156b1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ApplicationHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a1857e4eb2f82c51d3156d1c7cbef4d78</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>run</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ac9cb9517a3cc5aea867d8ca445ea7abd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>quit</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a945219feeab0347a2f30b7ad072af3d2</anchor>
      <arglist>(int quit_code=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a33109a43597b11ba5be0535298508d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>run_and_exit</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a56333dfcac10fe2ef2d6e0aa8d322aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ApplicationHandle</type>
      <name>the</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a5176e85c6514c70fdfa55d459bcf1a68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static MainLoop *</type>
      <name>main_loop</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>afdf9b76c333404273de0e3251079e1d2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdlTestWidgetHandle</name>
    <filename>classRapicorn_1_1IdlTestWidgetHandle.html</filename>
    <base>Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>const Rapicorn::Aida::TypeHashList</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a0208bf3888401ffd1bf157e9a4ec0210</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aaa5d1ce0d5a038e097a0984a875e8b27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a88dda949cab82a4473156eca52d80bf1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>af1b84e8c51673b5b03d30c71b7b71237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a05b94e93ef606483c08a501e906cdacb</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ace6d7c29d733e348f74a3a1621ba9776</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae36fd63d6b21bbb5bdb1685a8ed8a58f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a160f64308e9b04d2513207a8d8f986e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a9bc7121b0ef2af1cb7a66e82ff799107</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aeb6f5d8921cd9694ec717623d83cae0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ac889903a3f2a33fa644756c34378e8a4</anchor>
      <arglist>(TestEnum)</arglist>
    </member>
    <member kind="function">
      <type>Requisition</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ad88bd4fba5dde4fbe465dcf0096b6f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae07b94ec7e38d31e9a553c30e3f17a42</anchor>
      <arglist>(const Requisition &amp;)</arglist>
    </member>
    <member kind="function">
      <type>StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a8625951c889becd76880107655ff6074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a215c09c2ab3908b6348d715570d7d395</anchor>
      <arglist>(const StringSeq &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetHandle</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae00a01fb8d9e5789f299ac2f7cd459aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aa63442c126d075e58f0acedf5f0fe986</anchor>
      <arglist>(IdlTestWidgetHandle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdlTestWidgetHandle</type>
      <name>down_cast</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a533e22d386118509d0383f2b7630fbe1</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ContainerImpl</name>
    <filename>structRapicorn_1_1ContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <member kind="typedef">
      <type>Walker&lt; WidgetImpl &gt;</type>
      <name>ChildWalker</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a5032ca61c9dee584f987687cfe8a9121</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uncross_descendant</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a1ba4b68fd3b4734ad664723050a095cd</anchor>
      <arglist>(WidgetImpl &amp;descendant)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>widget_cross_link</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a24924929b306982ce99a6befe4f22fea</anchor>
      <arglist>(WidgetImpl &amp;owner, WidgetImpl &amp;link, const WidgetSlot &amp;uncross)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>widget_cross_unlink</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>ad46408deaed231e276c5b67347358d3b</anchor>
      <arglist>(WidgetImpl &amp;owner, WidgetImpl &amp;link, size_t link_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>widget_uncross_links</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>afa55a5a197b25f4798dbb107fadf56f4</anchor>
      <arglist>(WidgetImpl &amp;owner, WidgetImpl &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl *</type>
      <name>get_focus_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aba47bcae3cab50918c91a2d895e13292</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>child_container</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a706a50fd89044c152fb22ca983a846a7</anchor>
      <arglist>(ContainerImpl *child_container)</arglist>
    </member>
    <member kind="function">
      <type>ContainerImpl &amp;</type>
      <name>child_container</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a91021c05f3f20dc31168ff0ae43feec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ChildWalker</type>
      <name>local_children</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aa9187cd791b8484154536600d2072320</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>n_children</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a0631fb379ac93d834140674c38d0f761</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetImpl *</type>
      <name>nth_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>afc3a1ff68fe314608d428918d0e9e848</anchor>
      <arglist>(size_t nth)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_children</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a6202edfd20c3b55123f20438a9c483b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a92c6b8caf7270123eca121eb87965476</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a1fe3ce258a6d3e67a456cc831040e659</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a06401288df52abe92d11110c533aafaa</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a86862628743c75d455e8f6782753145c</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Affine</type>
      <name>child_affine</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a525374040dfeb2adacc18e0c9566e279</anchor>
      <arglist>(const WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const CommandList &amp;</type>
      <name>list_commands</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a623938cbbd69d9d29253233ce22ed29f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>point_children</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a42577b5e4abba895b3187ac51abaaa99</anchor>
      <arglist>(Point p, std::vector&lt; WidgetImpl * &gt; &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screen_window_point_children</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aad88aa080c76cb4ad814be958fde131a</anchor>
      <arglist>(Point p, std::vector&lt; WidgetImpl * &gt; &amp;stack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ContainerImpl *</type>
      <name>as_container_impl</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>ad329dc106f875906f0db54b9bddbb39b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render_recursive</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a502b1808b1eaf47513dd737331e76263</anchor>
      <arglist>(RenderContext &amp;rcontext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_tree</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aac545080d9ffbf62db22c01303525b62</anchor>
      <arglist>(String indent=String())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>create_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a367464f9f373368f251e26206523d109</anchor>
      <arglist>(const std::string &amp;widget_identifier, const StringSeq &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>add_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a05364ba58ecb5f55d93406a123f8cbf7</anchor>
      <arglist>(WidgetImpl &amp;widget)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>repack_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>adf01fb76b8c76d7b58cef5da3392609b</anchor>
      <arglist>(WidgetImpl &amp;widget, const PackInfo &amp;orig, const PackInfo &amp;pnew)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>remove_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a9e28deffbacb430301cfcc2bf2522171</anchor>
      <arglist>(WidgetImpl &amp;widget)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unparent_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>afb373b11400fb33e4df7ec3ac18c930d</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dispose_widget</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a8a618fb499a720ca65ac71918c3456c0</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>ab51604fa30e2dfd3b9721c994a063dbf</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>move_focus</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aed2efa3ebf1f044358638d6c887c087f</anchor>
      <arglist>(FocusDirType fdir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expose_enclosure</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aab420d8fa1f90590b3922cf9fc61dc11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>change_unviewable</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a173036b8efb594e7811041b1d72156e8</anchor>
      <arglist>(WidgetImpl &amp;child, bool)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>focus_lost</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a1ab67b7d19b9c1dcc01d164d89899203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_focus_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a37ddcc35478352c6eba823798430ba83</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>scroll_to_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a5a7dba2d57f20aae6cc49649be2f4bad</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dump_test_data</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>ad48b0714a64bc74900e7526233adf4ed</anchor>
      <arglist>(TestStream &amp;tstream)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Allocation</type>
      <name>layout_child</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>aeeb515ea06e0a07857babe1a2bba38a7</anchor>
      <arglist>(WidgetImpl &amp;child, const Allocation &amp;carea)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SingleContainerImpl</name>
    <filename>classRapicorn_1_1SingleContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>size_request_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>ab851f7a5b9a065753de4536651478ebf</anchor>
      <arglist>(Requisition &amp;requisition, bool *hspread, bool *vspread)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a9c77415a7bcc31a24c76ea41090666a2</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a496f5ed11ca8fae12da55b5b31dcd66e</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>aae1f67dd50c6cd3b8e8dcc7da520e22c</anchor>
      <arglist>(RenderContext &amp;, const Rect &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WidgetImpl &amp;</type>
      <name>get_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>ae5b269029c2a6d076f858f1cb30dbffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pre_finalize</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a32f2f87f082aaacfe67b452628ac1712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ChildWalker</type>
      <name>local_children</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a74ce0a79072075ca383e5af1b7ff3b13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>n_children</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>af62cd330cb66d34145b824c7717fe5cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WidgetImpl *</type>
      <name>nth_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a5e5be1842a803dd80fd45174123a5c76</anchor>
      <arglist>(size_t nth)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>has_visible_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>acc8e4acbc776f6bc2ba9160e9354ded4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>has_drawable_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a7978f53da8700ecd338d29e05d9cce46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>ad4143b5d934aa4d9c94deda81ecec678</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_child</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a49b108695c46e871417fbe73d3c2f98a</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnchorInfo</name>
    <filename>structRapicorn_1_1AnchorInfo.html</filename>
    <member kind="variable">
      <type>ResizeContainerImpl *</type>
      <name>resize_container</name>
      <anchorfile>structRapicorn_1_1AnchorInfo.html</anchorfile>
      <anchor>a889c9a806b3eb0f812a34b86ed205f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ViewportImpl *</type>
      <name>viewport</name>
      <anchorfile>structRapicorn_1_1AnchorInfo.html</anchorfile>
      <anchor>a67f57f526e33c7fe1ee16c9d20ac0098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WindowImpl *</type>
      <name>window</name>
      <anchorfile>structRapicorn_1_1AnchorInfo.html</anchorfile>
      <anchor>ad34b6a867124918923a86d71c133c5bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ResizeContainerImpl</name>
    <filename>classRapicorn_1_1ResizeContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <member kind="function">
      <type>bool</type>
      <name>requisitions_tunable</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>abaa657186f1e95cdba359ef7913c1271</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AnchorInfo *</type>
      <name>container_anchor_info</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>a2f9beca2de1ec0c3d4c6894d4d4c293e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidate_parent</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>a19cb27688318d5961f7c5de943101d76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>a255a3e7bad4ae9fb4c6a9699ac71c562</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>negotiate_size</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>a8cf189900e266087d95c91a1f019029f</anchor>
      <arglist>(const Allocation *carea)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MultiContainerImpl</name>
    <filename>classRapicorn_1_1MultiContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pre_finalize</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a31eb09271e5196487dec108cb26bb340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a72a3710ca1320aec33c9b99b1895b8f9</anchor>
      <arglist>(RenderContext &amp;, const Rect &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ChildWalker</type>
      <name>local_children</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>aa33548441d7c92107d1ffeec831dce7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>n_children</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>afc2bd38e095ce75895b867f4451c1436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WidgetImpl *</type>
      <name>nth_child</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a3b994a1752d3e006f85419c067a6c778</anchor>
      <arglist>(size_t nth)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_child</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>ae63ddcac01469b1d3a80411660e29fe3</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_child</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>ae662441891b9741f6988d2f5a1cdf404</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>raise_child</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a967659102c0c67c6a223d82b43ef94e5</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lower_child</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a74d9a8942cf5550ec2e6d3cf10651a22</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_all_children</name>
      <anchorfile>classRapicorn_1_1MultiContainerImpl.html</anchorfile>
      <anchor>a68b08144480f4a91d001a7e50f6de8a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Evaluator</name>
    <filename>structRapicorn_1_1Evaluator.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; String &gt;</type>
      <name>ArgumentList</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a73bf15bfdbadaaa2c6675cad5fe83107</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; String, String &gt;</type>
      <name>VariableMap</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a2def52d4eca5ba323673de421656abc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; const VariableMap * &gt;</type>
      <name>VariableMapList</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a452dd255e5f4a355e1ff9576d694191e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_map</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a16abec288454016a73dbccd77ef41cbe</anchor>
      <arglist>(const VariableMap &amp;vmap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_map</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a77909baabdd43b4a6d1b30c05a49124a</anchor>
      <arglist>(const VariableMap &amp;vmap)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>parse_eval</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a5b6651602133ba929c2001ee48055671</anchor>
      <arglist>(const String &amp;expression)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>canonify_name</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>af54c649f4d95896b354890fb4777e570</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>canonify_key</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a0ccb719d78ab190f191ad133c00858cb</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>split_argument</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a214687102ab3ef9c38e98bf3e729bcd4</anchor>
      <arglist>(const String &amp;argument, String &amp;key, String &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>populate_map</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>a4a7419228f4d73bc5e2129a7f1351c88</anchor>
      <arglist>(VariableMap &amp;vmap, const ArgumentList &amp;args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>populate_map</name>
      <anchorfile>structRapicorn_1_1Evaluator.html</anchorfile>
      <anchor>ac93d7a31dbfa497c1ecd3e69ef6368c3</anchor>
      <arglist>(VariableMap &amp;vmap, const ArgumentList &amp;variable_names, const ArgumentList &amp;variable_values)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Event</name>
    <filename>classRapicorn_1_1Event.html</filename>
    <base>Rapicorn::Deletable</base>
    <member kind="variable">
      <type>const EventType</type>
      <name>type</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>a66c9e273b70de32ff7f2b1f080188f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>time</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>a7dbbbd5ee428031ddb46fb710d31e849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>synthesized</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>a27f4aad31c3b40a15e47db57dfa73888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ModifierState</type>
      <name>modifiers</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>ac150b382168ac6bc866a9371bfddf06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ModifierState</type>
      <name>key_state</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>ae73ddb6ada9e8db8fbdef8fafb8c69b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>aaabc4def27723870e31877517c256db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>ad02f823023071dd331f2caf99f685fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Event</name>
      <anchorfile>classRapicorn_1_1Event.html</anchorfile>
      <anchor>ad86b139c7dbcdf3005cf9dfdf4611bb6</anchor>
      <arglist>(EventType, const EventContext &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventButton</name>
    <filename>classRapicorn_1_1EventButton.html</filename>
    <base>Rapicorn::Event</base>
    <member kind="variable">
      <type>uint</type>
      <name>button</name>
      <anchorfile>classRapicorn_1_1EventButton.html</anchorfile>
      <anchor>a86d28d0c7e7bc4963bfa076a31199b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventButton</name>
      <anchorfile>classRapicorn_1_1EventButton.html</anchorfile>
      <anchor>af1411063a8a812e180e77f92b8b3a126</anchor>
      <arglist>(EventType, const EventContext &amp;, uint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventKey</name>
    <filename>classRapicorn_1_1EventKey.html</filename>
    <base>Rapicorn::Event</base>
    <member kind="variable">
      <type>uint32</type>
      <name>key</name>
      <anchorfile>classRapicorn_1_1EventKey.html</anchorfile>
      <anchor>a7b62ae939c719e4828a5be74b0457383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>key_name</name>
      <anchorfile>classRapicorn_1_1EventKey.html</anchorfile>
      <anchor>aa7e44fedc379e650daa7d6c57c3b6133</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventKey</name>
      <anchorfile>classRapicorn_1_1EventKey.html</anchorfile>
      <anchor>a6579fec79f784165df8963e5f0b36c45</anchor>
      <arglist>(EventType, const EventContext &amp;, uint32, const String &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventWinSize</name>
    <filename>structRapicorn_1_1EventWinSize.html</filename>
    <base>Rapicorn::Event</base>
    <member kind="variable">
      <type>double</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1EventWinSize.html</anchorfile>
      <anchor>ac176ea08f4c0795efc1781c86caabcac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1EventWinSize.html</anchorfile>
      <anchor>a09371ad941b8043aad61e5ddde113b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>intermediate</name>
      <anchorfile>structRapicorn_1_1EventWinSize.html</anchorfile>
      <anchor>a262607785a2dc64e209d01902c4832fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventWinSize</name>
      <anchorfile>structRapicorn_1_1EventWinSize.html</anchorfile>
      <anchor>a8f07334802dd283142c64d783a3bbfa4</anchor>
      <arglist>(EventType, const EventContext &amp;, double, double, bool)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventContext</name>
    <filename>structRapicorn_1_1EventContext.html</filename>
    <member kind="function">
      <type></type>
      <name>EventContext</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>ab222b47ae6ebceedbf63ff357be9d5ba</anchor>
      <arglist>(const Event &amp;)</arglist>
    </member>
    <member kind="function">
      <type>EventContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>a75d2cf16d40cd90ab1919cb4cc8cf1a0</anchor>
      <arglist>(const Event &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>time</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>a98c1bbac8ad5bc5532b6c2a13f701227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>synthesized</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>afdd1e00a3e3e19b06b7a38c582124db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ModifierState</type>
      <name>modifiers</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>a5584f312f0b57cec81fbe48036cade24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>a4882c2aab93a454522ab3680e8976a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>structRapicorn_1_1EventContext.html</anchorfile>
      <anchor>ad869bd6101060825b3d38de6931ea250</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetFactory</name>
    <filename>classRapicorn_1_1WidgetFactory.html</filename>
    <templarg></templarg>
    <base protection="private">Rapicorn::Factory::WidgetTypeFactory</base>
    <member kind="function">
      <type></type>
      <name>WidgetFactory</name>
      <anchorfile>classRapicorn_1_1WidgetFactory.html</anchorfile>
      <anchor>adae317a3935bae42af914d18b2f5b3d1</anchor>
      <arglist>(const char *namespaced_ident)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Heritage</name>
    <filename>classRapicorn_1_1Heritage.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function">
      <type>Heritage *</type>
      <name>adapt_heritage</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ac3d5da54d43f6b9f1cf1ce08fe1e1dd5</anchor>
      <arglist>(WidgetImpl &amp;widget, ColorSchemeType color_scheme)</arglist>
    </member>
    <member kind="function">
      <type>WindowImpl &amp;</type>
      <name>window</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ac5e132c7127e028175965151cf4c8f3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>get_color</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a3d15510c8dffe9e7b874b1077b414b41</anchor>
      <arglist>(StateType state, ColorType ct) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>foreground</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>abc37f8fe4090ca64e131c73d5ae80931</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a8ca2474c5d2433ef74627c218501e187</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>background_even</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a6308a6a0c5706827e5acd5f4d4a13a63</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>background_odd</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a96865b8b2c25111ad707bac5f9b47358</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_color</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a2b4c0ff8cf9ddd48877e25325f1f8da1</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_shadow</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ae8236ec3dbd5743bd941811ed4dc7805</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_glint</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a4d861226141dbf3af840284e52642aa8</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_color</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a36305bb4acfe64b8e9f319ff4af8720f</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_shadow</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a0e7be7f64f876a2218c5edcc529f1c25</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_glint</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a0531fc0091ca27cbd3929fe31821a372</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>focus_color</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>aa4b22936459bad4c441466b6879001cc</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>black</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a2b3766a70208c3c7eabca3fcf3e14d38</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>white</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a4ede645283d10112e2fbd6f93ff14550</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>red</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>aa761cc4f2b0b38d25f7616fd1e5bbeee</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>yellow</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ac4c9655d79051c3ac05b1696697037ef</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>green</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a35ed43ca1ded7e0b5b504e117125a080</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>cyan</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a5a9cdf0b3cca85f6ebd766d6034afea0</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>blue</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ae8bc8575fbf3bda1c042999200b9b3c3</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>magenta</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a5912c986e1a0abff5a89932dcc37d4ee</anchor>
      <arglist>(StateType st=STATE_NORMAL) const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>insensitive_ink</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a31e4675fd1b520e0f8aa457fa66dee58</anchor>
      <arglist>(StateType st=STATE_NORMAL, Color *glint=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Heritage &amp;</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>a9677836394d7ffed713944414b83ad85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>resolve_color</name>
      <anchorfile>classRapicorn_1_1Heritage.html</anchorfile>
      <anchor>ad9c32d90819aabc8e315bedcdefd96b5</anchor>
      <arglist>(const String &amp;color_name, StateType state, ColorType color_type=COLOR_NONE)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Image</name>
    <filename>classRapicorn_1_1Image.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1Image.html</anchorfile>
      <anchor>a0b586499fdf832d6af945bd2b48ef79e</anchor>
      <arglist>(const Pixbuf &amp;pixbuf)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pixbuf</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1Image.html</anchorfile>
      <anchor>ac97a58c45db21b3e3d8bd57dd3003db1</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stock_pixmap</name>
      <anchorfile>classRapicorn_1_1Image.html</anchorfile>
      <anchor>ae495d0696f011be3676179c4ad9a6142</anchor>
      <arglist>(const String &amp;stock_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>image_file</name>
      <anchorfile>classRapicorn_1_1Image.html</anchorfile>
      <anchor>ae0364189a1f2b90c609fd7a81de0dd67</anchor>
      <arglist>(const String &amp;filename)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Image.html</anchorfile>
      <anchor>a8627903c7e0610504b662a61bdc76695</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ListModel</name>
    <filename>interfaceRapicorn_1_1ListModel.html</filename>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>count</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>aafe7649b2f445e7f8504aa23daa680c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Any</type>
      <name>row</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>a14a9d2a2cfcc28bae395fdbd5f559f0b</anchor>
      <arglist>(int32 index)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>updated</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>afc7952c08f0335ccfd898c315b9fb45e</anchor>
      <arglist>(UpdateRequest urequest)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ListModelRelay</name>
    <filename>interfaceRapicorn_1_1ListModelRelay.html</filename>
    <member kind="function" virtualness="pure">
      <type>ListModel</type>
      <name>model</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>adcbb66f692a772b56944dab997ecd2ae</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>fill</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a80ce174e9f1e49583cdc1aa6c7a5e381</anchor>
      <arglist>(int32 first, AnySeq asq)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>refill</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a23232fcfa13174c409930c35966d9439</anchor>
      <arglist>(UpdateRequest urequest)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>update</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a4572d953257a6767a1eb76fbdf76f58b</anchor>
      <arglist>(UpdateRequest urequest)=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Widget</name>
    <filename>interfaceRapicorn_1_1Widget.html</filename>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>match_selector</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>afa7acd787c4e0ce592a00e6eac3f10ad</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>query_selector</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a966149ce674f027b2c2f14e8212ca908</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a1a999419166530f04a9ad46a73c2f48a</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>query_selector_unique</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ac1689061b3c27d6bbbff79e7c0ccfd1d</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>String</type>
      <name>test_dump</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>af3f894cbe40c59471446676086d9bb80</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a858cc661c00f64d2907a9de82fae5c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>width</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a7e169f50fcf8359e611e0cfa651de43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>height</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ade4747cd9c5b5fc2fc39e38fdeb99dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hexpand</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a278fe44b3716d9a98a6cc9f66f67f2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vexpand</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a153d8ef83f2e2de21da8947f8cb0234a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hspread</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ab0add12f6175e5d989edc94ac9ca39ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vspread</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a51a1c5c257c3b44f01e17b4c13fa8c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hshrink</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>aa6d31d6186350e3500f8084ab4323386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vshrink</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ae3840d1159f706cb5f0fb599f36b1e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a8f799aabc5c03d1055607d6a671a5c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>sensitive</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a82d7a23b70641e6ddc043ec3df44e828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hposition</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a44be8fb9c25d484ccea96599d817ab4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hspan</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a6ab4b817ed9013e15453ebd818a43622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vposition</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>aeaeee786e7789885227b31e073e13280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vspan</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a9ba41a1e6da4d800f780d527cf371628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>left_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>abb437b157032e1fead87f977f6a0c0b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>right_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a80254569674082250832b98fb8ce6b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bottom_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a8af9982c063fc3d09130d7092b940189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>top_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a5f30cdee3b2b995a38a4d32b529c438c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hanchor</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>abc319ff61c436b7f400ef2b2c851369f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vanchor</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a9f49b75e5a2bc72e2542348a65d779d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>halign</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a5794e8baa2027b70768f0303d89cc223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hscale</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ab90ac7bf1c678f696c32fea0f812b63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>valign</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a60a86a26eab78debb29bb33de8624247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vscale</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a12ac5b6578b39ea39c4d36c148cb0e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a150ef4ed3df304674db2fa5ea3e54949</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Container</name>
    <filename>interfaceRapicorn_1_1Container.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>create_child</name>
      <anchorfile>interfaceRapicorn_1_1Container.html</anchorfile>
      <anchor>a20ea75506b91331aeba7e6eae0f86667</anchor>
      <arglist>(String widget_identifier, StringSeq args=0)=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ButtonArea</name>
    <filename>interfaceRapicorn_1_1ButtonArea.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="variable">
      <type>String</type>
      <name>on_click</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>afaffd36c7498b7d3accc26ec69bcbb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>on_click2</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>aef48233d2d675220eeb84eea1a69f90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>on_click3</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>a3304c8704a25a28abba849bb86ddd99e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Drawable</name>
    <filename>interfaceRapicorn_1_1Drawable.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function">
      <type>signal void</type>
      <name>redraw</name>
      <anchorfile>interfaceRapicorn_1_1Drawable.html</anchorfile>
      <anchor>a370b1767c5101cea7402264e564cad3e</anchor>
      <arglist>(int32 x, int32 y, int32 w, int32 h)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>draw_rect</name>
      <anchorfile>interfaceRapicorn_1_1Drawable.html</anchorfile>
      <anchor>a248e15b451cafcf158188dae1b4c86d1</anchor>
      <arglist>(int32 x, int32 y, Pixbuf pixbuf)=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::WidgetList</name>
    <filename>interfaceRapicorn_1_1WidgetList.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>set_selection</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>aa52c4d87de8804ab72918fff44bd2c55</anchor>
      <arglist>(BoolSeq selection)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>ad28f3453010b4cd3289f15fb630bc435</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>select_range</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>af22fb3a30a711f99b4c92e76355a60c5</anchor>
      <arglist>(int32 first, int32 length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>unselect_range</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a012b99660bbe41efdc0f0e9ac13f7cc4</anchor>
      <arglist>(int32 first, int32 length)=0</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>model</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>ad43523eaaf2c1b6151c51ff22b670789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a5ee8444c6a08695978f02f817cccec21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Window</name>
    <filename>interfaceRapicorn_1_1Window.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>viewable</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>aa8f4d4b031f8e3e7b6dcda5b8a852a29</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>show</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>ade9cbd4acc909e961cc6b671fc4face1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>afbde8fd4343ccf2317f35a3f51991524</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>close</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>ae25047dab10628098e48774b2e0613ad</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>snapshot</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a3f63b46c3644db5f2fa08a188ce6ac72</anchor>
      <arglist>(String pngname)=0</arglist>
    </member>
    <member kind="function">
      <type>signal bool</type>
      <name>commands</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>ad0a64a0cfb583fde383b16e8eb6037de</anchor>
      <arglist>(String cmdname, StringSeq args)</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>displayed</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>ab3d0be768ac4d49c843a7967b0abf4a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>synthesize_click</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a88448e8df0648f5fa4f324740ded31ad</anchor>
      <arglist>(Widget widget, int32 button, float64 xalign=0.5, float64 yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>synthesize_enter</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a913547ac0885c10671ec9bff23cfe2ff</anchor>
      <arglist>(float64 xalign=0.5, float64 yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>synthesize_leave</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>ab55713c98f30687216672aba8e331521</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>synthesize_delete</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>abb79cc36d40dcd929839aed85ce8d0c1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>title</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a7cdaf722bf73f91abcb9ad1d6c8984cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_focus</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a55c929a4ae3dc6fdca4a0a1772a64e3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Application</name>
    <filename>interfaceRapicorn_1_1Application.html</filename>
    <member kind="function" virtualness="pure">
      <type>String</type>
      <name>auto_path</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>ad8b6b931a0829a200fe37b01d60d0ca2</anchor>
      <arglist>(String file_name, String binary_path, bool search_vpath=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>StringSeq</type>
      <name>auto_load</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a771ed02fcf8aee1003c714bf459de5a8</anchor>
      <arglist>(String defs_domain, String file_name, String binary_path, String i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factory_window</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>ae2d5b509bca24fcd98e74e71ad37c5f8</anchor>
      <arglist>(String factory_definition)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>load_string</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a544f79d43e24dd6f716e4cd8a335470d</anchor>
      <arglist>(String defs_domain, String xml_string, String i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Window</type>
      <name>create_window</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a0ee935b8453c80625fd19d3cfdd4de2d</anchor>
      <arglist>(String window_identifier, StringSeq arguments=0)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a6df48a448dbe85c36a3a4d84c81b6e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>missing_primary</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>add17c54e20dd885020fa430d8fc58bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>close_all</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a41e6389168d624fd48109725591df5ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Window</type>
      <name>query_window</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>ad0e073c75bacb7e562cfdfd922d30244</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>WindowList</type>
      <name>query_windows</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a639fe71d9f192a547d874a5215ed9426</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>WindowList</type>
      <name>list_windows</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a41db7758f1c9e556e07ebaec77a262df</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>ListModelRelay</type>
      <name>create_list_model_relay</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a378348550f9985c507f220394b282253</anchor>
      <arglist>(String name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>test_counter_set</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>aaedf8485a7e7c74fa9588ff691c0790e</anchor>
      <arglist>(int32 val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>test_counter_add</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a5a81a5d11bd35daf29585df490fa4b94</anchor>
      <arglist>(int32 val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>test_counter_get</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a1459d386bfec79b5a8266459d2335540</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a21864d08deedc894c6319b7c8befc630</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int64</type>
      <name>test_hook</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>affc4022ed77fcd546eab8f649a6fdae2</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::IdlTestWidget</name>
    <filename>interfaceRapicorn_1_1IdlTestWidget.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="variable">
      <type>bool</type>
      <name>bool_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>ac65f6b0a09843a6cef613f020a1f018b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>int_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>aef10010eaec890fe771a9fd2d36dd92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>float_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>a5f4b4229cf1ad9eba44a56e46d5d6897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>string_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>a5f061352480c01537cbbf53593e70c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>ae7e42d12a9181f22ad23a48d7953d7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Requisition</type>
      <name>record_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>a0724a1127309748c40fac8d553f13e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>af0d964c6a0aa617335677761d210ad57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdlTestWidget</type>
      <name>self_prop</name>
      <anchorfile>interfaceRapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>a5f73a220facf3df351b8f3dc837d6f6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Alignment</name>
    <filename>classRapicorn_1_1Alignment.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>ae04cfe8f123c10fa2e0268e6ec77d2c3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a948bcb5cb557571f8802119715c9b998</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a00aaafb76d8f73af57d5b91e9168d5d7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>aaf7e5ed7afe547981dab4eb7dc8da023</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>ae84f7f5b6b76b92a020f85aef727f6b9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a848385bd1ba342dbf77fd65c6c5daf1a</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a66f13f9d86a632b5c62185fefac7a0be</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a3fc07491f5397704c94dfb3185da6db4</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>afa85abfa3a5915079a1154a4c0ff3c51</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a0c462f32822901ffbd798baa630fa78c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::HBox</name>
    <filename>classRapicorn_1_1HBox.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBox.html</anchorfile>
      <anchor>aecf97f712599a6ea2a975b7bb390f659</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBox.html</anchorfile>
      <anchor>a40633c05ee12f38807fc52a2c7e4c716</anchor>
      <arglist>(bool chomogeneous_widgets)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBox.html</anchorfile>
      <anchor>a6193acb360a22821522c2579811433c4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBox.html</anchorfile>
      <anchor>a7265e336be9704c159e5b91482f3bf3d</anchor>
      <arglist>(uint cspacing)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1HBox.html</anchorfile>
      <anchor>a53708897ffdd596b0407e92682940684</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VBox</name>
    <filename>classRapicorn_1_1VBox.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBox.html</anchorfile>
      <anchor>a1b3c3c24ba2102b226506109c9ed8356</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBox.html</anchorfile>
      <anchor>afabac6b80190d8528b0a3063e1d34f76</anchor>
      <arglist>(bool chomogeneous_widgets)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBox.html</anchorfile>
      <anchor>aeff4ef1a4731c40090f18a78e18b1df3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBox.html</anchorfile>
      <anchor>afb6db915e91342c937c328de06907eb7</anchor>
      <arglist>(uint cspacing)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1VBox.html</anchorfile>
      <anchor>afae0e2e507309c893aee9651ebae96eb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ListRow</name>
    <filename>structRapicorn_1_1ListRow.html</filename>
    <member kind="variable">
      <type>vector&lt; WidgetImpl * &gt;</type>
      <name>cols</name>
      <anchorfile>structRapicorn_1_1ListRow.html</anchorfile>
      <anchor>a258eff60d18d816ac1df786187830882</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WidgetListRowImpl *</type>
      <name>lrow</name>
      <anchorfile>structRapicorn_1_1ListRow.html</anchorfile>
      <anchor>af4b8d9387fbc095ed6d9602f9b19f612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Allocation</type>
      <name>area</name>
      <anchorfile>structRapicorn_1_1ListRow.html</anchorfile>
      <anchor>a2f66a4fc42c89422cf25c922ec870196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>allocated</name>
      <anchorfile>structRapicorn_1_1ListRow.html</anchorfile>
      <anchor>aae082f17cde3c7437a8f778b15c1228f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListImpl</name>
    <filename>classRapicorn_1_1WidgetListImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetListIface</base>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <base virtualness="virtual">Rapicorn::AdjustmentSource</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a581b3a45ad088eb36685bdba2ae37f88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a50b2ab498bf6e0475d36c53d3d284172</anchor>
      <arglist>(const std::string &amp;modelurl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a456d40633c7bde80211e4b0039cfdf79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>afb19201772601d38f5e8395b5eeb62fe</anchor>
      <arglist>(SelectionMode smode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a3fed774b2899aaf81b4dc8d22b0325e3</anchor>
      <arglist>(const BoolSeq &amp;selection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ac9b451afb04f2cd6021ca75203e15f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a10411a5e4976aee8afdba1644aeba7fc</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a71d823bf7793723c78c9285f68908727</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a63aff7176265428b4a718df2a69bc304</anchor>
      <arglist>(int fallback=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ab1cf27465eb69c8d3b24bd3fd4201646</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a39e85b26f1d66a613e03896fc396d1d7</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function">
      <type>Adjustment &amp;</type>
      <name>hadjustment</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a4ec1563c5fdeceed1bb431678d669bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Adjustment &amp;</type>
      <name>vadjustment</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a232bf93f9f4698d6f95fce4739dbe898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Adjustment *</type>
      <name>get_adjustment</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ae3e1c67a51422191cee93658cd79b3fa</anchor>
      <arglist>(AdjustmentSourceType adj_source, const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_model</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a780380bdb7280b7987dcd201e7ae18a3</anchor>
      <arglist>(bool invalidate_heights, bool invalidate_widgets)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>visual_update</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>adba58a0d9f570ca7953c02c45e8179e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a972397301691a4a8965ccf9f0d3cac48</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aca21ba91169a90379b82c59e25b02775</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>focus_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a3949e624028ff06492e3b8e11950b587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>grab_row_focus</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aae3bb0445897a6de277cc16e987f5c9c</anchor>
      <arglist>(int next_focus, int old_focus=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row_height</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a1afb220656b0b9a80d4f475cf7fdac67</anchor>
      <arglist>(int nth_row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_layout_preserving</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aca98c766ce303c9be7bc1c6e81d17be1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cache_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ac16ca9d1173276846bfc3f1b9f4a6dd3</anchor>
      <arglist>(ListRow *lr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a1f1090287ecd106432ced55e353dfc9b</anchor>
      <arglist>(ListRow *lr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy_range</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ae5ab63f7ab983559ee88ae5f6f68d226</anchor>
      <arglist>(size_t first, size_t bound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a898a7a5d111805038fa2170aae3f12ad</anchor>
      <arglist>(ListRow *lr, int row)</arglist>
    </member>
    <member kind="function">
      <type>ListRow *</type>
      <name>create_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>abe56d5310e9a621c95e4ef82264e4f6d</anchor>
      <arglist>(uint64 row, bool with_size_groups=true)</arglist>
    </member>
    <member kind="function">
      <type>ListRow *</type>
      <name>lookup_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a8b97c2cf458149bec8cf78979ddb5016</anchor>
      <arglist>(int row, bool maybe_cached=true)</arglist>
    </member>
    <member kind="function">
      <type>ListRow *</type>
      <name>fetch_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a5dee3fe16fe247d7234bf47eb0c7ce75</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a226ce1804aac5bf5ff4db2b317b49c3e</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_layout</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aec2f9890a8d889bffd9634319575ffe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>scroll_row_position</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a01fb97960ff8af25e63f2cc3585530ff</anchor>
      <arglist>(const int r, const double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vscroll_layout</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a05c3cee28f47f6d34c0858465e011df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vscroll_row_position</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a094749fc17e3e2c3398c9e453da02580</anchor>
      <arglist>(const int target_row, const double list_alignment)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vscroll_row_yoffset</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a8dc99d4ea9a84b5ce50bc4c90cbb9a5b</anchor>
      <arglist>(const double value, const int target_row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vscroll_relative_row</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aacac8ca8e131a1979633ba4c71d48ce0</anchor>
      <arglist>(const int src_row, int pixel_delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pscroll_layout</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a822953e7369c1463c038ac9c526a286e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pscroll_row_position</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a9b3bc366f48b488ae427235c0ef917dd</anchor>
      <arglist>(const int target_row, const double list_alignment)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>abf5cf30ac9b0751e6af77dc525b835a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>change_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a40ddf53a36399e4efe8fa3f518954402</anchor>
      <arglist>(int current, int previous, bool toggle, bool range, bool preserve)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>key_press_event</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a3b1ef30fd7eb31050574c6b4a998d0a2</anchor>
      <arglist>(const EventKey &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>button_event</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a0811f51d21316974e88e845f280b3de8</anchor>
      <arglist>(const EventButton &amp;event, WidgetListRowImpl *lrow, int index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handle_event</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a2d8b8b822750fded81ff6004dfa6109b</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>row_event</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a27447f1cd38371994883d1a57cc869c4</anchor>
      <arglist>(const Event &amp;event, WidgetListRowImpl *lrow, int index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a8262eebb5d96a7932517edd8c67b87fb</anchor>
      <arglist>(ResetMode mode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a180d56b429521ef8f2c9a6ced2ec81cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>move_focus</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a4ca5cf89f56430609ad6de1dac02023c</anchor>
      <arglist>(FocusDirType fdir)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>focus_lost</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a02718f681d34b2d88a29206749cc70ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a3e15b52bc0acf973c88bd001763fc41e</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>toggle_selected</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ad60ca648b8e6da3507bf9f468c0f2d0a</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deselect_all</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ac0c636c652cf43c4ef927ee6a686dbaf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayImpl</name>
    <filename>classRapicorn_1_1ListModelRelayImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ListModelRelayIface</base>
    <class kind="struct">Rapicorn::ListModelRelayImpl::RelayModel</class>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>ae4456af9903a874cebecf563403e942d</anchor>
      <arglist>(const UpdateRequest &amp;urequest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>a063c9e336cf74baa28d1c4bc171d1123</anchor>
      <arglist>(int first, const AnySeq &amp;aseq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ListModelIface *</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>a3fcdb981bdde0e4e3cde9dfda0f8913f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>ab73aa08e3830a6e25576d69856bc8517</anchor>
      <arglist>(int start, int length)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ListModelRelayImpl &amp;</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>a978c3c9466086a7fb7a21623d5c00d77</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MemoryListStore</name>
    <filename>classRapicorn_1_1MemoryListStore.html</filename>
    <base virtualness="virtual">Rapicorn::ListModelIface</base>
    <member kind="function">
      <type></type>
      <name>MemoryListStore</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>afa82b2a73ef14ff3f1d685d63e8e9711</anchor>
      <arglist>(int n_columns)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a31f408df0be55bea1ce554896ef40dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a74c9b31795ce0bd08f5cb5d29b9abb36</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a140a8297700e51f7531648a57c94872c</anchor>
      <arglist>(int n, const Any &amp;aseq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_row</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a2566256490b8593bdf93b1a3c02dc49b</anchor>
      <arglist>(uint n, const Any &amp;aseq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>ac8174e468b166a57be124430e5209709</anchor>
      <arglist>(uint start, uint length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Ambience</name>
    <filename>classRapicorn_1_1Ambience.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a0455f835ec97b848ad3be0d4bc4c3f4f</anchor>
      <arglist>(const String &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a883bcd188d9d4a0d5e97d8f942752821</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>aa4203ad59ff1c50960c3e79f62679489</anchor>
      <arglist>(const String &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a495e0f54ab2d265faeb71b7d863f25ce</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a2164443e2dd834e7fb37bbe0a5c3328c</anchor>
      <arglist>(const String &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a7bfeabd9886936fb11f9d6761dc6a16b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a2f9fa53a4517e833c817d860127136db</anchor>
      <arglist>(const String &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>ab237acc876fc06aea1b633a5fbe6572f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a31048fe2839a50e8e144c1fa20c71577</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a6a4c3b3fa61a61b7fda68e3ef9c5badb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>ab4efd12ba982ed3a4d906db46a899f97</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a116fb2725b88aae992ae0f4a02b208fb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a19b0f331529da8774ea6c517bdd49ede</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a4fa9335541c4c59d7276f821a6e9e27f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a5054aa40681adb27a315c078da857da5</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a6bfdb4057f4fe8980a7c38e42f1481fd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>acf63a6e1b57a75f5ffaf9df6d01594a4</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a1363c21167757f23ced8f79fab606bfa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a5e5df394ada088fdeea5671f7f812c39</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a87eb8d86318935a7a5ef707cde2861c2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a76ba6f6ce6435864c7857e1d51f074f3</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>ab589d3c2c10b49508e3143d6a7262173</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a5c6ee803fdbbcce9aa1ef42f05dab657</anchor>
      <arglist>(LightingType sh)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a8ecd1631e08dc73f77fbec8a9d745b40</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a04897bf1ce2074e667ec93c8aa00fe63</anchor>
      <arglist>(const String &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>ada0138cbc17406020e282d5654c7bac2</anchor>
      <arglist>(LightingType sh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>aa9df5777c9c16caf1c9393a88b7e8e17</anchor>
      <arglist>(LightingType sh)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a085aa6a4b9400068e03244934c78f5c6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Frame</name>
    <filename>classRapicorn_1_1Frame.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function">
      <type>void</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>affb29643cd3336d89b48e77c78cf0646</anchor>
      <arglist>(FrameType ft)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a0a016c677668dc4822276402820ff266</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a21881251c6d756c4bef81a87219bb9f5</anchor>
      <arglist>(FrameType ft)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a72726ac2acdc5de8e5ad2521b8697984</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>aa54a830bfbcd02ffca423e28ec2c6ae9</anchor>
      <arglist>(FrameType ft)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a1fcc27b968ce357f2c5ebc09de4ad4ec</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>aacdbd35c69c6382617cf5fbd8de82f6d</anchor>
      <arglist>(bool ovc)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a7269e80d5bf41b1d1af46b98868b1b2b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a191b2ab50c3446e7c534f3a21c774e0e</anchor>
      <arglist>(bool ovc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Frame.html</anchorfile>
      <anchor>a094ddda88773f6c49fd5af0d1d7a559c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FocusFrame</name>
    <filename>classRapicorn_1_1FocusFrame.html</filename>
    <base virtualness="virtual">Rapicorn::Frame</base>
    <class kind="struct">Rapicorn::FocusFrame::Client</class>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrame.html</anchorfile>
      <anchor>a804e4e8e73984b423700d6de8c0d24ae</anchor>
      <arglist>(FrameType ft)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrame.html</anchorfile>
      <anchor>a03926c20c018c99d2401a5db3d1827a8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1FocusFrame.html</anchorfile>
      <anchor>a97b40c21334719ebcce916615970fc8f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::FocusFrame::Client</name>
    <filename>structRapicorn_1_1FocusFrame_1_1Client.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>register_focus_frame</name>
      <anchorfile>structRapicorn_1_1FocusFrame_1_1Client.html</anchorfile>
      <anchor>ae811fdfdc8cbbbe72953ccafde005e96</anchor>
      <arglist>(FocusFrame &amp;frame)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_focus_frame</name>
      <anchorfile>structRapicorn_1_1FocusFrame_1_1Client.html</anchorfile>
      <anchor>ac517fb6eb028309f1c8647c20a4a28f0</anchor>
      <arglist>(FocusFrame &amp;frame)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CPainter</name>
    <filename>classRapicorn_1_1CPainter.html</filename>
    <member kind="function">
      <type></type>
      <name>CPainter</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a3e392afedf4b6be7350aebcc810e2f70</anchor>
      <arglist>(cairo_t *context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_filled_rect</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a69297324510d3e9a19921939b60367e5</anchor>
      <arglist>(int x, int y, int width, int height, Color fill_color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_shaded_rect</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a84cd2f0e39b68b45016a402ca6cb817d</anchor>
      <arglist>(int xc0, int yc0, Color color0, int xc1, int yc1, Color color1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_center_shade_rect</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a8c396967e77877a9b9ed74aa294b7f43</anchor>
      <arglist>(int xc0, int yc0, Color color0, int xc1, int yc1, Color color1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_border</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a2956d72a1e1dfbadb556c0b3413d643a</anchor>
      <arglist>(int x, int y, int width, int height, Color border, const vector&lt; double &gt; &amp;dashes=vector&lt; double &gt;(), double dash_offset=0.5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_shadow</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a2936467181eac5e5496888bf1fba8776</anchor>
      <arglist>(int x, int y, int width, int height, Color outer_upper_left, Color inner_upper_left, Color inner_lower_right, Color outer_lower_right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_dir_arrow</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a5c5ff5a97149921b7881e9e703c7d6ae</anchor>
      <arglist>(double x, double y, double width, double height, Color c, DirType dir)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cairo_t *</type>
      <name>cr</name>
      <anchorfile>classRapicorn_1_1CPainter.html</anchorfile>
      <anchor>a37a7a91c533f32193d5f71ef419807ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Arrow</name>
    <filename>classRapicorn_1_1Arrow.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1Arrow.html</anchorfile>
      <anchor>a06dc7ffe2a4514808a0b214da398bb3c</anchor>
      <arglist>(DirType dir)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DirType</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1Arrow.html</anchorfile>
      <anchor>af973896bd215254ab423026c40f4a7a6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1Arrow.html</anchorfile>
      <anchor>a3daa52054ad906930a25456412f4d978</anchor>
      <arglist>(SizePolicyType spol)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SizePolicyType</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1Arrow.html</anchorfile>
      <anchor>aef5051d44305e38d343eb6981d3f6dc0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Arrow.html</anchorfile>
      <anchor>a0a821f8d79c2bdf42e817ee5755b852b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DotGrid</name>
    <filename>classRapicorn_1_1DotGrid.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <member kind="function">
      <type>void</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a0d537ce4aef594077a25d7d51c8b3ccc</anchor>
      <arglist>(FrameType ft)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ab4e1cd62a260cf75f83dc9dd9be4dae5</anchor>
      <arglist>(FrameType ft)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a438bbf50e247841c56f3327031925590</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a17830242efe3847bf2eaad1ee77c838a</anchor>
      <arglist>(FrameType ft)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ad6d21c8a0c8b269dd950586c5d03205e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a22a7ef0c0b08a0801c79a97590d993ef</anchor>
      <arglist>(uint num)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ac9c32cd9cc3b760406b12b0cc8fe266c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ab22d420c85f6ce490f8faf88a416123b</anchor>
      <arglist>(uint num)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ae27c20c905b227d7022bd14564fa2eb7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a950443d0407c1ddaed488d0a61c43b22</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ad7b94b8f32f1200c0115f3179f28f287</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ae76cce7df98bfb95bd3359c059137463</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a5eda13da639430d2eac1a8190f26de93</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a98230576ce2dd37bf8ab18cb8f38e85c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ad1952772c1699bb90a71f8ad48642381</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a7737ba567946f4e4db1a0035974b5751</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a9d0e43ea5f4e78397ae5261efd48f9d0</anchor>
      <arglist>(uint c)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>aee4bce28b67a480a829e246b7d462e47</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableImpl</name>
    <filename>classRapicorn_1_1DrawableImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::DrawableIface</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a16760e4f3a91040d66039493a855daf3</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a714c2fb5720eab9be237d0965bd0efd8</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a943c2e64bc293364f9d385d6c32701fc</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>ae3211adea9a79cbca0e4a6a7211a1c9b</anchor>
      <arglist>(RenderContext &amp;rcontext, const Rect &amp;rect)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a376b68e3efa6584579eddbf06668d489</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::PixmapT</name>
    <filename>classRapicorn_1_1PixmapT.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>ab7252b0bdad0f9d080b068e84ed0ebc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa7fcf450a245c429f723d5af92f33334</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>abe25377954eba0cc7358fa6a6825e6fe</anchor>
      <arglist>(const Pixbuf &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aec110b66fe52972209eb3a35fdbf100e</anchor>
      <arglist>(Blob &amp;png_blob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>affc5ebed571d22f443942e48b107a9b4</anchor>
      <arglist>(const String &amp;res_png)</arglist>
    </member>
    <member kind="function">
      <type>PixmapT &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa8009887f91249ce190cdbe448767c5c</anchor>
      <arglist>(const Pixbuf &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>ae3d106da3b257a930285cf53d0f183a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a6f2bd245b2d7fe7922586dd6a3e0d790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a3842c5973a8df30727d5b3d9c16c50c3</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_resize</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a2c8afdc63eab0b4ebb4a277691eec0a3</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>const uint32 *</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a21aefbffb61262b9df670581bd877ec6</anchor>
      <arglist>(uint y) const </arglist>
    </member>
    <member kind="function">
      <type>uint32 *</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>acbc024d4e42adb795d4e2ccb441c35be</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>uint32 &amp;</type>
      <name>pixel</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a1ccc3db4e7dc55775afeb89ad383a9cc</anchor>
      <arglist>(uint x, uint y)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>pixel</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa15508bee0ed2cde1b5eb3c8bb234197</anchor>
      <arglist>(uint x, uint y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a8f1eb35037128147b6910649eff230b0</anchor>
      <arglist>(const String &amp;filename, bool tryrepair=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a333b9b37e0bda4a057b79a54978a9bbd</anchor>
      <arglist>(size_t nbytes, const char *bytes, bool tryrepair=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>af516f7c39c5c92e4772cc2ac3499f038</anchor>
      <arglist>(const String &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_pixstream</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a12d8c1ae9652bd8ed20e805692a1aa77</anchor>
      <arglist>(const uint8 *pixstream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attribute</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aeba5b0057a0ce1517e133e2fe29e5e98</anchor>
      <arglist>(const String &amp;name, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>get_attribute</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>acb6c095ea4a894816f99376691107eeb</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a947047c2078651671b96b9a1747ec22a</anchor>
      <arglist>(const Pixbuf &amp;source, uint sx, uint sy, int swidth, int sheight, uint tx, uint ty)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compare</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a2ed747fa7ab29ddf1c60ebfbfb58aad9</anchor>
      <arglist>(const Pixbuf &amp;source, uint sx, uint sy, int swidth, int sheight, uint tx, uint ty, double *averrp=NULL, double *maxerrp=NULL, double *nerrp=NULL, double *npixp=NULL) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Pixbuf &amp;</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aedeefed9dc14405d7503b2b9bbf896bf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Point</name>
    <filename>classRapicorn_1_1Point.html</filename>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a3c55aa38c3187db88af4756f4878567d</anchor>
      <arglist>(double ax, double ay)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist2</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a0d656c57ed880474ec5be6a56719f0f6</anchor>
      <arglist>(double px, double py) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>aef8138e74e41cc30a211b97d3b6a391f</anchor>
      <arglist>(double px, double py) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist2</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a1fb82594a07dcc605e3971c8e602257a</anchor>
      <arglist>(const Point &amp;p=Point(0, 0)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a2624378a035bf688ee6e9877d4c5e169</anchor>
      <arglist>(const Point &amp;p=Point(0, 0)) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator+</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>ad070f690390e0e64bdc9471fb4e2718d</anchor>
      <arglist>(const Point &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator+</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>aa6f2c7dd6348e12c28cbd05c71587ca1</anchor>
      <arglist>(double delta) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator-</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a8e62f4b01b4751d848fee01d10a2031b</anchor>
      <arglist>(const Point &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator-</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a8ef65ec0c452972c0b86b85cee23cefe</anchor>
      <arglist>(double delta) const </arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator-</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a2f9278b7e42a292721ef6536a044bbc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a821b333ced1010c34919f99257c40274</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>ab3d35364988db22a41ad3ed4bf17b0ba</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a3f3028a06fb1322d366f4be592fcf99c</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>abfcba12af43c97d9166bf4a4ffd32683</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a3d13d342b10e9351fa45fadf07a1b37c</anchor>
      <arglist>(const Point &amp;p2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>ab27165e39deb6adfa316ed315b5c9c2f</anchor>
      <arglist>(const Point &amp;p2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>abf6252c95c250183005e615922aba8a8</anchor>
      <arglist>(const Point &amp;p2, double epsilon=0.0) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>a71db31e805bfda6a2ae8681fe56d3831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classRapicorn_1_1Point.html</anchorfile>
      <anchor>aa9f56bec59058f9f05b251e0c50fdef9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Rect</name>
    <filename>classRapicorn_1_1Rect.html</filename>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a0e0e9b71846712202f1a62b8fb8d42d1</anchor>
      <arglist>(Point cp0, Point cp1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a05832f88c7c200b9a1c507ca96c580d4</anchor>
      <arglist>(Point p0, double cwidth, double cheight)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a0a91f32a0e74ed779295d1981eaa8abe</anchor>
      <arglist>(double cx, double cy, double cwidth, double cheight)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a05c3fd3cbf75e9905d58fdca4951b5ca</anchor>
      <arglist>(const IRect &amp;ir)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>assign</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a7011165e7512c107cb91eeff02a06311</anchor>
      <arglist>(Point p0, Point p1)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>assign</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>aa7315c76c1cb653fcff33c91ec9d8349</anchor>
      <arglist>(Point p0, double cwidth, double cheight)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>assign</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>af2968b4d8457a20c82413cb70dfba131</anchor>
      <arglist>(double cx, double cy, double cwidth, double cheight)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>upper_x</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a5f714ee66f727e904ff7accbd90815e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>upper_y</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>aebbc502a0fc78833db611665924df942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>upper_left</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a4f6dea9d4009f98fa2cd668006658937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>upper_right</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a16e3becc0a06f931718499c969175823</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>lower_right</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ab050720b59b7d57eac5e97a9235affae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>lower_left</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ae964ddcd737ca96ce825cde7b907d8ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ul</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>add274258d35b4ff798ca960182a6e4af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ur</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ab52db3ef6ae1eccebdb36bfe29832e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>lr</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a2dc83f2724678062356afce46f499871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ll</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ad70c878668a73449f4a3c238b7c868b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>diagonal</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a76bd1c7b70bf862e2d50177bec7b77c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>area</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a4625140dc4eb3b7dfca5d32637bd14dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ul_tangent</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a5811541bc9f35fbfb85d97cbbc49da3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ur_tangent</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ab909d0b20e8533a3534a49d71aafda68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>lr_tangent</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>af56ac5578d60b1838ce31e88438eb7e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ll_tangent</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a71eeaa5fac41422daa974d03822ee641</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>center</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a64051d53c8ede88e4c7cb8a9210ddc47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>north</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ae5a4809c6edb36951445c48a1be6cf29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>north_east</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a4918b22f208c7f23ac258dfcc56eb186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>east</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>af16cbe752f1c477c753077d6ed4017db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>south_east</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>abd26c6790edc28d25cedbf4b2a725156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>south</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>acb6e9744e44112b19f1165dec22a0264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>south_west</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a6b324731e8e504576bb6fc80d5ef86bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>west</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a22cfef78f61d119bbbce5312a0f3536e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>north_west</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a5bb2a93643f99a832edaa0c5d5dfd973</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a0699602e8d41f5521611d03eb652bea6</anchor>
      <arglist>(const Point &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ae0ee7d08cd4e47bf3bc12a665e4f0363</anchor>
      <arglist>(const Rect &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a5e1f2385f56eefe7329c688610b3305f</anchor>
      <arglist>(const Rect &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>adb526176cbb63e7026836a42f61e87b5</anchor>
      <arglist>(const Rect &amp;other, double epsilon=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist2</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>aeecbc9f364ed6eb310a5246f66700d79</anchor>
      <arglist>(const Point &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dist</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a9d1efaf11835c3dca0959e63d5731c81</anchor>
      <arglist>(const Point &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>rect_union</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ad1c25e88b52ca49bfc47fd33f6c165ef</anchor>
      <arglist>(const Rect &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>acbd4e1cf7d4b3e8c80f4c0ea3f4970e4</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>add_border</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a1ab9125438f8e6085ab2b035d49430cd</anchor>
      <arglist>(double b)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>intersect</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a11154da5d35cdd5a7f09574b22b69684</anchor>
      <arglist>(const Rect &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersecting</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a9babd96eeb2e935b383b420521d8f85d</anchor>
      <arglist>(const Rect &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>intersection</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a3183244b1b01d8ab640509395f4fa1e5</anchor>
      <arglist>(const Rect &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ace1d96c729a587ad24dd09e2cb4dfb56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>anchor_point</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a78c29826020d83593d70603cbcef217b</anchor>
      <arglist>(AnchorType anchor)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a8372a0a854b60369cbda2b366d00f3e6</anchor>
      <arglist>(double deltax, double delty)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>operator+</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a06a0df260e02f086dacad4c59848ebdd</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Rect &amp;</type>
      <name>operator-</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ad4bcb2f43c62bae8be285f51a921af6d</anchor>
      <arglist>(const Point &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a10a9fbb76ec9652234765e54a03665a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rect</type>
      <name>create_anchored</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>aa1a62ae480f422c0dcc73f8815bd672e</anchor>
      <arglist>(AnchorType anchor, double width, double height)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>ab23bdd2c7633788c450e2715eb978e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>af719d5125c6b2d384ffaae3497ed4a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a038043ad65214ae49c3b5f8b6557a95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1Rect.html</anchorfile>
      <anchor>a93339f95766716bbab815fc6d9d86767</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IRect</name>
    <filename>structRapicorn_1_1IRect.html</filename>
    <member kind="function">
      <type></type>
      <name>IRect</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>a221c99a789b79d588c7b032062d0c30c</anchor>
      <arglist>(const Rect &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>IRect &amp;</type>
      <name>operator=</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>ac4fe3bf0a86812666e5fbf2d05e6f3ae</anchor>
      <arglist>(const Rect &amp;r)</arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>x</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>a10a5737916043d69a82c17576043b01c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>y</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>a8254d811e46a4ef28abb94b3c30a18a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>ad429cad5683a9fb94478fa5cef319ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1IRect.html</anchorfile>
      <anchor>a9f365a232561950a89d4bb6e90fa1a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Color</name>
    <filename>classRapicorn_1_1Color.html</filename>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ada589f339194c66d36806caff1af82d4</anchor>
      <arglist>(uint32 c=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a8e384020101488ee9180d3eb08825c4c</anchor>
      <arglist>(uint8 red, uint8 green, uint8 blue, uint8 alpha=0xff)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>premultiplied</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a3fe66fe2c43c682a946d3013a61f765c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a9645785995dd5a7698142d7988a51995</anchor>
      <arglist>(uint8 red, uint8 green, uint8 blue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a6c5c762d0603b608125616c9cae6374a</anchor>
      <arglist>(uint8 red, uint8 green, uint8 blue, uint8 alpha)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>rgb</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a14a850a791cbb5e425858ae04e2acda3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>argb</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a1294fedb66efe691e48079eaefccfa40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>red</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a665e8fd815a091e93ceb926e651ad06c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>green</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a9e95860435a99a0299391944d2975de3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>blue</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a73668c8eeb7b26eb94df4ee440a85f70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>alpha</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a92c12f0591d7490a03ae3c2866f079e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>red1</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ab73e7f1d925e3df453a3c9e4915dcbf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>green1</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ac4a5818a451c84613632b4186b0dbaf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>blue1</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ada8e317eea0b1166542621ff3957cd7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alpha1</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>af5fe8eed9feb88fc89776d445280365d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator _unspecified_bool_type</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ace27bdf15a3cf56aec5e02e356ebcb8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>alpha</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a7b3e832da5c39c9007fa4c96a78cd544</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>red</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a00fee22d490ccfe601e507a8a245a076</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>green</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>af0d5ed02e7f4e376e639e5416bdc5c23</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>blue</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a9e82bf187cd3ff9afb8a29f42032e550</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_hsv_value</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a0664ea07419bed1491fc590ada68ac0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsv_value</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a76d58305cfab6766d32bf0b738985adc</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_hsv</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a74c6cbe6ec12001d7b55733346c430f8</anchor>
      <arglist>(double *huep, double *saturationp, double *valuep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsv</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a047aac008ce8234f666c61bdce8dcf2c</anchor>
      <arglist>(double hue, double saturation, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tint</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a07c6d55e25de6499ab59d03d336648db</anchor>
      <arglist>(double hsv_shift, double saturation_factor, double value_factor)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>channel</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>aa61223d687c7c1293ffd9a84094fbcf3</anchor>
      <arglist>(uint nth) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channel</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>aadb96fabcf9e4785c3d28ea693b3c838</anchor>
      <arglist>(uint nth, uint8 v)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a30b7b22a320e4c32c7c0d7db81bc9318</anchor>
      <arglist>(uint8 lucent)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>combine</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a205f870f912d2409412720edfb2abe4e</anchor>
      <arglist>(const Color c2, uint8 lucent)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>blend_premultiplied</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a14cc05cb6774d4eb5adb415c8fdee555</anchor>
      <arglist>(const Color c2, uint8 lucent)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>add_premultiplied</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a74caf82137a5e276ca2787cf11486b95</anchor>
      <arglist>(const Color c2, uint8 lucent)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a4f695198012acf7fe703f31c62f8ba3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>IMUL</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a1c18d0777015b8f15b63ff198f994d50</anchor>
      <arglist>(uint8 v, uint8 alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>IDIV</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a916335abd8c0fa7a7b23652e04a3d0d9</anchor>
      <arglist>(uint8 v, uint8 alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>IDIV0</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a7e3efc8ac961e0cd381cf65d8b5e5e4a</anchor>
      <arglist>(uint8 v, uint8 alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color</type>
      <name>from_name</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>ab3ebf408d4910f296c7b400fd653b0c3</anchor>
      <arglist>(const String &amp;color_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color</type>
      <name>from_premultiplied</name>
      <anchorfile>classRapicorn_1_1Color.html</anchorfile>
      <anchor>a58fb44520f5eb00d9f4916edaa87be0a</anchor>
      <arglist>(uint32 pargb)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Affine</name>
    <filename>classRapicorn_1_1Affine.html</filename>
    <class kind="struct">Rapicorn::Affine::VectorReturn</class>
    <member kind="function">
      <type></type>
      <name>Affine</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>af5b5ea9aa84f700f676efed9809dc7aa</anchor>
      <arglist>(double cxx=1, double cxy=0, double cxz=0, double cyx=0, double cyy=1, double cyz=0)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>add720bd9433febd40de334c05ca9b06f</anchor>
      <arglist>(double tx, double ty)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a879c4642e055697858404bd2cab7809c</anchor>
      <arglist>(Point p)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>set_translation</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aa61c49e8559540b1071d0fac2fbf572b</anchor>
      <arglist>(double tx, double ty)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>hflip</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>adba149c64cad08ddffabf17f94c5b474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>vflip</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ac892fb1a0b3d2aeb6b7bde3a4fef3981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>rotate</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a7edf3df5980a49b79c94c30be926f5d5</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>rotate</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aee5522710804759ad71bcba3842762fb</anchor>
      <arglist>(double theta, Point anchor)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>scale</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a570081fc99610ac6467a14960ebb6095</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>shear</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a3ad2b169d67ee3b884c73e28c0b7ece4</anchor>
      <arglist>(double shearx, double sheary)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>shear</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ae4e4e308982ce72c7690bdfb7650bd88</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>multiply</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>af29f71196c143b86f03699dfba6ec99b</anchor>
      <arglist>(const Affine &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>multiply_swapped</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a2580c5ac0d42cb1d3a9276ea1981bba7</anchor>
      <arglist>(const Affine &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>point</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ae8fc32e5c8b2ac84482313743ab67a5c</anchor>
      <arglist>(const Point &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>point</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a93b0eac82c25b32d5c1025c25ef470e7</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a8e85503de51346d41ccd02c68941dac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>expansion</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ab321d4eaeb96291a330cf34ed9469f18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hexpansion</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a898eada47f48515d0612890459ad0a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vexpansion</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ab7ae339b3e28c0f6fff0f0d221ad7369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>invert</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ae1d7005a323cf7adb9ca2eecf7d3b35f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ipoint</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ab516b91d10d5451b8843ae962d0e7460</anchor>
      <arglist>(const Point &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>ipoint</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a3d41a5c1ef8f2b5b4d8b92d4e6d62972</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a058e97ff5237bce1ab04f6ad86e9c075</anchor>
      <arglist>(const Point &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Affine</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ae7e25b7d2e12ec80112ef107366e4309</anchor>
      <arglist>(const Affine &amp;a2) const </arglist>
    </member>
    <member kind="function">
      <type>Affine &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a82d5640507521fa454fd3292557b9c7f</anchor>
      <arglist>(const Affine &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_identity</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aa60037878516e065d0c993a07d69cc5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Affine</type>
      <name>create_inverse</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a6d2ec40c0de09b27298a97b91412b536</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a356ec7b4380eece36f06a91cd1e619db</anchor>
      <arglist>(const Affine &amp;oa) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a45380529fb84e9dd9847aad78328f375</anchor>
      <arglist>(const Affine &amp;oa) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a141649b9536645a9275e0e100fad91ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorReturn</type>
      <name>x</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aa37e83cef87f27debc625dec12cb5f0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorReturn</type>
      <name>y</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ab102009351bf909199a3f33c30520e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Affine</type>
      <name>from_triangles</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a525285b36e7dc6c74b5540c2d20bdd9f</anchor>
      <arglist>(Point src_a, Point src_b, Point src_c, Point dst_a, Point dst_b, Point dst_c)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xx</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aabc267a25a85909c11baa4f61ff04887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xy</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>ae338e4c0223801e66c6ec9e97dc71843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xz</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aef4dc4703a1c1d87d98c6c69afc889bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yx</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a0bdf082dc54184514ae06532887d4a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yy</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>aafdfe597e26f3f18cf500801baa7f3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yz</name>
      <anchorfile>classRapicorn_1_1Affine.html</anchorfile>
      <anchor>a8c25978c8911c5673e4e7292cebfd528</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Affine::VectorReturn</name>
    <filename>structRapicorn_1_1Affine_1_1VectorReturn.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>structRapicorn_1_1Affine_1_1VectorReturn.html</anchorfile>
      <anchor>aa5782f505fd1c7b43effa0c56588b3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>structRapicorn_1_1Affine_1_1VectorReturn.html</anchorfile>
      <anchor>a3274fdafdf9a11a8aaf54efa4621ba45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>z</name>
      <anchorfile>structRapicorn_1_1Affine_1_1VectorReturn.html</anchorfile>
      <anchor>ae9ba4516e77c997b356f5807c265de88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineIdentity</name>
    <filename>structRapicorn_1_1AffineIdentity.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineHFlip</name>
    <filename>structRapicorn_1_1AffineHFlip.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineVFlip</name>
    <filename>structRapicorn_1_1AffineVFlip.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineTranslate</name>
    <filename>structRapicorn_1_1AffineTranslate.html</filename>
    <base>Rapicorn::Affine</base>
    <member kind="function">
      <type></type>
      <name>AffineTranslate</name>
      <anchorfile>structRapicorn_1_1AffineTranslate.html</anchorfile>
      <anchor>af019dcc0146740a43ba6c8119556ea11</anchor>
      <arglist>(double tx, double ty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AffineTranslate</name>
      <anchorfile>structRapicorn_1_1AffineTranslate.html</anchorfile>
      <anchor>a7cf93b5cd69e00e2d35f18f085324673</anchor>
      <arglist>(Point p)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineScale</name>
    <filename>structRapicorn_1_1AffineScale.html</filename>
    <base>Rapicorn::Affine</base>
    <member kind="function">
      <type></type>
      <name>AffineScale</name>
      <anchorfile>structRapicorn_1_1AffineScale.html</anchorfile>
      <anchor>aa5433363f7c75df993f670edc7897f7d</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineRotate</name>
    <filename>structRapicorn_1_1AffineRotate.html</filename>
    <base>Rapicorn::Affine</base>
    <member kind="function">
      <type></type>
      <name>AffineRotate</name>
      <anchorfile>structRapicorn_1_1AffineRotate.html</anchorfile>
      <anchor>a81065ac78cd3ea72b40d20d387b26213</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AffineRotate</name>
      <anchorfile>structRapicorn_1_1AffineRotate.html</anchorfile>
      <anchor>a0b6b4e586891316563b05deaa71d82a0</anchor>
      <arglist>(double theta, Point anchor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineShear</name>
    <filename>structRapicorn_1_1AffineShear.html</filename>
    <base>Rapicorn::Affine</base>
    <member kind="function">
      <type></type>
      <name>AffineShear</name>
      <anchorfile>structRapicorn_1_1AffineShear.html</anchorfile>
      <anchor>a3fda1dd1e71f6c73a2403ed9d02f53f3</anchor>
      <arglist>(double shearx, double sheary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AffineShear</name>
      <anchorfile>structRapicorn_1_1AffineShear.html</anchorfile>
      <anchor>add9eccd6d2f1acb9897e62bac3cb65cd</anchor>
      <arglist>(double theta)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Region</name>
    <filename>classRapicorn_1_1Region.html</filename>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a57e950bd1d141fdaa9cfa3b320eefa78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a0d1158717f5a6bf701200cedc8b6ba95</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aba2e2eaaa7005793e5c8aa69e7fd6561</anchor>
      <arglist>(const Rect &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a9e5746c79c91fee044d219b5595b553b</anchor>
      <arglist>(const Point &amp;pt1, const Point &amp;pt2)</arglist>
    </member>
    <member kind="function">
      <type>Region &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a99a70889891c30cd2963be320f26e8e0</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a81bf1bc74231767059c93c91ae05c384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a58cc7698e767a0206d8dc9498684679d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a3efef81ec02f32fce7671b4d00ca0334</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cmp</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aee108e0168d436533632f64cdcb3dd62</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a85e83245ee46391f062beab504a8e652</anchor>
      <arglist>(Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>extents</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aa5770c3982acbfb592e965548ecf64f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a1c8e61a0e4da8ed2ab470ca2f40ab195</anchor>
      <arglist>(const Point &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a8d715a18f5844efe01f37e34aa9c8a96</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>ContainedType</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aa71dc805f526e2adbbf4be32182f1e7a</anchor>
      <arglist>(const Rect &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>ContainedType</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a7f0c9678881610015347d3795749fd3e</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_rects</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ac2b57916f8f1f6079fe696f04db258f7</anchor>
      <arglist>(vector&lt; Rect &gt; &amp;rects) const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>count_rects</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a53a8e6f4746fbb6a8638ab33d359bc2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a71266432f73195c4a9a6a55c739dd5ef</anchor>
      <arglist>(const Rect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ad0821799463434ff4b834465c54d2459</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a08ab3da8619a1137eb2c845cbd5689ae</anchor>
      <arglist>(const Region &amp;subtrahend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersect</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a98ddf419b24ba9363477776f83b5aa36</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exor</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ad9b4bd7f10b156379f1847fd0fc99d94</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a2e93ba835d5511160481c2dd25353d2d</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affine</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a745584c628f22d02f0923f01a27ad0f0</anchor>
      <arglist>(const Affine &amp;affine)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a2affcc61d9e1308790af81e075e5791a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a984aec9119c33f9c38ca7541a6ca329b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ab6dd63809a3554a93f29f7d6e2d40531</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScreenWindow</name>
    <filename>classRapicorn_1_1ScreenWindow.html</filename>
    <base virtualness="virtual">Rapicorn::Deletable</base>
    <class kind="struct">Rapicorn::ScreenWindow::Config</class>
    <class kind="struct">Rapicorn::ScreenWindow::Setup</class>
    <class kind="struct">Rapicorn::ScreenWindow::State</class>
    <member kind="enumeration">
      <name>Flags</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODAL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9af9843fb8f6da0acb30024f96363b68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STICKY</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a55128642c743a4165902737a8c2e718f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VMAXIMIZED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a2d778de80af7407e6d3f772beac79852</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HMAXIMIZED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a8dca84f31717fbb368476f7c4fac0bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a13de66f98cab289dfa347bcf42e36f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SKIP_TASKBAR</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a7b0e72a530975d2d5520ab448ea383da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SKIP_PAGER</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9acca16924a42fe4720c5cdada9445add5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HIDDEN</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a85b2a14bbf8d1c14a437fe8b61dc675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULLSCREEN</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a4300bfee4475a97ef8f64c0cd39d21bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABOVE_ALL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9adaa5ece4b3dd88c98a1bb1216c40cfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BELOW_ALL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a9f733d067b7df4a9c80d359f93acb963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTENTION</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9aaf93dad4ec822019ef1c3411fad1062e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS_DECO</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a718a1f125a9d0067a8f211e206fe1f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECORATED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a4f38a605d30a9086be7fb4028a5a3dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINIMIZABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ac6a7bcf4bedaff5c10db038c65d422da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAXIMIZABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a1711cfcc746e238e3dbbba8e4059663a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a56422c9b6011334d791a0ad2eefb89e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEPT_FOCUS</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ad7459de7cdc2769aaa2434e9191a2d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNFOCUSED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ab4bc1f7628a660953b5e43f14af3288d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICONIFY</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a43f1ad40a619495dd1ebe37c2537593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>get_state</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>aa565727a7db315e5358b8c87ee61c0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>aaa05966a29db85f2fc6d5e8085fae8fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a1cdbd404032e77624338254e5ad42029</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5fb7cf5d462fd63cd7d19f7231380f5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ac87eba9e37da9c733e755cdbad759b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a1d5fbf6a81c97d151bf15f830852dbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a795afb0c10daee069268e61a5c6a7d47</anchor>
      <arglist>(const Config &amp;config, bool sizeevent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blit_surface</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ab5d90b5ef8627f98550d439f29f898f3</anchor>
      <arglist>(cairo_surface_t *surface, const Rapicorn::Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_user_move</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a275816d7f9c1a880044e48affacece0c</anchor>
      <arglist>(uint button, double root_x, double root_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_user_resize</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ab499c5e9518a6b130044d3dbf23e2f1a</anchor>
      <arglist>(uint button, double root_x, double root_y, AnchorType edge)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>pop_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a98e950d83cd0d6a35405248c75c2e701</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a0731e6b63a2b1893b2ddcf87e653d402</anchor>
      <arglist>(Event *event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5b6f921b11e21ec195164d755ba51fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event_wakeup</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a3cd4fdee9123512e7477370e07e59dfa</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;wakeup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peek_events</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>affd8b6cfe94e9c3d4b0c8cadf3535e17</anchor>
      <arglist>(const std::function&lt; bool(Event *)&gt; &amp;pred)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>flags_name</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5991ad1a47651a704250fb682199ffb7</anchor>
      <arglist>(uint64 flags, String combo=&quot;,&quot;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual ScreenDriver &amp;</type>
      <name>screen_driver_async</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a34e2c6438e23b6a04a0ed6fad79a669b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>enqueue_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a15f48a74e41fb070a028a07efeecc56d</anchor>
      <arglist>(Event *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>update_state</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a185f20b0210b3ca672eebef20c722d67</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_command</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a2e24dc945e7249a376e0247b6f319c91</anchor>
      <arglist>(ScreenCommand *command)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::Config</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1Config.html</filename>
    <member kind="variable">
      <type>String</type>
      <name>title</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>adcd6a2f5d638cec9cfc94ef23c431ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>alias</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>ab37410d698b3e52f3857e9cead16b48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_x</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>a9bda2936cc6a1f1da443f1f93500fb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>a7a46891c562145b9a27cdb3912965664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>request_width</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>adf8dd0905cb25a21de191420d2f42b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>request_height</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>ac0783fd42143b4929e6b3644ad55bfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width_inc</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>af9e9141f73a695df7f7d8e5d1f1fac41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height_inc</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>a8d82e03827c69d63860359f0a4d1324a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::Setup</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1Setup.html</filename>
    <member kind="variable">
      <type>WindowType</type>
      <name>window_type</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>aedb7180c0c9f78e7f45dc5585f48c911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Flags</type>
      <name>request_flags</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>acb4bb6f8fd34ee680c5d3db56bbe7135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>session_role</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>a70508c24b8e76af5f0525af7b3e74203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color</type>
      <name>bg_average</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>ae13870ba94aa87ce2092cc642883046b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::State</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1State.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ac089f35be2b3c963e629bd221241e23e</anchor>
      <arglist>(const State &amp;o) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ae71715d39ebc1e0148f9b6f3c346c2a0</anchor>
      <arglist>(const State &amp;o) const </arglist>
    </member>
    <member kind="variable">
      <type>WindowType</type>
      <name>window_type</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a18b481b7c6003b4ca71c0c1a78442733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Flags</type>
      <name>window_flags</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>accffef589d670dce3b74d0f69cc43452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>visible_title</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a3e5d4ae18cee855cbef3f6221e8bbaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>visible_alias</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a128ace33c7c382f8cb51249b55b241cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>aab74e612b26644c792fd68a919198a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ac0826b7088ca3991ec1289ff4a001411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_x</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a44fcdff4d56b48cc14c0fbe1699f12d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ade5e8337ed067eb90428ec67dec3beec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>deco_x</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a438b2a2347ed4abd86d9245166ce2b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>deco_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>abc8f37c323c5e5bc48d156eb790dd6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a08040744ca2a4dbfbb30a81c2310644e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>active</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>af78220632c4a15a7a5c57f1be4d9e036</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenCommand</name>
    <filename>structRapicorn_1_1ScreenCommand.html</filename>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a29ca75077f4871f911561e925c42b098</anchor>
      <arglist>(Type type, ScreenWindow *window)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>afc3a8b15b868e51b38cd2aa14348d161</anchor>
      <arglist>(Type type, ScreenWindow *window, const ScreenWindow::Config &amp;cfg, bool sizeevent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a79fa306a2a1f68b0efa755d3fd9d6f70</anchor>
      <arglist>(Type type, ScreenWindow *window, const ScreenWindow::Setup &amp;cs, const ScreenWindow::Config &amp;cfg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a7f645ef852411f7ac843ff2304d7fa2e</anchor>
      <arglist>(Type type, ScreenWindow *window, cairo_surface_t *surface, const Rapicorn::Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>ac711a3d07c24136f1e4ead1bb46e2175</anchor>
      <arglist>(Type type, ScreenWindow *window, int button, int root_x, int root_y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScreenCommand</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>ad48e3d7cff4b0eaad2245b416f724ae9</anchor>
      <arglist>(Type type, ScreenWindow *window, const String &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>reply_type</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a82cd7a1ef6bd23305cf7f569cb425685</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>af192fe0210d6d6f057821c2d07c6b9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScreenWindow *</type>
      <name>screen_window</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a9318ad7c06605c2a357255a1b02246a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Rapicorn::ScreenCommand::@24</type>
      <name>@25</name>
      <anchorfile>structRapicorn_1_1ScreenCommand.html</anchorfile>
      <anchor>a5d5af6295e03020fffaf457e0f67b605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::ScreenCommand::@24::@26</type>
      <name>@27</name>
      <anchorfile>unionRapicorn_1_1ScreenCommand_1_1@24.html</anchorfile>
      <anchor>a72832bf1513846970dfdbdb9fca37271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScreenWindow::Config *</type>
      <name>config</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@26.html</anchorfile>
      <anchor>a680031ac0ba4b6cc448797530bb281e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScreenWindow::Setup *</type>
      <name>setup</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@26.html</anchorfile>
      <anchor>a6f0f3c6c95c6ea1beb4149c3313e7cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::ScreenCommand::@24::@28</type>
      <name>@29</name>
      <anchorfile>unionRapicorn_1_1ScreenCommand_1_1@24.html</anchorfile>
      <anchor>a45891ca465d54105485a49e04fe0c01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScreenWindow::Config *</type>
      <name>dconfig</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@28.html</anchorfile>
      <anchor>a156f1f2c23bcfc55ce9eb0824bbe75e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>dresize</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@28.html</anchorfile>
      <anchor>ad1cf3df46dad5da46685332ec8833ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::ScreenCommand::@24::@30</type>
      <name>@31</name>
      <anchorfile>unionRapicorn_1_1ScreenCommand_1_1@24.html</anchorfile>
      <anchor>a5e46dbd73b85dc2602fd8fbb6f1fdb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cairo_surface_t *</type>
      <name>surface</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@30.html</anchorfile>
      <anchor>ab6b14a849a50990b1d43110951aa9aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Rapicorn::Region *</type>
      <name>region</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@30.html</anchorfile>
      <anchor>ad49bce7c1625a58bdca9ba434bd1a3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::ScreenCommand::@24::@32</type>
      <name>@33</name>
      <anchorfile>unionRapicorn_1_1ScreenCommand_1_1@24.html</anchorfile>
      <anchor>af87d5140f61d9b1db7a231c17aa9f610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>button</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@32.html</anchorfile>
      <anchor>a31ffc7d3aeebcdcd77da8e7e4e098972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_x</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@32.html</anchorfile>
      <anchor>a2f382ee565d0c42d0666456853d6e3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_y</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@32.html</anchorfile>
      <anchor>a2c5c5350ab2a3231c6ac1a952df42d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::ScreenCommand::@24::@34</type>
      <name>@35</name>
      <anchorfile>unionRapicorn_1_1ScreenCommand_1_1@24.html</anchorfile>
      <anchor>a61892dd0219d478851ff3155515ad5d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String *</type>
      <name>result_msg</name>
      <anchorfile>structRapicorn_1_1ScreenCommand_1_1@24_1_1@34.html</anchorfile>
      <anchor>a26498faffe1e3cdc3bace5b9ad371d4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScreenDriver</name>
    <filename>classRapicorn_1_1ScreenDriver.html</filename>
    <member kind="function">
      <type>ScreenWindow *</type>
      <name>create_screen_window</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>ac2851c2222b86763077c2c936cd111f5</anchor>
      <arglist>(const ScreenWindow::Setup &amp;setup, const ScreenWindow::Config &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScreenDriver *</type>
      <name>retrieve_screen_driver</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a2b31731266360cb3e19d0ffc9ad000e1</anchor>
      <arglist>(const String &amp;backend_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>driver_priority_lesser</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>aaf9ff7379663d9166051fe8b0ca8ed1c</anchor>
      <arglist>(const ScreenDriver *d1, const ScreenDriver *d2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>ad29baed35dc02f41aeb63d375631af60</anchor>
      <arglist>(AsyncNotifyingQueue&lt; ScreenCommand * &gt; &amp;command_queue, AsyncBlockingQueue&lt; ScreenCommand * &gt; &amp;reply_queue)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ScreenDriver</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a174bf7d8b45e4649309d03aa5107df03</anchor>
      <arglist>(const String &amp;name, int priority=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_command</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a8d2d541e623808ec8317bd7662ccac67</anchor>
      <arglist>(ScreenCommand *screen_command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>open_L</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a71a42bccb0739851e7006e16c938afd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>close_L</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a95dd2f266a8b4464b50a51509abe9906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScreenDriver *</type>
      <name>sibling_</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a5a9a8a1df908adfc739da829a5e8e639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>name_</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>af52a88ba5035803618afd06474c85510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>priority_</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>abeddc7b2080474cf2579d871beb73ef7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenDriverFactory</name>
    <filename>structRapicorn_1_1ScreenDriverFactory.html</filename>
    <templarg></templarg>
    <base>Rapicorn::ScreenDriver</base>
    <member kind="function">
      <type></type>
      <name>ScreenDriverFactory</name>
      <anchorfile>structRapicorn_1_1ScreenDriverFactory.html</anchorfile>
      <anchor>a517380ccb8f5db59019b35c959360036</anchor>
      <arglist>(const String &amp;name, int priority=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>structRapicorn_1_1ScreenDriverFactory.html</anchorfile>
      <anchor>abb61011c48029dfd71720ab4df57de04</anchor>
      <arglist>(AsyncNotifyingQueue&lt; ScreenCommand * &gt; &amp;command_queue, AsyncBlockingQueue&lt; ScreenCommand * &gt; &amp;reply_queue)</arglist>
    </member>
    <member kind="variable">
      <type>Atomic&lt; int &gt;</type>
      <name>running</name>
      <anchorfile>structRapicorn_1_1ScreenDriverFactory.html</anchorfile>
      <anchor>a2669b4c8fcb7ce6da4a0ddccdb4545a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollArea</name>
    <filename>classRapicorn_1_1ScrollArea.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <base virtualness="virtual">Rapicorn::AdjustmentSource</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>xoffset</name>
      <anchorfile>classRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>aa40d5fa0c59c9cf86d46a88b49eb700d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>yoffset</name>
      <anchorfile>classRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>ad6db12eafb4c580b7ea3f9a7873c7452</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scroll_to</name>
      <anchorfile>classRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>aca8ef33236d9801aa03bf8799d7c31a5</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollAreaImpl</name>
    <filename>classRapicorn_1_1ScrollAreaImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ScrollArea</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Adjustment *</type>
      <name>get_adjustment</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>a9e8ee76ad21738a4973c57e56129f299</anchor>
      <arglist>(AdjustmentSourceType adj_source, const String &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xoffset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>a80c10c43240d2dc9ebbf76d08e4855ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>yoffset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>af3aea66e51ef9e54eb5ee61f90675dd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scroll_to</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>ac612255a7b1321d3ba779de343f0bc0e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelIface</name>
    <filename>classRapicorn_1_1ListModelIface.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <member kind="typedef">
      <type>Rapicorn::Aida::Signal&lt; void(const UpdateRequest &amp;urequest)&gt;</type>
      <name>Signal_updated</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a39a7d46b77fb5720da7e10e12a292b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a06d9b8762a47fa9b462a956e403a1233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a9c0112fa1beb7811eaf6ce8e74cc6244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>ac51ed0ee908f1ee201d854957e7d0a19</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a36031515a1d347a075be13d9543ff60c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a3c164a22c1ee7fa841e7bd2b7c7007b8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rapicorn::Aida::Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>ae16e513da76e59caee5e210dbf022112</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a7085ab1764c5b64958c7a2f3637ebf56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal_updated</type>
      <name>sig_updated</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a1d38c2e8ba9c08d803f7cbc1fd0f4760</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayIface</name>
    <filename>classRapicorn_1_1ListModelRelayIface.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <member kind="typedef">
      <type>Rapicorn::Aida::Signal&lt; void(const UpdateRequest &amp;urequest)&gt;</type>
      <name>Signal_refill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a431a9ae0bf94ba9889d052e4a268f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a070838420e84da1222688f933d7983f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>aea6afc7c6f69106b8d5aa1eae4b00c4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a91609f573fd637b8c894a4e19dd5ee26</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a92ab5200743bc77ccd33bf0dbfbc1734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ListModelIface *</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a2942553b7562f7cf01f24b7a74b5db55</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>ac467400f7dee03d06cb93f9c59986548</anchor>
      <arglist>(int first, const AnySeq &amp;asq)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a53243ea54a1cbc0f6ce65562b003986f</anchor>
      <arglist>(const UpdateRequest &amp;urequest)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a32be039a489a54de3adf403808b15f51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Signal_refill</type>
      <name>sig_refill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a9ecc7073dd4a8ea54fec5cdc252c8c42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetIface</name>
    <filename>classRapicorn_1_1WidgetIface.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>abe9c4f069bd49f1621c59c2744ebc6c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af55d631e569ee54ecbf321fca1a33b5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a29ad8a1b64717413d3ec5598877e47e4</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a3c62e1605da8461dfbad1eb2b81d247e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ade058d656417eca030612248fb14ac80</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a5d7886b37c3d7379cb5fbe2cc2af6d7e</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a00a3bdc5974cf66bda3a14e9ef695750</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae5cf219baae03bf4855431fb9abebc56</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a48db13dd07489d581d37f6b58b95f250</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a127bd1fae7d81a1ad6c5f6c63d5dbf84</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aaca6fcd0d2b3381aef3800dea43de255</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aa52911b711aeac836b0a470a09dc7b45</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ab7d785b59da5649773628e622bfab9a8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae65c8f5da4817462eb928dca5033f800</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae1eedc671b859340c259bd663b5fa4ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aff98b8f4f022f9ea92a56107c5529134</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7e73ce2794d2d232ef5812af0ea9f753</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a11a047267652405c654221dfd6237af1</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae792fdf57d9142a56e6afe748ece8e5c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7c913afb9d9850f626dbb3b36e00a87f</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afe1ef30f03bc7cda3610dea3fdc4d4d4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2d89d5dd92e1ac9f323aaf1e3c41ea20</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a441e10ff642e5bcb4cc7035b922ca28a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae3aee6c8ee758099ba027b361aafb3c0</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ab8dcb1979ef21d7c626f8021408b29f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a5db453fda23aa830c52a37fd75605c6b</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a3d185e623ce8dfdf5a91653387537775</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afa4d9e1373e47552d6c8545e61afddc4</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afd54891636472e35a8f771dfca18d258</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a12c4f533d8805bdccc0b0339d899a5e5</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2ca58f915de9093fdae11262798f8e98</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a606dc72ffe37ed3159b9f9ab44e0c0d7</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a29dc1aeeeebe027b5e98873ac961dace</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7f90231127d1856b4ff3bdf4df4b3aff</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a6b3cd63ecb925563b6b7d9b1460c117b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2c53083ec4e30920d2969633826b076b</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a64dcf392ba0e27a67e2bcd0600088121</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af19a6f55463cef3a3b31083cbf5cacb2</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad0c843b3b4c1c679b9881efdc5646276</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a4eb85d69a416f0f81a21a85d1297481d</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a1fe4effbb3b0aba1ecf5751df2cd2b86</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a9a6297f1c9f78c2c9ab08ef5bf86a354</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aa653b5647439a1ea028cbcc6b8a6898a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aca2261e8e5d6eecb67f2e082fd0b10c7</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae3af23cecc4cfe1eaec32cc67b85d864</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a03b9f6a7486b6b9f86c0c0e57f290a94</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ac9ce02323c3cb32cff9181cde7963826</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a0c26e42945b2f507bd2cdbc74b5941c8</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a60accdd6c5498f8ae78b674535d45bbb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae59c1f569d1e05440650cbe3e18c39bc</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a16bb6d16e8c323a8268d50f81c1181b2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a22c1a4e9e63c0415cd22b0b5404685e4</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aec25257ff86569745d741a41c0849e3c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a0e735afa8bb2eef254c98eb16488f66c</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>abcab2e530e416dadcc2702925178c53a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af5bcbc406fb916087ff3982869657cc3</anchor>
      <arglist>(ColorSchemeType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7e1dbe8df38481870c016c6bc117b3a2</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad207b0ab601eabe7834112d0aa21c2a3</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aee8fd54c3642e9c032b460fe0eb11a93</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7ee5dc67ae36b69357ca226b6cf1feef</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a4c89eea50f9c2ecc0ddd525f36f50176</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl &amp;</type>
      <name>impl</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a1f8534bfbd8a36587098a6f9b40c0d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WidgetImpl &amp;</type>
      <name>impl</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a659f395f0b28bc15920f83a7c8621bc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad764b61bb123ec1875c1be193fb5ad52</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ContainerIface</name>
    <filename>classRapicorn_1_1ContainerIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>a740b3921583ec2c0324b5af3afb3134b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>aa72863ea957c7a4d4f441c6e0eef42d4</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>a8404f563ca00ae7305d3328d2a964a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>create_child</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>a22a230763ca65da30f2831469e432e0b</anchor>
      <arglist>(const std::string &amp;widget_identifier, const StringSeq &amp;args=StringSeq())=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaIface</name>
    <filename>classRapicorn_1_1ButtonAreaIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>aca55909bdc39f4479284bd276893b043</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a1b3729f875b02a315c0f1fcdce040065</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>ae0b5c2463ca3f0d09ed6507aae977f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a16569dd0372145b09ecb68d511e3ee86</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a44877222570fe8d462c33e74d621ba7d</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a7a44732317968c2109dee300b166fa18</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a60bf6d488087f0bab2a32664c9e515fe</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>abc70e0cef810642df36f22e256cb874a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a1ded6be447c200102100ef1f6a9833c8</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableIface</name>
    <filename>classRapicorn_1_1DrawableIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <member kind="typedef">
      <type>Rapicorn::Aida::Signal&lt; void(int x, int y, int w, int h)&gt;</type>
      <name>Signal_redraw</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a2f0686fd2aff74e343d93cb885670d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>aa9dcff07b4e669136737aa609bb28c02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a7ab84c45016a68393f0602cc832d454a</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a62813550b26bcff7ec4c4a44e448a068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a9fe3c0661499aa840f4d071742acf1d6</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)=0</arglist>
    </member>
    <member kind="variable">
      <type>Signal_redraw</type>
      <name>sig_redraw</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a617d25203d119ebbfc4ee25d00d76d40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListIface</name>
    <filename>classRapicorn_1_1WidgetListIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>ab86fa9839ad58a313690616e1458dd55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a0c22042bf5a5541ab3f5c8e470fef389</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>af50dd9b5c66905ca48c67a0b4ec74c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a3c05fbcf4432d2b8f9c05268367dec41</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a4f812877bf628d1c5fbebb05333f1507</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a1b09e0a4f8f3adec4d3dde66f3b25da3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>ad82dfe9ce2b55a0cfc83e709c845177a</anchor>
      <arglist>(SelectionMode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a191f9ffc7f7e6c9d7de3a85e58e958b1</anchor>
      <arglist>(const BoolSeq &amp;selection)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>aec3db80d53fa5b0ef8776987005d5527</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a1f57c8348f4dcb101828e81a2fe7e251</anchor>
      <arglist>(int first, int length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a64ad771336a1bf78e101af01f8093c7c</anchor>
      <arglist>(int first, int length)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowIface</name>
    <filename>classRapicorn_1_1WindowIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <member kind="typedef">
      <type>Rapicorn::Aida::AsyncSignal&lt; bool(const std::string &amp;cmdname, const StringSeq &amp;args)&gt;</type>
      <name>Signal_commands</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>abc1b857ea52d52f8920a095c482f8dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Rapicorn::Aida::Signal&lt; void()&gt;</type>
      <name>Signal_displayed</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aca7b03cb40c3fde6139df26803509231</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ad3516cc66804f121a3893f030ee436f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a1bdf6c0dd11c0ea0c798f69a35bd2153</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>af7dfb0007279b5f1110f77e200d74f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a499ba6cbbefc6a0a1ab4dd5a1b6eae4c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a6bc733ee805a639396b6be83a91a3a5c</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae2765657cb8df58991d61ce3e80c1cfb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aea8a4a2169a1e2c3b0cfda89cb4cc3a3</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a74be6fe634afa12091fedcba755fc01e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a84a6a33587eb1e72d97f747134b93083</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae74ea8a8814a877061bb530f59ec3b3e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aaaf0274425cbfc26d24ffaef6b30fe61</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>acc9fb85290fae1c2e5cab93c6bfcb5fa</anchor>
      <arglist>(const std::string &amp;pngname)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a89a3c411d8ff0831b4cb93b6dce9160e</anchor>
      <arglist>(WidgetIface &amp;widget, int button, double xalign=0.5, double yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aa6063bb00c0c41a44e5d302f55c84e79</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>afa8946635980cc04608b006d0a945277</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ad325cc9ea3599ac183188d99bd111f8f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>WindowImpl &amp;</type>
      <name>impl</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a1a93dce4f863f367475dc154dbbcd563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WindowImpl &amp;</type>
      <name>impl</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a02557f49fd32a2c7cb4186ea81920246</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Signal_commands</type>
      <name>sig_commands</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a1f24fe9a73f57cb37bbb71f1ff5ed966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Signal_displayed</type>
      <name>sig_displayed</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae38e76ff1171686a9e580167d715d4c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationIface</name>
    <filename>classRapicorn_1_1ApplicationIface.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <member kind="typedef">
      <type>Rapicorn::Aida::Signal&lt; void()&gt;</type>
      <name>Signal_missing_primary</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a27e6596270edb4edced9c138254214a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::TypeCode</type>
      <name>__aida_type_code__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>aa2e5c31e796d03ebe439979d17bb77c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a6e85fe464208454c6a64d09494d551a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a17143d004f283d5beb71c2870e8f711f</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a126d8a9afa0b48532afe58d5f8a81a8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a08c3479f0802daf9fdeef8d632c2da4d</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, bool search_vpath=1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>ab2bb0084d9b7b8e17e9d8c7b3a611bae</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>factory_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a09455fce728868d0b7e80673fb7a72c0</anchor>
      <arglist>(const std::string &amp;factory_definition)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a1256784dc76394c3eb6cd1a2c7cd8bcb</anchor>
      <arglist>(const std::string &amp;defs_domain, const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowIface *</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a7c7a6a0e88eb9720a74e2aef31023f05</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq())=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a99fc91b875c53d532ec881328ff7a080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>af47090a14ba1c59e5e27cdb2d50dd67e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowIface *</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a98cc1b3e5cf738d1645eaf2b8c16e3ce</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a35c55474f01a6b445544d7b9ca059333</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>ac1d93ac4a894382eaf8821820a46d021</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ListModelRelayIface *</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a067699c49646bcf87942f30fc2ef3d08</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>aebf627351cfdb26e4f07aabaa23a7f6a</anchor>
      <arglist>(int val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a1b425010a105aa169e39b3fb9d0b4b2d</anchor>
      <arglist>(int val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a986616a3b73887894533f6f1245089fe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>adb8277a52e0400733c4b6fbe5e321af0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rapicorn::Aida::int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a08304892ac66c25b6c2fe700e12c87f2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rapicorn::Aida::BaseConnection *</type>
      <name>__aida_connection__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a6c01645a4cead8d88637de3dc1036c70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>xurl_add</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a6237eccdef5b35d268a3f68b69ee8ef9</anchor>
      <arglist>(const String &amp;model_path, ListModelIface &amp;model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>xurl_sub</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a8f733961f5e2128e0abafb382575dbfa</anchor>
      <arglist>(ListModelIface &amp;model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ListModelIface *</type>
      <name>xurl_find</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>ab7c43717254b490090fbb720683707af</anchor>
      <arglist>(const String &amp;model_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>xurl_path</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a151fecb43d353c0634695cb7c403aa8b</anchor>
      <arglist>(const ListModelIface &amp;model)</arglist>
    </member>
    <member kind="variable">
      <type>Signal_missing_primary</type>
      <name>sig_missing_primary</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>aa1b03e35d83f4e6cd74d65aa3600daf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdlTestWidgetIface</name>
    <filename>classRapicorn_1_1IdlTestWidgetIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a8b3fcc1a7cb7184e6d33552e36e107dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>__aida_typelist__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a910038e50751a45596410ff9653534cc</anchor>
      <arglist>(Rapicorn::Aida::TypeHashList &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>af4009ec3dcbc0cab7483b85888a3b981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ab6de3b4e6c469d6ba978de004ab1ec7f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a50cbc75bfc39f5180d74e50583808789</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a012168ea4665c9c2cf2a0bef9745a84e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ae81630169b3371176d184d77de214725</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ac987fa8286ffa7a1ed90f5476ee9b02b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>aa85646546a7010dc85a5b0413b4b2b64</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a2d7b2a1d527a604b69d35ce66f0882ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ac8ce5d9286292fdcf21c6887a20f3b31</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a2f2018156db5b8acaca1a5bff05b6f60</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a4f87c50c0dcc7ed6aa0ca23866094548</anchor>
      <arglist>(TestEnum)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Requisition</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a5b20f375bfdb6799892b59cab68198ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a718127755d29bc77c9964bc6f1b46de1</anchor>
      <arglist>(const Requisition &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>afa9476b636cb54cdaaab80415ebec0d6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a8e7a61261c09445c3dd94be05cb8a290</anchor>
      <arglist>(const StringSeq &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IdlTestWidgetIface *</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>acf8268d1fc9bb2021dbe14f63c1b73b2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a23afe9ffd5529c72e6e28fbcb15f1f92</anchor>
      <arglist>(IdlTestWidgetIface *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Sinfex</name>
    <filename>classRapicorn_1_1Sinfex.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <class kind="struct">Rapicorn::Sinfex::Scope</class>
    <class kind="class">Rapicorn::Sinfex::Value</class>
    <member kind="function" virtualness="pure">
      <type>virtual Value</type>
      <name>eval</name>
      <anchorfile>classRapicorn_1_1Sinfex.html</anchorfile>
      <anchor>a41588917d62baf8e75f00a7ad5141f2f</anchor>
      <arglist>(Scope &amp;scope)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Sinfex *</type>
      <name>parse_string</name>
      <anchorfile>classRapicorn_1_1Sinfex.html</anchorfile>
      <anchor>aed640388f6394c6cea0f667dc431aec4</anchor>
      <arglist>(const String &amp;expression)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint *</type>
      <name>start_</name>
      <anchorfile>classRapicorn_1_1Sinfex.html</anchorfile>
      <anchor>ae69a411a1b1f837abbf110a1d5268346</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Sinfex::Scope</name>
    <filename>structRapicorn_1_1Sinfex_1_1Scope.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual Value</type>
      <name>resolve_variable</name>
      <anchorfile>structRapicorn_1_1Sinfex_1_1Scope.html</anchorfile>
      <anchor>af47c26b800b7dc7a34dcce88b91df58a</anchor>
      <arglist>(const String &amp;entity, const String &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Value</type>
      <name>call_function</name>
      <anchorfile>structRapicorn_1_1Sinfex_1_1Scope.html</anchorfile>
      <anchor>a7b27d9777e5772e5f1dd6dae2d285d81</anchor>
      <arglist>(const String &amp;entity, const String &amp;name, const vector&lt; Value &gt; &amp;args)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Sinfex::Value</name>
    <filename>classRapicorn_1_1Sinfex_1_1Value.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isreal</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a5a69f331a1fea79f90cfedd04114d49d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isstring</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a17abd7e57449a486ce818d9a196fa451</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>real</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a57f7ebbde7cd413b2dd362bd3ba44364</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a466c2fbca12d22f45abe8c68c18e93a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>asbool</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a23bc030bce02c1f5873dfd919aa028db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>a219e3a02c21523ee74b61fcb8215edf9</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classRapicorn_1_1Sinfex_1_1Value.html</anchorfile>
      <anchor>ad29d6a84c206e6e1d6bfb281f9b40b0b</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SinfexExpressionStack</name>
    <filename>classRapicorn_1_1SinfexExpressionStack.html</filename>
    <member kind="function">
      <type>uint *</type>
      <name>startmem</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a1caf3ed8c1ee6129933cfc43cd17da91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_or</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a08831c9522c8fed8949f8ff59fa9b983</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_and</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>ae26acad48b9c1bf3c062aa72588d6df1</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_not</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>ab9071b29ca0b6461123b0258f8bbe5e8</anchor>
      <arglist>(uint ex1)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_neg</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>aeee32017cb85dc8f80ec7729f1ef9d71</anchor>
      <arglist>(uint ex1)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_pos</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>acfaaa5af42c3232e84a96b0377debc41</anchor>
      <arglist>(uint ex1)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_add</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a0551ba8637acfc31e1fb31be1a9e2bc9</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_sub</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>acf98e6c94dcd909ae2bd19e0a9abb7df</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_mul</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>ac5f002833534735f42095f160042945f</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_div</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a52b2e3d556ab2944219dce159602c885</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_pow</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a5830d40239df22f1018a13a7dffce6de</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_eq</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a720f44686313b84c2bae78185260c1f5</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_ne</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a17987e4f988c8a7e31d8fe3762b4981a</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_lt</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a5043eeebc629103e58d6b9232dd0b325</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_gt</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>ad6a5c6ebb3734485b3f2b4f74922cc84</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_le</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a9e31bf74342460393a41dd0f90d0bf8f</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_ge</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a5eb012f119ebe531b542f691bdfc24f4</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_arg</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a1d8bc7ec3a50f6f459fbab99bbbfcbff</anchor>
      <arglist>(uint ex1, uint ex2)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_double</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a756701972e7ebc50aa81ef625cf8be67</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_string</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a955d05e4d0212c7c1f180197ffc9ea00</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_variable</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a336d098c3749056836bc9a9d5aac9a72</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_entity_variable</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>af87ecdc3c541006aae6e19f0c18b6bd1</anchor>
      <arglist>(const String &amp;entity, const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>push_func</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>a22193001ee419f13738bfa6ba518793b</anchor>
      <arglist>(const String &amp;func_name, uint argx1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start</name>
      <anchorfile>classRapicorn_1_1SinfexExpressionStack.html</anchorfile>
      <anchor>aa25dc8dc56520017d48b5fb6fc521770</anchor>
      <arglist>(uint ex1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SizeGroup</name>
    <filename>classRapicorn_1_1SizeGroup.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>active</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a8da84dfca439ff83c0e171d0edca9322</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>active</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a050d6957f7da48628bbb581a2009f372</anchor>
      <arglist>(bool isactive)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_widget</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>ae5e52f265bd7a9a9d5cefa263cd10d87</anchor>
      <arglist>(WidgetImpl &amp;widget)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_widget</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a3447dc152af81cba7e9a0599b85ba287</anchor>
      <arglist>(WidgetImpl &amp;widget)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SizeGroup *</type>
      <name>create_hgroup</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>ac8f9e177884a4bf1cf032747993e3a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SizeGroup *</type>
      <name>create_vgroup</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>aab3aa5e9ccc6ceaab86241b449387a27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>size_request_widgets</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a725bd46fd9dcf6547d854c62ee914202</anchor>
      <arglist>(const vector&lt; WidgetImpl * &gt; widgets, Requisition &amp;max_requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Requisition</type>
      <name>group_requisition</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a60d6de287f4d4d21b2a0e4cb385e5656</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>delete_widget</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a4d58d1a56d3780fa1262fe74e5c15a64</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>invalidate_widget</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>a54cd46d3f72d895f14225f495c62c43f</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Requisition</type>
      <name>widget_requisition</name>
      <anchorfile>classRapicorn_1_1SizeGroup.html</anchorfile>
      <anchor>ae7bd70e276dc9a1518e7dc92d6850290</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderArea</name>
    <filename>classRapicorn_1_1SliderArea.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a32d36c9f40610fdf9565584bca81e362</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a7ad99967033fc78cc107d1d69d8bf2c8</anchor>
      <arglist>(bool flip)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Adjustment *</type>
      <name>adjustment</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a38589d7bc6372ea466c6580290aab469</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>adjustment</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a7c642e0a2770853620853137cc1f2b34</anchor>
      <arglist>(Adjustment &amp;adjustment)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AdjustmentSourceType</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a4308447beac57401a73f2f138868d84c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a92b52705b0cffb4dc7f2e15cb03b7edf</anchor>
      <arglist>(AdjustmentSourceType adj_source)=0</arglist>
    </member>
    <member kind="variable">
      <type>SignalSliderChanged</type>
      <name>sig_slider_changed</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>ae11f92bde0bcc8c4164d1c0b1d4e713e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>SignalSliderChanged</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a1610a29e49ff40840e282f3626b00fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const CommandList &amp;</type>
      <name>list_commands</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a37b1f65ac712c981214ad67e67f49bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a59c92a880afcd54080658747e3227522</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>control</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>ab3c54afbdab33fd4b1edcdd5b5e72b0c</anchor>
      <arglist>(const String &amp;command_name, const String &amp;arg)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>slider_changed</name>
      <anchorfile>classRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a252ac3e8bbe0c527b6e7135c1b0607d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Stock</name>
    <filename>classRapicorn_1_1Stock.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_string</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a7da1de615544e0d6a794db48c172ec27</anchor>
      <arglist>(const String &amp;stock_id, const String &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_label</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a5002ebc001a206e0a6f8e7a8c4405144</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_tooltip</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a3b344992156f1308600b1747eefe690b</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_accelerator</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a8757cb1cf7c0ea053cc7e52598659322</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>stock_image</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a394dce7bc9ed9b1186e57cb9fae37adc</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Table</name>
    <filename>classRapicorn_1_1Table.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a9da2d120c5e154ab2608e8fc31885052</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a6e06e052f90e98dc200dd169c7282031</anchor>
      <arglist>(bool chomogeneous_widgets)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a1ab936e96848d2fcae1043c3fcf6183c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a00de2ab91e46681335c0f318ce7142b1</anchor>
      <arglist>(uint cspacing)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>ac120c47319cbdaf66fd74f9282aa6cbf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a2d7fddf00283bba7c2339735ded4e259</anchor>
      <arglist>(uint rspacing)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>afb9ea42af829f0b88dcd6a99582405e5</anchor>
      <arglist>(uint n_cols, uint n_rows)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>get_n_rows</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>ae63c7722fcebbb751734b1b97b05e80c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>get_n_cols</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a4790095e6fd352e9e980afbefb44e9bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_row_used</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a28f1e34d76854fc911c1842ac0d62854</anchor>
      <arglist>(uint row)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_col_used</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>af00597b94b4cc3f8faebf906fe1f264d</anchor>
      <arglist>(uint col)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert_rows</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>aa1e42f4e63ab7f6ca243b367ced43934</anchor>
      <arglist>(uint first_row, uint n_rows)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert_cols</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>aac3fbb877b6966dbf6bdc354ded64b53</anchor>
      <arglist>(uint first_col, uint n_cols)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Table.html</anchorfile>
      <anchor>a1beb370f022c0b076d5fd8ff0542637b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TableImpl</name>
    <filename>classRapicorn_1_1TableImpl.html</filename>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <base virtualness="virtual">Rapicorn::Table</base>
    <class kind="struct">Rapicorn::TableImpl::RowCol</class>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>acb543c2614f9caa69c5b133243d6b913</anchor>
      <arglist>(uint n_cols, uint n_rows)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint</type>
      <name>get_n_rows</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a1f474ae8a10ca695da80bb9578718f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint</type>
      <name>get_n_cols</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a9fa8c5426a8629575edbd6f201f90cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_row_used</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>aaf6f5e63901ec01bbca1eda0899ea4b3</anchor>
      <arglist>(uint row)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_col_used</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>af7c6943e388dd5bb74dacedf47f23a05</anchor>
      <arglist>(uint col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_rows</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a6e1dbe3209be38aa1f7f9b9d69ea0090</anchor>
      <arglist>(uint first_row, uint n_rows)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_cols</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a76bacbad2799cd2e3866f956cf01895c</anchor>
      <arglist>(uint first_col, uint n_cols)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a19b632d8df8143edc3b9e498b763ccae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a934199844b5c2cb73341c9096720cf96</anchor>
      <arglist>(bool chomogeneous_widgets)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a644dd103a156e37b17957a4c84bdfeef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a51f33f1c1ff0402d214ed0466d0b0062</anchor>
      <arglist>(uint cspacing)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ae8ef6da44fce9fad88a8debc110befa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a82df29292398959403cd93082685be63</anchor>
      <arglist>(uint rspacing)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ad0830118ac5d194531463a8c2a12060f</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a93f93163d1cfa0ac58642e82ca698fb6</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>repack_child</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ac1e579b244e3fb4c7af696783b418843</anchor>
      <arglist>(WidgetImpl &amp;widget, const PackInfo &amp;orig, const PackInfo &amp;pnew)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestContainer</name>
    <filename>classRapicorn_1_1TestContainer.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a50210a2681029a27cb24a8acb4fc80da</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a41d2b9b89af0381e95490f5db502432f</anchor>
      <arglist>(const String &amp;val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>adb7abf58861d39dcfb75a3fcb631b17e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a70f63feae8f0a72ea6258efd64809119</anchor>
      <arglist>(const String &amp;val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ab7174e1a80c72b0d52f215fd3ef125af</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a69e5756e3597bbb91c76728b9d2b24e3</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ad57d92a95659397e45bc560a90a6464a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>add47fd6469d833c98d368d0f4121f6be</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a21d468f852ac4a551e71dcc61793a260</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>aaf96fa2e55200a6adb3ad815222127ca</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a248b8b6a718b09e0115436562cde4cd8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a5516f3347b2e869bcb33975536841356</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a8d5827fc4ee42e2aed18d21976394d8a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a8c603647901959be0f3c398a22303176</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a46efd4f6837d147ac256f641119bd6c7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>af9663a5ddb099a4e949ffd684d824912</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a5375fbedb5d87cecb0410129840d3fad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a81b08dc8996d1942a34068412a6a6824</anchor>
      <arglist>(double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>aac3786222070b4446c7f6909a623b079</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ac17a6b7ec716c9dedfe9ce5d9dc5c5da</anchor>
      <arglist>(bool val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a7c4281ef202fb15c772ed4a7ffeee92a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a4f37d04173c35219be33e27b5bb59434</anchor>
      <arglist>(bool val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a916ef3258f20481cd5a6cf0a67f79e92</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a812e691fa8915158337ee0fa703a0bcb</anchor>
      <arglist>(const String &amp;val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a2a6a8e69ceb81b3545575f486daf9242</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a3402539fdaf6df1f39ad03f5d01e0554</anchor>
      <arglist>(const String &amp;val)=0</arglist>
    </member>
    <member kind="function">
      <type>const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a77faa5938be92fbea8a4468932adcab0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>seen_test_widgets</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>aba583a047b20e370c8b5dbc81d7de343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void(const String &amp;assertion)&gt;</type>
      <name>sig_assertion_ok</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a03f79b528e138cee4b13226068f487f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_assertions_passed</name>
      <anchorfile>classRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a36bf47e05c31b7811a67959cbf3ad31e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestBox</name>
    <filename>classRapicorn_1_1TestBox.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBox.html</anchorfile>
      <anchor>a694c51cb030aa854811a7d62ce05b9ea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBox.html</anchorfile>
      <anchor>a64246a24c12d5d825cbc82e93cd22bb8</anchor>
      <arglist>(const String &amp;val)=0</arglist>
    </member>
    <member kind="function">
      <type>const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TestBox.html</anchorfile>
      <anchor>a0042e85f41ad813bf1db62c4c3eac376</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Exception</name>
    <filename>structRapicorn_1_1Exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>structRapicorn_1_1Exception.html</anchorfile>
      <anchor>a1a5860e97a5d6a93344b53cd575ba229</anchor>
      <arglist>(const String &amp;s1, const String &amp;s2=String(), const String &amp;s3=String(), const String &amp;s4=String(), const String &amp;s5=String(), const String &amp;s6=String(), const String &amp;s7=String(), const String &amp;s8=String())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structRapicorn_1_1Exception.html</anchorfile>
      <anchor>a5672696aafe9f31e31352a7aa93bb67a</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>structRapicorn_1_1Exception.html</anchorfile>
      <anchor>aff18db9c2fef3e1c031a626e830d689c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>structRapicorn_1_1Exception.html</anchorfile>
      <anchor>a372f7e4add32c054708db8d02d1be332</anchor>
      <arglist>(const Exception &amp;e)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::NullPointer</name>
    <filename>structRapicorn_1_1NullPointer.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EnforceDerivedFrom</name>
    <filename>structRapicorn_1_1EnforceDerivedFrom.html</filename>
    <templarg>Derived</templarg>
    <templarg>Base</templarg>
    <member kind="function">
      <type></type>
      <name>EnforceDerivedFrom</name>
      <anchorfile>structRapicorn_1_1EnforceDerivedFrom.html</anchorfile>
      <anchor>a067a8075154a2f06ec7b7217edd9580e</anchor>
      <arglist>(Derived *derived=0, Base *base=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</name>
    <filename>structRapicorn_1_1EnforceDerivedFrom_3_01Derived_01_5_00_01Base_01_5_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>EnforceDerivedFrom</name>
      <anchorfile>structRapicorn_1_1EnforceDerivedFrom_3_01Derived_01_5_00_01Base_01_5_01_4.html</anchorfile>
      <anchor>aa6534d3ca373573d8d538fa89a9472f5</anchor>
      <arglist>(Derived *derived=0, Base *base=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CheckDerivedFrom</name>
    <filename>classRapicorn_1_1CheckDerivedFrom.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_derived</name>
      <anchorfile>classRapicorn_1_1CheckDerivedFrom.html</anchorfile>
      <anchor>a1d36a2ac320e53737752c9cca560c978</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</name>
    <filename>structRapicorn_1_1CheckDerivedFrom_3_01Child_01_5_00_01Base_01_5_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Rapicorn::CheckDerivedFrom</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; Type * &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01Type_01_5_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Type *</type>
      <name>Pointer</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01Type_01_5_01_4.html</anchorfile>
      <anchor>a1b4de880f3555642861154e22ef92cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Type</type>
      <name>Value</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01Type_01_5_01_4.html</anchorfile>
      <anchor>ad2eed240a61082ba2aef85c47f6fe104</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; Type *const  &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01Type_01_5const_01_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Type *</type>
      <name>Pointer</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01Type_01_5const_01_01_4.html</anchorfile>
      <anchor>af8464fdef5a5a70f3cda17c5dfb2ad7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Type</type>
      <name>Value</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01Type_01_5const_01_01_4.html</anchorfile>
      <anchor>aa2aa320aa9c4ad065332958c4f7406a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; const Type * &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01const_01Type_01_5_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>const Type *</type>
      <name>Pointer</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01const_01Type_01_5_01_4.html</anchorfile>
      <anchor>a3291523dd59596881cb0809d08defb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const Type</type>
      <name>Value</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01const_01Type_01_5_01_4.html</anchorfile>
      <anchor>a667312c8764f24e383c681a8fa4601d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; const Type *const  &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01const_01Type_01_5const_01_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>const Type *</type>
      <name>Pointer</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01const_01Type_01_5const_01_01_4.html</anchorfile>
      <anchor>a4766064b2fe6c1dc7b18bc81d345ac1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const Type</type>
      <name>Value</name>
      <anchorfile>structRapicorn_1_1Dereference_3_01const_01Type_01_5const_01_01_4.html</anchorfile>
      <anchor>ad570161a10b9065ab41ed1975b8643a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::PointerIterator</name>
    <filename>classRapicorn_1_1PointerIterator.html</filename>
    <templarg>Value</templarg>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>ad0097d1661f721644ccd04d1127914dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Value</type>
      <name>value_type</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a703c57dae6b5dbb79355c457b6ed0674</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a88ae314f3d0ccfe9f6288f6bbff6b1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Value *</type>
      <name>pointer</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a497522dda4cd02a0436f1d78822771ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Value &amp;</type>
      <name>reference</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a0dcf12e84c3e1c19ff2ef838970aad2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointerIterator</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a22dad69fdbae7c50f305b10dd892b175</anchor>
      <arglist>(value_type *v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointerIterator</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a1be31b15f9f3e72542f04ffad08da5e0</anchor>
      <arglist>(const PointerIterator &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Value *</type>
      <name>base</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>afc2c7dd2287e2960f60e202cd55d61e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a48e24d64716c86759fe2c3294f6920cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>afc586a5260e64e5e790898b347b40285</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointerIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a87c877e9b1f6fddf58b909e75fd90623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a3ebc38d70da038ca125235f5ea24ccef</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a747777398fd088198554e8342ae66c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator</type>
      <name>operator--</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>aafbe1f4ecabc84562b5c56590cb425f1</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator</type>
      <name>operator+</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>ac283ed565dfd99875ce4f79fef181c5c</anchor>
      <arglist>(difference_type n) const </arglist>
    </member>
    <member kind="function">
      <type>PointerIterator &amp;</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a9464cbef7e424e79ad9ec54048dbd625</anchor>
      <arglist>(difference_type n)</arglist>
    </member>
    <member kind="function">
      <type>PointerIterator</type>
      <name>operator-</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>a04ee7bf10305cfe04343fc098ddbf9b4</anchor>
      <arglist>(difference_type n) const </arglist>
    </member>
    <member kind="function">
      <type>PointerIterator &amp;</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>aa18f4214e22e9803703ef70f25d5085c</anchor>
      <arglist>(difference_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>abf2752b79ba4e30e8471372e38627f98</anchor>
      <arglist>(difference_type n) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Value *</type>
      <name>current</name>
      <anchorfile>classRapicorn_1_1PointerIterator.html</anchorfile>
      <anchor>ac07c871409ce5f98702491f15452d5dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ValueIterator</name>
    <filename>structRapicorn_1_1ValueIterator.html</filename>
    <templarg>Iterator</templarg>
    <member kind="typedef">
      <type>Iterator</type>
      <name>iterator_type</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>acd24d39a12a921b04b55507e097dc6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::iterator_category</type>
      <name>iterator_category</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a45cb959871bf5815c728233e2958a19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::difference_type</type>
      <name>difference_type</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>af4bf8ce724ec5948c800e4fa11e6fdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::value_type</type>
      <name>pointer</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a91b6351a2d5320231ac16dd4fd3b04d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Dereference&lt; pointer &gt;::Value</type>
      <name>value_type</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>adddc28fa5d5f9e8afa2947d149d18c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a44d199f9a01085e435845955035e1047</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>base</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a10247a3e141e6bb9c800c2302ad0db44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a6a03e8ef527091ebec727f5ae4a5e830</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a9fda884932186eced96838d0d8c1e0ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ValueIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>aeda511d9331a338b6c89fbad2c5e15a1</anchor>
      <arglist>(const Iterator &amp;it)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueIterator</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a9abf3438ee04475dcc86bc5131b2af77</anchor>
      <arglist>(Iterator it)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueIterator</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a41e674aeb84a9174dd3d9ea242358c6e</anchor>
      <arglist>(const ValueIterator &amp;dup)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueIterator</name>
      <anchorfile>structRapicorn_1_1ValueIterator.html</anchorfile>
      <anchor>a5f50d2c6e0604d695d4501bdcb395f3c</anchor>
      <arglist>(const ValueIterator&lt; Iter &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IteratorRange</name>
    <filename>classRapicorn_1_1IteratorRange.html</filename>
    <templarg>Iterator</templarg>
    <member kind="typedef">
      <type>Iterator</type>
      <name>iterator</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>ad86cacecbbb1bcb4c7cfed31f41d5c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::iterator_category</type>
      <name>iterator_category</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a827a78dc95f0a2b0fc8cbe0e7dc000b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::value_type</type>
      <name>value_type</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>acdda1efe235a20ad490abad425272541</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::difference_type</type>
      <name>difference_type</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a9f96e36742ca52d95ee6a7d1fc4edc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::reference</type>
      <name>reference</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>ae0979e217674a4ba09902f06bc010272</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::pointer</type>
      <name>pointer</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>ae0861cfa5bb8e76637e49bbdc0dc8bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratorRange</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a0c9942de0370ca04bddcbd7348ff10a9</anchor>
      <arglist>(const Iterator &amp;cbegin, const Iterator &amp;cend)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a5721bd125deb0ef8dd5a89e20b99ba7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>ac17cf2b5a7a56a33cadf58da1d4572ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a5f34bbb9355a4d87062be1b46e88b7c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_next</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a911d13d6da32bf0c0647102b913c41b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a0bb10e3267d0ec78a6c70f000275ce69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>ad1e1809677e08320fc7d3d387467a515</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IteratorRange &amp;</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a922af637a3e8ff396b164402faf34bf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IteratorRange</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a8e48a2a80bcfa105ad38b24338f13f64</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a5b274e4ffd859ee1f659cfe4555ca5d8</anchor>
      <arglist>(const IteratorRange &amp;w) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1IteratorRange.html</anchorfile>
      <anchor>a69a462869fc3a63f9b682c94abf50cec</anchor>
      <arglist>(const IteratorRange &amp;w) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ValueIteratorRange</name>
    <filename>classRapicorn_1_1ValueIteratorRange.html</filename>
    <templarg>Iterator</templarg>
    <member kind="typedef">
      <type>Iterator</type>
      <name>iterator</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a2706ffb9bf01a76e14d1616129a7a466</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::iterator_category</type>
      <name>iterator_category</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>aa296cf48fcc52114250450e6d63b033a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::value_type</type>
      <name>pointer</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a901c6af0332422502f0fd3e52c017f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Dereference&lt; pointer &gt;::Value</type>
      <name>value_type</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a1dc82f09586f106f7767c4d937db918b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Iterator::difference_type</type>
      <name>difference_type</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>ac901638d8f65b9b0388a7489f4b6eaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a5941e5f1e5b82df3cd5bf9beb57802b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueIteratorRange</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>aa66c957d3d8581c6cf7a5da0527d694b</anchor>
      <arglist>(const Iterator &amp;cbegin, const Iterator &amp;cend)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a94857404d0c1f1328fdf24e2ca61f5a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>acf13823e1a0f99680e89352dc33cc8d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>afa64e60fe1f9663f236df5c315a20565</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_next</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>ad611364dcf906c9c71429e3adc4247a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a1c7fa1e807b583c091def8a884f2fa6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a78785c4d35ac2841f1d9ad812eb351ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ValueIteratorRange &amp;</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a8bd0b0781fbc94ff3e0a4e258009a793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValueIteratorRange</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a9ab6dbd2ece5a000ba945fdd71e46b3d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>a6bda1b50354c2be89313566ad56eae20</anchor>
      <arglist>(const ValueIteratorRange &amp;w) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1ValueIteratorRange.html</anchorfile>
      <anchor>ab3bfa7737e7f369149419290ec82d308</anchor>
      <arglist>(const ValueIteratorRange &amp;w) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Walker</name>
    <filename>classRapicorn_1_1Walker.html</filename>
    <templarg></templarg>
    <class kind="class">Rapicorn::Walker::Adapter</class>
    <class kind="struct">Rapicorn::Walker::AdapterBase</class>
    <member kind="typedef">
      <type>Value</type>
      <name>value_type</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a56294c943821f7d0f0826d3f59275f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a79870b29521563af7d4d24c923ad5021</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type *</type>
      <name>pointer</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>aeff342967ba2f2f7957c275fd6d875bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Walker &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a0b8a987d1318311407e83a7c11f1fecc</anchor>
      <arglist>(const Walker &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>af911f209636d43519f3add6c93747c16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_next</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a94abd8550a981790e5cd8c9179db4127</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>acbd849cf751bf1b4b69f69c7e02884b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>ac1db99a1284bae7ffb7d8cb074d00e34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Walker &amp;</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>af652e9ad4d6c4493bbb65015be0697ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Walker</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a78186a55d327c07e3ceeb17481110ed3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a5c0e2f3a66ab2c1d4c99733f9c0f5622</anchor>
      <arglist>(const Walker &amp;w) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a7f567eb15154156d294d0cbf91ab268e</anchor>
      <arglist>(const Walker &amp;w) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Walker</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a39b928986f3c64be2a35a231d971a97e</anchor>
      <arglist>(const Walker &amp;w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Walker</name>
      <anchorfile>classRapicorn_1_1Walker.html</anchorfile>
      <anchor>a8b359f3d6e15676dca6ff940e2856e4d</anchor>
      <arglist>(AdapterBase *cadapter=NULL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Walker::Adapter</name>
    <filename>classRapicorn_1_1Walker_1_1Adapter.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Adapter</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>ac5379b0e9ac8ca42cd309329e249b94a</anchor>
      <arglist>(const Iterator &amp;cbegin, const Iterator &amp;cend)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>done</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>a5d1ebbe32ff5018d4e892bbe2d13b1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>inc</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>a8ebfc59c5ef8225d2ee53dda5cc37dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AdapterBase *</type>
      <name>clone</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>aae516f4fe93c1760f2133857068d473e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>adad126d431d365bbae91c4893c88fdbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>equals</name>
      <anchorfile>classRapicorn_1_1Walker_1_1Adapter.html</anchorfile>
      <anchor>a5ddfdbefe697abca35c831d37e0dfa58</anchor>
      <arglist>(const AdapterBase &amp;eb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ViewportImpl</name>
    <filename>classRapicorn_1_1ViewportImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ResizeContainerImpl</base>
    <member kind="function">
      <type>void</type>
      <name>expose_child_region</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a6024c0f83f7e24a791b48462c554b923</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>child_viewport</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a14c8005f772eed7daf4d9f70144d5554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_scrolled</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a16ed2e4f6c9f26f635f4702de7d8a524</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Affine</type>
      <name>child_affine</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a91bfa970a4b99d019cf9c9d39d76ff00</anchor>
      <arglist>(const WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Region &amp;</type>
      <name>peek_expose_region</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a5b342643e29d0094038231534eed46b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>discard_expose_region</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>a50aeb106ddaf3a2666c48ae6689a2920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>exposes_pending</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>ac2a32e78211cd96428bb6c2556b45ba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_recursive</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>aac99ee82d57dccc0381081ee9facd101</anchor>
      <arglist>(RenderContext &amp;rcontext)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>acacc7c5c7e235ddf9c19628306ee4caa</anchor>
      <arglist>(RenderContext &amp;rcontext, const Rect &amp;rect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scroll_offsets</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>afb9ef9cc969101306f2b9c05dec3c43e</anchor>
      <arglist>(int deltax, int deltay)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>do_scrolled</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>ad9ffcb1e941c720c91915692f52ea511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>scroll_offset_x</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>af50d0a20881e9190fa4511e5691ab146</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>scroll_offset_y</name>
      <anchorfile>classRapicorn_1_1ViewportImpl.html</anchorfile>
      <anchor>ac67749915cecc5de7a41f6817e578077</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventHandler</name>
    <filename>classRapicorn_1_1EventHandler.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classRapicorn_1_1EventHandler.html</anchorfile>
      <anchor>a00c13a02e18f1aaca426c808d5f51bcc</anchor>
      <arglist>(ResetMode mode=RESET_ALL)=0</arglist>
    </member>
    <member kind="variable">
      <type>EventSignal</type>
      <name>sig_event</name>
      <anchorfile>classRapicorn_1_1EventHandler.html</anchorfile>
      <anchor>ab578829b622bb1b1459d4a4ccebbb22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handle_event</name>
      <anchorfile>classRapicorn_1_1EventHandler.html</anchorfile>
      <anchor>a4f7e46a1a3c3ffabe0a316da6c3cef66</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetImpl</name>
    <filename>classRapicorn_1_1WidgetImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base virtualness="virtual">Rapicorn::DataListContainer</base>
    <class kind="struct">Rapicorn::WidgetImpl::PackInfo</class>
    <member kind="typedef">
      <type>std::function&lt; void(WidgetImpl &amp;)&gt;</type>
      <name>WidgetSlot</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a677e737d15f27f35b427eedfc625fbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowImpl *</type>
      <name>as_window_impl</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a39d1d1c3f133ce3649d8c54d03a60f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ContainerImpl *</type>
      <name>as_container_impl</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4495c28fd97f5e3d59c8cef014dbe348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_all_flags</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4e60f3bdd8c5e20c8833eff24833e55d</anchor>
      <arglist>(uint64 mask) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_any_flag</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8d0d16683613197c6dc5801d6998dc1c</anchor>
      <arglist>(uint64 mask) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anchored</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa88584dc0f0392896f06c7c2beaed8df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8b7f066a2f2592e310cffa11ff9596ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae8307f1b633ad8e26689763d8676f82f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0c487b09ace321895a9f44be2799df68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a48cf4df812634588548d726ec5039b90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drawable</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a785692bbf11db5cecb32f2aa99122876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a21ace37d443b7fd987fb26531e877b6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0be5040b085786f3b102bf37becacbda</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aad8368bfe0977b6d2505d091cea890c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a066ccb3efdbdbbcb50aaa8da61da80f7</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa130c7e71b7e8421f515863c4f2a07d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointer_sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad3314653794bbdfd90daba44e7e07ff7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad5ec360e2b76d770798fe6b3c78a084b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0851d528739e6099a12dbaa3e60f34cf</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a64703f3a2eff11dc6392f0e92e2e7e23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8675777f6ce4c80640caad18b68c2785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a32204d3aa333e9df0ed15ae4e98480c0</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a81375e8e4d1d80274c325b6d08dee304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_default</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0e267299de937879287d7e942ec37b17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>grab_default</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4ab2de595e879a8a2165b34c59781d95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a17ffbe775e77b4339b0710c210bfb9b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af3daa2605e7877a796fdfe201c744ccd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>grab_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a2076007f542ef4b5da24b4ae4011aaeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a950625e9f9552e471bd7052c7344887e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>move_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad67a193971f5260cec06769cf0f8e231</anchor>
      <arglist>(FocusDirType fdir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae49375fd1c7e5fe3994674cabddff672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae6fe549f184198b0ee8b88620a907a3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a70a3fa38d5c896e7f7d6e6d81d16c540</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad6c2f6eb24301b58d86503b59204234d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a39aa921007e8839a8196b5c3f7b714c1</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a73651227c08652b73e929adb4df3565d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9b1dbfb64db1fe6792682974085940c6</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7e2934ba37a364a78daa4d57a26f6362</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a33230ec9aebc4d85ea018adcb262c43d</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9ab067132bc69991578b0f7eb5742e5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad04013d4fb3548f49bb63f0cc4c28982</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a609c0b7b47786c5b096126c47cffa5b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4aeec45ba67e1b8bc6e398adaf68ce8f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab10fdcdbac9da6fcd1c9e5c78a9125d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8ca033137bbdf955a0805d77ae40dd27</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>FactoryContext *</type>
      <name>factory_context</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad8a81029c58e4e7a22f55e34c6d0292e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factory_context</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5fcedb486e51f0c46c9cc1973129ce28</anchor>
      <arglist>(FactoryContext *fc)</arglist>
    </member>
    <member kind="function">
      <type>UserSource</type>
      <name>user_source</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>abfa47be78e3c64239d4a6c308b528b54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a75cc046b0a657394f712d3b3db75ea2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab92d1d9dd2021b3d143b9cb133b2753c</anchor>
      <arglist>(ColorSchemeType cst)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9c841068ab8f3070e8dcc3527095ed87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae42a95fa5b780588c189c59f68e7a10f</anchor>
      <arglist>(double w)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aef65dd2d8097e5e6a725f912878a0ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a614c3b2f6dbea03773b5a4704c1d39a3</anchor>
      <arglist>(double h)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>lookup_property</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>acb31ccfdda60b802bf7c1af630911152</anchor>
      <arglist>(const String &amp;property_name)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>get_property</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a10b05a9f4f4faaab5e0b61e059ae6238</anchor>
      <arglist>(const String &amp;property_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_property</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>adc8aa9428838a318e4e443eceb57fcb8</anchor>
      <arglist>(const String &amp;property_name, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_set_property</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a597203d80fcd9f064d97e931d1006893</anchor>
      <arglist>(const String &amp;property_name, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const PropertyList &amp;</type>
      <name>list_properties</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3e17ec6b6625733c0fd6acdf9db4b164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exec_command</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a33949d2a87f54be334881d861f7bb742</anchor>
      <arglist>(const String &amp;command_call_string)</arglist>
    </member>
    <member kind="function">
      <type>Command *</type>
      <name>lookup_command</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af97f5563a3782a071f78586df730e9d9</anchor>
      <arglist>(const String &amp;command_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const CommandList &amp;</type>
      <name>list_commands</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4f1cfe011f0dc7dc979f6904e64832f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ContainerImpl *</type>
      <name>parent</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af5faaab4ee61c48c1057731cac79557d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ContainerImpl *</type>
      <name>root</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3cc278136f6e5ad36a09d134f791b7d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ancestor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a35bf11f19153dc97ca31b228a0cbe7b8</anchor>
      <arglist>(const WidgetImpl &amp;ancestor) const </arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl *</type>
      <name>common_ancestor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a64c7471d9ae10ff62a93881a2f14c329</anchor>
      <arglist>(const WidgetImpl &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl *</type>
      <name>common_ancestor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a42e1617ed052f47c7cc8e2e3fccc9f08</anchor>
      <arglist>(const WidgetImpl *other) const </arglist>
    </member>
    <member kind="function">
      <type>const AnchorInfo *</type>
      <name>anchor_info</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a012cc82173f6ed90f57735b2871dcc4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WindowImpl *</type>
      <name>get_window</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af1ce9b5c8453dbcf100aa7d0ccecc0e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ViewportImpl *</type>
      <name>get_viewport</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a22a9a60f90d048ed986a4fe7d315de81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResizeContainerImpl *</type>
      <name>get_resize_container</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>abd0ef980da354d1f9b2f7403d66313fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>cross_link</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a15eb909235ce6d0c081d751ccbe560ae</anchor>
      <arglist>(WidgetImpl &amp;link, const WidgetSlot &amp;uncross)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cross_unlink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a1f4d34137aee9aa98ec3cfd0d21028e7</anchor>
      <arglist>(WidgetImpl &amp;link, size_t link_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uncross_links</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a74113b86247a898895a1fccd924d7f2e</anchor>
      <arglist>(WidgetImpl &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>afe867691600ee19c45078708a5cf5b5e</anchor>
      <arglist>(uint64 mask=INVALID_REQUISITION|INVALID_ALLOCATION|INVALID_CONTENT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_size</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9c63970b9f7e9bcfd8a7a4b46c3de4a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad7de22986088c16cf63c19bcb9253807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a72dd2947a0f3edb5bcfa17ba6934aaa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa5713c7a2b66aa16b78b2aa3cd443397</anchor>
      <arglist>(const Rect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab1620880ba5293772beedc6d6afadc8a</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_visual_update</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae86170cffdc0101971a2a0111a0198f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>force_visual_update</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a620910ca89ca680fe685138ee7bb10e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process_event</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4c897cecc831de5abf664eebc513a79e</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process_screen_window_event</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a1805e3d159ef01e49056b56ca1cb0308</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_into</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aaf840ddacefc65092e2d1b5521e48859</anchor>
      <arglist>(cairo_t *cr, const Region &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>point</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>acd12bc3f585ee5d8b938ebe062e86676</anchor>
      <arglist>(Point p)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>point_to_screen_window</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af51a6b9f62c33ffc1ead910bd03e2f9c</anchor>
      <arglist>(Point widget_point)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>point_from_screen_window</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a645a9c1d6026ca7bbf8fb7422b684097</anchor>
      <arglist>(Point window_point)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>translate_from</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4c5b63c12c6bc631136c47c3d70f2276</anchor>
      <arglist>(const WidgetImpl &amp;src_widget, const uint n_points, Point *points) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translate_to</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a80f5a4b5f9b19284710494dd79818db4</anchor>
      <arglist>(const uint n_points, Point *points, const WidgetImpl &amp;target_widget) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translate_from</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3ccabab83310d6f11acac8e636b2d595</anchor>
      <arglist>(const WidgetImpl &amp;src_widget, const uint n_rects, Rect *rects) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translate_to</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a26713be6456cf72f61f10f82dd79fb3a</anchor>
      <arglist>(const uint n_rects, Rect *rects, const WidgetImpl &amp;target_widget) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screen_window_point</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8801e5de884573f11342564f7d4b9d15</anchor>
      <arglist>(Point p)</arglist>
    </member>
    <member kind="function">
      <type>Requisition</type>
      <name>requisition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad16f9db78f7d32bf17829f08cf699cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a15c3d59b4562c626c95c603ef14d375f</anchor>
      <arglist>(const Allocation &amp;area, const Allocation *clip=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const Allocation &amp;</type>
      <name>allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a09661aadaab2c20e11ed5cd2f240a694</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>clipped_allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3ce22b736d6ce68fb5f9128a493017fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Allocation *</type>
      <name>clip_area</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a58640624b3b2284394050a095121211e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StateType</type>
      <name>state</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a1ce975ab923096242c6b00794ff44bba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Heritage *</type>
      <name>heritage</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab33ba845227c0ed6ae1f064342190c4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>foreground</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab24d5629a2bfa93c543f2fa261ff5c38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae18d35da0f5bead9313c8c5508adb4f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_color</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5b6eadab5cc476e9b41f8adeac70ed52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_shadow</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad3a139368cf61df7e71471217ebd09f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>dark_glint</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af9396129913a82198beca1e4a7af4f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_color</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0d2a3e3ac543d558a7b454c473bcd56c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_shadow</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0358cfe97317888ed901d0efbf6aaed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>light_glint</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>afe7c9688283023a82739916fecc8e1fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color</type>
      <name>focus_color</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a483a7d8acd183d060f657a9c6a9cb116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a1d4cfca54e4b118704cf8eff1034b7df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_dump</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a51ecd484da37f668fb6da672c54c5cbe</anchor>
      <arglist>(const String &amp;flags=String())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_adjustments</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>afc44a0874370d7dae5c14b48ada5efb8</anchor>
      <arglist>(AdjustmentSourceType adjsrc1, Adjustment **adj1, AdjustmentSourceType adjsrc2=ADJUSTMENT_SOURCE_NONE, Adjustment **adj2=NULL, AdjustmentSourceType adjsrc3=ADJUSTMENT_SOURCE_NONE, Adjustment **adj3=NULL, AdjustmentSourceType adjsrc4=ADJUSTMENT_SOURCE_NONE, Adjustment **adj4=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const PackInfo &amp;</type>
      <name>pack_info</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a62183c92bd754bb75aac2b2af0acbbb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa148a8ab9c77c45858b62690938baa8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6b963c33e639a8a23c25de67cf246c4f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5f5d1241c6a65e2f53f643d8262f898b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae3238c44fa364be2cb155e73c7a01548</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aebe04042f0f7e4f26100a03a1b105b7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af15edcb3b7c1e0e0318ca12a2b8cb921</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa6ecae055b4fd177500f7723767595ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad79ec7e72524c268ad100a7cf009288f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7eed7d97eb558429b5334e98f733dca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ac435fd6871121fcbf556f3419aaa63ec</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab09d28e752723b547742643948a83f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a90ed405772c63b6b74c47f0e0ea6cf69</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a60f8ff68b0d0ce00eae429cf59fad932</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae23a55b6db5ee50db9f860a0e61fb5d8</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a340ef308f20a33b30085099b9af6db10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab12aa9a2ea509046b05bfbb5f1724f67</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af076a903075bb7526648fc98baa7ac50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a37291f95d34b563a55d8937dae1833d9</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>adf1154dd3a9a8df3772c98b8e2630ae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a105ff6dbd5b00051a971ee63036ea861</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aaa2711030f534e05dc81d6ac3644d91f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7092f45300d34d771fa4301149a1984f</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad91785ff40859a2877b6ddb5c3529bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0fd02e46f58ff11649ddf27ed0f8d19e</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af51e775b0666615e287e585f1bb21ae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ac7582eb513d752de19697e94b36e78aa</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af52991395ee5cea0ba71f1bdba32514b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3f5dd390381a599f7b294f0b76ae6dc9</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5ef20e344c2ce336739e6faa8dd29a63</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a65b2cb97f211af51795fb9964fc31393</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a2916bc9ab0509b3d29e59cc3b28b229b</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a972ca0d80e369bf3137eac8af3e8cb1a</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>InterfaceMatch&lt; C &gt;::Result</type>
      <name>interface</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a41b443c40aadd03304eefd87361197c4</anchor>
      <arglist>(const String &amp;ident=String(), const std::nothrow_t &amp;nt=dothrow) const </arglist>
    </member>
    <member kind="function">
      <type>InterfaceMatch&lt; C &gt;::Result</type>
      <name>parent_interface</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6c1b755bbfb0ce54643fd74d7a5a6083</anchor>
      <arglist>(const String &amp;ident=String(), const std::nothrow_t &amp;nt=dothrow) const </arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_finalize</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0fe8b692152663e39263e2af306ce05e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5893d620e187992956e541860e886588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_invalidate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a98d2154022c3f45d26c3b43858542c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void(WidgetImpl *old)</type>
      <name>sig_hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6bd0855d5447ec549cda06b884b7f606</anchor>
      <arglist>)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const AnchorInfo *</type>
      <name>force_anchor_info</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a2d189ab9e678b54fb2bd6158cfec8417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>constructed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>afe3fe822f3a809483736986759eb2556</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>change_flags_silently</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0a6973769bf15087072d1958908c31be</anchor>
      <arglist>(uint64 mask, bool on)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_flag</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a53ea75cc5c85abddad2823a705347070</anchor>
      <arglist>(uint64 flag, bool on=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_flag</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aad166754cf5238b1b9b5c7696782e5bf</anchor>
      <arglist>(uint64 flag)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Selector::Selob *</type>
      <name>pseudo_selector</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a2f418c851baaa0220bacf8066b2d3a4e</anchor>
      <arglist>(Selector::Selob &amp;selob, const String &amp;ident, const String &amp;arg, String &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3079637fcab2f38e3c15735ab9cb8b3b</anchor>
      <arglist>(Requisition &amp;requisition)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae359883ed9913b23fcaf5ac8e50d6d32</anchor>
      <arglist>(Allocation area, bool changed)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalidate_parent</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ace6f7e1910218135def283e17437b1f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clip_area</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8ba66a8a1faf1e18c726ca6e5b49f11b</anchor>
      <arglist>(const Allocation *clip)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tune_requisition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a25c07ba9c55a68c268b856dc1cb2d596</anchor>
      <arglist>(Requisition requisition)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>tune_requisition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a013e8a8802d4121157eeeee38a34c971</anchor>
      <arglist>(double new_width, double new_height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>do_invalidate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a28a98da71737944219220716ab681872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>do_changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae32b592ffe756e43a85ba5ee988795bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>exec_fast_repeater</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad5122638e2932bb7f465a1503a49f913</anchor>
      <arglist>(const EventLoop::BoolSlot &amp;sl)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>exec_slow_repeater</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a42845a0d0dcbfd1fd52f57c4867ca595</anchor>
      <arglist>(const EventLoop::BoolSlot &amp;sl)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>exec_key_repeater</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a026af9b4bccfed8e4dd9691e749d3203</anchor>
      <arglist>(const EventLoop::BoolSlot &amp;sl)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>remove_exec</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a55690d2087aa60b84c4eb3b599163396</anchor>
      <arglist>(uint exec_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>clear_exec</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a67b2be60c930246f97cb8449b602c395</anchor>
      <arglist>(uint *exec_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>visual_update</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>abc23fb934addd2ea26b94678dd37fa28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae0989a93be3cbd6365f3a7a5357170d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_parent</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0ae685e4efe60e19ab452822337d80e0</anchor>
      <arglist>(ContainerImpl *parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0793a90cf0ca86c4cea6e64a0c2266f5</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_widget</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3d60c04b52fd3c5c95b4f54987b90b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>custom_command</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>abdca6797949f955a92c9ac6e2599e24e</anchor>
      <arglist>(const String &amp;command_name, const StringSeq &amp;command_args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>anchored</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9d4285f19efcfee5575373440900ec0e</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notify_key_error</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a99ff3b3127eec1725572ccded061e517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Affine</type>
      <name>affine_to_screen_window</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aff05fdc078a9ef16a53f7eed0f6ad77a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Affine</type>
      <name>affine_from_screen_window</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a742496eafcb3761deadc3018e9dce071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_widget</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad0d00e8c524fedbb492af4439d84eea1</anchor>
      <arglist>(RenderContext &amp;rcontext)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_recursive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6bb3825b98f38a9005389779ddd45485</anchor>
      <arglist>(RenderContext &amp;rcontext)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8e06801d81b208d44b7be747c18047b8</anchor>
      <arglist>(RenderContext &amp;rcontext, const Rect &amp;rect)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Region &amp;</type>
      <name>rendering_region</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa5e40ff5b20aa9d95ec01e060fbba610</anchor>
      <arglist>(RenderContext &amp;rcontext) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual cairo_t *</type>
      <name>cairo_context</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae59b71df108a95a6efc31377fbbe6c1c</anchor>
      <arglist>(RenderContext &amp;rcontext, const Allocation &amp;area=Allocation(-1,-1, 0, 0))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>make_test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab5449a4ebaedffe4bc88abc1dfbe3f75</anchor>
      <arglist>(TestStream &amp;tstream)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dump_test_data</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a17e01d3fc7aed9d7f362f079e9c0c8be</anchor>
      <arglist>(TestStream &amp;tstream)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dump_private_data</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a46f12739849e19de6127e1fb589ed145</anchor>
      <arglist>(TestStream &amp;tstream)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>do_event</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab0c9398db6866fb7d96a3092ae9a7a6e</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ContainerImpl *</type>
      <name>container_cast</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a537d15d2eb6af64553231a281732636d</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static WindowImpl *</type>
      <name>window_cast</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a865e6f17bbb37cf0299b7b440282e46d</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetImpl::PackInfo</name>
    <filename>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>hposition</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a55e600f9982918bdd7c95bda93009eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>hspan</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>aac1fc0508fa46390d712a070379e193c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vposition</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a2469db031912c0fb2747f0cbe3e211e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vspan</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a0947b94bf23befdf582e3bbec953d9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>left_spacing</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a532b2e98b11f8c2e5e680582f091d1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>right_spacing</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a6a4ada6e9f17949cddd4b967415bcec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>bottom_spacing</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a5fa6126c20765b72fefb2a156a314883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>top_spacing</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>ae9b7eb3d98bba1aac78180d1b18d2d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>halign</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a57ad586b2631fde3f6bdb93cc288212a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>hscale</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>a2aec904c3cb00f819ec9558df96fd7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>valign</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>ad60accd54e45e8823956bb417f49e1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vscale</name>
      <anchorfile>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</anchorfile>
      <anchor>abbbd273a88ac945593c053a86b140d15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetIfaceVector</name>
    <filename>structRapicorn_1_1WidgetIfaceVector.html</filename>
    <member kind="function">
      <type></type>
      <name>WidgetIfaceVector</name>
      <anchorfile>structRapicorn_1_1WidgetIfaceVector.html</anchorfile>
      <anchor>aba86019f15f7d71ce54b5d327f15e225</anchor>
      <arglist>(const WidgetSeq &amp;widgetseq)</arglist>
    </member>
    <member kind="function">
      <type>WidgetSeq</type>
      <name>to_widget_seq</name>
      <anchorfile>structRapicorn_1_1WidgetIfaceVector.html</anchorfile>
      <anchor>ab7b6dd52017a5d8b64e9cd84cfd376ac</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowImpl</name>
    <filename>classRapicorn_1_1WindowImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ViewportImpl</base>
    <base virtualness="virtual">Rapicorn::WindowIface</base>
    <class kind="struct">Rapicorn::WindowImpl::ButtonState</class>
    <class kind="struct">Rapicorn::WindowImpl::GrabEntry</class>
    <member kind="typedef">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>NotifySignal</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a4ed0b8f8a6ca0d9c69a4fd3db568e87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowImpl *</type>
      <name>as_window_impl</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a7f07313973c4cd63653ec58a8e410c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl *</type>
      <name>get_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aeadcbc0028cd6520fae520431e08fb3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>cairo_surface_t *</type>
      <name>create_snapshot</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aa8e80d7da51a9c4e442b24d5368a5dd5</anchor>
      <arglist>(const Rect &amp;subarea)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a034c63c9e6360ee98b143b8e98b86e83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ac2ddac3c0c2d40ee61a4f6ac418b7592</anchor>
      <arglist>(const String &amp;window_title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ac569041276ec438e90aec703c6e0005d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ae3b8ad25a543b73509360429f5fe6c04</anchor>
      <arglist>(bool afocus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add_grab</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ab9dd4506ced4518be7dfbb3166f0387d</anchor>
      <arglist>(WidgetImpl &amp;child, bool unconfined=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_grab</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ab89ded0ec1a141a5589907f0cd44075d</anchor>
      <arglist>(WidgetImpl *child, bool unconfined=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_grab</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a44bc45b330114a71c30754ed73bd63d4</anchor>
      <arglist>(WidgetImpl &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_grab</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a16cd7aac862e64c0cb4637e29fed87ca</anchor>
      <arglist>(WidgetImpl *child)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetImpl *</type>
      <name>get_grab</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a5df84ffe2795ec25e7f997ccdfba9995</anchor>
      <arglist>(bool *unconfined=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventLoop *</type>
      <name>get_loop</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a828283ab2ebdcd589e4b447431172e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a564163f45f857abd6cd56ad7f7ad2676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a2e02da9ab114c162f46c083bf9f3c515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aadf89c61026a0ca3c1a720837fd20df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a9bb86ab5606e1d8e6977767a20dd8971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a16ac9b8bfb4b79361229d56343fcbbba</anchor>
      <arglist>(const String &amp;pngname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a80096561bba81018d814bd27ab872313</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>abb54bc836625f0b6cc05b12f2a20f9f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aea5331ea6fac2f31fd0db1716aeb6388</anchor>
      <arglist>(WidgetIface &amp;widget, int button, double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a173955004a38e12c23731850aee3f8aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_child</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a5244c948f78ab9b78c789d695e7418e1</anchor>
      <arglist>(WidgetImpl &amp;child)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>forcefully_close_all</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aeff9b7335fa446b413d4b5d2a5096320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_RESIZE</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a04fec5f2aff6caa69d128d64171fe599</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a2c79aec7bff7ac1aa6f913448d6598b5</anchor>
      <arglist>(WidgetImpl *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_parent</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aa2d36b6aa047fd4c161d37d39a1b6e15</anchor>
      <arglist>(ContainerImpl *parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dispose</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>abe8f4f7b3f8acd3e57836aa3ee12bf09</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Aida</name>
    <filename>namespaceRapicorn_1_1Aida.html</filename>
    <namespace>Rapicorn::Aida::CxxStub</namespace>
    <class kind="struct">Rapicorn::Aida::EnumValue</class>
    <class kind="struct">Rapicorn::Aida::TypeCode</class>
    <class kind="class">Rapicorn::Aida::TypeMap</class>
    <class kind="class">Rapicorn::Aida::ImplicitBase</class>
    <class kind="class">Rapicorn::Aida::Any</class>
    <class kind="class">Rapicorn::Aida::EventFd</class>
    <class kind="struct">Rapicorn::Aida::TypeHash</class>
    <class kind="struct">Rapicorn::Aida::ValueType</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</class>
    <class kind="union">Rapicorn::Aida::IdentifierParts</class>
    <class kind="class">Rapicorn::Aida::OrbObject</class>
    <class kind="class">Rapicorn::Aida::SmartHandle</class>
    <class kind="class">Rapicorn::Aida::SmartMember</class>
    <class kind="struct">Rapicorn::Aida::_ServantType</class>
    <class kind="struct">Rapicorn::Aida::_HandleType</class>
    <class kind="class">Rapicorn::Aida::ObjectBroker</class>
    <class kind="union">Rapicorn::Aida::FieldUnion</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer8</class>
    <class kind="class">Rapicorn::Aida::FieldReader</class>
    <class kind="class">Rapicorn::Aida::BaseConnection</class>
    <class kind="class">Rapicorn::Aida::ServerConnection</class>
    <class kind="class">Rapicorn::Aida::ClientConnection</class>
    <class kind="class">Rapicorn::Aida::Property</class>
    <class kind="struct">Rapicorn::Aida::PropertyList</class>
    <class kind="struct">Rapicorn::Aida::PropertyBool</class>
    <class kind="struct">Rapicorn::Aida::PropertyRange</class>
    <class kind="struct">Rapicorn::Aida::PropertyString</class>
    <class kind="struct">Rapicorn::Aida::PropertyEnum</class>
    <class kind="class">Rapicorn::Aida::Signal</class>
    <class kind="struct">Rapicorn::Aida::CollectorUntil0</class>
    <class kind="struct">Rapicorn::Aida::CollectorWhile0</class>
    <class kind="struct">Rapicorn::Aida::CollectorVector</class>
    <class kind="class">Rapicorn::Aida::Connector</class>
    <class kind="class">Rapicorn::Aida::AsyncSignal</class>
    <member kind="typedef">
      <type>std::map&lt; ptrdiff_t, OrbObject * &gt;</type>
      <name>OrboMap</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af789b54d32d2399a4d34aef12ed64fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; TypeHash, DispatchFunc, HashTypeHash &gt;</type>
      <name>DispatcherMap</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a6295024c02b2b4b8283c7162d8b38edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a31ec5e241b25279c793d2114af1db92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldBuffer *(*</type>
      <name>DispatchFunc</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ab6972240c2409e10c00243dc4f98eb11</anchor>
      <arglist>)(FieldReader &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TypeHash &gt;</type>
      <name>TypeHashList</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a07fe876da77da2946a52404548e70ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldBuffer *</type>
      <name>SignalEmitHandler</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4966aa42a5d9c7a5f759fd6f5ef49e5a</anchor>
      <arglist>(const FieldBuffer *, void *)</arglist>
    </member>
    <member kind="typedef">
      <type>TypeCode::InternalType</type>
      <name>InternalType</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af435c1c08617526f719ccee3594ea213</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImplicitBase</type>
      <name>PropertyHostInterface</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af619c1d6c3d5e5047a57b67d8e43a604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TypeKind</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNTYPED</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92aafc9cd45b6e3d7988ea4b57bc1c5b468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOID</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac7dbd611f71ca1826b7767223d94dd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ab54febda14479a08816b39fd2159692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT32</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a50f7454db8e3863666e379ea3080b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a13e7ff2527c4f6f411c5f8de24e12632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad121241c9476c0e839b3cb6e7820044c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad7ac6c9d2f522609f32f18743074c00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUM</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ae07683ac6e6a0ce0847ca322a53eb914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEQUENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a44186695c152bdaf3acdf2100c02a9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECORD</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a547ec93ddc1e465a278689ac1112176e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a3d28c7cd557a73e5a3142ecdf73610ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a28754a6929f2813fd0e5f1aaeb637f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_REFERENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a8a1cf942d9b04acd1c9389e752d0e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a250839b656b7375712ba6daa04d07888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MessageId</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_NONE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bac688474c8ac020cbe82400b49157522c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_ONEWAY_CALL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba847bad2d87580284a851aef0a3793ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_DISCONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1ff5abae0b5affa659579875d73bf2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1713d747bbc871d9fb0640516460feee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_DROP_REFS</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba6d747dffd1f4ec26fae2e217cac40592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_HELLO_REQUEST</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba74a91795e3f9d163e5983bf606015459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_TWOWAY_CALL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baed1f09e9c0b41873a6a28659046a3317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bad840443b5af937891d8be95b855bb69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa48359186fcf0294cf41bd078c0eb454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_HELLO_REPLY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba68abc6bbf56e3d5a804b9d71935abf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CALL_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba486c5a3ce44d59b60f0cb154b7333481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_CONNECT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba21a7be778c75d60e8e2c8b42d266a388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSGID_EMIT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baad326870340735838e1bfa5f6f883fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_error</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a00c4fe1dee74e73750136be643a55419</anchor>
      <arglist>(const char *file, uint line, const char *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fatal_error</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5829bd912b46fa055bc00a0a280e546a</anchor>
      <arglist>(const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_warning</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2e1b4a62811a4ee93beaeda2e4a72750</anchor>
      <arglist>(const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2a6e72cddd462df1c250f4a67cda8187</anchor>
      <arglist>(TypeCode)&lt;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sizeof</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a92cce5e8c357de6c7f1652bebd5d5a3d</anchor>
      <arglist>(Any)&lt;</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>any_field_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>acb64dddb8786f29498f398fea89406d9</anchor>
      <arglist>(const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>any_field_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af349512569fb1e8137f7cceaf1cad978</anchor>
      <arglist>(const Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>any_field_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ae41410453bcd4c098377ec5294a5666d</anchor>
      <arglist>(const Any::Field &amp;any)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type_kind_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aba93ad91b36f114b0787aeb348b786db</anchor>
      <arglist>(TypeKind type_kind)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>msgid_has_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>abb7c65f6106c3c475d56d968fcc9ef50</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>msgid_is_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a6ff450e3ca83a02073d13b8fdb31c464</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>MessageId</type>
      <name>msgid_as_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5353df79d874cd8837fe8d8f4493ad2a</anchor>
      <arglist>(MessageId mid)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>msgid_mask</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a60bbe0922086a04c1437869b3ed7711c</anchor>
      <arglist>(uint64 mid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aaac06fbd269efad0f769d8c26a9a59c7</anchor>
      <arglist>(std::nullptr_t, const SmartHandle &amp;shd) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a11e0d1d63d630f0ee22627c68e5edb96</anchor>
      <arglist>(std::nullptr_t, const SmartHandle &amp;shd) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a928ca0eb6efb81473997b84bce88cf24</anchor>
      <arglist>(void(Class::*setter)(bool), bool(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5b2ec1ee4abd1e2f3c7377307edb292b</anchor>
      <arglist>(void(Class::*setter)(int), int(Class::*getter)() const, const char *ident, const char *label, const char *blurb, int min_value, int max_value, int stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a05777a6137ebb746f9206e1c5151ba51</anchor>
      <arglist>(void(Class::*setter)(int), int(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ab7c9b410b78b1fbabfc1162e40bb425f</anchor>
      <arglist>(void(Class::*setter)(int16), int16(Class::*getter)() const, const char *ident, const char *label, const char *blurb, int16 min_value, int16 max_value, int16 stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2a9c4c08bf6bbf4bb720f99cbe7c90ad</anchor>
      <arglist>(void(Class::*setter)(uint), uint(Class::*getter)() const, const char *ident, const char *label, const char *blurb, uint min_value, uint max_value, uint stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a36bc7b4f3bd30ca4229235eb88352c2b</anchor>
      <arglist>(void(Class::*setter)(uint16), uint16(Class::*getter)() const, const char *ident, const char *label, const char *blurb, uint16 min_value, uint16 max_value, uint16 stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a0f95629be7d241c7d4a99c395237eb1f</anchor>
      <arglist>(void(Class::*setter)(float), float(Class::*getter)() const, const char *ident, const char *label, const char *blurb, float min_value, float max_value, float stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>abef4d67c51d3f66d9535174333056550</anchor>
      <arglist>(void(Class::*setter)(double), double(Class::*getter)() const, const char *ident, const char *label, const char *blurb, double min_value, double max_value, double stepping, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a2ed583ac47d65e12b254a7769e9f9de0</anchor>
      <arglist>(void(Class::*setter)(double), double(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a53341d92e924bb2c9803e221f5c1c6b4</anchor>
      <arglist>(void(Class::*setter)(const String &amp;), String(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>Property *</type>
      <name>create_property</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a67705424c1f97bdf49d6c0b625d2a3ec</anchor>
      <arglist>(void(Class::*setter)(Type), Type(Class::*getter)() const, const char *ident, const char *label, const char *blurb, const char *hints)</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ae1c30620e796be152f684788ad8e81ae</anchor>
      <arglist>(Instance &amp;object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a8631a013ecb4377a0fcb2256a190d4fd</anchor>
      <arglist>(Class *object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AdjustmentSourceType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa5c2d0da751522c138927d69a9e61375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AlignType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adca5a04cf0dd3f0fe42422315dd2e754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::AnchorType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a936dd37f80015bab41044c874a17c16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ClickType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ac163e97eaf5f3cbb2fd94efb3eb797d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ColorType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a1279c22e8fe4a39c29ea14c2680d3819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::ColorSchemeType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a1beee1e0c12c620ed60f8a57daf8605b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::DirType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa818674c356cda7ed6fb1493dc26742e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::EllipsizeType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af7bffe2d4b7f36d00b2af008d6fc4c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::FocusDirType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a5e2665adf486135ab4b537c9a7356b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::FrameType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af0bfbf85abbb69186eff56ea7efc2186</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::LightingType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a17f7d19d57d36f1e019aaacb19892bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::SelectionMode &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>af1fe03ffae35ad00e26fbd68ed317604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::SizePolicyType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a59f8013ecfb345a19ffa7fa532b9673e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::StateType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a04d6d1beeef354375638ac2000825e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::TextMode &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a9e23d1c9440cdcc10c44afe1ff4917f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::WindowType &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa52a3f8a233c2ac3c54a358d85be96ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::UpdateKind &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>afc5fd0c5dc21ea5072f5d0a83218df58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>TypeCode::from_enum&lt; Rapicorn::TestEnum &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a9b27d48b2ebbd40292a1eab3960570ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint64</type>
      <name>CONNECTION_MASK</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adf95aae4c9792cdd42a0be5d444522f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_ServantType</type>
      <name>_servant</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a424070ff463d381d27d4cceee4c7de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_HandleType</type>
      <name>_handle</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a82082338cb79e692465c1eab344be273</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::EnumValue</name>
    <filename>structRapicorn_1_1Aida_1_1EnumValue.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>EnumValue</name>
      <anchorfile>structRapicorn_1_1Aida_1_1EnumValue.html</anchorfile>
      <anchor>a83b5e924863b169da3334e7cb690e310</anchor>
      <arglist>(int64 dflt=0)</arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1EnumValue.html</anchorfile>
      <anchor>af7122acd11b4867b03d7b2ba83990c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ident</name>
      <anchorfile>structRapicorn_1_1Aida_1_1EnumValue.html</anchorfile>
      <anchor>af4f1e4b2ff7307a7a01586253dfcafeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>label</name>
      <anchorfile>structRapicorn_1_1Aida_1_1EnumValue.html</anchorfile>
      <anchor>aa25ee4768d7de14c18f50c7189413812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>blurb</name>
      <anchorfile>structRapicorn_1_1Aida_1_1EnumValue.html</anchorfile>
      <anchor>a6bfb3b8b5042c39f0b05a3869544597e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::TypeCode</name>
    <filename>structRapicorn_1_1Aida_1_1TypeCode.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeCode</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a03a6296ae1d5ca88f3bf6a4bcac1e2da</anchor>
      <arglist>(const TypeCode &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a32d83a657ae90dbd7dcc85bfc51c786b</anchor>
      <arglist>(const TypeCode &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a8327ad679cbe0feeb6160076dc8aa573</anchor>
      <arglist>(const TypeCode &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>TypeCode &amp;</type>
      <name>operator=</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a86cf5889449b7485645a7e4a8382bf8d</anchor>
      <arglist>(const TypeCode &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>ad60600de3b54df2f2b87ae754e7136f4</anchor>
      <arglist>(TypeCode &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TypeKind</type>
      <name>kind</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a01096f4146b3827ec39fdca4bc6a662a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>kind_name</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>ade9ec5f48d2fef197e4fa13e9767f61b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>ad175952c5825d0762b87b686929c9084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>aux_count</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a3edad7ca0b8dca73b67c3c75757efbc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>aux_data</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a4b0fb5bd096d14c87d1127352506d0a6</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>aux_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a0dfd8be767afd66761cb410b4ceb9d65</anchor>
      <arglist>(std::string key) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hints</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>aeeb4cbae7578281269eba9ace508b560</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>prerequisite_count</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a5f988c9489d2c5bdd571c486eb0611f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>prerequisite</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>aa8d723c0fe8617abbce9b3f644b366f6</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>field_count</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a584f65a615775e2e315570d210f065b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>field</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a55a20df5c9b01a0e625443e4b34191e4</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>origin</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a81f3212e5c5b753a90227903dc11b935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>resolve</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a8944f0517e39e34ec152081edf0ff71f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>untyped</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a548567168231a8ad0ae3af8ece8f2f85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pretty</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a7b2494470bb5ed3e9635390da34713d9</anchor>
      <arglist>(const std::string &amp;indent=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enum_combinable</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a890a49fd9f9aa067467bd62cd99a0264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>enum_count</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>ad3d7df32d5694d5271d7c1f17c86f89d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EnumValue</type>
      <name>enum_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a6c7b3a99db42ad2b08f7768f8ec3da90</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>EnumValue</type>
      <name>enum_find</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a6bf248a0110ab1c1cbad6e6e33c9db46</anchor>
      <arglist>(int64 value) const </arglist>
    </member>
    <member kind="function">
      <type>EnumValue</type>
      <name>enum_find</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>af81c1bd3b9322a9488b69ef358f72c5f</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>enum_string</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>a044815367eea9a93799f04e0ecb59e5a</anchor>
      <arglist>(int64 value) const </arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>enum_parse</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>ad64597ad158897fdb6b22755416642a5</anchor>
      <arglist>(const String &amp;value_string, String *error=NULL) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeCode</type>
      <name>from_enum</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeCode.html</anchorfile>
      <anchor>abe1e7d0ff2baee5e6134dd95efc38f1b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::TypeMap</name>
    <filename>classRapicorn_1_1Aida_1_1TypeMap.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeMap</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a5bce94c20893e9ab34377f868d1c6d6f</anchor>
      <arglist>(const TypeMap &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TypeMap &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>ac734aee9df9e66137a9b2d524fe860a8</anchor>
      <arglist>(const TypeMap &amp;)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>type_count</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a43cf8eb97d4fc8e324251d3e260d405c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TypeCode</type>
      <name>type</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a6313df530e2a2c19603e31bf39ff7cc2</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>error_status</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>afb843c17e6e5ff3866cdf6c779859157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>lookup_local</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>ad3eeb0c6d90b13ffb08619c90576ee00</anchor>
      <arglist>(std::string name) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeMap</type>
      <name>load</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a18fb721481277cdb232b72ca3293718e</anchor>
      <arglist>(std::string file_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeCode</type>
      <name>lookup</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>ab25a6d43f5b90e67dc33d37657e626e7</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeMap</type>
      <name>load_local</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a49f97a721128eee66d8e3b477d2900a9</anchor>
      <arglist>(std::string file_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeCode</type>
      <name>notype</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a9c39f3a6f77f373b3e00a64d461f17aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enlist_map</name>
      <anchorfile>classRapicorn_1_1Aida_1_1TypeMap.html</anchorfile>
      <anchor>a3eac42a19664235eba8bb574d0267847</anchor>
      <arglist>(const char(&amp;static_type_map)[S])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ImplicitBase</name>
    <filename>classRapicorn_1_1Aida_1_1ImplicitBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a8811ceb116dffd01b95587ddce867d4e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a60561511be0bab6cbba37f2de37d5e86</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Property *</type>
      <name>__aida_lookup__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>ac8f89b3fe1f7ce689f2b80f01de5ba44</anchor>
      <arglist>(const std::string &amp;property_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>__aida_setter__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a2bde50629707b35f4ee14869b1656bd2</anchor>
      <arglist>(const std::string &amp;property_name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>__aida_getter__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a813f47e14a38ebf793f149c3d3fe2ca6</anchor>
      <arglist>(const std::string &amp;property_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Any</name>
    <filename>classRapicorn_1_1Aida_1_1Any.html</filename>
    <class kind="struct">Rapicorn::Aida::Any::Field</class>
    <member kind="typedef">
      <type>std::vector&lt; Field &gt;</type>
      <name>FieldVector</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a4fb5a63a9cbeabd29fd1ca345889797c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Any &gt;</type>
      <name>AnyVector</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5e8c64e15aed6d733a656ab741c64566</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a24929297d90859036204a0c06118bb86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aec9d18901a26da16b9990417d0e3210f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a74a0708718ab782094531282769be6de</anchor>
      <arglist>(const TypeCode &amp;tc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a06fd18dcb3b0428b29818bf7cb2be426</anchor>
      <arglist>(const Any &amp;clone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ace123470c20704a22aec302a25f76c58</anchor>
      <arglist>(const V &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Any &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a625f011c8265db90b419a4755fa95fbc</anchor>
      <arglist>(const Any &amp;clone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a341236c94b1ac95683424884a2dfe2fc</anchor>
      <arglist>(const Any &amp;clone) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ab89536b31907f8ef8b9296ed394d58a4</anchor>
      <arglist>(const Any &amp;clone) const </arglist>
    </member>
    <member kind="function">
      <type>TypeCode</type>
      <name>type</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>abff307fd16ee1e30ef6f9781440dfeef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TypeKind</type>
      <name>kind</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a2994371313b264a4ab894a77ce44a2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retype</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aafd00311c2615073546b4abb206dd666</anchor>
      <arglist>(const TypeCode &amp;tc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae699bdd5417a8ff560aa40359c802f91</anchor>
      <arglist>(Any &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5059715069e12817814dd9884a14ead8</anchor>
      <arglist>(bool &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aaa803bbb1afe4e96ade45fc636fe0945</anchor>
      <arglist>(char &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a9460875c27e28532448893d1fc5a2547</anchor>
      <arglist>(unsigned char &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ad4748275f7864d56db8d6d0ec650a439</anchor>
      <arglist>(int32 &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a8cf4826d23a3ffadea6253a59c4566f5</anchor>
      <arglist>(uint32 &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a28ba919afff59c59df6ecc685beda78f</anchor>
      <arglist>(LongIffy &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a1618c6117a905ab1987b09594b420423</anchor>
      <arglist>(ULongIffy &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ab5753ae225c672c83c2e66a1dad435c2</anchor>
      <arglist>(int64 &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ac2ed32b0262bb5a731db859342f9bd35</anchor>
      <arglist>(uint64 &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a1c9be82943e29c54239f3539bf76c4c1</anchor>
      <arglist>(float &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a01d0a0892b905a7b35cd9effcf225213</anchor>
      <arglist>(double &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5d2069c146176172be07217db4d76493</anchor>
      <arglist>(EnumValue &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>af18e00856d4aa91536da2b9a8dd96257</anchor>
      <arglist>(const char *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aaa664f9441b94a3c474cc8288a60e484</anchor>
      <arglist>(std::string &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a0469cd48197f146010c427f585594c1c</anchor>
      <arglist>(const Any *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a859d551b26cfb174d472c2871ba978db</anchor>
      <arglist>(const AnyVector *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a29be42e328f64f52ca7b27e422d50633</anchor>
      <arglist>(const FieldVector *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae8b7990202a5e998ee729eb2b9288d25</anchor>
      <arglist>(SmartHandle &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>to_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a1be366fba4a48b282bab6e604b5b0af7</anchor>
      <arglist>(const String &amp;field_name=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>const Any &amp;</type>
      <name>as_any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aa93f0e888edd8cfa0a8d46474191be2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>as_float</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a2f5c2a28b59dbdc8d432700ba74ac6de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>as_int</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aab3a80469a0d239fdcfc8a9e6e19b701</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>as_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a7ff738b859878bf849614b12650809f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>afd64a34e5f406d0d01d33e3368b4c223</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a7e082634a1f4568f2ff641ceba6d37cf</anchor>
      <arglist>(char v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a27d57e69563cf3460da442fd9c2d321c</anchor>
      <arglist>(unsigned char v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a60514e51d14d57b651b6a4e7ddf95088</anchor>
      <arglist>(int32 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aed73513b781ebdad409d23c2cb1d71f8</anchor>
      <arglist>(uint32 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5553eb6efded2eea57bed78f903a022a</anchor>
      <arglist>(LongIffy v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a028f81c76ab18e8ec6aef7f897584b32</anchor>
      <arglist>(ULongIffy v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae15dd2c9528b597591efc8ec3b42ce18</anchor>
      <arglist>(int64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a15035cbf8bf6a3789ce56bc3562230a6</anchor>
      <arglist>(uint64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a312f641745448b63ed34ed42f8e80676</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae229be67b6de150e776c4320e557ab61</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>abf546f7ce351d23fe2c32c9a4e2e2558</anchor>
      <arglist>(const EnumValue &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5fdb02db759fa3cbb1df12f30cf77cef</anchor>
      <arglist>(const char *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>afbe84ce696557c68f958ea8e699cd78d</anchor>
      <arglist>(char *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>adc3eb13fc09176c795e5737718ecc68b</anchor>
      <arglist>(const String &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a52bcc58ad625f160d09a166a10430e27</anchor>
      <arglist>(const Any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5f8d90608d85a08be729d54068615c41</anchor>
      <arglist>(const AnyVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>abd2430f8a8e4130a2a418961f2a2aaa9</anchor>
      <arglist>(const FieldVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a35a210b4b414ee438659021cde955bbc</anchor>
      <arglist>(const SmartHandle &amp;v)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>plain_zero_type</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a71ec9665721d3bd88ce725566cf0a8ef</anchor>
      <arglist>(TypeKind kind)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>any_from_record</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a19459f4877d2948f1c4883108698f5bf</anchor>
      <arglist>(Any &amp;any, const Rec &amp;struct)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>any_to_record</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aa3196f44719e23b9e32ba9455204b5a9</anchor>
      <arglist>(Any &amp;any, Rec &amp;struct)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Any::Field</name>
    <filename>structRapicorn_1_1Aida_1_1Any_1_1Field.html</filename>
    <base>Rapicorn::Aida::Any</base>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>a9a6c45fadf5fbbf33f5f243a68a15253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>aa42ce8dbf5952f8bd48d9a6929d41c69</anchor>
      <arglist>(const String &amp;name, const Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>af4dc769aa11db4d9e2265f65e135c9ea</anchor>
      <arglist>(const String &amp;name, const V &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>a784f56c1473c25c1e76daede0e31885b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::EventFd</name>
    <filename>classRapicorn_1_1Aida_1_1EventFd.html</filename>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>aca1383bbb74a963716ed95edd99ff463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a6218c64a2ddefa67c6dd31b8facefd68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeup</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a61c4854a64d9ad72d22656abcb80ead6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inputfd</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a32ab7b31e5a4e68e50230ea7402dc841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pollin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a2f254c49f6f535967c2e73e137b4b673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a81a2b147ffc4fd0ebed8a831e7a34b85</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::TypeHash</name>
    <filename>structRapicorn_1_1Aida_1_1TypeHash.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeHash</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeHash.html</anchorfile>
      <anchor>aee35a903ce7adae0f8c05395ac26dc93</anchor>
      <arglist>(uint64 hi, uint64 lo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeHash.html</anchorfile>
      <anchor>a93a0b45947c053eb757b5f3bd7f6fca2</anchor>
      <arglist>(const TypeHash &amp;z) const </arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>typehi</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeHash.html</anchorfile>
      <anchor>a2df7b0ac95d976f59c11d7c454b76e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>typelo</name>
      <anchorfile>structRapicorn_1_1Aida_1_1TypeHash.html</anchorfile>
      <anchor>a2af798250239f1eaedfacc4796dde28c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Y</type>
      <name>T</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ValueType.html</anchorfile>
      <anchor>a56ab07b96fb195548ad2dce6bb104999</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType_3_01Y_01_6_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Y</type>
      <name>T</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ValueType_3_01Y_01_6_01_4.html</anchorfile>
      <anchor>aeb73a6623cdf4d10963aa7f252534d17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType_3_01const_01Y_01_6_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Y</type>
      <name>T</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ValueType_3_01const_01Y_01_6_01_4.html</anchorfile>
      <anchor>a2e2c6bafaac6d68ee4c9ef8202edc21a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>Rapicorn::Aida::IdentifierParts</name>
    <filename>unionRapicorn_1_1Aida_1_1IdentifierParts.html</filename>
    <class kind="struct">Rapicorn::Aida::IdentifierParts::ORBID</class>
    <member kind="function">
      <type>constexpr</type>
      <name>IdentifierParts</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>a3d7c2af56424e75ff820e82e14b7198f</anchor>
      <arglist>(uint64 vu64)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>IdentifierParts</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>a3e2119e468b9872428aac5de5c239ce8</anchor>
      <arglist>(MessageId id, uint sender_con, uint receiver_con)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>IdentifierParts</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>a8984256acbd443142644f4c6763944d9</anchor>
      <arglist>(const ORBID &amp;, uint orbid_con, uint orbid_v32, uint type_index)</arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>vuint64</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>ad33efacddb514dd1aca6456f8cb7d796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::Aida::IdentifierParts::@3</type>
      <name>@4</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>acfeb429a15c196c2559d67652cf4c87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>sender_connection</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@3.html</anchorfile>
      <anchor>a56c9b3bd7b10439f0b895164cce00379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>msg_unused</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@3.html</anchorfile>
      <anchor>a67c8339883b1938583ca9ad7450dc447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>receiver_connection</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@3.html</anchorfile>
      <anchor>a36684632fce20266078b888205ec3294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>msg_unused2</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@3.html</anchorfile>
      <anchor>a40636e24370f51bd6ddb762bb23a8771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>message_id</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@3.html</anchorfile>
      <anchor>a52601500e457e01a9134b844611ebbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::Aida::IdentifierParts::@5</type>
      <name>@6</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1IdentifierParts.html</anchorfile>
      <anchor>a73630ceb81d4037a40a9def1ffdb89c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>orbid32</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@5.html</anchorfile>
      <anchor>a987f7f00095b97d76446e50134946f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>orbid_connection</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@5.html</anchorfile>
      <anchor>a459ea6b22e2f22fa974a88dd3c6197d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>orbid_type_index</name>
      <anchorfile>structRapicorn_1_1Aida_1_1IdentifierParts_1_1@5.html</anchorfile>
      <anchor>a5c244b92f047c261a52ab7217001243f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::IdentifierParts::ORBID</name>
    <filename>structRapicorn_1_1Aida_1_1IdentifierParts_1_1ORBID.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::OrbObject</name>
    <filename>classRapicorn_1_1Aida_1_1OrbObject.html</filename>
    <member kind="function">
      <type>uint64</type>
      <name>orbid</name>
      <anchorfile>classRapicorn_1_1Aida_1_1OrbObject.html</anchorfile>
      <anchor>a6c5e62197597ed8a591a40043cb5bad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>OrbObject</name>
      <anchorfile>classRapicorn_1_1Aida_1_1OrbObject.html</anchorfile>
      <anchor>a455bef4c144aa7f5abb4752c1a736521</anchor>
      <arglist>(uint64 orbid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::SmartHandle</name>
    <filename>classRapicorn_1_1Aida_1_1SmartHandle.html</filename>
    <class kind="struct">Rapicorn::Aida::SmartHandle::NullSmartHandle</class>
    <member kind="function">
      <type>uint64</type>
      <name>_orbid</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>a736ae0cd3c52facc6dc3c05b6031b773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>a9665b5266b3faea4f527408bf6e0236e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>a98781332c9df4f46d1bf2e4bdb4f4b99</anchor>
      <arglist>(std::nullptr_t) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>a8a8950a3abdc5edd558cdc0c639640d7</anchor>
      <arglist>(std::nullptr_t) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>ae4ff471b5f63719e7a73f3d9ece348d3</anchor>
      <arglist>(const SmartHandle &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>ae60f93b6679e8f5e2a96ab0f8ea78b0c</anchor>
      <arglist>(const SmartHandle &amp;) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NullHandle</type>
      <name>_null_handle</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>aa0371fd6c4d83d9ad0661280ec0ed287</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SmartHandle</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartHandle.html</anchorfile>
      <anchor>ab11fc369e2e56a3afc16c4042b94276c</anchor>
      <arglist>(OrbObject &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::SmartMember</name>
    <filename>classRapicorn_1_1Aida_1_1SmartMember.html</filename>
    <templarg>SmartHandle</templarg>
    <base>Rapicorn::Aida::SmartHandle</base>
    <member kind="function">
      <type></type>
      <name>SmartMember</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartMember.html</anchorfile>
      <anchor>a84b5db08617cdc53a0b0f38ff953c2c4</anchor>
      <arglist>(const SmartHandle &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1SmartMember.html</anchorfile>
      <anchor>a1c1900e66ed6b535984e670ea4dff524</anchor>
      <arglist>(const SmartHandle &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::_ServantType</name>
    <filename>structRapicorn_1_1Aida_1_1__ServantType.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::_HandleType</name>
    <filename>structRapicorn_1_1Aida_1_1__HandleType.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ObjectBroker</name>
    <filename>classRapicorn_1_1Aida_1_1ObjectBroker.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pop_handle</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>ad8c7713ad22f25ab4daf2af46ea43b65</anchor>
      <arglist>(FieldReader &amp;, SmartHandle &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>post_msg</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a3a6e1702013bd47631e442607d33da42</anchor>
      <arglist>(FieldBuffer *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ServerConnection *</type>
      <name>new_server_connection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a0fddc4fa1d2a6994b93063c1a3bfb04b</anchor>
      <arglist>(const std::string &amp;feature_keys)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientConnection *</type>
      <name>new_client_connection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a17ff4663a45881b76c9065fd2bac7bff</anchor>
      <arglist>(const std::string &amp;feature_keys)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>connection_id_from_signal_handler_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>af6a525198be15220c9b38d24e8602d8c</anchor>
      <arglist>(size_t signal_handler_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>connection_id_from_orbid</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a830c65a20378632bcbf9917c478e3b3d</anchor>
      <arglist>(uint64 orbid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>connection_id_from_handle</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a76c2fe2e10ed76ce6186e234b8879524</anchor>
      <arglist>(const SmartHandle &amp;sh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>connection_id_from_keys</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>afa0fac62d0eac2e71caea321d35fe8fa</anchor>
      <arglist>(const vector&lt; std::string &gt; &amp;feature_key_list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>sender_connection_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>abd18c7907fc4f4e6dd54b0490a37eaea</anchor>
      <arglist>(uint64 msgid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint</type>
      <name>receiver_connection_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a1422876ee55bb5e2c8a5fbeb82ed655f</anchor>
      <arglist>(uint64 msgid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FieldBuffer *</type>
      <name>renew_into_result</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a4bad3d8210b4f8de78fbfab2b7bef2db</anchor>
      <arglist>(FieldBuffer *fb, MessageId m, uint rconnection, uint64 h, uint64 l, uint32 n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FieldBuffer *</type>
      <name>renew_into_result</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>af71779b3489cd0389de2e9526bcea1af</anchor>
      <arglist>(FieldReader &amp;fbr, MessageId m, uint rconnection, uint64 h, uint64 l, uint32 n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetHandle</type>
      <name>smart_handle_down_cast</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a8124d7d69a55a5f21e17708c2a024969</anchor>
      <arglist>(SmartHandle smh)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>tie_handle</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>ad0d30a79a7dfeb0e6ea7baa504a3fce5</anchor>
      <arglist>(SmartHandle &amp;, uint64)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>Rapicorn::Aida::FieldUnion</name>
    <filename>unionRapicorn_1_1Aida_1_1FieldUnion.html</filename>
    <member kind="variable">
      <type>int64</type>
      <name>vint64</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>a0cb086088659f5ea2d274be4697ff6c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vdouble</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>a993fb3797e21e36d011299738ac36904</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Any *</type>
      <name>vany</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>a7a11bdd33dac5b50ac43e69639cec7dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>smem</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>a9c3152ea0f4d94dfde9d8835b846e200</anchor>
      <arglist>[(sizeof(std::string)+7)/8]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pmem</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>a9734dc75c26c555294143eca5abd23a3</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>bytes</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>afe1d9e8745a348ae406a783262329bea</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::Aida::FieldUnion::@7</type>
      <name>@8</name>
      <anchorfile>unionRapicorn_1_1Aida_1_1FieldUnion.html</anchorfile>
      <anchor>aecdb80882d465899f15a0a2366d89fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>index</name>
      <anchorfile>structRapicorn_1_1Aida_1_1FieldUnion_1_1@7.html</anchorfile>
      <anchor>af11dd0cb82b7fe88c7b0c99e9e1956a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>capacity</name>
      <anchorfile>structRapicorn_1_1Aida_1_1FieldUnion_1_1@7.html</anchorfile>
      <anchor>af6fc9873aa4c9203d486fde017f35555</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldBuffer</name>
    <filename>classRapicorn_1_1Aida_1_1FieldBuffer.html</filename>
    <member kind="function">
      <type>uint32</type>
      <name>size</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a33daeca2a744bd395a46978bf6204664</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>capacity</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a2b6bdf17d96d2a866b3ae769281dd57a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>first_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ace0ecdc1407755a406da2843324b98ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_bool</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ac123f6ae692019d77e7fc882ee39f088</anchor>
      <arglist>(bool vbool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_int64</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>af26c607cc483ec33aab0345683791962</anchor>
      <arglist>(int64 vint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_evalue</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a9cc51dfae3dad9d3855fc9b4431c3b66</anchor>
      <arglist>(int64 vint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_double</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a24550dce8dad304206a82169f0f13eb8</anchor>
      <arglist>(double vdouble)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a061e22492969114c3af9b5aa3ba0136e</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_object</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a1f7db89b0c324b556d60a4a8bfbdd4cd</anchor>
      <arglist>(uint64 objid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ad0ffb71e0de47e71e4e2203764650d42</anchor>
      <arglist>(const Any &amp;vany)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_header1</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a6ef4189e3ed0689adbab0c17e41937e2</anchor>
      <arglist>(MessageId m, uint c, uint64 h, uint64 l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_header2</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a0ac9045a5f16330bdf6313f84983a442</anchor>
      <arglist>(MessageId m, uint c, uint r, uint64 h, uint64 l)</arglist>
    </member>
    <member kind="function">
      <type>FieldBuffer &amp;</type>
      <name>add_rec</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a4f6fd8b272328fbf45b4b643a6aa599e</anchor>
      <arglist>(uint32 nt)</arglist>
    </member>
    <member kind="function">
      <type>FieldBuffer &amp;</type>
      <name>add_seq</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a27f8b3891cfb52a48cabbc04dd6c9d97</anchor>
      <arglist>(uint32 nt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a648fec2207b1631475a63d397b45db96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>first_id_str</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a79f46a983f2a2d4e7f3acc0356ab2e88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>to_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ad644b4c368463917ebddbf76495fbf76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>af0f26de201e7601e921558ede4be0e58</anchor>
      <arglist>(uint32 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>aabff9b11c91bcab7582038e4f461a2b4</anchor>
      <arglist>(ULongIffy v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ab908afb225597f7b9d2228af1c7ed56b</anchor>
      <arglist>(uint64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ab7bc48f374c89366b3238f03ba918afc</anchor>
      <arglist>(int32 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>aab73aceebd5725bc514fdffb25db0870</anchor>
      <arglist>(LongIffy v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a1e667a125d554b4b9a2e1448980b0e09</anchor>
      <arglist>(int64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ad0aa970a340b08472b9ca5131132c08a</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a25b80e9e4a55d9db734129b8844ad17c</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a4b347f868fc47eca497e7eec4915dde9</anchor>
      <arglist>(EnumValue e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a2d97a2f43a8ec9004c035e295052121b</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ad0101f72b9d4340d2556ee4eed01b485</anchor>
      <arglist>(Any v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a933993540e8c91d7c877dbeceda3efda</anchor>
      <arglist>(const TypeHash &amp;h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>type_name</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>af78374e8722006dfbdb399c9b00e29b9</anchor>
      <arglist>(int field_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FieldBuffer *</type>
      <name>_new</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>aa06fd91841d1f280faf39a4e4186018d</anchor>
      <arglist>(uint32 _ntypes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FieldBuffer *</type>
      <name>new_result</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a3a33430005481c6c1826f8260a3af1d6</anchor>
      <arglist>(MessageId m, uint rconnection, uint64 h, uint64 l, uint32 n=1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ac07109b1e7800e27ebf1da3e9a3fcf27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32</type>
      <name>offset</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>ad4e34e8e1b766bf35e10fb2150614431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TypeKind</type>
      <name>type_at</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a79e3993e3a4d3c4a0b4d1fa928c78e95</anchor>
      <arglist>(uint32 n) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>afb996af662171db2f93862a458795227</anchor>
      <arglist>(TypeKind ft)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FieldUnion &amp;</type>
      <name>getu</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a390c65467edc9aa7cd25ac6f2c960a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FieldUnion &amp;</type>
      <name>addu</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a316ca02f6f9975a3f94738f3e8ad4093</anchor>
      <arglist>(TypeKind ft)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FieldUnion &amp;</type>
      <name>uat</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a703766873cd42eae402bac8f8721236f</anchor>
      <arglist>(uint32 n) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FieldBuffer</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a3419084f0e5222d08f07aa821bfa954e</anchor>
      <arglist>(uint32 _ntypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FieldBuffer</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>aba09462e426abb452bc34adf1baca270</anchor>
      <arglist>(uint32, FieldUnion *, uint32)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FieldUnion *</type>
      <name>buffermem</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer.html</anchorfile>
      <anchor>a27db00d1fa8d41a66c410157872fd850</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldBuffer8</name>
    <filename>classRapicorn_1_1Aida_1_1FieldBuffer8.html</filename>
    <base>Rapicorn::Aida::FieldBuffer</base>
    <member kind="function">
      <type></type>
      <name>FieldBuffer8</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldBuffer8.html</anchorfile>
      <anchor>a2ecff28db1aacee88a86af732845a2a0</anchor>
      <arglist>(uint32 ntypes=8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldReader</name>
    <filename>classRapicorn_1_1Aida_1_1FieldReader.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldReader</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>aedfd4f870b6dc31a43c351fc373352f5</anchor>
      <arglist>(const FieldBuffer &amp;fb)</arglist>
    </member>
    <member kind="function">
      <type>const FieldBuffer *</type>
      <name>field_buffer</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ad40653d67702cb6e4d47cbb9ff1bdae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>aa1d41d4e0370d72020d3e0d5f6acba41</anchor>
      <arglist>(const FieldBuffer &amp;fb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a8969b27890ab95edea241b23b900c9f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>remaining</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a8fd978e6ee38652b1d2515bea4aa5a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skip</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ad3be1d38c43f2b6bb7d55d4abd750aef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skip_header</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a48487c5f2a1152558ce4f3abe07d9781</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>n_types</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ae4120cadbb7f32c9eb35abb83b842088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeKind</type>
      <name>get_type</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a97ae08ba0c88e2147f516037037a920c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>get_bool</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>aab0a6d1c79551aaf8f76d044c11c7de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>get_int64</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ab242144917d48506aaf264f16bf0fd2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>get_evalue</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a3bc5460467d309f61ef658c0df5a6cca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_double</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a55e27efea72e992e79a80f454c8f813f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String &amp;</type>
      <name>get_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ace97103fe9d12521dd742a84e8a09a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>get_object</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a92f6757cdf1287d635b95874f5a97aa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Any &amp;</type>
      <name>get_any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>adf0195953fd1a0877af9091c62327afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FieldBuffer &amp;</type>
      <name>get_rec</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ad8bbfdec928d0d8df5ae912b02796b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FieldBuffer &amp;</type>
      <name>get_seq</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a2d19457129f1ca8d912da5a695af3b90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>pop_bool</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a957e3db30c6779b875d42d55013e8bfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>pop_int64</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>aae8390b016b3b1b9e6d476614ff58718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>pop_evalue</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a386a45264ba22e9a363b2ab4cdd29b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pop_double</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a1f49ea42be7e96f93e52d8eb630d54d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String &amp;</type>
      <name>pop_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a46ac92649fae56330f04bff841a3b78c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>pop_object</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a472b60313c9bb88518acee9a9e62c66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Any &amp;</type>
      <name>pop_any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ae75d5a205790de591b70b8811a2e56f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FieldBuffer &amp;</type>
      <name>pop_rec</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a4c72c5163107addf193fa92c4eef9977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FieldBuffer &amp;</type>
      <name>pop_seq</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a2fe8599e4d96f19c6c1cd8d6130a7e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a52511d3beead5ac2c733e8a53eaf4bbd</anchor>
      <arglist>(uint32 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ac8857e09b59d4b604b50384eb103bbe3</anchor>
      <arglist>(ULongIffy &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>aec8a835125c6c8ae4982a585141ba4c1</anchor>
      <arglist>(uint64 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a767139f9bbe348ea3c92e8e0521d7d3c</anchor>
      <arglist>(int32 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a7f379b890d49ccb212b5f6abc08b91b5</anchor>
      <arglist>(LongIffy &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a98a64f0da860630f6d6f85a194826b21</anchor>
      <arglist>(int64 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a73b430bd5d3a665611b24596c3b49d71</anchor>
      <arglist>(bool &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ace825f4860ebde4766fd82ef6166c370</anchor>
      <arglist>(double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ad3f5b0881e91c46b0d5156b1b59169d1</anchor>
      <arglist>(EnumValue &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a9cbd4cae79ac76139c6bc187cbf2c445</anchor>
      <arglist>(String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>ad51bfac3c540cfd21e39f499dbd37dce</anchor>
      <arglist>(Any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>a5a1a7c60d8b50b931eca64f9cf706bc9</anchor>
      <arglist>(TypeHash &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1FieldReader.html</anchorfile>
      <anchor>afe12725a023cc777cf6acf3ac7f5fa02</anchor>
      <arglist>(std::vector&lt; bool &gt;::reference v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::BaseConnection</name>
    <filename>classRapicorn_1_1Aida_1_1BaseConnection.html</filename>
    <member kind="function">
      <type>uint</type>
      <name>connection_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>afe069f7e17a610d846bf3cf3dedef3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>notify_fd</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ae64abac96700146472c14b3b945f33d6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>pending</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ab685f3484a58e3a4f4ae5ae0bca4ea51</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ab41fb38f7338907acad5f4b896a99e31</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remote_origin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ae379b3927e67a5b0e05fd5828532d25b</anchor>
      <arglist>(ImplicitBase *rorigin)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SmartHandle</type>
      <name>remote_origin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a9fe9eca3e5b639b2df1e5077288a48c5</anchor>
      <arglist>(const vector&lt; std::string &gt; &amp;feature_key_list)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>register_connection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a65d54150cff5d6417fb5c969b85df2b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregister_connection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a1f005147eb7d2b932ea27a5fc3eb21cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BaseConnection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a4893c9d009cca6d9c7d7ad7936704576</anchor>
      <arglist>(const std::string &amp;feature_keys)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_msg</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a0d4b6ff556b65b01aeb085ad904859d4</anchor>
      <arglist>(FieldBuffer *)=0</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static BaseConnection *</type>
      <name>connection_from_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a0da00e41a238731726cfb3530383603d</anchor>
      <arglist>(uint id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ServerConnection</name>
    <filename>classRapicorn_1_1Aida_1_1ServerConnection.html</filename>
    <base>Rapicorn::Aida::BaseConnection</base>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodEntry</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodRegistry</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServerConnection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a2792110b6c01fe5fbd44045891589dbb</anchor>
      <arglist>(const std::string &amp;feature_keys)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64</type>
      <name>instance2orbid</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a6411b46bbfe947fd8ba4a130be4f1c85</anchor>
      <arglist>(ImplicitBase *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ImplicitBase *</type>
      <name>orbid2instance</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a15e5314b3a57b7774454c7a3a6ec36d4</anchor>
      <arglist>(uint64)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ImplicitBase *</type>
      <name>remote_origin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a2ff66f050f290f45c93fd87ba156ba88</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(Rapicorn::Aida::FieldReader &amp;)&gt;</type>
      <name>EmitResultHandler</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>ac2ef8e005cdb4968e9a1b2e76e5de1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>emit_result_handler_add</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a931a750cd1007a6520f4cd6db91d4d88</anchor>
      <arglist>(size_t id, const EmitResultHandler &amp;handler)=0</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DispatchFunc</type>
      <name>find_method</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a6fb8fe2ab7a33a025d893e4d6a27bcea</anchor>
      <arglist>(uint64 hi, uint64 lo)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ServerConnection::MethodEntry</name>
    <filename>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodEntry.html</filename>
    <member kind="variable">
      <type>uint64</type>
      <name>hashhi</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodEntry.html</anchorfile>
      <anchor>a07997f6acb3ed6c98d2030a176a78613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>hashlo</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodEntry.html</anchorfile>
      <anchor>aefab90db9e2d8d850f3dfa8cadf01342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DispatchFunc</type>
      <name>dispatcher</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodEntry.html</anchorfile>
      <anchor>a20ed23119ca9ef888654a2ba81773559</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ServerConnection::MethodRegistry</name>
    <filename>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodRegistry.html</filename>
    <member kind="function">
      <type></type>
      <name>MethodRegistry</name>
      <anchorfile>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodRegistry.html</anchorfile>
      <anchor>a416712209f58a60b493b6ff9be728fdb</anchor>
      <arglist>(T(&amp;static_const_entries)[S])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ClientConnection</name>
    <filename>classRapicorn_1_1Aida_1_1ClientConnection.html</filename>
    <base>Rapicorn::Aida::BaseConnection</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>ClientConnection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>a5d5e9facb52dd2660969f621ed53c7b3</anchor>
      <arglist>(const std::string &amp;feature_keys)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FieldBuffer *</type>
      <name>call_remote</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>a1f830756b6086df66e82ebd5c4edd5ec</anchor>
      <arglist>(FieldBuffer *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>signal_connect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>aeccc89f4e8b14d56ebe288c0de97c029</anchor>
      <arglist>(uint64 hhi, uint64 hlo, uint64 orbid, SignalEmitHandler seh, void *data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>signal_disconnect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>afaa95679fa922e497196ba5c8cd00a13</anchor>
      <arglist>(size_t signal_handler_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>type_name_from_orbid</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>a6feeab3aae578c3a9cc75bfa58cb7ea1</anchor>
      <arglist>(uint64 orbid)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Property</name>
    <filename>classRapicorn_1_1Aida_1_1Property.html</filename>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>ac18360cafde52609cde40d85fdebd122</anchor>
      <arglist>(const char *cident, const char *clabel, const char *cblurb, const char *chints)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_value</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>ae92a47a05556340ee428ee3b11aca5ff</anchor>
      <arglist>(PropertyHostInterface &amp;obj, const String &amp;svalue)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>get_value</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>ad636c0bacf09c67674297e73ba6d63b3</anchor>
      <arglist>(PropertyHostInterface &amp;obj)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_range</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>a842375ce2ead67912bae5bb813800121</anchor>
      <arglist>(PropertyHostInterface &amp;obj, double &amp;minimum, double &amp;maximum, double &amp;stepping)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readable</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>a7eca1e0d4ff212ba03bb8461aaa05739</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writable</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>af7d5e2c6d5279b19a21d0efa83a7c091</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ident</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>a4571f3df739dfb8d8882de55b6a80595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>label</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>aa395a002dadc4a2904489a4506d7d954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>blurb</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>a432888d308084727f79a17c0fa066a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>hints</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Property.html</anchorfile>
      <anchor>ac2966392d498969d3ae065c2025f8509</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyList</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyList.html</filename>
    <member kind="typedef">
      <type>Aida::Property</type>
      <name>Property</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyList.html</anchorfile>
      <anchor>a566315f640849e3b27934dff8534bb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Property **</type>
      <name>list_properties</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyList.html</anchorfile>
      <anchor>a0d5a581c4156febb3a01a8ab4cd42e11</anchor>
      <arglist>(size_t *n_properties) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyList</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyList.html</anchorfile>
      <anchor>a0f34f70ff66ba6052456ca315d7fdd85</anchor>
      <arglist>(Array &amp;a, const PropertyList &amp;c0=PropertyList(), const PropertyList &amp;c1=PropertyList(), const PropertyList &amp;c2=PropertyList(), const PropertyList &amp;c3=PropertyList(), const PropertyList &amp;c4=PropertyList(), const PropertyList &amp;c5=PropertyList(), const PropertyList &amp;c6=PropertyList(), const PropertyList &amp;c7=PropertyList(), const PropertyList &amp;c8=PropertyList(), const PropertyList &amp;c9=PropertyList())</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyBool</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyBool.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Aida::Property</base>
    <member kind="function">
      <type></type>
      <name>PropertyBool</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>a69b49a25128a16c4dca1549c321a0401</anchor>
      <arglist>(void(Class::*csetter)(bool), bool(Class::*cgetter)() const, const char *cident, const char *clabel, const char *cblurb, const char *chints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>a261c5c8f02634d597f938bfbae8e65d9</anchor>
      <arglist>(PropertyHostInterface &amp;obj, const String &amp;svalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>a29a89d0682e9f8be47db2e875ebda7dd</anchor>
      <arglist>(PropertyHostInterface &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_range</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>a7f7f3ff2e4d931d98b6bce47117fb17f</anchor>
      <arglist>(PropertyHostInterface &amp;obj, double &amp;minimum, double &amp;maximum, double &amp;stepping)</arglist>
    </member>
    <member kind="variable">
      <type>void(Class::*</type>
      <name>setter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>acdfbfc425b60bcae8ac82b031d8f358f</anchor>
      <arglist>)(bool)</arglist>
    </member>
    <member kind="variable">
      <type>bool(Class::*</type>
      <name>getter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyBool.html</anchorfile>
      <anchor>a432abbf34e6651818d1cc577eae6f9b9</anchor>
      <arglist>)() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyRange</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyRange.html</filename>
    <templarg>Class</templarg>
    <templarg>Type</templarg>
    <base>Rapicorn::Aida::Property</base>
    <member kind="function">
      <type></type>
      <name>PropertyRange</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a7f33baa473e53da1aed60fdcbf6f5af6</anchor>
      <arglist>(void(Class::*csetter)(Type), Type(Class::*cgetter)() const, const char *cident, const char *clabel, const char *cblurb, Type cminimum_value, Type cmaximum_value, Type cstepping, const char *chints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a40992505ba3dcb65c8f6b9f0b9311d30</anchor>
      <arglist>(PropertyHostInterface &amp;obj, const String &amp;svalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a1edaf9f0d6834d73d809d189253e1d9c</anchor>
      <arglist>(PropertyHostInterface &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_range</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a8f9faf9687521e1e873c1600feef13cc</anchor>
      <arglist>(PropertyHostInterface &amp;obj, double &amp;minimum, double &amp;maximum, double &amp;stepping)</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>minimum_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>acb6f3aac1dd326f4559ee3640526ef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>maximum_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a18b132b6b8029bbadba0d95aa1062af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>stepping</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a564c76be68f003c8405b0566591a90fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(Class::*</type>
      <name>setter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>aa1fd4eaa7c639e9b6209e0c1c65179a0</anchor>
      <arglist>)(Type)</arglist>
    </member>
    <member kind="variable">
      <type>Type(Class::*</type>
      <name>getter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyRange.html</anchorfile>
      <anchor>a3c22fca6bb7e4b5b7b629290e7213beb</anchor>
      <arglist>)() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyString</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyString.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Aida::Property</base>
    <member kind="function">
      <type></type>
      <name>PropertyString</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>a6cb0f53bfb8b2aaebc7b112527572da7</anchor>
      <arglist>(void(Class::*csetter)(const String &amp;), String(Class::*cgetter)() const, const char *cident, const char *clabel, const char *cblurb, const char *chints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>a7477b954b41b020d69782fdacb2fe8e5</anchor>
      <arglist>(PropertyHostInterface &amp;obj, const String &amp;svalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>a9f38167e4ebbf185750e15b7f432951b</anchor>
      <arglist>(PropertyHostInterface &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_range</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>a7cd5dd461ae1f0c1430fc9851e193fad</anchor>
      <arglist>(PropertyHostInterface &amp;obj, double &amp;minimum, double &amp;maximum, double &amp;stepping)</arglist>
    </member>
    <member kind="variable">
      <type>void(Class::*</type>
      <name>setter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>a7e4e1f9a2e2c219cccb331f870575285</anchor>
      <arglist>)(const String &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>String(Class::*</type>
      <name>getter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyString.html</anchorfile>
      <anchor>ad6dc45843605ba0f3fa398174ac55c6a</anchor>
      <arglist>)() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyEnum</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyEnum.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Rapicorn::Aida::Property</base>
    <member kind="function">
      <type></type>
      <name>PropertyEnum</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a87fe02f82f4cd66eeb9a0a3d153f72a7</anchor>
      <arglist>(void(Class::*csetter)(Type), Type(Class::*cgetter)() const, const char *cident, const char *clabel, const char *cblurb, const TypeCode &amp;etype, const char *chints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a872f38d4563a2ff5d93282736178c701</anchor>
      <arglist>(PropertyHostInterface &amp;obj, const String &amp;svalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_value</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a1dc5ecd99a0975ae65f8f33f7030ccaa</anchor>
      <arglist>(PropertyHostInterface &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_range</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a94df57a52651e80a3122889d2128f5d3</anchor>
      <arglist>(PropertyHostInterface &amp;obj, double &amp;minimum, double &amp;maximum, double &amp;stepping)</arglist>
    </member>
    <member kind="variable">
      <type>const TypeCode</type>
      <name>enum_type</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a9907f70968fd541c17c2c4a30d05164b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(Class::*</type>
      <name>setter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a2dbd08d2b71e54f876f26aaa25d6c7c1</anchor>
      <arglist>)(Type)</arglist>
    </member>
    <member kind="variable">
      <type>Type(Class::*</type>
      <name>getter</name>
      <anchorfile>structRapicorn_1_1Aida_1_1PropertyEnum.html</anchorfile>
      <anchor>a2f7a5235580bf3518983ae3dfaae41a2</anchor>
      <arglist>)() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Signal</name>
    <filename>classRapicorn_1_1Aida_1_1Signal.html</filename>
    <templarg>SignalSignature</templarg>
    <templarg>Collector</templarg>
    <base protection="protected">Lib::ProtoSignal</base>
    <class kind="class">Rapicorn::Aida::Signal::Connector</class>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal.html</anchorfile>
      <anchor>ac3eb60fdbf7c2f81cba5490d66c02856</anchor>
      <arglist>(const CbFunction &amp;method=CbFunction())</arglist>
    </member>
    <member kind="function">
      <type>Connector</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal.html</anchorfile>
      <anchor>a6049d8b4bdaf020030f568576aadfb7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorUntil0</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorUntil0.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Result</type>
      <name>CollectorResult</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorUntil0.html</anchorfile>
      <anchor>afdb74cb69eaa263a9468d1037421f926</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const CollectorResult &amp;</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorUntil0.html</anchorfile>
      <anchor>a85126aed3576558e3e4b769f3330cab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorUntil0.html</anchorfile>
      <anchor>a135401c8941ae52b429cc06d71d9a310</anchor>
      <arglist>(Result r)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorWhile0</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorWhile0.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Result</type>
      <name>CollectorResult</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorWhile0.html</anchorfile>
      <anchor>aac70127e414650e89b6de331ee773470</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const CollectorResult &amp;</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorWhile0.html</anchorfile>
      <anchor>aa2ba7ea41dc29890402e96afc70a48b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorWhile0.html</anchorfile>
      <anchor>a41026f0c01104bea3314198541dd0e7b</anchor>
      <arglist>(Result r)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorVector</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorVector.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>std::vector&lt; Result &gt;</type>
      <name>CollectorResult</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorVector.html</anchorfile>
      <anchor>ad4ed98888e8668cbcb7680a96ce97e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const CollectorResult &amp;</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorVector.html</anchorfile>
      <anchor>a6bb7494332aaaec6b27c8d43dbf0a088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRapicorn_1_1Aida_1_1CollectorVector.html</anchorfile>
      <anchor>aa3aa68e53e3ba77fb241f49f87439217</anchor>
      <arglist>(Result r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Connector</name>
    <filename>classRapicorn_1_1Aida_1_1Connector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Connector.html</anchorfile>
      <anchor>a5d8b6309f782f0a09d12f9c9aec91f18</anchor>
      <arglist>(Object &amp;instance, PMF method)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Connector.html</anchorfile>
      <anchor>a9e1bc6fa108048e7f390c7ceb867a03d</anchor>
      <arglist>(const CbFunction &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Connector.html</anchorfile>
      <anchor>a8e56e444e2a52f377e7db778ba237712</anchor>
      <arglist>(size_t connection_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::AsyncSignal</name>
    <filename>classRapicorn_1_1Aida_1_1AsyncSignal.html</filename>
    <templarg>SignalSignature</templarg>
    <base protection="protected">Lib::AsyncSignal</base>
    <class kind="class">Rapicorn::Aida::AsyncSignal::Connector</class>
    <member kind="function">
      <type></type>
      <name>AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1AsyncSignal.html</anchorfile>
      <anchor>a9604fa78b76b360aacbcab99c7ca97bd</anchor>
      <arglist>(const FutureFunction &amp;method=FutureFunction())</arglist>
    </member>
    <member kind="function">
      <type>Connector</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1Aida_1_1AsyncSignal.html</anchorfile>
      <anchor>ab9c6326c952508856f1eacf7de960181</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Aida::CxxStub</name>
    <filename>namespaceRapicorn_1_1Aida_1_1CxxStub.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorLast</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorLast.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Result</type>
      <name>CollectorResult</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorLast.html</anchorfile>
      <anchor>aad820580f4e293d892e698bf206b9276</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorLast.html</anchorfile>
      <anchor>a5c22cc80a8b3a01fbbd328912e0a27a6</anchor>
      <arglist>(Result r)</arglist>
    </member>
    <member kind="function">
      <type>CollectorResult</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorLast.html</anchorfile>
      <anchor>a4d5215ac2a26793323f6066c0b7cd25c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorDefault</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault.html</filename>
    <templarg></templarg>
    <base>Rapicorn::Aida::Lib::CollectorLast</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorDefault&lt; void &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault_3_01void_01_4.html</filename>
    <member kind="typedef">
      <type>void</type>
      <name>CollectorResult</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault_3_01void_01_4.html</anchorfile>
      <anchor>a4136118d4b5a8ece357e6aae148f16a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault_3_01void_01_4.html</anchorfile>
      <anchor>a33616b58eb9ea34b0fd09836cd38e7a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault_3_01void_01_4.html</anchorfile>
      <anchor>a6f29e499db50cb613356cd2a240377be</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>invoke</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a23ae1d84bb999e842312c8b66c44cea1</anchor>
      <arglist>(Collector &amp;collector, const std::function&lt; R(Args...)&gt; &amp;cbf, Args...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, void(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01void_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>invoke</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01void_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a0647c83eb5cc34b5c75994089bff7917</anchor>
      <arglist>(Collector &amp;collector, const std::function&lt; void(Args...)&gt; &amp;cbf, Args...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::HandlerLink</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>HandlerLink</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>ae3d75e40f61e7f0cfa30b883487f5bd0</anchor>
      <arglist>(const Function &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incref</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a60aa0f70f85559a581e25eda40e9fe2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decref</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a9171cc9f9157fed9cc0c1fa15091129b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlink</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a2c393b7d0d76b878f42a8330010ef23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>add_before</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>ad93fef2c2b2ed06d2b4bf25e93f0fcfb</anchor>
      <arglist>(const Function &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deactivate</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a1523f75eccaeeecbd2f43d1fe3f10df4</anchor>
      <arglist>(const Function &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_sibling</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a4a2d3fb262120903738972a1286a1b55</anchor>
      <arglist>(size_t id)</arglist>
    </member>
    <member kind="variable">
      <type>HandlerLink *</type>
      <name>next</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a774ebda15e4cfb57f07603777b77a83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HandlerLink *</type>
      <name>prev</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a1c71d15650978385ad8d1a54a916970d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Function</type>
      <name>function</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>aca87cb84538ffce4693bd1d2c465da34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ref_count</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</anchorfile>
      <anchor>a0a455b4e01973d9f406bd5cb0c9ff854</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::ProtoSignal&lt; R(Args...), Collector &gt;</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <base protection="private">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</base>
    <member kind="function">
      <type>size_t</type>
      <name>connect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a869983bcbc55785b7610e8ef451eba59</anchor>
      <arglist>(const CbFunction &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a7604988e787b114ba1e5fd5c98f8f1d7</anchor>
      <arglist>(size_t connection)</arglist>
    </member>
    <member kind="function">
      <type>CollectorResult</type>
      <name>emit</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>ad4b2b95e8d217b1ebd49958383b9ae49</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>CbFunction</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a2a8919ff302dc08d0ff00098a4e35063</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>CbFunction::result_type</type>
      <name>Result</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a7ee259849acbf46cd68e59d2f01d189f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Collector::CollectorResult</type>
      <name>CollectorResult</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a977d9ce43adbdd574029d0ac8f189b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>HandlerLink&lt; CbFunction &gt;</type>
      <name>SignalLink</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a70b2dcbb0d643d913c36b2ff5215d883</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ProtoSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>ab4401404012c18e0a171b149d37603b6</anchor>
      <arglist>(const CbFunction &amp;method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~ProtoSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>aede11622aa120e3152ceefb3fd760f91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, R(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>invoke</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>ad44ecf27efb4c5e046c478db38eac137</anchor>
      <arglist>(Promise &amp;promise, const std::function&lt; R(Args...)&gt; &amp;callback, Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, void(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01void_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>invoke</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01void_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a31c87cb3d2a5fad1b283477e5595d497</anchor>
      <arglist>(Promise &amp;promise, const std::function&lt; void(Args...)&gt; &amp;callback, Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</class>
    <member kind="function">
      <type>size_t</type>
      <name>connect_future</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a19c6c78c5a2526a4729d74d352e510fd</anchor>
      <arglist>(const FutureFunction &amp;fcb)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>connect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a86a3e1dddf38a4e331eaa87670570a53</anchor>
      <arglist>(const CbFunction &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>ab53e531a3645881fb3feab5335228ab4</anchor>
      <arglist>(size_t connection)</arglist>
    </member>
    <member kind="function">
      <type>Emission *</type>
      <name>emission</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a0a3cb0020625de520174088969020200</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::function&lt; std::future&lt; R &gt;Args...)&gt;</type>
      <name>FutureFunction</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a3d3a9385ef57d798c08df33483fe4fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>CbFunction</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a8c7654c8b715bd0e1523fcd8975864fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>HandlerLink&lt; FutureFunction &gt;</type>
      <name>SignalLink</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a4d233e303497c8c75efcc07db248db85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>abbd9228896955997bb2e76ecbe5f14d4</anchor>
      <arglist>(const FutureFunction &amp;method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>abef356be6fed9dbdef42deaebbdc24dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</filename>
    <member kind="function">
      <type></type>
      <name>Emission</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>a1e01b0ecd6bc495118458977a7668a9d</anchor>
      <arglist>(SignalLink *start_link, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_value</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>ae6ecfaa1e9c98697e620852abab682cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>get_value</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>aba33e1deb6626207500450d297a5945d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>done</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>a011e9eff39f1256f7b102e92c2b890f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pending</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>a671229bdb7c6e3587223f7963c9843ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</anchorfile>
      <anchor>a8d49bd56052f4949d2e5d496b2f4fb07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::AnsiColors</name>
    <filename>namespaceRapicorn_1_1AnsiColors.html</filename>
    <member kind="enumeration">
      <name>Colors</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESET</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515ab60027c645f68c4692be928555c6b5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color_code</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>aa40ee649038738e5f9bde4bb9e5c2968</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_envkey</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ab74022b4aadf4c6c52b60b291590be5e</anchor>
      <arglist>(const String &amp;env_var, const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorize_tty</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a539cd043ebe5503de6bc834d5e0f5b9f</anchor>
      <arglist>(int fd)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a7dcd80a9f6c9a5f6db335a5c077219f9</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Blit::RenderTable</name>
    <filename>structRapicorn_1_1Blit_1_1RenderTable.html</filename>
    <member kind="variable">
      <type>void(*</type>
      <name>clear_fpu</name>
      <anchorfile>structRapicorn_1_1Blit_1_1RenderTable.html</anchorfile>
      <anchor>a5b3000ef40b2be459c31f87fa391a11f</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>combine_over</name>
      <anchorfile>structRapicorn_1_1Blit_1_1RenderTable.html</anchorfile>
      <anchor>a4e2e247dd877a6f5295464f20e934fe9</anchor>
      <arglist>)(uint32 *dst, const uint32 *src, uint span)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>gradient_line</name>
      <anchorfile>structRapicorn_1_1Blit_1_1RenderTable.html</anchorfile>
      <anchor>a908d070e00cae7f1413bdb585c6c999e</anchor>
      <arglist>)(uint32 *pixel, uint32 *bound, uint32 alpha1pre16, uint32 red1pre16, uint32 green1pre16, uint32 blue1pre16, uint32 alpha2pre16, uint32 red2pre16, uint32 green2pre16, uint32 blue2pre16)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Factory::WidgetTypeFactory</name>
    <filename>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</filename>
    <base protection="protected">Rapicorn::Deletable</base>
    <member kind="function">
      <type></type>
      <name>RAPICORN_CLASS_NON_COPYABLE</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>ad90b615269146055b2f4f043c2d2c612</anchor>
      <arglist>(WidgetTypeFactory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WidgetTypeFactory</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>a941e188d7b94ba28d1d2f9aa67cb8a7d</anchor>
      <arglist>(const char *namespaced_ident, bool _isevh, bool _iscontainer, bool)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetImpl *</type>
      <name>create_widget</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>ad6a784483c17767277ed2f7438cd0ad7</anchor>
      <arglist>(FactoryContext *fc) const =0</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>type_name</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>a4dff0f2fe6638e12b6f21888c97967bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>const String</type>
      <name>qualified_type</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>a1195e7193651add314c959425b6159be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>iseventhandler</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>a264c99b44fd18920f67123a48b46c14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>iscontainer</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>ac81c890a1fe1e6e043d86b699d463402</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>register_widget_factory</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>ac9cdd157db488bf820721f1843a191ba</anchor>
      <arglist>(const WidgetTypeFactory &amp;itfactory)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>sanity_check_identifier</name>
      <anchorfile>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</anchorfile>
      <anchor>a6657df15ecf71fad5ea00ed9fc5c069b</anchor>
      <arglist>(const char *namespaced_ident)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::Atomic</name>
    <filename>classRapicorn_1_1Lib_1_1Atomic.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T</type>
      <name>load</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a4cc35dfebd8d54e992ee5b4036168d6f</anchor>
      <arglist>() const volatile</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a328ce39e24402d6b03c816419d0b1a94</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cas</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>af05ebe35b68da7472e51f5522e38d1d1</anchor>
      <arglist>(T o, T n) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a3405c8325c3495cbf54e716e299afb45</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a4eaff71fbc0b3239f812e59bd90c8de2</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator&amp;=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a5f31f1f0cc5e6b2a4f847439ea29fba2</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator^=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a9ad0a55e46aff8592a3b98d27e3466ba</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator|=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>add0aedcf7bf3a757accec9170b79543b</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a8ae72a871683d16ece5643346aa8c1fb</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator++</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>aa101caea8f0195c6a30f675dbad44339</anchor>
      <arglist>(int) volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator--</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a6b4a4f03275e25655ed656877f44286c</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator--</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a5b89da81fb96f63edd70356759580aed</anchor>
      <arglist>(int) volatile</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a104ce2a163522cd6935fed427aafe5a1</anchor>
      <arglist>(T i) volatile</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>ae46e2667d75adbbdc9bc7aa4ccdd0212</anchor>
      <arglist>() const volatile</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>constexpr</type>
      <name>Atomic</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a746b272bb4cf3661ae972d1b4f62b569</anchor>
      <arglist>(T i)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Atomic&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>a8ca5f7aeb6016a210de0a075a239cbed</anchor>
      <arglist>(Atomic&lt; T &gt; &amp;o)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Atomic&lt; T &gt; volatile &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Lib_1_1Atomic.html</anchorfile>
      <anchor>ab61ddfd8783067c9619bbbdc320d17c2</anchor>
      <arglist>(Atomic&lt; T &gt; &amp;o) volatile</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::OnceScope</name>
    <filename>classRapicorn_1_1Lib_1_1OnceScope.html</filename>
    <member kind="function">
      <type></type>
      <name>OnceScope</name>
      <anchorfile>classRapicorn_1_1Lib_1_1OnceScope.html</anchorfile>
      <anchor>af03aadb7516093c8e071f2770f60ef5d</anchor>
      <arglist>(volatile char *volatile p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1Lib_1_1OnceScope.html</anchorfile>
      <anchor>a9435188cb4c1e26a2aaf7b7ffecf84ef</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Path</name>
    <filename>namespaceRapicorn_1_1Path.html</filename>
    <member kind="function">
      <type>String</type>
      <name>dirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ab2f8dec1b122e92dc8c8f79b857d569a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>basename</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2de3f9da8ea9637473babea208cafbd8</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>abspath</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>abfb4c9905790e104afdfe480cb55f9d2</anchor>
      <arglist>(const String &amp;path, const String &amp;incwd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>acf7b18825e3ff1d026f00623cade1405</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>af0a67c6d6605e957a44ab243f5a72a7d</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>skip_root</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a4d21ccd7a130112bd10db713fb53d14a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a3d99afd50c944702015419628e88323e</anchor>
      <arglist>(const String &amp;frag0, const String &amp;frag1, const String &amp;frag2, const String &amp;frag3, const String &amp;frag4, const String &amp;frag5, const String &amp;frag6, const String &amp;frag7, const String &amp;frag8, const String &amp;frag9, const String &amp;frag10, const String &amp;frag11, const String &amp;frag12, const String &amp;frag13, const String &amp;frag14, const String &amp;frag15)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ae1304999c5d8503029949aa458f4ee52</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a8ed528ee7f3f017a61731b4b4973116e</anchor>
      <arglist>(const String &amp;file1, const String &amp;file2)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cwd</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>aea9cf3ea2b5c66b186b33206cae40a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>searchpath_split</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a4a56c3a92f67437ae3d32f27693436f3</anchor>
      <arglist>(const String &amp;searchpath)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>searchpath_find</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a71df0f55836d0b3a00f22d7b5c793610</anchor>
      <arglist>(const String &amp;searchpath, const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>vpath_find</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2eb15061edbfc230170e62a0495f34de</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>memread</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a22a1c0568cd4f8ee787e4bbfb2707aa6</anchor>
      <arglist>(const String &amp;filename, size_t *lengthp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memfree</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a3f2161eae6c6e64e7ba98743b457d124</anchor>
      <arglist>(char *memread_mem)</arglist>
    </member>
    <member kind="variable">
      <type>const String</type>
      <name>dir_separator</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a28a90e54c63517241b13a293dd5f0c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const String</type>
      <name>searchpath_separator</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a4ab36f6e566abeab79b57a689652fa2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::CustomPseudoRegistry</name>
    <filename>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</filename>
    <member kind="function">
      <type>const String &amp;</type>
      <name>ident</name>
      <anchorfile>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</anchorfile>
      <anchor>a9735e95c5070308e96f09130dcf0a78f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const String &amp;</type>
      <name>blurb</name>
      <anchorfile>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</anchorfile>
      <anchor>a1370e006375723578fc61b52f44133d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomPseudoRegistry</name>
      <anchorfile>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</anchorfile>
      <anchor>a54b0764e3d8f96d651581ec492b74f60</anchor>
      <arglist>(const String &amp;id, const String &amp;b=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>CustomPseudoRegistry *</type>
      <name>next</name>
      <anchorfile>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</anchorfile>
      <anchor>ae62182f9d80498e0a5f9f3e7259cea1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CustomPseudoRegistry *</type>
      <name>head</name>
      <anchorfile>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</anchorfile>
      <anchor>a5b1843c333cbdcedc07d2696310c379c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Selector::SelectorNode</name>
    <filename>structRapicorn_1_1Selector_1_1SelectorNode.html</filename>
    <member kind="function">
      <type></type>
      <name>SelectorNode</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>ab7f7f2d63b33ee9cfed2b7ccc38c2a1e</anchor>
      <arglist>(Kind k=NONE, const String &amp;i=&quot;&quot;, const String &amp;a=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>a6c74be38ea9c75b07493cfec02a845ce</anchor>
      <arglist>(const SelectorNode &amp;o) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>a510ac434554bfc5ae3c1dc5b437aa056</anchor>
      <arglist>(const SelectorNode &amp;o) const </arglist>
    </member>
    <member kind="variable">
      <type>Kind</type>
      <name>kind</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>a2a2be116b8f796f646ffd6a2d0145eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>ident</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>a9e2973fcb1a5a102447d3c35cd5475b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>arg</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorNode.html</anchorfile>
      <anchor>a8049e41271009eac8c246dde6fd30a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Selector::SelectorChain</name>
    <filename>structRapicorn_1_1Selector_1_1SelectorChain.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorChain.html</anchorfile>
      <anchor>a73023383806c3e77d3710182b802bc2e</anchor>
      <arglist>(const char **stringp, bool with_combinators=true)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>structRapicorn_1_1Selector_1_1SelectorChain.html</anchorfile>
      <anchor>ac67f1183f89954408f1c532ca6af20f8</anchor>
      <arglist>(size_t first=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::Selob</name>
    <filename>classRapicorn_1_1Selector_1_1Selob.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Strings</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a7ae62083c63d6f83b802508f2b663930</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const StringVector</type>
      <name>ConstTypes</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a984cb67585704fa673a251b54a6f7964</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>get_id</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a7bdd0a5b0dbf3eb3f78f49beed0d5d79</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>get_type</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a2840bdda21bd5b2bb4819d639970c907</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ConstTypes &amp;</type>
      <name>get_type_list</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>aa7e74e7df5b2f90fc3a04926af4fa7d8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>ab1877bcc9aad6b47ec8ac98a0f2af631</anchor>
      <arglist>(const String &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>get_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a834d96153c6e7880fe3f5bac3f725f4e</anchor>
      <arglist>(const String &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selob *</type>
      <name>get_parent</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a30f624ba7c7fe7e8ab94af6d04acdb49</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selob *</type>
      <name>get_sibling</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>ac454aa5047f6d62c4cff2d2fc6a0a371</anchor>
      <arglist>(int64 dir)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a7c3fb0f4a7e80c40d10d8dc30cb07b4d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int64</type>
      <name>n_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a36a3d127f1bc4f688c0c5569103e5601</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selob *</type>
      <name>get_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>abfdaa3f527a1c4580f55fc8ebe96ce52</anchor>
      <arglist>(int64 index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_nth_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a00c4403c17c6fa754b4efcf3d976a5e2</anchor>
      <arglist>(int64 nth1based)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selob *</type>
      <name>pseudo_selector</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>a51f38ea2938069bdeccc28741b8a0606</anchor>
      <arglist>(const String &amp;ident, const String &amp;arg, String &amp;error)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Selob *</type>
      <name>true_match</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>afb4c393d3e3d5a5849a14ee9feb8bc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_true_match</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Selob.html</anchorfile>
      <anchor>af80bfc19b4816a4af4e798745a52bc7e</anchor>
      <arglist>(Selob *selob)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::Matcher</name>
    <filename>classRapicorn_1_1Selector_1_1Matcher.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>query_selector_bool</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Matcher.html</anchorfile>
      <anchor>a43598f393af3bb05da3785ccd5d14110</anchor>
      <arglist>(const String &amp;selector, Selob &amp;selob, String *errorp=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Selob *</type>
      <name>query_selector_first</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Matcher.html</anchorfile>
      <anchor>af6cbfeca87903cae50ace31f2fe2a13c</anchor>
      <arglist>(const String &amp;selector, Selob &amp;selob, String *errorp=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Selob *</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Matcher.html</anchorfile>
      <anchor>aa22e8e61e9e42418d3d22f43b7848552</anchor>
      <arglist>(const String &amp;selector, Selob &amp;selob, String *errorp=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; Selob * &gt;</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Matcher.html</anchorfile>
      <anchor>abe9617e465f03164e52753f9cf5ddc9c</anchor>
      <arglist>(const String &amp;selector, Selob &amp;selob, String *errorp=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vector&lt; Selob * &gt;</type>
      <name>query_selector_objects</name>
      <anchorfile>classRapicorn_1_1Selector_1_1Matcher.html</anchorfile>
      <anchor>ac6ab0dfba1d4775adb659f69396a6718</anchor>
      <arglist>(const String &amp;selector, Iter first, Iter last, String *errorp=NULL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobWidget</name>
    <filename>classRapicorn_1_1Selector_1_1SelobWidget.html</filename>
    <base>Rapicorn::Selector::Selob</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_id</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>a0ab38aa7b23d85e83a96bbadc758b7e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_type</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>aa0a59cd2676880d33fa070cef298561d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstTypes &amp;</type>
      <name>get_type_list</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>aa12d80be5669dfa615e4d5289b8bd1fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>a85ca27257b0d9dbe0fc5056165cf9fbf</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>ae136c2cee4384805595f1504088f0882</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_parent</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>a21be58d95dc6566fdc95ad2d98fe29f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_sibling</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>a33a42eedb85af8bfc1d0b66f08f15f9e</anchor>
      <arglist>(int64 dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>aa59d3e8da544b5144508d7ba610981c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int64</type>
      <name>n_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>acf21b6ba5ef27d7a2b0ebc24adde963d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>ae36de6f1cfde1e1ce3d9a42738226d22</anchor>
      <arglist>(int64 index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_nth_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>ab3859ac3bed0cbac868c8506c25d3557</anchor>
      <arglist>(int64 nth1based)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>pseudo_selector</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobWidget.html</anchorfile>
      <anchor>accd35b2d57e864af1c7f298646e27df2</anchor>
      <arglist>(const String &amp;ident, const String &amp;arg, String &amp;error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobListModel</name>
    <filename>classRapicorn_1_1Selector_1_1SelobListModel.html</filename>
    <base>Rapicorn::Selector::Selob</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_id</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>acd9f25997a042ab2fe964563c85250c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_type</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a06ce8293a8d54d08cb92aba46c49c13e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstTypes &amp;</type>
      <name>get_type_list</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>aeac6bb2af857e2b2b7eb74dabfeb8b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>af14305f610af6b9c1774aee500f0f6d0</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>get_property</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a7a147a83de84b9f6976ca674f5682cf1</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_parent</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a6a30e3d90cd0a82093f1348ead2086e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_sibling</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a545a21bbc0ce17ca291d821d00a6f08c</anchor>
      <arglist>(int64 dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>aa98d9939a79312032e61c70ddb7eb019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int64</type>
      <name>n_children</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a9eb4df6af42960ba79e5b61da28114c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>get_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>ac8ac4d4a3850f0efe477014604aca2cf</anchor>
      <arglist>(int64 index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_nth_child</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>acaae7ca6ca0b001c2fbd97e14f96f64b</anchor>
      <arglist>(int64 nth1based)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Selob *</type>
      <name>pseudo_selector</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobListModel.html</anchorfile>
      <anchor>a7dc033baab38a782bd5f29eb07ec79a8</anchor>
      <arglist>(const String &amp;ident, const String &amp;arg, String &amp;error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobAllocator</name>
    <filename>classRapicorn_1_1Selector_1_1SelobAllocator.html</filename>
    <member kind="function">
      <type>SelobWidget *</type>
      <name>widget_selob</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobAllocator.html</anchorfile>
      <anchor>a86e005a28199508e75d5975cba825506</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>WidgetImpl *</type>
      <name>selob_widget</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobAllocator.html</anchorfile>
      <anchor>ac7fdec48835d7f5ea98656b2e79f0a87</anchor>
      <arglist>(Selob &amp;selob)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelobAllocator *</type>
      <name>selob_allocator</name>
      <anchorfile>classRapicorn_1_1Selector_1_1SelobAllocator.html</anchorfile>
      <anchor>aa22a00406e14028c367f543aea441b21</anchor>
      <arglist>(Selob &amp;selob)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Test</name>
    <filename>namespaceRapicorn_1_1Test.html</filename>
    <class kind="class">Rapicorn::Test::Timer</class>
    <class kind="class">Rapicorn::Test::RegisterTest</class>
    <member kind="enumeration">
      <name>ModeType</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_TESTING</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a67739471a5884bf784964a4bc0e117fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_VERBOSE</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a5bb35484f55e6e1a8280847355d465ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_READOUT</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a2a0197e4f7980deb88be32464917b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SLOW</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284aea3241e04a9179114779f52bf5045c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_output</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab3629541688e4eeabbfde689221b9720</anchor>
      <arglist>(int kind, const String &amp;output_msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_assertion_hook</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a25c63e277b3756eb98743fb18289d6d1</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_failed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2ccd7777505443d4835ba41d53f85f47</anchor>
      <arglist>(const char *file, int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_internal</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a5a811bbb3fbcb16021f56032e1d8952b</anchor>
      <arglist>(const String &amp;testname, void(*test_func)(void *), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a653c5294d920c86600d4aca49c9c6d09</anchor>
      <arglist>(const String &amp;testname, void(*test_func)(void))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>af3276e84937383962d36a32c4e9c5372</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa87de7c3a3991e59d82c3ce99919e91f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slow</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2bf53b41a6d5a88fa365bc7a1eee49f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ui_test</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aea9fae6e6fcfa6d16a00f378811342b8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a0e1263eb1dab165cbedbc8a247efafdc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>rand_bit</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a257ab23e2b863bcb2f6e019fae8e2eac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>rand_int</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>acd7af583d19d17fc61ec12621210e29c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>rand_int_range</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a349d533b26ce8691e4d6a259fd1a050f</anchor>
      <arglist>(int32 begin, int32 end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_rand_double</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ad7a35b7591d74c208f631cd787a3377a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_rand_double_range</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab6d0e6ea96fc7928fc3f9d7862dbeb13</anchor>
      <arglist>(double range_start, double range_end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_fork</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a944c36f642346303253eec823e22eefa</anchor>
      <arglist>(uint64 usec_timeout, uint test_trap_flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_fork_silent</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a79c7c34de3ce0f127750a1b0f48f9204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_timed_out</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a325a0e92aaa9addcc8319124344ca5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_passed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>afcd2c7c50ebf814443103ae67f516a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_aborted</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa520e482002d01c04fa04bafc9037d13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trap_sigtrap</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a508c770e055e8a31a549665a41c10062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>trap_stdout</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a8db7deb611ce299d670cf3d1ccb5cc23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>trap_stderr</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a4291fcc868f309999c9174919e105f07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9c549317ab0c4165e75e358d2a2c8824</anchor>
      <arglist>(const char *a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a63f72b037c7dcb2c80d75ff9fe180b42</anchor>
      <arglist>(const V *a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2c439da2203091b50bfc8f716ce6e60a</anchor>
      <arglist>(const A &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; float &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a27b5d634a394e6cbab800108b39bbba4</anchor>
      <arglist>(const float &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; double &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>abb000d0fa00ce18d5ced662955b7c0a7</anchor>
      <arglist>(const double &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; bool &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a7fc809fbddd47915666a5b4db18ffac3</anchor>
      <arglist>(const bool &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int8 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a6b6f8ab2aae8c681d71163c9158224c9</anchor>
      <arglist>(const int8 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int16 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a5057d02c617a12b3251f6c5f2714f607</anchor>
      <arglist>(const int16 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int32 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a92d7b53342bf1cb13e382ea8a72f1bbd</anchor>
      <arglist>(const int32 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; int64 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab0e47f59b429075a1889073163f7a8c6</anchor>
      <arglist>(const int64 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint8 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9894b16e098a1eb883f8c52c4539b691</anchor>
      <arglist>(const uint8 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint16 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a5b2e8e809edb3274beeb1f8f9ee88652</anchor>
      <arglist>(const uint16 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint32 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a8067b37478a1d84ac404584c413483d2</anchor>
      <arglist>(const uint32 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; uint64 &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab3d73ce33e70c89c1cb9367abf692c56</anchor>
      <arglist>(const uint64 &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg&lt; String &gt;</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a6ce4bc28f3bb8d60e3457f7aba317b5d</anchor>
      <arglist>(const String &amp;a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>_as_strptr</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a046fa31406a4977811191ea6c94a5322</anchor>
      <arglist>(const char *s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Test::Timer</name>
    <filename>classRapicorn_1_1Test_1_1Timer.html</filename>
    <member kind="function">
      <type></type>
      <name>Timer</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>ad12db36d2eb6c1be51e4a78e601d1c5f</anchor>
      <arglist>(double deadline_in_secs=0)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>n_runs</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a97e6f589d8a20943ffc70de894bbe8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>adb812f13d85617ae33adb26c7351bb1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a7b7934d6305b675c08ca1e9f43bd70f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>ab3e85e9efbf16dd305aa79925e0c98f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>benchmark</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a745503f7d5e8eaaa3d56bee3050b7843</anchor>
      <arglist>(Callee callee)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Test::RegisterTest</name>
    <filename>classRapicorn_1_1Test_1_1RegisterTest.html</filename>
    <member kind="typedef">
      <type>void(*</type>
      <name>TestTrigger</name>
      <anchorfile>classRapicorn_1_1Test_1_1RegisterTest.html</anchorfile>
      <anchor>abd4243a31b27453f434564aec8b8b7c1</anchor>
      <arglist>)(void(*runner)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RegisterTest</name>
      <anchorfile>classRapicorn_1_1Test_1_1RegisterTest.html</anchorfile>
      <anchor>aca50bcd0ca734b05a3708ae7cdb217dc</anchor>
      <arglist>(const char k, const String &amp;testname, void(*test_func)(void))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RegisterTest</name>
      <anchorfile>classRapicorn_1_1Test_1_1RegisterTest.html</anchorfile>
      <anchor>a7c873f3e50a717ebdf216119abb030b8</anchor>
      <arglist>(const char k, const String &amp;testname, void(*test_func)(ptrdiff_t), ptrdiff_t data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RegisterTest</name>
      <anchorfile>classRapicorn_1_1Test_1_1RegisterTest.html</anchorfile>
      <anchor>a0fa9f76180b259c9da294e213951048f</anchor>
      <arglist>(const char k, const String &amp;testname, void(*test_func)(D *), D *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>test_set_trigger</name>
      <anchorfile>classRapicorn_1_1Test_1_1RegisterTest.html</anchorfile>
      <anchor>a72e7703a1f267593ae74a79cf722de32</anchor>
      <arglist>(TestTrigger func)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Text::ParaState</name>
    <filename>structRapicorn_1_1Text_1_1ParaState.html</filename>
    <member kind="variable">
      <type>AlignType</type>
      <name>align</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>a634f8ed4017d4c8bbc9966e30f6e9bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EllipsizeType</type>
      <name>ellipsize</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>a8182063d873e3a017cbcd2dc5ff54348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>line_spacing</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>a5c2eb6abf4826828f9d45287882ed4e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>indent</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>a327c5d60418280aa06c5307e8f0c22d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>font_family</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>a72f53b4c3377ad47486e948cc54f6696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>font_size</name>
      <anchorfile>structRapicorn_1_1Text_1_1ParaState.html</anchorfile>
      <anchor>ae0df0f1c408f54060e4a87678d21a675</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Text::AttrState</name>
    <filename>structRapicorn_1_1Text_1_1AttrState.html</filename>
    <member kind="variable">
      <type>String</type>
      <name>font_family</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>a436114a4530d91a12570470388f00e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>font_scale</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>ae8a4d7252e75ae84c21b5c27ca4d877e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bold</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>a232710686fe5145d8a661bc5d950a5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>italic</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>aaa70d57e8b4abdfd7e2b1ed5568a303e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>underline</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>a7c9369bd08e1df093cd0ce5ccd0487c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>small_caps</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>aa4a71c3bfd28bf114dcb777784e2a768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>strike_through</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>a449a65627dfbe8eca5d3c7d07048e7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color</type>
      <name>foreground</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>ae402bd8a50ab0d53f9ad9991c182ef5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color</type>
      <name>background</name>
      <anchorfile>structRapicorn_1_1Text_1_1AttrState.html</anchorfile>
      <anchor>ab537bfac7f6d3d384684ad9835e4ef74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Text::Editor</name>
    <filename>classRapicorn_1_1Text_1_1Editor.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
    <class kind="class">Rapicorn::Text::Editor::Client</class>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a33477e8dd665e7cdec48076d5e52d3ef</anchor>
      <arglist>(const String &amp;text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a372cf7afbb29e17862a92da36f15f341</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TextMode</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>aa5f26e133a2d5f6475797c47d0d2af57</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a680cec9582dae979c0deee420efd690a</anchor>
      <arglist>(TextMode text_mode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>ab11e3a2494d7eaf6b7e42218bb9f34dc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a0947802129dce7f44420440399825412</anchor>
      <arglist>(const String &amp;markup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>aec491119a35f6330c0b7f0537908897f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>ad854859d6f945fc05eea21e949c8de99</anchor>
      <arglist>(const String &amp;ptext)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>ad39f56b1a76e70c3e9170fbf204d4f0c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a201935d0676119ce70181bead00cb975</anchor>
      <arglist>(uint nc)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a25f3198427741a1da063bbdb62c630d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a73a4d69a6a29c487d88c2a0750d8293a</anchor>
      <arglist>(uint nd)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor.html</anchorfile>
      <anchor>a4b8e509c7b6445d0b001c0ad1b80162c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Text::Editor::Client</name>
    <filename>classRapicorn_1_1Text_1_1Editor_1_1Client.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>peek_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a21e6d46d7eb7bd86aba11db6bafda796</anchor>
      <arglist>(int *byte_length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ParaState</type>
      <name>para_state</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ac041c3b4e8efb6afa8d5f12f76f62a8e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>para_state</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ae1f4b7e377320c68842ab6857c437630</anchor>
      <arglist>(const ParaState &amp;pstate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AttrState</type>
      <name>attr_state</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a8009656e068be47600b3834f79118b03</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>attr_state</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ad875606270bf2aefc3de83c15277d3a5</anchor>
      <arglist>(const AttrState &amp;astate)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a5ae5623df0036f90e9f9184c2c8b3245</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a59c7da57396f3cfa7a61220fc326c698</anchor>
      <arglist>(const String &amp;markup)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>aeaf846204f765ae29fbb020d0e52c8b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a109157ecaac7901d152dbfec866a067f</anchor>
      <arglist>(const String &amp;ptext)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TextMode</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ae1acfeb3e4d36c5b88e3cffe46221ac3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ab9619cce50f7131ffebf4369c777a9c8</anchor>
      <arglist>(TextMode text_mode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>text_requisition</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a8a4b4cb1f3aac38c3ea9cbe4ee6ac470</anchor>
      <arglist>(uint n_chars, uint n_digits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mark</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a025db23e263258b68aa347ec8e8fed00</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a115d4d29a17c6f063e7df8a8e59b6ec6</anchor>
      <arglist>(int byte_index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>mark_at_end</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a09c858405a3922c115886066e14e28a6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>mark_to_coord</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a4ad96a7bb6eaebb44fc02141acc6b093</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>step_mark</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ab8e0284cb8e66ced2b37589f6fc07865</anchor>
      <arglist>(int visual_direction)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark2cursor</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ac37b4802e270af447829203bef23738e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hide_cursor</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a53b3a7afe3cb5e1407bb9ba14a22d115</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark_delete</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a56cbef521de7e393bb9c19a50740bfea</anchor>
      <arglist>(uint n_utf8_chars)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark_insert</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a5b8c284218adff4938c55d6608180058</anchor>
      <arglist>(String utf8string, const AttrState *astate=NULL)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const PropertyList &amp;</type>
      <name>client_property_list</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>ac39f09ff7f1271a40447ee9c599ebb5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual String</type>
      <name>save_markup</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>a609150da6b622e292dd040181d9937c0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>load_markup</name>
      <anchorfile>classRapicorn_1_1Text_1_1Editor_1_1Client.html</anchorfile>
      <anchor>aa9556cb9d4479074fd8a3392720e84a4</anchor>
      <arglist>(const String &amp;markup)=0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::ThisThread</name>
    <filename>namespaceRapicorn_1_1ThisThread.html</filename>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ab7e33385c69891d6f9b67e2c76ede9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>online_cpus</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>acac4c2a321d197f7eee1a88da8fb7215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a7d462ea80f7db209f4897309d3e0b049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a6dd2d6965877652c5b733b1822d53c75</anchor>
      <arglist>(int cpu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>thread_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ade8b26f2d65becbcd62a8d224b0f7264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a84e55848b3b318dcea5edaef49f84778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yield</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a35a22b1d7e4ca2f51fd786de16f3fc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::thread::id</type>
      <name>get_id</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a9344650ad9ebef82a7ea8771b581d5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_for</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a5ab35ed8e4903c7866b1833044bbdcc2</anchor>
      <arglist>(std::chrono::duration&lt; Rep, Period &gt; sleep_duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_until</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a52bd6072ee842c384186d2a437b5e352</anchor>
      <arglist>(const std::chrono::time_point&lt; Clock, Duration &gt; &amp;sleep_time)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Unicode</name>
    <filename>namespaceRapicorn_1_1Unicode.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isalnum</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ab184be0152cce5fac14c57b4affe2cf5</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isalpha</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a2b0c403cc8c19bbcc64b860eed6427ca</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iscntrl</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>af4022c013828a5cd198a437f73d7779e</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdigit</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ac6cbd8f3ac0a8aa8ae60f53641f5ec9f</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>digit_value</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>ae0bd53be33bbc5141acf30c3c9b833bb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isgraph</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a50f2af0c9e7f9ed3fc77a8fac50d791b</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>islower</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>abdf15618ab32514e1b04677169390ccb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>tolower</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aedb96b46ffd9ad7adddd6b374f387965</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isprint</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a4903e184161ca352863d6dcb0daa40fb</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ispunct</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a4111d20c8e732413c56e42f4abd3a393</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isspace</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>adfbe64624b4a7b4fc24eba7230575269</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isupper</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>adcc658bf4c7a929a28c6d20ec5c212d9</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>toupper</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a0e1a89851833ad82a9c348330acdb039</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isxdigit</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a7146272fe8955e37401c743cd7007c2a</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xdigit_value</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aa2b7b6d522347696b2ce02677ad8ee8b</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istitle</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a757aea4b2822bbde1d6958388d92eb95</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>unichar</type>
      <name>totitle</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a2530443bb6db13e2eb26ce9d24a85e08</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdefined</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a9214acff434b5d6c982e422fcbab1952</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iswide</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>abb63d9adb61cb346387d550c78b6a1b1</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iswide_cjk</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>add767a051e13f3ffe8158f402ec190c8</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_type</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>aa75857f4913733e1143105a98007f64c</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>BreakType</type>
      <name>get_break</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a64bfa474efbcb26a6e0250da3ad416b1</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isvalid</name>
      <anchorfile>namespaceRapicorn_1_1Unicode.html</anchorfile>
      <anchor>a034bd3e656a8a0b9c77e452c821d8403</anchor>
      <arglist>(unichar uc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::_RapicornSource</name>
    <filename>classrope_1_1__RapicornSource.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1__RapicornSource.html</anchorfile>
      <anchor>abd2e43bdff3bb49d4311f66cd10f57f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepare</name>
      <anchorfile>classrope_1_1__RapicornSource.html</anchorfile>
      <anchor>ae9b8cda6a68ad9811b6756ee007c22b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>check</name>
      <anchorfile>classrope_1_1__RapicornSource.html</anchorfile>
      <anchor>a99ccbb1a531fef035649d92da723af2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>dispatch</name>
      <anchorfile>classrope_1_1__RapicornSource.html</anchorfile>
      <anchor>acd08d99522821d2df7fd62f906a38d4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::MainApplication</name>
    <filename>classrope_1_1MainApplication.html</filename>
    <base>Rapicorn::Application</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1MainApplication.html</anchorfile>
      <anchor>ad240574fda59f9a33992b1868a2c87d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>iterate</name>
      <anchorfile>classrope_1_1MainApplication.html</anchorfile>
      <anchor>a68d74846f522e4bc07424b2ff0b73c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inloop</name>
      <anchorfile>classrope_1_1MainApplication.html</anchorfile>
      <anchor>a97c615c0abd4955b63372ad4201a63af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loop</name>
      <anchorfile>classrope_1_1MainApplication.html</anchorfile>
      <anchor>a40e2fb8aa35cda37c53bb67180b8d6ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::__AIDA_Enum__</name>
    <filename>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__new__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a43e75f5b0f8f6576d60fdaecf99e7dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__repr__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a088bf44118c1881be9dbab9d393e6461</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a7d61cec6c92a83ca7b59a27942e74846</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>index</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a8cdb1adf08ae14b0e920cd7774e27adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</anchorfile>
      <anchor>a3afffa2241c25fd7e30ce5c42737dab1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseRecord_</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseRecord__.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseRecord__.html</anchorfile>
      <anchor>a5331a29aa1a5abf7743a3656830b8517</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseClass_</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseClass__.html</filename>
    <class kind="class">rope::pyrapicorn::_BaseClass_::__Signal__</class>
    <class kind="class">rope::pyrapicorn::_BaseClass_::_AidaID_</class>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass__.html</anchorfile>
      <anchor>abe83f89f8f73149368b14fc3ea0fcb11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__getattr__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass__.html</anchorfile>
      <anchor>a082ef2fdc43b8d40d511ede1611e6467</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__setattr__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass__.html</anchorfile>
      <anchor>ab984f903d63e8cb09e174edf2ae6aa4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseClass_::__Signal__</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a1baf519d9da56882abcb190a2d016407</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>connect</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a6ffb8bc19cf715df03bfc33b3dd41a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>disconnect</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a6f999007dd871bdaf91df78ce024d523</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__iadd__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>a7a786856ede89a5fea757468a98339c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__isub__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</anchorfile>
      <anchor>abb7460c754759a1f7c1b232b571ecf38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseClass_::_AidaID_</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseClass___1_1__AidaID__.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1__AidaID__.html</anchorfile>
      <anchor>a72734377220ac50fea284896162dbd05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>id</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1__BaseClass___1_1__AidaID__.html</anchorfile>
      <anchor>a7aef5a29b27ff998e70e11bed40fd2b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AdjustmentSourceType</name>
    <filename>classrope_1_1pyrapicorn_1_1AdjustmentSourceType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1AdjustmentSourceType.html</anchorfile>
      <anchor>a517a39e8178beb89269416310d721fb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AlignType</name>
    <filename>classrope_1_1pyrapicorn_1_1AlignType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1AlignType.html</anchorfile>
      <anchor>a070ecbf2b1f36b66edf4ab280c140f2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AnchorType</name>
    <filename>classrope_1_1pyrapicorn_1_1AnchorType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1AnchorType.html</anchorfile>
      <anchor>ae3d578831ba787ac5942b9a2e738bcdf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ClickType</name>
    <filename>classrope_1_1pyrapicorn_1_1ClickType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ClickType.html</anchorfile>
      <anchor>a6735ef7788c593099ccf6d8f255cb091</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ColorType</name>
    <filename>classrope_1_1pyrapicorn_1_1ColorType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ColorType.html</anchorfile>
      <anchor>aa9593a295945f5c485a054ed7272bfd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ColorSchemeType</name>
    <filename>classrope_1_1pyrapicorn_1_1ColorSchemeType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ColorSchemeType.html</anchorfile>
      <anchor>aa22b970d562497fdfcad989f434faf17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::DirType</name>
    <filename>classrope_1_1pyrapicorn_1_1DirType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1DirType.html</anchorfile>
      <anchor>a0d572b515568c45fac4fe53151350669</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::EllipsizeType</name>
    <filename>classrope_1_1pyrapicorn_1_1EllipsizeType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1EllipsizeType.html</anchorfile>
      <anchor>ae12c5fbaa643494e8f50fe79b9404cfa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::FocusDirType</name>
    <filename>classrope_1_1pyrapicorn_1_1FocusDirType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1FocusDirType.html</anchorfile>
      <anchor>a8f5d4ac330be43dfc9f901f4fc47465c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::FrameType</name>
    <filename>classrope_1_1pyrapicorn_1_1FrameType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1FrameType.html</anchorfile>
      <anchor>a0c3e8f459c48ef77bfed0883ba8836ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::LightingType</name>
    <filename>classrope_1_1pyrapicorn_1_1LightingType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1LightingType.html</anchorfile>
      <anchor>a1a2ae2a7a9ce9e93e5b597e22189ee6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SelectionMode</name>
    <filename>classrope_1_1pyrapicorn_1_1SelectionMode.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1SelectionMode.html</anchorfile>
      <anchor>a7aa0bc12a5b18c78b6c38a589ef05de3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SizePolicyType</name>
    <filename>classrope_1_1pyrapicorn_1_1SizePolicyType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1SizePolicyType.html</anchorfile>
      <anchor>a5390b6488e5abca7293b456a3ad2e0cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::StateType</name>
    <filename>classrope_1_1pyrapicorn_1_1StateType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1StateType.html</anchorfile>
      <anchor>a8ba4bb684138467c86bf1f918a70fc4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TextMode</name>
    <filename>classrope_1_1pyrapicorn_1_1TextMode.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1TextMode.html</anchorfile>
      <anchor>af524d317adaadfae3ac8476ff451d9f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::WindowType</name>
    <filename>classrope_1_1pyrapicorn_1_1WindowType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WindowType.html</anchorfile>
      <anchor>a72f7e5f80f9713efd85b4d6e65c891e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Pixbuf</name>
    <filename>classrope_1_1pyrapicorn_1_1Pixbuf.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a1c4933692fb3aa4e1f0dc38af003f4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>create</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a357610f13fa199ae848ff38214ea72e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>to_proto</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a84fb13fd596eb55191cae8f18baaf970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>row_length</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>ab3a43d996a3d493d9119934de7bf946f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pixels</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a2c26791b2c8fcfec3d4838b6e5f71217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>variables</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>ab92d2a76d4b837d049041ef11ac65bed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateKind</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateKind.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateKind.html</anchorfile>
      <anchor>ab5068ff169fd397e8d5ed1a3a6506f13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateSpan</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateSpan.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a4fbfcfe0b82e9e07e7cceac6be294579</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>create</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>aa849c73d5b141742194fbaa84a005b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>to_proto</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>ae0c06640268a36b947d9b31c36fb3569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a1151a91a82815823c2c127edab96c6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>length</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a26b25a41fdf45b63fff8f21cb8295412</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateRequest</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateRequest.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a47b15ce9040d478fc6465b47c9ad6d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>create</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a1d19b74fa46db5a991df483a955c4c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>to_proto</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a10d85e49289302de2ddd4aea126ad62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kind</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a0c16c5ce69bb40b5f2f2016a28309ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rowspan</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a252c560283a9cc40ebfcf3b8115bc36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>colspan</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a69a6174a30cbd58e0a5a8b4a6a6686e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>variables</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a63156943e2ab54d3802ec4473d33b08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>value</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a520edcfee838dfd8e93c99512271c045</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ListModel</name>
    <filename>classrope_1_1pyrapicorn_1_1ListModel.html</filename>
    <base>rope::pyrapicorn::_BaseClass_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModel.html</anchorfile>
      <anchor>a27f0493edd5e6e52d880c5b8e18471c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>count</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModel.html</anchorfile>
      <anchor>ab1d2833eb95c659e4788cfdaed7bc276</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>row</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModel.html</anchorfile>
      <anchor>a676791f13429ca4fe973a800fa0703c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_updated__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModel.html</anchorfile>
      <anchor>ab00f33084be2dc1e287070f4a776ee1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ListModelRelay</name>
    <filename>classrope_1_1pyrapicorn_1_1ListModelRelay.html</filename>
    <base>rope::pyrapicorn::_BaseClass_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a391c7ee779d7dce5a56772847de05248</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>model</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a9ddcc80ed8e8c8255eee272939dd4047</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fill</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a9f8489f585ad901045aafc12357b232b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a892300f259b0bcd2ab9f6f20bd80615d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_refill__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a06cf284eb4d43548101828745b679741</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Requisition</name>
    <filename>classrope_1_1pyrapicorn_1_1Requisition.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Requisition.html</anchorfile>
      <anchor>a416e8034c1a57c3b242b804deca431bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>create</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Requisition.html</anchorfile>
      <anchor>a0f1580f97d847bd4fe116a3d168592f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>def</type>
      <name>to_proto</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Requisition.html</anchorfile>
      <anchor>a322b2e21b480ad4ed39c2fff379f5a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>width</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Requisition.html</anchorfile>
      <anchor>a86b0f86ef8c058fd5e7acb45a1f4143a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>height</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Requisition.html</anchorfile>
      <anchor>aaf871758fa0ed0bc46a1eb09a6889bf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Widget</name>
    <filename>classrope_1_1pyrapicorn_1_1Widget.html</filename>
    <base>rope::pyrapicorn::_BaseClass_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>a7dfb4f808dce3a625af055e05b821636</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>match_selector</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>ac27d111db7bf57038d5ac91cc696e2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>query_selector</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>a5b68e2f7412ef488d5ff4535e84fc144</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>query_selector_all</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>a9b0b987f455d68dde4ed052897fb46b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>query_selector_unique</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>a1893b177dd851a0b0232c9dfab9ff832</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_dump</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Widget.html</anchorfile>
      <anchor>a414626070c562c6cce8e4550d7ed41e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Container</name>
    <filename>classrope_1_1pyrapicorn_1_1Container.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Container.html</anchorfile>
      <anchor>a60faf189e13e3feb2bf61e1049b9255b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>create_child</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Container.html</anchorfile>
      <anchor>a685539bf66bff03ba22e506c8393bb7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ButtonArea</name>
    <filename>classrope_1_1pyrapicorn_1_1ButtonArea.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>a0250f6be38db074e9a28324ba5c4ce72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Drawable</name>
    <filename>classrope_1_1pyrapicorn_1_1Drawable.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Drawable.html</anchorfile>
      <anchor>a175b4bc932e258854aa6f3af53ffbb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>draw_rect</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Drawable.html</anchorfile>
      <anchor>a6e9ef083b863ee68591b5aa2fdc716e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_redraw__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Drawable.html</anchorfile>
      <anchor>a26eacf4fed71a79bb039f9c40e45ed68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::WidgetList</name>
    <filename>classrope_1_1pyrapicorn_1_1WidgetList.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a5312037c1c9eb36dcfe22e3e883d204d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_selection</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a29e5fd6b30584898302fe22d2a935104</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_selection</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WidgetList.html</anchorfile>
      <anchor>aee41a62f71fe8f652c40bc239f58161e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>select_range</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a2e639593423268eb42439bf9e5f15b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>unselect_range</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1WidgetList.html</anchorfile>
      <anchor>a0c12cb4c7422b0ef4608ffcf98943201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Window</name>
    <filename>classrope_1_1pyrapicorn_1_1Window.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>aeb7e3ae9800d354bc7a0caa283821dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>viewable</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>af77c1ad46e33b51d01888e5b7185f354</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>show</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>aff7a0cc4ff91015194cc2f8566fd73df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>closed</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a9c8801d636633e44417a4c089722a7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>close</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a34d779398dfd5545abd8fb5d5f1c0345</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>snapshot</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>ab5f9db906e0f4b3b0457a642f9afded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>synthesize_click</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a13bb73f258c37d977b7188ebf931ec36</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>synthesize_enter</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a9f385aa1c78a0e32ca0ffea7bfc9ed14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>synthesize_leave</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a03d1ce44adde06fe09c1cc1df9fa6a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>synthesize_delete</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>ac803af9e1134fd76a01800e8e09d4bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_commands__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a0497bc77aac1bd716c5456d10fb774bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_displayed__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Window.html</anchorfile>
      <anchor>a8167db415dce33d2cf6220b4e9dedd26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Application</name>
    <filename>classrope_1_1pyrapicorn_1_1Application.html</filename>
    <base>rope::pyrapicorn::_BaseClass_</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a41526c1981c90fab033075b44c129b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>auto_path</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a499cd8e0db686017417275b5f20f03d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>auto_load</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a3ba30c1009bb165f94cba38a423ddce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>factory_window</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>aaf72e759301368f069e2bb4c5282238c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_string</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a4f1b7828f1058536cbba94a5f182777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>create_window</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a1bca155c8e68417df107c8ed2e688975</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>finishable</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a64148c039b47729a769056b1a213d27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>close_all</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a78ef83f4682e9831113dae1f6621d439</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>query_window</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>ac8f191b43ec6d59059a5e67e9070b7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>query_windows</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a48a65cff2fa4d106baa2fa54457d1ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>list_windows</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a25e77b3bd78999a57797e9fea2a116b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>create_list_model_relay</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a8703996a7bfe752befe9d7d54a452788</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_counter_set</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a34c67c69694e271fcc9afbffa234550d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_counter_add</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a57b4b686e08982025ca8ce2771f23cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_counter_get</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a310c270f37f1ebb5cbac4cb0b2b77b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a6a4de3d9c02ddcfa326e0c2b3690fc0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>test_hook</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a3d5e384254d90bfa1a29a184a1de1bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pysignal__sig_missing_primary__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1Application.html</anchorfile>
      <anchor>a562f6dfe659e294ce219223024bc3989</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TestEnum</name>
    <filename>classrope_1_1pyrapicorn_1_1TestEnum.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
    <member kind="variable" static="yes">
      <type>dictionary</type>
      <name>enum_values</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1TestEnum.html</anchorfile>
      <anchor>adb73e832b1a97eb34313ff83a50097c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::IdlTestWidget</name>
    <filename>classrope_1_1pyrapicorn_1_1IdlTestWidget.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classrope_1_1pyrapicorn_1_1IdlTestWidget.html</anchorfile>
      <anchor>adbe684389e825841b78e5e4343890c06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>aidacc/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/aidacc/</path>
    <filename>dir_53127df42c4ece47471de6cb1e99a132.html</filename>
    <file>__init__.py</file>
    <file>AuxData.py</file>
    <file>broken.cc</file>
    <file>builtins.idl</file>
    <file>CxxStub-client.cc</file>
    <file>CxxStub-server.cc</file>
    <file>CxxStub.py</file>
    <file>Decls.py</file>
    <file>GenUtils.py</file>
    <file>loop.py</file>
    <file>Parser.py</file>
    <file>plic.py</file>
    <file>PrettyDump.py</file>
    <file>PyStub-glue.cc</file>
    <file>PyStub-glue.py</file>
    <file>PyStub.py</file>
    <file>tmpl-pycc.cc</file>
    <file>TmplFiles.py</file>
    <file>TypeMap.py</file>
    <file>yapps2runtime.py</file>
  </compound>
  <compound kind="dir">
    <name>docs/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>dir_17ebac499d8133b6dd6f1e8a41accd77.html</filename>
    <dir>docs/tutorial/</dir>
  </compound>
  <compound kind="dir">
    <name>rcore/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>dir_5d3b2c2ea3171450aa5a514a0b676618.html</filename>
    <file>aida.cc</file>
    <file>aida.hh</file>
    <file>aidabuiltins.cc</file>
    <file>aidacxx.hh</file>
    <file>aidamap.cc</file>
    <file>aidaprops.cc</file>
    <file>aidaprops.hh</file>
    <file>aidaproto.hh</file>
    <file>aidasignal.hh</file>
    <file>aidavariants.hh</file>
    <file>blobres.cc</file>
    <file>blobres.hh</file>
    <file>configbits.cc</file>
    <file>cpuasm.hh</file>
    <file>cxxaux.hh</file>
    <file>debugtools.cc</file>
    <file>debugtools.hh</file>
    <file>formatter.cc</file>
    <file>formatter.hh</file>
    <file>inifile.cc</file>
    <file>inifile.hh</file>
    <file>inout.cc</file>
    <file>inout.hh</file>
    <file>loop.cc</file>
    <file>loop.hh</file>
    <file>main.cc</file>
    <file>main.hh</file>
    <file>markup.cc</file>
    <file>markup.hh</file>
    <file>math.cc</file>
    <file>math.hh</file>
    <file>memory.cc</file>
    <file>memory.hh</file>
    <file>objects.cc</file>
    <file>objects.hh</file>
    <file>platform.cc</file>
    <file>platform.hh</file>
    <file>quicktimer.cc</file>
    <file>quicktimer.hh</file>
    <file>rapicorn-zintern.cc</file>
    <file>rapicornconfig.h</file>
    <file>rcore.hh</file>
    <file>regex.cc</file>
    <file>regex.hh</file>
    <file>strings.cc</file>
    <file>strings.hh</file>
    <file>testutils.cc</file>
    <file>testutils.hh</file>
    <file>thread.cc</file>
    <file>thread.hh</file>
    <file>threadlib.hh</file>
    <file>unicode.cc</file>
    <file>unicode.hh</file>
    <file>utilities.cc</file>
    <file>utilities.hh</file>
    <file>xmanifold.py</file>
    <file>xmlnode.cc</file>
    <file>xmlnode.hh</file>
  </compound>
  <compound kind="dir">
    <name>rope/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rope/</path>
    <filename>dir_8d1644f7fe818297786c65f248f62f94.html</filename>
    <file>__init__.py</file>
    <file>py-rope.cc</file>
    <file>py-rope.hh</file>
    <file>pyrapicorn.cc</file>
    <file>pyrapicorn.py</file>
    <file>testpystub.cc</file>
  </compound>
  <compound kind="dir">
    <name>tools/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/tools/</path>
    <filename>dir_e793d8970c4c1cbf5cd5d80102b69e6c.html</filename>
    <file>rapidrun.cc</file>
  </compound>
  <compound kind="dir">
    <name>docs/tutorial/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/tutorial/</path>
    <filename>dir_ac6d6a6711fc3c3cddaa64c659eb430a.html</filename>
    <file>tuthello.py</file>
  </compound>
  <compound kind="dir">
    <name>ui/</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>dir_fd553af6821e26c9ac4a55e8e03b16a7.html</filename>
    <file>adjustment.cc</file>
    <file>adjustment.hh</file>
    <file>application.cc</file>
    <file>application.hh</file>
    <file>arrangement.cc</file>
    <file>arrangement.hh</file>
    <file>arrangementimpl.hh</file>
    <file>blit-mmx.cc</file>
    <file>blitfuncs.cc</file>
    <file>blitfuncs.hh</file>
    <file>buttons.cc</file>
    <file>buttons.hh</file>
    <file>cairocontext.cc</file>
    <file>cairocontext.hh</file>
    <file>clientapi.cc</file>
    <file>clientapi.hh</file>
    <file>clientglue.cc</file>
    <file>clientinsert.hh</file>
    <file>cmdlib.cc</file>
    <file>cmdlib.hh</file>
    <file>commands.cc</file>
    <file>commands.hh</file>
    <file>container.cc</file>
    <file>container.hh</file>
    <file>dummy.cc</file>
    <file>evaluator.cc</file>
    <file>evaluator.hh</file>
    <file>events.cc</file>
    <file>events.hh</file>
    <file>factory.cc</file>
    <file>factory.hh</file>
    <file>gen-zintern.c</file>
    <file>hardcoded.idl</file>
    <file>heritage.cc</file>
    <file>heritage.hh</file>
    <file>image.cc</file>
    <file>image.hh</file>
    <file>interfaces-stub.hh</file>
    <file>interfaces.idl</file>
    <file>internal.hh</file>
    <file>key2ucs4.cc</file>
    <file>keysymbols.hh</file>
    <file>layoutcontainers.cc</file>
    <file>layoutcontainers.hh</file>
    <file>listarea.cc</file>
    <file>listarea.hh</file>
    <file>models.cc</file>
    <file>models.hh</file>
    <file>paintcontainers.cc</file>
    <file>paintcontainers.hh</file>
    <file>painter.cc</file>
    <file>painter.hh</file>
    <file>paintwidgets.cc</file>
    <file>paintwidgets.hh</file>
    <file>pixmap.cc</file>
    <file>pixmap.hh</file>
    <file>primitives.cc</file>
    <file>primitives.hh</file>
    <file>region.cc</file>
    <file>region.hh</file>
    <file>regionimpl.c</file>
    <file>regionimpl.h</file>
    <file>screenwindow-x11.cc</file>
    <file>screenwindow-xaux.cc</file>
    <file>screenwindow.cc</file>
    <file>screenwindow.hh</file>
    <file>scrollwidgets.cc</file>
    <file>scrollwidgets.hh</file>
    <file>scrollwidgetsimpl.hh</file>
    <file>selector.cc</file>
    <file>selector.hh</file>
    <file>selob.cc</file>
    <file>selob.hh</file>
    <file>serverapi.cc</file>
    <file>serverapi.hh</file>
    <file>serverglue.cc</file>
    <file>serverinsert.hh</file>
    <file>sinfex.cc</file>
    <file>sinfex.hh</file>
    <file>sinfeximpl.hh</file>
    <file>sizegroup.cc</file>
    <file>sizegroup.hh</file>
    <file>skeletons.cc</file>
    <file>slider.cc</file>
    <file>slider.hh</file>
    <file>stock.cc</file>
    <file>stock.hh</file>
    <file>table.cc</file>
    <file>table.hh</file>
    <file>tableimpl.hh</file>
    <file>testwidgets.cc</file>
    <file>testwidgets.hh</file>
    <file>text-editor.cc</file>
    <file>text-editor.hh</file>
    <file>text-pango.cc</file>
    <file>text-pango.hh</file>
    <file>uithread.cc</file>
    <file>uithread.hh</file>
    <file>utilities.cc</file>
    <file>utilities.hh</file>
    <file>viewport.cc</file>
    <file>viewport.hh</file>
    <file>widget.cc</file>
    <file>widget.hh</file>
    <file>window.cc</file>
    <file>window.hh</file>
    <file>xviewport.cc</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index">manpages</docanchor>
    <docanchor file="index">documents</docanchor>
    <docanchor file="index">weblinks</docanchor>
  </compound>
</tagfile>
