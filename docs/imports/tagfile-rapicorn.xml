<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>about-aida.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/aidacc/</path>
    <filename>about-aida_8dox</filename>
  </compound>
  <compound kind="file">
    <name>changelog.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>changelog_8dox</filename>
  </compound>
  <compound kind="file">
    <name>apps.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>apps_8dox</filename>
  </compound>
  <compound kind="file">
    <name>configuration.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>configuration_8dox</filename>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_FLIPPER</name>
      <anchorfile>configuration_8dox.html</anchorfile>
      <anchor>ac1f363ab01c042a93ae0e414940dcc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_TEST</name>
      <anchorfile>configuration_8dox.html</anchorfile>
      <anchor>acbf6c9b52c8c37574da6c682a11b9aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$RAPICORN_DEBUG</name>
      <anchorfile>configuration_8dox.html</anchorfile>
      <anchor>a9a174d8255682c8693694b8f0629447c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE_DIR__</name>
      <anchorfile>configuration_8dox.html</anchorfile>
      <anchor>a3fcc2b63619b567d9ecbbff6b27b9460</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>contribute.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>contribute_8dox</filename>
  </compound>
  <compound kind="file">
    <name>main.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>main_8dox</filename>
  </compound>
  <compound kind="file">
    <name>NEWS.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>NEWS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>rapicorn-core.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>rapicorn-core_8hh</filename>
    <includes id="rcore_8hh" name="rcore.hh" local="no" imported="no">rcore/rcore.hh</includes>
  </compound>
  <compound kind="file">
    <name>rapicorn.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/</path>
    <filename>rapicorn_8hh</filename>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
  </compound>
  <compound kind="file">
    <name>aida.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aida_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="aidasignal_8hh" name="aidasignal.hh" local="yes" imported="no">aidasignal.hh</includes>
    <class kind="struct">Rapicorn::Aida::EnumValue</class>
    <class kind="class">Rapicorn::Aida::ImplicitBase</class>
    <class kind="class">Rapicorn::Aida::Any</class>
    <class kind="struct">Rapicorn::Aida::Any::Field</class>
    <class kind="class">Rapicorn::Aida::EventFd</class>
    <class kind="struct">Rapicorn::Aida::TypeHash</class>
    <class kind="struct">Rapicorn::Aida::ValueType</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</class>
    <class kind="union">Rapicorn::Aida::IdentifierParts</class>
    <class kind="class">Rapicorn::Aida::OrbObject</class>
    <class kind="class">Rapicorn::Aida::RemoteHandle</class>
    <class kind="class">Rapicorn::Aida::RemoteMember</class>
    <class kind="struct">Rapicorn::Aida::_ServantType</class>
    <class kind="struct">Rapicorn::Aida::_HandleType</class>
    <class kind="class">Rapicorn::Aida::ObjectBroker</class>
    <class kind="union">Rapicorn::Aida::FieldUnion</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer8</class>
    <class kind="class">Rapicorn::Aida::FieldReader</class>
    <class kind="class">Rapicorn::Aida::BaseConnection</class>
    <class kind="class">Rapicorn::Aida::ServerConnection</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodEntry</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodRegistry</class>
    <class kind="class">Rapicorn::Aida::ClientConnection</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="typedef">
      <type>FieldBuffer *</type>
      <name>SignalEmitHandler</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4966aa42a5d9c7a5f759fd6f5ef49e5a</anchor>
      <arglist>(const FieldBuffer *, void *)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TypeKind</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNTYPED</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92aafc9cd45b6e3d7988ea4b57bc1c5b468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VOID</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac7dbd611f71ca1826b7767223d94dd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BOOL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ab54febda14479a08816b39fd2159692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INT32</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a50f7454db8e3863666e379ea3080b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a13e7ff2527c4f6f411c5f8de24e12632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FLOAT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad121241c9476c0e839b3cb6e7820044c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STRING</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad7ac6c9d2f522609f32f18743074c00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENUM</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ae07683ac6e6a0ce0847ca322a53eb914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEQUENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a44186695c152bdaf3acdf2100c02a9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RECORD</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a547ec93ddc1e465a278689ac1112176e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INSTANCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a3d28c7cd557a73e5a3142ecdf73610ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FUNC</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a28754a6929f2813fd0e5f1aaeb637f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>TYPE_REFERENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a8a1cf942d9b04acd1c9389e752d0e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOCAL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac081edbd5162ad801c16969cb9bc5074</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>REMOTE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a206c9c3fb0343481eb384e0e8bd9979a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ANY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a250839b656b7375712ba6daa04d07888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageId</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baed6464e15b0c8319eb077424c5c89041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1713d747bbc871d9fb0640516460feee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba7264b6ac780fbeede21430a8f3168731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bad840443b5af937891d8be95b855bb69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bacb8ca8666d3da9616d05f43dffda9857</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa48359186fcf0294cf41bd078c0eb454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baae1ada48aa75486bfeb0edd5353e79c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_DISCONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1ff5abae0b5affa659579875d73bf2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CONNECT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba21a7be778c75d60e8e2c8b42d266a388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba486c5a3ce44d59b60f0cb154b7333481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baad326870340735838e1bfa5f6f883fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_REPLY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baadbcc9454e35209430e04e30ad784f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_HELLO</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba4151f41c3ec9453165b176e64963d5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_WELCOME</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baacca9d5607403ec74cb053fb24ff7387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_GARBAGE_SWEEP</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bac69f376a4efbaacb5d7933e43d74313d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_GARBAGE_REPORT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa36bee4c4506b268b824ef982e517ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_SEEN_GARBAGE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba5fe27d3b73d341b53fa70e68465cdcd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_list</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4059c5d7359ade580a16c486ad8277f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_find</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>afa324cb0371692767d84503849204bdc</anchor>
      <arglist>(const EnumValue *values, int64 value)</arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_find</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a16a077f3149b6a4d73f72bcc6e8c9998</anchor>
      <arglist>(const EnumValue *values, const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>enum_value_count</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ad6eb7df20855a9f6e634fdc7a799b8e0</anchor>
      <arglist>(const EnumValue *values)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type_kind_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aba93ad91b36f114b0787aeb348b786db</anchor>
      <arglist>(TypeKind type_kind)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>msgid_is_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa2fbd51d4f6fa4f9188b37d73fe90c43</anchor>
      <arglist>(MessageId msgid)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_ServantType</type>
      <name>_servant</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a424070ff463d381d27d4cceee4c7de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_HandleType</type>
      <name>_handle</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a82082338cb79e692465c1eab344be273</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aidacxx.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidacxx_8hh</filename>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="aidavariants_8hh" name="aidavariants.hh" local="no" imported="no">rcore/aidavariants.hh</includes>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <namespace>Rapicorn::Aida::CxxStub</namespace>
  </compound>
  <compound kind="file">
    <name>aidaprops.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidaprops_8hh</filename>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::Aida::Property</class>
    <class kind="struct">Rapicorn::Aida::PropertyList</class>
    <class kind="struct">Rapicorn::Aida::PropertyBool</class>
    <class kind="struct">Rapicorn::Aida::PropertyRange</class>
    <class kind="struct">Rapicorn::Aida::PropertyString</class>
    <class kind="struct">Rapicorn::Aida::PropertyEnum</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
  </compound>
  <compound kind="file">
    <name>aidaproto.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidaproto_8hh</filename>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
  </compound>
  <compound kind="file">
    <name>aidasignal.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidasignal_8hh</filename>
    <class kind="class">Rapicorn::Aida::Lib::ProtoSignal</class>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal</class>
    <class kind="class">Rapicorn::Aida::Lib::CollectorInvocation</class>
    <class kind="class">Rapicorn::Aida::Lib::PromiseInvocation</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorLast</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorDefault</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorDefault&lt; void &gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, void(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::HandlerLink</class>
    <class kind="class">Rapicorn::Aida::Lib::ProtoSignal&lt; R(Args...), Collector &gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, R(Args...)&gt;</class>
    <class kind="struct">Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, void(Args...)&gt;</class>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;</class>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</class>
    <class kind="class">Rapicorn::Aida::Signal</class>
    <class kind="class">Rapicorn::Aida::Signal::Connector</class>
    <class kind="struct">Rapicorn::Aida::CollectorUntil0</class>
    <class kind="struct">Rapicorn::Aida::CollectorWhile0</class>
    <class kind="struct">Rapicorn::Aida::CollectorVector</class>
    <class kind="class">Rapicorn::Aida::Connector</class>
    <class kind="class">Rapicorn::Aida::AsyncSignal</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ae1c30620e796be152f684788ad8e81ae</anchor>
      <arglist>(Instance &amp;object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a8631a013ecb4377a0fcb2256a190d4fd</anchor>
      <arglist>(Class *object, R(Class::*method)(Args...))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aidavariants.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>aidavariants_8hh</filename>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
  </compound>
  <compound kind="file">
    <name>bindable.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>bindable_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="struct">Rapicorn::BindableIface</class>
    <class kind="class">Rapicorn::BindableAdaptorBase</class>
    <class kind="class">Rapicorn::BindableAdaptor</class>
    <class kind="class">Rapicorn::BindableAdaptor&lt; std::shared_ptr&lt; Source &gt; &gt;</class>
    <class kind="class">Rapicorn::BindableAdaptor&lt; std::weak_ptr&lt; Source &gt; &gt;</class>
    <class kind="class">Rapicorn::BinadableAccessor</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>void</type>
      <name>bindable_accessor_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1e99f4bc1e52c506004fa61ed351176a</anchor>
      <arglist>(const BindableIface &amp;paccessible, const String &amp;bpath, Any &amp;any, Source &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindable_accessor_set</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc365d982ccb841b7788df9c03318ba8</anchor>
      <arglist>(const BindableIface &amp;paccessible, const String &amp;bpath, const Any &amp;any, Source &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>blobres.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>blobres_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::Blob</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_RESOURCE_DATA</name>
      <anchorfile>blobres_8hh.html</anchorfile>
      <anchor>a16408515faf12d138d4fa783f68b8bc9</anchor>
      <arglist>(IDENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_RESOURCE_ENTRY</name>
      <anchorfile>blobres_8hh.html</anchorfile>
      <anchor>a91827082cb8ca7fbaa6e2b1b559dbd77</anchor>
      <arglist>(IDENT, PATH,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cpuasm.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>cpuasm_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_MFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>ae3a191584110d3c84095c302bd183bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_SFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a1bc24a5c8a0142f387a4991ea44bfe79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_LFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a70a9c49709d9d9cfac3d65a7df86a953</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CFENCE</name>
      <anchorfile>cpuasm_8hh.html</anchorfile>
      <anchor>a472060cf594ce33ccb40b3245643cfe1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxxaux.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>cxxaux_8hh</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <class kind="struct">Rapicorn::Init</class>
    <class kind="struct">Rapicorn::FriendAllocator</class>
    <class kind="class">Rapicorn::IsComparable</class>
    <class kind="struct">Rapicorn::IsSharedPtr</class>
    <class kind="struct">Rapicorn::IsSharedPtr&lt; std::shared_ptr&lt; T &gt; &gt;</class>
    <class kind="struct">Rapicorn::IsWeakPtr</class>
    <class kind="struct">Rapicorn::IsWeakPtr&lt; std::weak_ptr&lt; T &gt; &gt;</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ISLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a166c187faea6c07b17636595d40b963a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNLIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>ab9b3b84a7f2c427fecdcea74dd6b282b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIKELY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>aa6e7ede8d3a1fa9479b34255a578d10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRINGIFY</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>afdf68e28db2e9d9d1f23f15d94976d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CONVENIENCE</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a71e71bfd947064760bb308e4dbb3860e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STATIC_ASSERT</name>
      <anchorfile>cxxaux_8hh.html</anchorfile>
      <anchor>a34c385f2849b33d3ae995a76bdc94586</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16d6f020959fce8f26846704ebc1202f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08c53dfdeea218dc880288740a6628ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae0f57cae2524e94411aa67d5296f06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4cd21db9a6b3e2fac590ad05f34b8da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>int8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a34a2d08cdd3d8d2674be16cec3212eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa64695863923d53a505cf781a783785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84936f297319d5502963a9df1ccf6006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a62578e481b74c480f0224ff138c8cc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e07f478607e6ab6d8bcb2c95ab91be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82eae5a113474d2f8400917889bbef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; String &gt;</type>
      <name>StringVector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab17672389c3d548faea6426546704d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long signed int</type>
      <name>LongIffy</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aba77ddbfe3450e4e917ce69ae1752c9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>debugtools.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>debugtools_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::TestStream</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>formatter.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>formatter_8cc</filename>
    <includes id="formatter_8hh" name="formatter.hh" local="yes" imported="no">formatter.hh</includes>
    <includes id="main_8hh" name="main.hh" local="yes" imported="no">main.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>formatter.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>formatter_8hh</filename>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <class kind="class">Rapicorn::Lib::StringFormatter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>inifile.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>inifile_8hh</filename>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <class kind="class">Rapicorn::IniFile</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>inout.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>inout_8hh</filename>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="struct">Rapicorn::UserSource</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::AnsiColors</namespace>
    <member kind="define">
      <type>#define</type>
      <name>assert</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>ad92c940e7f2ef0d078d9326e942518e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_FLIPPER</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a78de0fee8ecfa92c62e127fca78151d1</anchor>
      <arglist>(key, blurb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DEBUG_OPTION</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a5bb91f35322e737849763fc856b9c693</anchor>
      <arglist>(key, blurb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_KEY_DEBUG</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a1eec3a52b4d25ba020ba2966cee0dbee</anchor>
      <arglist>(key,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_FATAL</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a47c3fdf722aa61f0e215aa4d4e22a23b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a63243a3c02216ddbe34f4b278e59236e</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT_RETURN</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a2a80c7531fc9fe17c04a11f14457aae2</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_ASSERT_UNREACHED</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>afafd899ad18eab80063da57d772208f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CRITICAL</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a683ca5957bcb789c003422d6118c0cbf</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_CRITICAL_UNLESS</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a3675ea44fc61b1f8a99108b284c83119</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_DIAG</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>ab60e9a6b39758dd6eda73ed63fc0680d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STARTUP_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a4611fd9cb331549ffef41ba42d3379f3</anchor>
      <arglist>(expr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert_unreached</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a9d3ab84d5e33153bce0366bfbf5619ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert_return</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a9710867e5b10920ac6847a6107af252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>fatal</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>aeb6ad588d9fde043f5a7ae20aef48e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>critical_unless</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a57fad0a4de54663e5cae930d27fc9abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>critical</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a69d0a66f699a8e2e06cce60af674843e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STARTUP_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a18bf7182c5daa47f660ab06d978f1481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC_ASSERT</name>
      <anchorfile>inout_8hh.html</anchorfile>
      <anchor>a24df254ec81fc13256ad54cfe955d229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Colors</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RESET</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515ab60027c645f68c4692be928555c6b5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printout</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab36936872d41aba9c3bec612eb2dbe9f</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printerr</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a96e94edd3515f60a397c3709640afff9</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_notice</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a490c936bd3936e5423bf3968b280f812</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_warning</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3a176807433f32344b1c29e0a9adf4</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_flipper_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa86dd177a188551ebe65d00b90ccdb86</anchor>
      <arglist>(const char *env_var, const char *key, bool with_all_toggle, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2e9c872f514527edf522224befd6df6d</anchor>
      <arglist>(const char *env_var, const char *key, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>envkey_debug_message</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a016e50bfd4b06198208803a3218713b4</anchor>
      <arglist>(const char *env_var, const char *key, const char *file, const int line, const String &amp;message, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_envvar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b2601d10a4a9109d6c907e60df0d69</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af17f742e6889a962d6c20b16841e4d31</anchor>
      <arglist>(const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_del</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec22b35108beef1271a9829c8609b294</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_config_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab9a21d4e8e101c9b41f0db315fdca5ce</anchor>
      <arglist>(const String &amp;key, const String &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_config_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a489b730cdfa517e8c2ceff633750220d</anchor>
      <arglist>(const String &amp;key, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_devel_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ada7681a12663d8950ea33cf29d82d57a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rapicorn_debug</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3de5099dad51e0483ca98cf8e22098</anchor>
      <arglist>(const char *key, const char *file, const int line, const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rapicorn_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16860f3bfe3924c44d8d6768b966a1e5</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color_code</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>aa40ee649038738e5f9bde4bb9e5c2968</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a7dcd80a9f6c9a5f6db335a5c077219f9</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorize_tty</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a539cd043ebe5503de6bc834d5e0f5b9f</anchor>
      <arglist>(int fd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_envkey</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ab74022b4aadf4c6c52b60b291590be5e</anchor>
      <arglist>(const String &amp;env_var, const String &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>loop.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>loop_8hh</filename>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <class kind="struct">Rapicorn::PollFD</class>
    <class kind="class">Rapicorn::EventLoop</class>
    <class kind="class">Rapicorn::MainLoop</class>
    <class kind="struct">Rapicorn::EventLoop::State</class>
    <class kind="class">Rapicorn::EventLoop::Source</class>
    <class kind="class">Rapicorn::EventLoop::DispatcherSource</class>
    <class kind="class">Rapicorn::EventLoop::TimedSource</class>
    <class kind="class">Rapicorn::EventLoop::PollFDSource</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>main.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>main_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::InitSettings</class>
    <class kind="class">Rapicorn::ScopedLocale</class>
    <class kind="class">Rapicorn::ScopedPosixLocale</class>
    <class kind="class">Rapicorn::InitHook</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>void</type>
      <name>init_core</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2c7198d1bba741180fc8c1c154f4db67</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_core_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9928167f88b4f9999d00197327a333a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a931b0686e62c1fc572b51318d9d76960</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_string_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4070966821dbf5bce86791b05ff7bbf0</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg, const char **strp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arg_parse_collapse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26e99a12175bb322145f72352f9cbd0d</anchor>
      <arglist>(int *argcp, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91ca854a47f5191e9f126c3c47deda47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_alias</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa1813f40e9082a47a85d2fdbed6faeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_ident</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94a8f71ecda6cfa0f9d95a816cb19571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_cwd</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77613e0faf04099fc9ce91b97669f543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_nonce</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af9d4b16a2b49614d03ae648914077bcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e32c1bbca59915d5c76a76db8f32c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>random_irange</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09bcd30b4af19fa5439b70d207b6f864</anchor>
      <arglist>(int64_t begin, int64_t end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8a9a58440e7309fa77f5fae28b6e3103</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_frange</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5fb911903cbdc7c655837ac73d1b011c</anchor>
      <arglist>(double begin, double end)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>markup.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>markup_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <class kind="class">Rapicorn::MarkupParser</class>
    <class kind="struct">Rapicorn::MarkupParser::Error</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>math.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>math_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>memory.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>memory_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::IdAllocator</class>
    <class kind="class">Rapicorn::AlignedArray</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>int</type>
      <name>fmsb</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a238705dee2a406d99d2c1c903c09dcd0</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>aligned_alloc</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa3d647c99f6a41d4a49dda7d5bb06871</anchor>
      <arglist>(size_t total_size, size_t alignment, uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aligned_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c5d47aff557524b20e03c76d2923368</anchor>
      <arglist>(uint8 **free_pointer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objects.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>objects_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <includes id="aidaprops_8hh" name="aidaprops.hh" local="no" imported="no">rcore/aidaprops.hh</includes>
    <class kind="class">Rapicorn::VirtualTypeid</class>
    <class kind="struct">Rapicorn::ClassDoctor</class>
    <class kind="class">Rapicorn::Deletable</class>
    <class kind="class">Rapicorn::Deletable::DeletionHook</class>
    <class kind="class">Rapicorn::DataListContainer</class>
    <class kind="class">Rapicorn::ReferenceCountable</class>
    <class kind="class">Rapicorn::BaseObject</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch</class>
    <class kind="class">Rapicorn::NullInterface</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatcher</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>String</type>
      <name>cxx_demangle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab52ba59e766c8728a6495bc9798ba28a</anchor>
      <arglist>(const char *mangled_identifier)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>platform.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>platform_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="randomhash_8hh" name="randomhash.hh" local="no" imported="no">rcore/randomhash.hh</includes>
    <class kind="struct">Rapicorn::TaskStatus</class>
    <class kind="class">Rapicorn::Entropy</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>String</type>
      <name>cpu_info</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaeb28fbf3215b08168025fadb0cb74e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>quicktimer.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>quicktimer_8hh</filename>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="class">Rapicorn::QuickTimer</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>randomhash.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>randomhash_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <class kind="struct">Rapicorn::SHA3_224</class>
    <class kind="struct">Rapicorn::SHA3_256</class>
    <class kind="struct">Rapicorn::SHA3_384</class>
    <class kind="struct">Rapicorn::SHA3_512</class>
    <class kind="struct">Rapicorn::SHAKE128</class>
    <class kind="struct">Rapicorn::SHAKE256</class>
    <class kind="class">Rapicorn::Lib::KeccakF1600</class>
    <class kind="class">Rapicorn::KeccakPRNG</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>void</type>
      <name>sha3_224_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6b9e84f50b312f83e30430db2d326f</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[28])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_256_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c47b83473b31d28051ebeff0d260ee1</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[32])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_384_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab60240ae3655040b941e73835acc7baa</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[48])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_512_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af78e26132e889ac42804df43c8bdb996</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[64])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shake128_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a825474e9fc16358d66ff83f8f7ad040e</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t *hashvalues, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shake256_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afdabb497997ae6138e4f6e11c29b1f59</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t *hashvalues, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rapicornconfig.h</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rapicornconfig_8h</filename>
  </compound>
  <compound kind="file">
    <name>rcore.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rcore_8hh</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <includes id="aida_8hh" name="aida.hh" local="no" imported="no">rcore/aida.hh</includes>
    <includes id="aidacxx_8hh" name="aidacxx.hh" local="no" imported="no">rcore/aidacxx.hh</includes>
    <includes id="aidaprops_8hh" name="aidaprops.hh" local="no" imported="no">rcore/aidaprops.hh</includes>
    <includes id="bindable_8hh" name="bindable.hh" local="no" imported="no">rcore/bindable.hh</includes>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <includes id="cxxaux_8hh" name="cxxaux.hh" local="no" imported="no">rcore/cxxaux.hh</includes>
    <includes id="formatter_8hh" name="formatter.hh" local="no" imported="no">rcore/formatter.hh</includes>
    <includes id="inout_8hh" name="inout.hh" local="no" imported="no">rcore/inout.hh</includes>
    <includes id="inifile_8hh" name="inifile.hh" local="no" imported="no">rcore/inifile.hh</includes>
    <includes id="platform_8hh" name="platform.hh" local="no" imported="no">rcore/platform.hh</includes>
    <includes id="debugtools_8hh" name="debugtools.hh" local="no" imported="no">rcore/debugtools.hh</includes>
    <includes id="loop_8hh" name="loop.hh" local="no" imported="no">rcore/loop.hh</includes>
    <includes id="main_8hh" name="main.hh" local="no" imported="no">rcore/main.hh</includes>
    <includes id="markup_8hh" name="markup.hh" local="no" imported="no">rcore/markup.hh</includes>
    <includes id="memory_8hh" name="memory.hh" local="no" imported="no">rcore/memory.hh</includes>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <includes id="quicktimer_8hh" name="quicktimer.hh" local="no" imported="no">rcore/quicktimer.hh</includes>
    <includes id="randomhash_8hh" name="randomhash.hh" local="no" imported="no">rcore/randomhash.hh</includes>
    <includes id="thread_8hh" name="thread.hh" local="no" imported="no">rcore/thread.hh</includes>
    <includes id="math_8hh" name="math.hh" local="no" imported="no">rcore/math.hh</includes>
    <includes id="unicode_8hh" name="unicode.hh" local="no" imported="no">rcore/unicode.hh</includes>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="xmlnode_8hh" name="xmlnode.hh" local="no" imported="no">rcore/xmlnode.hh</includes>
    <includes id="regex_8hh" name="regex.hh" local="no" imported="no">rcore/regex.hh</includes>
    <includes id="strings_8hh" name="strings.hh" local="no" imported="no">rcore/strings.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>regex.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>regex_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>strings.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>strings_8hh</filename>
    <includes id="formatter_8hh" name="formatter.hh" local="no" imported="no">rcore/formatter.hh</includes>
    <class kind="class">Rapicorn::Strings</class>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CQUOTE</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>abc16d95b3e5a422ba6901427d91427b7</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING_VECTOR_FROM_ARRAY</name>
      <anchorfile>strings_8hh.html</anchorfile>
      <anchor>aac25174bfb51078a50b85798b6fe92b3</anchor>
      <arglist>(ConstCharArray)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a877751570b565ebe8768df63169e5e15</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aef23cfd69b1962d42eda9838006cdd0d</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77d1b603d207742ce001c85ec5a240a4</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cfef18e6ee55a693d7e82cb010effca</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_multiply</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a186e9ac6634c2be77152a465336f767a</anchor>
      <arglist>(const String &amp;s, uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_canonify</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a75cee7a94e49e3678b35134d00c7f898</anchor>
      <arglist>(const String &amp;string, const String &amp;valid_chars, const String &amp;substitute)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_a2z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae003b5e0377a41b24109d3fe63bf6243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_A2Z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16b08c4a178ce731abf12f4d7983661c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_ascii_alnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5ed54bc7aa14d537873ff30d7d75d2de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_tolower</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0e80960940efceef8ec52778ef72c55</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_toupper</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a86354c7902a6afbafb75597b25f84738</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_totitle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5e1578da91aca5928c8cff7ee83b873</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f012815cf0a15b9ce32ce52decbc809</anchor>
      <arglist>(const String &amp;string, const String &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split_any</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8a5e12dcc14713d5479e6748621cc20</anchor>
      <arglist>(const String &amp;string, const String &amp;splitchars)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_join</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe062e2b14ba277feff47bd5312db242</anchor>
      <arglist>(const String &amp;junctor, const StringVector &amp;strvec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a12e852c1f51ccdef22b0d8298054881a</anchor>
      <arglist>(const String &amp;string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac17484b7e899090db75a70c51695f33d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad85455a62ddae50689ac3605b7c9b34a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8fd8489d13343bc19a359a0ce032e624</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_has_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82e98eaff382b3afbcd9a1c1ee2b6f82</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a523fcfbe297b1084cd9d0cf0ab73a55a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a41e7a6037022e9bf9c22fca4e47fe4a5</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfc6be3d5d1483475edc46f9db95b9a5</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a855a2730c71981afd9248073a1487f8b</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afcd374c6928481d798baaabbcb8a49dd</anchor>
      <arglist>(const char *dblstring, const char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94d94e40016953a45f241099becd2d9f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; double &gt;</type>
      <name>string_to_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4b584badecf6ad4e187b0a9ebd9a0e66</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6bc7f3471ccb82b16dd66cc2a4244552</anchor>
      <arglist>(const vector&lt; double &gt; &amp;dvec, const String &amp;delim)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_errno</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac2d70acf529c14500eddcc2f0dee655f</anchor>
      <arglist>(int errno_val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_is_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae3eef88f3144118ed8f39ffc440764b6</anchor>
      <arglist>(const String &amp;uuid_string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_cmp_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f6b25d462eaeece3ecf0dac5de08cb9</anchor>
      <arglist>(const String &amp;uuid_string1, const String &amp;uuid_string2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_startswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6f9b700c92add1fe94fff83b8cd4ae</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_endswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68fcf11adb4255e92cd5d611b5b31318</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a98ce101af4fcf48e9e35a049589880a5</anchor>
      <arglist>(const String &amp;ident1, const String &amp;ident2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier_tail</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09dca5a31152ae6137b9c1ba7298b196</anchor>
      <arglist>(const String &amp;ident, const String &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_pretty_function_name</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfda5d69d7e8692562dfaa66c7778791</anchor>
      <arglist>(const char *gnuc_pretty_function)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cescape</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8299326b493de662098921b7a180bd17</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a795a0a454b6dde0f435fc4dcf3a7d38e</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a36a0241f3983e64505081a124e5c5cad</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_hexdump</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab1b6b7ec8d95f0e77df0e75e89d9355d</anchor>
      <arglist>(const void *addr, size_t length, size_t initial_offset)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a632d5948ccac14b9d4ff2e089c7d6880</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45d7d1d37bd26585b163dc50b31cc303</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6d8dde3a7e91d895fb223e9505818eff</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_substitute_char</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a458f21b1370a4f30527e7c6dfd734ce2</anchor>
      <arglist>(const String &amp;input, const char match, const char subst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af682b9c5041a7dfb5da2243760d88dd7</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1506ea8e44995e7b17d221a5735bb370</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afd90b1c590f732d40c3207710e2aeb6e</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_erase_empty</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0fa9ae1aa2c0bc52d88c7e01c17cb4f9</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vector_find_value</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd0def0a45edda7060bc678c48104d71</anchor>
      <arglist>(const StringVector &amp;svector, const String &amp;key, const String &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>cstrings_to_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad3503997cf1fd0687031dfb891843803</anchor>
      <arglist>(const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memset4</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a530022bcd34f01295dabf360c750b85f</anchor>
      <arglist>(uint32 *mem, uint32 filler, uint length)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>posix_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61e0122a3069ba22a830af964c22b118</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>current_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26adc180c8b1288a1eea0c0bf41508a8</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_option_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a54b8159b50dc3f3a90ebde519b1f0712</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_option_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08cbc395fb2a3bcba8fa265204090b5e</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_options_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a231c3452e3bdf5db9bb2a2afe0a4dcaa</anchor>
      <arglist>(const String &amp;option_string, vector&lt; String &gt; &amp;option_names, vector&lt; String &gt; &amp;option_values, const String &amp;empty_default)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>text_convert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aab7ab68dd73485ab7e44f68bcb506bf8</anchor>
      <arglist>(const String &amp;to_charset, String &amp;output_string, const String &amp;from_charset, const String &amp;input_string, const String &amp;fallback_charset, const String &amp;output_mark)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testutils.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>testutils_8hh</filename>
    <includes id="rcore_8hh" name="rcore.hh" local="no" imported="no">rcore/rcore.hh</includes>
    <class kind="class">Rapicorn::Test::Timer</class>
    <class kind="class">Rapicorn::Test::RegisterTest</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Test</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TTITLE</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a7f388f6d3c689cd8c1b7ade358285a87</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TSTART</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad79f34884d0b00cb9aa38c71422aa5dd</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TDONE</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a61bb2f89de27f74f8db608aa36f25996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOUT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>afb1d46debc8bc422e60621b3d51e70ac</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TMSG</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a968431da0bcfe449540af3c61a47ad5d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TINFO</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>aa34682f2c6947ea0dedc2910138c7ec3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWARN</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a18f8ec714eeaf8dcd9a1045cc357b492</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ac315a99971739ef05b2c65cd36ef35ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TASSERT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a3a39dc0079a11e2ed8ac40db2cd30fa7</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TASSERT_AT</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad71d705e2373dd881977928509e50328</anchor>
      <arglist>(LINE, cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TCMP</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a78fca0e2c2f18b434176208c72a5edda</anchor>
      <arglist>(a, cmp, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TCMPS</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a37f03abb55e75962ee5271b20363e586</anchor>
      <arglist>(a, cmp, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_TEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ad63f947ba2083ebe03542d0e144362d0</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_SLOWTEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>a5308efd838deb2667f4169c3fa35218e</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_LOGTEST</name>
      <anchorfile>testutils_8hh.html</anchorfile>
      <anchor>ab69e3ba5bb2f0f44058388805923aa1c</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModeType</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_TESTING</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a67739471a5884bf784964a4bc0e117fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_VERBOSE</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a5bb35484f55e6e1a8280847355d465ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_READOUT</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a2a0197e4f7980deb88be32464917b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_SLOW</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284aea3241e04a9179114779f52bf5045c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core_test</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a449637d24c531aa019bee5c206b07d77</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>acc90ac224230bd1bb08c987a58d7ed8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ae66cc92b6e5a6e6e6f37e2b418026684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normal</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa73805825ca5d33ab94e194af2dee9ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a7642bd82ff620cb6e5c0eee901dd67da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slow</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a4e5ad6e20c439dd2164ce6d81fe46e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ui_test</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa7e9db4cd771df823418961cccab83b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_assertion_hook</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a25c63e277b3756eb98743fb18289d6d1</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_failed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2ccd7777505443d4835ba41d53f85f47</anchor>
      <arglist>(const char *file, int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9c549317ab0c4165e75e358d2a2c8824</anchor>
      <arglist>(const char *a, const char *str_a)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_int64</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a1080738c148da9d9b6d67b61ae9e0390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>random_irange</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a226801be61e9625a59a44c01b2804105</anchor>
      <arglist>(int64_t begin, int64_t end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_float</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a65aedbada9af63eac2f6034ee0a0cd4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_frange</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a70761be6347f12b1fba2209c11ca3ee7</anchor>
      <arglist>(double begin, double end)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>thread.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>thread_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <includes id="threadlib_8hh" name="threadlib.hh" local="no" imported="no">rcore/threadlib.hh</includes>
    <class kind="struct">Rapicorn::RECURSIVE_LOCK</class>
    <class kind="class">Rapicorn::Mutex</class>
    <class kind="class">Rapicorn::Spinlock</class>
    <class kind="class">Rapicorn::RWLock</class>
    <class kind="struct">Rapicorn::ThreadInfo</class>
    <class kind="struct">Rapicorn::AUTOMATIC_LOCK</class>
    <class kind="struct">Rapicorn::BALANCED_LOCK</class>
    <class kind="class">Rapicorn::ScopedLock</class>
    <class kind="class">Rapicorn::Cond</class>
    <class kind="class">Rapicorn::Atomic</class>
    <class kind="struct">Rapicorn::Atomic&lt; char &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int64 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint64 &gt;</class>
    <class kind="class">Rapicorn::Atomic&lt; V * &gt;</class>
    <class kind="class">Rapicorn::Exclusive</class>
    <class kind="class">Rapicorn::AsyncBlockingQueue</class>
    <class kind="class">Rapicorn::AsyncNotifyingQueue</class>
    <class kind="class">Rapicorn::AsyncRingBuffer</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::ThisThread</namespace>
    <member kind="define">
      <type>#define</type>
      <name>do_once</name>
      <anchorfile>thread_8hh.html</anchorfile>
      <anchor>acba25f2657a42c1c6a786d5b537b6a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ab7e33385c69891d6f9b67e2c76ede9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>online_cpus</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>acac4c2a321d197f7eee1a88da8fb7215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a7d462ea80f7db209f4897309d3e0b049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a6dd2d6965877652c5b733b1822d53c75</anchor>
      <arglist>(int cpu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>thread_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ade8b26f2d65becbcd62a8d224b0f7264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a84e55848b3b318dcea5edaef49f84778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yield</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a35a22b1d7e4ca2f51fd786de16f3fc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::thread::id</type>
      <name>get_id</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a9344650ad9ebef82a7ea8771b581d5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_for</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a5ab35ed8e4903c7866b1833044bbdcc2</anchor>
      <arglist>(std::chrono::duration&lt; Rep, Period &gt; sleep_duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_until</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a52bd6072ee842c384186d2a437b5e352</anchor>
      <arglist>(const std::chrono::time_point&lt; Clock, Duration &gt; &amp;sleep_time)</arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::RECURSIVE_LOCK</type>
      <name>RECURSIVE_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61669cb28487b4c08cb2ce043edd6ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::AUTOMATIC_LOCK</type>
      <name>AUTOMATIC_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a22171f89df45aef5fd1c7fac16e7e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::BALANCED_LOCK</type>
      <name>BALANCED_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a975d39087ad1d063261fb5a9a2e91ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadlib.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>threadlib_8hh</filename>
    <includes id="cpuasm_8hh" name="cpuasm.hh" local="no" imported="no">rcore/cpuasm.hh</includes>
    <class kind="class">Rapicorn::Lib::Atomic</class>
    <class kind="class">Rapicorn::Lib::OnceScope</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>unicode.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>unicode_8hh</filename>
    <includes id="rcore_2utilities_8hh" name="utilities.hh" local="no" imported="no">rcore/utilities.hh</includes>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Unicode</namespace>
    <member kind="function">
      <type>bool</type>
      <name>utf8_is_locale_charset</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6229b69399b2bbadab68a6fd7ef8286d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>rcore_2utilities_8hh</filename>
    <includes id="inout_8hh" name="inout.hh" local="no" imported="no">rcore/inout.hh</includes>
    <class kind="class">Rapicorn::TEMPLATE_ERROR::InvalidType</class>
    <class kind="class">Rapicorn::DataKey</class>
    <class kind="class">Rapicorn::DataList</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Path</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEPARATOR</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a0920890c442b665b0c6609fa796e9047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEPARATOR_S</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>aca761e7d12e548532f757d7cceacbb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHPATH_SEPARATOR</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a5db5904907495d474fe92156ece2df52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHPATH_SEPARATOR_S</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>acf32d68c4474a3f0ba0dbfbe20618c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__PRETTY_FILE__</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>acdc77560e2c0593242cf83f4d126229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRLOC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a5d88e286727da87a591cc86da40657d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>return_if</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a1ce38ddddb17a04a5d6430c0149c8119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>return_unless</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ac4ea01920a3929f349d27eac53eb2b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_PRETTY_FILE</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a0eb36df9d1885a5875648a6102f30ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRLOC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a3a97af7008caf2f6d1ec12ca81d3fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRFUNC</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad9e6f7b9fea3910164b531af4fbbba9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_STRINGIFY</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad75a1c2a261f81a6f757be064a2370ea</anchor>
      <arglist>(macro_or_string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_RETURN_IF</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>ad235cd07741a3eba1d1870f6b892936b</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_RETURN_UNLESS</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a783c201419fa5cbb5c41209fe9f1d9db</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPICORN_BREAKPOINT</name>
      <anchorfile>rcore_2utilities_8hh.html</anchorfile>
      <anchor>a6c7f0d3c77a901acb3571ee0db64cc66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>vector_from_array</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04f376c05ae1e6dc267b05ff9effa3dc</anchor>
      <arglist>(const T(&amp;array_entries)[S])</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_startup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae8ed4bec3134b69126b686ae3ac661de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_realtime</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac500700b3a37937ab1a47e9ca54b800c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_benchmark</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8e6aefca1841bb6009772970c45fe96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_resolution</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f22e8bd6f8b84e06e57b51fcd7f8ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>dirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ab2f8dec1b122e92dc8c8f79b857d569a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>basename</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2de3f9da8ea9637473babea208cafbd8</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>abspath</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>abfb4c9905790e104afdfe480cb55f9d2</anchor>
      <arglist>(const String &amp;path, const String &amp;incwd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>acf7b18825e3ff1d026f00623cade1405</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>af0a67c6d6605e957a44ab243f5a72a7d</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ae1304999c5d8503029949aa458f4ee52</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a8ed528ee7f3f017a61731b4b4973116e</anchor>
      <arglist>(const String &amp;file1, const String &amp;file2)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cwd</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>aea9cf3ea2b5c66b186b33206cae40a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8 *</type>
      <name>zintern_decompress</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64260cc6cb05aba6be0f0953cc6ce59a</anchor>
      <arglist>(unsigned int decompressed_size, const unsigned char *cdata, unsigned int cdata_size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>ui_2utilities_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <class kind="struct">Rapicorn::Exception</class>
    <class kind="struct">Rapicorn::NullPointer</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</class>
    <class kind="class">Rapicorn::CheckDerivedFrom</class>
    <class kind="struct">Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</class>
    <class kind="struct">Rapicorn::Dereference</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type *const  &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type *const  &gt;</class>
    <class kind="class">Rapicorn::PointerIterator</class>
    <class kind="struct">Rapicorn::ValueIterator</class>
    <class kind="class">Rapicorn::IteratorRange</class>
    <class kind="class">Rapicorn::ValueIteratorRange</class>
    <class kind="class">Rapicorn::Walker</class>
    <class kind="class">Rapicorn::Walker::Adapter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>xmlnode.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>xmlnode_8hh</filename>
    <includes id="markup_8hh" name="markup.hh" local="no" imported="no">rcore/markup.hh</includes>
    <includes id="objects_8hh" name="objects.hh" local="no" imported="no">rcore/objects.hh</includes>
    <class kind="class">Rapicorn::XmlNode</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>py-rope.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rope/</path>
    <filename>py-rope_8hh</filename>
    <includes id="rapicorn_8hh" name="rapicorn.hh" local="no" imported="no">rapicorn.hh</includes>
  </compound>
  <compound kind="file">
    <name>adjustment.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>adjustment_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::Adjustment</class>
    <class kind="class">Rapicorn::AdjustmentSource</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>application.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>application_8hh</filename>
    <includes id="commands_8hh" name="commands.hh" local="no" imported="no">ui/commands.hh</includes>
    <class kind="class">Rapicorn::ApplicationImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>arrangement.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>arrangement_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::ArrangementImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>binding.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>binding_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::BindableRelayImpl</class>
    <class kind="class">Rapicorn::Binding</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Binding &gt;</type>
      <name>BindingP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09a977ed7a38c852760c8e17203c58e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>blitfuncs.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>blitfuncs_8hh</filename>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <class kind="struct">Rapicorn::Blit::RenderTable</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>buttons.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>buttons_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="paintcontainers_8hh" name="paintcontainers.hh" local="no" imported="no">ui/paintcontainers.hh</includes>
    <class kind="class">Rapicorn::ButtonAreaImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>cairocontext.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>cairocontext_8hh</filename>
    <includes id="painter_8hh" name="painter.hh" local="no" imported="no">ui/painter.hh</includes>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::CairoContext</class>
    <class kind="class">Rapicorn::CairoPainter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>clientapi.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>clientapi_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="class">Rapicorn::ObjectHandle</class>
    <class kind="class">Rapicorn::BindableRelayHandle</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="class">Rapicorn::ListModelHandle</class>
    <class kind="class">Rapicorn::ListModelRelayHandle</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="class">Rapicorn::WidgetHandle</class>
    <class kind="class">Rapicorn::ContainerHandle</class>
    <class kind="class">Rapicorn::WindowHandle</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="class">Rapicorn::ArrangementHandle</class>
    <class kind="class">Rapicorn::AlignmentHandle</class>
    <class kind="class">Rapicorn::FrameHandle</class>
    <class kind="class">Rapicorn::FocusFrameHandle</class>
    <class kind="class">Rapicorn::AmbienceHandle</class>
    <class kind="class">Rapicorn::TableHandle</class>
    <class kind="class">Rapicorn::HBoxHandle</class>
    <class kind="class">Rapicorn::VBoxHandle</class>
    <class kind="class">Rapicorn::ButtonAreaHandle</class>
    <class kind="class">Rapicorn::ScrollAreaHandle</class>
    <class kind="class">Rapicorn::SliderAreaHandle</class>
    <class kind="class">Rapicorn::SliderTroughHandle</class>
    <class kind="class">Rapicorn::SliderSkidHandle</class>
    <class kind="class">Rapicorn::ArrowHandle</class>
    <class kind="class">Rapicorn::DotGridHandle</class>
    <class kind="class">Rapicorn::DrawableHandle</class>
    <class kind="class">Rapicorn::ImageHandle</class>
    <class kind="class">Rapicorn::ImageFrameHandle</class>
    <class kind="class">Rapicorn::LabelHandle</class>
    <class kind="class">Rapicorn::TextEditorHandle</class>
    <class kind="class">Rapicorn::WidgetListRowHandle</class>
    <class kind="class">Rapicorn::WidgetListHandle</class>
    <class kind="class">Rapicorn::ApplicationHandle</class>
    <class kind="class">Rapicorn::IdlTestWidgetHandle</class>
    <class kind="class">Rapicorn::TestBoxHandle</class>
    <class kind="class">Rapicorn::TestContainerHandle</class>
    <namespace>Rapicorn</namespace>
    <namespace>Rapicorn::Aida</namespace>
    <member kind="typedef">
      <type>ObjectHandle</type>
      <name>ObjectH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9973a3198e1a9a7f0c55289303b13b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BindableRelayHandle</type>
      <name>BindableRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a433c7da7cbae75e0fdf0e377a28cc7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelHandle</type>
      <name>ListModelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a55e28f9bcee38f22184865d1368e111a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelRelayHandle</type>
      <name>ListModelRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec24986b760009950390f9b97d91715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetHandle</type>
      <name>WidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06fccaa7d6ebf06b4a39abd8e2d1b339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ContainerHandle</type>
      <name>ContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a287dd4b731f6d3aa271e1970f69b34a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowHandle</type>
      <name>WindowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab63697b1c07367fa51d014d60ef04f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrangementHandle</type>
      <name>ArrangementH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a50cdacb0a3701df1957d68173f9c7400</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AlignmentHandle</type>
      <name>AlignmentH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a278890ddaca12ec45c9e81442a75c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FrameHandle</type>
      <name>FrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a99f3cd6718836aceab4b694265903a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FocusFrameHandle</type>
      <name>FocusFrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7b2e1a6d6aeabb745500c0ceac96bc58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AmbienceHandle</type>
      <name>AmbienceH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af8605c87049c6302f99646ede85d442b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TableHandle</type>
      <name>TableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6cebc145f11e56702909dba2080010dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HBoxHandle</type>
      <name>HBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91e2f78f9c87dc0d6d9edccdef3da542</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VBoxHandle</type>
      <name>VBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afffddb6814efa84482d19bdcc332f1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ButtonAreaHandle</type>
      <name>ButtonAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f7da593dcca3fab645f020842e66807</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScrollAreaHandle</type>
      <name>ScrollAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a067500e0d66d33c3b3279743956b11f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderAreaHandle</type>
      <name>SliderAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5a0743685c293c516753980f2875121b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderTroughHandle</type>
      <name>SliderTroughH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af33be8f91adf11c097dc9f597eb4862a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderSkidHandle</type>
      <name>SliderSkidH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a37e39ee6b1a0a978046550c1951bfaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrowHandle</type>
      <name>ArrowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9ae0c9cebc70c37f6331c20426fb200d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DotGridHandle</type>
      <name>DotGridH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5ccf399fd8be6de356cc9019f595f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableHandle</type>
      <name>DrawableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a30c01e1c22bc5896307e0e32a4e33dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageHandle</type>
      <name>ImageH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05a0ff2b96f96dfd3728a32945355aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageFrameHandle</type>
      <name>ImageFrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6342da63cc358cfe368ee7290555806a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LabelHandle</type>
      <name>LabelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a409187069763850fafbc3bf1e5561e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextEditorHandle</type>
      <name>TextEditorH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aabfc2435e504264dfbedcd64e643fdac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListRowHandle</type>
      <name>WidgetListRowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a58ffa795091f7aa732796b08d67911aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListHandle</type>
      <name>WidgetListH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae74a432b5ddb0fda0774bc5c4b521998</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ApplicationHandle</type>
      <name>ApplicationH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4dd2568fd18e4faf62cf93611507b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IdlTestWidgetHandle</type>
      <name>IdlTestWidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2dbfae52135a8b319ecdaca5520bda54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TestBoxHandle</type>
      <name>TestBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6605c9bfbcbb214f2dae3ebe7f55823f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TestContainerHandle</type>
      <name>TestContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>affe210941d960903cd911405849c1b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_app_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af70355a4ca32a082340b8eba3406b2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af0825c1f4488f7728049256c2b107644</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_test_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a670ab204db4a2bde3920bf957958e806</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f7570597dcc101076b2f20a68bcc5ec</anchor>
      <arglist>(int status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clientinsert.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>clientinsert_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a8fc500e3ea62d548693c60a1a03de0e2</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t *</type>
      <name>row</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a3186d5b77ea517e46b8ad8918e62e0b3</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>a369399896761e31ae71db57fdd0ba431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>ae26bcfe2f33f5873dbdfb6948cf1f59f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>clientinsert_8hh.html</anchorfile>
      <anchor>af1c210e54cbc7dedaf0c68bc079264f6</anchor>
      <arglist>(int status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cmdlib.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>cmdlib_8hh</filename>
    <includes id="window_8hh" name="window.hh" local="no" imported="no">ui/window.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>commands.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>commands_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::Command</class>
    <class kind="struct">Rapicorn::CommandList</class>
    <class kind="struct">Rapicorn::CommandDataArg</class>
    <class kind="struct">Rapicorn::CommandData</class>
    <class kind="struct">Rapicorn::CommandArg</class>
    <class kind="struct">Rapicorn::CommandSimple</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>container.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>container_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::ContainerImpl</class>
    <class kind="class">Rapicorn::SingleContainerImpl</class>
    <class kind="struct">Rapicorn::AnchorInfo</class>
    <class kind="class">Rapicorn::ResizeContainerImpl</class>
    <class kind="class">Rapicorn::MultiContainerImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>evaluator.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>evaluator_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::Evaluator</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>events.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>events_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Event</class>
    <class kind="class">Rapicorn::EventButton</class>
    <class kind="class">Rapicorn::EventKey</class>
    <class kind="class">Rapicorn::EventData</class>
    <class kind="struct">Rapicorn::EventWinSize</class>
    <class kind="struct">Rapicorn::EventContext</class>
    <namespace>Rapicorn</namespace>
    <member kind="enumeration">
      <type></type>
      <name>KeyValue</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4abf7b70dafbd70302dac00dfd159158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTENT_SOURCE_SELECTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136a3cd23c256e55296fbf080a3336af0d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTENT_SOURCE_CLIPBOARD</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136a01a8568203bb5f21f8bdf0f7fd35ab36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>factory.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>factory_8cc</filename>
    <includes id="factory_8hh" name="factory.hh" local="yes" imported="no">factory.hh</includes>
    <includes id="evaluator_8hh" name="evaluator.hh" local="yes" imported="no">evaluator.hh</includes>
    <includes id="window_8hh" name="window.hh" local="yes" imported="no">window.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>factory.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>factory_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="struct">Rapicorn::Factory::WidgetTypeFactory</class>
    <class kind="class">Rapicorn::WidgetFactory</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>heritage.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>heritage_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Heritage</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>image.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>image_8cc</filename>
    <includes id="image_8hh" name="image.hh" local="yes" imported="no">image.hh</includes>
    <includes id="stock_8hh" name="stock.hh" local="yes" imported="no">stock.hh</includes>
    <includes id="painter_8hh" name="painter.hh" local="yes" imported="no">painter.hh</includes>
    <includes id="factory_8hh" name="factory.hh" local="yes" imported="no">factory.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_CAIRO_STATUS</name>
      <anchorfile>image_8cc.html</anchorfile>
      <anchor>aa47299975b0f63b60436e3c54ffc7208</anchor>
      <arglist>(status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>image.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>image_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::ImageImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>imageframe.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>imageframe_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::ImageFrameImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>interfaces.idl</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>interfaces_8idl</filename>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="interface">Rapicorn::Object</class>
    <class kind="interface">Rapicorn::BindableRelay</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="interface">Rapicorn::ListModel</class>
    <class kind="interface">Rapicorn::ListModelRelay</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="interface">Rapicorn::Widget</class>
    <class kind="interface">Rapicorn::Container</class>
    <class kind="interface">Rapicorn::Window</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="interface">Rapicorn::Arrangement</class>
    <class kind="interface">Rapicorn::Alignment</class>
    <class kind="interface">Rapicorn::Frame</class>
    <class kind="interface">Rapicorn::FocusFrame</class>
    <class kind="interface">Rapicorn::Ambience</class>
    <class kind="interface">Rapicorn::Table</class>
    <class kind="interface">Rapicorn::HBox</class>
    <class kind="interface">Rapicorn::VBox</class>
    <class kind="interface">Rapicorn::ButtonArea</class>
    <class kind="interface">Rapicorn::ScrollArea</class>
    <class kind="interface">Rapicorn::SliderArea</class>
    <class kind="interface">Rapicorn::SliderTrough</class>
    <class kind="interface">Rapicorn::SliderSkid</class>
    <class kind="interface">Rapicorn::Arrow</class>
    <class kind="interface">Rapicorn::DotGrid</class>
    <class kind="interface">Rapicorn::Drawable</class>
    <class kind="interface">Rapicorn::Image</class>
    <class kind="interface">Rapicorn::ImageFrame</class>
    <class kind="interface">Rapicorn::Label</class>
    <class kind="interface">Rapicorn::TextEditor</class>
    <class kind="interface">Rapicorn::WidgetListRow</class>
    <class kind="interface">Rapicorn::WidgetList</class>
    <class kind="interface">Rapicorn::Application</class>
    <class kind="interface">Rapicorn::IdlTestWidget</class>
    <class kind="interface">Rapicorn::TestBox</class>
    <class kind="interface">Rapicorn::TestContainer</class>
    <namespace>Rapicorn</namespace>
    <member kind="enumeration">
      <type></type>
      <name>AdjustmentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad727c4f727d48a6046d74879d6c8317f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AlignType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a01cb38d55e327d3de4fc9c1c87c93d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3380d4b28813af812be0fad677ad144f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClickType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c9119421605845db84cd3e0aadd613a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21d6ae4fc230404f3321a704f4c8bd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorSchemeType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_INHERIT</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0ab306dc84dd28d8e5dd227047b9d1aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a56efebe0abbfa3acd603d41f097d5e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_SELECTED</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a6ade49e7d85c7a38875a0dbd2f35b957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_BASE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a39d3045eb3e9cc6651035ba57ebfdd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a24338f17abbf59dd63ff951c63528565</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a71e11f0369e06caaed8eaf7443a074d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a05c1d3a1236815eeca81178b4a7c278c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2acdae37ef75521fa3164283ba9f8cbc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313aae1cdf512674ac850acd01716f527c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DESKTOP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ab85a4ac2e6867b3973ce5748e41083ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a160f71ec57382f49889f4106323b4543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_TOOLBAR</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac715e8144f08a022603fa0d16d53d503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a98040ffd508e641a4cd2c73caf4b11b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_UTILITY</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a132fc98733fd067d1800d82a7ed17468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_SPLASH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a2ef3915a453aa058fa09ce57102d94aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DIALOG</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a37e3f2e40751f040b740853c588e6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DROPDOWN_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a3ff88a2ec6aacbb04f070fd7d2be24e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_POPUP_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac876877e1c727de6af4a8fa27c4d5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_TOOLTIP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ad43b309a4e802a5a51a6763870476c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_NOTIFICATION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a129181f417bc812e68d1ec9fdb5d28be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_COMBO</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a534e02e7d3158ffb46c6a8f2bf6d5e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DND</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a41eb840a06ca1fb3bf6a04b79b8e00e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UpdateKind</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_READ</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba762d8bd681cc31a667ea7112371e90e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_CHANGE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba8ad4ba23954e96f0ae67e7ac10cca0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_INSERTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba409fccbf750c75a26f320b28a1e47305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_DELETION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba04e84ed6100e8ef1b10d53463275606f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TestEnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaa6a401aadd806812cea0075b17fd0ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>internal.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>internal_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>keysymbols.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>keysymbols_8hh</filename>
    <member kind="variable">
      <type></type>
      <name>KEY_BackSpace</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a44beaa24df81a47b110607b3bca8bf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Linefeed</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a751a01c89cd6eba4d995d13edb6a46d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Return</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af3b5e6a426e41b2d6b6aea239804215c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Pause</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8e0fa7eb0dc54ccdebdfc945e62f04ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Delete</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4ce4c49daa8d1fca9fd1d7087ab5e325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Multi_key</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3a42a79697dd5cfd6b0974bf62d63848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Left</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac5e459f54ccd0883b78fed50d7860fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Up</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af6d9db62479a2f55354421411c00acf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Right</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a619a15383494c20f2b84feb546674117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Down</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa885b36e7578c5970cfa7a43ae814eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Prior</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af00f0c0a6750308d3ea6151243a8eede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Next</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6f965715e82e26be5ca43905a84c64f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_End</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a66685c6cc0f35d3c4d1fd45de1896187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Begin</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a46bbcc02872383627f5f2783da92f1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Select</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a7832b4fb83c9bba5252d06ce8978f39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Execute</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a89fc0c502bf4e7aaa7384bbe7f94ddf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Insert</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a889e7ef372ce6ed5868d2ed2b0e4fe78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Redo</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a18d3850c9a3ff988dba1bbdc0b08754a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Find</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4e28e03633ef5250b5ff692e90d76dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Cancel</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa09c08d115fff2dc7b0c3625167819a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Help</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac680e383d83b60b04205f540cfd7af12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Mode_switch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2423fd5bcc800c385a9b0d9c1d1eb8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_script_switch</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2848f899350221b97f474c67ee0494db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Space</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a760c3539e0a3ccd827b8c61c3ca91428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Enter</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9700f680e2e6591dee32c386f794e23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_F1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a87f49c1659c9844aa9a6705b921bd91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Equal</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a33feb7b408431a088a1de55e7ebb659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_KP_Separator</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4ad2c39068e9ae1e4dcf55c9e7700140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8f1c11d153023ea94b5e373a860f2f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9e0688a946ed3c4753099aff75318267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Control_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6bf5bce19960e5cae2ea140873199236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Control_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a01e75f6f4bce3eb26557fec710bb2515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Caps_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>acc0647c3d31d6ea1221016874640ed3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Shift_Lock</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a86074ff85bb7f2dc5089a8a950ffeb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Meta_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a05030fcea7ab3d1557f746ae5a40887d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Meta_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a56b89531b2e3b8b7d5c98c1f83d05c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Alt_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa2f66d286391ac1f5cea030a3935794a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Alt_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac08f9a81efe9ad47fc22c621f6aa3884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Super_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5f2ba03f7d322b67cabab0a4f2ef0636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Super_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a16cd7ed451e185301b37a8fbf99f8cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Hyper_L</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a44c3b4844c7edcf8c028c3594c3fabc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_Hyper_R</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa209068d16cc82af41cbfb718d0a1c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ISO_Group_Shift</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9dbd627633060c6ed2b1477bcc1cff79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_space</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a5edd5d17dec3ac25169c6cfa10b64801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_exclam</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a1df40bf712d3ff39cea0a886adfb0687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quotedbl</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa29f085eeac5251591afffe0181ab6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_numbersign</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0dcf8d88f1304b87fa6a6425a215162b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_dollar</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a29b22deb8cf19300003c58f48d3df9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_percent</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a461fa3d4f675cd982b0d7464a14f6158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_ampersand</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a0bf56457aca46ad02bd26a0716eafde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_apostrophe</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a14fbd74e18d2dfdc898f20f8cd57c3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quoteright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aba7f907ca4a844fd523ee9aac328ba7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_parenleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa62b8860af268dc7c59e116ac32a0d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_parenright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a92705427d4b9f067a997f96d255f165f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asterisk</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a6e2028591e5dd18e0b4d9246c8b69c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_plus</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aeba050e9e94a974e278b7f42c94a5094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_comma</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa8392d443c951dd0db413155f72decad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_minus</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ac026b3d41bf74529cf1554085644c221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_period</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8f1de2820148cbd52c8d0d10f8bf404c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_slash</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa28519252f095d26949e64d120f9bd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_0</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9dbede9bb56b8837ea8541ce57d746e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_1</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa06c8ff22b1272902cb314d91ec31a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_2</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a3d5438ff4f0527b4274715105654462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_3</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a30d6fb9827772bbafe10bd233ce66ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_4</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a595ead57bda522ff722eed26201d4f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_5</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a84a4d528d1b3039dcbb0c1be6e234dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_6</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8c51c16306b54b9aa58ceb5b57b49126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_7</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a2459d6feb61430358708ac5469462f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_8</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>abdbe0c17838e7483db913fe5c2ad7a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_9</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a85669336a10bd1eb3a1ec4b40440fa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_colon</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9f57dfb9ed52d00adc5f3962bf97e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_semicolon</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af8fa4866afd5d5a0447f91e185b627b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_less</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aaeef7818c155bffb78163a4064e8cf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_equal</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad7becf00baee7c9b2ed5ae19168b8baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_greater</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a583637a0d7d163af7c36ddb41e4edd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_question</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a4a32edb2245ed9a36c04cc65e34e441b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_at</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a35359dc667f436f1d0b512450fb7dac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bracketleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a25d2001e60752a8934158bf4eacbff41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_backslash</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a371c34bcb6fc86e0d8c62eda41472269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bracketright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a14ee357584573383c517facd5b465ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asciicircum</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a9609a116ce743b7671114f1f931a20b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_underscore</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>a8bc0d97711b6e83d0f0639c517ffb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_grave</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ae617648311c6a4ec4eeb186d98a73214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_quoteleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>ad4daa6b108652beaf4bf527e92277c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_braceleft</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>afd2118613496ed8e72637c173aea83dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_bar</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>af057ebf34d93c2c5aa9a596e7e75ba22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_braceright</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>abf817aba8a765782daa8c237b41b15b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_asciitilde</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aecc31d7f0b4a934cb04d57c69cb4803b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_nobreakspace</name>
      <anchorfile>keysymbols_8hh.html</anchorfile>
      <anchor>aa277d5f76a0a1f8707a15613aee88432</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>layoutcontainers.cc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>layoutcontainers_8cc</filename>
    <includes id="layoutcontainers_8hh" name="layoutcontainers.hh" local="yes" imported="no">layoutcontainers.hh</includes>
    <includes id="factory_8hh" name="factory.hh" local="yes" imported="no">factory.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>layoutcontainers.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>layoutcontainers_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="table_8hh" name="table.hh" local="no" imported="no">ui/table.hh</includes>
    <class kind="class">Rapicorn::AlignmentImpl</class>
    <class kind="class">Rapicorn::HBoxImpl</class>
    <class kind="class">Rapicorn::VBoxImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>listarea.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>listarea_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="layoutcontainers_8hh" name="layoutcontainers.hh" local="no" imported="no">ui/layoutcontainers.hh</includes>
    <includes id="paintcontainers_8hh" name="paintcontainers.hh" local="no" imported="no">ui/paintcontainers.hh</includes>
    <class kind="class">Rapicorn::WidgetListRowImpl</class>
    <class kind="struct">Rapicorn::ListRow</class>
    <class kind="class">Rapicorn::WidgetListImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>models.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>models_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::ListModelRelayImpl</class>
    <class kind="class">Rapicorn::MemoryListStore</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>object.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>object_8hh</filename>
    <includes id="serverapi_8hh" name="serverapi.hh" local="no" imported="no">ui/serverapi.hh</includes>
    <class kind="class">Rapicorn::ObjectImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>paintcontainers.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>paintcontainers_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::AmbienceImpl</class>
    <class kind="class">Rapicorn::FrameImpl</class>
    <class kind="class">Rapicorn::FocusFrameImpl</class>
    <class kind="struct">Rapicorn::FocusFrameImpl::Client</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>painter.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>painter_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::CPainter</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>paintwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>paintwidgets_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::ArrowImpl</class>
    <class kind="class">Rapicorn::DotGridImpl</class>
    <class kind="class">Rapicorn::DrawableImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>pixmap.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>pixmap_8hh</filename>
    <includes id="blobres_8hh" name="blobres.hh" local="no" imported="no">rcore/blobres.hh</includes>
    <class kind="class">Rapicorn::PixmapT</class>
    <namespace>Rapicorn</namespace>
    <member kind="typedef">
      <type>PixmapT&lt; Pixbuf &gt;</type>
      <name>Pixmap</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a7199c4794a9f5eaeade56d2868e3d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitives.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>primitives_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="serverapi_8hh" name="serverapi.hh" local="no" imported="no">ui/serverapi.hh</includes>
    <class kind="class">Rapicorn::Point</class>
    <class kind="class">Rapicorn::Rect</class>
    <class kind="struct">Rapicorn::IRect</class>
    <class kind="class">Rapicorn::Color</class>
    <class kind="class">Rapicorn::Affine</class>
    <class kind="struct">Rapicorn::Affine::VectorReturn</class>
    <class kind="struct">Rapicorn::AffineIdentity</class>
    <class kind="struct">Rapicorn::AffineHFlip</class>
    <class kind="struct">Rapicorn::AffineVFlip</class>
    <class kind="struct">Rapicorn::AffineTranslate</class>
    <class kind="struct">Rapicorn::AffineScale</class>
    <class kind="struct">Rapicorn::AffineRotate</class>
    <class kind="struct">Rapicorn::AffineShear</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>region.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>region_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Region</class>
    <namespace>Rapicorn</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9623d12dc75e47ac345af79e3f972b57</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7ae41884314a0c90c23f030c6003d5a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aad051ec6d380e65237d2944a4f47032a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>regionimpl.h</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>regionimpl_8h</filename>
    <includes id="rapicornconfig_8h" name="rapicornconfig.h" local="no" imported="no">rcore/rapicornconfig.h</includes>
    <class kind="struct">RapicornRegionBox</class>
    <class kind="struct">RapicornRegionPoint</class>
  </compound>
  <compound kind="file">
    <name>screenwindow.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>screenwindow_8hh</filename>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <class kind="class">Rapicorn::ScreenWindow</class>
    <class kind="struct">Rapicorn::ScreenWindow::Setup</class>
    <class kind="struct">Rapicorn::ScreenWindow::Config</class>
    <class kind="struct">Rapicorn::ScreenWindow::State</class>
    <class kind="struct">Rapicorn::ScreenCommand</class>
    <class kind="class">Rapicorn::ScreenDriver</class>
    <class kind="struct">Rapicorn::ScreenDriverFactory</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>scrollwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>scrollwidgets_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="viewport_8hh" name="viewport.hh" local="no" imported="no">ui/viewport.hh</includes>
    <class kind="class">Rapicorn::ScrollAreaImpl</class>
    <class kind="class">Rapicorn::ScrollPortImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>selector.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>selector_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <class kind="class">Rapicorn::Selector::CustomPseudoRegistry</class>
    <class kind="struct">Rapicorn::Selector::SelectorNode</class>
    <class kind="struct">Rapicorn::Selector::SelectorChain</class>
    <class kind="class">Rapicorn::Selector::Selob</class>
    <class kind="class">Rapicorn::Selector::Matcher</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>selob.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>selob_8hh</filename>
    <includes id="selector_8hh" name="selector.hh" local="no" imported="no">ui/selector.hh</includes>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <includes id="models_8hh" name="models.hh" local="no" imported="no">ui/models.hh</includes>
    <class kind="class">Rapicorn::Selector::SelobWidget</class>
    <class kind="class">Rapicorn::Selector::SelobListModel</class>
    <class kind="class">Rapicorn::Selector::SelobAllocator</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>serverapi.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>serverapi_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
    <class kind="class">Rapicorn::ObjectIface</class>
    <class kind="class">Rapicorn::BindableRelayIface</class>
    <class kind="class">Rapicorn::ListModelIface</class>
    <class kind="class">Rapicorn::ListModelRelayIface</class>
    <class kind="class">Rapicorn::WidgetIface</class>
    <class kind="class">Rapicorn::ContainerIface</class>
    <class kind="class">Rapicorn::WindowIface</class>
    <class kind="class">Rapicorn::ArrangementIface</class>
    <class kind="class">Rapicorn::AlignmentIface</class>
    <class kind="class">Rapicorn::FrameIface</class>
    <class kind="class">Rapicorn::FocusFrameIface</class>
    <class kind="class">Rapicorn::AmbienceIface</class>
    <class kind="class">Rapicorn::TableIface</class>
    <class kind="class">Rapicorn::HBoxIface</class>
    <class kind="class">Rapicorn::VBoxIface</class>
    <class kind="class">Rapicorn::ButtonAreaIface</class>
    <class kind="class">Rapicorn::ScrollAreaIface</class>
    <class kind="class">Rapicorn::SliderAreaIface</class>
    <class kind="class">Rapicorn::SliderTroughIface</class>
    <class kind="class">Rapicorn::SliderSkidIface</class>
    <class kind="class">Rapicorn::ArrowIface</class>
    <class kind="class">Rapicorn::DotGridIface</class>
    <class kind="class">Rapicorn::DrawableIface</class>
    <class kind="class">Rapicorn::ImageIface</class>
    <class kind="class">Rapicorn::ImageFrameIface</class>
    <class kind="class">Rapicorn::LabelIface</class>
    <class kind="class">Rapicorn::TextEditorIface</class>
    <class kind="class">Rapicorn::WidgetListRowIface</class>
    <class kind="class">Rapicorn::WidgetListIface</class>
    <class kind="class">Rapicorn::ApplicationIface</class>
    <class kind="class">Rapicorn::IdlTestWidgetIface</class>
    <class kind="class">Rapicorn::TestBoxIface</class>
    <class kind="class">Rapicorn::TestContainerIface</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>serverinsert.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>serverinsert_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="clientapi_8hh" name="clientapi.hh" local="no" imported="no">ui/clientapi.hh</includes>
    <includes id="pixmap_8hh" name="pixmap.hh" local="no" imported="no">ui/pixmap.hh</includes>
  </compound>
  <compound kind="file">
    <name>sinfex.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>sinfex_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <class kind="class">Rapicorn::Sinfex</class>
    <class kind="struct">Rapicorn::Sinfex::Scope</class>
    <class kind="class">Rapicorn::Sinfex::Value</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>sizegroup.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>sizegroup_8hh</filename>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <class kind="class">Rapicorn::WidgetGroup</class>
    <class kind="class">Rapicorn::SizeGroup</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>slider.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>slider_8hh</filename>
    <includes id="adjustment_8hh" name="adjustment.hh" local="no" imported="no">ui/adjustment.hh</includes>
    <includes id="table_8hh" name="table.hh" local="no" imported="no">ui/table.hh</includes>
    <class kind="class">Rapicorn::SliderAreaImpl</class>
    <class kind="class">Rapicorn::SliderTroughImpl</class>
    <class kind="class">Rapicorn::SliderSkidImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>stock.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>stock_8hh</filename>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <class kind="class">Rapicorn::Stock</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>table.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>table_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::TableLayoutImpl</class>
    <class kind="struct">Rapicorn::TableLayoutImpl::RowCol</class>
    <class kind="class">Rapicorn::TableImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>testwidgets.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>testwidgets_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="class">Rapicorn::TestContainerImpl</class>
    <class kind="class">Rapicorn::TestBoxImpl</class>
    <class kind="class">Rapicorn::IdlTestWidgetImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>text-editor.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>text-editor_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <class kind="struct">Rapicorn::ParagraphState</class>
    <class kind="struct">Rapicorn::TextAttrState</class>
    <class kind="class">Rapicorn::TextBlock</class>
    <class kind="class">Rapicorn::TextControllerImpl</class>
    <class kind="class">Rapicorn::LabelImpl</class>
    <class kind="class">Rapicorn::TextEditorImpl</class>
    <namespace>Rapicorn</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TextMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a47fba08c10564bf6dec85bef87795e85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>text-pango.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>text-pango_8hh</filename>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="text-editor_8hh" name="text-editor.hh" local="no" imported="no">ui/text-editor.hh</includes>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>uithread.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>uithread_8hh</filename>
    <includes id="rapicorn-core_8hh" name="rapicorn-core.hh" local="no" imported="no">rapicorn-core.hh</includes>
    <includes id="application_8hh" name="application.hh" local="no" imported="no">ui/application.hh</includes>
    <includes id="arrangement_8hh" name="arrangement.hh" local="no" imported="no">ui/arrangement.hh</includes>
    <includes id="binding_8hh" name="binding.hh" local="no" imported="no">ui/binding.hh</includes>
    <includes id="buttons_8hh" name="buttons.hh" local="no" imported="no">ui/buttons.hh</includes>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="cmdlib_8hh" name="cmdlib.hh" local="no" imported="no">ui/cmdlib.hh</includes>
    <includes id="evaluator_8hh" name="evaluator.hh" local="no" imported="no">ui/evaluator.hh</includes>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="factory_8hh" name="factory.hh" local="no" imported="no">ui/factory.hh</includes>
    <includes id="heritage_8hh" name="heritage.hh" local="no" imported="no">ui/heritage.hh</includes>
    <includes id="image_8hh" name="image.hh" local="no" imported="no">ui/image.hh</includes>
    <includes id="widget_8hh" name="widget.hh" local="no" imported="no">ui/widget.hh</includes>
    <includes id="imageframe_8hh" name="imageframe.hh" local="no" imported="no">ui/imageframe.hh</includes>
    <includes id="layoutcontainers_8hh" name="layoutcontainers.hh" local="no" imported="no">ui/layoutcontainers.hh</includes>
    <includes id="listarea_8hh" name="listarea.hh" local="no" imported="no">ui/listarea.hh</includes>
    <includes id="models_8hh" name="models.hh" local="no" imported="no">ui/models.hh</includes>
    <includes id="object_8hh" name="object.hh" local="no" imported="no">ui/object.hh</includes>
    <includes id="paintcontainers_8hh" name="paintcontainers.hh" local="no" imported="no">ui/paintcontainers.hh</includes>
    <includes id="paintwidgets_8hh" name="paintwidgets.hh" local="no" imported="no">ui/paintwidgets.hh</includes>
    <includes id="painter_8hh" name="painter.hh" local="no" imported="no">ui/painter.hh</includes>
    <includes id="primitives_8hh" name="primitives.hh" local="no" imported="no">ui/primitives.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <includes id="scrollwidgets_8hh" name="scrollwidgets.hh" local="no" imported="no">ui/scrollwidgets.hh</includes>
    <includes id="selector_8hh" name="selector.hh" local="no" imported="no">ui/selector.hh</includes>
    <includes id="selob_8hh" name="selob.hh" local="no" imported="no">ui/selob.hh</includes>
    <includes id="sinfex_8hh" name="sinfex.hh" local="no" imported="no">ui/sinfex.hh</includes>
    <includes id="sizegroup_8hh" name="sizegroup.hh" local="no" imported="no">ui/sizegroup.hh</includes>
    <includes id="stock_8hh" name="stock.hh" local="no" imported="no">ui/stock.hh</includes>
    <includes id="table_8hh" name="table.hh" local="no" imported="no">ui/table.hh</includes>
    <includes id="text-editor_8hh" name="text-editor.hh" local="no" imported="no">ui/text-editor.hh</includes>
    <includes id="ui_2utilities_8hh" name="utilities.hh" local="no" imported="no">ui/utilities.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <includes id="window_8hh" name="window.hh" local="no" imported="no">ui/window.hh</includes>
    <namespace>Rapicorn</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_TEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>a1eee3ec14206d07b32c357cc1ca7dba7</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_SLOWTEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>a17f22277121dea36313391da79edc478</anchor>
      <arglist>(name,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_UITHREAD_LOGTEST</name>
      <anchorfile>uithread_8hh.html</anchorfile>
      <anchor>af1cc769da128f619877a7a72118f1b1d</anchor>
      <arglist>(name,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>viewport.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>viewport_8hh</filename>
    <includes id="container_8hh" name="container.hh" local="no" imported="no">ui/container.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <class kind="class">Rapicorn::ViewportImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>widget.dox</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>widget_8dox</filename>
  </compound>
  <compound kind="file">
    <name>widget.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>widget_8hh</filename>
    <includes id="object_8hh" name="object.hh" local="no" imported="no">ui/object.hh</includes>
    <includes id="events_8hh" name="events.hh" local="no" imported="no">ui/events.hh</includes>
    <includes id="region_8hh" name="region.hh" local="no" imported="no">ui/region.hh</includes>
    <includes id="commands_8hh" name="commands.hh" local="no" imported="no">ui/commands.hh</includes>
    <includes id="heritage_8hh" name="heritage.hh" local="no" imported="no">ui/heritage.hh</includes>
    <class kind="class">Rapicorn::EventHandler</class>
    <class kind="class">Rapicorn::WidgetImpl</class>
    <class kind="struct">Rapicorn::WidgetImpl::PackInfo</class>
    <class kind="struct">Rapicorn::WidgetIfaceVector</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="file">
    <name>window.hh</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>window_8hh</filename>
    <includes id="viewport_8hh" name="viewport.hh" local="no" imported="no">ui/viewport.hh</includes>
    <includes id="screenwindow_8hh" name="screenwindow.hh" local="no" imported="no">ui/screenwindow.hh</includes>
    <class kind="class">Rapicorn::WindowImpl</class>
    <namespace>Rapicorn</namespace>
  </compound>
  <compound kind="page">
    <name>aida</name>
    <title>Aida - Abstract Interface Definition Architecture</title>
    <filename>aida</filename>
    <docanchor file="aida" title="Motivating considerations for the creation of Aida.">motivations</docanchor>
    <docanchor file="aida" title="Design Considerations">design</docanchor>
    <docanchor file="aida" title="ImplicitBase">ImplicitBase</docanchor>
    <docanchor file="aida" title="Instance Type">aida_type_name</docanchor>
    <docanchor file="aida" title="IPC - Interprocess / -Thread Communication">ipc</docanchor>
    <docanchor file="aida" title="Distributed Reference Counting">drc</docanchor>
  </compound>
  <compound kind="page">
    <name>rapicorn-changelog</name>
    <title>Development Changes</title>
    <filename>rapicorn-changelog</filename>
  </compound>
  <compound kind="page">
    <name>apps</name>
    <title>Developing Applications with Rapicorn</title>
    <filename>apps</filename>
    <docanchor file="apps" title="UI Definition Syntax">xmlui-syntax</docanchor>
    <docanchor file="apps" title="Data Bindings">data-binding</docanchor>
    <docanchor file="apps" title="Hello Rapicorn">hello</docanchor>
    <docanchor file="apps" title="1. Application Startup">hello-app-init</docanchor>
    <docanchor file="apps" title="2. Dialog Creation">hello-create-dialog</docanchor>
    <docanchor file="apps" title="3. Events and Signals">hello-event-signal</docanchor>
    <docanchor file="apps" title="Event Loop and Exit">hello-loop-exit</docanchor>
  </compound>
  <compound kind="page">
    <name>experimental</name>
    <title>Experimental APIs and Features</title>
    <filename>experimental</filename>
  </compound>
  <compound kind="page">
    <name>configuration</name>
    <title>Settings and Configuration</title>
    <filename>configuration</filename>
    <docanchor file="configuration" title="Environment Variables">env</docanchor>
    <docanchor file="configuration" title="Build Settings">buildsettings</docanchor>
  </compound>
  <compound kind="page">
    <name>contribute</name>
    <title>Contributing to Rapicorn</title>
    <filename>contribute</filename>
    <docanchor file="contribute" title="Welcoming Contributors">contributors</docanchor>
    <docanchor file="contribute" title="Build Architecture">buildarch</docanchor>
    <docanchor file="contribute" title="Development Resources">develres</docanchor>
  </compound>
  <compound kind="page">
    <name>intro</name>
    <title>Introduction</title>
    <filename>intro</filename>
    <docanchor file="intro" title="Links and Resources">introlinks</docanchor>
    <docanchor file="intro" title="Manual Pages">manpages</docanchor>
  </compound>
  <compound kind="page">
    <name>rapicorn-NEWS</name>
    <title>Release News</title>
    <filename>rapicorn-NEWS</filename>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 14.10.0:	(2014-10-09)">Rapicorn_14_10_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 13.07.0:	(2013-07-06)">Rapicorn_13_07_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 13.03.0:	(2013-03-24)">Rapicorn_13_03_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 12.08.0:	(2012-08-08)">Rapicorn_12_08_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 10.08.0:	(2010-08-20)">Rapicorn_10_08_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 8.4.0:		(2008-04-24)">Rapicorn_8_4_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 0.1.2:		(2007-01-22)">Rapicorn_0_1_2</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 0.1.1:		(2005-07-31)">Rapicorn_0_1_1</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 0.1.0:		(2005-04-19)">Rapicorn_0_1_0</docanchor>
    <docanchor file="rapicorn-NEWS" title="Rapicorn 0.0.1:">Rapicorn_0_0_1</docanchor>
  </compound>
  <compound kind="page">
    <name>eventloops</name>
    <title>Event Loops and Event Sources</title>
    <filename>eventloops</filename>
  </compound>
  <compound kind="page">
    <name>widgets</name>
    <title>Widget System</title>
    <filename>widgets</filename>
  </compound>
  <compound kind="struct">
    <name>RapicornRegionBox</name>
    <filename>structRapicornRegionBox.html</filename>
  </compound>
  <compound kind="struct">
    <name>RapicornRegionPoint</name>
    <filename>structRapicornRegionPoint.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::AuxData::Error</name>
    <filename>classaidacc_1_1AuxData_1_1Error.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::BaseDecl</name>
    <filename>classaidacc_1_1Decls_1_1BaseDecl.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::Namespace</name>
    <filename>classaidacc_1_1Decls_1_1Namespace.html</filename>
    <base>aidacc::Decls::BaseDecl</base>
  </compound>
  <compound kind="class">
    <name>aidacc::Decls::TypeInfo</name>
    <filename>classaidacc_1_1Decls_1_1TypeInfo.html</filename>
    <base>aidacc::Decls::BaseDecl</base>
  </compound>
  <compound kind="class">
    <name>aidacc::ExtractDocs::Generator</name>
    <filename>classaidacc_1_1ExtractDocs_1_1Generator.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Source</name>
    <filename>classaidacc_1_1loop_1_1Source.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::IdleSource</name>
    <filename>classaidacc_1_1loop_1_1IdleSource.html</filename>
    <base>aidacc::loop::Source</base>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::TimeoutSource</name>
    <filename>classaidacc_1_1loop_1_1TimeoutSource.html</filename>
    <base>aidacc::loop::Source</base>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Loop</name>
    <filename>classaidacc_1_1loop_1_1Loop.html</filename>
    <class kind="class">aidacc::loop::Loop::Timeout</class>
  </compound>
  <compound kind="class">
    <name>aidacc::loop::Loop::Timeout</name>
    <filename>classaidacc_1_1loop_1_1Loop_1_1Timeout.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::YYGlobals</name>
    <filename>classaidacc_1_1Parser_1_1YYGlobals.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::Error</name>
    <filename>classaidacc_1_1Parser_1_1Error.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::IdlSyntaxParserScanner</name>
    <filename>classaidacc_1_1Parser_1_1IdlSyntaxParserScanner.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::Parser::IdlSyntaxParser</name>
    <filename>classaidacc_1_1Parser_1_1IdlSyntaxParser.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::plic::AidaMain</name>
    <filename>classaidacc_1_1plic_1_1AidaMain.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::plic::ParseError</name>
    <filename>classaidacc_1_1plic_1_1ParseError.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub::Generator</name>
    <filename>classaidacc_1_1PyStub_1_1Generator.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::__AIDA_Enum__</name>
    <filename>classaidacc_1_1PyStub-glue_1_1____AIDA__Enum____.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseRecord_</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseRecord__.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseClass_</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseClass__.html</filename>
    <class kind="class">aidacc::PyStub-glue::_BaseClass_::__Signal__</class>
  </compound>
  <compound kind="class">
    <name>aidacc::PyStub-glue::_BaseClass_::__Signal__</name>
    <filename>classaidacc_1_1PyStub-glue_1_1__BaseClass___1_1____Signal____.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::TypeMap::Encoder</name>
    <filename>classaidacc_1_1TypeMap_1_1Encoder.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::TypeMap::Generator</name>
    <filename>classaidacc_1_1TypeMap_1_1Generator.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::SyntaxError</name>
    <filename>classaidacc_1_1yapps2runtime_1_1SyntaxError.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::NoMoreTokens</name>
    <filename>classaidacc_1_1yapps2runtime_1_1NoMoreTokens.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Token</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Token.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Token.html</anchorfile>
      <anchor>aaf5807d75d783fffe556c3f72f967f73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Scanner</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Scanner.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a64fc8b49465583bdece9bf804c4f5580</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>stack_input</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a27887aaf04d84f44ca1beb6fd3fbe72d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_pos</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a4e79ca82d37fdb794bc50110864353dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_line_with_pointer</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>aa4d912b5c7d20bcf52372891ade235ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>grab_input</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>ab584bf105caca98f1d3711c4373bf87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getchar</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a5e17b6a3de8f294bdcb2f5d43645b481</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>token</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>af22cd89fabff7322a4ab880c5ac7323c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>peek</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>a1e71f97b9488cbd5eb2f40252062dd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>scan</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Scanner.html</anchorfile>
      <anchor>aad6b079a738b1ec135718018c91c635e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Parser</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Parser.html</filename>
  </compound>
  <compound kind="class">
    <name>aidacc::yapps2runtime::Context</name>
    <filename>classaidacc_1_1yapps2runtime_1_1Context.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classaidacc_1_1yapps2runtime_1_1Context.html</anchorfile>
      <anchor>ab3cfdd4a77e809095e79948e60ad0121</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn</name>
    <filename>namespaceRapicorn.html</filename>
    <namespace>Rapicorn::Aida</namespace>
    <namespace>Rapicorn::AnsiColors</namespace>
    <namespace>Rapicorn::Path</namespace>
    <namespace>Rapicorn::Test</namespace>
    <namespace>Rapicorn::ThisThread</namespace>
    <namespace>Rapicorn::Unicode</namespace>
    <class kind="struct">Rapicorn::BindableIface</class>
    <class kind="class">Rapicorn::BindableAdaptorBase</class>
    <class kind="class">Rapicorn::BindableAdaptor</class>
    <class kind="class">Rapicorn::BindableAdaptor&lt; std::shared_ptr&lt; Source &gt; &gt;</class>
    <class kind="class">Rapicorn::BindableAdaptor&lt; std::weak_ptr&lt; Source &gt; &gt;</class>
    <class kind="class">Rapicorn::BinadableAccessor</class>
    <class kind="class">Rapicorn::Blob</class>
    <class kind="struct">Rapicorn::Init</class>
    <class kind="struct">Rapicorn::FriendAllocator</class>
    <class kind="class">Rapicorn::IsComparable</class>
    <class kind="struct">Rapicorn::IsSharedPtr</class>
    <class kind="struct">Rapicorn::IsSharedPtr&lt; std::shared_ptr&lt; T &gt; &gt;</class>
    <class kind="struct">Rapicorn::IsWeakPtr</class>
    <class kind="struct">Rapicorn::IsWeakPtr&lt; std::weak_ptr&lt; T &gt; &gt;</class>
    <class kind="class">Rapicorn::TestStream</class>
    <class kind="class">Rapicorn::IniFile</class>
    <class kind="struct">Rapicorn::UserSource</class>
    <class kind="struct">Rapicorn::PollFD</class>
    <class kind="class">Rapicorn::EventLoop</class>
    <class kind="class">Rapicorn::MainLoop</class>
    <class kind="class">Rapicorn::InitSettings</class>
    <class kind="class">Rapicorn::ScopedLocale</class>
    <class kind="class">Rapicorn::ScopedPosixLocale</class>
    <class kind="class">Rapicorn::InitHook</class>
    <class kind="class">Rapicorn::MarkupParser</class>
    <class kind="class">Rapicorn::IdAllocator</class>
    <class kind="class">Rapicorn::AlignedArray</class>
    <class kind="class">Rapicorn::VirtualTypeid</class>
    <class kind="struct">Rapicorn::ClassDoctor</class>
    <class kind="class">Rapicorn::Deletable</class>
    <class kind="class">Rapicorn::DataListContainer</class>
    <class kind="class">Rapicorn::ReferenceCountable</class>
    <class kind="class">Rapicorn::BaseObject</class>
    <class kind="class">Rapicorn::NullInterface</class>
    <class kind="struct">Rapicorn::TaskStatus</class>
    <class kind="class">Rapicorn::Entropy</class>
    <class kind="class">Rapicorn::QuickTimer</class>
    <class kind="struct">Rapicorn::SHA3_224</class>
    <class kind="struct">Rapicorn::SHA3_256</class>
    <class kind="struct">Rapicorn::SHA3_384</class>
    <class kind="struct">Rapicorn::SHA3_512</class>
    <class kind="struct">Rapicorn::SHAKE128</class>
    <class kind="struct">Rapicorn::SHAKE256</class>
    <class kind="class">Rapicorn::KeccakPRNG</class>
    <class kind="class">Rapicorn::Strings</class>
    <class kind="struct">Rapicorn::RECURSIVE_LOCK</class>
    <class kind="class">Rapicorn::Mutex</class>
    <class kind="class">Rapicorn::Spinlock</class>
    <class kind="class">Rapicorn::RWLock</class>
    <class kind="struct">Rapicorn::ThreadInfo</class>
    <class kind="struct">Rapicorn::AUTOMATIC_LOCK</class>
    <class kind="struct">Rapicorn::BALANCED_LOCK</class>
    <class kind="class">Rapicorn::ScopedLock</class>
    <class kind="class">Rapicorn::Cond</class>
    <class kind="class">Rapicorn::Atomic</class>
    <class kind="struct">Rapicorn::Atomic&lt; char &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint8 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint32 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; int64 &gt;</class>
    <class kind="struct">Rapicorn::Atomic&lt; uint64 &gt;</class>
    <class kind="class">Rapicorn::Atomic&lt; V * &gt;</class>
    <class kind="class">Rapicorn::Exclusive</class>
    <class kind="class">Rapicorn::AsyncBlockingQueue</class>
    <class kind="class">Rapicorn::AsyncNotifyingQueue</class>
    <class kind="class">Rapicorn::AsyncRingBuffer</class>
    <class kind="class">Rapicorn::DataKey</class>
    <class kind="class">Rapicorn::DataList</class>
    <class kind="class">Rapicorn::XmlNode</class>
    <class kind="class">Rapicorn::Adjustment</class>
    <class kind="class">Rapicorn::AdjustmentSource</class>
    <class kind="class">Rapicorn::ApplicationImpl</class>
    <class kind="class">Rapicorn::ArrangementImpl</class>
    <class kind="class">Rapicorn::BindableRelayImpl</class>
    <class kind="class">Rapicorn::Binding</class>
    <class kind="class">Rapicorn::ButtonAreaImpl</class>
    <class kind="class">Rapicorn::CairoContext</class>
    <class kind="class">Rapicorn::CairoPainter</class>
    <class kind="struct">Rapicorn::BoolSeq</class>
    <class kind="struct">Rapicorn::StringSeq</class>
    <class kind="struct">Rapicorn::AnySeq</class>
    <class kind="struct">Rapicorn::AnySeqSeq</class>
    <class kind="struct">Rapicorn::PixelSeq</class>
    <class kind="struct">Rapicorn::Pixbuf</class>
    <class kind="class">Rapicorn::ObjectHandle</class>
    <class kind="class">Rapicorn::BindableRelayHandle</class>
    <class kind="struct">Rapicorn::UpdateSpan</class>
    <class kind="struct">Rapicorn::UpdateRequest</class>
    <class kind="class">Rapicorn::ListModelHandle</class>
    <class kind="class">Rapicorn::ListModelRelayHandle</class>
    <class kind="struct">Rapicorn::Requisition</class>
    <class kind="struct">Rapicorn::WidgetSeq</class>
    <class kind="class">Rapicorn::WidgetHandle</class>
    <class kind="class">Rapicorn::ContainerHandle</class>
    <class kind="class">Rapicorn::WindowHandle</class>
    <class kind="struct">Rapicorn::WindowList</class>
    <class kind="class">Rapicorn::ArrangementHandle</class>
    <class kind="class">Rapicorn::AlignmentHandle</class>
    <class kind="class">Rapicorn::FrameHandle</class>
    <class kind="class">Rapicorn::FocusFrameHandle</class>
    <class kind="class">Rapicorn::AmbienceHandle</class>
    <class kind="class">Rapicorn::TableHandle</class>
    <class kind="class">Rapicorn::HBoxHandle</class>
    <class kind="class">Rapicorn::VBoxHandle</class>
    <class kind="class">Rapicorn::ButtonAreaHandle</class>
    <class kind="class">Rapicorn::ScrollAreaHandle</class>
    <class kind="class">Rapicorn::SliderAreaHandle</class>
    <class kind="class">Rapicorn::SliderTroughHandle</class>
    <class kind="class">Rapicorn::SliderSkidHandle</class>
    <class kind="class">Rapicorn::ArrowHandle</class>
    <class kind="class">Rapicorn::DotGridHandle</class>
    <class kind="class">Rapicorn::DrawableHandle</class>
    <class kind="class">Rapicorn::ImageHandle</class>
    <class kind="class">Rapicorn::ImageFrameHandle</class>
    <class kind="class">Rapicorn::LabelHandle</class>
    <class kind="class">Rapicorn::TextEditorHandle</class>
    <class kind="class">Rapicorn::WidgetListRowHandle</class>
    <class kind="class">Rapicorn::WidgetListHandle</class>
    <class kind="class">Rapicorn::ApplicationHandle</class>
    <class kind="class">Rapicorn::IdlTestWidgetHandle</class>
    <class kind="class">Rapicorn::TestBoxHandle</class>
    <class kind="class">Rapicorn::TestContainerHandle</class>
    <class kind="struct">Rapicorn::Command</class>
    <class kind="struct">Rapicorn::CommandList</class>
    <class kind="struct">Rapicorn::CommandDataArg</class>
    <class kind="struct">Rapicorn::CommandData</class>
    <class kind="struct">Rapicorn::CommandArg</class>
    <class kind="struct">Rapicorn::CommandSimple</class>
    <class kind="struct">Rapicorn::ContainerImpl</class>
    <class kind="class">Rapicorn::SingleContainerImpl</class>
    <class kind="struct">Rapicorn::AnchorInfo</class>
    <class kind="class">Rapicorn::ResizeContainerImpl</class>
    <class kind="class">Rapicorn::MultiContainerImpl</class>
    <class kind="struct">Rapicorn::Evaluator</class>
    <class kind="class">Rapicorn::Event</class>
    <class kind="class">Rapicorn::EventButton</class>
    <class kind="class">Rapicorn::EventKey</class>
    <class kind="class">Rapicorn::EventData</class>
    <class kind="struct">Rapicorn::EventWinSize</class>
    <class kind="struct">Rapicorn::EventContext</class>
    <class kind="class">Rapicorn::WidgetFactory</class>
    <class kind="class">Rapicorn::Heritage</class>
    <class kind="class">Rapicorn::ImageImpl</class>
    <class kind="class">Rapicorn::ImageFrameImpl</class>
    <class kind="interface">Rapicorn::Object</class>
    <class kind="interface">Rapicorn::BindableRelay</class>
    <class kind="interface">Rapicorn::ListModel</class>
    <class kind="interface">Rapicorn::ListModelRelay</class>
    <class kind="interface">Rapicorn::Widget</class>
    <class kind="interface">Rapicorn::Container</class>
    <class kind="interface">Rapicorn::Window</class>
    <class kind="interface">Rapicorn::Arrangement</class>
    <class kind="interface">Rapicorn::Alignment</class>
    <class kind="interface">Rapicorn::Frame</class>
    <class kind="interface">Rapicorn::FocusFrame</class>
    <class kind="interface">Rapicorn::Ambience</class>
    <class kind="interface">Rapicorn::Table</class>
    <class kind="interface">Rapicorn::HBox</class>
    <class kind="interface">Rapicorn::VBox</class>
    <class kind="interface">Rapicorn::ButtonArea</class>
    <class kind="interface">Rapicorn::ScrollArea</class>
    <class kind="interface">Rapicorn::SliderArea</class>
    <class kind="interface">Rapicorn::SliderTrough</class>
    <class kind="interface">Rapicorn::SliderSkid</class>
    <class kind="interface">Rapicorn::Arrow</class>
    <class kind="interface">Rapicorn::DotGrid</class>
    <class kind="interface">Rapicorn::Drawable</class>
    <class kind="interface">Rapicorn::Image</class>
    <class kind="interface">Rapicorn::ImageFrame</class>
    <class kind="interface">Rapicorn::Label</class>
    <class kind="interface">Rapicorn::TextEditor</class>
    <class kind="interface">Rapicorn::WidgetListRow</class>
    <class kind="interface">Rapicorn::WidgetList</class>
    <class kind="interface">Rapicorn::Application</class>
    <class kind="interface">Rapicorn::IdlTestWidget</class>
    <class kind="interface">Rapicorn::TestBox</class>
    <class kind="interface">Rapicorn::TestContainer</class>
    <class kind="class">Rapicorn::AlignmentImpl</class>
    <class kind="class">Rapicorn::HBoxImpl</class>
    <class kind="class">Rapicorn::VBoxImpl</class>
    <class kind="class">Rapicorn::WidgetListRowImpl</class>
    <class kind="struct">Rapicorn::ListRow</class>
    <class kind="class">Rapicorn::WidgetListImpl</class>
    <class kind="class">Rapicorn::ListModelRelayImpl</class>
    <class kind="class">Rapicorn::MemoryListStore</class>
    <class kind="class">Rapicorn::ObjectImpl</class>
    <class kind="class">Rapicorn::AmbienceImpl</class>
    <class kind="class">Rapicorn::FrameImpl</class>
    <class kind="class">Rapicorn::FocusFrameImpl</class>
    <class kind="class">Rapicorn::CPainter</class>
    <class kind="class">Rapicorn::ArrowImpl</class>
    <class kind="class">Rapicorn::DotGridImpl</class>
    <class kind="class">Rapicorn::DrawableImpl</class>
    <class kind="class">Rapicorn::PixmapT</class>
    <class kind="class">Rapicorn::Point</class>
    <class kind="class">Rapicorn::Rect</class>
    <class kind="struct">Rapicorn::IRect</class>
    <class kind="class">Rapicorn::Color</class>
    <class kind="class">Rapicorn::Affine</class>
    <class kind="struct">Rapicorn::AffineIdentity</class>
    <class kind="struct">Rapicorn::AffineHFlip</class>
    <class kind="struct">Rapicorn::AffineVFlip</class>
    <class kind="struct">Rapicorn::AffineTranslate</class>
    <class kind="struct">Rapicorn::AffineScale</class>
    <class kind="struct">Rapicorn::AffineRotate</class>
    <class kind="struct">Rapicorn::AffineShear</class>
    <class kind="class">Rapicorn::Region</class>
    <class kind="class">Rapicorn::ScreenWindow</class>
    <class kind="struct">Rapicorn::ScreenCommand</class>
    <class kind="class">Rapicorn::ScreenDriver</class>
    <class kind="struct">Rapicorn::ScreenDriverFactory</class>
    <class kind="class">Rapicorn::ScrollAreaImpl</class>
    <class kind="class">Rapicorn::ScrollPortImpl</class>
    <class kind="class">Rapicorn::ObjectIface</class>
    <class kind="class">Rapicorn::BindableRelayIface</class>
    <class kind="class">Rapicorn::ListModelIface</class>
    <class kind="class">Rapicorn::ListModelRelayIface</class>
    <class kind="class">Rapicorn::WidgetIface</class>
    <class kind="class">Rapicorn::ContainerIface</class>
    <class kind="class">Rapicorn::WindowIface</class>
    <class kind="class">Rapicorn::ArrangementIface</class>
    <class kind="class">Rapicorn::AlignmentIface</class>
    <class kind="class">Rapicorn::FrameIface</class>
    <class kind="class">Rapicorn::FocusFrameIface</class>
    <class kind="class">Rapicorn::AmbienceIface</class>
    <class kind="class">Rapicorn::TableIface</class>
    <class kind="class">Rapicorn::HBoxIface</class>
    <class kind="class">Rapicorn::VBoxIface</class>
    <class kind="class">Rapicorn::ButtonAreaIface</class>
    <class kind="class">Rapicorn::ScrollAreaIface</class>
    <class kind="class">Rapicorn::SliderAreaIface</class>
    <class kind="class">Rapicorn::SliderTroughIface</class>
    <class kind="class">Rapicorn::SliderSkidIface</class>
    <class kind="class">Rapicorn::ArrowIface</class>
    <class kind="class">Rapicorn::DotGridIface</class>
    <class kind="class">Rapicorn::DrawableIface</class>
    <class kind="class">Rapicorn::ImageIface</class>
    <class kind="class">Rapicorn::ImageFrameIface</class>
    <class kind="class">Rapicorn::LabelIface</class>
    <class kind="class">Rapicorn::TextEditorIface</class>
    <class kind="class">Rapicorn::WidgetListRowIface</class>
    <class kind="class">Rapicorn::WidgetListIface</class>
    <class kind="class">Rapicorn::ApplicationIface</class>
    <class kind="class">Rapicorn::IdlTestWidgetIface</class>
    <class kind="class">Rapicorn::TestBoxIface</class>
    <class kind="class">Rapicorn::TestContainerIface</class>
    <class kind="class">Rapicorn::Sinfex</class>
    <class kind="class">Rapicorn::WidgetGroup</class>
    <class kind="class">Rapicorn::SizeGroup</class>
    <class kind="class">Rapicorn::SliderAreaImpl</class>
    <class kind="class">Rapicorn::SliderTroughImpl</class>
    <class kind="class">Rapicorn::SliderSkidImpl</class>
    <class kind="class">Rapicorn::Stock</class>
    <class kind="class">Rapicorn::TableLayoutImpl</class>
    <class kind="class">Rapicorn::TableImpl</class>
    <class kind="class">Rapicorn::TestContainerImpl</class>
    <class kind="class">Rapicorn::TestBoxImpl</class>
    <class kind="class">Rapicorn::IdlTestWidgetImpl</class>
    <class kind="struct">Rapicorn::ParagraphState</class>
    <class kind="struct">Rapicorn::TextAttrState</class>
    <class kind="class">Rapicorn::TextBlock</class>
    <class kind="class">Rapicorn::TextControllerImpl</class>
    <class kind="class">Rapicorn::LabelImpl</class>
    <class kind="class">Rapicorn::TextEditorImpl</class>
    <class kind="struct">Rapicorn::Exception</class>
    <class kind="struct">Rapicorn::NullPointer</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom</class>
    <class kind="struct">Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</class>
    <class kind="class">Rapicorn::CheckDerivedFrom</class>
    <class kind="struct">Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</class>
    <class kind="struct">Rapicorn::Dereference</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; Type *const  &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type * &gt;</class>
    <class kind="struct">Rapicorn::Dereference&lt; const Type *const  &gt;</class>
    <class kind="class">Rapicorn::PointerIterator</class>
    <class kind="struct">Rapicorn::ValueIterator</class>
    <class kind="class">Rapicorn::IteratorRange</class>
    <class kind="class">Rapicorn::ValueIteratorRange</class>
    <class kind="class">Rapicorn::Walker</class>
    <class kind="class">Rapicorn::ViewportImpl</class>
    <class kind="class">Rapicorn::EventHandler</class>
    <class kind="class">Rapicorn::WidgetImpl</class>
    <class kind="struct">Rapicorn::WidgetIfaceVector</class>
    <class kind="class">Rapicorn::WindowImpl</class>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16d6f020959fce8f26846704ebc1202f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08c53dfdeea218dc880288740a6628ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae0f57cae2524e94411aa67d5296f06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4cd21db9a6b3e2fac590ad05f34b8da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>int8</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a34a2d08cdd3d8d2674be16cec3212eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa64695863923d53a505cf781a783785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a84936f297319d5502963a9df1ccf6006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a62578e481b74c480f0224ff138c8cc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>unichar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0e07f478607e6ab6d8bcb2c95ab91be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82eae5a113474d2f8400917889bbef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector&lt; String &gt;</type>
      <name>StringVector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab17672389c3d548faea6426546704d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Binding &gt;</type>
      <name>BindingP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09a977ed7a38c852760c8e17203c58e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectHandle</type>
      <name>ObjectH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9973a3198e1a9a7f0c55289303b13b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BindableRelayHandle</type>
      <name>BindableRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a433c7da7cbae75e0fdf0e377a28cc7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelHandle</type>
      <name>ListModelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a55e28f9bcee38f22184865d1368e111a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ListModelRelayHandle</type>
      <name>ListModelRelayH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec24986b760009950390f9b97d91715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetHandle</type>
      <name>WidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a06fccaa7d6ebf06b4a39abd8e2d1b339</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ContainerHandle</type>
      <name>ContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a287dd4b731f6d3aa271e1970f69b34a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowHandle</type>
      <name>WindowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab63697b1c07367fa51d014d60ef04f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrangementHandle</type>
      <name>ArrangementH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a50cdacb0a3701df1957d68173f9c7400</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AlignmentHandle</type>
      <name>AlignmentH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a278890ddaca12ec45c9e81442a75c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FrameHandle</type>
      <name>FrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a99f3cd6718836aceab4b694265903a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FocusFrameHandle</type>
      <name>FocusFrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a7b2e1a6d6aeabb745500c0ceac96bc58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AmbienceHandle</type>
      <name>AmbienceH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af8605c87049c6302f99646ede85d442b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TableHandle</type>
      <name>TableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6cebc145f11e56702909dba2080010dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HBoxHandle</type>
      <name>HBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91e2f78f9c87dc0d6d9edccdef3da542</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VBoxHandle</type>
      <name>VBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afffddb6814efa84482d19bdcc332f1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ButtonAreaHandle</type>
      <name>ButtonAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f7da593dcca3fab645f020842e66807</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScrollAreaHandle</type>
      <name>ScrollAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a067500e0d66d33c3b3279743956b11f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderAreaHandle</type>
      <name>SliderAreaH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5a0743685c293c516753980f2875121b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderTroughHandle</type>
      <name>SliderTroughH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af33be8f91adf11c097dc9f597eb4862a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SliderSkidHandle</type>
      <name>SliderSkidH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a37e39ee6b1a0a978046550c1951bfaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrowHandle</type>
      <name>ArrowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9ae0c9cebc70c37f6331c20426fb200d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DotGridHandle</type>
      <name>DotGridH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5ccf399fd8be6de356cc9019f595f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DrawableHandle</type>
      <name>DrawableH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a30c01e1c22bc5896307e0e32a4e33dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageHandle</type>
      <name>ImageH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a05a0ff2b96f96dfd3728a32945355aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImageFrameHandle</type>
      <name>ImageFrameH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6342da63cc358cfe368ee7290555806a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LabelHandle</type>
      <name>LabelH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a409187069763850fafbc3bf1e5561e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextEditorHandle</type>
      <name>TextEditorH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aabfc2435e504264dfbedcd64e643fdac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListRowHandle</type>
      <name>WidgetListRowH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a58ffa795091f7aa732796b08d67911aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WidgetListHandle</type>
      <name>WidgetListH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae74a432b5ddb0fda0774bc5c4b521998</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ApplicationHandle</type>
      <name>ApplicationH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4dd2568fd18e4faf62cf93611507b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IdlTestWidgetHandle</type>
      <name>IdlTestWidgetH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2dbfae52135a8b319ecdaca5520bda54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TestBoxHandle</type>
      <name>TestBoxH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6605c9bfbcbb214f2dae3ebe7f55823f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TestContainerHandle</type>
      <name>TestContainerH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>affe210941d960903cd911405849c1b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PixmapT&lt; Pixbuf &gt;</type>
      <name>Pixmap</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3a7199c4794a9f5eaeade56d2868e3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyValue</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4abf7b70dafbd70302dac00dfd159158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTENT_SOURCE_SELECTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136a3cd23c256e55296fbf080a3336af0d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTENT_SOURCE_CLIPBOARD</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a46b66324ae1676b084e0276819d20136a01a8568203bb5f21f8bdf0f7fd35ab36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AdjustmentSourceType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad727c4f727d48a6046d74879d6c8317f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AlignType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a01cb38d55e327d3de4fc9c1c87c93d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3380d4b28813af812be0fad677ad144f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClickType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a3c9119421605845db84cd3e0aadd613a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a21d6ae4fc230404f3321a704f4c8bd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorSchemeType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_INHERIT</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0ab306dc84dd28d8e5dd227047b9d1aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a56efebe0abbfa3acd603d41f097d5e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_SELECTED</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a6ade49e7d85c7a38875a0dbd2f35b957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_BASE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9d7a86ed24f671d67d844a2cfbf78ba0a39d3045eb3e9cc6651035ba57ebfdd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a24338f17abbf59dd63ff951c63528565</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a71e11f0369e06caaed8eaf7443a074d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2a05c1d3a1236815eeca81178b4a7c278c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af44e23935716403dd8f7d17bd6db04b2acdae37ef75521fa3164283ba9f8cbc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_NORMAL</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313aae1cdf512674ac850acd01716f527c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DESKTOP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ab85a4ac2e6867b3973ce5748e41083ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a160f71ec57382f49889f4106323b4543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_TOOLBAR</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac715e8144f08a022603fa0d16d53d503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a98040ffd508e641a4cd2c73caf4b11b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_UTILITY</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a132fc98733fd067d1800d82a7ed17468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_SPLASH</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a2ef3915a453aa058fa09ce57102d94aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DIALOG</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a37e3f2e40751f040b740853c588e6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DROPDOWN_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a3ff88a2ec6aacbb04f070fd7d2be24e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_POPUP_MENU</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ac876877e1c727de6af4a8fa27c4d5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_TOOLTIP</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313ad43b309a4e802a5a51a6763870476c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_NOTIFICATION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a129181f417bc812e68d1ec9fdb5d28be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_COMBO</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a534e02e7d3158ffb46c6a8f2bf6d5e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WINDOW_TYPE_DND</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af18fc4a0d21e30e9d3b345277751d313a41eb840a06ca1fb3bf6a04b79b8e00e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UpdateKind</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_READ</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba762d8bd681cc31a667ea7112371e90e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_CHANGE</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba8ad4ba23954e96f0ae67e7ac10cca0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_INSERTION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba409fccbf750c75a26f320b28a1e47305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPDATE_DELETION</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa5ba876f6964e9b9589a3c66c1cf7faba04e84ed6100e8ef1b10d53463275606f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TestEnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaa6a401aadd806812cea0075b17fd0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextMode</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a47fba08c10564bf6dec85bef87795e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindable_accessor_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1e99f4bc1e52c506004fa61ed351176a</anchor>
      <arglist>(const BindableIface &amp;paccessible, const String &amp;bpath, Any &amp;any, Source &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindable_accessor_set</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abc365d982ccb841b7788df9c03318ba8</anchor>
      <arglist>(const BindableIface &amp;paccessible, const String &amp;bpath, const Any &amp;any, Source &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_flipper_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa86dd177a188551ebe65d00b90ccdb86</anchor>
      <arglist>(const char *env_var, const char *key, bool with_all_toggle, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>envkey_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2e9c872f514527edf522224befd6df6d</anchor>
      <arglist>(const char *env_var, const char *key, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>envkey_debug_message</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a016e50bfd4b06198208803a3218713b4</anchor>
      <arglist>(const char *env_var, const char *key, const char *file, const int line, const String &amp;message, volatile bool *cachep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_envvar</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab4b2601d10a4a9109d6c907e60df0d69</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_add</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af17f742e6889a962d6c20b16841e4d31</anchor>
      <arglist>(const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_config_del</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aec22b35108beef1271a9829c8609b294</anchor>
      <arglist>(const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>debug_config_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab9a21d4e8e101c9b41f0db315fdca5ce</anchor>
      <arglist>(const String &amp;key, const String &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_config_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a489b730cdfa517e8c2ceff633750220d</anchor>
      <arglist>(const String &amp;key, bool default_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debug_devel_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ada7681a12663d8950ea33cf29d82d57a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rapicorn_debug</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3de5099dad51e0483ca98cf8e22098</anchor>
      <arglist>(const char *key, const char *file, const int line, const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rapicorn_debug_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16860f3bfe3924c44d8d6768b966a1e5</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printout</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab36936872d41aba9c3bec612eb2dbe9f</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printerr</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a96e94edd3515f60a397c3709640afff9</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_notice</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a490c936bd3936e5423bf3968b280f812</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>user_warning</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f3a176807433f32344b1c29e0a9adf4</anchor>
      <arglist>(const UserSource &amp;source, const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a931b0686e62c1fc572b51318d9d76960</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arg_parse_string_option</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4070966821dbf5bce86791b05ff7bbf0</anchor>
      <arglist>(uint argc, char **argv, size_t *i, const char *arg, const char **strp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arg_parse_collapse</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26e99a12175bb322145f72352f9cbd0d</anchor>
      <arglist>(int *argcp, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_file</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a91ca854a47f5191e9f126c3c47deda47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_alias</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa1813f40e9082a47a85d2fdbed6faeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_ident</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94a8f71ecda6cfa0f9d95a816cb19571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>program_cwd</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77613e0faf04099fc9ce91b97669f543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_nonce</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af9d4b16a2b49614d03ae648914077bcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_int64</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5e32c1bbca59915d5c76a76db8f32c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>random_irange</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09bcd30b4af19fa5439b70d207b6f864</anchor>
      <arglist>(int64_t begin, int64_t end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8a9a58440e7309fa77f5fae28b6e3103</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_frange</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5fb911903cbdc7c655837ac73d1b011c</anchor>
      <arglist>(double begin, double end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_core_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9928167f88b4f9999d00197327a333a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2c7198d1bba741180fc8c1c154f4db67</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>aligned_alloc</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa3d647c99f6a41d4a49dda7d5bb06871</anchor>
      <arglist>(size_t total_size, size_t alignment, uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aligned_free</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c5d47aff557524b20e03c76d2923368</anchor>
      <arglist>(uint8 **free_pointer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fmsb</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a238705dee2a406d99d2c1c903c09dcd0</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cxx_demangle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab52ba59e766c8728a6495bc9798ba28a</anchor>
      <arglist>(const char *mangled_identifier)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cpu_info</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aaeb28fbf3215b08168025fadb0cb74e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_224_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6b9e84f50b312f83e30430db2d326f</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[28])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_256_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5c47b83473b31d28051ebeff0d260ee1</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[32])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_384_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab60240ae3655040b941e73835acc7baa</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[48])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha3_512_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af78e26132e889ac42804df43c8bdb996</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t hashvalue[64])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shake128_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a825474e9fc16358d66ff83f8f7ad040e</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t *hashvalues, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shake256_hash</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afdabb497997ae6138e4f6e11c29b1f59</anchor>
      <arglist>(const void *data, size_t data_length, uint8_t *hashvalues, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_multiply</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a186e9ac6634c2be77152a465336f767a</anchor>
      <arglist>(const String &amp;s, uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_canonify</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a75cee7a94e49e3678b35134d00c7f898</anchor>
      <arglist>(const String &amp;string, const String &amp;valid_chars, const String &amp;substitute)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_a2z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae003b5e0377a41b24109d3fe63bf6243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_A2Z</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a16b08c4a178ce731abf12f4d7983661c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_set_ascii_alnum</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5ed54bc7aa14d537873ff30d7d75d2de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_tolower</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa0e80960940efceef8ec52778ef72c55</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_toupper</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a86354c7902a6afbafb75597b25f84738</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_totitle</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae5e1578da91aca5928c8cff7ee83b873</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a77d1b603d207742ce001c85ec5a240a4</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_vprintf</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a5cfef18e6ee55a693d7e82cb010effca</anchor>
      <arglist>(const char *format, va_list vargs)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a2f012815cf0a15b9ce32ce52decbc809</anchor>
      <arglist>(const String &amp;string, const String &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>string_split_any</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8a5e12dcc14713d5479e6748621cc20</anchor>
      <arglist>(const String &amp;string, const String &amp;splitchars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_erase_empty</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a0fa9ae1aa2c0bc52d88c7e01c17cb4f9</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af682b9c5041a7dfb5da2243760d88dd7</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1506ea8e44995e7b17d221a5735bb370</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_vector_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afd90b1c590f732d40c3207710e2aeb6e</anchor>
      <arglist>(StringVector &amp;svector)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_join</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afe062e2b14ba277feff47bd5312db242</anchor>
      <arglist>(const String &amp;junctor, const StringVector &amp;strvec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_to_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a12e852c1f51ccdef22b0d8298054881a</anchor>
      <arglist>(const String &amp;string, bool fallback)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_bool</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac17484b7e899090db75a70c51695f33d</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>string_to_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad85455a62ddae50689ac3605b7c9b34a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_uint</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8fd8489d13343bc19a359a0ce032e624</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_has_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a82e98eaff382b3afbcd9a1c1ee2b6f82</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>string_to_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a523fcfbe297b1084cd9d0cf0ab73a55a</anchor>
      <arglist>(const String &amp;string, uint base)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_int</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a41e7a6037022e9bf9c22fca4e47fe4a5</anchor>
      <arglist>(int64 value)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>posix_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61e0122a3069ba22a830af964c22b118</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>long double</type>
      <name>current_locale_strtold</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a26adc180c8b1288a1eea0c0bf41508a8</anchor>
      <arglist>(const char *nptr, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a855a2730c71981afd9248073a1487f8b</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>string_to_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>afcd374c6928481d798baaabbcb8a49dd</anchor>
      <arglist>(const char *dblstring, const char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_float</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfc6be3d5d1483475edc46f9db95b9a5</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a94d94e40016953a45f241099becd2d9f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; double &gt;</type>
      <name>string_to_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4b584badecf6ad4e187b0a9ebd9a0e66</anchor>
      <arglist>(const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_double_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6bc7f3471ccb82b16dd66cc2a4244552</anchor>
      <arglist>(const vector&lt; double &gt; &amp;dvec, const String &amp;delim)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_errno</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac2d70acf529c14500eddcc2f0dee655f</anchor>
      <arglist>(int errno_val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_is_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae3eef88f3144118ed8f39ffc440764b6</anchor>
      <arglist>(const String &amp;uuid_string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>string_cmp_uuid</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a1f6b25d462eaeece3ecf0dac5de08cb9</anchor>
      <arglist>(const String &amp;uuid_string1, const String &amp;uuid_string2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_startswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abe6f9b700c92add1fe94fff83b8cd4ae</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_endswith</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a68fcf11adb4255e92cd5d611b5b31318</anchor>
      <arglist>(const String &amp;string, const String &amp;fragment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier_tail</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a09dca5a31152ae6137b9c1ba7298b196</anchor>
      <arglist>(const String &amp;ident, const String &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_match_identifier</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a98ce101af4fcf48e9e35a049589880a5</anchor>
      <arglist>(const String &amp;ident1, const String &amp;ident2)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_pretty_function_name</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>abfda5d69d7e8692562dfaa66c7778791</anchor>
      <arglist>(const char *gnuc_pretty_function)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cescape</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a8299326b493de662098921b7a180bd17</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_to_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a795a0a454b6dde0f435fc4dcf3a7d38e</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_from_cquote</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a36a0241f3983e64505081a124e5c5cad</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_lstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a632d5948ccac14b9d4ff2e089c7d6880</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_rstrip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a45d7d1d37bd26585b163dc50b31cc303</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_strip</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6d8dde3a7e91d895fb223e9505818eff</anchor>
      <arglist>(const String &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_substitute_char</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a458f21b1370a4f30527e7c6dfd734ce2</anchor>
      <arglist>(const String &amp;input, const char match, const char subst)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_hexdump</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ab1b6b7ec8d95f0e77df0e75e89d9355d</anchor>
      <arglist>(const void *addr, size_t length, size_t initial_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>memset4</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a530022bcd34f01295dabf360c750b85f</anchor>
      <arglist>(uint32 *mem, uint32 filler, uint length)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_vector_find_value</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>acd0def0a45edda7060bc678c48104d71</anchor>
      <arglist>(const StringVector &amp;svector, const String &amp;key, const String &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>cstrings_to_vector</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ad3503997cf1fd0687031dfb891843803</anchor>
      <arglist>(const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_options_split</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a231c3452e3bdf5db9bb2a2afe0a4dcaa</anchor>
      <arglist>(const String &amp;option_string, vector&lt; String &gt; &amp;option_names, vector&lt; String &gt; &amp;option_values, const String &amp;empty_default)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_option_get</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a08cbc395fb2a3bcba8fa265204090b5e</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>string_option_check</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a54b8159b50dc3f3a90ebde519b1f0712</anchor>
      <arglist>(const String &amp;option_string, const String &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>text_convert</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aab7ab68dd73485ab7e44f68bcb506bf8</anchor>
      <arglist>(const String &amp;to_charset, String &amp;output_string, const String &amp;from_charset, const String &amp;input_string, const String &amp;fallback_charset, const String &amp;output_mark)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a877751570b565ebe8768df63169e5e15</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string_locale_format</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aef23cfd69b1962d42eda9838006cdd0d</anchor>
      <arglist>(const char *format, const Args &amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_core_test</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a449637d24c531aa019bee5c206b07d77</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>utf8_is_locale_charset</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a6229b69399b2bbadab68a6fd7ef8286d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_startup</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ae8ed4bec3134b69126b686ae3ac661de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_realtime</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>ac500700b3a37937ab1a47e9ca54b800c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_resolution</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a4f22e8bd6f8b84e06e57b51fcd7f8ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>timestamp_benchmark</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aa8e6aefca1841bb6009772970c45fe96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8 *</type>
      <name>zintern_decompress</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a64260cc6cb05aba6be0f0953cc6ce59a</anchor>
      <arglist>(unsigned int decompressed_size, const unsigned char *cdata, unsigned int cdata_size)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>vector_from_array</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a04f376c05ae1e6dc267b05ff9effa3dc</anchor>
      <arglist>(const T(&amp;array_entries)[S])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_app_initialized</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af70355a4ca32a082340b8eba3406b2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af0825c1f4488f7728049256c2b107644</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationHandle</type>
      <name>init_test_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a670ab204db4a2bde3920bf957958e806</anchor>
      <arglist>(const String &amp;app_ident, int *argcp, char **argv, const StringVector &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit_app</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9f7570597dcc101076b2f20a68bcc5ec</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a9623d12dc75e47ac345af79e3f972b57</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>af7ae41884314a0c90c23f030c6003d5a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>aad051ec6d380e65237d2944a4f47032a</anchor>
      <arglist>(const Region &amp;r1, const Region &amp;r2)</arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::RECURSIVE_LOCK</type>
      <name>RECURSIVE_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a61669cb28487b4c08cb2ce043edd6ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::AUTOMATIC_LOCK</type>
      <name>AUTOMATIC_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a22171f89df45aef5fd1c7fac16e7e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Rapicorn::BALANCED_LOCK</type>
      <name>BALANCED_LOCK</name>
      <anchorfile>namespaceRapicorn.html</anchorfile>
      <anchor>a975d39087ad1d063261fb5a9a2e91ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BindableIface</name>
    <filename>structRapicorn_1_1BindableIface.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>bindable_match</name>
      <anchorfile>structRapicorn_1_1BindableIface.html</anchorfile>
      <anchor>ab3e90e540bff539c4d8284525b9d354c</anchor>
      <arglist>(const String &amp;bpath, const String &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bindable_set</name>
      <anchorfile>structRapicorn_1_1BindableIface.html</anchorfile>
      <anchor>ad715f7b109d2d21b5350884e23339212</anchor>
      <arglist>(const String &amp;bpath, const Any &amp;any)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bindable_get</name>
      <anchorfile>structRapicorn_1_1BindableIface.html</anchorfile>
      <anchor>af8f723aca57a204c87fc548fa48a27ef</anchor>
      <arglist>(const String &amp;bpath, Any &amp;any)=0</arglist>
    </member>
    <member kind="function">
      <type>BindableNotifySignal::Connector</type>
      <name>sig_bindable_notify</name>
      <anchorfile>structRapicorn_1_1BindableIface.html</anchorfile>
      <anchor>a27ce24028e260dd77c8d3e9dfebcde68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindable_notify</name>
      <anchorfile>structRapicorn_1_1BindableIface.html</anchorfile>
      <anchor>ad00d4b4989b98bc6f95d5ed1d8d35f0c</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableAdaptorBase</name>
    <filename>classRapicorn_1_1BindableAdaptorBase.html</filename>
    <base virtualness="virtual">Rapicorn::BindableIface</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableAdaptor</name>
    <filename>classRapicorn_1_1BindableAdaptor.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableAdaptor&lt; std::shared_ptr&lt; Source &gt; &gt;</name>
    <filename>classRapicorn_1_1BindableAdaptor_3_01std_1_1shared__ptr_3_01Source_01_4_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Rapicorn::BindableAdaptorBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>bindable_set</name>
      <anchorfile>classRapicorn_1_1BindableAdaptor_3_01std_1_1shared__ptr_3_01Source_01_4_01_4.html</anchorfile>
      <anchor>a8eb75b91c68409d9e0060e31f7bf4945</anchor>
      <arglist>(const String &amp;bpath, const Any &amp;any)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>bindable_get</name>
      <anchorfile>classRapicorn_1_1BindableAdaptor_3_01std_1_1shared__ptr_3_01Source_01_4_01_4.html</anchorfile>
      <anchor>a77f2343621636b615929a15cbe83eba1</anchor>
      <arglist>(const String &amp;bpath, Any &amp;any)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableAdaptor&lt; std::weak_ptr&lt; Source &gt; &gt;</name>
    <filename>classRapicorn_1_1BindableAdaptor_3_01std_1_1weak__ptr_3_01Source_01_4_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Rapicorn::BindableAdaptorBase</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>bindable_set</name>
      <anchorfile>classRapicorn_1_1BindableAdaptor_3_01std_1_1weak__ptr_3_01Source_01_4_01_4.html</anchorfile>
      <anchor>a65775f36f59a5962939982c4b317340f</anchor>
      <arglist>(const String &amp;bpath, const Any &amp;any)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>bindable_get</name>
      <anchorfile>classRapicorn_1_1BindableAdaptor_3_01std_1_1weak__ptr_3_01Source_01_4_01_4.html</anchorfile>
      <anchor>a7f012f4bb1272b8f3824ddb1b15bd713</anchor>
      <arglist>(const String &amp;bpath, Any &amp;any)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BinadableAccessor</name>
    <filename>classRapicorn_1_1BinadableAccessor.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Blob</name>
    <filename>classRapicorn_1_1Blob.html</filename>
    <member kind="function">
      <type></type>
      <name>Blob</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>ae9b92558c0e13e4d0992c4fac47358dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>ad2a7816e649c41a13a705446f6b7fec4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a4c2b29be6b845ef9da2cc0d03aaa37b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a803562609b7c55b37933032183538add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8 *</type>
      <name>bytes</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a9136d6ebfaaea698764149836992d79e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a9efd0315f4b96cf38d6942de9257bfff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator _UBool</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a56c2077abfdcaadfdd4f9a9cc3e1ac26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>load</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>af0813cff60fa7d001075e3512f0238cc</anchor>
      <arglist>(const String &amp;res_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>from</name>
      <anchorfile>classRapicorn_1_1Blob.html</anchorfile>
      <anchor>a529643da6fed5c167ac045a502620b56</anchor>
      <arglist>(const String &amp;blob_string)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Init</name>
    <filename>structRapicorn_1_1Init.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::FriendAllocator</name>
    <filename>structRapicorn_1_1FriendAllocator.html</filename>
    <templarg></templarg>
    <base>std::allocator</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>construct</name>
      <anchorfile>structRapicorn_1_1FriendAllocator.html</anchorfile>
      <anchor>a1e90642309763cd89e2a142faafb8492</anchor>
      <arglist>(C *p, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy</name>
      <anchorfile>structRapicorn_1_1FriendAllocator.html</anchorfile>
      <anchor>a6e5d655af5b35990ecda6b4b3d1c83e0</anchor>
      <arglist>(C *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; T &gt;</type>
      <name>make_shared</name>
      <anchorfile>structRapicorn_1_1FriendAllocator.html</anchorfile>
      <anchor>a15a6cb6a788cbff799bc51fb2517b9f2</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IsComparable</name>
    <filename>classRapicorn_1_1IsComparable.html</filename>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static constexpr const bool</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1IsComparable.html</anchorfile>
      <anchor>a0bef11f8ba39e062b0356ab14e5ab71c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IsSharedPtr</name>
    <filename>structRapicorn_1_1IsSharedPtr.html</filename>
    <templarg></templarg>
    <base>std::false_type</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IsSharedPtr&lt; std::shared_ptr&lt; T &gt; &gt;</name>
    <filename>structRapicorn_1_1IsSharedPtr_3_01std_1_1shared__ptr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>std::true_type</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IsWeakPtr</name>
    <filename>structRapicorn_1_1IsWeakPtr.html</filename>
    <templarg></templarg>
    <base>std::false_type</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IsWeakPtr&lt; std::weak_ptr&lt; T &gt; &gt;</name>
    <filename>structRapicorn_1_1IsWeakPtr_3_01std_1_1weak__ptr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>std::true_type</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestStream</name>
    <filename>classRapicorn_1_1TestStream.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IniFile</name>
    <filename>classRapicorn_1_1IniFile.html</filename>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ac8eaa094ed89189aede5d28839e336cf</anchor>
      <arglist>(const String &amp;res_ini)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad790150015291321a1a039b50409243c</anchor>
      <arglist>(Blob blob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IniFile</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>afcf4527aafa0a28c453f71f3fb701030</anchor>
      <arglist>(const IniFile &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>IniFile &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad105f3fc00e59565af128b30f6e5cd9c</anchor>
      <arglist>(const IniFile &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_sections</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a7ee1e53b15c0100570970b137c6406f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>sections</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>aa1341a3ec637ee5aebec14ee50b1cc60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_section</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ad9bed565e83cc78477df244d5067b065</anchor>
      <arglist>(const String &amp;section) const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>attributes</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a69dd1cfca3154b3cf8d220f0b3d2f582</anchor>
      <arglist>(const String &amp;section) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_attribute</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>ab30a4f9abb9a9ff3f757cf4a0c043699</anchor>
      <arglist>(const String &amp;section, const String &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>raw_value</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a878aae42e3b8bbad00870b755afd6812</anchor>
      <arglist>(const String &amp;dotpath) const </arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>raw_values</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a0ce6cba0325dbd43e3770d39451a9f35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>value_as_string</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>a1b7b07e10c502ea5a6e3337c656c2b48</anchor>
      <arglist>(const String &amp;dotpath) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>cook_string</name>
      <anchorfile>classRapicorn_1_1IniFile.html</anchorfile>
      <anchor>af3e24d98e2b6c4056f4a696ac87b3e16</anchor>
      <arglist>(const String &amp;input_string)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UserSource</name>
    <filename>structRapicorn_1_1UserSource.html</filename>
    <member kind="function">
      <type></type>
      <name>UserSource</name>
      <anchorfile>structRapicorn_1_1UserSource.html</anchorfile>
      <anchor>a3b38a155904571aa93f355356b20dbe7</anchor>
      <arglist>(const String &amp;module, const String &amp;filename=&quot;&quot;, int line=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::PollFD</name>
    <filename>structRapicorn_1_1PollFD.html</filename>
    <member kind="enumvalue">
      <type>@</type>
      <name>IN</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da1318477f58f61bbe2e867590c8993bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PRI</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31dadf8ef60f85c2c893a04c6201cfb1051e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>OUT</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da6dcc498d67b390cb435fa29d78b5bdd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RDNORM</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31dab06df20061f93d2c4b2276011d1d22b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RDBAND</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da30ff5c210b65313adc473367ed42968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WRNORM</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31dad7ad846c1ff4a2497153c97eb505d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WRBAND</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da3d737d6ef866e02209c1bc6193bf6c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ERR</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da1f0ade8e00e52e3382a3756c3c5df6b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HUP</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31da0761cb574302506046375fa3a4eb0b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NVAL</name>
      <anchorfile>structRapicorn_1_1PollFD.html</anchorfile>
      <anchor>ae57a6c11fdd3bad59f8fb664a947c31daf16e08af4fac48d5c0fb5d404fef3431</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop</name>
    <filename>classRapicorn_1_1EventLoop.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <class kind="class">Rapicorn::EventLoop::DispatcherSource</class>
    <class kind="class">Rapicorn::EventLoop::PollFDSource</class>
    <class kind="class">Rapicorn::EventLoop::Source</class>
    <class kind="struct">Rapicorn::EventLoop::State</class>
    <class kind="class">Rapicorn::EventLoop::TimedSource</class>
    <member kind="function">
      <type>void</type>
      <name>wakeup</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa36d5afeb60fec404de6279b0cd1875f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac19d1b2741611098523255699dfb25bd</anchor>
      <arglist>(Source *loop_source, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a090b5b6383fe686a08cb5f9f37620f03</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_remove</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>abefef779e1fce3b6276a902009fe8b80</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>kill_sources</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a17d091ebadc6c640a82caa8123a0737e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_primary</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a846b4a1d051482627333c2789a82b42c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_now</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a5544bf6762e118b4e2a276966c14addd</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_next</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>aa34718a26237fe905dfb7ac520f1c91e</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_notify</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a9ffe9146569fa066d1ff78e28d4ce37f</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_normal</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a159d0e9540731e116a7ea36290be36d7</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_update</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a615166e9c25b6916841b75ef3a4cca97</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_background</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a670f0d43d4bf11503f8fad44fea5542e</anchor>
      <arglist>(BoolVoidFunctor &amp;&amp;bvf)</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>main_loop</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a3853f8ecc99e39e1c4a0fc2077984a6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_dispatcher</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a4b91f23226599e222efe4cdfe1a648f6</anchor>
      <arglist>(const DispatcherSlot &amp;sl, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_timer</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a28e2392b1aa5329c9a1c1898a669eb96</anchor>
      <arglist>(uint timeout_ms, BoolVoidFunctor &amp;&amp;bvf, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_timer</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a2786a218a2d7d470698ac09e582ccaf8</anchor>
      <arglist>(uint initial_timeout_ms, uint repeat_timeout_ms, BoolVoidFunctor &amp;&amp;bvf, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>exec_io_handler</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a61bd2a5723aced226c81e25dfa42b8ff</anchor>
      <arglist>(BoolVoidPollFunctor &amp;&amp;bvf, int fd, const String &amp;mode, int priority=PRIORITY_NORMAL)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NOW</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac31f361be5f3b5f6c01b633723910646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_HIGH</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ab31f19cd0d658a367f4e879a33e2adaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NEXT</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a37b784d17f6b2f3170df54dac72f7b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NOTIFY</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>ac3b8a999e7c4efd72885e6873d039714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_NORMAL</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a42a4a78bc43b832dbff30b7a1b86586d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_UPDATE</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a04142723cc0914aaa66e978ec4fbdc1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_IDLE</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a1f9e0f846335faf48d9bf2d19c616ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_BACKGROUND</name>
      <anchorfile>classRapicorn_1_1EventLoop.html</anchorfile>
      <anchor>a1a043f7ab9b4d184040c355ef430fdc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invoke_deletion_hooks</name>
      <anchorfile>structRapicorn_1_1Deletable.html</anchorfile>
      <anchor>a36d10e29d893e3ce12202232b433e863</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::DispatcherSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function">
      <type>bool</type>
      <name>recursion</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>abf9caa6d6f96e8b1946049913bb59f6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>may_recurse</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae25a8928728145757eb56f97efde900a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>may_recurse</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>abe885a23833f14b4951c67f81c2416ae</anchor>
      <arglist>(bool may_recurse)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>primary</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>aeb90e5f51ec7c492286c612b2e8ff211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>primary</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ac733f968213c716cc1d621c6457f3a38</anchor>
      <arglist>(bool is_primary)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_poll</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae21550c6b2bde1a03fd6645c3e404a00</anchor>
      <arglist>(PollFD *const pfd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_poll</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ac1f258a592213a10e20b380914f43369</anchor>
      <arglist>(PollFD *const pfd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loop_remove</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a0bc9b67e2c5f1a092db5f903788e3891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MainLoop *</type>
      <name>main_loop</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>ae37be988186836220bcb1d348895f4ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a0c207bf450e05eea3141cb5ce5ef8c54</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a50164f9167663f092760875ff5e510dd</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1DispatcherSource.html</anchorfile>
      <anchor>a3d5e8c80d88110974648264bf2f4950f</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::PollFDSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1PollFDSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a2025f7da2a65289e0d947feb5be95c7b</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a2951662ea849924d163512dc2cb47f58</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1PollFDSource.html</anchorfile>
      <anchor>a1990bad59052e73997156d6312b5a79d</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::Source</name>
    <filename>classRapicorn_1_1EventLoop_1_1Source.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a58c3c97aabf325330b0f6904b67ed28e</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a0aad63c8fb82d7a7ca5026ea05481ec8</anchor>
      <arglist>(const State &amp;state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1Source.html</anchorfile>
      <anchor>a59cdecd0c185bb65358f56c0bec32119</anchor>
      <arglist>(const State &amp;state)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventLoop::State</name>
    <filename>structRapicorn_1_1EventLoop_1_1State.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>seen_primary</name>
      <anchorfile>structRapicorn_1_1EventLoop_1_1State.html</anchorfile>
      <anchor>aed8b70d4361f1ee037e2f7264556f27f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventLoop::TimedSource</name>
    <filename>classRapicorn_1_1EventLoop_1_1TimedSource.html</filename>
    <base virtualness="virtual">Rapicorn::EventLoop::Source</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>acc1561ad84e38980df797a574073c012</anchor>
      <arglist>(const State &amp;state, int64 *timeout_usecs_p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>a9a2ef0d7f9bc2b4712b4d8115b655a78</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1EventLoop_1_1TimedSource.html</anchorfile>
      <anchor>ae58c4c8a05e978c1071fa60beda3db47</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MainLoop</name>
    <filename>classRapicorn_1_1MainLoop.html</filename>
    <base>Rapicorn::EventLoop</base>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>adcffd14422fd062c194c02dcffa01ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>running</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a9506d6c957f0c0db6971313c6579ce91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a6895802ca9fa926fcef4e9a9131125d4</anchor>
      <arglist>(int quit_code=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a0365a01d7a74b0e601d046b72970b24a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iterate</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>afdf7308e02928344c873d01cdc5041ac</anchor>
      <arglist>(bool block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iterate_pending</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a2120a9b245808c7fe61b10d09e9d5bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>kill_loops</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a683f44e3e2b116db5890f469f3f5a521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventLoop *</type>
      <name>new_slave</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a81bb78f90008876962b2bba3d3e94c35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>mutex</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>a6c8fa4c9d3c767a3846ca56c1d9b370e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MainLoop *</type>
      <name>_new</name>
      <anchorfile>classRapicorn_1_1MainLoop.html</anchorfile>
      <anchor>ab4752a1afe748cefdc65e347312777ce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::InitSettings</name>
    <filename>classRapicorn_1_1InitSettings.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>autonomous</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>ae2d05690d3dec850426dc7b19e4149c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>test_codes</name>
      <anchorfile>classRapicorn_1_1InitSettings.html</anchorfile>
      <anchor>a289fd15415b2e326209d050e75d33cfb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedLocale</name>
    <filename>classRapicorn_1_1ScopedLocale.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedPosixLocale</name>
    <filename>classRapicorn_1_1ScopedPosixLocale.html</filename>
    <base>Rapicorn::ScopedLocale</base>
    <member kind="function" static="yes">
      <type>static locale_t</type>
      <name>posix_locale</name>
      <anchorfile>classRapicorn_1_1ScopedPosixLocale.html</anchorfile>
      <anchor>a4ce96bb2e6511bd839ed2f17ed6c9968</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::InitHook</name>
    <filename>classRapicorn_1_1InitHook.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MarkupParser</name>
    <filename>classRapicorn_1_1MarkupParser.html</filename>
    <class kind="struct">Rapicorn::MarkupParser::Error</class>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>escape_text</name>
      <anchorfile>classRapicorn_1_1MarkupParser.html</anchorfile>
      <anchor>a875b1e3277ea985129f9e3432a183214</anchor>
      <arglist>(const char *text, ssize_t length)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::MarkupParser::Error</name>
    <filename>structRapicorn_1_1MarkupParser_1_1Error.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdAllocator</name>
    <filename>classRapicorn_1_1IdAllocator.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AlignedArray</name>
    <filename>classRapicorn_1_1AlignedArray.html</filename>
    <templarg></templarg>
    <templarg>ALIGNMENT</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VirtualTypeid</name>
    <filename>classRapicorn_1_1VirtualTypeid.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ClassDoctor</name>
    <filename>classRapicorn_1_1ClassDoctor.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Deletable</name>
    <filename>structRapicorn_1_1Deletable.html</filename>
    <base virtualness="virtual">Rapicorn::VirtualTypeid</base>
    <class kind="class">Rapicorn::Deletable::DeletionHook</class>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Deletable::DeletionHook</name>
    <filename>classRapicorn_1_1Deletable_1_1DeletionHook.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>deletable_add_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a355ce94fd56a1301de81db26a61c6cf6</anchor>
      <arglist>(Deletable *deletable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deletable_remove_hook</name>
      <anchorfile>classRapicorn_1_1Deletable_1_1DeletionHook.html</anchorfile>
      <anchor>a68d0e8f7a38f5a922ca43db65f965e8f</anchor>
      <arglist>(Deletable *deletable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataListContainer</name>
    <filename>classRapicorn_1_1DataListContainer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>a03a26a2fba9d8b1aad107dced74ec411</anchor>
      <arglist>(DataKey&lt; Type &gt; *key, Type data)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>ab114dd8578eae982774bf42541e2769d</anchor>
      <arglist>(DataKey&lt; Type &gt; *key) const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>swap_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>ac6b126d3c62a7f5bd896bb8dea9c1710</anchor>
      <arglist>(DataKey&lt; Type &gt; *key, Type data)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>swap_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>af8089489bc093dd3d2d27d121dbaa331</anchor>
      <arglist>(DataKey&lt; Type &gt; *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_data</name>
      <anchorfile>classRapicorn_1_1DataListContainer.html</anchorfile>
      <anchor>a84064cad7ccf13ab56c3e4c5bd2cb4d1</anchor>
      <arglist>(DataKey&lt; Type &gt; *key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ReferenceCountable</name>
    <filename>classRapicorn_1_1ReferenceCountable.html</filename>
    <base virtualness="virtual">Rapicorn::Deletable</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BaseObject</name>
    <filename>classRapicorn_1_1BaseObject.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <base virtualness="virtual">Rapicorn::Aida::ImplicitBase</base>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</class>
    <class kind="struct">Rapicorn::BaseObject::InterfaceMatcher</class>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a8811ceb116dffd01b95587ddce867d4e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Class &gt;</type>
      <name>shared_ptr</name>
      <anchorfile>classRapicorn_1_1BaseObject.html</anchorfile>
      <anchor>a780581988792db9c3ecd2e0d03129f26</anchor>
      <arglist>(Class *object)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ImplicitBase.html</anchorfile>
      <anchor>a60561511be0bab6cbba37f2de37d5e86</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch</name>
    <filename>classRapicorn_1_1BaseObject_1_1InterfaceMatch.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatcher</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch&lt; C &amp; &gt;</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_6_01_4.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatch</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatch&lt; C * &gt;</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatch_3_01C_01_5_01_4.html</filename>
    <templarg></templarg>
    <base>Rapicorn::BaseObject::InterfaceMatch</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BaseObject::InterfaceMatcher</name>
    <filename>structRapicorn_1_1BaseObject_1_1InterfaceMatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::NullInterface</name>
    <filename>classRapicorn_1_1NullInterface.html</filename>
    <base protection="private">std::exception</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::TaskStatus</name>
    <filename>structRapicorn_1_1TaskStatus.html</filename>
    <member kind="function">
      <type></type>
      <name>TaskStatus</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>aa3debf7a8e330e5467284f77b8d24132</anchor>
      <arglist>(int pid, int tid=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a14056b334bfbba2e4e11fc481a85b6ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a2fe4fa1695936670842039a00280c6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>process_id</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a90d0cc07fff356785881c9d3f54fa659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>task_id</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a3f8be00190bebae7b67e80be3ae92cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a4e7c850e4365e21362d3e8a7ea4800aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>State</type>
      <name>state</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a441ecf9fbc5f50912d715d655792934b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>processor</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a852a7ebacde528542bb94d7f3e85452e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>priority</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ad4080947260cba4c91712d067b6b6127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>utime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>ab8a22c68291685cef05bfc7a23e1bb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>stime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a28d6211e6eb370908c868996ddbf3ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>cutime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a7eda37cd7548f91ae5541f472cf16dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>cstime</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>aa212763cf4b959ee134cc23e6a16b37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>ac_stamp</name>
      <anchorfile>structRapicorn_1_1TaskStatus.html</anchorfile>
      <anchor>a6f521ddeeb4ca061e260a5a9a5ade151</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Entropy</name>
    <filename>classRapicorn_1_1Entropy.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_bits</name>
      <anchorfile>classRapicorn_1_1Entropy.html</anchorfile>
      <anchor>a5fe8644b06fc756ce92a8f959f6b7dd6</anchor>
      <arglist>(uint64_t bits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_data</name>
      <anchorfile>classRapicorn_1_1Entropy.html</anchorfile>
      <anchor>ae31bd4bebca21d6fe97743fe18433cec</anchor>
      <arglist>(const void *bytes, size_t n_bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>slow_reseed</name>
      <anchorfile>classRapicorn_1_1Entropy.html</anchorfile>
      <anchor>a85bb43a9d37a8bdab344a6c65c1b0422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>get_seed</name>
      <anchorfile>classRapicorn_1_1Entropy.html</anchorfile>
      <anchor>aa41a78bd39417d0a1b8f0f65c81c3eba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generate</name>
      <anchorfile>classRapicorn_1_1Entropy.html</anchorfile>
      <anchor>abc574adaea10ccda4457caf842df822b</anchor>
      <arglist>(RandomAccessIterator begin, RandomAccessIterator end)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::QuickTimer</name>
    <filename>classRapicorn_1_1QuickTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>QuickTimer</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>a3d1c06fefbd4d1a7e8223cc457370ec3</anchor>
      <arglist>(uint64 usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>aeb92422fab3d356e25c72bd8a79da136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>a09ee24aff9e4ae8bbd89332a1e017c0f</anchor>
      <arglist>(uint64 usecs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expired</name>
      <anchorfile>classRapicorn_1_1QuickTimer.html</anchorfile>
      <anchor>ab31a6a429b01ec628ea9d6bcf1c29f61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHA3_224</name>
    <filename>structRapicorn_1_1SHA3__224.html</filename>
    <member kind="function">
      <type></type>
      <name>SHA3_224</name>
      <anchorfile>structRapicorn_1_1SHA3__224.html</anchorfile>
      <anchor>a8c160de733c7f412135160fcc1921053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHA3__224.html</anchorfile>
      <anchor>ab54b27e0cd80c1ab9cb773e5d0fc762b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHA3__224.html</anchorfile>
      <anchor>a9aa07cb02676fc322d97e9f5da058600</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>digest</name>
      <anchorfile>structRapicorn_1_1SHA3__224.html</anchorfile>
      <anchor>a9fc200ac6a3278520d6e725f3e8a0e40</anchor>
      <arglist>(uint8_t hashvalue[28])</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHA3_256</name>
    <filename>structRapicorn_1_1SHA3__256.html</filename>
    <member kind="function">
      <type></type>
      <name>SHA3_256</name>
      <anchorfile>structRapicorn_1_1SHA3__256.html</anchorfile>
      <anchor>a81d94e1a63cd2ccbbbfc0157ef4177c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHA3__256.html</anchorfile>
      <anchor>aad6ecf1237bdd35c26477c4fb6837c6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHA3__256.html</anchorfile>
      <anchor>af1e60183f87b44c548e4f656527889d6</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>digest</name>
      <anchorfile>structRapicorn_1_1SHA3__256.html</anchorfile>
      <anchor>a7054b67567f7ee18e1a9f023addc218a</anchor>
      <arglist>(uint8_t hashvalue[32])</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHA3_384</name>
    <filename>structRapicorn_1_1SHA3__384.html</filename>
    <member kind="function">
      <type></type>
      <name>SHA3_384</name>
      <anchorfile>structRapicorn_1_1SHA3__384.html</anchorfile>
      <anchor>a40415950f49b97ef85a7948c17127aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHA3__384.html</anchorfile>
      <anchor>af8ec2a3119a66b0a31ed8606ff6251e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHA3__384.html</anchorfile>
      <anchor>a300af3f9cec3c9a3010e054e4472b8d9</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>digest</name>
      <anchorfile>structRapicorn_1_1SHA3__384.html</anchorfile>
      <anchor>a72ff2fd4e1cd4ffd7498ef3c2172c713</anchor>
      <arglist>(uint8_t hashvalue[48])</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHA3_512</name>
    <filename>structRapicorn_1_1SHA3__512.html</filename>
    <member kind="function">
      <type></type>
      <name>SHA3_512</name>
      <anchorfile>structRapicorn_1_1SHA3__512.html</anchorfile>
      <anchor>a2983abeca5943061058ebfc5644c5aa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHA3__512.html</anchorfile>
      <anchor>a01e4581e9e7dfc953b66720484b8fbce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHA3__512.html</anchorfile>
      <anchor>aabfedccaa112b1ebec32ce8d514d8ce9</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>digest</name>
      <anchorfile>structRapicorn_1_1SHA3__512.html</anchorfile>
      <anchor>a94c0305cbbdd18145882cac6b1bb4fc8</anchor>
      <arglist>(uint8_t hashvalue[64])</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHAKE128</name>
    <filename>structRapicorn_1_1SHAKE128.html</filename>
    <member kind="function">
      <type></type>
      <name>SHAKE128</name>
      <anchorfile>structRapicorn_1_1SHAKE128.html</anchorfile>
      <anchor>a136474bc04d282191fadfab1c62b9e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHAKE128.html</anchorfile>
      <anchor>a43c6436c797c3762279fd76b11ff6bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHAKE128.html</anchorfile>
      <anchor>a0ad52a5274eb7a2de41cc3c88b5367a8</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squeeze_digest</name>
      <anchorfile>structRapicorn_1_1SHAKE128.html</anchorfile>
      <anchor>a841e558fc2eeda4fa039fc21c3b890fa</anchor>
      <arglist>(uint8_t *hashvalues, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::SHAKE256</name>
    <filename>structRapicorn_1_1SHAKE256.html</filename>
    <member kind="function">
      <type></type>
      <name>SHAKE256</name>
      <anchorfile>structRapicorn_1_1SHAKE256.html</anchorfile>
      <anchor>ad746a360c6dda3b3f8eb0a4a61a89a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structRapicorn_1_1SHAKE256.html</anchorfile>
      <anchor>a2bce02b6afa5c2c91cc2238e0767698f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structRapicorn_1_1SHAKE256.html</anchorfile>
      <anchor>af56781882d15a5c15d9c9c038388c678</anchor>
      <arglist>(const uint8_t *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squeeze_digest</name>
      <anchorfile>structRapicorn_1_1SHAKE256.html</anchorfile>
      <anchor>ad6718f715991b8ee80cdcad581f5bdc4</anchor>
      <arglist>(uint8_t *hashvalues, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::KeccakPRNG</name>
    <filename>classRapicorn_1_1KeccakPRNG.html</filename>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>result_type</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>aa9451e30b19e906eb5746ef839b75826</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>n_nums</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>af80b59883be3aa5a9ff2cc83dd3cd5f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>bit_capacity</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a3fbc99915f273ef7c2b9fcd588ebf2c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeccakPRNG</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a53dc6d0095e50e42d3e292836f73fcae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeccakPRNG</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a874864678d7565f25091017392f17947</anchor>
      <arglist>(uint64_t seed_value=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeccakPRNG</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a30924346f9e99a5f06ff02a0b29170bb</anchor>
      <arglist>(SeedSeq &amp;seed_sequence)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forget</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>abb5a2150a320d6955e339f9dc4fc727c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discard</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a3bb32793107c5a3bb2718b911d88a6dc</anchor>
      <arglist>(unsigned long long count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xor_seed</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>af95d79785f0274665d17b6cfe359c492</anchor>
      <arglist>(const uint64_t *seeds, size_t n_seeds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seed</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>aeaf7510ae82b8132a0f2b9094c422d8f</anchor>
      <arglist>(uint64_t seed_value=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seed</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a24444f7a8c0e9094311f5d7363d05524</anchor>
      <arglist>(const uint64_t *seeds, size_t n_seeds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seed</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a2cd79e653a2c3ce8f000b84caddf90f1</anchor>
      <arglist>(SeedSeq &amp;seed_sequence)</arglist>
    </member>
    <member kind="function">
      <type>result_type</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a9af35a1dc0f78d22faa9f3d9f0c93509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a8fb6972d1e307072ec8f76e7888eb0fc</anchor>
      <arglist>(RandomAccessIterator begin, RandomAccessIterator end)</arglist>
    </member>
    <member kind="function">
      <type>result_type</type>
      <name>min</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a357c7ffefa7be213016fc59b20103674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>result_type</type>
      <name>max</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>ae0f22841145a21d2a3fbf3c2e14c75bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>abea2f04d3955a45d402fa84b7c1ddfb9</anchor>
      <arglist>(const KeccakPRNG &amp;lhs, const KeccakPRNG &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>aa36cc5554c7df0c35b0886bca2e2ef6c</anchor>
      <arglist>(const KeccakPRNG &amp;lhs, const KeccakPRNG &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>a9996879e08164a7cebe39deaf8702e72</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;os, const KeccakPRNG &amp;self)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::basic_istream&lt; CharT, Traits &gt; &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classRapicorn_1_1KeccakPRNG.html</anchorfile>
      <anchor>ad952042f426f4e6af50f703411e3f141</anchor>
      <arglist>(std::basic_istream&lt; CharT, Traits &gt; &amp;is, KeccakPRNG &amp;self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Strings</name>
    <filename>classRapicorn_1_1Strings.html</filename>
    <base>vector&lt; std::string &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::RECURSIVE_LOCK</name>
    <filename>structRapicorn_1_1RECURSIVE__LOCK.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Mutex</name>
    <filename>classRapicorn_1_1Mutex.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>debug_locked</name>
      <anchorfile>classRapicorn_1_1Mutex.html</anchorfile>
      <anchor>a2fedabe3145d4ad92ab7710503d71a89</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Spinlock</name>
    <filename>classRapicorn_1_1Spinlock.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::RWLock</name>
    <filename>classRapicorn_1_1RWLock.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ThreadInfo</name>
    <filename>structRapicorn_1_1ThreadInfo.html</filename>
    <member kind="variable">
      <type>void *volatile</type>
      <name>hp</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a1c4af2a29e5f58712ccfed0ffd8a43d1</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VoidPointers</type>
      <name>collect_hazards</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a10d4d094bb6188f1552fd1943671e8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lookup_pointer</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a4868fb93de6b6a5a2d95f58890623ba0</anchor>
      <arglist>(const std::vector&lt; void * &gt; &amp;ptrs, void *arg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ThreadInfo &amp;</type>
      <name>self</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>ac3f69830fe460d013e21fb19954094b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ident</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a96d4dfcf757c75ae5a01f3b588a13c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>a88438c51331d998cbe08c1c6f6df29c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1ThreadInfo.html</anchorfile>
      <anchor>aa8c3547963add325b296eb033e9b29e5</anchor>
      <arglist>(const String &amp;newname)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AUTOMATIC_LOCK</name>
    <filename>structRapicorn_1_1AUTOMATIC__LOCK.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BALANCED_LOCK</name>
    <filename>structRapicorn_1_1BALANCED__LOCK.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScopedLock</name>
    <filename>classRapicorn_1_1ScopedLock.html</filename>
    <templarg>MUTEX</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Cond</name>
    <filename>classRapicorn_1_1Cond.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Atomic</name>
    <filename>classRapicorn_1_1Atomic.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; char &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01char_01_4.html</filename>
    <base>Rapicorn::Lib::Atomic</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int8 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int8_01_4.html</filename>
    <base>Atomic&lt; int8 &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint8 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint8_01_4.html</filename>
    <base>Atomic&lt; uint8 &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int32 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int32_01_4.html</filename>
    <base>Atomic&lt; int32 &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint32 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint32_01_4.html</filename>
    <base>Atomic&lt; uint32 &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; int64 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01int64_01_4.html</filename>
    <base>Atomic&lt; int64 &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Atomic&lt; uint64 &gt;</name>
    <filename>structRapicorn_1_1Atomic_3_01uint64_01_4.html</filename>
    <base>Atomic&lt; uint64 &gt;</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Atomic&lt; V * &gt;</name>
    <filename>classRapicorn_1_1Atomic_3_01V_01_5_01_4.html</filename>
    <templarg></templarg>
    <base protection="protected">Atomic&lt; V * &gt;</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Exclusive</name>
    <filename>classRapicorn_1_1Exclusive.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncBlockingQueue</name>
    <filename>classRapicorn_1_1AsyncBlockingQueue.html</filename>
    <templarg>Value</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncNotifyingQueue</name>
    <filename>classRapicorn_1_1AsyncNotifyingQueue.html</filename>
    <templarg>Value</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AsyncRingBuffer</name>
    <filename>classRapicorn_1_1AsyncRingBuffer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>AsyncRingBuffer</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a64b0a505ca4524825947c51cbd8199ee</anchor>
      <arglist>(uint buffer_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncRingBuffer</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>aaa67b0c2928d62eb08ac92da87f440a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>n_readable</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a2613ad565bcb5736fc909861f55f5224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>n_writable</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a9d39ed66e08ab4fa5c3ce66dfd1ea859</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>read</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>ae859f4a3ddbb94f3e99fdaf25dcd44c7</anchor>
      <arglist>(uint length, T *data, bool partial=true)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>write</name>
      <anchorfile>classRapicorn_1_1AsyncRingBuffer.html</anchorfile>
      <anchor>a48123e2e98dab4740dff6a782c0b1547</anchor>
      <arglist>(uint length, const T *data, bool partial=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataKey</name>
    <filename>classRapicorn_1_1DataKey.html</filename>
    <templarg>Type</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>fallback</name>
      <anchorfile>classRapicorn_1_1DataKey.html</anchorfile>
      <anchor>af64e10fa4c15c6519ca6f3bcb63a60f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1DataKey.html</anchorfile>
      <anchor>a0db52d615ad5f331a97a5b76b8f5d4b8</anchor>
      <arglist>(Type data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DataList</name>
    <filename>classRapicorn_1_1DataList.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::XmlNode</name>
    <filename>classRapicorn_1_1XmlNode.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <base virtualness="virtual">Rapicorn::DataListContainer</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Adjustment</name>
    <filename>classRapicorn_1_1Adjustment.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AdjustmentSource</name>
    <filename>classRapicorn_1_1AdjustmentSource.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationImpl</name>
    <filename>classRapicorn_1_1ApplicationImpl.html</filename>
    <base>Rapicorn::ApplicationIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>aae857fe6bbd0962ee011e4661a4f3d80</anchor>
      <arglist>(const String &amp;file_name, const String &amp;binary_path, bool search_vpath=true) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>aa9431d793a7f887067b4ef942d9f2d2d</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>ae28bf2c398097ed796c46bf6207703ca</anchor>
      <arglist>(const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowIface *</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a51c2e926cf800de62fe707567103c80d</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a0f775b69964a95dd16bc1f26417d7653</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowIface *</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a95da48cf0e5fcb04b61aaa1e5fb77e44</anchor>
      <arglist>(const String &amp;selector) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a64a33568b7bc073a9f6b1ee3169a54e1</anchor>
      <arglist>(const String &amp;selector) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a5fc3e80471a4b05886faf2c0db325646</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BindableRelayIface *</type>
      <name>create_bindable_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a61be388e8e256e65d237db90550118d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ListModelRelayIface *</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a392fd9b711d4527519a8c8f624615a13</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a9a9332f224c4bb090eae0670afd896c4</anchor>
      <arglist>(int val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a1f86e648d73f924f0c6af2f965b182c0</anchor>
      <arglist>(int val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a832c520a1ee28acdd486f86ad282cc9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a3939dee9a4eea7500f579fdf5229a7ee</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationImpl.html</anchorfile>
      <anchor>a3f80b2a92ab4caa36c63732c66abc5ec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a6e85fe464208454c6a64d09494d551a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a126d8a9afa0b48532afe58d5f8a81a8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>factory_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a09455fce728868d0b7e80673fb7a72c0</anchor>
      <arglist>(const std::string &amp;factory_definition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a99fc91b875c53d532ec881328ff7a080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Window</type>
      <name>create_window</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a0ee935b8453c80625fd19d3cfdd4de2d</anchor>
      <arglist>(String window_identifier, StringSeq arguments=0)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>missing_primary</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>add17c54e20dd885020fa430d8fc58bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Window</type>
      <name>query_window</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>ad0e073c75bacb7e562cfdfd922d30244</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>WindowList</type>
      <name>query_windows</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a639fe71d9f192a547d874a5215ed9426</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>ListModelRelay</type>
      <name>create_list_model_relay</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a378348550f9985c507f220394b282253</anchor>
      <arglist>(String name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>test_counter_set</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>aaedf8485a7e7c74fa9588ff691c0790e</anchor>
      <arglist>(int32 val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>test_counter_add</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a5a81a5d11bd35daf29585df490fa4b94</anchor>
      <arglist>(int32 val)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrangementImpl</name>
    <filename>classRapicorn_1_1ArrangementImpl.html</filename>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ArrangementIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a1621e6ea3229976d77eb6eeb973cff2e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>aef8991bfee31ec1ce58cc0d32bd7b571</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a72f85d9634e023fc3e1ef24bc39993f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a6bc110276f5d580a6c78000f24feee00</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a75f6899745ad740e1ee87d9e4ab20424</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a4878d9a4d758803b9162c703bad22b10</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>addcfc0465b7855cd2bb10396e248834d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a9004f6dd234582aa1055aa4ff86f88b2</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>create_widget</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a87967e98bd706895cc53a9f979c8ab97</anchor>
      <arglist>(const String &amp;widget_identifier, const StringSeq &amp;args) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_widget</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a75cac1705e955f8bd62c62c81ef9a308</anchor>
      <arglist>(WidgetIface &amp;child) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anchored</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa88584dc0f0392896f06c7c2beaed8df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8b7f066a2f2592e310cffa11ff9596ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae8307f1b633ad8e26689763d8676f82f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_visible</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0c487b09ace321895a9f44be2799df68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a48cf4df812634588548d726ec5039b90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drawable</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a785692bbf11db5cecb32f2aa99122876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a21ace37d443b7fd987fb26531e877b6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0be5040b085786f3b102bf37becacbda</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aad8368bfe0977b6d2505d091cea890c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a066ccb3efdbdbbcb50aaa8da61da80f7</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa130c7e71b7e8421f515863c4f2a07d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pointer_sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad3314653794bbdfd90daba44e7e07ff7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad5ec360e2b76d770798fe6b3c78a084b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0851d528739e6099a12dbaa3e60f34cf</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_prelight</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a64703f3a2eff11dc6392f0e92e2e7e23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8675777f6ce4c80640caad18b68c2785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a32204d3aa333e9df0ed15ae4e98480c0</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ancestry_impressed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a81375e8e4d1d80274c325b6d08dee304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a17ffbe775e77b4339b0710c210bfb9b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_focus</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af3daa2605e7877a796fdfe201c744ccd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae6fe549f184198b0ee8b88620a907a3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a70a3fa38d5c896e7f7d6e6d81d16c540</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad6c2f6eb24301b58d86503b59204234d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a39aa921007e8839a8196b5c3f7b714c1</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a73651227c08652b73e929adb4df3565d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9b1dbfb64db1fe6792682974085940c6</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7e2934ba37a364a78daa4d57a26f6362</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a33230ec9aebc4d85ea018adcb262c43d</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9ab067132bc69991578b0f7eb5742e5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad04013d4fb3548f49bb63f0cc4c28982</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a609c0b7b47786c5b096126c47cffa5b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4aeec45ba67e1b8bc6e398adaf68ce8f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad2e25c41f6fe76f518edaf5ad66f6977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a13e048db788c20ff7263c90c8977c89e</anchor>
      <arglist>(const String &amp;group_list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a4082408219154b5e48e53e79e9e1ac8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab9d2cdad9d1017a38d353f0347645b02</anchor>
      <arglist>(const String &amp;group_list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab10fdcdbac9da6fcd1c9e5c78a9125d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8ca033137bbdf955a0805d77ae40dd27</anchor>
      <arglist>(const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a75cc046b0a657394f712d3b3db75ea2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab92d1d9dd2021b3d143b9cb133b2753c</anchor>
      <arglist>(ColorSchemeType cst)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a9c841068ab8f3070e8dcc3527095ed87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae42a95fa5b780588c189c59f68e7a10f</anchor>
      <arglist>(double w)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aef65dd2d8097e5e6a725f912878a0ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a614c3b2f6dbea03773b5a4704c1d39a3</anchor>
      <arglist>(double h)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>data_context</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ac3c376fd45dc7d2f784d676c0f1a9381</anchor>
      <arglist>(ObjectIface &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a72dd2947a0f3edb5bcfa17ba6934aaa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa5713c7a2b66aa16b78b2aa3cd443397</anchor>
      <arglist>(const Rect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab1620880ba5293772beedc6d6afadc8a</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Requisition</type>
      <name>requisition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad16f9db78f7d32bf17829f08cf699cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a15c3d59b4562c626c95c603ef14d375f</anchor>
      <arglist>(const Allocation &amp;area, const Allocation *clip=NULL)</arglist>
    </member>
    <member kind="function">
      <type>const Allocation &amp;</type>
      <name>allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a09661aadaab2c20e11ed5cd2f240a694</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>clipped_allocation</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3ce22b736d6ce68fb5f9128a493017fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Allocation *</type>
      <name>clip_area</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a58640624b3b2284394050a095121211e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a1d4cfca54e4b118704cf8eff1034b7df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa148a8ab9c77c45858b62690938baa8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6b963c33e639a8a23c25de67cf246c4f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5f5d1241c6a65e2f53f643d8262f898b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae3238c44fa364be2cb155e73c7a01548</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aebe04042f0f7e4f26100a03a1b105b7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af15edcb3b7c1e0e0318ca12a2b8cb921</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aa6ecae055b4fd177500f7723767595ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad79ec7e72524c268ad100a7cf009288f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7eed7d97eb558429b5334e98f733dca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ac435fd6871121fcbf556f3419aaa63ec</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab09d28e752723b547742643948a83f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a90ed405772c63b6b74c47f0e0ea6cf69</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a60f8ff68b0d0ce00eae429cf59fad932</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae23a55b6db5ee50db9f860a0e61fb5d8</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a340ef308f20a33b30085099b9af6db10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ab12aa9a2ea509046b05bfbb5f1724f67</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af076a903075bb7526648fc98baa7ac50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a37291f95d34b563a55d8937dae1833d9</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>adf1154dd3a9a8df3772c98b8e2630ae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a105ff6dbd5b00051a971ee63036ea861</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>aaa2711030f534e05dc81d6ac3644d91f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a7092f45300d34d771fa4301149a1984f</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad91785ff40859a2877b6ddb5c3529bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0fd02e46f58ff11649ddf27ed0f8d19e</anchor>
      <arglist>(double f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af51e775b0666615e287e585f1bb21ae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ac7582eb513d752de19697e94b36e78aa</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>af52991395ee5cea0ba71f1bdba32514b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3f5dd390381a599f7b294f0b76ae6dc9</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5ef20e344c2ce336739e6faa8dd29a63</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a65b2cb97f211af51795fb9964fc31393</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a2916bc9ab0509b3d29e59cc3b28b229b</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WidgetIface *</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a972ca0d80e369bf3137eac8af3e8cb1a</anchor>
      <arglist>(const String &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_user_data</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a9289a6d8a42f3d39205ad0248edea914</anchor>
      <arglist>(const std::string &amp;name, const Rapicorn::Aida::Any &amp;any)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>match_selector</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>afa7acd787c4e0ce592a00e6eac3f10ad</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>query_selector</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a966149ce674f027b2c2f14e8212ca908</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a1a999419166530f04a9ad46a73c2f48a</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>query_selector_unique</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ac1689061b3c27d6bbbff79e7c0ccfd1d</anchor>
      <arglist>(String selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>data_context</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a945cc6a4ec4adc4234c9883f54a81549</anchor>
      <arglist>(Object context)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>set_user_data</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a2117397ebe6c21394111344c3b1496fb</anchor>
      <arglist>(String name, Any any)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Any</type>
      <name>get_user_data</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a51af6ab67b3929539f75975d1b0c7a08</anchor>
      <arglist>(String name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Widget</type>
      <name>create_widget</name>
      <anchorfile>interfaceRapicorn_1_1Container.html</anchorfile>
      <anchor>af27bd56f6f5bd996ee1d9234e07f54e9</anchor>
      <arglist>(String widget_identifier, StringSeq args=0)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a101c0aa09fd25a9ed7cea5d92addbc7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a02d96fee03af62c9b74ff7dd9f1436f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>affcbc9ac66aacfba6a3f71638de89fd4</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ArrangementImpl.html</anchorfile>
      <anchor>a3033b2884a71f3ab46cb0cb7b5f28050</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>ab51604fa30e2dfd3b9721c994a063dbf</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>change_unviewable</name>
      <anchorfile>structRapicorn_1_1ContainerImpl.html</anchorfile>
      <anchor>a173036b8efb594e7811041b1d72156e8</anchor>
      <arglist>(WidgetImpl &amp;child, bool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clip_area</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a8ba66a8a1faf1e18c726ca6e5b49f11b</anchor>
      <arglist>(const Allocation *clip)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Any</type>
      <name>get_user_data</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a5c97ccd10a175bd4e9775cb92f3459f3</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_widget</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ad0d00e8c524fedbb492af4439d84eea1</anchor>
      <arglist>(RenderContext &amp;rcontext)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>request_content</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a6a131b40dc9fb6b4195a60cc9f4fb2c1</anchor>
      <arglist>(ContentSourceType csource, uint64 nonce, const String &amp;data_type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>own_content</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a781d3e0797de2b5c1ee9622c8ed49bfb</anchor>
      <arglist>(ContentSourceType csource, uint64 nonce, const StringVector &amp;data_types)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>disown_content</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0a07748de512e6926c9e73262b177cd1</anchor>
      <arglist>(ContentSourceType csource, uint64 nonce)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>provide_content</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a856b21f4aaba1ac0eb1c8b04dcf4b5ac</anchor>
      <arglist>(const String &amp;data_type, const String &amp;data, uint64 request_id)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a53491edbcfbc5e3489513d9311f77f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a56bae09a3a0a7c5b60aa1877093913a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>sensitive</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a39e3a15bfa728cdbde2c5273cd3b6d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ad16a89d80bc4e9ef3f32a98bf3393074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hexpand</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a1bec6bec66b68fbd1132c2717535d9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vexpand</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a363e918e1db4f3ccb756ec718cf6e29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hspread</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a473c634f99d5046b5bbba5eecbb51f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vspread</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>afa1565494072dfbd86a25d50e4863c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hshrink</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a537108c1e8d68c2344cc2c75284ce069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vshrink</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ae3d9da4bfed4c4e1a457f7d84028b119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hposition</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a626b714f212b85c144958f3979d10410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hspan</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ace747c702421434f8da0de3943e90849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vposition</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a60a207234a8c132f83f9474e47288d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vspan</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a0552bfa7a8357bdc9bc4f5d6cd11dea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hanchor</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a9e6e9f7697491f825dc582fcd0f1dee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vanchor</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a693fecde07442d7a24c9c71aaa656bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>halign</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a9fdc4a7b16af8003af1803974d6365e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>hscale</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>aab321f4b4d2b729a30cff7c52103f5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>valign</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>af6939ecbe898471487a14fb3e06c4e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>vscale</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ab176efe9b3af29a41fffe0d1b724c8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>left_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>ad51ff5b61be936802740cb94f64a88d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>right_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a5b98600343be92b90960b140ce0e4c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bottom_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a9cdadf8d2c445d6983b98ba4d1585c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>top_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a585c8c3c1693e61e88a5241a2185a01c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>hsize_group</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a819af0b00c16fe8bc47d8ce6661521ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>vsize_group</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>adb8c796a2a0681e55222e2da36379a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>width</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a73f793501951b06b88d09fedd315c15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>height</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a0e7463b436c5e423544770ff7cf976f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>xorigin</name>
      <anchorfile>interfaceRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>ab3c533d85e4405e7a9365ffc528ebe31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>yorigin</name>
      <anchorfile>interfaceRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a287281efed38f87ec47412d7ef0b2c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>origin_hanchor</name>
      <anchorfile>interfaceRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>a4138ff20a66c84b47c377ac1b7f3d1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>origin_vanchor</name>
      <anchorfile>interfaceRapicorn_1_1Arrangement.html</anchorfile>
      <anchor>acde7ffc90fd9e457d6015727bfac1195</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ANCHORED</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea6420fd56e32f90d376edade7ced15f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>VISIBLE</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eaeef202adb8ac717ed056bfe1f06bd1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>SENSITIVE</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea7ef96043af083daa57793f638f9a4245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>UNVIEWABLE</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eabc95c32b52753aa048833f9442759450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>PARENT_SENSITIVE</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea423b5b6779f0f0ce2bf05a982cc0e931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>PARENT_UNVIEWABLE</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eadfe6edd5d5723e478601f7b9fec3d99b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>PRELIGHT</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea2616a25b5c8166963da06dfb2e99c889</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>IMPRESSED</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea3d3a32658933c98518d36c4c3a279ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>HAS_DEFAULT</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea331b2d62532ed2e9c2c37b7fb984db10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>FOCUS_CHAIN</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eacd97e557ad228efe03baeb779cce94c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>HSHRINK</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eaf2e421f36d363ca6762b8279b3c0d62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>VSHRINK</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea178afad3b1ba55cd1648363dd5366ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>HEXPAND</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea5fe8508b2253d5fda4328ec6a7f57452</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>VEXPAND</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea8279bd5dabd43a3d903abcb2fc7fcb05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>HSPREAD</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea36d7c02667edf3cf074b3ad9d42df23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>VSPREAD</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668eac2a02b0ad3ea43408152b24c986f57e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>HSPREAD_CONTAINER</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea15cc0ae18f0c338ae28be6a9c5add542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>VSPREAD_CONTAINER</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea3b820eb122861df97d570d22aab104e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>INVALID_REQUISITION</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea4e884d4cd56b97a0b11faab802f7dc3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>INVALID_ALLOCATION</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea18d146a1439020a09b69b34233e447ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>INVALID_CONTENT</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3225f69077b798beb254dab804cd668ea61e8f8eb8be532490998b5d7176fe980</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableRelayImpl</name>
    <filename>classRapicorn_1_1BindableRelayImpl.html</filename>
    <base virtualness="virtual">Rapicorn::BindableRelayIface</base>
    <base virtualness="virtual">Rapicorn::BindableIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>report_notify</name>
      <anchorfile>classRapicorn_1_1BindableRelayImpl.html</anchorfile>
      <anchor>aead97fe934a3f9732de6b6ccd5cf4625</anchor>
      <arglist>(const String &amp;bpath) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1BindableRelayIface.html</anchorfile>
      <anchor>a10d458d366f26290986a678826e441f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1BindableRelayIface.html</anchorfile>
      <anchor>a3214ce9fcf7896ccad105ea384fd90f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>report_result</name>
      <anchorfile>classRapicorn_1_1BindableRelayIface.html</anchorfile>
      <anchor>abaa0138c6b50612992967a94f4a4d241</anchor>
      <arglist>(Rapicorn::Aida::int64 nonce, const Rapicorn::Aida::Any &amp;result, const std::string &amp;error)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>relay_set</name>
      <anchorfile>interfaceRapicorn_1_1BindableRelay.html</anchorfile>
      <anchor>a927c8d66b87f6a5230be11f5c45ee997</anchor>
      <arglist>(String bpath, int64 nonce, Any value)</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>relay_get</name>
      <anchorfile>interfaceRapicorn_1_1BindableRelay.html</anchorfile>
      <anchor>ac34aac6ef71bd812a680c3e4b06d7e6f</anchor>
      <arglist>(String bpath, int64 nonce)</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>relay_list</name>
      <anchorfile>interfaceRapicorn_1_1BindableRelay.html</anchorfile>
      <anchor>afede012405302101da04833a3035a997</anchor>
      <arglist>(String bpath, int64 nonce)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>report_notify</name>
      <anchorfile>interfaceRapicorn_1_1BindableRelay.html</anchorfile>
      <anchor>ae1172db8b8eccf6fd6d05170f5df0445</anchor>
      <arglist>(String bpath)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>report_result</name>
      <anchorfile>interfaceRapicorn_1_1BindableRelay.html</anchorfile>
      <anchor>a55517e70effa344b3dc9d5c9ca82dedf</anchor>
      <arglist>(int64 nonce, Any result, String error)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Binding</name>
    <filename>classRapicorn_1_1Binding.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaImpl</name>
    <filename>classRapicorn_1_1ButtonAreaImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ButtonAreaIface</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <base virtualness="virtual">Rapicorn::FocusFrameImpl::Client</base>
    <member kind="function" virtualness="virtual">
      <type>virtual ClickType</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a68dcc2334ca5ab5789b13a468d536b7f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a5e5593cb618a25b3eaa9e74d63d43523</anchor>
      <arglist>(ClickType click_type) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a95b9024da38f58cbba46031411aad642</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a656612f48d03d4fd27e33672d6af4ef2</anchor>
      <arglist>(const String &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a081f7db06bc28996bcc4da8996146f5c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a2b3f6e9ddde420c895b1104a104eddb8</anchor>
      <arglist>(const String &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>ac59edee05250f3f55a5aaa7ebd647905</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaImpl.html</anchorfile>
      <anchor>a206959fdc244d1a34a8079867e6301a7</anchor>
      <arglist>(const String &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>aca55909bdc39f4479284bd276893b043</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>ae0b5c2463ca3f0d09ed6507aae977f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ClickType</type>
      <name>click_type</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>a1666349f12e9b6a27ead1d1f007b9999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>on_click</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>aaec664db3aacd1df72761cbb367cd796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>on_click2</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>ae1c2e0a61935f43339a0eb6d87c02328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>on_click3</name>
      <anchorfile>interfaceRapicorn_1_1ButtonArea.html</anchorfile>
      <anchor>ae0a3bd57f3845058da33897da6bb1deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a9c77415a7bcc31a24c76ea41090666a2</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1SingleContainerImpl.html</anchorfile>
      <anchor>a496f5ed11ca8fae12da55b5b31dcd66e</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CairoContext</name>
    <filename>classRapicorn_1_1CairoContext.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CairoPainter</name>
    <filename>classRapicorn_1_1CairoPainter.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::BoolSeq</name>
    <filename>structRapicorn_1_1BoolSeq.html</filename>
    <base>vector&lt; bool &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1BoolSeq.html</anchorfile>
      <anchor>a13c55a0005ecfe4e09a30052798efbea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::StringSeq</name>
    <filename>structRapicorn_1_1StringSeq.html</filename>
    <base>vector&lt; std::string &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1StringSeq.html</anchorfile>
      <anchor>afffeb528042b7a01e746dcc8b96fd990</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnySeq</name>
    <filename>structRapicorn_1_1AnySeq.html</filename>
    <base>vector&lt; Rapicorn::Aida::Any &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1AnySeq.html</anchorfile>
      <anchor>a2da555c1593c041a84a47066ed101676</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnySeqSeq</name>
    <filename>structRapicorn_1_1AnySeqSeq.html</filename>
    <base>vector&lt; AnySeq &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1AnySeqSeq.html</anchorfile>
      <anchor>a0273a2707c0ff15e81b4f22eaabeafd3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::PixelSeq</name>
    <filename>structRapicorn_1_1PixelSeq.html</filename>
    <base>vector&lt; int &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1PixelSeq.html</anchorfile>
      <anchor>a31788d6b42a10b09e715ddeb26f16ec5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Pixbuf</name>
    <filename>structRapicorn_1_1Pixbuf.html</filename>
    <member kind="function">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a0d2b06a7089f904e7fba3c0f07f1986d</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a7c1b4b28a7c6275c18f24c7cd984936a</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t *</type>
      <name>row</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a0285865daa7de56904cb4341f663b335</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>const uint32_t *</type>
      <name>row</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a31ace03ddc473457418b6343df3ee1e9</anchor>
      <arglist>(uint y) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>aec51700a0fad39b5ee96a7bf18747197</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a35e1b112fc58e3b566cae06d0dfe15a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>row_length</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>a3f45b11294942c741d7a975e9d756be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PixelSeq</type>
      <name>pixels</name>
      <anchorfile>structRapicorn_1_1Pixbuf.html</anchorfile>
      <anchor>abd1057487fc37c5ba921cbed11615705</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ObjectHandle</name>
    <filename>classRapicorn_1_1ObjectHandle.html</filename>
    <base>Rapicorn::Object</base>
    <base virtualness="virtual">Rapicorn::Aida::RemoteHandle</base>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt;(std::is_base_of&lt; RemoteHandle, TargetHandle &gt;::value &amp;&amp;!std::is_same&lt; RemoteHandle, TargetHandle &gt;::value), TargetHandle &gt;::type</type>
      <name>__aida_reinterpret_down_cast__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1RemoteHandle.html</anchorfile>
      <anchor>a511ce5a4abfda83425da3790563af535</anchor>
      <arglist>(RemoteHandle smh)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>__aida_upgrade_from__</name>
      <anchorfile>classRapicorn_1_1Aida_1_1RemoteHandle.html</anchorfile>
      <anchor>ac870e4ea7f6a323e5f0de398d89469e3</anchor>
      <arglist>(const OrbObjectP &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableRelayHandle</name>
    <filename>classRapicorn_1_1BindableRelayHandle.html</filename>
    <base>Rapicorn::BindableRelay</base>
    <base virtualness="virtual">Rapicorn::ObjectHandle</base>
    <member kind="function">
      <type>void</type>
      <name>report_notify</name>
      <anchorfile>classRapicorn_1_1BindableRelayHandle.html</anchorfile>
      <anchor>a03de0e7a84e96bbbdd8737c2f2075cc6</anchor>
      <arglist>(const std::string &amp;bpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report_result</name>
      <anchorfile>classRapicorn_1_1BindableRelayHandle.html</anchorfile>
      <anchor>a0c2008d4088c95af23895781c4744f77</anchor>
      <arglist>(Rapicorn::Aida::int64 nonce, const Rapicorn::Aida::Any &amp;result, const std::string &amp;error)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UpdateSpan</name>
    <filename>structRapicorn_1_1UpdateSpan.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>start</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>adae2e8717cc7b646d737b8388fa98a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>length</name>
      <anchorfile>structRapicorn_1_1UpdateSpan.html</anchorfile>
      <anchor>a07fc175b2e90f8cdf5951793ea5a8e30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::UpdateRequest</name>
    <filename>structRapicorn_1_1UpdateRequest.html</filename>
    <member kind="variable">
      <type>UpdateKind</type>
      <name>kind</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a8d8d590dbd753f50f247682774dd6954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UpdateSpan</type>
      <name>rowspan</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>ad4397cc3dff18d867d3caf8ca38debae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UpdateSpan</type>
      <name>colspan</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a1ddc6bd3c77febde2af9013dd5102ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringSeq</type>
      <name>variables</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>a449048c1713d36ac31873967373ad37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Any</type>
      <name>value</name>
      <anchorfile>structRapicorn_1_1UpdateRequest.html</anchorfile>
      <anchor>ad7ba91a5887334792847dc4e4cf0466e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelHandle</name>
    <filename>classRapicorn_1_1ListModelHandle.html</filename>
    <base>Rapicorn::ListModel</base>
    <base virtualness="virtual">Rapicorn::ObjectHandle</base>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a372899df9ae9f495fea43b30edf48bb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1ListModelHandle.html</anchorfile>
      <anchor>a6b022f63c43db1b9d64e956ffce77d8d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>Any</type>
      <name>row</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>a14a9d2a2cfcc28bae395fdbd5f559f0b</anchor>
      <arglist>(int32 index)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>updated</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>afc7952c08f0335ccfd898c315b9fb45e</anchor>
      <arglist>(UpdateRequest urequest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayHandle</name>
    <filename>classRapicorn_1_1ListModelRelayHandle.html</filename>
    <base>Rapicorn::ListModelRelay</base>
    <base virtualness="virtual">Rapicorn::ObjectHandle</base>
    <member kind="function">
      <type>ListModelHandle</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>aa815e3c7f4515b07ed3461cec37857a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>a4753fd023269a40ad74d68b0c68cccee</anchor>
      <arglist>(int first, const AnySeq &amp;asq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayHandle.html</anchorfile>
      <anchor>a169e868263d2bccf2bc7ea39551e1fd2</anchor>
      <arglist>(const UpdateRequest &amp;urequest)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>fill</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a80ce174e9f1e49583cdc1aa6c7a5e381</anchor>
      <arglist>(int32 first, AnySeq asq)=0</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>refill</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a23232fcfa13174c409930c35966d9439</anchor>
      <arglist>(UpdateRequest urequest)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>update</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>a4572d953257a6767a1eb76fbdf76f58b</anchor>
      <arglist>(UpdateRequest urequest)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Requisition</name>
    <filename>structRapicorn_1_1Requisition.html</filename>
    <member kind="variable">
      <type>float64</type>
      <name>width</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>a323c0eac7877713d45e03162faa7fc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1Requisition.html</anchorfile>
      <anchor>aa53f935c115e0462204f8182eb974600</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetSeq</name>
    <filename>structRapicorn_1_1WidgetSeq.html</filename>
    <base>vector&lt; Rapicorn::Aida::RemoteMember&lt; WidgetHandle &gt; &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1WidgetSeq.html</anchorfile>
      <anchor>a8ab92b091118604c959ac460d73a1c4b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetHandle</name>
    <filename>classRapicorn_1_1WidgetHandle.html</filename>
    <base>Rapicorn::Widget</base>
    <base virtualness="virtual">Rapicorn::ObjectHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a098d5d91d7a4f523687ab7c2a3270a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ad8b1bd463758b2f2dea78219d026baa9</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afd76c8d8acd63a8d222b5b505473f98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a439a5c0052ee619f2c8e6964d41de355</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3d848743d25ae1d6f26a9229d5fbea7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3c24093709450a009c97953a606e35b9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a11371b869985a54f8837825d63a60358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7b1b0896a17f8788ec5cfc708ae7cf0e</anchor>
      <arglist>(ColorSchemeType)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>af62ab3cbade4f19eac53c154c7a784e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a71c4f83b902a3180e6ad3191f79f6f5f</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a81606aeb9c448050a7a40a7150b42987</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aeee8083cc944c66dde289505134af970</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a690b1fc977f541677a1dc5fa2ea3171b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a1d8ac422ebe68266c6f2211045ea0774</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8444027c2649cd14a2bfe1266a8aa984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a0be96e7a0c044b25a8d2a622ed7dbe50</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab1b9b44bc9dc8d0110e410c6e9a992c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab0fafd9ef84ab59d995adbe72a62ecdb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a6a0d27866eb398ce944e72772baac6ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a9ad462075241b499c41db1ad748de849</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afd1bef1aa57a82752c19dc4f08dc167f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7231fc60f4b1713c2c9d7599ecb9eef9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a763e2cc58673b98d6d94a3a575a2bedb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7fdabe0b5033a04915069b0d18fcbd05</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8b64fa3df6ef1f825a781f430a80de47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>acabe9239b1146c6cddcad7ad63f16799</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>acad68bc56eda4a3f0aac625e235138cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8fbfa4ef57ea48dd0b9c29a2a37054db</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a7c157d135750bc4f26323eea2db75d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a91748c41830b5338495e174f20fd8993</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a69c89b2fda14ca33504d0168628a8537</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aad91f84933063aad64b42de6f51c65ab</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3e3bd1a7d7ee4f0a6dcdc585cb2e2259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a50c0ad2a0ff56b803c21c97ba57c564c</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a42bdfa4186c75b054b678b16dccadf40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ab65808c5eb7d73cb5e97e82e97479866</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae470eed7cd2514546f0743b520143792</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a8a6ce9fbf706196e1e30f874f34b7c5d</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a66e513939fd30dbc9f24a8646a657862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac8e88bd6a8ebda6c9572cb0ac7b8214f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aed826432bdfeb4210559fd026db5dbac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a3c54756e272d1584abf20d525ca4bd38</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac5e9395e8d3c2201993939d68f6c4e81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>afb7aca4966f6fed0cfe35ca931e40eb6</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a122d7dc2ea61f6a849fe81692770017e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ad2e05a3c253923bc236412c5d3337c5e</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a130e04bcf146443e5c39f898b76af11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aeaf202b3ded1f9cfec8d6ad1b2c5a473</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a6402a8711e8503f5dc13b39de93a55c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a2465e607a3f6e306214c236044311b43</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a94c6f1fce587746688aa7f58cb182132</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>aeb5b28219860c694f2fd7a828596b680</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a84b6b06a487658ba1e6a846090929e7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae83b3083daaa616c90b1c3665f3c3cda</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>af2cff2fea6c2e6583e06c1556a10723d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae800a680dc1837b36ce7527cabde0dfc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Requisition</type>
      <name>requisition</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a76e4e7a93246ea65e863806e2ba4420e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a06cb3aa61fc03f84029e61c7b89ac2b9</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>af46e199979f945ca6bb3e5db78249793</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac1d5dd3f048592a2c627dcfb7f893a49</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae54822011fdd156291893980f94c1fc1</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>data_context</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ae1a9a3dd52339aa51f78a78600592ad5</anchor>
      <arglist>(ObjectHandle &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_user_data</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>ac7bb4de355166aa467bc03196a42f8fc</anchor>
      <arglist>(const std::string &amp;name, const Rapicorn::Aida::Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::Any</type>
      <name>get_user_data</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a02eb995d6d6b70323be8f6e9f02e45dc</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a5baff30bd16f310388480e3ac02af229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Target</type>
      <name>component</name>
      <anchorfile>classRapicorn_1_1WidgetHandle.html</anchorfile>
      <anchor>a82598b83e0df4545764b54d96e819056</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ContainerHandle</name>
    <filename>classRapicorn_1_1ContainerHandle.html</filename>
    <base>Rapicorn::Container</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>WidgetHandle</type>
      <name>create_widget</name>
      <anchorfile>classRapicorn_1_1ContainerHandle.html</anchorfile>
      <anchor>ad6034ed97243dfe4916cb2e5c357d97d</anchor>
      <arglist>(const std::string &amp;widget_identifier, const StringSeq &amp;args=StringSeq())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classRapicorn_1_1ContainerHandle.html</anchorfile>
      <anchor>a25d475eff78da1b2c7855bc9914ec81d</anchor>
      <arglist>(WidgetHandle &amp;child)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowHandle</name>
    <filename>classRapicorn_1_1WindowHandle.html</filename>
    <base>Rapicorn::Window</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a8935208c5acf270be3e91536a34b058d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a805c08c1fd7bf965a108c9bf05bce475</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>afe9628e3e04a9fed7e01f80a3f36d3d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>adae11ebfdb183956230c53c80e41a2ed</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screen_viewable</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ab6ccfb47c2085c0272e3c7a66ccce010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a71b883fbc9974a8629c12dc3ba34d7cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae50a9a5b6a1fe61bdf0f83b5709e0994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae921d484c329fabb2609f1bdf9fdee4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a11324d6025fa535e614b484a2fe71396</anchor>
      <arglist>(const std::string &amp;pngname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a77a2a5f7dac2c55baefde7429583245d</anchor>
      <arglist>(WidgetHandle &amp;widget, int button, double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>aceb84bf7d869698667a8ad17654fa116</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>ae1af7a2aa400989b6c1cdacafe9e8fd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowHandle.html</anchorfile>
      <anchor>a7f22c10df78864880b65e4963f1548ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>title</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>a385369ae76ad91664eb8312c88e759a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_focus</name>
      <anchorfile>interfaceRapicorn_1_1Window.html</anchorfile>
      <anchor>acf9e852c397954dda021779cdd0fcfb2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WindowList</name>
    <filename>structRapicorn_1_1WindowList.html</filename>
    <base>vector&lt; Rapicorn::Aida::RemoteMember&lt; WindowHandle &gt; &gt;</base>
    <member kind="function">
      <type>reference</type>
      <name>append_back</name>
      <anchorfile>structRapicorn_1_1WindowList.html</anchorfile>
      <anchor>a9146f20c0a27d8bfaf72c35c2a692d3c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrangementHandle</name>
    <filename>classRapicorn_1_1ArrangementHandle.html</filename>
    <base>Rapicorn::Arrangement</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>double</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>af7a66743d0f525a642cc9624613b82f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>a15ae54e33aade1eca6330664e384c0e5</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>ab75c9dbb5a60dc8cfc18998c39eb716b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>a3d09f31617eb05c878bb1646786f7795</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>a62931801fc6a04a856f08c958dd36441</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>a262c87e500eed704e03b82e9c0a230a9</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>a4070292668d7b7d89bfc0b49bffaefa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementHandle.html</anchorfile>
      <anchor>aa26095e3df3a5f02095d972e0669f04a</anchor>
      <arglist>(double)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AlignmentHandle</name>
    <filename>classRapicorn_1_1AlignmentHandle.html</filename>
    <base>Rapicorn::Alignment</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>int</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a6def51c5e601d6c59c0c2ee8840ac3eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>aeaae1c08e52c44ab05d97152567edb95</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a4e990bebae9c5e2f25783c8b551c6fa1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a3b38fbe328d4ac07fd34093e88252b88</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a514726bec00669f0b44b9520d668d2e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a2a352f6e3ea035e5721f518d60d30188</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>aa97ca3d658009f3b011950309110582f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a5dd785fe2a3df7d9648a0278cb0d0b62</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>a488853e4209166ae578e73fd41cd2a59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1AlignmentHandle.html</anchorfile>
      <anchor>ae248e3d684fb4f5a81860325adb64c5a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>left_padding</name>
      <anchorfile>interfaceRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a50bd05311ddd7f0876acf709d9985b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>right_padding</name>
      <anchorfile>interfaceRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a9df1461a1c1995369b1630a39c2acf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bottom_padding</name>
      <anchorfile>interfaceRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a4a5171d3ac2ce8a8bb4ec1e44d75bc02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>top_padding</name>
      <anchorfile>interfaceRapicorn_1_1Alignment.html</anchorfile>
      <anchor>a405a697e4be0c3ac2abff78153da3581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>padding</name>
      <anchorfile>interfaceRapicorn_1_1Alignment.html</anchorfile>
      <anchor>aeca479414704b63fb58d10d4285b9a0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FrameHandle</name>
    <filename>classRapicorn_1_1FrameHandle.html</filename>
    <base>Rapicorn::Frame</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>FrameType</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>af43b2f65b766c35fa35cf0dc29f25a5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a79f2f04167ba711485b5bec5ac96af7a</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a642dadf299b5b68b424af586a0a2f87e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a23baa02f733da33236873088e02ffba7</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>aca037be410cdcf9ecfab86678120a3ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a47861a6feb97f5e44886390ea6382fa8</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>afcd40830a34d25d762b1c75cb7a14c65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a1938c618ac96d2ffe5b4488b04f57298</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>current_frame</name>
      <anchorfile>classRapicorn_1_1FrameHandle.html</anchorfile>
      <anchor>a22add68b2824d3296152f32179af5f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>normal_frame</name>
      <anchorfile>interfaceRapicorn_1_1Frame.html</anchorfile>
      <anchor>a405b9c30a182a7842846f75df3c87f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>impressed_frame</name>
      <anchorfile>interfaceRapicorn_1_1Frame.html</anchorfile>
      <anchor>a2dd93f973c0185176f3f020883d17067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>frame_type</name>
      <anchorfile>interfaceRapicorn_1_1Frame.html</anchorfile>
      <anchor>ab2fd6b8e8b112acbb7ecfdec59d7e690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>overlap_child</name>
      <anchorfile>interfaceRapicorn_1_1Frame.html</anchorfile>
      <anchor>a6bf0ff4046721d0a47f46092f4618d8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FocusFrameHandle</name>
    <filename>classRapicorn_1_1FocusFrameHandle.html</filename>
    <base>Rapicorn::FocusFrame</base>
    <base virtualness="virtual">Rapicorn::FrameHandle</base>
    <member kind="function">
      <type>FrameType</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameHandle.html</anchorfile>
      <anchor>a9f7cbaa74da701e287ffe4e557d71b08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameHandle.html</anchorfile>
      <anchor>a6964bb5e10db4d7a7348ef5092805fd6</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameHandle.html</anchorfile>
      <anchor>aeb2de0a41fc5bff0a7dfb4dda5699f38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameHandle.html</anchorfile>
      <anchor>aaaf5b21d374367c37651ab5e0dea3e60</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>focus_frame</name>
      <anchorfile>interfaceRapicorn_1_1FocusFrame.html</anchorfile>
      <anchor>ad0599478c1a07889b938b241f0f38b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>tight_focus</name>
      <anchorfile>interfaceRapicorn_1_1FocusFrame.html</anchorfile>
      <anchor>a1e23792e7a6186568d690418a2558379</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AmbienceHandle</name>
    <filename>classRapicorn_1_1AmbienceHandle.html</filename>
    <base>Rapicorn::Ambience</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>aa586eb17c923a319908697d7fb7636d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>aa9366be278114f141f25b5db9586d958</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a7cf54d004d47de7688c7898e94ff827d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a5818c82a27bb0cf92ea55078d3f78bbf</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>ab9b6c277bac9132f4c6633eeda4e01d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a348d87cf62e187276d261fa49d61631c</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a1f748b061bd696ff5f487296b263201f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>acb1467a97208dde0c9dac3c8379ccc4b</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a229d10afaec461e801781d716a126d16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a0ddee9d19ac021adfb091e10fcae0b6f</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a290d6125131a6671e4f2ace16cd15086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a6c1265de8c0d25fcea3b6027c215b518</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>acdabccd596e547f30bab6b07b55bb5fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a7974b1cbc49e8e3e1880277f81e6e38a</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a7eb71d548fd72249aebffeadb77b3096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>abd784e4c2fa63348183f46199a928ddd</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a4cfdff34bc281dfbaccb1052364fabaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>aaf55e3dadbae9a57de5dedfca515dd66</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>ae2f87348267b1f2cb58d50dcb4a0dd11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a83307767fcde5a95c5e98217cf2612a7</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>aa1708ea84ecf68c22b12d959265d21f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a36367380cac4b04d6d016b71b8a29e7f</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a55bcc99ced52ec34833864a57d1ea2e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a3e94ba936837d1dafe915bc72530f345</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>af243e5798769f06a60c99a140d7abc04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>ac4e4e34bc3febefd9f672007542895bf</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>a9c1cd218125ae338859119b82fd26d54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>abeeca002768f66d8a92ac1494410eba4</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="function">
      <type>LightingType</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>af6c70796ef07cb0b4ccb9b931fa960c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1AmbienceHandle.html</anchorfile>
      <anchor>acdd1c4850980146926af4f1fe974f930</anchor>
      <arglist>(LightingType)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>normal_background</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a8370a546b471734602aead666bb9791f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>prelight_background</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a5583c39819fc8eecd4309716d258407b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>impressed_background</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a4f21177fbfded0f53b5634aca4579299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>insensitive_background</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a445bce44c83a73c2ce5407e3d35c3fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>normal_lighting</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>adaca8472017006bdee86492133f4513c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>prelight_lighting</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a0b6be748bdc0bd89ccece16509c0e4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>impressed_lighting</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a9851b2b365484126cff86099e3a0833b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>insensitive_lighting</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a1cde95f0257b727257d268e520d77382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>normal_shade</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a0a58a18e5f33449e62c6c9de72860a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>prelight_shade</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a9dc619199c7b0d09d23e6cd7e6190780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>impressed_shade</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a49bf44a97aea2ad6755a8e21adcfb430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>insensitive_shade</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a244ab83dc8dbc5e83318a3c546364fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>background</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a50d0154212b5e35c680887697745c9d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>lighting</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a2ac9912817c7b344bfad7f35ed9bac61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightingType</type>
      <name>shade</name>
      <anchorfile>interfaceRapicorn_1_1Ambience.html</anchorfile>
      <anchor>a7a090502e7bd54de5b32a9f6c587a31b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TableHandle</name>
    <filename>classRapicorn_1_1TableHandle.html</filename>
    <base>Rapicorn::Table</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a8d4e755044659723bb1af805e3272fd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a8e3521e71f00e70d7ee857ff0b119c8c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>ad8b3844e4f061d9309dfad33dccf4d65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>aa4186da7b9962af4851f541b40cef475</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>aa154384e2a7365ada2ae26a2ffc4b8f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>afc7afa4c910df2a9ed99859c2348187c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>ac056a84c017d1702a76385a52cdd33ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>aa21df531c7a1b00cd088a46504aa3e66</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>adbe70370c197724638b508addf540bb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a280f21a3667fe7effacc403aa72a9469</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_col_used</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a2d8cc49876f9eb22ebb054ea23b426b1</anchor>
      <arglist>(int col)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_row_used</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a6de1bd5d2d9bed8d9d5f2f49bf727df2</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>ac9292f992b308fb6698f824e2b7dc6ba</anchor>
      <arglist>(int n_cols, int n_rows)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_cols</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a9ed826811c71d98fdc8b46781fa37278</anchor>
      <arglist>(int first_col, int n_cols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_rows</name>
      <anchorfile>classRapicorn_1_1TableHandle.html</anchorfile>
      <anchor>a31c791c90cc440d66609e6b267b3932b</anchor>
      <arglist>(int first_row, int n_rows)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>is_col_used</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>aedf5f58ed83dd75baafa524b0d248e4b</anchor>
      <arglist>(int32 col)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>bool</type>
      <name>is_row_used</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>ad564d6a414fda02ebda7579047d4e91e</anchor>
      <arglist>(int32 row)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>resize</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>aa2269d778d64f1008529b554f243deba</anchor>
      <arglist>(int32 n_cols, int32 n_rows)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>insert_cols</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>a7e9618d3f4d6ccdb1204124e97b87a9f</anchor>
      <arglist>(int32 first_col, int32 n_cols)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>insert_rows</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>a55bd6f5a39949b39831759fad435bd16</anchor>
      <arglist>(int32 first_row, int32 n_rows)=0</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>a9fff2ff9e4da96e0034739463dc2818d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>col_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>a546a1802f66a20758cd8d17b304f693a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>row_spacing</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>acda78082294c0edb29f1c647c41994df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_cols</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>a46421a8b4377614b7561e7d16305cd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_rows</name>
      <anchorfile>interfaceRapicorn_1_1Table.html</anchorfile>
      <anchor>ae188b00cb44e0edee85dbdb9499b4eb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::HBoxHandle</name>
    <filename>classRapicorn_1_1HBoxHandle.html</filename>
    <base>Rapicorn::HBox</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxHandle.html</anchorfile>
      <anchor>a1e63d233079e8027dc2d8460cfa888fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxHandle.html</anchorfile>
      <anchor>a9d596e6369926dd58ec26e59b9306bcb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxHandle.html</anchorfile>
      <anchor>ac0641d84785377343705a69fb4699f76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxHandle.html</anchorfile>
      <anchor>a4a1e934342579d91bbd8146d29c055f3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>interfaceRapicorn_1_1HBox.html</anchorfile>
      <anchor>a1758c6cacc8a460eda1128d43244c86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>spacing</name>
      <anchorfile>interfaceRapicorn_1_1HBox.html</anchorfile>
      <anchor>a423e4df2928aac80a71604cd8057d1b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VBoxHandle</name>
    <filename>classRapicorn_1_1VBoxHandle.html</filename>
    <base>Rapicorn::VBox</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxHandle.html</anchorfile>
      <anchor>ad32f456b10dc46d9f861801388253d0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxHandle.html</anchorfile>
      <anchor>aa49c369ed68e6aa78d593f837f040a13</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxHandle.html</anchorfile>
      <anchor>a79c41700de39b13bfec09b1d72af55f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxHandle.html</anchorfile>
      <anchor>a005b933cfe36fa1ac946bec4aef079b7</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>homogeneous</name>
      <anchorfile>interfaceRapicorn_1_1VBox.html</anchorfile>
      <anchor>ab9304f9eb7e7b9d5233a2af2353b14fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>spacing</name>
      <anchorfile>interfaceRapicorn_1_1VBox.html</anchorfile>
      <anchor>a1c1df9a5e80d4f9d0c0051670ede2fa2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaHandle</name>
    <filename>classRapicorn_1_1ButtonAreaHandle.html</filename>
    <base>Rapicorn::ButtonArea</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>ClickType</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a54dfa10b91253e14b03d8d9b906d6e8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a5aea36f467319daacb5df8c11f14ed83</anchor>
      <arglist>(ClickType)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>acd8f21e7e6cc2e9068102e49b904fa9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>ab40a96d3b4ae27a41fc09d15d6d3bc85</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9adcf1dd2556911b2539186fc11a17db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9006fe767e85e6a1b776efcc57318548</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>a9f8b9e7edf1ab0aecd5d333980615059</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaHandle.html</anchorfile>
      <anchor>af36295b9b27eeebf878032c1ba2cf738</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollAreaHandle</name>
    <filename>classRapicorn_1_1ScrollAreaHandle.html</filename>
    <base>Rapicorn::ScrollArea</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>double</type>
      <name>x_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaHandle.html</anchorfile>
      <anchor>a89ae77490fb4f79075cd4d344d504daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaHandle.html</anchorfile>
      <anchor>a0f983f0f9aba369ea7b883c0f80c5086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>classRapicorn_1_1ScrollAreaHandle.html</anchorfile>
      <anchor>ad1428efb5ccd7c0efc229295e6e115b1</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>interfaceRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>ad25d61a5487611d190e517fea41fb901</anchor>
      <arglist>(float64 x, float64 y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderAreaHandle</name>
    <filename>classRapicorn_1_1SliderAreaHandle.html</filename>
    <base>Rapicorn::SliderArea</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaHandle.html</anchorfile>
      <anchor>aa6a5dca66dbeb2465551e97f807c2966</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaHandle.html</anchorfile>
      <anchor>ab1f8db3adcffe81fde025618f3622287</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>AdjustmentSourceType</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaHandle.html</anchorfile>
      <anchor>a85046d84ca7a16ee520578a046116596</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaHandle.html</anchorfile>
      <anchor>aeef883973974a7aa1629184435081aff</anchor>
      <arglist>(AdjustmentSourceType)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>flipped</name>
      <anchorfile>interfaceRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a2d5fb54448a6a19986d5bf25579650d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AdjustmentSourceType</type>
      <name>adjustment_source</name>
      <anchorfile>interfaceRapicorn_1_1SliderArea.html</anchorfile>
      <anchor>a6b92e8d05299c3508274cb189e6fc553</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderTroughHandle</name>
    <filename>classRapicorn_1_1SliderTroughHandle.html</filename>
    <base>Rapicorn::SliderTrough</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderSkidHandle</name>
    <filename>classRapicorn_1_1SliderSkidHandle.html</filename>
    <base>Rapicorn::SliderSkid</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>vertical_skid</name>
      <anchorfile>classRapicorn_1_1SliderSkidHandle.html</anchorfile>
      <anchor>aa3ebf8b3c00879ea8ddd2fafac6c2dce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertical_skid</name>
      <anchorfile>classRapicorn_1_1SliderSkidHandle.html</anchorfile>
      <anchor>ae51a48663ca01d501649ac5674c6b6d7</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>vertical_skid</name>
      <anchorfile>interfaceRapicorn_1_1SliderSkid.html</anchorfile>
      <anchor>ad1d22ff9c716b4618e053aa6292a1b79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrowHandle</name>
    <filename>classRapicorn_1_1ArrowHandle.html</filename>
    <base>Rapicorn::Arrow</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>DirType</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowHandle.html</anchorfile>
      <anchor>a1f1c1cd32579b01d3f8c6f7746c311dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowHandle.html</anchorfile>
      <anchor>acf0562b553832d4669b2f9a1b387d368</anchor>
      <arglist>(DirType)</arglist>
    </member>
    <member kind="function">
      <type>SizePolicyType</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowHandle.html</anchorfile>
      <anchor>a0f428e822cefe473a8ef1174bb07812c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowHandle.html</anchorfile>
      <anchor>a1f755c9934009db180c279744e2f93de</anchor>
      <arglist>(SizePolicyType)</arglist>
    </member>
    <member kind="variable">
      <type>DirType</type>
      <name>arrow_dir</name>
      <anchorfile>interfaceRapicorn_1_1Arrow.html</anchorfile>
      <anchor>a17a76a2ee8c874ae265f9b775028a114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SizePolicyType</type>
      <name>size_policy</name>
      <anchorfile>interfaceRapicorn_1_1Arrow.html</anchorfile>
      <anchor>a9ce3fa7efd844fa8fe34e2c9a7618f58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DotGridHandle</name>
    <filename>classRapicorn_1_1DotGridHandle.html</filename>
    <base>Rapicorn::DotGrid</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>FrameType</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a66f49475f576a6e89fcd6dbb880b2bd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a8484d74e4ec0b1063ad1856205f01a3c</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a89b7a64c14688555f8b65f1a3489e280</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a906117383e933ab248fcd3e1fc6e99c8</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>afd6ae9ce5aa4f921b7bdf8a2de621d62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a01315b2a4ae683093bad9886faccf922</anchor>
      <arglist>(FrameType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a290614df0cb3ef05f0eaf5adb39a0937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a148de043135724f0f57feb61d003652a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>aded52b73de4e3ef5fe25e5dc7c7659d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a2bb131730e5820d6aa58927f33354996</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a8b225c05dff00ae6f3749f0bf3792505</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a068db8af413073e078a96c0864c4905e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>ad8c8ab30b35c2e67a96fa9400c73427f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a65aff6fd1a37dfad7eec5b89863db89d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>ad58447f47a857d572670b07d38b1f844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a527ed599150659b09e1909ac35180fec</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>a96d7a1f268519da0814343ee54317512</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>abddece853c57ca08ba4e5c2aeab30e37</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>FrameType</type>
      <name>current_dot</name>
      <anchorfile>classRapicorn_1_1DotGridHandle.html</anchorfile>
      <anchor>aab0411fc97c578c9dd56ae3ef4a23335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>normal_dot</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a8b185a14fc3244d44d5d462dcb120ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>impressed_dot</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>afbe2d8b36c086435c6dfdb289d22e746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>dot_type</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a11b4be87dc8fda553b456ce0236c3e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_hdots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a61f0363c1ba3efa05d5039b8ebcb5550</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>n_vdots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ad7731c684c82d940f4d0edef326647a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>right_padding_dots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>af2153caf33802e45d3196558453afe79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>top_padding_dots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a4a11a2492d59ae349954b1925eff4582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>left_padding_dots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a40f7122e488fc2b2ae5398af47d24f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>bottom_padding_dots</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>a7985d259486f894f0f1aab293dd8df98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableHandle</name>
    <filename>classRapicorn_1_1DrawableHandle.html</filename>
    <base>Rapicorn::Drawable</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableHandle.html</anchorfile>
      <anchor>abe95123aca7ef8a2e692e234de55d601</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>signal void</type>
      <name>redraw</name>
      <anchorfile>interfaceRapicorn_1_1Drawable.html</anchorfile>
      <anchor>a370b1767c5101cea7402264e564cad3e</anchor>
      <arglist>(int32 x, int32 y, int32 w, int32 h)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>draw_rect</name>
      <anchorfile>interfaceRapicorn_1_1Drawable.html</anchorfile>
      <anchor>a248e15b451cafcf158188dae1b4c86d1</anchor>
      <arglist>(int32 x, int32 y, Pixbuf pixbuf)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageHandle</name>
    <filename>classRapicorn_1_1ImageHandle.html</filename>
    <base>Rapicorn::Image</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageHandle.html</anchorfile>
      <anchor>a42dfd421b514de80928adf02a245a623</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageHandle.html</anchorfile>
      <anchor>a6dbe4478375e516a0772a5ee9802cd22</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Pixbuf</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageHandle.html</anchorfile>
      <anchor>a1b9ab190befbd799ef9dad1951f3d1ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageHandle.html</anchorfile>
      <anchor>ae1eb3aae4e6dbbf86b58d7d187c13a39</anchor>
      <arglist>(const Pixbuf &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>source</name>
      <anchorfile>interfaceRapicorn_1_1Image.html</anchorfile>
      <anchor>af2f1263d08f1bac2ee55fe6fbd08badb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageFrameHandle</name>
    <filename>classRapicorn_1_1ImageFrameHandle.html</filename>
    <base>Rapicorn::ImageFrame</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameHandle.html</anchorfile>
      <anchor>a277c648c339576caf0f031d261f9383c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameHandle.html</anchorfile>
      <anchor>adfa9c76b5af511b75ee34d0152eca771</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameHandle.html</anchorfile>
      <anchor>ab126f98e871835ae353d14e96f5f87f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameHandle.html</anchorfile>
      <anchor>a4944a4bdb585a2ae51c45e3ff588a44f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>element</name>
      <anchorfile>interfaceRapicorn_1_1ImageFrame.html</anchorfile>
      <anchor>a8b9d2be88de20f9b2004cdbf85b1c1fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>overlap_child</name>
      <anchorfile>interfaceRapicorn_1_1ImageFrame.html</anchorfile>
      <anchor>a2396e48e0bc4fa2ca3fdc88358237ac3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::LabelHandle</name>
    <filename>classRapicorn_1_1LabelHandle.html</filename>
    <base>Rapicorn::Label</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelHandle.html</anchorfile>
      <anchor>a855d04bb95aa7908840f741b2c7798f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelHandle.html</anchorfile>
      <anchor>a531827732bbf333fa459db05f2938d46</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelHandle.html</anchorfile>
      <anchor>a8beb93523367f0799e7e77a8ed3225ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelHandle.html</anchorfile>
      <anchor>a8c4467fd3430693264b43df96022be6c</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>plain_text</name>
      <anchorfile>interfaceRapicorn_1_1Label.html</anchorfile>
      <anchor>a14c6e251616fc6b5d1b06d2e0e42bd16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>markup_text</name>
      <anchorfile>interfaceRapicorn_1_1Label.html</anchorfile>
      <anchor>a1a145cd7aa90716ca73e66cfd11fbc66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TextEditorHandle</name>
    <filename>classRapicorn_1_1TextEditorHandle.html</filename>
    <base>Rapicorn::TextEditor</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>aab13bb8d656d9db51c6720852f2f2fd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>aa71dd93c219098dc632ca0c6122e253a</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>afe734e27d7d7f4bffe6a3423d0dd35c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>a67f4d934c93d6d75f0dce702c4f2e111</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>ac877d6c835e49bdf199ed0ba89d59b73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>a79c62ba13915b9e5ec4477eb5137c4a9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>a3e267ffa28ee065bbe3ab558a623d2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorHandle.html</anchorfile>
      <anchor>a1e99d442838dbeed69a8d972b3c5984b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>plain_text</name>
      <anchorfile>interfaceRapicorn_1_1TextEditor.html</anchorfile>
      <anchor>a2f7395791eaa6b6811c48ad063c9ee0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>markup_text</name>
      <anchorfile>interfaceRapicorn_1_1TextEditor.html</anchorfile>
      <anchor>a20591fd9c498230b980d34a8e7de8acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>request_chars</name>
      <anchorfile>interfaceRapicorn_1_1TextEditor.html</anchorfile>
      <anchor>ababb0bb612058ffe75792c7abd2256fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>request_digits</name>
      <anchorfile>interfaceRapicorn_1_1TextEditor.html</anchorfile>
      <anchor>a0ddad1712329dc737aa84a39943fbd86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListRowHandle</name>
    <filename>classRapicorn_1_1WidgetListRowHandle.html</filename>
    <base>Rapicorn::WidgetListRow</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowHandle.html</anchorfile>
      <anchor>a9d1410b195127532dffbb271282ace05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowHandle.html</anchorfile>
      <anchor>afe184f7103d74e69e119a34927f0f67a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowHandle.html</anchorfile>
      <anchor>a315dbd1ad2ea46ae9f956cc15569c502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowHandle.html</anchorfile>
      <anchor>a18af88e4c8d8ca55e4bcc6fa4b6d2140</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>selected</name>
      <anchorfile>interfaceRapicorn_1_1WidgetListRow.html</anchorfile>
      <anchor>a649fd9e250616bed6fac9140b77278d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>row_index</name>
      <anchorfile>interfaceRapicorn_1_1WidgetListRow.html</anchorfile>
      <anchor>a875231d7f451768e6d00c3d8e4103b3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListHandle</name>
    <filename>classRapicorn_1_1WidgetListHandle.html</filename>
    <base>Rapicorn::WidgetList</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>aed7090b53b55a9bdc861f158d26511cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a60e1bc3ee1411aaac71ab0f66d3e28cd</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>aaae58efbf36d32af09404c77cf28adfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a93429417c880c199b50d8c1d158ec08c</anchor>
      <arglist>(SelectionMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a7315823538690e1935ea2408be1acf9f</anchor>
      <arglist>(const BoolSeq &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a13c515761b4b31efbc88c1d6bd5ef303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a0efaef03b17d51ae04c7e33ec5a21746</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListHandle.html</anchorfile>
      <anchor>a6410af7d19d44ee7968ec786e9897974</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>model</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>ae3d8935169a19afac0de5c18f0c044af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>interfaceRapicorn_1_1WidgetList.html</anchorfile>
      <anchor>abe61111abb6930cf32ae1c190bbf68a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationHandle</name>
    <filename>classRapicorn_1_1ApplicationHandle.html</filename>
    <base>Rapicorn::Application</base>
    <base virtualness="virtual">Rapicorn::ObjectHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>acc23e70cad32b2f5945eb5bc3b65326a</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, bool search_vpath=1)</arglist>
    </member>
    <member kind="function">
      <type>StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ab168756e6ba622f34955aca67c8a646d</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factory_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ab3c2c40cf8ea40677ed58d2ea250f8be</anchor>
      <arglist>(const std::string &amp;factory_definition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>af285eac4bbebfb748435fa129404d2c1</anchor>
      <arglist>(const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a7c8ed6a471f3e16b5ebdb85229f5de13</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a6ac374a33efc0597e2a2a8545256f496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a6fa653f00e288a7b548bb51aadbfef0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WindowHandle</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a466acd653a37d0245b5ae86a2a964d20</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>af0e54ddc7a77c8ad8af4bfc3f4ca2dd5</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a80c72261dc973c028eb974bc685d1237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BindableRelayHandle</type>
      <name>create_bindable_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a45fb8a1372e743bf1b9e6ea5e948598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ListModelRelayHandle</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3b0d9abf82550991efb26a56393613ac</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a75911b8d73f015783281ad4aca0d1ac6</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a4b96aeecfd9ca46c6964a0040a75ea7b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a2f22d154a764da296fb78d903d3cbc92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3772006bd98d41c8f2aa941e69902f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Rapicorn::Aida::int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a3b49640e9962dbe43aec83510f4e7bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>run</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>ac9cb9517a3cc5aea867d8ca445ea7abd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>quit</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a945219feeab0347a2f30b7ad072af3d2</anchor>
      <arglist>(int quit_code=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a33109a43597b11ba5be0535298508d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>run_and_exit</name>
      <anchorfile>classRapicorn_1_1ApplicationHandle.html</anchorfile>
      <anchor>a56333dfcac10fe2ef2d6e0aa8d322aa7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdlTestWidgetHandle</name>
    <filename>classRapicorn_1_1IdlTestWidgetHandle.html</filename>
    <base>Rapicorn::IdlTestWidget</base>
    <base virtualness="virtual">Rapicorn::WidgetHandle</base>
    <member kind="function">
      <type>bool</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aaa5d1ce0d5a038e097a0984a875e8b27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a88dda949cab82a4473156eca52d80bf1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>af1b84e8c51673b5b03d30c71b7b71237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a05b94e93ef606483c08a501e906cdacb</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ace6d7c29d733e348f74a3a1621ba9776</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae36fd63d6b21bbb5bdb1685a8ed8a58f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a160f64308e9b04d2513207a8d8f986e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a9bc7121b0ef2af1cb7a66e82ff799107</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aeb6f5d8921cd9694ec717623d83cae0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ac889903a3f2a33fa644756c34378e8a4</anchor>
      <arglist>(TestEnum)</arglist>
    </member>
    <member kind="function">
      <type>Requisition</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ad88bd4fba5dde4fbe465dcf0096b6f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae07b94ec7e38d31e9a553c30e3f17a42</anchor>
      <arglist>(const Requisition &amp;)</arglist>
    </member>
    <member kind="function">
      <type>StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a8625951c889becd76880107655ff6074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>a215c09c2ab3908b6348d715570d7d395</anchor>
      <arglist>(const StringSeq &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IdlTestWidgetHandle</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>ae00a01fb8d9e5789f299ac2f7cd459aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetHandle.html</anchorfile>
      <anchor>aa63442c126d075e58f0acedf5f0fe986</anchor>
      <arglist>(IdlTestWidgetHandle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestBoxHandle</name>
    <filename>classRapicorn_1_1TestBoxHandle.html</filename>
    <base>Rapicorn::TestBox</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxHandle.html</anchorfile>
      <anchor>a01587e25220e692ee64a4a8885f94104</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxHandle.html</anchorfile>
      <anchor>abe0fc6060ecf925a905308a459d38187</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>snapshot_file</name>
      <anchorfile>interfaceRapicorn_1_1TestBox.html</anchorfile>
      <anchor>ab953067b18a780a2194fef5fd2fa9da8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestContainerHandle</name>
    <filename>classRapicorn_1_1TestContainerHandle.html</filename>
    <base>Rapicorn::TestContainer</base>
    <base virtualness="virtual">Rapicorn::ContainerHandle</base>
    <member kind="function">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac03f019fb241d6baa183892bdaed7c00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>af262129e2a8d9f2361915497c749413e</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ad5aee13f3db5e410c68f33c55a9058f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a6dd1d13b3e7c6186affe9ee3f7f8bddb</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ad9520af4d322b4a796f563a8e23a316f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>af8e150ba34ced375b7c9f75e597b8f19</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac80ff903fe2f7248e3ac5925fa9af63a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac60615e8eb8d5efc79a27a179ccddbe6</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>aef3b0d8f0e305c68fac335bc3b1250c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a64761075a6bc54052ae075022af7d1e8</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a4aee960aa2596a6215b527fa1087d527</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a4851da3f2617ea618fefb86be5552641</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ae16aa99e3166c3b0898662033307d677</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>aa338ba21ba5c45b1e09b1ff8889b2848</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a04ec6a9111e39da6ec6c44e7fdfb6517</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ae913bcdb8f4296c50cb457dd49b8deb7</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a1cd8b7e3b018f189e4d5ca769927c9a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a34083da13a3cbfa4fca6aff49b84cd58</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac7b52cf7f3fbe39167c94d5eef494b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac6e673932dbcac991427972d31de7089</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a2106dc6d81f7d90d1807355d3c17e241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a980e7a121b8d9b4e5ae255ab430935da</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>a3884de4f0c811d138f602ad29c7a01c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ad4409b8054300d81077be0ce683aee43</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>ac5e76f28cf27731db45fcec1b1a2bfcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerHandle.html</anchorfile>
      <anchor>adbc8e823126c95cec89a96a1430f93f7</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>value</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a53c434feebcded486f99974665bade47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>assert_value</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a24bc18e201b53d9f04be9af82ad8d0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_left</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a35415ccc4b77363e86adea88b438e22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_right</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a36eb04d4ced046092de20a009be05247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_bottom</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a25cbb0c50dc3b5e6d8b05c9e9f9bbdf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_top</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ad07cd4769cd39c99cf623f5a84798993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_width</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ac7809856b75603a69dc8e6351d39be96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>assert_height</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a63f0a3a7a382d6571910df6463681477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float64</type>
      <name>epsilon</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a14f8f26d5e4499d33caa5866321284ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>paint_allocation</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a727b2ddca061ab52ed78edd6c7a39643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fatal_asserts</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ad3c1734b204a16140b1d4e05544438b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>accu</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>ad4ab46564d3026589ea10419794ec195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>accu_history</name>
      <anchorfile>interfaceRapicorn_1_1TestContainer.html</anchorfile>
      <anchor>a850ac3478ba8b7a8e324c16b1788a9a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Command</name>
    <filename>structRapicorn_1_1Command.html</filename>
    <base>Rapicorn::ReferenceCountable</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CommandList</name>
    <filename>structRapicorn_1_1CommandList.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CommandDataArg</name>
    <filename>structRapicorn_1_1CommandDataArg.html</filename>
    <templarg>Class</templarg>
    <templarg>Data</templarg>
    <base>Rapicorn::Command</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CommandData</name>
    <filename>structRapicorn_1_1CommandData.html</filename>
    <templarg>Class</templarg>
    <templarg>Data</templarg>
    <base>Rapicorn::Command</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CommandArg</name>
    <filename>structRapicorn_1_1CommandArg.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Command</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CommandSimple</name>
    <filename>structRapicorn_1_1CommandSimple.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Command</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ContainerImpl</name>
    <filename>structRapicorn_1_1ContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>a740b3921583ec2c0324b5af3afb3134b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>a8404f563ca00ae7305d3328d2a964a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a3079637fcab2f38e3c15735ab9cb8b3b</anchor>
      <arglist>(Requisition &amp;requisition)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>ae359883ed9913b23fcaf5ac8e50d6d32</anchor>
      <arglist>(Allocation area, bool changed)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SingleContainerImpl</name>
    <filename>classRapicorn_1_1SingleContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AnchorInfo</name>
    <filename>structRapicorn_1_1AnchorInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ResizeContainerImpl</name>
    <filename>classRapicorn_1_1ResizeContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1ResizeContainerImpl.html</anchorfile>
      <anchor>a255a3e7bad4ae9fb4c6a9699ac71c562</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MultiContainerImpl</name>
    <filename>classRapicorn_1_1MultiContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerImpl</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Evaluator</name>
    <filename>structRapicorn_1_1Evaluator.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Event</name>
    <filename>classRapicorn_1_1Event.html</filename>
    <base>Rapicorn::Deletable</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventButton</name>
    <filename>classRapicorn_1_1EventButton.html</filename>
    <base>Rapicorn::Event</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventKey</name>
    <filename>classRapicorn_1_1EventKey.html</filename>
    <base>Rapicorn::Event</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventData</name>
    <filename>classRapicorn_1_1EventData.html</filename>
    <base>Rapicorn::Event</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventWinSize</name>
    <filename>structRapicorn_1_1EventWinSize.html</filename>
    <base>Rapicorn::Event</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EventContext</name>
    <filename>structRapicorn_1_1EventContext.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetFactory</name>
    <filename>classRapicorn_1_1WidgetFactory.html</filename>
    <templarg>Type</templarg>
    <base protection="private">Rapicorn::Factory::WidgetTypeFactory</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Heritage</name>
    <filename>classRapicorn_1_1Heritage.html</filename>
    <base>enable_shared_from_this&lt; Heritage &gt;</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageImpl</name>
    <filename>classRapicorn_1_1ImageImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::ImageIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>a1c6e0d9c5b07b285545803b1b2d55175</anchor>
      <arglist>(const Pixbuf &amp;pixbuf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pixbuf</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>a015b04f8315ad9455a85ae8884a11fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>a1af7267ffb7167b1481f60bd6402d11f</anchor>
      <arglist>(const String &amp;uri)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>a3df1ea0362250fd50572b72a7ff2dd8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>adfacedb585bbb4269dd4b674710dec51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>a602f841cc03085b850bf8246792d5d19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>ad7024bfce2493655c0dc4afda8b201dd</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ImageImpl.html</anchorfile>
      <anchor>af55cfa8d6eda72b9dc49b3782235b6ee</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1WidgetImpl.html</anchorfile>
      <anchor>a0793a90cf0ca86c4cea6e64a0c2266f5</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageFrameImpl</name>
    <filename>classRapicorn_1_1ImageFrameImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ImageFrameIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>a0e0a90779fd4947e80301be4c462c2fb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>accbbe71411d6fa96070155021569712a</anchor>
      <arglist>(const String &amp;id) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>a69ed6d64e76ed857a6c8ee68d303b8e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>a58b0199b9bcfa016eacc449abfc126fa</anchor>
      <arglist>(bool overlap) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>a86a8ad300fc2cd31b36ba2d75528030a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>a8b3dd314c379c732393b348b3a321517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>af105e4a08f28b363754d152e8c7986cc</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ImageFrameImpl.html</anchorfile>
      <anchor>a14043422ff57bfeb693fd7934a6b300c</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Object</name>
    <filename>interfaceRapicorn_1_1Object.html</filename>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::BindableRelay</name>
    <filename>interfaceRapicorn_1_1BindableRelay.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ListModel</name>
    <filename>interfaceRapicorn_1_1ListModel.html</filename>
    <base>Rapicorn::Object</base>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>count</name>
      <anchorfile>interfaceRapicorn_1_1ListModel.html</anchorfile>
      <anchor>aafe7649b2f445e7f8504aa23daa680c2</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ListModelRelay</name>
    <filename>interfaceRapicorn_1_1ListModelRelay.html</filename>
    <base>Rapicorn::Object</base>
    <member kind="function" virtualness="pure">
      <type>ListModel</type>
      <name>model</name>
      <anchorfile>interfaceRapicorn_1_1ListModelRelay.html</anchorfile>
      <anchor>adcbb66f692a772b56944dab997ecd2ae</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Widget</name>
    <filename>interfaceRapicorn_1_1Widget.html</filename>
    <base>Rapicorn::Object</base>
    <member kind="function" virtualness="pure">
      <type>Requisition</type>
      <name>requisition</name>
      <anchorfile>interfaceRapicorn_1_1Widget.html</anchorfile>
      <anchor>a59a4763f7d657c78cb83b55bab97d355</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Container</name>
    <filename>interfaceRapicorn_1_1Container.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Window</name>
    <filename>interfaceRapicorn_1_1Window.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Arrangement</name>
    <filename>interfaceRapicorn_1_1Arrangement.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Alignment</name>
    <filename>interfaceRapicorn_1_1Alignment.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Frame</name>
    <filename>interfaceRapicorn_1_1Frame.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function" virtualness="pure">
      <type>FrameType</type>
      <name>current_frame</name>
      <anchorfile>interfaceRapicorn_1_1Frame.html</anchorfile>
      <anchor>a9640e7cbd3fbaf65641a283c831403b0</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::FocusFrame</name>
    <filename>interfaceRapicorn_1_1FocusFrame.html</filename>
    <base>Rapicorn::Frame</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Ambience</name>
    <filename>interfaceRapicorn_1_1Ambience.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Table</name>
    <filename>interfaceRapicorn_1_1Table.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::HBox</name>
    <filename>interfaceRapicorn_1_1HBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::VBox</name>
    <filename>interfaceRapicorn_1_1VBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ButtonArea</name>
    <filename>interfaceRapicorn_1_1ButtonArea.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ScrollArea</name>
    <filename>interfaceRapicorn_1_1ScrollArea.html</filename>
    <base>Rapicorn::Container</base>
    <member kind="function" virtualness="pure">
      <type>float64</type>
      <name>x_offset</name>
      <anchorfile>interfaceRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>a826408bffa6bd062476758de7af210f4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>float64</type>
      <name>y_offset</name>
      <anchorfile>interfaceRapicorn_1_1ScrollArea.html</anchorfile>
      <anchor>a4181a4594694cdf57e2cedcfa54c4dbe</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::SliderArea</name>
    <filename>interfaceRapicorn_1_1SliderArea.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::SliderTrough</name>
    <filename>interfaceRapicorn_1_1SliderTrough.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::SliderSkid</name>
    <filename>interfaceRapicorn_1_1SliderSkid.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Arrow</name>
    <filename>interfaceRapicorn_1_1Arrow.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::DotGrid</name>
    <filename>interfaceRapicorn_1_1DotGrid.html</filename>
    <base>Rapicorn::Widget</base>
    <member kind="function" virtualness="pure">
      <type>FrameType</type>
      <name>current_dot</name>
      <anchorfile>interfaceRapicorn_1_1DotGrid.html</anchorfile>
      <anchor>ab6c6550388e4e17cef4049be3eb9253b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Drawable</name>
    <filename>interfaceRapicorn_1_1Drawable.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Image</name>
    <filename>interfaceRapicorn_1_1Image.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::ImageFrame</name>
    <filename>interfaceRapicorn_1_1ImageFrame.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Label</name>
    <filename>interfaceRapicorn_1_1Label.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::TextEditor</name>
    <filename>interfaceRapicorn_1_1TextEditor.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::WidgetListRow</name>
    <filename>interfaceRapicorn_1_1WidgetListRow.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::WidgetList</name>
    <filename>interfaceRapicorn_1_1WidgetList.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::Application</name>
    <filename>interfaceRapicorn_1_1Application.html</filename>
    <base>Rapicorn::Object</base>
    <member kind="function">
      <type>bool</type>
      <name>finishable</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a6df48a448dbe85c36a3a4d84c81b6e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>void</type>
      <name>close_all</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a41e6389168d624fd48109725591df5ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>BindableRelay</type>
      <name>create_bindable_relay</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a0148324bdba6c570bcd03a88f3ac8774</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>test_counter_get</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a1459d386bfec79b5a8266459d2335540</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int32</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>interfaceRapicorn_1_1Application.html</anchorfile>
      <anchor>a21864d08deedc894c6319b7c8befc630</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::IdlTestWidget</name>
    <filename>interfaceRapicorn_1_1IdlTestWidget.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::TestBox</name>
    <filename>interfaceRapicorn_1_1TestBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="interface">
    <name>Rapicorn::TestContainer</name>
    <filename>interfaceRapicorn_1_1TestContainer.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AlignmentImpl</name>
    <filename>classRapicorn_1_1AlignmentImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::AlignmentIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>aee74f13574e99af8ad9799a59f37a1cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a73f545e881d5476f088fd0cef6931615</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>abfde5263a6476fed16a8cc9bcb81890e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a9f5fbecf3b6edb19ff4f9d1a8f674414</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a54cf23f77a11935403a2d1e304ead96c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>acda312b0d0c0b69b41d0323e5e479c2f</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>ab32b2ee0dfae129eb593425b6683e7e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a1059a2cfaa1883f1318a6976b204c934</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>ad606d3c58d897df80c8cdc328a7cdfa0</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a94b408746b6de9ff1d56ec99e7d10a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a0fb5529f545b93ea0d1b8ec4cf4fdccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a7fabd6b1890887bfe730a1add670f7f0</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1AlignmentImpl.html</anchorfile>
      <anchor>a11cef512b59b9c4255d24004260dfacd</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::HBoxImpl</name>
    <filename>classRapicorn_1_1HBoxImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TableLayoutImpl</base>
    <base virtualness="virtual">Rapicorn::HBoxIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxImpl.html</anchorfile>
      <anchor>a64722e2417b39dd4ee7f5ca08c0b86d5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxImpl.html</anchorfile>
      <anchor>aad3ba53593c7d7ab72b5ef5fa76c0a58</anchor>
      <arglist>(bool homogeneous_widgets) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxImpl.html</anchorfile>
      <anchor>a6c9c324a66b1b693d4257888c550fc84</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxImpl.html</anchorfile>
      <anchor>a2be2a8edee89a93e38839dbe959ebff9</anchor>
      <arglist>(int cspacing) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>ab6434ea338fe49fcda3564df7f89d036</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>af62885dc43827b42594bdbfdfc070f51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1TableLayoutImpl.html</anchorfile>
      <anchor>a4a9840f0213a306630d84146da2b0698</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1TableLayoutImpl.html</anchorfile>
      <anchor>a39d7804039b2d2a4e61c8e12b87bc05b</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VBoxImpl</name>
    <filename>classRapicorn_1_1VBoxImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TableLayoutImpl</base>
    <base virtualness="virtual">Rapicorn::VBoxIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxImpl.html</anchorfile>
      <anchor>a91bb22596821867d57b37cae0fbf9c42</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxImpl.html</anchorfile>
      <anchor>a2218c82ef4c7509961f469dc26f27951</anchor>
      <arglist>(bool homogeneous_widgets) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxImpl.html</anchorfile>
      <anchor>a6e3751707f0494bcf96fd4a71c0870f1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxImpl.html</anchorfile>
      <anchor>a1d45181bc67d4c2f3c47d68eacbff072</anchor>
      <arglist>(int vspacing) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>a2e89868a37a5bed5cad7c8d0e7f8dd28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>af5653a9fbf68df7996c44bc985b1f07f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListRowImpl</name>
    <filename>classRapicorn_1_1WidgetListRowImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::WidgetListRowIface</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <base virtualness="virtual">Rapicorn::FocusFrameImpl::Client</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowImpl.html</anchorfile>
      <anchor>af5212ea01ef68541a92f7b54220694b3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowImpl.html</anchorfile>
      <anchor>adaa792dd52c7db81d9b7f1c1cc326254</anchor>
      <arglist>(int i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowImpl.html</anchorfile>
      <anchor>ad5664ff3e9db59598a2eb4e15f2332d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowImpl.html</anchorfile>
      <anchor>a7f355e3f24ff596c88618338378edc8a</anchor>
      <arglist>(bool s) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>a6c950e70af0fca90b7e025ee698ee016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>abde0b87d74faf5ede4ff964a727480bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1WidgetListRowImpl.html</anchorfile>
      <anchor>a44c15894395ba5f09593250226bdd29e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ListRow</name>
    <filename>structRapicorn_1_1ListRow.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListImpl</name>
    <filename>classRapicorn_1_1WidgetListImpl.html</filename>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <base virtualness="virtual">Rapicorn::WidgetListIface</base>
    <base virtualness="virtual">Rapicorn::AdjustmentSource</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a581b3a45ad088eb36685bdba2ae37f88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a50b2ab498bf6e0475d36c53d3d284172</anchor>
      <arglist>(const std::string &amp;modelurl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a456d40633c7bde80211e4b0039cfdf79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>afb19201772601d38f5e8395b5eeb62fe</anchor>
      <arglist>(SelectionMode smode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a3fed774b2899aaf81b4dc8d22b0325e3</anchor>
      <arglist>(const BoolSeq &amp;selection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>ac9b451afb04f2cd6021ca75203e15f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a10411a5e4976aee8afdba1644aeba7fc</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a71d823bf7793723c78c9285f68908727</anchor>
      <arglist>(int first, int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a39e85b26f1d66a613e03896fc396d1d7</anchor>
      <arglist>(WidgetImpl *old_toplevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a972397301691a4a8965ccf9f0d3cac48</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>aca21ba91169a90379b82c59e25b02775</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>ab86fa9839ad58a313690616e1458dd55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>af50dd9b5c66905ca48c67a0b4ec74c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1WidgetListImpl.html</anchorfile>
      <anchor>a180d56b429521ef8f2c9a6ced2ec81cd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayImpl</name>
    <filename>classRapicorn_1_1ListModelRelayImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ListModelRelayIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>ae4456af9903a874cebecf563403e942d</anchor>
      <arglist>(const UpdateRequest &amp;urequest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>a063c9e336cf74baa28d1c4bc171d1123</anchor>
      <arglist>(int first, const AnySeq &amp;aseq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ListModelIface *</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayImpl.html</anchorfile>
      <anchor>a3fcdb981bdde0e4e3cde9dfda0f8913f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>aea6afc7c6f69106b8d5aa1eae4b00c4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a92ab5200743bc77ccd33bf0dbfbc1734</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::MemoryListStore</name>
    <filename>classRapicorn_1_1MemoryListStore.html</filename>
    <base virtualness="virtual">Rapicorn::ListModelIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a31f408df0be55bea1ce554896ef40dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1MemoryListStore.html</anchorfile>
      <anchor>a74c9b31795ce0bd08f5cb5d29b9abb36</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a9c0112fa1beb7811eaf6ce8e74cc6244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a36031515a1d347a075be13d9543ff60c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ObjectImpl</name>
    <filename>classRapicorn_1_1ObjectImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base virtualness="virtual">Rapicorn::DataListContainer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ObjectIface.html</anchorfile>
      <anchor>aa5e053d37b03819facc42337cb513434</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ObjectIface.html</anchorfile>
      <anchor>a2f45508061cd5c7fef5dfa2034ad5b55</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AmbienceImpl</name>
    <filename>classRapicorn_1_1AmbienceImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::AmbienceIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a3a22913b21b82450d5ffcda28f36d841</anchor>
      <arglist>(const String &amp;color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a30a1e47da644accc48d18f7cb2d96474</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ac7027b80c0f221c7874674039dcca1ed</anchor>
      <arglist>(const String &amp;color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a34325ada43b5e685998737dc1e47e75f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>aa071033f6a879e209b0b350cb768e2ac</anchor>
      <arglist>(const String &amp;color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a4427516453c486092ddd29748bbf7b5a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a24e1507d733a5bc339f01dea67df9f9d</anchor>
      <arglist>(const String &amp;color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ac3a0fc4e77ddf13328872ee07c0571b3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a3865601582867837b29cbc86dbd52041</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a2645f91201e7dac51d95c45ca592cc3e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>afc35a82f159b82c0bdb9dad6ad398bb2</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a48f94894e2092fe31f555062a1eb2410</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a47ae6f8f3382f83a91731d98d8c70b2c</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a6a850df3e5b5af7b04628c41cd9fb890</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>af854d96692524b423017842b193c1b66</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ab6cfaa59fd5a774fe17146c0a9e78588</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a7d00df23f47c8e973ffbc8101781e370</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a3a6ae8c323b141505457cf68316f3cfb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a1f17b70b55f48fb16ef760f59d0e04e7</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a9747805eb2f86d9f2dbca398ada604a1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ad723bac7d8d5f461d8ed5a85dc8a8575</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ae4b4cbbf73272d81fd59df222a6aca8c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>acc796d18c8f187a70fe4ee88fe131849</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingType</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ae71abb93fe49140d5da554590eb685e3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>a1f8863a173817d1f4b0d0ab94754fd0f</anchor>
      <arglist>(const String &amp;color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>af8d5b12acfbccf4fc54ea34c4da234d8</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1AmbienceImpl.html</anchorfile>
      <anchor>ae064aa320d61603559c5474e2201cb6d</anchor>
      <arglist>(LightingType sh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a6bcd33e4535addc63692f215bbb8e1af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>ac82234b8830ba280518486f7cb82f050</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FrameImpl</name>
    <filename>classRapicorn_1_1FrameImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::FrameIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>current_frame</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>a1cc140201302943df8db0f589e84cae0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>ac3029caa0ff5815d8431e58e9f226555</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>a0cc18ec8c3029053ab578663f20544d4</anchor>
      <arglist>(FrameType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>ab652c1ec5753dac77e56b67a412931b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>adcf1fd7a65b2908080c507da3e96e28e</anchor>
      <arglist>(FrameType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>a273316ad69e9a5fef527c5b82fdd3248</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>ad6ae2e0457e89c9230b71b7d62db53ac</anchor>
      <arglist>(FrameType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>a9695a0df2a4340ade5fa0fac52c75e73</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>a0c41684ecd90d879525f22e19d89a976</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a7477fd27837ade525af4a575e200319b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a21038df5bc7d5b6de433c391dfda1179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>afeea7b10d0621a53abe1ff3290976820</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1FrameImpl.html</anchorfile>
      <anchor>ad042ba138b069195e18d5e66dff5d669</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FocusFrameImpl</name>
    <filename>classRapicorn_1_1FocusFrameImpl.html</filename>
    <base virtualness="virtual">Rapicorn::FrameImpl</base>
    <base virtualness="virtual">Rapicorn::FocusFrameIface</base>
    <class kind="struct">Rapicorn::FocusFrameImpl::Client</class>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>current_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>a26d7fb86cfe4fb0c049fd8588f9c3944</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>aa49fbeab069662a4a4d6842bbe802d77</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>a5a0a5f623e99a3ffbf3eb1a1a7e924da</anchor>
      <arglist>(FrameType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>afc26b2501ebd9625a68076c5b35d39ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>afbc9b8113ef3f019a98924ed66f71462</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a1a2fe675adede1fc8aef0179bbfeb518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a89c0cb3fe132c1950b3e3ab4e42453f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1FocusFrameImpl.html</anchorfile>
      <anchor>adf7092a0d1b93fcf5c50060eefd003fc</anchor>
      <arglist>(WidgetImpl *old_toplevel) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::FocusFrameImpl::Client</name>
    <filename>structRapicorn_1_1FocusFrameImpl_1_1Client.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af55d631e569ee54ecbf321fca1a33b5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a3c62e1605da8461dfbad1eb2b81d247e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CPainter</name>
    <filename>classRapicorn_1_1CPainter.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrowImpl</name>
    <filename>classRapicorn_1_1ArrowImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::ArrowIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>a11dd39fc103c40f4f3ce8e1ad467be58</anchor>
      <arglist>(DirType dir) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DirType</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>af2a2107fe6b5dabb2876378da8d77cac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>afa08b7aacc5221b570b38330d46e26e9</anchor>
      <arglist>(SizePolicyType spol) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SizePolicyType</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>aa6c9b4defe9f8b5293e198b29755201d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>a6ef8557db10864f0b35edec68475b585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>a0d7c0fb036ce04c447d048d67ee48529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>a352fd9284b222e92cc55f767faead8c9</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ArrowImpl.html</anchorfile>
      <anchor>a957c436199a4241ecd56547f3499858c</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DotGridImpl</name>
    <filename>classRapicorn_1_1DotGridImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::DotGridIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a7ff6a4227d7320cdbcf47f4f8965140f</anchor>
      <arglist>(FrameType ft) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>af56bde7cf26ef7dcb3f9d36c4c5a7e83</anchor>
      <arglist>(FrameType ft) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a942d0a6da90622845345114f38cafd22</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>ad34317c78a23c5aa529500d81f2cb86d</anchor>
      <arglist>(FrameType ft) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>ab81a4f71ad574cab406687cdece69f75</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>ad7ba0a91c3258373cb2cf0871a199ba0</anchor>
      <arglist>(int num) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>ad60828166cceb7ecef61be444e8c2531</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a035728368a1d530b9119181910e64a7b</anchor>
      <arglist>(int num) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a4a4304a5f9ac0090d3cfe1ddf563997a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a6f0c5c456ca3f9ab5657c74128cd0a98</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a560aa2c65ef6c2f9ef63bbd7fe5bf5b4</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a42f69ab3e3b334b76085f72011ec0d69</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a9b670c29e5afa2df2208569e3ff9241d</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a2340200e1c8405f5557a4d98ca02f1b4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a165e7ff5029ab3cd28dff6e2c8617b5c</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>adb89930e0edf1cdbb9607ec8cdcda6b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a8ab2f3cea1382b257cacb87f0b8ef720</anchor>
      <arglist>(int c) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FrameType</type>
      <name>current_dot</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>abc2c9d891805f0bb85898c9e54e1ecdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a2f0972828f6ecc986659508d4e675864</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>afe33c716ac68a2b5cbe7992170e46188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a20ede70df4ac858195b6df071d71620c</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1DotGridImpl.html</anchorfile>
      <anchor>a36289a09e808fe39374328f21ac95f0b</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableImpl</name>
    <filename>classRapicorn_1_1DrawableImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::DrawableIface</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a16760e4f3a91040d66039493a855daf3</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a714c2fb5720eab9be237d0965bd0efd8</anchor>
      <arglist>(Requisition &amp;requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1DrawableImpl.html</anchorfile>
      <anchor>a943c2e64bc293364f9d385d6c32701fc</anchor>
      <arglist>(Allocation area, bool changed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>aa9dcff07b4e669136737aa609bb28c02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a62813550b26bcff7ec4c4a44e448a068</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::PixmapT</name>
    <filename>classRapicorn_1_1PixmapT.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>ab7252b0bdad0f9d080b068e84ed0ebc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa7fcf450a245c429f723d5af92f33334</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>abe25377954eba0cc7358fa6a6825e6fe</anchor>
      <arglist>(const Pixbuf &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aec110b66fe52972209eb3a35fdbf100e</anchor>
      <arglist>(Blob &amp;png_blob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixmapT</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>affc5ebed571d22f443942e48b107a9b4</anchor>
      <arglist>(const String &amp;res_png)</arglist>
    </member>
    <member kind="function">
      <type>PixmapT &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa8009887f91249ce190cdbe448767c5c</anchor>
      <arglist>(const Pixbuf &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>ae3d106da3b257a930285cf53d0f183a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a6f2bd245b2d7fe7922586dd6a3e0d790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a3842c5973a8df30727d5b3d9c16c50c3</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_resize</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a2c8afdc63eab0b4ebb4a277691eec0a3</anchor>
      <arglist>(uint w, uint h)</arglist>
    </member>
    <member kind="function">
      <type>const uint32 *</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a21aefbffb61262b9df670581bd877ec6</anchor>
      <arglist>(uint y) const </arglist>
    </member>
    <member kind="function">
      <type>uint32 *</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>acbc024d4e42adb795d4e2ccb441c35be</anchor>
      <arglist>(uint y)</arglist>
    </member>
    <member kind="function">
      <type>uint32 &amp;</type>
      <name>pixel</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a1ccc3db4e7dc55775afeb89ad383a9cc</anchor>
      <arglist>(uint x, uint y)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>pixel</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aa15508bee0ed2cde1b5eb3c8bb234197</anchor>
      <arglist>(uint x, uint y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a8f1eb35037128147b6910649eff230b0</anchor>
      <arglist>(const String &amp;filename, bool tryrepair=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a333b9b37e0bda4a057b79a54978a9bbd</anchor>
      <arglist>(size_t nbytes, const char *bytes, bool tryrepair=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_png</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>af516f7c39c5c92e4772cc2ac3499f038</anchor>
      <arglist>(const String &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_pixstream</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a12d8c1ae9652bd8ed20e805692a1aa77</anchor>
      <arglist>(const uint8 *pixstream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attribute</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aeba5b0057a0ce1517e133e2fe29e5e98</anchor>
      <arglist>(const String &amp;name, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>get_attribute</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>acb6c095ea4a894816f99376691107eeb</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a947047c2078651671b96b9a1747ec22a</anchor>
      <arglist>(const Pixbuf &amp;source, uint sx, uint sy, int swidth, int sheight, uint tx, uint ty)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compare</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>a2ed747fa7ab29ddf1c60ebfbfb58aad9</anchor>
      <arglist>(const Pixbuf &amp;source, uint sx, uint sy, int swidth, int sheight, uint tx, uint ty, double *averrp=NULL, double *maxerrp=NULL, double *nerrp=NULL, double *npixp=NULL) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Pixbuf &amp;</name>
      <anchorfile>classRapicorn_1_1PixmapT.html</anchorfile>
      <anchor>aedeefed9dc14405d7503b2b9bbf896bf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Point</name>
    <filename>classRapicorn_1_1Point.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Rect</name>
    <filename>classRapicorn_1_1Rect.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::IRect</name>
    <filename>structRapicorn_1_1IRect.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Color</name>
    <filename>classRapicorn_1_1Color.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Affine</name>
    <filename>classRapicorn_1_1Affine.html</filename>
    <class kind="struct">Rapicorn::Affine::VectorReturn</class>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Affine::VectorReturn</name>
    <filename>structRapicorn_1_1Affine_1_1VectorReturn.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineIdentity</name>
    <filename>structRapicorn_1_1AffineIdentity.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineHFlip</name>
    <filename>structRapicorn_1_1AffineHFlip.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineVFlip</name>
    <filename>structRapicorn_1_1AffineVFlip.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineTranslate</name>
    <filename>structRapicorn_1_1AffineTranslate.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineScale</name>
    <filename>structRapicorn_1_1AffineScale.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineRotate</name>
    <filename>structRapicorn_1_1AffineRotate.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::AffineShear</name>
    <filename>structRapicorn_1_1AffineShear.html</filename>
    <base>Rapicorn::Affine</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Region</name>
    <filename>classRapicorn_1_1Region.html</filename>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a57e950bd1d141fdaa9cfa3b320eefa78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a0d1158717f5a6bf701200cedc8b6ba95</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aba2e2eaaa7005793e5c8aa69e7fd6561</anchor>
      <arglist>(const Rect &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a9e5746c79c91fee044d219b5595b553b</anchor>
      <arglist>(const Point &amp;pt1, const Point &amp;pt2)</arglist>
    </member>
    <member kind="function">
      <type>Region &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a99a70889891c30cd2963be320f26e8e0</anchor>
      <arglist>(const Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a81bf1bc74231767059c93c91ae05c384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a58cc7698e767a0206d8dc9498684679d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a3efef81ec02f32fce7671b4d00ca0334</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cmp</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aee108e0168d436533632f64cdcb3dd62</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a85e83245ee46391f062beab504a8e652</anchor>
      <arglist>(Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Rect</type>
      <name>extents</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aa5770c3982acbfb592e965548ecf64f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a1c8e61a0e4da8ed2ab470ca2f40ab195</anchor>
      <arglist>(const Point &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a8d715a18f5844efe01f37e34aa9c8a96</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>ContainedType</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>aa71dc805f526e2adbbf4be32182f1e7a</anchor>
      <arglist>(const Rect &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>ContainedType</type>
      <name>contains</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a7f0c9678881610015347d3795749fd3e</anchor>
      <arglist>(const Region &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_rects</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ac2b57916f8f1f6079fe696f04db258f7</anchor>
      <arglist>(vector&lt; Rect &gt; &amp;rects) const </arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>count_rects</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a53a8e6f4746fbb6a8638ab33d359bc2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a71266432f73195c4a9a6a55c739dd5ef</anchor>
      <arglist>(const Rect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ad0821799463434ff4b834465c54d2459</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a08ab3da8619a1137eb2c845cbd5689ae</anchor>
      <arglist>(const Region &amp;subtrahend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersect</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a98ddf419b24ba9363477776f83b5aa36</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exor</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ad9b4bd7f10b156379f1847fd0fc99d94</anchor>
      <arglist>(const Region &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a2e93ba835d5511160481c2dd25353d2d</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affine</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a745584c628f22d02f0923f01a27ad0f0</anchor>
      <arglist>(const Affine &amp;affine)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a2affcc61d9e1308790af81e075e5791a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>string</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>a984aec9119c33f9c38ca7541a6ca329b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Region</name>
      <anchorfile>classRapicorn_1_1Region.html</anchorfile>
      <anchor>ab6dd63809a3554a93f29f7d6e2d40531</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScreenWindow</name>
    <filename>classRapicorn_1_1ScreenWindow.html</filename>
    <base virtualness="virtual">Rapicorn::Deletable</base>
    <base virtualness="virtual">enable_shared_from_this&lt; ScreenWindow &gt;</base>
    <class kind="struct">Rapicorn::ScreenWindow::Config</class>
    <class kind="struct">Rapicorn::ScreenWindow::Setup</class>
    <class kind="struct">Rapicorn::ScreenWindow::State</class>
    <member kind="enumeration">
      <type></type>
      <name>Flags</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODAL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9af9843fb8f6da0acb30024f96363b68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STICKY</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a55128642c743a4165902737a8c2e718f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VMAXIMIZED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a2d778de80af7407e6d3f772beac79852</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HMAXIMIZED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a8dca84f31717fbb368476f7c4fac0bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHADED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a13de66f98cab289dfa347bcf42e36f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SKIP_TASKBAR</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a7b0e72a530975d2d5520ab448ea383da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SKIP_PAGER</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9acca16924a42fe4720c5cdada9445add5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HIDDEN</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a85b2a14bbf8d1c14a437fe8b61dc675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FULLSCREEN</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a4300bfee4475a97ef8f64c0cd39d21bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ABOVE_ALL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9adaa5ece4b3dd88c98a1bb1216c40cfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BELOW_ALL</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a9f733d067b7df4a9c80d359f93acb963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ATTENTION</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9aaf93dad4ec822019ef1c3411fad1062e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FOCUS_DECO</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a718a1f125a9d0067a8f211e206fe1f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DECORATED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a4f38a605d30a9086be7fb4028a5a3dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MINIMIZABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ac6a7bcf4bedaff5c10db038c65d422da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MAXIMIZABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a1711cfcc746e238e3dbbba8e4059663a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DELETABLE</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a56422c9b6011334d791a0ad2eefb89e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACCEPT_FOCUS</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ad7459de7cdc2769aaa2434e9191a2d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNFOCUSED</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9ab4bc1f7628a660953b5e43f14af3288d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ICONIFY</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>afe6f3b032c781ced823f9224b79f28e9a43f1ad40a619495dd1ebe37c2537593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>get_state</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>aa565727a7db315e5358b8c87ee61c0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>aaa05966a29db85f2fc6d5e8085fae8fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a1cdbd404032e77624338254e5ad42029</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5656084617aa47c790860c0da634f52c</anchor>
      <arglist>(bool user_activation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewable</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ac87eba9e37da9c733e755cdbad759b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a1d5fbf6a81c97d151bf15f830852dbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a795afb0c10daee069268e61a5c6a7d47</anchor>
      <arglist>(const Config &amp;config, bool sizeevent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blit_surface</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ab5d90b5ef8627f98550d439f29f898f3</anchor>
      <arglist>(cairo_surface_t *surface, const Rapicorn::Region &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_user_move</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a275816d7f9c1a880044e48affacece0c</anchor>
      <arglist>(uint button, double root_x, double root_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_user_resize</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>ab499c5e9518a6b130044d3dbf23e2f1a</anchor>
      <arglist>(uint button, double root_x, double root_y, AnchorType edge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_content_owner</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>add3a71ba8ef0c846768073e899da2e73</anchor>
      <arglist>(ContentSourceType source, uint64 nonce, const StringVector &amp;data_types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_content</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a88a56e146c5c4ccde5d9d1956f2c6a20</anchor>
      <arglist>(ContentSourceType source, uint64 nonce, const String &amp;data_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>provide_content</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a541bb86dc12086ffe170da209905d84b</anchor>
      <arglist>(const String &amp;data_type, const String &amp;data, uint64 request_id)</arglist>
    </member>
    <member kind="function">
      <type>Event *</type>
      <name>pop_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a98e950d83cd0d6a35405248c75c2e701</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a0731e6b63a2b1893b2ddcf87e653d402</anchor>
      <arglist>(Event *event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5b6f921b11e21ec195164d755ba51fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event_wakeup</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a3cd4fdee9123512e7477370e07e59dfa</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;wakeup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peek_events</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>affd8b6cfe94e9c3d4b0c8cadf3535e17</anchor>
      <arglist>(const std::function&lt; bool(Event *)&gt; &amp;pred)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>flags_name</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a5991ad1a47651a704250fb682199ffb7</anchor>
      <arglist>(uint64 flags, String combo=&quot;,&quot;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual ScreenDriver &amp;</type>
      <name>screen_driver_async</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a34e2c6438e23b6a04a0ed6fad79a669b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>enqueue_event</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a15f48a74e41fb070a028a07efeecc56d</anchor>
      <arglist>(Event *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>update_state</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a185f20b0210b3ca672eebef20c722d67</anchor>
      <arglist>(const State &amp;state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_command</name>
      <anchorfile>classRapicorn_1_1ScreenWindow.html</anchorfile>
      <anchor>a2e24dc945e7249a376e0247b6f319c91</anchor>
      <arglist>(ScreenCommand *command)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::Config</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1Config.html</filename>
    <member kind="variable">
      <type>String</type>
      <name>title</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>adcd6a2f5d638cec9cfc94ef23c431ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>alias</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>ab37410d698b3e52f3857e9cead16b48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>a7a46891c562145b9a27cdb3912965664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>request_height</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>ac0783fd42143b4929e6b3644ad55bfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height_inc</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Config.html</anchorfile>
      <anchor>a8d82e03827c69d63860359f0a4d1324a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::Setup</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1Setup.html</filename>
    <member kind="variable">
      <type>WindowType</type>
      <name>window_type</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>aedb7180c0c9f78e7f45dc5585f48c911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Flags</type>
      <name>request_flags</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>acb4bb6f8fd34ee680c5d3db56bbe7135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>session_role</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1Setup.html</anchorfile>
      <anchor>a70508c24b8e76af5f0525af7b3e74203</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenWindow::State</name>
    <filename>structRapicorn_1_1ScreenWindow_1_1State.html</filename>
    <member kind="variable">
      <type>WindowType</type>
      <name>window_type</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a18b481b7c6003b4ca71c0c1a78442733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Flags</type>
      <name>window_flags</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>accffef589d670dce3b74d0f69cc43452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>visible_title</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a3e5d4ae18cee855cbef3f6221e8bbaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>visible_alias</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a128ace33c7c382f8cb51249b55b241cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ac0826b7088ca3991ec1289ff4a001411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>root_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>ade5e8337ed067eb90428ec67dec3beec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>deco_y</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>abc8f37c323c5e5bc48d156eb790dd6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>a08040744ca2a4dbfbb30a81c2310644e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>active</name>
      <anchorfile>structRapicorn_1_1ScreenWindow_1_1State.html</anchorfile>
      <anchor>af78220632c4a15a7a5c57f1be4d9e036</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenCommand</name>
    <filename>structRapicorn_1_1ScreenCommand.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScreenDriver</name>
    <filename>classRapicorn_1_1ScreenDriver.html</filename>
    <member kind="function">
      <type>ScreenWindow *</type>
      <name>create_screen_window</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>ac2851c2222b86763077c2c936cd111f5</anchor>
      <arglist>(const ScreenWindow::Setup &amp;setup, const ScreenWindow::Config &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScreenDriver *</type>
      <name>retrieve_screen_driver</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a2b31731266360cb3e19d0ffc9ad000e1</anchor>
      <arglist>(const String &amp;backend_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>driver_priority_lesser</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>aaf9ff7379663d9166051fe8b0ca8ed1c</anchor>
      <arglist>(const ScreenDriver *d1, const ScreenDriver *d2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ScreenDriver</name>
      <anchorfile>classRapicorn_1_1ScreenDriver.html</anchorfile>
      <anchor>a174bf7d8b45e4649309d03aa5107df03</anchor>
      <arglist>(const String &amp;name, int priority=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ScreenDriverFactory</name>
    <filename>structRapicorn_1_1ScreenDriverFactory.html</filename>
    <templarg>DriverImpl</templarg>
    <base>Rapicorn::ScreenDriver</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollAreaImpl</name>
    <filename>classRapicorn_1_1ScrollAreaImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::ScrollAreaIface</base>
    <base virtualness="virtual">Rapicorn::AdjustmentSource</base>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>x_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>a2396c75e650877c6c01410879687336e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>y_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>a2fc671d3d7ed3e1931c353324467e77f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scroll_to</name>
      <anchorfile>classRapicorn_1_1ScrollAreaImpl.html</anchorfile>
      <anchor>a755caa5abcce20e71fb2076c7eee446d</anchor>
      <arglist>(double x, double y) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1ScrollAreaIface.html</anchorfile>
      <anchor>a796a68eab9a064baeb6aea9a4d567284</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1ScrollAreaIface.html</anchorfile>
      <anchor>a00432036da97016bfa2032e61a392c6a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollPortImpl</name>
    <filename>classRapicorn_1_1ScrollPortImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ViewportImpl</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1ScrollPortImpl.html</anchorfile>
      <anchor>a933ae8ef175ed799ce235bb29771f952</anchor>
      <arglist>(WidgetImpl *old_toplevel) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1ScrollPortImpl.html</anchorfile>
      <anchor>a2ab74df4fe17bdbebaae8487d231de1a</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ObjectIface</name>
    <filename>classRapicorn_1_1ObjectIface.html</filename>
    <base virtualness="virtual">Rapicorn::BaseObject</base>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::BindableRelayIface</name>
    <filename>classRapicorn_1_1BindableRelayIface.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base>Rapicorn::BindableRelay</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>report_notify</name>
      <anchorfile>classRapicorn_1_1BindableRelayIface.html</anchorfile>
      <anchor>afcf9e66b9306f866dc80d551ff786498</anchor>
      <arglist>(const std::string &amp;bpath)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelIface</name>
    <filename>classRapicorn_1_1ListModelIface.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base>Rapicorn::ListModel</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>a3c164a22c1ee7fa841e7bd2b7c7007b8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rapicorn::Aida::Any</type>
      <name>row</name>
      <anchorfile>classRapicorn_1_1ListModelIface.html</anchorfile>
      <anchor>ae16e513da76e59caee5e210dbf022112</anchor>
      <arglist>(int index)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ListModelRelayIface</name>
    <filename>classRapicorn_1_1ListModelRelayIface.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base>Rapicorn::ListModelRelay</base>
    <member kind="function" virtualness="pure">
      <type>virtual ListModelIface *</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a2942553b7562f7cf01f24b7a74b5db55</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fill</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>ac467400f7dee03d06cb93f9c59986548</anchor>
      <arglist>(int first, const AnySeq &amp;asq)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classRapicorn_1_1ListModelRelayIface.html</anchorfile>
      <anchor>a53243ea54a1cbc0f6ce65562b003986f</anchor>
      <arglist>(const UpdateRequest &amp;urequest)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetIface</name>
    <filename>classRapicorn_1_1WidgetIface.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base>Rapicorn::Widget</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ade058d656417eca030612248fb14ac80</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a5d7886b37c3d7379cb5fbe2cc2af6d7e</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a441e10ff642e5bcb4cc7035b922ca28a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visible</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae3aee6c8ee758099ba027b361aafb3c0</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ab8dcb1979ef21d7c626f8021408b29f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sensitive</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a5db453fda23aa830c52a37fd75605c6b</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ColorSchemeType</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>abcab2e530e416dadcc2702925178c53a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>color_scheme</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af5bcbc406fb916087ff3982869657cc3</anchor>
      <arglist>(ColorSchemeType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>adc22bec92fb89535613d5bff9484b042</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a85dc3067fb14288a1d8e7e1f19fad902</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7c2f3c680ca835bcc0064813f5955013</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vsize_group</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a44af16685bf6a7b9201108f8e7a8c437</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a00a3bdc5974cf66bda3a14e9ef695750</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>width</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae5cf219baae03bf4855431fb9abebc56</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a48db13dd07489d581d37f6b58b95f250</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>height</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a127bd1fae7d81a1ad6c5f6c63d5dbf84</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aaca6fcd0d2b3381aef3800dea43de255</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aa52911b711aeac836b0a470a09dc7b45</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ab7d785b59da5649773628e622bfab9a8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vexpand</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae65c8f5da4817462eb928dca5033f800</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae1eedc671b859340c259bd663b5fa4ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aff98b8f4f022f9ea92a56107c5529134</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7e73ce2794d2d232ef5812af0ea9f753</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vspread</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a11a047267652405c654221dfd6237af1</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae792fdf57d9142a56e6afe748ece8e5c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7c913afb9d9850f626dbb3b36e00a87f</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afe1ef30f03bc7cda3610dea3fdc4d4d4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vshrink</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2d89d5dd92e1ac9f323aaf1e3c41ea20</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a3d185e623ce8dfdf5a91653387537775</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afa4d9e1373e47552d6c8545e61afddc4</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>afd54891636472e35a8f771dfca18d258</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a12c4f533d8805bdccc0b0339d899a5e5</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2ca58f915de9093fdae11262798f8e98</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vposition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a606dc72ffe37ed3159b9f9ab44e0c0d7</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a29dc1aeeeebe027b5e98873ac961dace</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vspan</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7f90231127d1856b4ff3bdf4df4b3aff</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aa653b5647439a1ea028cbcc6b8a6898a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aca2261e8e5d6eecb67f2e082fd0b10c7</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae3af23cecc4cfe1eaec32cc67b85d864</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vanchor</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a03b9f6a7486b6b9f86c0c0e57f290a94</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ac9ce02323c3cb32cff9181cde7963826</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>halign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a0c26e42945b2f507bd2cdbc74b5941c8</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a60accdd6c5498f8ae78b674535d45bbb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ae59c1f569d1e05440650cbe3e18c39bc</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a16bb6d16e8c323a8268d50f81c1181b2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>valign</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a22c1a4e9e63c0415cd22b0b5404685e4</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aec25257ff86569745d741a41c0849e3c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vscale</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a0e735afa8bb2eef254c98eb16488f66c</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a6b3cd63ecb925563b6b7d9b1460c117b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a2c53083ec4e30920d2969633826b076b</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a64dcf392ba0e27a67e2bcd0600088121</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>af19a6f55463cef3a3b31083cbf5cacb2</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad0c843b3b4c1c679b9881efdc5646276</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a4eb85d69a416f0f81a21a85d1297481d</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a1fe4effbb3b0aba1ecf5751df2cd2b86</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_spacing</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a9a6297f1c9f78c2c9ab08ef5bf86a354</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Requisition</type>
      <name>requisition</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aaa41393db1bc236807181044c341b2a4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>match_selector</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7e1dbe8df38481870c016c6bc117b3a2</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>query_selector</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad207b0ab601eabe7834112d0aa21c2a3</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetSeq</type>
      <name>query_selector_all</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>aee8fd54c3642e9c032b460fe0eb11a93</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>query_selector_unique</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a7ee5dc67ae36b69357ca226b6cf1feef</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>data_context</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>ad52099ec4385a87a8de20727caf4e1d8</anchor>
      <arglist>(ObjectIface &amp;context)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rapicorn::Aida::Any</type>
      <name>get_user_data</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a966d80d5bd280c1a17b3d9448eae53f8</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>test_dump</name>
      <anchorfile>classRapicorn_1_1WidgetIface.html</anchorfile>
      <anchor>a4c89eea50f9c2ecc0ddd525f36f50176</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ContainerIface</name>
    <filename>classRapicorn_1_1ContainerIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::Container</base>
    <member kind="function" virtualness="pure">
      <type>virtual WidgetIface *</type>
      <name>create_widget</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>adebe86e77162e233d92e989244fe94e4</anchor>
      <arglist>(const std::string &amp;widget_identifier, const StringSeq &amp;args=StringSeq())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_widget</name>
      <anchorfile>classRapicorn_1_1ContainerIface.html</anchorfile>
      <anchor>aea1328eead5f1b16da12d191f0184483</anchor>
      <arglist>(WidgetIface &amp;child)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowIface</name>
    <filename>classRapicorn_1_1WindowIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Window</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ad3516cc66804f121a3893f030ee436f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>af7dfb0007279b5f1110f77e200d74f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a499ba6cbbefc6a0a1ab4dd5a1b6eae4c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a6bc733ee805a639396b6be83a91a3a5c</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae2765657cb8df58991d61ce3e80c1cfb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aea8a4a2169a1e2c3b0cfda89cb4cc3a3</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>screen_viewable</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae89ad19cbd349b0f7d7bbeeb0d69734e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a84a6a33587eb1e72d97f747134b93083</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ae74ea8a8814a877061bb530f59ec3b3e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aaaf0274425cbfc26d24ffaef6b30fe61</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>acc9fb85290fae1c2e5cab93c6bfcb5fa</anchor>
      <arglist>(const std::string &amp;pngname)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>a89a3c411d8ff0831b4cb93b6dce9160e</anchor>
      <arglist>(WidgetIface &amp;widget, int button, double xalign=0.5, double yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>aa6063bb00c0c41a44e5d302f55c84e79</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>afa8946635980cc04608b006d0a945277</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowIface.html</anchorfile>
      <anchor>ad325cc9ea3599ac183188d99bd111f8f</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrangementIface</name>
    <filename>classRapicorn_1_1ArrangementIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Arrangement</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a43d114ba6a2bdd850b67c78e14992f8e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a2f0a38090751beb1486f89eebb9d9ef7</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a95e4d11575a699979cbc01b8c53ce42e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>yorigin</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a9d29d37c8b31c1d5b95cc726e0fecacc</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a140099e49ca4f50f2b04cd0c37b2b1dc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>origin_hanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>afa9e8287b012975381ceec341579f552</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>a32cee7836941a8f75976108e38b33384</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>origin_vanchor</name>
      <anchorfile>classRapicorn_1_1ArrangementIface.html</anchorfile>
      <anchor>aa7d1cfd993f2bed9bf91d14aea76ea49</anchor>
      <arglist>(double)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AlignmentIface</name>
    <filename>classRapicorn_1_1AlignmentIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Alignment</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a33748c6b028c77c9d71ae8c0acc4c3d3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a9252690d5d6b8eff67d07ebc258f475b</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a8a40a9dc4c9bc18e8612386be97a4f59</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a8e12964e9d387ee746829ee08f356e83</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>acd89dd62e0a19abb3634f0ae1f81e362</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a5aa31d6f0daf88d79e7267f0761be90c</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a5c33b1a417cce612f453a4673bc604f4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a0fcc68980db47a013fd489ddae28c43e</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>a5a90a82437cd364f48bd40b11de35085</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>padding</name>
      <anchorfile>classRapicorn_1_1AlignmentIface.html</anchorfile>
      <anchor>afbed352d67112d5dbfcae4ba782401ba</anchor>
      <arglist>(int)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FrameIface</name>
    <filename>classRapicorn_1_1FrameIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Frame</base>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>ad9f922f5a1c39b869c96f68a38dcd268</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_frame</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a9761a0226e8bb0465b93d119a946143e</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a999b6cd8a36c5f94cad7556f4b5e1756</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_frame</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a035f9c280bce85fcd121ec2c1408adc7</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>ab86a58f03f83ebfdc84a7bd72f9fb88b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>frame_type</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>ab628e71cc13491c7e13ff91ad0486e81</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>aa2eb119a476069e8c6b60e5b5a453a8e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>aa705289129ba3808b07cb379c1b4d028</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>current_frame</name>
      <anchorfile>classRapicorn_1_1FrameIface.html</anchorfile>
      <anchor>a49587b3300ec01150b5ad81303f1f0f7</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::FocusFrameIface</name>
    <filename>classRapicorn_1_1FocusFrameIface.html</filename>
    <base virtualness="virtual">Rapicorn::FrameIface</base>
    <base>Rapicorn::FocusFrame</base>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a8fd0a7047f60846b1afb769b3da0af2c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>focus_frame</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a457a5154c39bd1c33f6aa0f0c61c4219</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a17e32fdc6a9895f3cc65d66ecdf41676</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tight_focus</name>
      <anchorfile>classRapicorn_1_1FocusFrameIface.html</anchorfile>
      <anchor>a1cc856e07a91e84ceb1b171508ebfaa7</anchor>
      <arglist>(bool)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::AmbienceIface</name>
    <filename>classRapicorn_1_1AmbienceIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Ambience</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>acc6c12029791ccaa0d3150632bea2025</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>ad963772884b36a3a4efb64b9280e99ab</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a80a5b68d217c18d0c22b8183f89decc7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>afbd1163a10923a1713377bb7e06f074a</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>aceb0ad9b4d0d10665a141dc581b2e9c0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a853e314f5246805988a6be28eeb11b1e</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>af33c555b8d40ff70b40d5b6ae0aaffd0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a6e0f2c3e0ca030baa9389e639a2fd4eb</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>aff224fc0854061ba8d6832e8b030b95e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>aedb211cd46297113e1e8b84193715f40</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a849a57c22b90eed27ca41f48603d948b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a1c169eff1cc9ea7bdc7c26035a504066</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>afd98af67a1a66fcdd384cd9fbefc57df</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a3f71bfe6ba7d3e4da398f6d8afa83cc0</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a8625ae1d141318ee9172153c9cc90d11</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>af5d0bdb387def461147a16cdf8850498</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a1410eabbee3691c54cca73718c16726a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a8478a9baa99811c3c2e06482d3b11733</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a69800bad4bcc10a660e38d5f31a5873a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prelight_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a9659eeb38bb8ea5a86ab48130a70b687</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a3a4cea086b5faa787dfba7d12a5d180d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a481d17bc5ddb8a2bd6cc39a42e64f5c6</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a0706aae9bb047e16b3fa3760c5e42d9e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insensitive_shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a74a53908bedcbedfa2a88f7886e01204</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>ab59076915fa094e29b25a40856a01564</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>background</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>ade43b1dd92bd1ed2f7b22c66d74311c1</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a566699b495182a60829db885660197be</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lighting</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>aaa4d11cd197b7723eb80008e6b223be4</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LightingType</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a408c1769d50a4f1a695914088a48db80</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>shade</name>
      <anchorfile>classRapicorn_1_1AmbienceIface.html</anchorfile>
      <anchor>a1069dda80df39ccfb3df42af9db832d7</anchor>
      <arglist>(LightingType)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TableIface</name>
    <filename>classRapicorn_1_1TableIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Table</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a58636cb5718158962dcb784ba4c6bebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>ac150234c689341ca4a78abb82c94c77c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>ad72d478eddfc567a59d93f0ad910c911</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a9b745f2a8befb9a9da0186d238517e65</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>aee41f4d757be3d6d2c9d59ce80719153</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a427786e02bcb0ff6708d23da9607bb92</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a7ca0c184691d46834346ba4b3f1d73c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a1d50f17d47cb87f57d3ab8a9d21dd798</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a2fd69ad9d8fcfe0eeb133c7a57c8c9fd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>adfdc4addad21443db91395808a1b55f1</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>acb438264e76aa6747bf7f6f4665d9bb5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a0ee6a436b9816ba61e2a92354984c96f</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_col_used</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a057725b9e7a60c9658febecfd119eb0f</anchor>
      <arglist>(int col)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_row_used</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a343b6340324c06a392d96a3de6c5ca2e</anchor>
      <arglist>(int row)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a66863032ff80540b59fcded743c3a706</anchor>
      <arglist>(int n_cols, int n_rows)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert_cols</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>a28b2bcbfaa9c6613c6839a327628efe0</anchor>
      <arglist>(int first_col, int n_cols)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insert_rows</name>
      <anchorfile>classRapicorn_1_1TableIface.html</anchorfile>
      <anchor>aebec32bc319920a4be742ff9c8cdd446</anchor>
      <arglist>(int first_row, int n_rows)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::HBoxIface</name>
    <filename>classRapicorn_1_1HBoxIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::HBox</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>ae93eba9c4a0b24107d4f4ac5a5278fda</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>a1e4d0f949115158cef87084cd2fff7a0</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>af5f63dd7452ce7d4339a2c35e38a1917</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1HBoxIface.html</anchorfile>
      <anchor>a618b271f6c94fb33794dfc1692368bb2</anchor>
      <arglist>(int)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::VBoxIface</name>
    <filename>classRapicorn_1_1VBoxIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::VBox</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>a61200b81304c58c7c15c51ed8a62883f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>a12ae4499bc998e7a21b4c428c3bd6b16</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>a813a162362efd50f21f2f85052821e43</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>spacing</name>
      <anchorfile>classRapicorn_1_1VBoxIface.html</anchorfile>
      <anchor>a1a572d9faad8f4b300e04085a3f1693d</anchor>
      <arglist>(int)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ButtonAreaIface</name>
    <filename>classRapicorn_1_1ButtonAreaIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::ButtonArea</base>
    <member kind="function" virtualness="pure">
      <type>virtual ClickType</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a659ac0460e2d7746d0cb8be08de5ed31</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>click_type</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a7fbf0d807a6d158c216b7f2514330bc7</anchor>
      <arglist>(ClickType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a16569dd0372145b09ecb68d511e3ee86</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a44877222570fe8d462c33e74d621ba7d</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a7a44732317968c2109dee300b166fa18</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click2</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a60bf6d488087f0bab2a32664c9e515fe</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>abc70e0cef810642df36f22e256cb874a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_click3</name>
      <anchorfile>classRapicorn_1_1ButtonAreaIface.html</anchorfile>
      <anchor>a1ded6be447c200102100ef1f6a9833c8</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ScrollAreaIface</name>
    <filename>classRapicorn_1_1ScrollAreaIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::ScrollArea</base>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>x_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaIface.html</anchorfile>
      <anchor>a896a744477f4faec533336ba6102b959</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>y_offset</name>
      <anchorfile>classRapicorn_1_1ScrollAreaIface.html</anchorfile>
      <anchor>a3a845cd5f12958b57fe382803507018d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scroll_to</name>
      <anchorfile>classRapicorn_1_1ScrollAreaIface.html</anchorfile>
      <anchor>a02bc055c18e61d8dae6d2024d2c5297d</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderAreaIface</name>
    <filename>classRapicorn_1_1SliderAreaIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::SliderArea</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>a017d1b32df678ffcd4ba1dd3844f6a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>ae3be83015e41fa1f96872d3de1fc9452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>a013e3e14d4c778ec0e88b3b9a099f01f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>a7778160551ec4c4997c29cc8606bc397</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AdjustmentSourceType</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>a44338f1caf987ad99191af2a6c3f6b37</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaIface.html</anchorfile>
      <anchor>a57dd6040de8d6a10798ff404182ad147</anchor>
      <arglist>(AdjustmentSourceType)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderTroughIface</name>
    <filename>classRapicorn_1_1SliderTroughIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::SliderTrough</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1SliderTroughIface.html</anchorfile>
      <anchor>a7e8ee7cb87e3c96f3a3e811f38e43a88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1SliderTroughIface.html</anchorfile>
      <anchor>ad9bcd87f4c218075a7085c1277c80cb6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderSkidIface</name>
    <filename>classRapicorn_1_1SliderSkidIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::SliderSkid</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1SliderSkidIface.html</anchorfile>
      <anchor>a32ca866b763c7f5d7d7ef77f982b88bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1SliderSkidIface.html</anchorfile>
      <anchor>a47573089a9418e01d97e1bb904d1bbe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vertical_skid</name>
      <anchorfile>classRapicorn_1_1SliderSkidIface.html</anchorfile>
      <anchor>a55103cd4ace18f521f7ca98b0c734755</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>vertical_skid</name>
      <anchorfile>classRapicorn_1_1SliderSkidIface.html</anchorfile>
      <anchor>adb1c6f31f7cbc8f3d844a041a76a5ab4</anchor>
      <arglist>(bool)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ArrowIface</name>
    <filename>classRapicorn_1_1ArrowIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::Arrow</base>
    <member kind="function" virtualness="pure">
      <type>virtual DirType</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>a174038e04df6407b1e8859da234860bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>arrow_dir</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>ae9dc0088b9295b3188daac50128ead73</anchor>
      <arglist>(DirType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SizePolicyType</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>ab3c0385284ab77c0b3f4217e6768ff0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>size_policy</name>
      <anchorfile>classRapicorn_1_1ArrowIface.html</anchorfile>
      <anchor>a2b6fcd36904d278f6b1a733b641eb687</anchor>
      <arglist>(SizePolicyType)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DotGridIface</name>
    <filename>classRapicorn_1_1DotGridIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::DotGrid</base>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>abb84eef2affdd7a2ad6a8b966265f8d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normal_dot</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>aa3dd1e5d84203e1b5da0b4d2391e0f99</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>aa3d95511f7a30b4e2a7cf24eecbbaa2d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>impressed_dot</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a1256d5626ff9694ac0b6e5f750373a66</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>ac7ea346fbb98edb3ff66de8c17e38b7f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot_type</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a63276b43af511a691b65354d9c6200f6</anchor>
      <arglist>(FrameType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a6259a2364d18422ed06555144f554139</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_hdots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a9f3fed2271cceb2489b4512c32e3aa51</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>af4fa52012d43cfad8f612d53b47addb0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>n_vdots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a21e4f0617e9d1d03d437f0510bf74ace</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a9c17fb381655ea1b5503e1471db571af</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>right_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a6c0fecf406bf72ad150a68ff3d16fb30</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a94de32eb5b5d4389a3c25e0d0193b190</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>top_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>adcfc0d202c486ec1eb1a705351363834</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>aca707986ae3c413b3e6e407207838bf9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>left_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>aa94122e619f16f73200f1e4a161f10d9</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>ad109d49e81f568007db29cbd3b13c99b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bottom_padding_dots</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a8636033ad1ec82db94e0b3f9957cf7c5</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FrameType</type>
      <name>current_dot</name>
      <anchorfile>classRapicorn_1_1DotGridIface.html</anchorfile>
      <anchor>a1f812b63e40d3a4020b558849dca724b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::DrawableIface</name>
    <filename>classRapicorn_1_1DrawableIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::Drawable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw_rect</name>
      <anchorfile>classRapicorn_1_1DrawableIface.html</anchorfile>
      <anchor>a9fe3c0661499aa840f4d071742acf1d6</anchor>
      <arglist>(int x, int y, const Pixbuf &amp;pixbuf)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageIface</name>
    <filename>classRapicorn_1_1ImageIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::Image</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>a5a0d72cfb6bc186e1e9c6f3ffc5b0cf3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>source</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>aedd4380b7e531c9a02bdf36e67ac9d25</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pixbuf</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>a7c351d3209573e92e1d35e24f7184ca3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pixbuf</name>
      <anchorfile>classRapicorn_1_1ImageIface.html</anchorfile>
      <anchor>a0d5c63f2a898cf18ce59d4aa1e856584</anchor>
      <arglist>(const Pixbuf &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ImageFrameIface</name>
    <filename>classRapicorn_1_1ImageFrameIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::ImageFrame</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>ace29d188310316edaac9379309c4d6bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>element</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>a6c2bb4d4f7c85c53f324e32ff21dab58</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>a4ee302f29b71eadb9f1ec3485551d55f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>overlap_child</name>
      <anchorfile>classRapicorn_1_1ImageFrameIface.html</anchorfile>
      <anchor>a5cc6a653b9c6d97be7875939ce083e4c</anchor>
      <arglist>(bool)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::LabelIface</name>
    <filename>classRapicorn_1_1LabelIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::Label</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>aec23e5093099462e95e66402d00301f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>a3055a572546277adf5799266ba425fbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>a34254ccd17feae644bbfea2595387960</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>a09e480b1ece87998a2d7506f06ad2860</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>afea8f2edf5d447843a82f2e0c17ceebd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelIface.html</anchorfile>
      <anchor>a84ec3f4bb565ef8da95f787a422e61d7</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TextEditorIface</name>
    <filename>classRapicorn_1_1TextEditorIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::TextEditor</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a3cc7b9b64f0d0430854f8bee451f6215</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>ae17cf82e22bc21a4599a98bb5f8a4f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>af5f4e2725c6eb965921230f763c33539</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a70b3f02291c5c14b155964347281115e</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a344dabf70dcad48cd5865c90816cf0d1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a447b2d24978eeeab905d2ae2e123c61a</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a57a9a0c2513bcce05187e0dfd8bec1a0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a70c0517da5d6c0a677a05de32de2ded3</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a727eb51524e795869dda1844d7dc8085</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorIface.html</anchorfile>
      <anchor>a3db10378e1bab48d82f0da63da1b8491</anchor>
      <arglist>(int)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListRowIface</name>
    <filename>classRapicorn_1_1WidgetListRowIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::WidgetListRow</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>a87c8b7bbf03f03af0d533cf7020e7538</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selected</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>a86c88e828b74a8bd6aef1e78fea91b97</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>a8b131d08612bb7068bc880b84238bd27</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>row_index</name>
      <anchorfile>classRapicorn_1_1WidgetListRowIface.html</anchorfile>
      <anchor>a7340516f8df4d877949fcfc765b2ea47</anchor>
      <arglist>(int)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetListIface</name>
    <filename>classRapicorn_1_1WidgetListIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::WidgetList</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a3c05fbcf4432d2b8f9c05268367dec41</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>model</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a4f812877bf628d1c5fbebb05333f1507</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectionMode</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a1b09e0a4f8f3adec4d3dde66f3b25da3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selection_mode</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>ad82dfe9ce2b55a0cfc83e709c845177a</anchor>
      <arglist>(SelectionMode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a191f9ffc7f7e6c9d7de3a85e58e958b1</anchor>
      <arglist>(const BoolSeq &amp;selection)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BoolSeq</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>aec3db80d53fa5b0ef8776987005d5527</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>select_range</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a1f57c8348f4dcb101828e81a2fe7e251</anchor>
      <arglist>(int first, int length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unselect_range</name>
      <anchorfile>classRapicorn_1_1WidgetListIface.html</anchorfile>
      <anchor>a64ad771336a1bf78e101af01f8093c7c</anchor>
      <arglist>(int first, int length)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ApplicationIface</name>
    <filename>classRapicorn_1_1ApplicationIface.html</filename>
    <base virtualness="virtual">Rapicorn::ObjectIface</base>
    <base>Rapicorn::Application</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>auto_path</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a08c3479f0802daf9fdeef8d632c2da4d</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, bool search_vpath=1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StringSeq</type>
      <name>auto_load</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a45a164022bde4f51faa4a258b71043e4</anchor>
      <arglist>(const std::string &amp;file_name, const std::string &amp;binary_path, const std::string &amp;i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load_string</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a2e0f7bb8316660f419b5846b262bca35</anchor>
      <arglist>(const std::string &amp;xml_string, const std::string &amp;i18n_domain=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowIface *</type>
      <name>create_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a7c7a6a0e88eb9720a74e2aef31023f05</anchor>
      <arglist>(const std::string &amp;window_identifier, const StringSeq &amp;arguments=StringSeq())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close_all</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>af47090a14ba1c59e5e27cdb2d50dd67e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowIface *</type>
      <name>query_window</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a98cc1b3e5cf738d1645eaf2b8c16e3ce</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowList</type>
      <name>query_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a35c55474f01a6b445544d7b9ca059333</anchor>
      <arglist>(const std::string &amp;selector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowList</type>
      <name>list_windows</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>ac1d93ac4a894382eaf8821820a46d021</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BindableRelayIface *</type>
      <name>create_bindable_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a133ad8fa7265d760d54d01f93bee78d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ListModelRelayIface *</type>
      <name>create_list_model_relay</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a067699c49646bcf87942f30fc2ef3d08</anchor>
      <arglist>(const std::string &amp;name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>test_counter_set</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>aebf627351cfdb26e4f07aabaa23a7f6a</anchor>
      <arglist>(int val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>test_counter_add</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a1b425010a105aa169e39b3fb9d0b4b2d</anchor>
      <arglist>(int val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>test_counter_get</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a986616a3b73887894533f6f1245089fe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>test_counter_inc_fetch</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>adb8277a52e0400733c4b6fbe5e321af0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rapicorn::Aida::int64</type>
      <name>test_hook</name>
      <anchorfile>classRapicorn_1_1ApplicationIface.html</anchorfile>
      <anchor>a08304892ac66c25b6c2fe700e12c87f2</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdlTestWidgetIface</name>
    <filename>classRapicorn_1_1IdlTestWidgetIface.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base>Rapicorn::IdlTestWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a8b3fcc1a7cb7184e6d33552e36e107dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>af4009ec3dcbc0cab7483b85888a3b981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ab6de3b4e6c469d6ba978de004ab1ec7f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a50cbc75bfc39f5180d74e50583808789</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a012168ea4665c9c2cf2a0bef9745a84e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ae81630169b3371176d184d77de214725</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ac987fa8286ffa7a1ed90f5476ee9b02b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>aa85646546a7010dc85a5b0413b4b2b64</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a2d7b2a1d527a604b69d35ce66f0882ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>ac8ce5d9286292fdcf21c6887a20f3b31</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a2f2018156db5b8acaca1a5bff05b6f60</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a4f87c50c0dcc7ed6aa0ca23866094548</anchor>
      <arglist>(TestEnum)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Requisition</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a5b20f375bfdb6799892b59cab68198ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a718127755d29bc77c9964bc6f1b46de1</anchor>
      <arglist>(const Requisition &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>afa9476b636cb54cdaaab80415ebec0d6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a8e7a61261c09445c3dd94be05cb8a290</anchor>
      <arglist>(const StringSeq &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IdlTestWidgetIface *</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>acf8268d1fc9bb2021dbe14f63c1b73b2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetIface.html</anchorfile>
      <anchor>a23afe9ffd5529c72e6e28fbcb15f1f92</anchor>
      <arglist>(IdlTestWidgetIface *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestBoxIface</name>
    <filename>classRapicorn_1_1TestBoxIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::TestBox</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1TestBoxIface.html</anchorfile>
      <anchor>a47f7240e7075ecd8a0ce0a7162f90c10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TestBoxIface.html</anchorfile>
      <anchor>a5b4f8f887c9707e2e02567c0b9cc4573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxIface.html</anchorfile>
      <anchor>a4aaec15d10cbd6e125aec1c1f31aa9b8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxIface.html</anchorfile>
      <anchor>a4d2f25ada133eee334e2f455f83eb778</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestContainerIface</name>
    <filename>classRapicorn_1_1TestContainerIface.html</filename>
    <base virtualness="virtual">Rapicorn::ContainerIface</base>
    <base>Rapicorn::TestContainer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>__aida_type_name__</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a27798ca69141f0d205043b84c4937d10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Rapicorn::Aida::PropertyList &amp;</type>
      <name>__aida_properties__</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a2440a886a41b6af26d69918637c91d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a0312ed3673b0c93e01a3e1625d173079</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a18168e7eb664e45195647ca1066738f2</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a30b787b6bf496e712a65a14bbe640c6b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a4c3c0c068a7ddf4a5a85c3a4b9174e6e</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>ae7e2668c80e9da5ac3b141131cccf80d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>af94da54db158f4686706cfd7066b683a</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a710dabf0ff2e6dcf01c48cae24c27530</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a8cce123b35253d08bc53059fee554f37</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>ac19fd74bddf349d4ac61b18625aa475d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a502c3c62abb728ad652112c2cad8087f</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a4cb5ee01672262f9d6e8de508c6b4945</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a38faf89e853a86c57090cacd84c30386</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a41db9f4195184739cca07749a913d96e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a4cc9bf675dc5e1f0c2df063ef4054eb2</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a5e2d3d9f9f7465e6a76a6ff6a7303279</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a064d47e1afab62d3f5b407ca9864a8da</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a3618b21e6156c03b752397c530c73ad3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>abed510365bd540d3a6c1e68513293326</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>af7f8871784b24e1e7116ed156b306c7d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>aee599a8cb94f945ba1b9d58a9fc035f9</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>acf5cd0b0c60e2e215a1705b421146b93</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>ac1d5bb2dbcba7af40f3acf8e2aff5ef1</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a390a44cf3d9333102e254b0e05723b6b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a42524a4fe810296e01ef49d3f1f0fb16</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a01160f163afd657d6f494e38dda9ae90</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerIface.html</anchorfile>
      <anchor>a8b2d00cb0da19b0842df74986e3708e6</anchor>
      <arglist>(const std::string &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Sinfex</name>
    <filename>classRapicorn_1_1Sinfex.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <class kind="struct">Rapicorn::Sinfex::Scope</class>
    <class kind="class">Rapicorn::Sinfex::Value</class>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Sinfex::Scope</name>
    <filename>structRapicorn_1_1Sinfex_1_1Scope.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Sinfex::Value</name>
    <filename>classRapicorn_1_1Sinfex_1_1Value.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetGroup</name>
    <filename>classRapicorn_1_1WidgetGroup.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>a626f3adfa269a52544c6b049402c3470</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WidgetGroupType</type>
      <name>type</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>acc3f4f127fb651909635fca93231eace</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_widget</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>a3b840c4df3672544117ec8090567eb84</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>acaed010998e8e4a87d10d49aa3220dad</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupVector</type>
      <name>list_groups</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>ad9717b467faf3dbd8b567a48b981b22f</anchor>
      <arglist>(WidgetImpl &amp;widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WidgetGroup *</type>
      <name>create</name>
      <anchorfile>classRapicorn_1_1WidgetGroup.html</anchorfile>
      <anchor>a5bb52aa6a6da4695ff802831dfee969d</anchor>
      <arglist>(const String &amp;name, WidgetGroupType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SizeGroup</name>
    <filename>classRapicorn_1_1SizeGroup.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetGroup</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderAreaImpl</name>
    <filename>classRapicorn_1_1SliderAreaImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TableLayoutImpl</base>
    <base virtualness="virtual">Rapicorn::SliderAreaIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual AdjustmentSourceType</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaImpl.html</anchorfile>
      <anchor>aeda4ad0a5eb61b5c55380b71feca171a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustment_source</name>
      <anchorfile>classRapicorn_1_1SliderAreaImpl.html</anchorfile>
      <anchor>aeff317d281d330010546dd4909acf5d1</anchor>
      <arglist>(AdjustmentSourceType adj_source) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaImpl.html</anchorfile>
      <anchor>a3716e551ab5c0f48b89323a7840cdb78</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flipped</name>
      <anchorfile>classRapicorn_1_1SliderAreaImpl.html</anchorfile>
      <anchor>a1ea8c67b8e4e9c6c80b399304bb5470f</anchor>
      <arglist>(bool flip) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1SliderAreaImpl.html</anchorfile>
      <anchor>a2a4211ed958b70f5e26e494a7d1219b5</anchor>
      <arglist>(WidgetImpl *old_toplevel) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderTroughImpl</name>
    <filename>classRapicorn_1_1SliderTroughImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::SliderTroughIface</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1SliderTroughImpl.html</anchorfile>
      <anchor>ac45b25c4dfbe63e6ead296ebd5c4c573</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1SliderTroughImpl.html</anchorfile>
      <anchor>ac2ad105fb2be62e1ee818b42bb999f0a</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>hierarchy_changed</name>
      <anchorfile>classRapicorn_1_1SliderTroughImpl.html</anchorfile>
      <anchor>a8dd9ff8794086dccbfb58de57a728be0</anchor>
      <arglist>(WidgetImpl *old_toplevel) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::SliderSkidImpl</name>
    <filename>classRapicorn_1_1SliderSkidImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::SliderSkidIface</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1SliderSkidImpl.html</anchorfile>
      <anchor>a618f0ad420edb7e179c730614212ba61</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Stock</name>
    <filename>classRapicorn_1_1Stock.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_string</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a7da1de615544e0d6a794db48c172ec27</anchor>
      <arglist>(const String &amp;stock_id, const String &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_label</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a5002ebc001a206e0a6f8e7a8c4405144</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_tooltip</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a3b344992156f1308600b1747eefe690b</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stock_accelerator</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a8757cb1cf7c0ea053cc7e52598659322</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Blob</type>
      <name>stock_image</name>
      <anchorfile>classRapicorn_1_1Stock.html</anchorfile>
      <anchor>a394dce7bc9ed9b1186e57cb9fae37adc</anchor>
      <arglist>(const String &amp;stock_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TableLayoutImpl</name>
    <filename>classRapicorn_1_1TableLayoutImpl.html</filename>
    <base virtualness="virtual">Rapicorn::MultiContainerImpl</base>
    <class kind="struct">Rapicorn::TableLayoutImpl::RowCol</class>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::TableLayoutImpl::RowCol</name>
    <filename>structRapicorn_1_1TableLayoutImpl_1_1RowCol.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TableImpl</name>
    <filename>classRapicorn_1_1TableImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TableLayoutImpl</base>
    <base virtualness="virtual">Rapicorn::TableIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ad0682210175b006db286da425baf7845</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>homogeneous</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>aadd9392f8dbc463f5ebbc31be9d93ed6</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a2afcab2dfde71ebadc15d2d2894e9d18</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>col_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ab7f8b562daff557c4e79485c74e54c36</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>afa9f901d0a7cd0253eba4549ac08489d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>row_spacing</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ae8e9cd26b409350825d81fcddf786bd7</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a4bb20b930c293e62af2d91a6c6572d0f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>n_cols</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a9fa1df4c6975f354f4090b6a0212afda</anchor>
      <arglist>(int nc) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a71fb43979f530e81a2a23a6a36720f7f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>n_rows</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>aa4c04989b0eff768c48ff63d28a37cc3</anchor>
      <arglist>(int nr) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_col_used</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a1f0db3288d86e98ab14de6aec62b5aa5</anchor>
      <arglist>(int col) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_row_used</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a6f44af9f47deeb2bf5fe74b273d9b0b6</anchor>
      <arglist>(int row) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>adb60019a1baf4b3d764011b01ae9f3d7</anchor>
      <arglist>(int ncols, int nrows) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_cols</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>ad706a36732dd1f8cec117aa867414097</anchor>
      <arglist>(int first_col, int ncols) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_rows</name>
      <anchorfile>classRapicorn_1_1TableImpl.html</anchorfile>
      <anchor>a6346903a699a3085f9bb1fa4209ac861</anchor>
      <arglist>(int first_row, int nrows) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestContainerImpl</name>
    <filename>classRapicorn_1_1TestContainerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::TestContainerIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a838a3bb069e6d91ed01252ac81a46e09</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>value</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a85afcbc69fd7f135e15d32d2ec53e9a2</anchor>
      <arglist>(const String &amp;val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>af73e857a6b22cb42244b94fcde5d3808</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_value</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a05a4db207ff2d93bdbb3db9786f3c866</anchor>
      <arglist>(const String &amp;val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a5507ef454bd7f9fab2d49ee44c819e25</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_left</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a92b0d3f2d0a5884ba6c87f9bc37b427a</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a5e958cd6b993f9423d20ab70ee1fd272</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_right</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a55924d444d6dcd2489df3ea583eb8a17</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>afc357558b1362c9f74e5daf3f36f34e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_top</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>adcf79d536ed2d21adde1ce7a190e4b56</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>af45bb902501e4d9cdd2a48786cad97b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_bottom</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>ad2aa82a0d644c4b9f00a15b7377d4c92</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>addc3225ac5bdd727d47dc306e3e24744</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_width</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>ad2acb61832b10d152868bc90e0eaaf11</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a514cb5bce21f2dc7a890873a633ad45e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>assert_height</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>ac40a36d59944d9ea94ee30126043e7ee</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>abed2c9953cd2202cea69cbd90ff69cbe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>epsilon</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>ab4531eea334c268e104f286806e40470</anchor>
      <arglist>(double val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a27d5768ce3765f88f9dbaf8977398c44</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint_allocation</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>afec6c4bbe2246cb00bc491bac544e3b7</anchor>
      <arglist>(bool val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>ac394e1690cc159ba0e2b553599b5e760</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fatal_asserts</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a2f4106a4bdea4a78122e77f3b080e788</anchor>
      <arglist>(bool val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a9a148794ef7f390f8b487cd170cc9174</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accu</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a0fc478aba1055a5f54b643288d6d206a</anchor>
      <arglist>(const String &amp;val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>aaee4d64bce174ce2938b046cfc85632e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accu_history</name>
      <anchorfile>classRapicorn_1_1TestContainerImpl.html</anchorfile>
      <anchor>a6d79f2be4ca1c1dca66c6fe86581e18d</anchor>
      <arglist>(const String &amp;val) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TestBoxImpl</name>
    <filename>classRapicorn_1_1TestBoxImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::TestBoxIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxImpl.html</anchorfile>
      <anchor>af96166bba8477a179bbd445ca590bfcf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>snapshot_file</name>
      <anchorfile>classRapicorn_1_1TestBoxImpl.html</anchorfile>
      <anchor>aaa5bd23cf96b5f0109f632d8542f35f3</anchor>
      <arglist>(const String &amp;val) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IdlTestWidgetImpl</name>
    <filename>classRapicorn_1_1IdlTestWidgetImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetImpl</base>
    <base virtualness="virtual">Rapicorn::IdlTestWidgetIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a33df5ae2abd9ccc4b061863b7c046365</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bool_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a17bde7611a335304b5ffd1d615b1d048</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>aa7de98226d2d4d0bdc00f040a61a9c1d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>int_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a63de109b326d2430a37e0a0166d2995a</anchor>
      <arglist>(int i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>abd98ad3b8ccb572b14462b7e42a89096</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>float_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a1f5efee3c55c97af275fb394bd1e164e</anchor>
      <arglist>(double f) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a261c3e887c472c842420817292eba472</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>string_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a1ace75de8d55e85a2cdf96a91424efaa</anchor>
      <arglist>(const std::string &amp;s) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TestEnum</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a7dd6ec151ab4ba4b7dbce272fff98dc8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enum_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a73294473ace3710ae493e03363bb953e</anchor>
      <arglist>(TestEnum v) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Requisition</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a83a4b3b29cbda3d642a9c1f4be99037b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>record_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>afaf1ff429287f13f5a54c907b368da41</anchor>
      <arglist>(const Requisition &amp;r) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StringSeq</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a840979a720a16e2f166c48dc610c3025</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sequence_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a080eb6e650dd08515a8f9e55a048336a</anchor>
      <arglist>(const StringSeq &amp;s) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdlTestWidgetIface *</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a1dcbc41a2d0fb68f7a499ccf3d172738</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>self_prop</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>a51372656fc0a7869ac9dc4352ab794e4</anchor>
      <arglist>(IdlTestWidgetIface *s) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>aa4ba0257634a6e7a9fa553193c5eeaca</anchor>
      <arglist>(Requisition &amp;req) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_allocate</name>
      <anchorfile>classRapicorn_1_1IdlTestWidgetImpl.html</anchorfile>
      <anchor>ae3e8f3eb670ab605764bf9adffbdd93b</anchor>
      <arglist>(Allocation area, bool changed) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ParagraphState</name>
    <filename>structRapicorn_1_1ParagraphState.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::TextAttrState</name>
    <filename>structRapicorn_1_1TextAttrState.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TextBlock</name>
    <filename>classRapicorn_1_1TextBlock.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>peek_text</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>afcd00507e15cc72a94230a2dde769573</anchor>
      <arglist>(int *byte_length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ParagraphState</type>
      <name>para_state</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a57e2dfcd93fb7b6e2189e230fe41cd9a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>para_state</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a0a100ce8b5da57a79db87bb315226153</anchor>
      <arglist>(const ParagraphState &amp;pstate)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a93c588f0cfb1bdb1ce41dd7daed7a0b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>aeea7fc729cd12556475c5056f6253a68</anchor>
      <arglist>(const String &amp;markup)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>ab6f785ebd9fa63425a948004f6c23d16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a5115eca708faa04aed78a95c75f601ed</anchor>
      <arglist>(const String &amp;ptext)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TextMode</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a70518eef8033318feced3da16566c0a0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>text_mode</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a6a30f2cc3ef697ed682222e0db787680</anchor>
      <arglist>(TextMode text_mode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>text_requisition</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>aec6f6e21badb1d3a4f6941c83aa53416</anchor>
      <arglist>(uint n_chars, uint n_digits)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mark</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a944c849e2bab5361abdf4abb47348085</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a853d66a3f9223b26bb80a42edddd1ad8</anchor>
      <arglist>(int byte_index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>mark_at_end</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a010cc0955e980b48d363d3b45e3f8f9f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>mark_to_coord</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a58f4e2f70ff592781f41d94bfb8a3d59</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>step_mark</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a020ce621ba8dba27a66922418da70f01</anchor>
      <arglist>(int visual_direction)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark2cursor</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a17bd41233782a4595de0656ebdb642c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>cursor2mark</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a3639964d6fafa65f8479c7478cc08223</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hide_cursor</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a46dfcd3639e43b2c3cef15eac856f049</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark2selector</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a7d97a26b9d615801fbdc4b0c118b4305</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hide_selector</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a402153cf06f4f10731f90d6ea2cc6a4e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_selection</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a810f6acf7f23cb6440455ab2aaabd958</anchor>
      <arglist>(int *start=NULL, int *end=NULL, int *nutf8=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark_delete</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a5428aad4bc98482b6654feec14257548</anchor>
      <arglist>(uint n_utf8_chars)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>mark_insert</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a6e01a3180c34046bf7f56c1912369248</anchor>
      <arglist>(String utf8string, const TextAttrState *astate=NULL)=0</arglist>
    </member>
    <member kind="variable">
      <type>Aida::Signal&lt; void()&gt;</type>
      <name>sig_selection_changed</name>
      <anchorfile>classRapicorn_1_1TextBlock.html</anchorfile>
      <anchor>a95eb1caca5258a7fce863c803c5c189e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TextControllerImpl</name>
    <filename>classRapicorn_1_1TextControllerImpl.html</filename>
    <base virtualness="virtual">Rapicorn::SingleContainerImpl</base>
    <base virtualness="virtual">Rapicorn::EventHandler</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>can_focus</name>
      <anchorfile>classRapicorn_1_1TextControllerImpl.html</anchorfile>
      <anchor>a6034630e125df83bb0ac58f01e722bb8</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::LabelImpl</name>
    <filename>classRapicorn_1_1LabelImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TextControllerImpl</base>
    <base virtualness="virtual">Rapicorn::LabelIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelImpl.html</anchorfile>
      <anchor>a5cde851319ac17a1b67d2baa3ce3a894</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1LabelImpl.html</anchorfile>
      <anchor>a0dd255519dfadd1ccd2570af3a5f05ba</anchor>
      <arglist>(const String &amp;ptext) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelImpl.html</anchorfile>
      <anchor>ae429803ee4052022e405a59b109a0ca9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1LabelImpl.html</anchorfile>
      <anchor>a2f2995fc07d48e8b5738072716ef87d2</anchor>
      <arglist>(const String &amp;markup) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TextEditorImpl</name>
    <filename>classRapicorn_1_1TextEditorImpl.html</filename>
    <base virtualness="virtual">Rapicorn::TextControllerImpl</base>
    <base virtualness="virtual">Rapicorn::TextEditorIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a126cad37334ac2440b443495834d65c5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>plain_text</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>aaf3dfc2fe947721ce6f29df249760b70</anchor>
      <arglist>(const String &amp;ptext) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a3a3667c52c8360c0ba0171957351888f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markup_text</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a2b55d0d90e946fef2e9ff2e07add93ef</anchor>
      <arglist>(const String &amp;markup) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>abf8f9fb51de5c417c538bbe11e231099</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>request_chars</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a2e324e1d1a1fbd7b866177332adfac17</anchor>
      <arglist>(int nc) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a87850b370091c01b96eed5b94c2becfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>request_digits</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>a7df9f502c0790030622874dd7a3a23c3</anchor>
      <arglist>(int nd) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>size_request</name>
      <anchorfile>classRapicorn_1_1TextEditorImpl.html</anchorfile>
      <anchor>add027dd5bbebbbf2652a52b394f67c76</anchor>
      <arglist>(Requisition &amp;requisition) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Exception</name>
    <filename>structRapicorn_1_1Exception.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::NullPointer</name>
    <filename>structRapicorn_1_1NullPointer.html</filename>
    <base>std::exception</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EnforceDerivedFrom</name>
    <filename>structRapicorn_1_1EnforceDerivedFrom.html</filename>
    <templarg>Derived</templarg>
    <templarg>Base</templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::EnforceDerivedFrom&lt; Derived *, Base * &gt;</name>
    <filename>structRapicorn_1_1EnforceDerivedFrom_3_01Derived_01_5_00_01Base_01_5_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::CheckDerivedFrom</name>
    <filename>classRapicorn_1_1CheckDerivedFrom.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::CheckDerivedFrom&lt; Child *, Base * &gt;</name>
    <filename>structRapicorn_1_1CheckDerivedFrom_3_01Child_01_5_00_01Base_01_5_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Rapicorn::CheckDerivedFrom</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference</name>
    <filename>structRapicorn_1_1Dereference.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; Type * &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01Type_01_5_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; Type *const  &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01Type_01_5const_01_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; const Type * &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01const_01Type_01_5_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Dereference&lt; const Type *const  &gt;</name>
    <filename>structRapicorn_1_1Dereference_3_01const_01Type_01_5const_01_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::PointerIterator</name>
    <filename>classRapicorn_1_1PointerIterator.html</filename>
    <templarg>Value</templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::ValueIterator</name>
    <filename>structRapicorn_1_1ValueIterator.html</filename>
    <templarg>Iterator</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::IteratorRange</name>
    <filename>classRapicorn_1_1IteratorRange.html</filename>
    <templarg>Iterator</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ValueIteratorRange</name>
    <filename>classRapicorn_1_1ValueIteratorRange.html</filename>
    <templarg>Iterator</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Walker</name>
    <filename>classRapicorn_1_1Walker.html</filename>
    <templarg></templarg>
    <class kind="class">Rapicorn::Walker::Adapter</class>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Walker::Adapter</name>
    <filename>classRapicorn_1_1Walker_1_1Adapter.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::ViewportImpl</name>
    <filename>classRapicorn_1_1ViewportImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ResizeContainerImpl</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::EventHandler</name>
    <filename>classRapicorn_1_1EventHandler.html</filename>
    <base virtualness="virtual">Rapicorn::ReferenceCountable</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WidgetImpl</name>
    <filename>classRapicorn_1_1WidgetImpl.html</filename>
    <base virtualness="virtual">Rapicorn::WidgetIface</base>
    <base virtualness="virtual">Rapicorn::ObjectImpl</base>
    <class kind="struct">Rapicorn::WidgetImpl::PackInfo</class>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetImpl::PackInfo</name>
    <filename>structRapicorn_1_1WidgetImpl_1_1PackInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::WidgetIfaceVector</name>
    <filename>structRapicorn_1_1WidgetIfaceVector.html</filename>
    <base>vector&lt; WidgetIface * &gt;</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::WindowImpl</name>
    <filename>classRapicorn_1_1WindowImpl.html</filename>
    <base virtualness="virtual">Rapicorn::ViewportImpl</base>
    <base virtualness="virtual">Rapicorn::WindowIface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a034c63c9e6360ee98b143b8e98b86e83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>title</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ac2ddac3c0c2d40ee61a4f6ac418b7592</anchor>
      <arglist>(const String &amp;window_title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ac569041276ec438e90aec703c6e0005d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>auto_focus</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>ae3b8ad25a543b73509360429f5fe6c04</anchor>
      <arglist>(bool afocus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>screen_viewable</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a98517a9505c650777f2187f7fe806984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>show</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a2e02da9ab114c162f46c083bf9f3c515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>closed</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aadf89c61026a0ca3c1a720837fd20df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a9bb86ab5606e1d8e6977767a20dd8971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>snapshot</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a16ac9b8bfb4b79361229d56343fcbbba</anchor>
      <arglist>(const String &amp;pngname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_enter</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a80096561bba81018d814bd27ab872313</anchor>
      <arglist>(double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_leave</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>abb54bc836625f0b6cc05b12f2a20f9f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_click</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>aea5331ea6fac2f31fd0db1716aeb6388</anchor>
      <arglist>(WidgetIface &amp;widget, int button, double xalign=0.5, double yalign=0.5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>synthesize_delete</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a173955004a38e12c23731850aee3f8aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>PRIORITY_RESIZE</name>
      <anchorfile>classRapicorn_1_1WindowImpl.html</anchorfile>
      <anchor>a04fec5f2aff6caa69d128d64171fe599</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Aida</name>
    <filename>namespaceRapicorn_1_1Aida.html</filename>
    <namespace>Rapicorn::Aida::CxxStub</namespace>
    <class kind="struct">Rapicorn::Aida::EnumValue</class>
    <class kind="class">Rapicorn::Aida::ImplicitBase</class>
    <class kind="class">Rapicorn::Aida::Any</class>
    <class kind="class">Rapicorn::Aida::EventFd</class>
    <class kind="struct">Rapicorn::Aida::TypeHash</class>
    <class kind="struct">Rapicorn::Aida::ValueType</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</class>
    <class kind="struct">Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</class>
    <class kind="union">Rapicorn::Aida::IdentifierParts</class>
    <class kind="class">Rapicorn::Aida::OrbObject</class>
    <class kind="class">Rapicorn::Aida::RemoteHandle</class>
    <class kind="class">Rapicorn::Aida::RemoteMember</class>
    <class kind="struct">Rapicorn::Aida::_ServantType</class>
    <class kind="struct">Rapicorn::Aida::_HandleType</class>
    <class kind="class">Rapicorn::Aida::ObjectBroker</class>
    <class kind="union">Rapicorn::Aida::FieldUnion</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer</class>
    <class kind="class">Rapicorn::Aida::FieldBuffer8</class>
    <class kind="class">Rapicorn::Aida::FieldReader</class>
    <class kind="class">Rapicorn::Aida::BaseConnection</class>
    <class kind="class">Rapicorn::Aida::ServerConnection</class>
    <class kind="class">Rapicorn::Aida::ClientConnection</class>
    <class kind="class">Rapicorn::Aida::Property</class>
    <class kind="struct">Rapicorn::Aida::PropertyList</class>
    <class kind="struct">Rapicorn::Aida::PropertyBool</class>
    <class kind="struct">Rapicorn::Aida::PropertyRange</class>
    <class kind="struct">Rapicorn::Aida::PropertyString</class>
    <class kind="struct">Rapicorn::Aida::PropertyEnum</class>
    <class kind="class">Rapicorn::Aida::Signal</class>
    <class kind="struct">Rapicorn::Aida::CollectorUntil0</class>
    <class kind="struct">Rapicorn::Aida::CollectorWhile0</class>
    <class kind="struct">Rapicorn::Aida::CollectorVector</class>
    <class kind="class">Rapicorn::Aida::Connector</class>
    <class kind="class">Rapicorn::Aida::AsyncSignal</class>
    <member kind="typedef">
      <type>FieldBuffer *</type>
      <name>SignalEmitHandler</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4966aa42a5d9c7a5f759fd6f5ef49e5a</anchor>
      <arglist>(const FieldBuffer *, void *)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TypeKind</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UNTYPED</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92aafc9cd45b6e3d7988ea4b57bc1c5b468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VOID</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac7dbd611f71ca1826b7767223d94dd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BOOL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ab54febda14479a08816b39fd2159692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INT32</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a50f7454db8e3863666e379ea3080b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a13e7ff2527c4f6f411c5f8de24e12632</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FLOAT64</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad121241c9476c0e839b3cb6e7820044c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STRING</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ad7ac6c9d2f522609f32f18743074c00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENUM</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ae07683ac6e6a0ce0847ca322a53eb914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEQUENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a44186695c152bdaf3acdf2100c02a9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RECORD</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a547ec93ddc1e465a278689ac1112176e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INSTANCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a3d28c7cd557a73e5a3142ecdf73610ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FUNC</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a28754a6929f2813fd0e5f1aaeb637f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>TYPE_REFERENCE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a8a1cf942d9b04acd1c9389e752d0e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOCAL</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92ac081edbd5162ad801c16969cb9bc5074</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>REMOTE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a206c9c3fb0343481eb384e0e8bd9979a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ANY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>adc8d365009ee0b2b09a489e2c7baac92a250839b656b7375712ba6daa04d07888</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageId</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baed6464e15b0c8319eb077424c5c89041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1713d747bbc871d9fb0640516460feee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_ONEWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba7264b6ac780fbeede21430a8f3168731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bad840443b5af937891d8be95b855bb69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bacb8ca8666d3da9616d05f43dffda9857</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa48359186fcf0294cf41bd078c0eb454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_TWOWAY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baae1ada48aa75486bfeb0edd5353e79c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_DISCONNECT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba1ff5abae0b5affa659579875d73bf2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CONNECT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba21a7be778c75d60e8e2c8b42d266a388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_CALL_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba486c5a3ce44d59b60f0cb154b7333481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_EMIT_RESULT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baad326870340735838e1bfa5f6f883fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_REPLY</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baadbcc9454e35209430e04e30ad784f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_HELLO</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba4151f41c3ec9453165b176e64963d5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_WELCOME</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baacca9d5607403ec74cb053fb24ff7387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_GARBAGE_SWEEP</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7bac69f376a4efbaacb5d7933e43d74313d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_GARBAGE_REPORT</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7baa36bee4c4506b268b824ef982e517ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MSGID_META_SEEN_GARBAGE</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a81624df754c4724d94a234e6283f2e7ba5fe27d3b73d341b53fa70e68465cdcd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>enum_value_count</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ad6eb7df20855a9f6e634fdc7a799b8e0</anchor>
      <arglist>(const EnumValue *values)</arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_find</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>afa324cb0371692767d84503849204bdc</anchor>
      <arglist>(const EnumValue *values, int64 value)</arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_find</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a16a077f3149b6a4d73f72bcc6e8c9998</anchor>
      <arglist>(const EnumValue *values, const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>type_kind_name</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aba93ad91b36f114b0787aeb348b786db</anchor>
      <arglist>(TypeKind type_kind)</arglist>
    </member>
    <member kind="function">
      <type>const EnumValue *</type>
      <name>enum_value_list</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a4059c5d7359ade580a16c486ad8277f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>msgid_is_result</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>aa2fbd51d4f6fa4f9188b37d73fe90c43</anchor>
      <arglist>(MessageId msgid)</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>ae1c30620e796be152f684788ad8e81ae</anchor>
      <arglist>(Instance &amp;object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; R(Args...)&gt;</type>
      <name>slot</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a8631a013ecb4377a0fcb2256a190d4fd</anchor>
      <arglist>(Class *object, R(Class::*method)(Args...))</arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_ServantType</type>
      <name>_servant</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a424070ff463d381d27d4cceee4c7de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr struct Rapicorn::Aida::_HandleType</type>
      <name>_handle</name>
      <anchorfile>namespaceRapicorn_1_1Aida.html</anchorfile>
      <anchor>a82082338cb79e692465c1eab344be273</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::EnumValue</name>
    <filename>structRapicorn_1_1Aida_1_1EnumValue.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ImplicitBase</name>
    <filename>classRapicorn_1_1Aida_1_1ImplicitBase.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Any</name>
    <filename>classRapicorn_1_1Aida_1_1Any.html</filename>
    <class kind="struct">Rapicorn::Aida::Any::Field</class>
    <member kind="typedef">
      <type>std::vector&lt; Field &gt;</type>
      <name>FieldVector</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a4fb5a63a9cbeabd29fd1ca345889797c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Any &gt;</type>
      <name>AnyVector</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5e8c64e15aed6d733a656ab741c64566</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a24929297d90859036204a0c06118bb86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aec9d18901a26da16b9990417d0e3210f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a06fd18dcb3b0428b29818bf7cb2be426</anchor>
      <arglist>(const Any &amp;clone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ace123470c20704a22aec302a25f76c58</anchor>
      <arglist>(const V &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Any &amp;</type>
      <name>operator=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a625f011c8265db90b419a4755fa95fbc</anchor>
      <arglist>(const Any &amp;clone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a341236c94b1ac95683424884a2dfe2fc</anchor>
      <arglist>(const Any &amp;clone) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ab89536b31907f8ef8b9296ed394d58a4</anchor>
      <arglist>(const Any &amp;clone) const </arglist>
    </member>
    <member kind="function">
      <type>TypeKind</type>
      <name>kind</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a2994371313b264a4ab894a77ce44a2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae699bdd5417a8ff560aa40359c802f91</anchor>
      <arglist>(Any &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a01d0a0892b905a7b35cd9effcf225213</anchor>
      <arglist>(double &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5d2069c146176172be07217db4d76493</anchor>
      <arglist>(EnumValue &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aaa664f9441b94a3c474cc8288a60e484</anchor>
      <arglist>(std::string &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a0469cd48197f146010c427f585594c1c</anchor>
      <arglist>(const Any *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a859d551b26cfb174d472c2871ba978db</anchor>
      <arglist>(const AnyVector *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a29be42e328f64f52ca7b27e422d50633</anchor>
      <arglist>(const FieldVector *&amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>to_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a1be366fba4a48b282bab6e604b5b0af7</anchor>
      <arglist>(const String &amp;field_name=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>const Any &amp;</type>
      <name>as_any</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aa93f0e888edd8cfa0a8d46474191be2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>as_float</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a2f5c2a28b59dbdc8d432700ba74ac6de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>as_int</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>aab3a80469a0d239fdcfc8a9e6e19b701</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>as_string</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a7ff738b859878bf849614b12650809f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae15dd2c9528b597591efc8ec3b42ce18</anchor>
      <arglist>(int64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a15035cbf8bf6a3789ce56bc3562230a6</anchor>
      <arglist>(uint64 v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae229be67b6de150e776c4320e557ab61</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>abf546f7ce351d23fe2c32c9a4e2e2558</anchor>
      <arglist>(const EnumValue &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>adc3eb13fc09176c795e5737718ecc68b</anchor>
      <arglist>(const String &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a52bcc58ad625f160d09a166a10430e27</anchor>
      <arglist>(const Any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5f8d90608d85a08be729d54068615c41</anchor>
      <arglist>(const AnyVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>abd2430f8a8e4130a2a418961f2a2aaa9</anchor>
      <arglist>(const FieldVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ae77044f65198246a1b4f22ad46276b39</anchor>
      <arglist>(const T &amp;v)</arglist>
    </member>
    <member kind="friend">
      <type>friend T *</type>
      <name>any_cast</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a4e02eff3a786851215f52f3679b648ab</anchor>
      <arglist>(Any *const any)</arglist>
    </member>
    <member kind="friend">
      <type>friend const T *</type>
      <name>any_cast</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5d81068ae322d5faf5a5d8c0dd174e1a</anchor>
      <arglist>(const Any *any)</arglist>
    </member>
    <member kind="friend">
      <type>friend T</type>
      <name>any_cast</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>a5763557749b9b8963bda60e09f88d000</anchor>
      <arglist>(Any &amp;any)</arglist>
    </member>
    <member kind="friend">
      <type>friend T</type>
      <name>any_cast</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Any.html</anchorfile>
      <anchor>ad771a3b21ba9164310bb4e0cf39d6929</anchor>
      <arglist>(const Any &amp;any)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Any::Field</name>
    <filename>structRapicorn_1_1Aida_1_1Any_1_1Field.html</filename>
    <base>Rapicorn::Aida::Any</base>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>a9a6c45fadf5fbbf33f5f243a68a15253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>aa42ce8dbf5952f8bd48d9a6929d41c69</anchor>
      <arglist>(const String &amp;name, const Any &amp;any)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyField</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>af4dc769aa11db4d9e2265f65e135c9ea</anchor>
      <arglist>(const String &amp;name, const V &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>structRapicorn_1_1Aida_1_1Any_1_1Field.html</anchorfile>
      <anchor>a784f56c1473c25c1e76daede0e31885b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::EventFd</name>
    <filename>classRapicorn_1_1Aida_1_1EventFd.html</filename>
    <member kind="function">
      <type>int</type>
      <name>open</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>aca1383bbb74a963716ed95edd99ff463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a6218c64a2ddefa67c6dd31b8facefd68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeup</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a61c4854a64d9ad72d22656abcb80ead6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inputfd</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a32ab7b31e5a4e68e50230ea7402dc841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pollin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a2f254c49f6f535967c2e73e137b4b673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classRapicorn_1_1Aida_1_1EventFd.html</anchorfile>
      <anchor>a81a2b147ffc4fd0ebed8a831e7a34b85</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::TypeHash</name>
    <filename>structRapicorn_1_1Aida_1_1TypeHash.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType&lt; Y &amp; &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType_3_01Y_01_6_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ValueType&lt; const Y &amp; &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1ValueType_3_01const_01Y_01_6_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="union">
    <name>Rapicorn::Aida::IdentifierParts</name>
    <filename>unionRapicorn_1_1Aida_1_1IdentifierParts.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::OrbObject</name>
    <filename>classRapicorn_1_1Aida_1_1OrbObject.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::RemoteHandle</name>
    <filename>classRapicorn_1_1Aida_1_1RemoteHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::RemoteMember</name>
    <filename>classRapicorn_1_1Aida_1_1RemoteMember.html</filename>
    <templarg>RemoteHandle</templarg>
    <base>Rapicorn::Aida::RemoteHandle</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::_ServantType</name>
    <filename>structRapicorn_1_1Aida_1_1__ServantType.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::_HandleType</name>
    <filename>structRapicorn_1_1Aida_1_1__HandleType.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ObjectBroker</name>
    <filename>classRapicorn_1_1Aida_1_1ObjectBroker.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>post_msg</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a3a6e1702013bd47631e442607d33da42</anchor>
      <arglist>(FieldBuffer *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unregister_connection</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ObjectBroker.html</anchorfile>
      <anchor>a1d2d77f8f8a0fb25c79d4c456bec8b11</anchor>
      <arglist>(BaseConnection &amp;connection)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>Rapicorn::Aida::FieldUnion</name>
    <filename>unionRapicorn_1_1Aida_1_1FieldUnion.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldBuffer</name>
    <filename>classRapicorn_1_1Aida_1_1FieldBuffer.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldBuffer8</name>
    <filename>classRapicorn_1_1Aida_1_1FieldBuffer8.html</filename>
    <base>Rapicorn::Aida::FieldBuffer</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::FieldReader</name>
    <filename>classRapicorn_1_1Aida_1_1FieldReader.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::BaseConnection</name>
    <filename>classRapicorn_1_1Aida_1_1BaseConnection.html</filename>
    <member kind="function">
      <type>uint</type>
      <name>connection_id</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>afe069f7e17a610d846bf3cf3dedef3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>notify_fd</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ae64abac96700146472c14b3b945f33d6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>pending</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ab685f3484a58e3a4f4ae5ae0bca4ea51</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dispatch</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ab41fb38f7338907acad5f4b896a99e31</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remote_origin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>ad913a62b7e66b6ce493e5cb14f6c2061</anchor>
      <arglist>(ImplicitBaseP rorigin)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RemoteHandle</type>
      <name>remote_origin</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a5bcc156c53342a1232b0991de2fb4d20</anchor>
      <arglist>(const vector&lt; std::string &gt; &amp;feature_key_list)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_msg</name>
      <anchorfile>classRapicorn_1_1Aida_1_1BaseConnection.html</anchorfile>
      <anchor>a0d4b6ff556b65b01aeb085ad904859d4</anchor>
      <arglist>(FieldBuffer *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ServerConnection</name>
    <filename>classRapicorn_1_1Aida_1_1ServerConnection.html</filename>
    <base>Rapicorn::Aida::BaseConnection</base>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodEntry</class>
    <class kind="struct">Rapicorn::Aida::ServerConnection::MethodRegistry</class>
    <member kind="function" protection="protected" static="yes">
      <type>static DispatchFunc</type>
      <name>find_method</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ServerConnection.html</anchorfile>
      <anchor>a6fb8fe2ab7a33a025d893e4d6a27bcea</anchor>
      <arglist>(uint64 hi, uint64 lo)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ServerConnection::MethodEntry</name>
    <filename>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodEntry.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::ServerConnection::MethodRegistry</name>
    <filename>structRapicorn_1_1Aida_1_1ServerConnection_1_1MethodRegistry.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::ClientConnection</name>
    <filename>classRapicorn_1_1Aida_1_1ClientConnection.html</filename>
    <base>Rapicorn::Aida::BaseConnection</base>
    <member kind="function" virtualness="pure">
      <type>virtual FieldBuffer *</type>
      <name>call_remote</name>
      <anchorfile>classRapicorn_1_1Aida_1_1ClientConnection.html</anchorfile>
      <anchor>a1f830756b6086df66e82ebd5c4edd5ec</anchor>
      <arglist>(FieldBuffer *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Property</name>
    <filename>classRapicorn_1_1Aida_1_1Property.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyList</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyList.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyBool</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyBool.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Aida::Property</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyRange</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyRange.html</filename>
    <templarg>Class</templarg>
    <templarg>Type</templarg>
    <base>Rapicorn::Aida::Property</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyString</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyString.html</filename>
    <templarg>Class</templarg>
    <base>Rapicorn::Aida::Property</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::PropertyEnum</name>
    <filename>structRapicorn_1_1Aida_1_1PropertyEnum.html</filename>
    <templarg>Class</templarg>
    <templarg>Type</templarg>
    <base>Rapicorn::Aida::Property</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Signal</name>
    <filename>classRapicorn_1_1Aida_1_1Signal.html</filename>
    <templarg>SignalSignature</templarg>
    <templarg>Collector</templarg>
    <base protection="protected">ProtoSignal&lt; SignalSignature, Collector &gt;</base>
    <class kind="class">Rapicorn::Aida::Signal::Connector</class>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal.html</anchorfile>
      <anchor>ac3eb60fdbf7c2f81cba5490d66c02856</anchor>
      <arglist>(const CbFunction &amp;method=CbFunction())</arglist>
    </member>
    <member kind="function">
      <type>Connector</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal.html</anchorfile>
      <anchor>a6049d8b4bdaf020030f568576aadfb7d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Signal::Connector</name>
    <filename>classRapicorn_1_1Aida_1_1Signal_1_1Connector.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal_1_1Connector.html</anchorfile>
      <anchor>ad210999e1b96c8f6adccca1a715df17e</anchor>
      <arglist>(const CbFunction &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Signal_1_1Connector.html</anchorfile>
      <anchor>a14b9acc633ca8390676950a091c925f4</anchor>
      <arglist>(size_t connection_id)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorUntil0</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorUntil0.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorWhile0</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorWhile0.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::CollectorVector</name>
    <filename>structRapicorn_1_1Aida_1_1CollectorVector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Connector</name>
    <filename>classRapicorn_1_1Aida_1_1Connector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>size_t</type>
      <name>operator+=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Connector.html</anchorfile>
      <anchor>a9e1bc6fa108048e7f390c7ceb867a03d</anchor>
      <arglist>(const CbFunction &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator-=</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Connector.html</anchorfile>
      <anchor>a8e56e444e2a52f377e7db778ba237712</anchor>
      <arglist>(size_t connection_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::AsyncSignal</name>
    <filename>classRapicorn_1_1Aida_1_1AsyncSignal.html</filename>
    <templarg>SignalSignature</templarg>
    <base protection="protected">AsyncSignal&lt; SignalSignature &gt;</base>
    <member kind="function">
      <type></type>
      <name>AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1AsyncSignal.html</anchorfile>
      <anchor>a9604fa78b76b360aacbcab99c7ca97bd</anchor>
      <arglist>(const FutureFunction &amp;method=FutureFunction())</arglist>
    </member>
    <member kind="function">
      <type>Connector</type>
      <name>operator()</name>
      <anchorfile>classRapicorn_1_1Aida_1_1AsyncSignal.html</anchorfile>
      <anchor>ab9c6326c952508856f1eacf7de960181</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Aida::CxxStub</name>
    <filename>namespaceRapicorn_1_1Aida_1_1CxxStub.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::ProtoSignal</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::AsyncSignal</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::CollectorInvocation</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::PromiseInvocation</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorLast</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorLast.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorDefault</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault.html</filename>
    <templarg></templarg>
    <base>Rapicorn::Aida::Lib::CollectorLast</base>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorDefault&lt; void &gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorDefault_3_01void_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, void(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1CollectorInvocation_3_01Collector_00_01void_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::HandlerLink</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1HandlerLink.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::ProtoSignal&lt; R(Args...), Collector &gt;</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <base protection="private">Rapicorn::Aida::Lib::CollectorInvocation&lt; Collector, R(Args...)&gt;</base>
    <member kind="function">
      <type>size_t</type>
      <name>connect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a869983bcbc55785b7610e8ef451eba59</anchor>
      <arglist>(const CbFunction &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>a7604988e787b114ba1e5fd5c98f8f1d7</anchor>
      <arglist>(size_t connection)</arglist>
    </member>
    <member kind="function">
      <type>CollectorResult</type>
      <name>emit</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>ad4b2b95e8d217b1ebd49958383b9ae49</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ProtoSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>ab4401404012c18e0a171b149d37603b6</anchor>
      <arglist>(const CbFunction &amp;method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~ProtoSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1ProtoSignal_3_01R_07Args_8_8_8_08_00_01Collector_01_4.html</anchorfile>
      <anchor>aede11622aa120e3152ceefb3fd760f91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, R(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Aida::Lib::PromiseInvocation&lt; Promise, void(Args...)&gt;</name>
    <filename>structRapicorn_1_1Aida_1_1Lib_1_1PromiseInvocation_3_01Promise_00_01void_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <base protection="private">PromiseInvocation&lt; std::promise&lt; R &gt;, R(Args...)&gt;</base>
    <class kind="class">Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</class>
    <member kind="function">
      <type>size_t</type>
      <name>connect_future</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a19c6c78c5a2526a4729d74d352e510fd</anchor>
      <arglist>(const FutureFunction &amp;fcb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>ab53e531a3645881fb3feab5335228ab4</anchor>
      <arglist>(size_t connection)</arglist>
    </member>
    <member kind="function">
      <type>Emission *</type>
      <name>emission</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>a0a3cb0020625de520174088969020200</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>abbd9228896955997bb2e76ecbe5f14d4</anchor>
      <arglist>(const FutureFunction &amp;method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~AsyncSignal</name>
      <anchorfile>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4.html</anchorfile>
      <anchor>abef356be6fed9dbdef42deaebbdc24dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Aida::Lib::AsyncSignal&lt; R(Args...)&gt;::Emission</name>
    <filename>classRapicorn_1_1Aida_1_1Lib_1_1AsyncSignal_3_01R_07Args_8_8_8_08_4_1_1Emission.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::AnsiColors</name>
    <filename>namespaceRapicorn_1_1AnsiColors.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Colors</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RESET</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ad294da5089874a4e5ffc5f6172b6e515ab60027c645f68c4692be928555c6b5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color_code</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>aa40ee649038738e5f9bde4bb9e5c2968</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>color_envkey</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>ab74022b4aadf4c6c52b60b291590be5e</anchor>
      <arglist>(const String &amp;env_var, const String &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorize_tty</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a539cd043ebe5503de6bc834d5e0f5b9f</anchor>
      <arglist>(int fd)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>color</name>
      <anchorfile>namespaceRapicorn_1_1AnsiColors.html</anchorfile>
      <anchor>a7dcd80a9f6c9a5f6db335a5c077219f9</anchor>
      <arglist>(Colors acolor)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Blit::RenderTable</name>
    <filename>structRapicorn_1_1Blit_1_1RenderTable.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Factory::WidgetTypeFactory</name>
    <filename>structRapicorn_1_1Factory_1_1WidgetTypeFactory.html</filename>
    <base protection="protected">Rapicorn::Deletable</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::StringFormatter</name>
    <filename>classRapicorn_1_1Lib_1_1StringFormatter.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::KeccakF1600</name>
    <filename>classRapicorn_1_1Lib_1_1KeccakF1600.html</filename>
    <member kind="function">
      <type>void</type>
      <name>permute</name>
      <anchorfile>classRapicorn_1_1Lib_1_1KeccakF1600.html</anchorfile>
      <anchor>ad66bd1b9c8b2daafb093333935f3fab8</anchor>
      <arglist>(uint32_t n_rounds)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::Atomic</name>
    <filename>classRapicorn_1_1Lib_1_1Atomic.html</filename>
    <templarg>T</templarg>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Lib::OnceScope</name>
    <filename>classRapicorn_1_1Lib_1_1OnceScope.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Path</name>
    <filename>namespaceRapicorn_1_1Path.html</filename>
    <member kind="function">
      <type>String</type>
      <name>dirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ab2f8dec1b122e92dc8c8f79b857d569a</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>basename</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a2de3f9da8ea9637473babea208cafbd8</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>abspath</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>abfb4c9905790e104afdfe480cb55f9d2</anchor>
      <arglist>(const String &amp;path, const String &amp;incwd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>acf7b18825e3ff1d026f00623cade1405</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdirname</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>af0a67c6d6605e957a44ab243f5a72a7d</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>ae1304999c5d8503029949aa458f4ee52</anchor>
      <arglist>(const String &amp;file, const String &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>a8ed528ee7f3f017a61731b4b4973116e</anchor>
      <arglist>(const String &amp;file1, const String &amp;file2)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>cwd</name>
      <anchorfile>namespaceRapicorn_1_1Path.html</anchorfile>
      <anchor>aea9cf3ea2b5c66b186b33206cae40a57</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::CustomPseudoRegistry</name>
    <filename>classRapicorn_1_1Selector_1_1CustomPseudoRegistry.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Selector::SelectorNode</name>
    <filename>structRapicorn_1_1Selector_1_1SelectorNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>Rapicorn::Selector::SelectorChain</name>
    <filename>structRapicorn_1_1Selector_1_1SelectorChain.html</filename>
    <base>std::vector</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::Selob</name>
    <filename>classRapicorn_1_1Selector_1_1Selob.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::Matcher</name>
    <filename>classRapicorn_1_1Selector_1_1Matcher.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobWidget</name>
    <filename>classRapicorn_1_1Selector_1_1SelobWidget.html</filename>
    <base>Rapicorn::Selector::Selob</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobListModel</name>
    <filename>classRapicorn_1_1Selector_1_1SelobListModel.html</filename>
    <base>Rapicorn::Selector::Selob</base>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Selector::SelobAllocator</name>
    <filename>classRapicorn_1_1Selector_1_1SelobAllocator.html</filename>
  </compound>
  <compound kind="class">
    <name>Rapicorn::TEMPLATE_ERROR::InvalidType</name>
    <filename>classRapicorn_1_1TEMPLATE__ERROR_1_1InvalidType.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Test</name>
    <filename>namespaceRapicorn_1_1Test.html</filename>
    <class kind="class">Rapicorn::Test::Timer</class>
    <class kind="class">Rapicorn::Test::RegisterTest</class>
    <member kind="enumeration">
      <type></type>
      <name>ModeType</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_TESTING</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a67739471a5884bf784964a4bc0e117fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_VERBOSE</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a5bb35484f55e6e1a8280847355d465ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_READOUT</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284a2a0197e4f7980deb88be32464917b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MODE_SLOW</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ab7af0cec932f025154167972e5cc1284aea3241e04a9179114779f52bf5045c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_assertion_hook</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a25c63e277b3756eb98743fb18289d6d1</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;hook)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertion_failed</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a2ccd7777505443d4835ba41d53f85f47</anchor>
      <arglist>(const char *file, int line, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>ae66cc92b6e5a6e6e6f37e2b418026684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a7642bd82ff620cb6e5c0eee901dd67da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slow</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a4e5ad6e20c439dd2164ce6d81fe46e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normal</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa73805825ca5d33ab94e194af2dee9ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ui_test</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>aa7e9db4cd771df823418961cccab83b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>acc90ac224230bd1bb08c987a58d7ed8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>random_int64</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a1080738c148da9d9b6d67b61ae9e0390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>random_irange</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a226801be61e9625a59a44c01b2804105</anchor>
      <arglist>(int64_t begin, int64_t end)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_float</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a65aedbada9af63eac2f6034ee0a0cd4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random_frange</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a70761be6347f12b1fba2209c11ca3ee7</anchor>
      <arglist>(double begin, double end)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>stringify_arg</name>
      <anchorfile>namespaceRapicorn_1_1Test.html</anchorfile>
      <anchor>a9c549317ab0c4165e75e358d2a2c8824</anchor>
      <arglist>(const char *a, const char *str_a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Test::Timer</name>
    <filename>classRapicorn_1_1Test_1_1Timer.html</filename>
    <member kind="function">
      <type></type>
      <name>Timer</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>ad12db36d2eb6c1be51e4a78e601d1c5f</anchor>
      <arglist>(double deadline_in_secs=0)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>n_runs</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a97e6f589d8a20943ffc70de894bbe8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>test_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>adb812f13d85617ae33adb26c7351bb1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>min_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a7b7934d6305b675c08ca1e9f43bd70f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>max_elapsed</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>ab3e85e9efbf16dd305aa79925e0c98f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>benchmark</name>
      <anchorfile>classRapicorn_1_1Test_1_1Timer.html</anchorfile>
      <anchor>a745503f7d5e8eaaa3d56bee3050b7843</anchor>
      <arglist>(Callee callee)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Rapicorn::Test::RegisterTest</name>
    <filename>classRapicorn_1_1Test_1_1RegisterTest.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::ThisThread</name>
    <filename>namespaceRapicorn_1_1ThisThread.html</filename>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ab7e33385c69891d6f9b67e2c76ede9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>online_cpus</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>acac4c2a321d197f7eee1a88da8fb7215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a7d462ea80f7db209f4897309d3e0b049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>affinity</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a6dd2d6965877652c5b733b1822d53c75</anchor>
      <arglist>(int cpu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>thread_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>ade8b26f2d65becbcd62a8d224b0f7264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_pid</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a84e55848b3b318dcea5edaef49f84778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yield</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a35a22b1d7e4ca2f51fd786de16f3fc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::thread::id</type>
      <name>get_id</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a9344650ad9ebef82a7ea8771b581d5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_for</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a5ab35ed8e4903c7866b1833044bbdcc2</anchor>
      <arglist>(std::chrono::duration&lt; Rep, Period &gt; sleep_duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep_until</name>
      <anchorfile>namespaceRapicorn_1_1ThisThread.html</anchorfile>
      <anchor>a52bd6072ee842c384186d2a437b5e352</anchor>
      <arglist>(const std::chrono::time_point&lt; Clock, Duration &gt; &amp;sleep_time)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Rapicorn::Unicode</name>
    <filename>namespaceRapicorn_1_1Unicode.html</filename>
  </compound>
  <compound kind="class">
    <name>rope::_RapicornSource</name>
    <filename>classrope_1_1__RapicornSource.html</filename>
  </compound>
  <compound kind="class">
    <name>rope::MainApplication</name>
    <filename>classrope_1_1MainApplication.html</filename>
    <base>Rapicorn::Application</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::__AIDA_Enum__</name>
    <filename>classrope_1_1pyrapicorn_1_1____AIDA__Enum____.html</filename>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseRecord_</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseRecord__.html</filename>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseClass_</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseClass__.html</filename>
    <class kind="class">rope::pyrapicorn::_BaseClass_::__Signal__</class>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::_BaseClass_::__Signal__</name>
    <filename>classrope_1_1pyrapicorn_1_1__BaseClass___1_1____Signal____.html</filename>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AdjustmentSourceType</name>
    <filename>classrope_1_1pyrapicorn_1_1AdjustmentSourceType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AlignType</name>
    <filename>classrope_1_1pyrapicorn_1_1AlignType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::AnchorType</name>
    <filename>classrope_1_1pyrapicorn_1_1AnchorType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ClickType</name>
    <filename>classrope_1_1pyrapicorn_1_1ClickType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ColorType</name>
    <filename>classrope_1_1pyrapicorn_1_1ColorType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ColorSchemeType</name>
    <filename>classrope_1_1pyrapicorn_1_1ColorSchemeType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::DirType</name>
    <filename>classrope_1_1pyrapicorn_1_1DirType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::EllipsizeType</name>
    <filename>classrope_1_1pyrapicorn_1_1EllipsizeType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::FocusDirType</name>
    <filename>classrope_1_1pyrapicorn_1_1FocusDirType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::FrameType</name>
    <filename>classrope_1_1pyrapicorn_1_1FrameType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::LightingType</name>
    <filename>classrope_1_1pyrapicorn_1_1LightingType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SelectionMode</name>
    <filename>classrope_1_1pyrapicorn_1_1SelectionMode.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SizePolicyType</name>
    <filename>classrope_1_1pyrapicorn_1_1SizePolicyType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::StateType</name>
    <filename>classrope_1_1pyrapicorn_1_1StateType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::WindowType</name>
    <filename>classrope_1_1pyrapicorn_1_1WindowType.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Pixbuf</name>
    <filename>classrope_1_1pyrapicorn_1_1Pixbuf.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Object</name>
    <filename>classrope_1_1pyrapicorn_1_1Object.html</filename>
    <base>rope::pyrapicorn::_BaseClass_</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::BindableRelay</name>
    <filename>classrope_1_1pyrapicorn_1_1BindableRelay.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateKind</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateKind.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateSpan</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateSpan.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::UpdateRequest</name>
    <filename>classrope_1_1pyrapicorn_1_1UpdateRequest.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ListModel</name>
    <filename>classrope_1_1pyrapicorn_1_1ListModel.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ListModelRelay</name>
    <filename>classrope_1_1pyrapicorn_1_1ListModelRelay.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Requisition</name>
    <filename>classrope_1_1pyrapicorn_1_1Requisition.html</filename>
    <base>rope::pyrapicorn::_BaseRecord_</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Widget</name>
    <filename>classrope_1_1pyrapicorn_1_1Widget.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Container</name>
    <filename>classrope_1_1pyrapicorn_1_1Container.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Window</name>
    <filename>classrope_1_1pyrapicorn_1_1Window.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Arrangement</name>
    <filename>classrope_1_1pyrapicorn_1_1Arrangement.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Alignment</name>
    <filename>classrope_1_1pyrapicorn_1_1Alignment.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Frame</name>
    <filename>classrope_1_1pyrapicorn_1_1Frame.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::FocusFrame</name>
    <filename>classrope_1_1pyrapicorn_1_1FocusFrame.html</filename>
    <base>Rapicorn::Frame</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Ambience</name>
    <filename>classrope_1_1pyrapicorn_1_1Ambience.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Table</name>
    <filename>classrope_1_1pyrapicorn_1_1Table.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::HBox</name>
    <filename>classrope_1_1pyrapicorn_1_1HBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::VBox</name>
    <filename>classrope_1_1pyrapicorn_1_1VBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ButtonArea</name>
    <filename>classrope_1_1pyrapicorn_1_1ButtonArea.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ScrollArea</name>
    <filename>classrope_1_1pyrapicorn_1_1ScrollArea.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SliderArea</name>
    <filename>classrope_1_1pyrapicorn_1_1SliderArea.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SliderTrough</name>
    <filename>classrope_1_1pyrapicorn_1_1SliderTrough.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::SliderSkid</name>
    <filename>classrope_1_1pyrapicorn_1_1SliderSkid.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Arrow</name>
    <filename>classrope_1_1pyrapicorn_1_1Arrow.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::DotGrid</name>
    <filename>classrope_1_1pyrapicorn_1_1DotGrid.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Drawable</name>
    <filename>classrope_1_1pyrapicorn_1_1Drawable.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Image</name>
    <filename>classrope_1_1pyrapicorn_1_1Image.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::ImageFrame</name>
    <filename>classrope_1_1pyrapicorn_1_1ImageFrame.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Label</name>
    <filename>classrope_1_1pyrapicorn_1_1Label.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TextEditor</name>
    <filename>classrope_1_1pyrapicorn_1_1TextEditor.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::WidgetListRow</name>
    <filename>classrope_1_1pyrapicorn_1_1WidgetListRow.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::WidgetList</name>
    <filename>classrope_1_1pyrapicorn_1_1WidgetList.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::Application</name>
    <filename>classrope_1_1pyrapicorn_1_1Application.html</filename>
    <base>Rapicorn::Object</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TestEnum</name>
    <filename>classrope_1_1pyrapicorn_1_1TestEnum.html</filename>
    <base>rope::pyrapicorn::__AIDA_Enum__</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::IdlTestWidget</name>
    <filename>classrope_1_1pyrapicorn_1_1IdlTestWidget.html</filename>
    <base>Rapicorn::Widget</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TestBox</name>
    <filename>classrope_1_1pyrapicorn_1_1TestBox.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="class">
    <name>rope::pyrapicorn::TestContainer</name>
    <filename>classrope_1_1pyrapicorn_1_1TestContainer.html</filename>
    <base>Rapicorn::Container</base>
  </compound>
  <compound kind="dir">
    <name>aidacc</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/aidacc/</path>
    <filename>dir_acb93fb6af3d2a66d859ea819436aea3.html</filename>
    <file>__init__.py</file>
    <file>AuxData.py</file>
    <file>CxxStub-client.cc</file>
    <file>CxxStub-server.cc</file>
    <file>Decls.py</file>
    <file>ExtractDocs.py</file>
    <file>GenUtils.py</file>
    <file>loop.py</file>
    <file>Parser.py</file>
    <file>plic.py</file>
    <file>PrettyDump.py</file>
    <file>PyStub-glue.cc</file>
    <file>PyStub-glue.py</file>
    <file>PyStub.py</file>
    <file>TmplFiles.py</file>
    <file>TypeMap.py</file>
    <file>yapps2runtime.py</file>
  </compound>
  <compound kind="dir">
    <name>docs</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/</path>
    <filename>dir_49e56c817e5e54854c35e136979f97ca.html</filename>
    <dir>docs/tutorial</dir>
  </compound>
  <compound kind="dir">
    <name>rcore</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rcore/</path>
    <filename>dir_6f68b08381ccca5eec72791fa64236c9.html</filename>
    <file>aida.cc</file>
    <file>aida.hh</file>
    <file>aidacxx.hh</file>
    <file>aidaprops.cc</file>
    <file>aidaprops.hh</file>
    <file>aidaproto.hh</file>
    <file>aidasignal.hh</file>
    <file>aidavariants.hh</file>
    <file>bindable.cc</file>
    <file>bindable.hh</file>
    <file>blobres.cc</file>
    <file>blobres.hh</file>
    <file>configbits.cc</file>
    <file>cpuasm.hh</file>
    <file>cxxaux.hh</file>
    <file>debugtools.cc</file>
    <file>debugtools.hh</file>
    <file>formatter.cc</file>
    <file>formatter.hh</file>
    <file>inifile.cc</file>
    <file>inifile.hh</file>
    <file>inout.cc</file>
    <file>inout.hh</file>
    <file>loop.cc</file>
    <file>loop.hh</file>
    <file>main.cc</file>
    <file>main.hh</file>
    <file>markup.cc</file>
    <file>markup.hh</file>
    <file>math.cc</file>
    <file>math.hh</file>
    <file>memory.cc</file>
    <file>memory.hh</file>
    <file>objects.cc</file>
    <file>objects.hh</file>
    <file>platform.cc</file>
    <file>platform.hh</file>
    <file>quicktimer.cc</file>
    <file>quicktimer.hh</file>
    <file>randomhash.cc</file>
    <file>randomhash.hh</file>
    <file>rapicorn-zintern.cc</file>
    <file>rapicornconfig.h</file>
    <file>rcore.hh</file>
    <file>regex.cc</file>
    <file>regex.hh</file>
    <file>strings.cc</file>
    <file>strings.hh</file>
    <file>testutils.cc</file>
    <file>testutils.hh</file>
    <file>thread.cc</file>
    <file>thread.hh</file>
    <file>threadlib.hh</file>
    <file>unicode.cc</file>
    <file>unicode.hh</file>
    <file>utilities.cc</file>
    <file>utilities.hh</file>
    <file>xmanifold.py</file>
    <file>xmlnode.cc</file>
    <file>xmlnode.hh</file>
  </compound>
  <compound kind="dir">
    <name>rope</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/rope/</path>
    <filename>dir_ceacc34319fce96503d20469fd937c6a.html</filename>
    <file>__init__.py</file>
    <file>py-rope.cc</file>
    <file>py-rope.hh</file>
    <file>pyrapicorn.cc</file>
    <file>pyrapicorn.py</file>
    <file>testpystub.cc</file>
  </compound>
  <compound kind="dir">
    <name>tools</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/tools/</path>
    <filename>dir_4eeb864c4eec08c7d6b9d3b0352cfdde.html</filename>
    <file>rapidrun.cc</file>
  </compound>
  <compound kind="dir">
    <name>docs/tutorial</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/docs/tutorial/</path>
    <filename>dir_e1a497cca65ccf37bc42759cf68ea0a9.html</filename>
    <file>tuthello.py</file>
  </compound>
  <compound kind="dir">
    <name>ui</name>
    <path>/opt/src/rapicorn/docs/doxygen-srctree/ui/</path>
    <filename>dir_1788f8309b1a812dcb800a185471cf6c.html</filename>
    <file>adjustment.cc</file>
    <file>adjustment.hh</file>
    <file>application.cc</file>
    <file>application.hh</file>
    <file>arrangement.cc</file>
    <file>arrangement.hh</file>
    <file>binding.cc</file>
    <file>binding.hh</file>
    <file>blit-mmx.cc</file>
    <file>blitfuncs.cc</file>
    <file>blitfuncs.hh</file>
    <file>buttons.cc</file>
    <file>buttons.hh</file>
    <file>cairocontext.cc</file>
    <file>cairocontext.hh</file>
    <file>clientapi.cc</file>
    <file>clientapi.hh</file>
    <file>clientglue.cc</file>
    <file>clientinsert.hh</file>
    <file>cmdlib.cc</file>
    <file>cmdlib.hh</file>
    <file>commands.cc</file>
    <file>commands.hh</file>
    <file>container.cc</file>
    <file>container.hh</file>
    <file>evaluator.cc</file>
    <file>evaluator.hh</file>
    <file>events.cc</file>
    <file>events.hh</file>
    <file>factory.cc</file>
    <file>factory.hh</file>
    <file>gen-zintern.c</file>
    <file>heritage.cc</file>
    <file>heritage.hh</file>
    <file>image.cc</file>
    <file>image.hh</file>
    <file>imageframe.cc</file>
    <file>imageframe.hh</file>
    <file>interfaces.idl</file>
    <file>internal.hh</file>
    <file>key2ucs4.cc</file>
    <file>keysymbols.hh</file>
    <file>layoutcontainers.cc</file>
    <file>layoutcontainers.hh</file>
    <file>listarea.cc</file>
    <file>listarea.hh</file>
    <file>models.cc</file>
    <file>models.hh</file>
    <file>object.cc</file>
    <file>object.hh</file>
    <file>paintcontainers.cc</file>
    <file>paintcontainers.hh</file>
    <file>painter.cc</file>
    <file>painter.hh</file>
    <file>paintwidgets.cc</file>
    <file>paintwidgets.hh</file>
    <file>pixmap.cc</file>
    <file>pixmap.hh</file>
    <file>primitives.cc</file>
    <file>primitives.hh</file>
    <file>region.cc</file>
    <file>region.hh</file>
    <file>regionimpl.h</file>
    <file>screenwindow-x11.cc</file>
    <file>screenwindow-xaux.cc</file>
    <file>screenwindow.cc</file>
    <file>screenwindow.hh</file>
    <file>scrollwidgets.cc</file>
    <file>scrollwidgets.hh</file>
    <file>selector.cc</file>
    <file>selector.hh</file>
    <file>selob.cc</file>
    <file>selob.hh</file>
    <file>serverapi.cc</file>
    <file>serverapi.hh</file>
    <file>serverglue.cc</file>
    <file>serverinsert.hh</file>
    <file>sinfex.cc</file>
    <file>sinfex.hh</file>
    <file>sizegroup.cc</file>
    <file>sizegroup.hh</file>
    <file>skeletons.cc</file>
    <file>slider.cc</file>
    <file>slider.hh</file>
    <file>stock.cc</file>
    <file>stock.hh</file>
    <file>table.cc</file>
    <file>table.hh</file>
    <file>testwidgets.cc</file>
    <file>testwidgets.hh</file>
    <file>text-editor.cc</file>
    <file>text-editor.hh</file>
    <file>text-pango.cc</file>
    <file>text-pango.hh</file>
    <file>uithread.cc</file>
    <file>uithread.hh</file>
    <file>utilities.cc</file>
    <file>utilities.hh</file>
    <file>viewport.cc</file>
    <file>viewport.hh</file>
    <file>widget.cc</file>
    <file>widget.hh</file>
    <file>window.cc</file>
    <file>window.hh</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
  </compound>
</tagfile>
