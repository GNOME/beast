@DOC-VARIABLE-DEFINITIONS@
name    = BSE-Functions
blurb   = BSE Function Reference
package = BEAST-0.4.1
date    = 13 Jun 2002
image   = bse-functions

@DOC-TITLE@
BSE-Functions

@DOC-HEAD@
BSE-Functions 13 Jun 2002 BEAST-0.4.1

@DOC-NAME@
BSE-Functions - BSE Function Reference

@DOC-SYNOPSIS@
@STRONG bse_item_cross_ref@ (@EMPH owner@, @EMPH ref_item@, @EMPH uncross_func@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 31

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*\ \ \ \ \ \ \ \ 
typeraw = BseItem*        
@DOC-PARAMETER@
owner
@DOC-PARDESC@
reference owner

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*\ \ \ \ \ \ \ \ 
typeraw = BseItem*        
@DOC-PARAMETER@
ref_item
@DOC-PARDESC@
item to be referenced by @EMPH owner@

@DOC-VARIABLE-DEFINITIONS@
type = BseItemUncross\ \ 
typeraw = BseItemUncross  
@DOC-PARAMETER@
uncross_func
@DOC-PARDESC@
notifier to be executed on uncrossing

@DOC-VARIABLE-DEFINITIONS@
retspace = 31


@DOC-DESCRIPTION@
Install a weak cross reference from @EMPH owner@ to @EMPH ref_item@. The two items must have a common ancestor when the cross reference is installed. Once their ancestry changes so that they don't have a common ancestor anymore, @EMPH uncross_func@() is executed.  
@DOC-SYNOPSIS@
@STRONG bse_item_cross_unref@ (@EMPH owner@, @EMPH ref_item@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 19

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*
typeraw = BseItem*
@DOC-PARAMETER@
owner
@DOC-PARDESC@
reference owner

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*
typeraw = BseItem*
@DOC-PARAMETER@
ref_item
@DOC-PARDESC@
item referenced by @EMPH owner@

@DOC-VARIABLE-DEFINITIONS@
retspace = 19


@DOC-DESCRIPTION@
Removes a cross reference previously installed via @STRONG bse_item_cross_ref()@ without executing the associated notifier.  
@DOC-SYNOPSIS@
@STRONG bse_item_uncross@ (@EMPH owner@, @EMPH ref_item@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 19

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*
typeraw = BseItem*
@DOC-PARAMETER@
owner
@DOC-PARDESC@
reference owner

@DOC-VARIABLE-DEFINITIONS@
type = BseItem*
typeraw = BseItem*
@DOC-PARAMETER@
ref_item
@DOC-PARDESC@
item referenced by @EMPH owner@

@DOC-VARIABLE-DEFINITIONS@
retspace = 19


@DOC-DESCRIPTION@
Destroys an existing cross reference previously installed via @STRONG bse_item_cross_ref()@ by executing the associated notifier.  
@DOC-SYNOPSIS@
@STRONG bse_server_get@ ();

@DOC-VARIABLE-DEFINITIONS@
parspace = 11

@DOC-VARIABLE-DEFINITIONS@
retspace = 11

@DOC-RETURNS@
Global BSE Server

@DOC-DESCRIPTION@
Retrive the global BSE server object.  
@DOC-SYNOPSIS@
@STRONG bse_search_path_list_matches@ (@EMPH search_path@, @EMPH cwd@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 26

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
search_path
@DOC-PARDESC@
semicolon seperated search path with '?' and '*' wildcards

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
cwd
@DOC-PARDESC@
assumed current working directoy (to interpret './' in search_path)

@DOC-VARIABLE-DEFINITIONS@
retspace = 26

@DOC-RETURNS@
a singly linked list with newly allocated strings

@DOC-DESCRIPTION@
This function takes a search path with wildcards and lists all existing directories matching components of the search path.  
@DOC-SYNOPSIS@
@STRONG bse_search_path_list_files@ (@EMPH search_path@, @EMPH file_pattern@, @EMPH cwd@, @EMPH file_test@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 27

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
search_path
@DOC-PARDESC@
semicolon seperated search path with '?' and '*' wildcards

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
file_pattern
@DOC-PARDESC@
wildcard pattern for file names

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
cwd
@DOC-PARDESC@
assumed current working directoy (to interpret './' in search_path)

@DOC-VARIABLE-DEFINITIONS@
type = GFileTest\ \ \ 
typeraw = GFileTest   
@DOC-PARAMETER@
file_test
@DOC-PARDESC@
GFileTest file test condition (e.g. G_FILE_TEST_IS_REGULAR) or 0

@DOC-VARIABLE-DEFINITIONS@
retspace = 27

@DOC-RETURNS@
a singly linked list with newly allocated strings

@DOC-DESCRIPTION@
Given a search path with wildcards, list all files matching @EMPH file_pattern@, contained in the directories which the search path matches. Files that do not pass @EMPH file_test@ are not listed.  
@DOC-SYNOPSIS@
@STRONG bse_search_path_list_entries@ (@EMPH search_path@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 26

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
search_path
@DOC-PARDESC@
semicolon seperated search path

@DOC-VARIABLE-DEFINITIONS@
retspace = 26

@DOC-RETURNS@
a singly linked list with newly allocated strings

@DOC-DESCRIPTION@
This function takes a search path and returns a singly linked list containing the seperated path entries.  
@DOC-SYNOPSIS@
@STRONG bse_path_pattern_list_matches@ (@EMPH file_pattern@, @EMPH cwd@, @EMPH file_test@);

@DOC-VARIABLE-DEFINITIONS@
parspace = 27

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
file_pattern
@DOC-PARDESC@
a filename spanning directories containing wildcards '?' or '*'

@DOC-VARIABLE-DEFINITIONS@
type = const\ gchar*
typeraw = const gchar*
@DOC-PARAMETER@
cwd
@DOC-PARDESC@
assumed current working directoy (to interpret relative file_pattern)

@DOC-VARIABLE-DEFINITIONS@
type = GFileTest\ \ \ 
typeraw = GFileTest   
@DOC-PARAMETER@
file_test
@DOC-PARDESC@
GFileTest file test condition (e.g. G_FILE_TEST_IS_REGULAR) or 0

@DOC-VARIABLE-DEFINITIONS@
retspace = 27

@DOC-RETURNS@
a singly linked list with newly allocated strings

@DOC-DESCRIPTION@
This function takes filename with wildcards, transforms it into an absolute pathname using @EMPH cwd@ if necessary and lists all files matching the resulting file name pattern and passing @EMPH file_test@.  
