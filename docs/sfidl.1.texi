\input texinfo
@c %**start of header
@settitle SFIDL - SFI IDL Compiler
@footnotestyle end
@c %**end of header

@include texiutils.texi

@docpackage{BEAST-@value{BST_VERSION}}

@unnumbered NAME
SFIDL - SFI IDL Compiler

@unnumbered SYNOPSIS
	@command{sfidl} [@var{options}] <@var{input.idl}>

@unnumbered DESCRIPTION

	@command{sfidl} generates glue code for @bse objects and
	plugins from interface definition language files.

@unnumbered OPTIONS

@table @option
@item ---help
	Print general usage information.
@item ---help <binding>
	Print usage information for a language binding.
@item ---version
	Print program version.
@c Include Path:
@item -I <@var{DIRECTORY}>
	Add @var{DIRECTORY} to include path.
@item ---print-include-path
	Print include path.
@item ---nostdinc
	Prevents standard include path from being used.
@c Language bindings:
@item ---client-c
	Generate C client language binding.
@item ---client-c
	Generate C core language binding.
@item ---host-c
	Generate C host language binding.
@item ---client-cxx
	Generate C++ client language binding.
@item ---core-cxx
	Generate C++ core language binding.
@item ---plugin
	Generate C++ plugin language binding.
@item ---list-types
	Print all types defined in the idlfile. This option is used only
	for BSE internally to ease transition from C to C++ types.
@c Language binding options:
@item ---header (default)
	Generate header file.
@item ---source
	Generate source file.
@item ---prefix <@var{prefix}>
	C host/client language binding option, sets the prefix for C functions. The prefix
	ensures that no symbol clashes will occur between different programs/libraries
	which are using a binding, so it is important to set it to something unique to your
	application/library.
@item ---init <@var{name}>
	Set the name of the init function for C host/core bindings.
@item ---namespace <@var{namespace}>
	C++ client language binding, sets the namespace to use for the code. The namespace
	ensures that no symbol clashes will occur between different programs/libraries
	which are using a binding, so it is important to set it to something unique to your
	application/library.
@item ---lower (default)
	Select lower case identifiers in the C++ client language binding (create_midi_synth).
@item ---mixed
	Select mixed case identifiers in the C++ client language binding (createMidiSynth).
@end table

@unnumbered SEE ALSO
@uref{beast-man://1/bsesh,BSE Scheme Shell},
@uref{beast-man://3/bse-procs,BSE Procedures},
@uref{beast-man://3/bse-structs,BSE Structures}
@*
@revision{Document Revised:}
@bye
