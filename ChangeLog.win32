Sat Aug 26 23:48:45 2006  Stefan Westerfeld  <stefan@space.twc.de>

	* birnet/birnetcore.h: Provide fake definition for ETXTBSY errno.

	* bse/Makefile.am:
	* bse/bsewin32.h:
	* bse/bsewin32.cc: Implement semaphore based thread notification; using
	pipe()s under windows just doesn't work, as they need an extra thread
	(because they are not really poll()able). But using an extra thread
	would be bad for realtime performace.

	* bse/bseengine.c:
	* bse/bseenginemaster.[hc]:
	* bse/bsesequencer.cc: Use semaphore based thread wakeup instead of
	pipe based thread wakeup.

	* bse/bseplugin.c: Fix plugin search pattern for plugins:
	For windows, we need to use "*.dll", for unix, we need to keep using
	"*.so" as before.

	* bse/Makefile.am: Under windows, it is not possible to use the .o
	files of birnet and sfi, to copy their contents into the bse dll, so
	we simply link against libbirnet.la and libsfi.la, as usual.

	* bse/bseserver.c: Disabled priority code via #if 0..., since this
	needs to be done differently on windows.

	* bse/bseenginemaster.c: Use g_get_current_time() instead of
	gettimeofday().

	* bse/bsepcmdevice-oss.c: Never compile this, since we don't need it
	for win32 (hack).

	* bse/gsldatahandle-mad.c: There is no <sys/mman.h> under windows. #if
	0.

	* bse/bseblockutils.hh: sizeof (wchar_t) == 2 under windows, so we
	can't use wmemset (and so forth).

	* bse/gslfilehash.c: Hack to get it to compile. There is no O_NOCTTY
	on windows.

	* bse/mkcproc.pl: Don't hardcode that perl is in /usr/bin/perl.

	* bse/gslcommon.c: Hacks: remove unexistant includes.

Thu Aug 24 20:24:17 2006  Stefan Westerfeld  <stefan@space.twc.de>

	* sfi/sficomport.c:
	* sfi/sficomwire.c: I didn't port these two yet, thus there is lots of
	code which I just disabled with #if 0... -

	* sfi/sfidl-hostc.cc:
	* sfi/sfidl-corec.cc: Use g_strescape to escape the filenames printed
	as #line directives (otherwise, the compiler will complain about paths
	like "E:\msys\1.0\home\stefan\foo.idl", trying to interpret \m and so
	forth as special characters)

	* sfi/sfidl-corecxx.cc: Escape path names for gdk-pixbuf-csource call,
	so that paths with \ are possible.

	* sfi/sfifilecrawler.c: On windows, both '/' and '\' can be directory
	separators; modified the code so that accepts both, when searching for
	the "next directory separator".

	* sfi/sfifilecrawler.c: Use GDir / g_dir_* functions instead of
	directly relying on dirent.h. That way, things work (before, the beast
	crashed within the filecrawler on startup).

	* sfi/sfistore.c: No symlinks on windows, so defined S_ISLNK(x) to
	false. Added required stdio.h #include.

	* sfi/sfitime.c: Get rid of gettimeofday() and use
	g_get_current_time() instead.

	* sfi/testsfi.c: Add missing fcntl.h #include for windows pipes.

Thu Aug 24 19:45:54 2006  Stefan Westerfeld  <stefan@space.twc.de>

	* birnet/birnetcore.h: Provide fake definitions for those errno's that
	mingw doesn't have, but beast does use.

	* birnet/birnetthread.c: For now, allow beast to use uninitialized
	mutexes and conditions, by lazily intializing them, if they are not
	initialized. Set NO_LAZY_INIT global variable with gdb to disable
	lazy initialization and get G_BREAKPOINT()s instead.
	Replaced gettimeofday() with g_get_current_time(), although it is not
	clear that this was really necessary.
	Some nasty hacks to get it to compile (#if 0'd out very platform
	specific code).

	* birnet/birnetutilsxx.cc: lrand48() is not available.

	* birnet/birnetutils.c: Various types of special files don't exist
	in the filesystem (such as sockets or block devices). lrand48()
	is not available. And sizeof(wchar_t) is 2, not 4.

	* birnet/birnetmsg.c: Syslogging is not available on windows - at
	least the API looks differently.

	* birnet/birnetcpu.c: Disabled the ssesys check on windows (signals
	don't work like that here, so the check doesn't work), and assume that
	sse support is always present on windows.
	However, I don't know if really old versions of windows actually do
	have SSE support, so we might need to check the windows version here.

	* birnet/configure.inc: Allow user to specify zlib specific CFLAGS via
	LIBZ_CFLAGS environment variable.

	* birnet/birnetutils.h: "uint" is not always defined, but only when
	_BIRNET_SOURCE_EXTENSIONS is defined: so I removed it from the function
	prototype.

Thu Aug 24 18:38:14 2006  Stefan Westerfeld  <stefan@space.twc.de>

	* configure.in: The old configure.in generates the following line

	{ (exit 1); exit 1; }; } }
	
	which is a syntax error with the bash version 2.04.0(1) that the msys
	environment provides. I think this might be an automake bug, but I'm
	working around the issue now.

	* configure.in: Use pkg-config to detect ogg/vorbis, which will make
	ogg/vorbis support work even if it is installed in an unusual
	location.
	Likewise, fixed the guile-config check so that it still works if guile
	is installed in an unusual location, by ensuring that the output of
	guile-config --cflags is taken into account when searching for
	headers.

	* WIN32env.sh: Updated load path for guile-1.8.

	* WIN32porting: Mention libgmp-4.2.1, required for guile-1.8.0.

Thu Aug 24 13:08:41 2006  Stefan Westerfeld  <stefan@space.twc.de>

	* WIN32todo: Added file with windows specific todo items, that were
	discovered or created while porting.

	* ChangeLog.win32: Put windows specific changes here, to avoid
	ChangeLog conflicts with beast mainline.

	* WIN32porting: This file contains notes on how to build beast with
	mingw.

	* WIN32env.sh: This sets up necessary environment variables for the
	port on my machine.
