Sun Oct 27 00:54:52 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: do proper code generation for proxy types.

Sun Oct 27 00:33:24 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: parse procedures / classes / signals.

Wed Oct 23 20:39:56 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: generate resize functions for sequences.

Wed Oct 23 20:28:01 2002  Tim Janik  <timj@gtk.org>

	* sfiprimitives.h: provide convenience setters for record fields.

Wed Oct 23 19:25:40 2002  Tim Janik  <timj@gtk.org>

	* sfivalues.[hc]:
	* sfiparams.[hc]: s/param_spec/pspec/ due to stefan's command.
	introduce pspec primitive (serialization lacking).

Mon Oct 21 22:19:04 2002  Tim Janik  <timj@gtk.org>

	* sfiglue.[hc]:
	* sfigluecodec.[hc]:
	* sfigluesignal.c:
	moved glue layer to SFI.

Mon Oct 21 16:16:35 2002  Tim Janik  <timj@gtk.org>

	* sfivcall.[hc]: implement sfi_vcall_void(), a GValue based
	function call marshaller (void returns) with up to 5 arguments.

	* sfimarshal.[hcl]*: get rid of this.

Sun Oct 20 19:06:14 2002  Tim Janik  <timj@gtk.org>

	* sfidl.cc: generate data for boxed types after function definitions.

	* sfidl.cc: generate static GValueTransform functions for boxed<->SfiSeq
	and boxed<->SfiRec, passed on to sfi_boxed_make_sequence() and
	sfi_boxed_make_record().

	* sfiparams.c:
	(param_rec_validate): fix empty field creation.
	(sfi_param_spec_time): fix hints.
	(sfi_param_spec_note): fix hints.

	* sfiserial.c: minor syntax tweaks.

	* sfitypes.[hc]: add support for GValueTransform registration
	for boxed sequence and record types.

	* sfivalues.c (sfi_value_choice2enum): fallback to 0 as enum
	value if no pspec default is given, and we fail completely at
	matching the given choice pattern. we use 0 despite enum class
	contents here, it can later be fixed up through validation.

Fri Oct 18 04:39:00 2002  Tim Janik  <timj@gtk.org>

	* sfiserial.[hc]: removed cruft. use GScanner 64bit int parsing instead
	of identifier hack. implemented sfi_value_store_param() and
	sfi_value_parse_param_rest().

	* sfiparams.c (param_rec_values_cmp): handle type mismatch of field
	pspec and value.

Sat Oct 12 19:30:42 2002  Tim Janik  <timj@gtk.org>

	* glib-extra.[hc]: implemented 64bit-safe GScanner, using
	strtoull() code from glibc.

Sat Oct 12 01:03:24 2002  Tim Janik  <timj@gtk.org>

	* sfinote.[hc]: fixup error handling when parsing notes.

	* sfiparams.[hc]: add cmp/validate implementations for bblock,
	fblock, seq and rec.

	* sfiprimitives.[hc]: support sorting of record fields and use binary
	lookups for field access.

	* sfiserial.[hc]: implement sfi_value_store_typed() and
	sfi_value_parse_typed() for all SFI types.

	* sfitime.[hc]: fixup error handling when parsing date/time.

	* sfitypes.h: add type specific constants.

	* testsfi.c: check serialization facilities.

Thu Oct 10 18:25:40 2002  Tim Janik  <timj@gtk.org>

	* sfidl.cc (parseParamDefHints): stringify unsigned longs with %lu (not
	%ld), stringify doubles with %.20g to preserve precision, handle
	unexpected tokens by simple returning the expected token so we
	actually trigger a scanning error.

Wed Oct  9 13:59:00 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: conceptually changed the way setting up defaults for
	sequences to the way it works for records. you have per-type
	defaults now, thus the syntax has changed to

	typedef sequence {
	  Int ids @= ("ID", "", 0, 0, G_MAXINT, 1, ":readwrite");
	} IDSeq;

	(minor cleanups): make -l work. don't generate code on parse error.
	parse class Foo {}; properly. removed unused code.

Tue Oct  8 19:25:24 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: support registering boxed types for each record and
	each sequence type (-b), make #line number directives optional (-l)

Sun Oct  6 08:04:55 2002  Tim Janik  <timj@gtk.org>

	* sfiprimitives.[hc]: add sfi_seq_clear().
	
	* sfitypes.[hc]: introduce sfi_boxed_make_record(),
	sfi_boxed_make_sequence(), sfi_boxed_get_record_info() and
	sfi_boxed_get_sequence_info() to support boxed<->rec and seq
	transformations.
	 
	* sfiparams.[hc]: remove non-serializable pspecs Object and Enum.
	set hints via sfi_pspec_set_static_hints() in the constructors,
	so we can map these (partially) onto flags.
	provide accessors for pspec hints. cleanup serializable param spec
	categories. renamed a few things for consistency.
	
	* sfivalues.[hc]: same here, remove object and enum values.
	added sfi_value_lstring() and sfi_value_lchoice().

Sat Oct  5 02:07:57 2002  Tim Janik  <timj@gtk.org>

	* glib-extra.[hc]: add type name conversion functions.

	* sfiprimitives.[hc]: add sfi_bblock_new_sized(),
	sfi_fblock_new_sized(), sfi_bblock_resize() and sfi_fblock_resize().

	* sfidl.cc (parse): sync this with GValue types (missed out Proxy).

	* sfidl-namespace.cc (qualify): output warnigns with g_warning().

	* sfidl.cc: remove pointless namespacing in generated code,
	fix sfi_value_*() uses. fix one more hardcoded "element"
	sequence memeber.

Fri Oct  4 13:08:29 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: support optionally specifying the name of the sequence
	elements for the C binding (typedef sequence<Int notes> NoteSeq).

Fri Oct  4 12:41:33 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: generate conversion functions for sequences/records
	from/to SfiSeq*/SfiRec* instead of from/to GValue*.

Fri Oct  4 11:30:07 2002  Stefan Westerfeld <stefan@space.twc.de>

	* sfidl.cc: support namespace substitution (sfidl -n Bse/Bsw)

Fri Oct  4 10:01:53 2002  Tim Janik  <timj@gtk.org>

	* sfiparams.c: pass nick and blurb of "" as NULL into GLib pspecs.
	
	* sfivalues.h: fix SFI_VALUE_HOLDS_NOTE() and SFI_VALUE_HOLDS_TIME().

Fri Oct  4 08:53:29 2002  Tim Janik  <timj@gtk.org>

	* sfinote.c (sfi_note_from_string): default to kammer note
	instead of SFI_NOTE_VOID if the note is unparsable.

	* testsfi.c: new file, executed by make check.
	currently contains small tests for notes and time.

	* sfinote.[hc]: midi note definitions and string conversion
	routines.

	* sfidl.cc: we don't need sfi functions, so include just
	glib-extra.h.

Fri Oct  4 05:13:39 2002  Tim Janik  <timj@gtk.org>

	* sfidl.cc: call sequence elements "element" not
	"content" in the generated pspecs.
	(run): print seq/rec prototypes after structure definitions.
	generate "#line" directive before param_spec creation to make
	compiler warnings somewhat meaningfull.

Fri Oct  4 02:06:15 2002  Tim Janik  <timj@gtk.org>

	* sfidl.cc (createTypeCode): support SfiBBlock.

	* sfiprimitives.[hc]: add SfiBBlock, a block of bytes,
	similar to SfiFBlock.

	* sfivalues.[hc]: implement BBlock values.
	
	* sfiparams.[hc]: implement BBlock pspecs.

Fri Oct  4 01:18:21 2002  Stefan Westerfeld <stefan@space.twc.de>

        * sfi/sfidl.cc: generate proper default initialization for sequences
	when @= is omitted (instead of segfaulting), FBlock support, cleanup:
	add name of arguments/arrays by the caller, not by createTypeCode

Thu Oct  3 23:31:26 2002  Tim Janik  <timj@gtk.org>

	* sfi/: new subdirectory and library. in preparation for SFK (synthesis
	fusion kit), this is the underlying interface library SFI (syntheis
	fusion kit interface).

	* sfidl.cc: .sfidl code generator by Stefan.
	* sfidl-namespace.[hc]*: auxillary files for sfidl.cc.

	* sfiserial.[hc]: preliminary parsing/serialization code.

	* sfiparams.[hc]: pspec implementations, corresponding to the Sfi values.

	* sfivalues.[hc]: wrappers for supported GValue types and implementaitons
	of Sfi specific value types.

	* sfitime.[hc]: some preliminary time handling routines.

	* sfiprimitives.[hc]: fundamental structure implementations, such as
	record, sequence and float sequences (for performance reasons implemented
	as a block of floats).

	* sfitypes.[hc]: miscellaneous type decls and yet-to-clean-up auxillary
	functions.

	* glib-extra.[hc]: GLib compatibility code, add-ons or extensions.
