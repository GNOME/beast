@doxer_dnl      # emacs: -*- mode: texinfo; texinfo-open-quote: "\""; texinfo-close-quote: "\""; -*-
@doxer_set{webmenu} documentation
@include "webmenu.doxi"
@doxer_set{title}	BEAST/BSE Documentation

@heading Synthesis

@beast comes with a basic synthesis tutorial about how
to get synthesis going for new users, the
@uri{@top_webdir/quickstart.html, BEAST/BSE Quick Start Guide}.

Tutorials and documentation about audio synthesis in general is
currently not covered by @beast or this website, we've collected
a number of interesting links to articles on this subject in the
@uri{@top_webdir/synthesis-links.html, Synthesis Links}
section however.


@heading Development with @beastbse

With the development release 0.4.1, @bse added support for the
@uri{http://www.gnu.org, GNU} extension language
@uri{http://www.gnu.org/software/guile/guile.html, Guile} and
since can be scripted in Scheme.

The
@uri{@top_webdir/bse-interface.html, procedure and structure}
documentation as well as the
@uri{@top_webdir/bse-objects.html, BSE Objects} documentation
cover the supported interfaces to access @bse functionality from C or
Scheme.

For C and C++,
@uri{@top_webdir/rdocu-birnet/, BIRNET} and
@uri{@top_webdir/rdocu-sfi/, SFI} provide the necessary
@uri{http://gtk.org, GLib} based framework to deal with
threads, notes, parameters (properties), records, sequences, time stamps
and generic values. Users of BIRNET or SFI will probably also appreciate the
@uri{http://developer.gnome.org/doc/API/, GLib and GObject API Reference}.
